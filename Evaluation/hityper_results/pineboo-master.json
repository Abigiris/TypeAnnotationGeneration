{
    "pineboo-master/cliente_json-rpc.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/pineboo.py": {},
    "pineboo-master/setup.py": {},
    "pineboo-master/deploy_tools/build-pineboo-binaries.py": {
        "run": {
            "name": "run",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "pineboo-master/docs/source/conf.py": {},
    "pineboo-master/pineboolib/__init__.py": {},
    "pineboo-master/pineboolib/application/connections.py": {
        "get_expected_args_num": {
            "name": "get_expected_args_num",
            "location": 44,
            "return": [
                "int"
            ],
            "arguments": {
                "inspected_function": []
            }
        },
        "get_expected_kwargs": {
            "name": "get_expected_kwargs",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "inspected_function": []
            }
        },
        "proxy_fn": {
            "name": "proxy_fn",
            "location": 61,
            "return": [],
            "arguments": {
                "wf": [],
                "wr": [],
                "slot": []
            }
        },
        "slot_done": {
            "name": "slot_done",
            "location": 82,
            "return": [],
            "arguments": {
                "fn": [],
                "signal": [],
                "sender": [],
                "caller": []
            }
        },
        "connect": {
            "name": "connect",
            "location": 132,
            "return": [
                "None",
                "tuple"
            ],
            "arguments": {
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": [],
                "caller": [
                    "None"
                ]
            }
        },
        "disconnect": {
            "name": "disconnect",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": [],
                "caller": [
                    "None"
                ]
            }
        },
        "solve_connection": {
            "name": "solve_connection",
            "location": 197,
            "return": [
                "None",
                "tuple",
                "tuple[None]"
            ],
            "arguments": {
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": []
            }
        },
        "ProxySlot.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "remote_fn": [],
                "receiver": [],
                "slot": []
            }
        },
        "ProxySlot.getProxyFn": {
            "name": "getProxyFn",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "proxy_fn.fn": {
            "name": "fn",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "slot_done.new_fn": {
            "name": "new_fn",
            "location": 87,
            "return": [],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/application/file.py": {
        "File.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": [],
                "filename": [],
                "sha": [
                    "None"
                ],
                "basedir": [
                    "None"
                ],
                "db_name": [
                    "None"
                ]
            }
        },
        "File.path": {
            "name": "path",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/module.py": {
        "Module.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "areaid": [],
                "name": [],
                "description": [],
                "icon": []
            }
        },
        "Module.add_project_file": {
            "name": "add_project_file",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fileobj": []
            }
        },
        "Module.load": {
            "name": "load",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/moduleactions.py": {
        "ModuleActions.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": [],
                "path": [],
                "modulename": []
            }
        },
        "ModuleActions.load": {
            "name": "load",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModuleActions.__contains__": {
            "name": "__contains__",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "ModuleActions.__getitem__": {
            "name": "__getitem__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ModuleActions.__setitem__": {
            "name": "__setitem__",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "action_": []
            }
        }
    },
    "pineboo-master/pineboolib/application/projectmodule.py": {
        "Project.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.app": {
            "name": "app",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.set_app": {
            "name": "set_app",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "Project.conn": {
            "name": "conn",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.DGI": {
            "name": "DGI",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.init_conn": {
            "name": "init_conn",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connection": []
            }
        },
        "Project.init_dgi": {
            "name": "init_dgi",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "DGI": []
            }
        },
        "Project.load_modules": {
            "name": "load_modules",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.setDebugLevel": {
            "name": "setDebugLevel",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "Project.acl": {
            "name": "acl",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.run": {
            "name": "run",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.call": {
            "name": "call",
            "location": 364,
            "return": [
                "None",
                "bool"
            ],
            "arguments": {
                "self": [],
                "function": [],
                "aList": [],
                "object_context": [
                    "None"
                ],
                "showException": [
                    "bool"
                ]
            }
        },
        "Project.parseScript": {
            "name": "parseScript",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scriptname": [],
                "txt_": [
                    "typing.Text"
                ]
            }
        },
        "Project.test": {
            "name": "test",
            "location": 491,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "None"
                ]
            }
        },
        "Project.get_temp_dir": {
            "name": "get_temp_dir",
            "location": 535,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.load_version": {
            "name": "load_version",
            "location": 546,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.message_manager": {
            "name": "message_manager",
            "location": 554,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/proxy.py": {
        "DelayedObjectProxyLoader.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "DelayedObjectProxyLoader.__load": {
            "name": "__load",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DelayedObjectProxyLoader.__getattr__": {
            "name": "__getattr__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/application/qsadictmodules.py": {
        "QSADictModules.qsa_dict_modules": {
            "name": "qsa_dict_modules",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "QSADictModules.from_project": {
            "name": "from_project",
            "location": 36,
            "return": [],
            "arguments": {
                "cls": [],
                "scriptname": []
            }
        },
        "QSADictModules.action_exists": {
            "name": "action_exists",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "scriptname": []
            }
        },
        "QSADictModules.save_action": {
            "name": "save_action",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "scriptname": [],
                "delayed_action": []
            }
        },
        "QSADictModules.save_other": {
            "name": "save_other",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "scriptname": [],
                "other": []
            }
        },
        "QSADictModules.save_action_for_root_module": {
            "name": "save_action_for_root_module",
            "location": 64,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "action": []
            }
        },
        "QSADictModules.save_action_for_mainform": {
            "name": "save_action_for_mainform",
            "location": 79,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "action": []
            }
        },
        "QSADictModules.save_action_for_formrecord": {
            "name": "save_action_for_formrecord",
            "location": 103,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "action": []
            }
        },
        "QSADictModules.clean_all": {
            "name": "clean_all",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "pineboo-master/pineboolib/application/safeqsa.py": {
        "SafeQSA.clean_all": {
            "name": "clean_all",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SafeQSA.save_formrecord": {
            "name": "save_formrecord",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "actionname": [],
                "delayed_action": []
            }
        },
        "SafeQSA.save_mainform": {
            "name": "save_mainform",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "actionname": [],
                "delayed_action": []
            }
        },
        "SafeQSA.save_root_module": {
            "name": "save_root_module",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "actionname": [],
                "delayed_action": []
            }
        },
        "SafeQSA.get_root_module": {
            "name": "get_root_module",
            "location": 41,
            "return": [],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        },
        "SafeQSA.get_mainform": {
            "name": "get_mainform",
            "location": 46,
            "return": [],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        },
        "SafeQSA.get_formrecord": {
            "name": "get_formrecord",
            "location": 51,
            "return": [],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        },
        "SafeQSA.get_any": {
            "name": "get_any",
            "location": 56,
            "return": [],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        },
        "SafeQSA.root_module": {
            "name": "root_module",
            "location": 69,
            "return": [],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        },
        "SafeQSA.mainform": {
            "name": "mainform",
            "location": 74,
            "return": [],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        },
        "SafeQSA.formrecord": {
            "name": "formrecord",
            "location": 79,
            "return": [],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        },
        "SafeQSA.any": {
            "name": "any",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "actionname": []
            }
        }
    },
    "pineboo-master/pineboolib/application/types.py": {
        "Boolean": {
            "name": "Boolean",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": [
                    "bool"
                ]
            }
        },
        "Function": {
            "name": "Function",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "Object": {
            "name": "Object",
            "location": 125,
            "return": [
                "StructMyDict"
            ],
            "arguments": {
                "x": [
                    "None"
                ]
            }
        },
        "String": {
            "name": "String",
            "location": 135,
            "return": [
                "str"
            ],
            "arguments": {
                "value": []
            }
        },
        "QString.mid": {
            "name": "mid",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "length": [
                    "None"
                ]
            }
        },
        "Array.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Array.__iter__": {
            "name": "__iter__",
            "location": 178,
            "return": [
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "Array.__setitem__": {
            "name": "__setitem__",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Array.__getitem__": {
            "name": "__getitem__",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Array.length": {
            "name": "length",
            "location": 218,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Array.__getattr__": {
            "name": "__getattr__",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "Array.__setattr__": {
            "name": "__setattr__",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "val": []
            }
        },
        "Array.__eq__": {
            "name": "__eq__",
            "location": 232,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Array.__repr__": {
            "name": "__repr__",
            "location": 242,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Array.splice": {
            "name": "splice",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Array.__len__": {
            "name": "__len__",
            "location": 291,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Array.__str__": {
            "name": "__str__",
            "location": 295,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Array.append": {
            "name": "append",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Dir.__init__": {
            "name": "__init__",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "None"
                ]
            }
        },
        "Dir.entryList": {
            "name": "entryList",
            "location": 334,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "patron": [],
                "type_": [],
                "sort": []
            }
        },
        "Dir.fileExists": {
            "name": "fileExists",
            "location": 359,
            "return": [],
            "arguments": {
                "file_name": []
            }
        },
        "Dir.cleanDirPath": {
            "name": "cleanDirPath",
            "location": 369,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Dir.convertSeparators": {
            "name": "convertSeparators",
            "location": 380,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "Dir.setCurrent": {
            "name": "setCurrent",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {
                "val": [
                    "None"
                ]
            }
        },
        "Dir.mkdir": {
            "name": "mkdir",
            "location": 397,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "None"
                ]
            }
        },
        "FileBaseClass.exists": {
            "name": "exists",
            "location": 426,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "FileBaseClass.isDir": {
            "name": "isDir",
            "location": 436,
            "return": [],
            "arguments": {
                "dir_name": []
            }
        },
        "FileBaseClass.isFile": {
            "name": "isFile",
            "location": 446,
            "return": [],
            "arguments": {
                "file_name": []
            }
        },
        "File.__init__": {
            "name": "__init__",
            "location": 470,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rutaFichero": [
                    "None"
                ],
                "encode": [
                    "None"
                ]
            }
        },
        "File.open": {
            "name": "open",
            "location": 488,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "File.close": {
            "name": "close",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "File.read": {
            "name": "read",
            "location": 498,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "bytes": [
                    "bool"
                ]
            }
        },
        "File.write": {
            "name": "write",
            "location": 527,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "length": [
                    "int"
                ]
            }
        },
        "File.writeBlock": {
            "name": "writeBlock",
            "location": 550,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bytes_array": []
            }
        },
        "File.getName": {
            "name": "getName",
            "location": 560,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "File.writeLine": {
            "name": "writeLine",
            "location": 572,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "File.readLine": {
            "name": "readLine",
            "location": 587,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "File.readLines": {
            "name": "readLines",
            "location": 607,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "File.readbytes": {
            "name": "readbytes",
            "location": 623,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "File.writebytes": {
            "name": "writebytes",
            "location": 635,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_b": []
            }
        },
        "File.remove": {
            "name": "remove",
            "location": 646,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileStatic.remove": {
            "name": "remove",
            "location": 663,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileStatic.read": {
            "name": "read",
            "location": 673,
            "return": [],
            "arguments": {
                "file_": [],
                "bytes": [
                    "bool"
                ]
            }
        },
        "FileStatic.write": {
            "name": "write",
            "location": 686,
            "return": [
                "None"
            ],
            "arguments": {
                "file_": [],
                "data": [],
                "length": [
                    "int"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/application/xmlaction.py": {
        "XMLAction.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XMLAction.loadRecord": {
            "name": "loadRecord",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": []
            }
        },
        "XMLAction.load": {
            "name": "load",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XMLAction.execMainScript": {
            "name": "execMainScript",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "XMLAction.formRecordWidget": {
            "name": "formRecordWidget",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XMLAction.openDefaultFormRecord": {
            "name": "openDefaultFormRecord",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": [],
                "wait": [
                    "bool"
                ]
            }
        },
        "XMLAction.openDefaultForm": {
            "name": "openDefaultForm",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XMLAction.execDefaultScript": {
            "name": "execDefaultScript",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XMLAction.load_script": {
            "name": "load_script",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "scriptname": [],
                "parent": [
                    "None"
                ]
            }
        },
        "XMLAction.unknownSlot": {
            "name": "unknownSlot",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/__init__.py": {},
    "pineboo-master/pineboolib/application/database/pnbuffer.py": {
        "FieldStruct.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "FieldStruct.parse_value_input": {
            "name": "parse_value_input",
            "location": 73,
            "return": [
                "int",
                "float",
                "None",
                "str",
                "typing.Text",
                "bool"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "FieldStruct.has_changed": {
            "name": "has_changed",
            "location": 150,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "PNBuffer.__init__": {
            "name": "__init__",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": []
            }
        },
        "PNBuffer.count": {
            "name": "count",
            "location": 211,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.clear_buffer": {
            "name": "clear_buffer",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.primeInsert": {
            "name": "primeInsert",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "None"
                ]
            }
        },
        "PNBuffer.primeUpdate": {
            "name": "primeUpdate",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "PNBuffer.primeDelete": {
            "name": "primeDelete",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.row": {
            "name": "row",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.setRow": {
            "name": "setRow",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "l": []
            }
        },
        "PNBuffer.setNull": {
            "name": "setNull",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNBuffer.isGenerated": {
            "name": "isGenerated",
            "location": 305,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNBuffer.setGenerated": {
            "name": "setGenerated",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [],
                "value": []
            }
        },
        "PNBuffer.clearValues": {
            "name": "clearValues",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "PNBuffer.isEmpty": {
            "name": "isEmpty",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.isNull": {
            "name": "isNull",
            "location": 346,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNBuffer.value": {
            "name": "value",
            "location": 368,
            "return": [
                "bool",
                "None",
                "float",
                "str"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNBuffer.setValue": {
            "name": "setValue",
            "location": 408,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "value": [],
                "mark_": [
                    "bool"
                ]
            }
        },
        "PNBuffer.cursor": {
            "name": "cursor",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.modifiedFields": {
            "name": "modifiedFields",
            "location": 447,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.setNoModifiedFields": {
            "name": "setNoModifiedFields",
            "location": 460,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.pK": {
            "name": "pK",
            "location": 467,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.indexField": {
            "name": "indexField",
            "location": 479,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNBuffer.fieldsList": {
            "name": "fieldsList",
            "location": 492,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNBuffer.field": {
            "name": "field",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNBuffer._field": {
            "name": "_field",
            "location": 510,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pnconnection.py": {
        "PNConnection.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_password": [],
                "driverAlias": [],
                "name": [
                    "None"
                ]
            }
        },
        "PNConnection.finish": {
            "name": "finish",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.connectionName": {
            "name": "connectionName",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.useConn": {
            "name": "useConn",
            "location": 110,
            "return": [
                "PNConnection"
            ],
            "arguments": {
                "self": [],
                "name_or_conn": [
                    "typing.Text"
                ]
            }
        },
        "PNConnection.dictDatabases": {
            "name": "dictDatabases",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.removeConn": {
            "name": "removeConn",
            "location": 147,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "typing.Text"
                ]
            }
        },
        "PNConnection.isOpen": {
            "name": "isOpen",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.tables": {
            "name": "tables",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "t_": [
                    "None"
                ]
            }
        },
        "PNConnection.database": {
            "name": "database",
            "location": 171,
            "return": [
                "PNConnection"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "None"
                ]
            }
        },
        "PNConnection.DBName": {
            "name": "DBName",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.driver": {
            "name": "driver",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.session": {
            "name": "session",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.engine": {
            "name": "engine",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.declarative_base": {
            "name": "declarative_base",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.cursor": {
            "name": "cursor",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.conectar": {
            "name": "conectar",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_password": []
            }
        },
        "PNConnection.driverName": {
            "name": "driverName",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.driverAlias": {
            "name": "driverAlias",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.driverNameToDriverAlias": {
            "name": "driverNameToDriverAlias",
            "location": 250,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNConnection.lastError": {
            "name": "lastError",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.host": {
            "name": "host",
            "location": 263,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.port": {
            "name": "port",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.user": {
            "name": "user",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.password": {
            "name": "password",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.seek": {
            "name": "seek",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "offs": [],
                "whence": [
                    "int"
                ]
            }
        },
        "PNConnection.manager": {
            "name": "manager",
            "location": 291,
            "return": [
                "FLManager"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.md5TuplesStateTable": {
            "name": "md5TuplesStateTable",
            "location": 307,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "curname": []
            }
        },
        "PNConnection.setInteractiveGUI": {
            "name": "setInteractiveGUI",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "PNConnection.setQsaExceptions": {
            "name": "setQsaExceptions",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "PNConnection.db": {
            "name": "db",
            "location": 326,
            "return": [
                "PNConnection"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.dbAux": {
            "name": "dbAux",
            "location": 331,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.formatValue": {
            "name": "formatValue",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "t": [],
                "v": [],
                "upper": []
            }
        },
        "PNConnection.formatValueLike": {
            "name": "formatValueLike",
            "location": 345,
            "return": [],
            "arguments": {
                "self": [],
                "t": [],
                "v": [],
                "upper": []
            }
        },
        "PNConnection.canSavePoint": {
            "name": "canSavePoint",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.canTransaction": {
            "name": "canTransaction",
            "location": 355,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.lastActiveCursor": {
            "name": "lastActiveCursor",
            "location": 359,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.doTransaction": {
            "name": "doTransaction",
            "location": 364,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cursor": []
            }
        },
        "PNConnection.transactionLevel": {
            "name": "transactionLevel",
            "location": 429,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.doRollback": {
            "name": "doRollback",
            "location": 434,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cur": []
            }
        },
        "PNConnection.interactiveGUI": {
            "name": "interactiveGUI",
            "location": 547,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.doCommit": {
            "name": "doCommit",
            "location": 552,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cur": [],
                "notify": [
                    "bool"
                ]
            }
        },
        "PNConnection.canDetectLocks": {
            "name": "canDetectLocks",
            "location": 657,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.commit": {
            "name": "commit",
            "location": 665,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.managerModules": {
            "name": "managerModules",
            "location": 673,
            "return": [
                "FLManagerModules"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.canOverPartition": {
            "name": "canOverPartition",
            "location": 687,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.savePoint": {
            "name": "savePoint",
            "location": 694,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "save_point": []
            }
        },
        "PNConnection.releaseSavePoint": {
            "name": "releaseSavePoint",
            "location": 702,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "save_point": []
            }
        },
        "PNConnection.Mr_Proper": {
            "name": "Mr_Proper",
            "location": 709,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.rollbackSavePoint": {
            "name": "rollbackSavePoint",
            "location": 717,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "save_point": []
            }
        },
        "PNConnection.transaction": {
            "name": "transaction",
            "location": 724,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.commitTransaction": {
            "name": "commitTransaction",
            "location": 732,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.rollbackTransaction": {
            "name": "rollbackTransaction",
            "location": 740,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNConnection.nextSerialVal": {
            "name": "nextSerialVal",
            "location": 748,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "table": [],
                "field": []
            }
        },
        "PNConnection.existsTable": {
            "name": "existsTable",
            "location": 756,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNConnection.createTable": {
            "name": "createTable",
            "location": 764,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tmd": []
            }
        },
        "PNConnection.mismatchedTable": {
            "name": "mismatchedTable",
            "location": 790,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tablename": [],
                "tmd": []
            }
        },
        "PNConnection.normalizeValue": {
            "name": "normalizeValue",
            "location": 798,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "PNConnection.queryUpdate": {
            "name": "queryUpdate",
            "location": 809,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "update": [],
                "filter": []
            }
        },
        "PNConnection.execute_query": {
            "name": "execute_query",
            "location": 817,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "PNConnection.alterTable": {
            "name": "alterTable",
            "location": 824,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "mtd_1": [],
                "mtd_2": [],
                "key": [],
                "force": [
                    "bool"
                ]
            }
        },
        "PNConnection.__str__": {
            "name": "__str__",
            "location": 834,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pncursortablemodel.py": {
        "PNCursorTableModel.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": [],
                "parent": []
            }
        },
        "PNCursorTableModel.disable_refresh": {
            "name": "disable_refresh",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "disable": []
            }
        },
        "PNCursorTableModel.sort": {
            "name": "sort",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "column": [],
                "order": []
            }
        },
        "PNCursorTableModel.getSortOrder": {
            "name": "getSortOrder",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.setSortOrder": {
            "name": "setSortOrder",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sort_order": []
            }
        },
        "PNCursorTableModel.data": {
            "name": "data",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "role": []
            }
        },
        "PNCursorTableModel.threadFetch": {
            "name": "threadFetch",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.updateRows": {
            "name": "updateRows",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.fetchMore": {
            "name": "fetchMore",
            "location": 513,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "tablename": [
                    "None"
                ],
                "where_filter": [
                    "None"
                ],
                "size_hint": [
                    "int"
                ]
            }
        },
        "PNCursorTableModel._refresh_field_info": {
            "name": "_refresh_field_info",
            "location": 624,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.refresh": {
            "name": "refresh",
            "location": 688,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.refreshFetch": {
            "name": "refreshFetch",
            "location": 801,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNCursorTableModel.indexUpdateRow": {
            "name": "indexUpdateRow",
            "location": 816,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rownum": []
            }
        },
        "PNCursorTableModel.indexUpdateRowRange": {
            "name": "indexUpdateRowRange",
            "location": 830,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rowrange": []
            }
        },
        "PNCursorTableModel.value": {
            "name": "value",
            "location": 847,
            "return": [
                "None",
                "int"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "fieldName": []
            }
        },
        "PNCursorTableModel.updateValuesDB": {
            "name": "updateValuesDB",
            "location": 887,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "pKValue": [],
                "dict_update": []
            }
        },
        "PNCursorTableModel.setValuesDict": {
            "name": "setValuesDict",
            "location": 966,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "update_dict": []
            }
        },
        "PNCursorTableModel.setValue": {
            "name": "setValue",
            "location": 1004,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "fieldname": [],
                "value": []
            }
        },
        "PNCursorTableModel.Insert": {
            "name": "Insert",
            "location": 1015,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fl_cursor": []
            }
        },
        "PNCursorTableModel.Delete": {
            "name": "Delete",
            "location": 1073,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": []
            }
        },
        "PNCursorTableModel.findPKRow": {
            "name": "findPKRow",
            "location": 1098,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pklist": []
            }
        },
        "PNCursorTableModel.findCKRow": {
            "name": "findCKRow",
            "location": 1135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cklist": []
            }
        },
        "PNCursorTableModel.pK": {
            "name": "pK",
            "location": 1156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.fieldType": {
            "name": "fieldType",
            "location": 1164,
            "return": [],
            "arguments": {
                "self": [],
                "fieldName": []
            }
        },
        "PNCursorTableModel.alias": {
            "name": "alias",
            "location": 1176,
            "return": [],
            "arguments": {
                "self": [],
                "fieldName": []
            }
        },
        "PNCursorTableModel.columnCount": {
            "name": "columnCount",
            "location": 1188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.updateColumnsCount": {
            "name": "updateColumnsCount",
            "location": 1198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.rowCount": {
            "name": "rowCount",
            "location": 1207,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "PNCursorTableModel.size": {
            "name": "size",
            "location": 1215,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.headerData": {
            "name": "headerData",
            "location": 1246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "section": [],
                "orientation": [],
                "role": []
            }
        },
        "PNCursorTableModel.loadColAliases": {
            "name": "loadColAliases",
            "location": 1266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.fieldMetadata": {
            "name": "fieldMetadata",
            "location": 1274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fieldName": []
            }
        },
        "PNCursorTableModel.metadata": {
            "name": "metadata",
            "location": 1286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.driver_sql": {
            "name": "driver_sql",
            "location": 1296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.cursorDB": {
            "name": "cursorDB",
            "location": 1300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.db": {
            "name": "db",
            "location": 1308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorTableModel.set_parent_view": {
            "name": "set_parent_view",
            "location": 1312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent_view": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pngroupbyquery.py": {
        "PNGroupByQuery.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "l": [],
                "f": []
            }
        },
        "PNGroupByQuery.level": {
            "name": "level",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNGroupByQuery.field": {
            "name": "field",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pnparameterquery.py": {
        "PNParameterQuery.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "t": []
            }
        },
        "PNParameterQuery.name": {
            "name": "name",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNParameterQuery.alias": {
            "name": "alias",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNParameterQuery.type": {
            "name": "type",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNParameterQuery.value": {
            "name": "value",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNParameterQuery.setValue": {
            "name": "setValue",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pnsignals.py": {
        "PNSignals.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNSignals.emitTransactionBegin": {
            "name": "emitTransactionBegin",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "PNSignals.emitTransactionEnd": {
            "name": "emitTransactionEnd",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "PNSignals.emitTransactionRollback": {
            "name": "emitTransactionRollback",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pnsqlcursor.py": {
        "PNSqlCursor.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "conn_or_autopopulate": [],
                "connectionName_or_db": [],
                "cR": [],
                "r": [],
                "parent": []
            }
        },
        "PNSqlCursor.init": {
            "name": "init",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "autopopulate": [],
                "cR": [],
                "r": []
            }
        },
        "PNSqlCursor.conn": {
            "name": "conn",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.table": {
            "name": "table",
            "location": 276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setName": {
            "name": "setName",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "autop": []
            }
        },
        "PNSqlCursor.metadata": {
            "name": "metadata",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.currentRegister": {
            "name": "currentRegister",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.modeAccess": {
            "name": "modeAccess",
            "location": 312,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.mainFilter": {
            "name": "mainFilter",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.action": {
            "name": "action",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.actionName": {
            "name": "actionName",
            "location": 343,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setAction": {
            "name": "setAction",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "PNSqlCursor.setMainFilter": {
            "name": "setMainFilter",
            "location": 416,
            "return": [],
            "arguments": {
                "self": [],
                "f": [],
                "doRefresh": []
            }
        },
        "PNSqlCursor.setModeAccess": {
            "name": "setModeAccess",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "PNSqlCursor.connectionName": {
            "name": "connectionName",
            "location": 444,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setAtomicValueBuffer": {
            "name": "setAtomicValueBuffer",
            "location": 452,
            "return": [],
            "arguments": {
                "self": [],
                "fN": [],
                "functionName": []
            }
        },
        "PNSqlCursor.setValueBuffer": {
            "name": "setValueBuffer",
            "location": 534,
            "return": [],
            "arguments": {
                "self": [],
                "fN": [],
                "v": []
            }
        },
        "PNSqlCursor.valueBuffer": {
            "name": "valueBuffer",
            "location": 636,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNSqlCursor.fetchLargeValue": {
            "name": "fetchLargeValue",
            "location": 740,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PNSqlCursor.valueBufferCopy": {
            "name": "valueBufferCopy",
            "location": 744,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNSqlCursor.setEdition": {
            "name": "setEdition",
            "location": 799,
            "return": [],
            "arguments": {
                "self": [],
                "b": [],
                "m": []
            }
        },
        "PNSqlCursor.restoreEditionFlag": {
            "name": "restoreEditionFlag",
            "location": 834,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "PNSqlCursor.setBrowse": {
            "name": "setBrowse",
            "location": 847,
            "return": [],
            "arguments": {
                "self": [],
                "b": [],
                "m": []
            }
        },
        "PNSqlCursor.restoreBrowseFlag": {
            "name": "restoreBrowseFlag",
            "location": 881,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "PNSqlCursor.meta_model": {
            "name": "meta_model",
            "location": 894,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setContext": {
            "name": "setContext",
            "location": 900,
            "return": [],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "PNSqlCursor.context": {
            "name": "context",
            "location": 913,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.fieldDisabled": {
            "name": "fieldDisabled",
            "location": 927,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNSqlCursor.inTransaction": {
            "name": "inTransaction",
            "location": 953,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.transaction": {
            "name": "transaction",
            "location": 965,
            "return": [],
            "arguments": {
                "self": [],
                "lock": []
            }
        },
        "PNSqlCursor.rollback": {
            "name": "rollback",
            "location": 981,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.commit": {
            "name": "commit",
            "location": 993,
            "return": [],
            "arguments": {
                "self": [],
                "notify": []
            }
        },
        "PNSqlCursor.size": {
            "name": "size",
            "location": 1011,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.openFormInMode": {
            "name": "openFormInMode",
            "location": 1015,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "wait": [],
                "cont": []
            }
        },
        "PNSqlCursor.isNull": {
            "name": "isNull",
            "location": 1096,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNSqlCursor.isCopyNull": {
            "name": "isCopyNull",
            "location": 1102,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNSqlCursor.updateBufferCopy": {
            "name": "updateBufferCopy",
            "location": 1108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.isModifiedBuffer": {
            "name": "isModifiedBuffer",
            "location": 1130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setAskForCancelChanges": {
            "name": "setAskForCancelChanges",
            "location": 1148,
            "return": [],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "PNSqlCursor.setActivatedCheckIntegrity": {
            "name": "setActivatedCheckIntegrity",
            "location": 1156,
            "return": [],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "PNSqlCursor.activatedCheckIntegrity": {
            "name": "activatedCheckIntegrity",
            "location": 1164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setActivatedCommitActions": {
            "name": "setActivatedCommitActions",
            "location": 1168,
            "return": [],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "PNSqlCursor.activatedCommitActions": {
            "name": "activatedCommitActions",
            "location": 1176,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setActivatedBufferChanged": {
            "name": "setActivatedBufferChanged",
            "location": 1182,
            "return": [],
            "arguments": {
                "self": [],
                "activated_bufferchanged": []
            }
        },
        "PNSqlCursor.activatedBufferChanged": {
            "name": "activatedBufferChanged",
            "location": 1186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setActivatedBufferCommited": {
            "name": "setActivatedBufferCommited",
            "location": 1190,
            "return": [],
            "arguments": {
                "self": [],
                "activated_buffercommited": []
            }
        },
        "PNSqlCursor.activatedBufferCommited": {
            "name": "activatedBufferCommited",
            "location": 1194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.msgCheckIntegrity": {
            "name": "msgCheckIntegrity",
            "location": 1198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.checkIntegrity": {
            "name": "checkIntegrity",
            "location": 1530,
            "return": [],
            "arguments": {
                "self": [],
                "showError": []
            }
        },
        "PNSqlCursor.cursorRelation": {
            "name": "cursorRelation",
            "location": 1556,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.relation": {
            "name": "relation",
            "location": 1564,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setUnLock": {
            "name": "setUnLock",
            "location": 1572,
            "return": [],
            "arguments": {
                "self": [],
                "fN": [],
                "v": []
            }
        },
        "PNSqlCursor.isLocked": {
            "name": "isLocked",
            "location": 1602,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.buffer": {
            "name": "buffer",
            "location": 1626,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.bufferCopy": {
            "name": "bufferCopy",
            "location": 1634,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.bufferIsNull": {
            "name": "bufferIsNull",
            "location": 1642,
            "return": [],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "PNSqlCursor.bufferSetNull": {
            "name": "bufferSetNull",
            "location": 1655,
            "return": [],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "PNSqlCursor.bufferCopyIsNull": {
            "name": "bufferCopyIsNull",
            "location": 1665,
            "return": [],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "PNSqlCursor.bufferCopySetNull": {
            "name": "bufferCopySetNull",
            "location": 1676,
            "return": [],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "PNSqlCursor.atFrom": {
            "name": "atFrom",
            "location": 1686,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.atFromBinarySearch": {
            "name": "atFromBinarySearch",
            "location": 1707,
            "return": [],
            "arguments": {
                "self": [],
                "fN": [],
                "v": [],
                "orderAsc": []
            }
        },
        "PNSqlCursor.setNull": {
            "name": "setNull",
            "location": 1767,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlCursor.db": {
            "name": "db",
            "location": 1772,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.curName": {
            "name": "curName",
            "location": 1784,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.filterAssoc": {
            "name": "filterAssoc",
            "location": 1801,
            "return": [],
            "arguments": {
                "self": [],
                "fieldName": [],
                "tableMD": []
            }
        },
        "PNSqlCursor.aqWasDeleted": {
            "name": "aqWasDeleted",
            "location": 1860,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.calculateField": {
            "name": "calculateField",
            "location": 1869,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlCursor.model": {
            "name": "model",
            "location": 1877,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.selection": {
            "name": "selection",
            "location": 1885,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.selection_currentRowChanged": {
            "name": "selection_currentRowChanged",
            "location": 1896,
            "return": [],
            "arguments": {
                "self": [],
                "current": [],
                "previous": []
            }
        },
        "PNSqlCursor.selection_pk": {
            "name": "selection_pk",
            "location": 1918,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PNSqlCursor.at": {
            "name": "at",
            "location": 1945,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.isValid": {
            "name": "isValid",
            "location": 1965,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.refresh": {
            "name": "refresh",
            "location": 1979,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNSqlCursor.refreshDelayed": {
            "name": "refreshDelayed",
            "location": 2023,
            "return": [],
            "arguments": {
                "self": [],
                "msec": []
            }
        },
        "PNSqlCursor.primeInsert": {
            "name": "primeInsert",
            "location": 2065,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.primeUpdate": {
            "name": "primeUpdate",
            "location": 2075,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.refreshBuffer": {
            "name": "refreshBuffer",
            "location": 2089,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setEditMode": {
            "name": "setEditMode",
            "location": 2222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.seek": {
            "name": "seek",
            "location": 2239,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "relative": [],
                "emite": []
            }
        },
        "PNSqlCursor.next": {
            "name": "next",
            "location": 2261,
            "return": [],
            "arguments": {
                "self": [],
                "emite": []
            }
        },
        "PNSqlCursor.moveby": {
            "name": "moveby",
            "location": 2279,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "PNSqlCursor.prev": {
            "name": "prev",
            "location": 2294,
            "return": [],
            "arguments": {
                "self": [],
                "emite": []
            }
        },
        "PNSqlCursor.move": {
            "name": "move",
            "location": 2313,
            "return": [],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "PNSqlCursor.first": {
            "name": "first",
            "location": 2346,
            "return": [],
            "arguments": {
                "self": [],
                "emite": []
            }
        },
        "PNSqlCursor.last": {
            "name": "last",
            "location": 2369,
            "return": [],
            "arguments": {
                "self": [],
                "emite": []
            }
        },
        "PNSqlCursor.__del__": {
            "name": "__del__",
            "location": 2389,
            "return": [],
            "arguments": {
                "self": [],
                "invalidate": []
            }
        },
        "PNSqlCursor.select": {
            "name": "select",
            "location": 2426,
            "return": [],
            "arguments": {
                "self": [],
                "_filter": [],
                "sort": []
            }
        },
        "PNSqlCursor.setSort": {
            "name": "setSort",
            "location": 2481,
            "return": [],
            "arguments": {
                "self": [],
                "sortO": []
            }
        },
        "PNSqlCursor.baseFilter": {
            "name": "baseFilter",
            "location": 2493,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.curFilter": {
            "name": "curFilter",
            "location": 2543,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setFilter": {
            "name": "setFilter",
            "location": 2568,
            "return": [],
            "arguments": {
                "self": [],
                "_filter": []
            }
        },
        "PNSqlCursor.insertRecord": {
            "name": "insertRecord",
            "location": 2598,
            "return": [],
            "arguments": {
                "self": [],
                "wait": []
            }
        },
        "PNSqlCursor.editRecord": {
            "name": "editRecord",
            "location": 2609,
            "return": [],
            "arguments": {
                "self": [],
                "wait": []
            }
        },
        "PNSqlCursor.browseRecord": {
            "name": "browseRecord",
            "location": 2631,
            "return": [],
            "arguments": {
                "self": [],
                "wait": []
            }
        },
        "PNSqlCursor.deleteRecord": {
            "name": "deleteRecord",
            "location": 2651,
            "return": [],
            "arguments": {
                "self": [],
                "wait": []
            }
        },
        "PNSqlCursor.copyRecord": {
            "name": "copyRecord",
            "location": 2662,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.chooseRecord": {
            "name": "chooseRecord",
            "location": 2714,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setForwardOnly": {
            "name": "setForwardOnly",
            "location": 2736,
            "return": [],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "PNSqlCursor.commitBuffer": {
            "name": "commitBuffer",
            "location": 2747,
            "return": [],
            "arguments": {
                "self": [],
                "emite": [],
                "checkLocks": []
            }
        },
        "PNSqlCursor.commitBufferCursorRelation": {
            "name": "commitBufferCursorRelation",
            "location": 3058,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.transactionLevel": {
            "name": "transactionLevel",
            "location": 3126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.transactionsOpened": {
            "name": "transactionsOpened",
            "location": 3139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.rollbackOpened": {
            "name": "rollbackOpened",
            "location": 3153,
            "return": [],
            "arguments": {
                "self": [],
                "count": [],
                "msg": []
            }
        },
        "PNSqlCursor.commitOpened": {
            "name": "commitOpened",
            "location": 3177,
            "return": [],
            "arguments": {
                "self": [],
                "count": [],
                "msg": []
            }
        },
        "PNSqlCursor.checkRisksLocks": {
            "name": "checkRisksLocks",
            "location": 3203,
            "return": [],
            "arguments": {
                "self": [],
                "terminate": []
            }
        },
        "PNSqlCursor.setAcTable": {
            "name": "setAcTable",
            "location": 3216,
            "return": [],
            "arguments": {
                "self": [],
                "ac": []
            }
        },
        "PNSqlCursor.setAcosTable": {
            "name": "setAcosTable",
            "location": 3230,
            "return": [],
            "arguments": {
                "self": [],
                "acos": []
            }
        },
        "PNSqlCursor.setAcosCondition": {
            "name": "setAcosCondition",
            "location": 3248,
            "return": [],
            "arguments": {
                "self": [],
                "condName": [],
                "cond": [],
                "condVal": []
            }
        },
        "PNSqlCursor.concurrencyFields": {
            "name": "concurrencyFields",
            "location": 3282,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.changeConnection": {
            "name": "changeConnection",
            "location": 3292,
            "return": [],
            "arguments": {
                "self": [],
                "connName": []
            }
        },
        "PNSqlCursor.populateCursor": {
            "name": "populateCursor",
            "location": 3342,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setNotGenerateds": {
            "name": "setNotGenerateds",
            "location": 3348,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.setExtraFieldAttributes": {
            "name": "setExtraFieldAttributes",
            "location": 3362,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.valueBufferRaw": {
            "name": "valueBufferRaw",
            "location": 3371,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNSqlCursor.sort": {
            "name": "sort",
            "location": 3376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.filter": {
            "name": "filter",
            "location": 3389,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.field": {
            "name": "field",
            "location": 3400,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlCursor.update": {
            "name": "update",
            "location": 3409,
            "return": [],
            "arguments": {
                "self": [],
                "notify": []
            }
        },
        "PNSqlCursor.lastError": {
            "name": "lastError",
            "location": 3472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.__iter__": {
            "name": "__iter__",
            "location": 3481,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.__next__": {
            "name": "__next__",
            "location": 3489,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.primaryKey": {
            "name": "primaryKey",
            "location": 3503,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlCursor.fieldType": {
            "name": "fieldType",
            "location": 3515,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": []
            }
        },
        "PNSqlCursor.__getattr__": {
            "name": "__getattr__",
            "location": 3528,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlCursor.clearPersistentFilter": {
            "name": "clearPersistentFilter",
            "location": 3602,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorPrivate.__init__": {
            "name": "__init__",
            "location": 3792,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorPrivate.__del__": {
            "name": "__del__",
            "location": 3826,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorPrivate.doAcl": {
            "name": "doAcl",
            "location": 3859,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorPrivate.undoAcl": {
            "name": "undoAcl",
            "location": 3914,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorPrivate.needUpdate": {
            "name": "needUpdate",
            "location": 3926,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCursorPrivate.msgBoxWarning": {
            "name": "msgBoxWarning",
            "location": 3939,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "throwException": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pnsqldrivers.py": {
        "PNSqlDrivers.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_DGI": [
                    "None"
                ]
            }
        },
        "PNSqlDrivers.loadDriver": {
            "name": "loadDriver",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "driver_name": []
            }
        },
        "PNSqlDrivers.nameToAlias": {
            "name": "nameToAlias",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlDrivers.aliasToName": {
            "name": "aliasToName",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "alias": []
            }
        },
        "PNSqlDrivers.port": {
            "name": "port",
            "location": 119,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "alias": []
            }
        },
        "PNSqlDrivers.isDesktopFile": {
            "name": "isDesktopFile",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "alias": []
            }
        },
        "PNSqlDrivers.aliasList": {
            "name": "aliasList",
            "location": 145,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNSqlDrivers.driver": {
            "name": "driver",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlDrivers.driverName": {
            "name": "driverName",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlDrivers.__getattr__": {
            "name": "__getattr__",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "attr_name": []
            }
        },
        "PNSqlDrivers.defaultDriverName": {
            "name": "defaultDriverName",
            "location": 190,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pnsqlquery.py": {
        "PNSqlQueryPrivate.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlQuery.__init__": {
            "name": "__init__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "cx": [],
                "connection_name": []
            }
        },
        "PNSqlQuery.__del__": {
            "name": "__del__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.sql_inspector": {
            "name": "sql_inspector",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.exec_": {
            "name": "exec_",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "sql": []
            }
        },
        "PNSqlQuery.addParameter": {
            "name": "addParameter",
            "location": 213,
            "return": [],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "PNSqlQuery.addGroup": {
            "name": "addGroup",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "g": []
            }
        },
        "PNSqlQuery.setName": {
            "name": "setName",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlQuery.name": {
            "name": "name",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.select": {
            "name": "select",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.from_": {
            "name": "from_",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.where": {
            "name": "where",
            "location": 269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.orderBy": {
            "name": "orderBy",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.setSelect": {
            "name": "setSelect",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "select": [],
                "sep": []
            }
        },
        "PNSqlQuery.setFrom": {
            "name": "setFrom",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "PNSqlQuery.setWhere": {
            "name": "setWhere",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "PNSqlQuery.setOrderBy": {
            "name": "setOrderBy",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "PNSqlQuery.sql": {
            "name": "sql",
            "location": 393,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.parameterDict": {
            "name": "parameterDict",
            "location": 455,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.groupDict": {
            "name": "groupDict",
            "location": 463,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.fieldList": {
            "name": "fieldList",
            "location": 472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.setGroupDict": {
            "name": "setGroupDict",
            "location": 484,
            "return": [],
            "arguments": {
                "self": [],
                "gd": []
            }
        },
        "PNSqlQuery.setParameterDict": {
            "name": "setParameterDict",
            "location": 502,
            "return": [],
            "arguments": {
                "self": [],
                "pd": []
            }
        },
        "PNSqlQuery.showDebug": {
            "name": "showDebug",
            "location": 521,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery._value_quick": {
            "name": "_value_quick",
            "location": 570,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "raw": []
            }
        },
        "PNSqlQuery._value_std": {
            "name": "_value_std",
            "location": 585,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "raw": []
            }
        },
        "PNSqlQuery.value": {
            "name": "value",
            "location": 609,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "raw": []
            }
        },
        "PNSqlQuery.isNull": {
            "name": "isNull",
            "location": 629,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNSqlQuery.posToFieldName": {
            "name": "posToFieldName",
            "location": 647,
            "return": [],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "PNSqlQuery.fieldNameToPos": {
            "name": "fieldNameToPos",
            "location": 665,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlQuery.tablesList": {
            "name": "tablesList",
            "location": 684,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.setTablesList": {
            "name": "setTablesList",
            "location": 696,
            "return": [],
            "arguments": {
                "self": [],
                "tl": []
            }
        },
        "PNSqlQuery.setValueParam": {
            "name": "setValueParam",
            "location": 716,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "v": []
            }
        },
        "PNSqlQuery.valueParam": {
            "name": "valueParam",
            "location": 726,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNSqlQuery.size": {
            "name": "size",
            "location": 738,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.fieldMetaDataList": {
            "name": "fieldMetaDataList",
            "location": 746,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.db": {
            "name": "db",
            "location": 774,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.isValid": {
            "name": "isValid",
            "location": 782,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.isActive": {
            "name": "isActive",
            "location": 791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.at": {
            "name": "at",
            "location": 799,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.lastQuery": {
            "name": "lastQuery",
            "location": 808,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.numRowsAffected": {
            "name": "numRowsAffected",
            "location": 817,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.lastError": {
            "name": "lastError",
            "location": 826,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.isSelect": {
            "name": "isSelect",
            "location": 831,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.QSqlQuery_size": {
            "name": "QSqlQuery_size",
            "location": 836,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.driver": {
            "name": "driver",
            "location": 841,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.result": {
            "name": "result",
            "location": 846,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.isForwardOnly": {
            "name": "isForwardOnly",
            "location": 851,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.setForwardOnly": {
            "name": "setForwardOnly",
            "location": 855,
            "return": [],
            "arguments": {
                "self": [],
                "forward": []
            }
        },
        "PNSqlQuery.QSqlQuery_value": {
            "name": "QSqlQuery_value",
            "location": 861,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "PNSqlQuery.seek": {
            "name": "seek",
            "location": 865,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "relative": []
            }
        },
        "PNSqlQuery.next": {
            "name": "next",
            "location": 889,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.prev": {
            "name": "prev",
            "location": 906,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.first": {
            "name": "first",
            "location": 923,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.last": {
            "name": "last",
            "location": 939,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.prepare": {
            "name": "prepare",
            "location": 956,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "PNSqlQuery.bindValue": {
            "name": "bindValue",
            "location": 961,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.addBindValue": {
            "name": "addBindValue",
            "location": 966,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.boundValue": {
            "name": "boundValue",
            "location": 971,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.boundValues": {
            "name": "boundValues",
            "location": 976,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlQuery.executedQuery": {
            "name": "executedQuery",
            "location": 981,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/pnsqlsavepoint.py": {
        "OpInfo.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpInfo.opInfo": {
            "name": "opInfo",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pK": [],
                "o": [],
                "b": [],
                "a": [],
                "s": [],
                "f": [],
                "n": [],
                "c": []
            }
        },
        "OpInfo.setAutoDelete": {
            "name": "setAutoDelete",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "PNSqlSavePoint.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_id": [
                    "None"
                ]
            }
        },
        "PNSqlSavePoint.__del__": {
            "name": "__del__",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNSqlSavePoint.setId": {
            "name": "setId",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_": []
            }
        },
        "PNSqlSavePoint.id": {
            "name": "id",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNSqlSavePoint.clear": {
            "name": "clear",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNSqlSavePoint.undo": {
            "name": "undo",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNSqlSavePoint.saveInsert": {
            "name": "saveInsert",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "primaryKey": [],
                "buffer": [],
                "cursor": []
            }
        },
        "PNSqlSavePoint.saveEdit": {
            "name": "saveEdit",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "primaryKey": [],
                "buffer": [],
                "cursor": []
            }
        },
        "PNSqlSavePoint.saveDel": {
            "name": "saveDel",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "primaryKey": [],
                "buffer": [],
                "cursor": []
            }
        },
        "PNSqlSavePoint.undoInsert": {
            "name": "undoInsert",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "opInf": []
            }
        },
        "PNSqlSavePoint.undoEdit": {
            "name": "undoEdit",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "opInf": []
            }
        },
        "PNSqlSavePoint.undoDel": {
            "name": "undoDel",
            "location": 315,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "opInf": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/utils.py": {
        "nextCounter": {
            "name": "nextCounter",
            "location": 16,
            "return": [],
            "arguments": {
                "name_or_series": [],
                "cursor_or_name": [],
                "cursor_": [
                    "None"
                ]
            }
        },
        "_nextCounter_2": {
            "name": "_nextCounter_2",
            "location": 72,
            "return": [
                "None",
                "str",
                "int"
            ],
            "arguments": {
                "name": [],
                "cursor_": []
            }
        },
        "_nextCounter_3": {
            "name": "_nextCounter_3",
            "location": 135,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "serie": [],
                "name": [],
                "cursor_": []
            }
        },
        "sqlSelect": {
            "name": "sqlSelect",
            "location": 197,
            "return": [
                "bool"
            ],
            "arguments": {
                "f": [],
                "s": [],
                "w": [],
                "tL": [
                    "None"
                ],
                "size": [
                    "int"
                ],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "quickSqlSelect": {
            "name": "quickSqlSelect",
            "location": 243,
            "return": [
                "bool"
            ],
            "arguments": {
                "f": [],
                "s": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "sqlInsert": {
            "name": "sqlInsert",
            "location": 261,
            "return": [
                "bool"
            ],
            "arguments": {
                "t": [],
                "fL_": [],
                "vL_": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "sqlUpdate": {
            "name": "sqlUpdate",
            "location": 298,
            "return": [
                "bool"
            ],
            "arguments": {
                "t": [],
                "fL": [],
                "vL": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "sqlDelete": {
            "name": "sqlDelete",
            "location": 335,
            "return": [
                "bool"
            ],
            "arguments": {
                "t": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "quickSqlDelete": {
            "name": "quickSqlDelete",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "t": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "execSql": {
            "name": "execSql",
            "location": 369,
            "return": [
                "bool"
            ],
            "arguments": {
                "sql": [],
                "connName": [
                    "typing.Text"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/application/database/__init__.py": {},
    "pineboo-master/pineboolib/application/database/tests/test_pnsqlcursor.py": {
        "TestInsertData.setUpClass": {
            "name": "setUpClass",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestInsertData.test_basic": {
            "name": "test_basic",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEditData.setUpClass": {
            "name": "setUpClass",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestEditData.test_basic": {
            "name": "test_basic",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDeleteData.setUpClass": {
            "name": "setUpClass",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestDeleteData.test_basic": {
            "name": "test_basic",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMove.setUpClass": {
            "name": "setUpClass",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestMove.test_basic": {
            "name": "test_basic",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBuffer.setUpClass": {
            "name": "setUpClass",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestBuffer.test_basic": {
            "name": "test_basic",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestValues.setUpClass": {
            "name": "setUpClass",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestValues.test_basic": {
            "name": "test_basic",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/database/tests/__init__.py": {},
    "pineboo-master/pineboolib/application/metadata/pncompoundkeymetadata.py": {
        "PNCompoundKeyMetaData.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "None"
                ]
            }
        },
        "PNCompoundKeyMetaData.addFieldMD": {
            "name": "addFieldMD",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "PNCompoundKeyMetaData.hasField": {
            "name": "hasField",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "field_name": []
            }
        },
        "PNCompoundKeyMetaData.fieldList": {
            "name": "fieldList",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNCompoundKeyMetaData.copy": {
            "name": "copy",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/pnfieldmetadata.py": {
        "PNFieldMetaData.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.inicializeFLFieldMetaData": {
            "name": "inicializeFLFieldMetaData",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PNFieldMetaData.inicializeNewFLFieldMetaData": {
            "name": "inicializeNewFLFieldMetaData",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "aN": [],
                "isPrimaryKey": [],
                "t": [],
                "length_": [
                    "int"
                ],
                "c": [
                    "bool"
                ],
                "v": [
                    "bool"
                ],
                "ed": [
                    "bool"
                ],
                "pI": [
                    "int"
                ],
                "pD": [
                    "int"
                ],
                "iNX": [
                    "bool"
                ],
                "uNI": [
                    "bool"
                ],
                "coun": [
                    "bool"
                ],
                "defValue": [
                    "None"
                ],
                "oT": [
                    "bool"
                ],
                "rX": [
                    "None"
                ],
                "vG": [
                    "bool"
                ],
                "gen": [
                    "bool"
                ],
                "iCK": [
                    "bool"
                ]
            }
        },
        "PNFieldMetaData.name": {
            "name": "name",
            "location": 140,
            "return": [
                "typing.Text",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setName": {
            "name": "setName",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNFieldMetaData.alias": {
            "name": "alias",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.allowNull": {
            "name": "allowNull",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.isPrimaryKey": {
            "name": "isPrimaryKey",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setIsPrimaryKey": {
            "name": "setIsPrimaryKey",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "PNFieldMetaData.isCompoundKey": {
            "name": "isCompoundKey",
            "location": 195,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.type": {
            "name": "type",
            "location": 206,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.length": {
            "name": "length",
            "location": 215,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.calculated": {
            "name": "calculated",
            "location": 224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setCalculated": {
            "name": "setCalculated",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "PNFieldMetaData.editable": {
            "name": "editable",
            "location": 241,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setEditable": {
            "name": "setEditable",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ed": []
            }
        },
        "PNFieldMetaData.visible": {
            "name": "visible",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.visibleGrid": {
            "name": "visibleGrid",
            "location": 265,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.generated": {
            "name": "generated",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setGenerated": {
            "name": "setGenerated",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PNFieldMetaData.setVisible": {
            "name": "setVisible",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "PNFieldMetaData.setVisibleGrid": {
            "name": "setVisibleGrid",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "PNFieldMetaData.partInteger": {
            "name": "partInteger",
            "location": 301,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.partDecimal": {
            "name": "partDecimal",
            "location": 310,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.isCounter": {
            "name": "isCounter",
            "location": 319,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.isIndex": {
            "name": "isIndex",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.isUnique": {
            "name": "isUnique",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.addRelationMD": {
            "name": "addRelationMD",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "PNFieldMetaData.relationList": {
            "name": "relationList",
            "location": 378,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.relationM1": {
            "name": "relationM1",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setAssociatedField": {
            "name": "setAssociatedField",
            "location": 399,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r_or_name": [],
                "f": []
            }
        },
        "PNFieldMetaData.associatedField": {
            "name": "associatedField",
            "location": 414,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.associatedFieldFilterTo": {
            "name": "associatedFieldFilterTo",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.associatedFieldName": {
            "name": "associatedFieldName",
            "location": 433,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.defaultValue": {
            "name": "defaultValue",
            "location": 442,
            "return": [
                "bool",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.outTransaction": {
            "name": "outTransaction",
            "location": 457,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.regExpValidator": {
            "name": "regExpValidator",
            "location": 465,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.optionsList": {
            "name": "optionsList",
            "location": 474,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.getIndexOptionsList": {
            "name": "getIndexOptionsList",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNFieldMetaData.setOptionsList": {
            "name": "setOptionsList",
            "location": 493,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ol": []
            }
        },
        "PNFieldMetaData.isCheck": {
            "name": "isCheck",
            "location": 512,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.hasOptionsList": {
            "name": "hasOptionsList",
            "location": 522,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.fullyCalculated": {
            "name": "fullyCalculated",
            "location": 529,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setFullyCalculated": {
            "name": "setFullyCalculated",
            "location": 536,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "PNFieldMetaData.trimed": {
            "name": "trimed",
            "location": 545,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setTrimed": {
            "name": "setTrimed",
            "location": 550,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "PNFieldMetaData.setMetadata": {
            "name": "setMetadata",
            "location": 555,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mtd": []
            }
        },
        "PNFieldMetaData.metadata": {
            "name": "metadata",
            "location": 561,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.flDecodeType": {
            "name": "flDecodeType",
            "location": 568,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "fltype_": [
                    "None"
                ]
            }
        },
        "PNFieldMetaData.searchOptions": {
            "name": "searchOptions",
            "location": 596,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaData.setSearchOptions": {
            "name": "setSearchOptions",
            "location": 605,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ol": []
            }
        },
        "PNFieldMetaData.copy": {
            "name": "copy",
            "location": 616,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PNFieldMetaData.formatAssignValue": {
            "name": "formatAssignValue",
            "location": 664,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "fieldName": [],
                "value": [],
                "upper": []
            }
        },
        "PNFieldMetaData.__len__": {
            "name": "__len__",
            "location": 702,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaDataPrivate.__init__": {
            "name": "__init__",
            "location": 912,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaDataPrivate.inicializeEmpty": {
            "name": "inicializeEmpty",
            "location": 925,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaDataPrivate.inicialize": {
            "name": "inicialize",
            "location": 934,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "aN": [],
                "iPK": [],
                "t": [],
                "length_": [],
                "c": [],
                "v": [],
                "ed": [],
                "pI": [],
                "pD": [],
                "iNX": [],
                "uNI": [],
                "coun": [],
                "defValue": [],
                "oT": [],
                "rX": [],
                "vG": [],
                "gen": [],
                "iCK": []
            }
        },
        "PNFieldMetaDataPrivate.__del_": {
            "name": "__del_",
            "location": 1049,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNFieldMetaDataPrivate.clearRelationList": {
            "name": "clearRelationList",
            "location": 1057,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/pnrelationmetadata.py": {
        "PNRelationMetaData.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.inicializeNewFLRelationMetaData": {
            "name": "inicializeNewFLRelationMetaData",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fT": [],
                "fF": [],
                "rC": [],
                "dC": [
                    "bool"
                ],
                "uC": [
                    "bool"
                ],
                "cI": [
                    "bool"
                ]
            }
        },
        "PNRelationMetaData.inicializeFromFLRelationMetaData": {
            "name": "inicializeFromFLRelationMetaData",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PNRelationMetaData.setField": {
            "name": "setField",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNRelationMetaData.field": {
            "name": "field",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.foreignTable": {
            "name": "foreignTable",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.foreignField": {
            "name": "foreignField",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.cardinality": {
            "name": "cardinality",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.deleteCascade": {
            "name": "deleteCascade",
            "location": 106,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.updateCascade": {
            "name": "updateCascade",
            "location": 116,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.checkIn": {
            "name": "checkIn",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaData.copy": {
            "name": "copy",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PNRelationMetaDataPrivate.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNRelationMetaDataPrivate.inicializeNewFLRelationMetaDataPrivate": {
            "name": "inicializeNewFLRelationMetaDataPrivate",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fT": [],
                "fF": [],
                "rC": [],
                "dC": [],
                "uC": [],
                "cI": []
            }
        },
        "PNRelationMetaDataPrivate.inicializeFLRelationMetaDataPrivate": {
            "name": "inicializeFLRelationMetaDataPrivate",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/pntablemetadata.py": {
        "PNTableMetaData.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [
                    "None"
                ],
                "q": [
                    "None"
                ]
            }
        },
        "PNTableMetaData.inicializeFLTableMetaData": {
            "name": "inicializeFLTableMetaData",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PNTableMetaData.inicializeNewFLTableMetaData": {
            "name": "inicializeNewFLTableMetaData",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "q": [
                    "None"
                ]
            }
        },
        "PNTableMetaData.inicializeFLTableMetaDataP": {
            "name": "inicializeFLTableMetaDataP",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNTableMetaData.name": {
            "name": "name",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.setName": {
            "name": "setName",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNTableMetaData.setAlias": {
            "name": "setAlias",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "PNTableMetaData.setQuery": {
            "name": "setQuery",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "PNTableMetaData.alias": {
            "name": "alias",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.query": {
            "name": "query",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.isQuery": {
            "name": "isQuery",
            "location": 165,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.addFieldMD": {
            "name": "addFieldMD",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "PNTableMetaData.removeFieldMD": {
            "name": "removeFieldMD",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.setCompoundKey": {
            "name": "setCompoundKey",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cK": []
            }
        },
        "PNTableMetaData.primaryKey": {
            "name": "primaryKey",
            "location": 216,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "prefixTable": [
                    "bool"
                ]
            }
        },
        "PNTableMetaData.fieldNameToAlias": {
            "name": "fieldNameToAlias",
            "location": 234,
            "return": [],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldAliasToName": {
            "name": "fieldAliasToName",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aN": []
            }
        },
        "PNTableMetaData.fieldType": {
            "name": "fieldType",
            "location": 266,
            "return": [
                "None",
                "int"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldIsPrimaryKey": {
            "name": "fieldIsPrimaryKey",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldIsIndex": {
            "name": "fieldIsIndex",
            "location": 328,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "field_name": []
            }
        },
        "PNTableMetaData.fieldIsCounter": {
            "name": "fieldIsCounter",
            "location": 341,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldAllowNull": {
            "name": "fieldAllowNull",
            "location": 364,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldIsUnique": {
            "name": "fieldIsUnique",
            "location": 380,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldTableM1": {
            "name": "fieldTableM1",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldForeignFieldM1": {
            "name": "fieldForeignFieldM1",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.relation": {
            "name": "relation",
            "location": 445,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": [],
                "fFN": [],
                "fTN": []
            }
        },
        "PNTableMetaData.fieldLength": {
            "name": "fieldLength",
            "location": 486,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldPartInteger": {
            "name": "fieldPartInteger",
            "location": 503,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldPartDecimal": {
            "name": "fieldPartDecimal",
            "location": 520,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldCalculated": {
            "name": "fieldCalculated",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldVisible": {
            "name": "fieldVisible",
            "location": 553,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.field": {
            "name": "field",
            "location": 569,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldList": {
            "name": "fieldList",
            "location": 586,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.fieldListArray": {
            "name": "fieldListArray",
            "location": 595,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "prefix_table": [
                    "bool"
                ]
            }
        },
        "PNTableMetaData.indexPos": {
            "name": "indexPos",
            "location": 615,
            "return": [],
            "arguments": {
                "self": [],
                "field_name": []
            }
        },
        "PNTableMetaData.fieldListOfCompoundKey": {
            "name": "fieldListOfCompoundKey",
            "location": 625,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "PNTableMetaData.fieldNames": {
            "name": "fieldNames",
            "location": 640,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.fieldNamesUnlock": {
            "name": "fieldNamesUnlock",
            "location": 652,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.concurWarn": {
            "name": "concurWarn",
            "location": 661,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.setConcurWarn": {
            "name": "setConcurWarn",
            "location": 670,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": [
                    "bool"
                ]
            }
        },
        "PNTableMetaData.detectLocks": {
            "name": "detectLocks",
            "location": 680,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.setDetectLocks": {
            "name": "setDetectLocks",
            "location": 689,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": [
                    "bool"
                ]
            }
        },
        "PNTableMetaData.FTSFunction": {
            "name": "FTSFunction",
            "location": 698,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.setFTSFunction": {
            "name": "setFTSFunction",
            "location": 707,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ftsfun": []
            }
        },
        "PNTableMetaData.inCache": {
            "name": "inCache",
            "location": 716,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaData.setInCache": {
            "name": "setInCache",
            "location": 725,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": [
                    "bool"
                ]
            }
        },
        "PNTableMetaData.copy": {
            "name": "copy",
            "location": 734,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PNTableMetaData.indexFieldObject": {
            "name": "indexFieldObject",
            "location": 746,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "PNTableMetaDataPrivate.__init__": {
            "name": "__init__",
            "location": 840,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "None"
                ],
                "a": [
                    "None"
                ],
                "q": [
                    "None"
                ]
            }
        },
        "PNTableMetaDataPrivate.inicializeFLTableMetaDataPrivate": {
            "name": "inicializeFLTableMetaDataPrivate",
            "location": 863,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PNTableMetaDataPrivate.inicializeNewFLTableMetaDataPrivate": {
            "name": "inicializeNewFLTableMetaDataPrivate",
            "location": 871,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "q": [
                    "None"
                ]
            }
        },
        "PNTableMetaDataPrivate.inicializeFLTableMetaDataPrivateS": {
            "name": "inicializeFLTableMetaDataPrivateS",
            "location": 889,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PNTableMetaDataPrivate.addFieldName": {
            "name": "addFieldName",
            "location": 899,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNTableMetaDataPrivate.removeFieldName": {
            "name": "removeFieldName",
            "location": 908,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "PNTableMetaDataPrivate.formatAlias": {
            "name": "formatAlias",
            "location": 918,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "None"
                ]
            }
        },
        "PNTableMetaDataPrivate.clearFieldList": {
            "name": "clearFieldList",
            "location": 941,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/__init__.py": {},
    "pineboo-master/pineboolib/application/metadata/tests/test_pncompoundkeymetadata.py": {
        "TestPNCompoundKeyFromTableMetaData.setUpClass": {
            "name": "setUpClass",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestPNCompoundKeyFromTableMetaData.test_basic": {
            "name": "test_basic",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGeneratePNCompoundKey.setUpClass": {
            "name": "setUpClass",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestGeneratePNCompoundKey.test_basic": {
            "name": "test_basic",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/tests/test_pnfieldmetadata.py": {
        "TestStringField.setUpClass": {
            "name": "setUpClass",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestStringField.test_basic": {
            "name": "test_basic",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCopyField.setUpClass": {
            "name": "setUpClass",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestCopyField.test_basic": {
            "name": "test_basic",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUintField.setUpClass": {
            "name": "setUpClass",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestUintField.test_basic": {
            "name": "test_basic",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStringListField.setUpClass": {
            "name": "setUpClass",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestStringListField.test_basic": {
            "name": "test_basic",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPixmapField.setUpClass": {
            "name": "setUpClass",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestPixmapField.test_basic": {
            "name": "test_basic",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUnlockField.setUpClass": {
            "name": "setUpClass",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestUnlockField.test_basic": {
            "name": "test_basic",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBoolField.setUpClass": {
            "name": "setUpClass",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestBoolField.test_basic": {
            "name": "test_basic",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDateField.setUpClass": {
            "name": "setUpClass",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestDateField.test_basic": {
            "name": "test_basic",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTimeField.setUpClass": {
            "name": "setUpClass",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestTimeField.test_basic": {
            "name": "test_basic",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDoubleField.setUpClass": {
            "name": "setUpClass",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestDoubleField.test_basic": {
            "name": "test_basic",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOptionsListField.setUpClass": {
            "name": "setUpClass",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestOptionsListField.test_basic": {
            "name": "test_basic",
            "location": 395,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/tests/test_pnrelationmetadata.py": {
        "TestPNRelationMetaData.setUpClass": {
            "name": "setUpClass",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestPNRelationMetaData.test_basic": {
            "name": "test_basic",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreatePNRelationMetaData.test_basic": {
            "name": "test_basic",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/tests/test_pntablemetadata.py": {
        "TestCreatePNTableMetaData.test_basic": {
            "name": "test_basic",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCopyPNTableMetaData.setUpClass": {
            "name": "setUpClass",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestCopyPNTableMetaData.test_basic": {
            "name": "test_basic",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPNTableMetaData.setUpClass": {
            "name": "setUpClass",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestPNTableMetaData.test_basic": {
            "name": "test_basic",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRelationsPNTableMetaData.setUpClass": {
            "name": "setUpClass",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestRelationsPNTableMetaData.test_basic": {
            "name": "test_basic",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCompoundKeyPNTableMetaData.setUpClass": {
            "name": "setUpClass",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestCompoundKeyPNTableMetaData.test_basic": {
            "name": "test_basic",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/metadata/tests/__init__.py": {},
    "pineboo-master/pineboolib/application/packager/aqunpacker.py": {
        "AQ_STRERROR": {
            "name": "AQ_STRERROR",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "val": []
            }
        },
        "AQUnpacker.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "in_": []
            }
        },
        "AQUnpacker.errorMessages": {
            "name": "errorMessages",
            "location": 38,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQUnpacker.getText": {
            "name": "getText",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQUnpacker.getBinary": {
            "name": "getBinary",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQUnpacker.getVersion": {
            "name": "getVersion",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQUnpacker.jump": {
            "name": "jump",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/packager/__init__.py": {},
    "pineboo-master/pineboolib/application/parsers/__init__.py": {},
    "pineboo-master/pineboolib/application/parsers/kugarparser/kut2fpdf.py": {
        "Kut2FPDF.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kut2FPDF.parse": {
            "name": "parse",
            "location": 83,
            "return": [
                "None",
                "FPDF"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "kut": [],
                "data": [],
                "report": [
                    "None"
                ],
                "flags": [
                    "list"
                ]
            }
        },
        "Kut2FPDF.get_file_name": {
            "name": "get_file_name",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kut2FPDF.topSection": {
            "name": "topSection",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Kut2FPDF.setTopSection": {
            "name": "setTopSection",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Kut2FPDF.newPage": {
            "name": "newPage",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_level": [],
                "add_on_header": [
                    "bool"
                ]
            }
        },
        "Kut2FPDF.processDetails": {
            "name": "processDetails",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keep_page": [
                    "None"
                ]
            }
        },
        "Kut2FPDF.processData": {
            "name": "processData",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "section_name": [],
                "data": [],
                "data_level": []
            }
        },
        "Kut2FPDF.processSection": {
            "name": "processSection",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "level": [
                    "int"
                ]
            }
        },
        "Kut2FPDF.processXML": {
            "name": "processXML",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xml": [],
                "data": [
                    "None"
                ]
            }
        },
        "Kut2FPDF.fix_extra_size": {
            "name": "fix_extra_size",
            "location": 456,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kut2FPDF.processLine": {
            "name": "processLine",
            "location": 462,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xml": [],
                "fix_height": [
                    "bool"
                ]
            }
        },
        "Kut2FPDF.calculateLeftStart": {
            "name": "calculateLeftStart",
            "location": 504,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Kut2FPDF.calculateWidth": {
            "name": "calculateWidth",
            "location": 513,
            "return": [],
            "arguments": {
                "self": [],
                "width": [],
                "pos_x": [],
                "fix_ratio": [
                    "bool"
                ]
            }
        },
        "Kut2FPDF.processText": {
            "name": "processText",
            "location": 534,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xml": [],
                "data_row": [],
                "fix_height": [
                    "bool"
                ],
                "section_name": [
                    "None"
                ]
            }
        },
        "Kut2FPDF.drawText": {
            "name": "drawText",
            "location": 661,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "W": [],
                "H": [],
                "xml": [],
                "txt": []
            }
        },
        "Kut2FPDF.split_text": {
            "name": "split_text",
            "location": 877,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "texto": [],
                "limit_w": []
            }
        },
        "Kut2FPDF.get_color": {
            "name": "get_color",
            "location": 898,
            "return": [
                "list[int]"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Kut2FPDF.drawRect": {
            "name": "drawRect",
            "location": 915,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "W": [],
                "H": [],
                "xml": []
            }
        },
        "Kut2FPDF.write_cords_debug": {
            "name": "write_cords_debug",
            "location": 964,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "w": [],
                "h": [],
                "ox": [],
                "ow": []
            }
        },
        "Kut2FPDF.write_debug": {
            "name": "write_debug",
            "location": 983,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "text": [],
                "h": [],
                "color": [
                    "None"
                ]
            }
        },
        "Kut2FPDF.draw_image": {
            "name": "draw_image",
            "location": 1012,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "W": [],
                "H": [],
                "xml": [],
                "file_name": []
            }
        },
        "Kut2FPDF.draw_barcode": {
            "name": "draw_barcode",
            "location": 1037,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "W": [],
                "H": [],
                "xml": [],
                "text": []
            }
        },
        "Kut2FPDF.setPageFormat": {
            "name": "setPageFormat",
            "location": 1064,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xml": []
            }
        },
        "Kut2FPDF.draw_margins": {
            "name": "draw_margins",
            "location": 1091,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kut2FPDF.draw_debug_line": {
            "name": "draw_debug_line",
            "location": 1112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "X1": [],
                "Y1": [],
                "X2": [],
                "Y2": [],
                "title": [
                    "None"
                ],
                "color": [
                    "typing.Text"
                ]
            }
        },
        "Kut2FPDF.number_pages": {
            "name": "number_pages",
            "location": 1130,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kut2FPDF.reset_page_no": {
            "name": "reset_page_no",
            "location": 1134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/kugarparser/parsertools.py": {
        "KParserTools.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "KParserTools.loadKut": {
            "name": "loadKut",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "KParserTools.ratio_correction_h": {
            "name": "ratio_correction_h",
            "location": 41,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "KParserTools.ratio_correction_w": {
            "name": "ratio_correction_w",
            "location": 50,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "KParserTools.convertToNode": {
            "name": "convertToNode",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "KParserTools.getHeight": {
            "name": "getHeight",
            "location": 80,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "xml": []
            }
        },
        "KParserTools.getSpecial": {
            "name": "getSpecial",
            "location": 89,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "page_num": [
                    "None"
                ]
            }
        },
        "KParserTools.calculated": {
            "name": "calculated",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [],
                "data_type": [],
                "p": [
                    "None"
                ],
                "data": [
                    "None"
                ]
            }
        },
        "KParserTools.parseKey": {
            "name": "parseKey",
            "location": 153,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "ref_key": [
                    "None"
                ]
            }
        },
        "KParserTools.converPageSize": {
            "name": "converPageSize",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "size": [],
                "orientation": [],
                "custom": [
                    "None"
                ]
            }
        },
        "KParserTools.find_font": {
            "name": "find_font",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "font_name": [],
                "font_style": []
            }
        },
        "KParserTools.calculate_sum": {
            "name": "calculate_sum",
            "location": 379,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "field_name": [],
                "line": [],
                "xml_list": [],
                "level": []
            }
        },
        "KParserTools.restore_text": {
            "name": "restore_text",
            "location": 395,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/kugarparser/__init__.py": {},
    "pineboo-master/pineboolib/application/parsers/mtdparser/pnmtdparser.py": {
        "mtd_parse": {
            "name": "mtd_parse",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "table_name": []
            }
        },
        "generate_model": {
            "name": "generate_model",
            "location": 66,
            "return": [],
            "arguments": {
                "dest_file": [],
                "mtd_table": []
            }
        },
        "field_type": {
            "name": "field_type",
            "location": 213,
            "return": [],
            "arguments": {
                "field": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/mtdparser/pnormmodelsfactory.py": {
        "base_model": {
            "name": "base_model",
            "location": 58,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "load_model": {
            "name": "load_model",
            "location": 89,
            "return": [],
            "arguments": {
                "nombre": []
            }
        },
        "empty_base": {
            "name": "empty_base",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "load_models": {
            "name": "load_models",
            "location": 154,
            "return": [],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/application/parsers/mtdparser/__init__.py": {},
    "pineboo-master/pineboolib/application/parsers/qsaparser/flex.py": {
        "t_NEWLINE": {
            "name": "t_NEWLINE",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "t_ID": {
            "name": "t_ID",
            "location": 192,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "t_comment": {
            "name": "t_comment",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "t_DOCSTRINGOPEN": {
            "name": "t_DOCSTRINGOPEN",
            "location": 223,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "t_preprocessor": {
            "name": "t_preprocessor",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "t_error": {
            "name": "t_error",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/qsaparser/flscriptparse.py": {
        "cleanNoPython": {
            "name": "cleanNoPython",
            "location": 56,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "cleanNoPythonNever": {
            "name": "cleanNoPythonNever",
            "location": 61,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "cnvrt": {
            "name": "cnvrt",
            "location": 68,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "p_parse": {
            "name": "p_parse",
            "location": 79,
            "return": [],
            "arguments": {
                "token": []
            }
        },
        "p_error": {
            "name": "p_error",
            "location": 147,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "print_context": {
            "name": "print_context",
            "location": 576,
            "return": [],
            "arguments": {
                "token": []
            }
        },
        "my_tokenfunc": {
            "name": "my_tokenfunc",
            "location": 593,
            "return": [],
            "arguments": {}
        },
        "print_tokentree": {
            "name": "print_tokentree",
            "location": 601,
            "return": [],
            "arguments": {
                "token": [],
                "depth": []
            }
        },
        "calctree": {
            "name": "calctree",
            "location": 621,
            "return": [],
            "arguments": {
                "obj": [],
                "depth": [],
                "num": [],
                "otype": [],
                "alias_mode": []
            }
        },
        "printtree": {
            "name": "printtree",
            "location": 714,
            "return": [],
            "arguments": {
                "tree": [],
                "depth": [],
                "otype": [],
                "mode": [],
                "output": []
            }
        },
        "parse": {
            "name": "parse",
            "location": 830,
            "return": [],
            "arguments": {
                "data": [],
                "clean": []
            }
        },
        "main": {
            "name": "main",
            "location": 860,
            "return": [],
            "arguments": {}
        },
        "main.do_it": {
            "name": "do_it",
            "location": 903,
            "return": [],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/application/parsers/qsaparser/postparse.py": {
        "parse_for": {
            "name": "parse_for",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "parse": {
            "name": "parse",
            "location": 38,
            "return": [],
            "arguments": {
                "tagname": [],
                "treedata": []
            }
        },
        "getxmltagname": {
            "name": "getxmltagname",
            "location": 49,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "tagname": []
            }
        },
        "create_xml": {
            "name": "create_xml",
            "location": 658,
            "return": [
                "None"
            ],
            "arguments": {
                "tagname": []
            }
        },
        "parse_unknown": {
            "name": "parse_unknown",
            "location": 673,
            "return": [],
            "arguments": {
                "tagname": [],
                "treedata": []
            }
        },
        "post_parse": {
            "name": "post_parse",
            "location": 692,
            "return": [],
            "arguments": {
                "treedata": []
            }
        },
        "parseArgs": {
            "name": "parseArgs",
            "location": 732,
            "return": [
                "tuple"
            ],
            "arguments": {
                "argv": []
            }
        },
        "main": {
            "name": "main",
            "location": 813,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pythonify": {
            "name": "pythonify",
            "location": 824,
            "return": [
                "None"
            ],
            "arguments": {
                "filelist": []
            }
        },
        "pythonify2": {
            "name": "pythonify2",
            "location": 833,
            "return": [],
            "arguments": {
                "filename": [],
                "known_refs": [
                    "dict"
                ]
            }
        },
        "pythonify_string": {
            "name": "pythonify_string",
            "location": 850,
            "return": [],
            "arguments": {
                "qs_code": [],
                "known_refs": [
                    "dict"
                ]
            }
        },
        "execute": {
            "name": "execute",
            "location": 866,
            "return": [
                "None"
            ],
            "arguments": {
                "options": [],
                "args": []
            }
        },
        "parse_for.decorator": {
            "name": "decorator",
            "location": 30,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "TagObjectBase.can_process_tag": {
            "name": "can_process_tag",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "tagname": []
            }
        },
        "TagObjectBase.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tagname": []
            }
        },
        "TagObjectBase.add_subelem": {
            "name": "add_subelem",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "subelem": []
            }
        },
        "TagObjectBase.add_value": {
            "name": "add_value",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "value": []
            }
        },
        "TagObjectBase.add_other": {
            "name": "add_other",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "data": []
            }
        },
        "TagObjectFactory.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "dct": []
            }
        },
        "TagObject.tagname": {
            "name": "tagname",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "tagname": []
            }
        },
        "TagObject.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tagname": []
            }
        },
        "TagObject.adopt_children": {
            "name": "adopt_children",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "subelem": []
            }
        },
        "TagObject.omit_subelem": {
            "name": "omit_subelem",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "subelem": []
            }
        },
        "TagObject.is_in": {
            "name": "is_in",
            "location": 142,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "listobj": []
            }
        },
        "TagObject.get": {
            "name": "get",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listobj": [],
                "default": [
                    "None"
                ]
            }
        },
        "TagObject.add_subelem": {
            "name": "add_subelem",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "argn": [],
                "subelem": []
            }
        },
        "TagObject.add_value": {
            "name": "add_value",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "value": []
            }
        },
        "TagObject.add_other": {
            "name": "add_other",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "data": []
            }
        },
        "TagObject.polish": {
            "name": "polish",
            "location": 184,
            "return": [
                "TagObject"
            ],
            "arguments": {
                "self": []
            }
        },
        "TypedObject.add_other": {
            "name": "add_other",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "value": []
            }
        },
        "Identifier.polish": {
            "name": "polish",
            "location": 237,
            "return": [
                "Identifier"
            ],
            "arguments": {
                "self": []
            }
        },
        "VariableType.polish": {
            "name": "polish",
            "location": 256,
            "return": [
                "VariableType"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExtendsType.polish": {
            "name": "polish",
            "location": 268,
            "return": [
                "ExtendsType"
            ],
            "arguments": {
                "self": []
            }
        },
        "Function.add_vartype": {
            "name": "add_vartype",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "subelem": []
            }
        },
        "Variable.add_vartype": {
            "name": "add_vartype",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "subelem": []
            }
        },
        "DeclarationBlock.add_other": {
            "name": "add_other",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "value": []
            }
        },
        "DeclarationBlock.polish": {
            "name": "polish",
            "location": 322,
            "return": [
                "DeclarationBlock"
            ],
            "arguments": {
                "self": []
            }
        },
        "Class.add_exttype": {
            "name": "add_exttype",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "subelem": []
            }
        },
        "Constant.add_value": {
            "name": "add_value",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "value": []
            }
        },
        "InlineUpdate.add_other": {
            "name": "add_other",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argn": [],
                "vtype": [],
                "value": []
            }
        },
        "Else.polish": {
            "name": "polish",
            "location": 475,
            "return": [
                "Else"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExpressionContainer.polish": {
            "name": "polish",
            "location": 501,
            "return": [
                "ExpressionContainer"
            ],
            "arguments": {
                "self": []
            }
        },
        "Unknown.tagname": {
            "name": "tagname",
            "location": 645,
            "return": [],
            "arguments": {
                "self": [],
                "tagname": []
            }
        },
        "Unknown.can_process_tag": {
            "name": "can_process_tag",
            "location": 650,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tagname": []
            }
        },
        "Module.__init__": {
            "name": "__init__",
            "location": 702,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "path": []
            }
        },
        "Module.loadModule": {
            "name": "loadModule",
            "location": 707,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/qsaparser/pyconvert.py": {
        "_touch": {
            "name": "_touch",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": []
            }
        },
        "_touch_dir": {
            "name": "_touch_dir",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": []
            }
        },
        "get_modules": {
            "name": "get_modules",
            "location": 52,
            "return": [
                "list"
            ],
            "arguments": {
                "frompath": [
                    "typing.Text"
                ]
            }
        },
        "mod_xml_parse": {
            "name": "mod_xml_parse",
            "location": 69,
            "return": [
                "None",
                "dict[, Action]"
            ],
            "arguments": {
                "path": [],
                "modname": []
            }
        },
        "pythonify_item": {
            "name": "pythonify_item",
            "location": 105,
            "return": [
                "bool"
            ],
            "arguments": {
                "o": []
            }
        },
        "main": {
            "name": "main",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "PythonifyItem.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [],
                "dst": [],
                "n": [],
                "len": [],
                "known": []
            }
        },
        "main.get_fname_pair": {
            "name": "get_fname_pair",
            "location": 202,
            "return": [
                "tuple"
            ],
            "arguments": {
                "fname": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/qsaparser/pytnyzer.py": {
        "id_translate": {
            "name": "id_translate",
            "location": 234,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": [],
                "qsa_exclude": [
                    "None"
                ],
                "transform": []
            }
        },
        "astparser_for": {
            "name": "astparser_for",
            "location": 2301,
            "return": [],
            "arguments": {
                "elem": []
            }
        },
        "parse_ast": {
            "name": "parse_ast",
            "location": 2309,
            "return": [
                "Source"
            ],
            "arguments": {
                "elem": [],
                "parent": [
                    "None"
                ]
            }
        },
        "file_template": {
            "name": "file_template",
            "location": 2336,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "ast": [],
                "import_refs": [
                    "dict"
                ]
            }
        },
        "expression_template": {
            "name": "expression_template",
            "location": 2390,
            "return": [
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "ast": [],
                "import_refs": [
                    "dict"
                ]
            }
        },
        "write_python_file": {
            "name": "write_python_file",
            "location": 2399,
            "return": [
                "None"
            ],
            "arguments": {
                "fobj": [],
                "ast": [],
                "import_refs": [
                    "dict"
                ]
            }
        },
        "pythonize": {
            "name": "pythonize",
            "location": 2466,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [],
                "destfilename": [],
                "debugname": []
            }
        },
        "pythonize2": {
            "name": "pythonize2",
            "location": 2495,
            "return": [],
            "arguments": {
                "root_ast": [],
                "known_refs": [
                    "dict"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 2523,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ASTPythonBase.__init__": {
            "name": "__init__",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "ASTPythonBase.can_process_tag": {
            "name": "can_process_tag",
            "location": 365,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tagname": []
            }
        },
        "ASTPythonBase.generate": {
            "name": "generate",
            "location": 369,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "break_mode": [
                    "bool"
                ],
                "include_pass": [
                    "bool"
                ]
            }
        },
        "ASTPythonBase.local_var": {
            "name": "local_var",
            "location": 375,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "is_member": [
                    "bool"
                ]
            }
        },
        "ASTPythonBase.other_var": {
            "name": "other_var",
            "location": 384,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ASTPythonFactory.__init__": {
            "name": "__init__",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "bases": [],
                "dct": []
            }
        },
        "ASTPythonFactory.register_type": {
            "name": "register_type",
            "location": 400,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ASTPython.can_process_tag": {
            "name": "can_process_tag",
            "location": 418,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tagname": []
            }
        },
        "ASTPython.__init__": {
            "name": "__init__",
            "location": 422,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "ASTPython.generate": {
            "name": "generate",
            "location": 430,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ASTPython.debug": {
            "name": "debug",
            "location": 434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "ASTPython._generate": {
            "name": "_generate",
            "location": 454,
            "return": [
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.__init__": {
            "name": "__init__",
            "location": 475,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "Source.generate": {
            "name": "generate",
            "location": 481,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": [],
                "break_mode": [
                    "bool"
                ],
                "include_pass": [
                    "bool"
                ],
                "declare_identifiers": [
                    "None"
                ]
            }
        },
        "Class.generate": {
            "name": "generate",
            "location": 532,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "Function.generate": {
            "name": "generate",
            "location": 553,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]",
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionCall.generate": {
            "name": "generate",
            "location": 627,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "is_member": [
                    "bool"
                ]
            }
        },
        "If.generate": {
            "name": "generate",
            "location": 704,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator"
            ],
            "arguments": {
                "self": [],
                "break_mode": [
                    "bool"
                ]
            }
        },
        "TryCatch.generate": {
            "name": "generate",
            "location": 776,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": []
            }
        },
        "While.generate": {
            "name": "generate",
            "location": 814,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoWhile.generate": {
            "name": "generate",
            "location": 845,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "For.generate": {
            "name": "generate",
            "location": 883,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "ForIn.generate": {
            "name": "generate",
            "location": 968,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "OldSwitch.generate": {
            "name": "generate",
            "location": 1000,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Switch.generate": {
            "name": "generate",
            "location": 1087,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "With.generate": {
            "name": "generate",
            "location": 1196,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[typing.Optional[tuple[typing.Text]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Variable.generate": {
            "name": "generate",
            "location": 1253,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": [],
                "force_value": [
                    "bool"
                ]
            }
        },
        "InstructionUpdate.generate": {
            "name": "generate",
            "location": 1311,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "InlineUpdate.generate": {
            "name": "generate",
            "location": 1348,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "plusplus_as_instruction": [
                    "bool"
                ]
            }
        },
        "InstructionCall.generate": {
            "name": "generate",
            "location": 1385,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Instruction.generate": {
            "name": "generate",
            "location": 1409,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "InstructionFlow.generate": {
            "name": "generate",
            "location": 1435,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]",
                "None"
            ],
            "arguments": {
                "self": [],
                "break_mode": [
                    "bool"
                ]
            }
        },
        "Member.generate": {
            "name": "generate",
            "location": 1478,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArrayMember.generate": {
            "name": "generate",
            "location": 1752,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Value.generate": {
            "name": "generate",
            "location": 1784,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple[None]]"
            ],
            "arguments": {
                "self": [],
                "isolate": [
                    "bool"
                ]
            }
        },
        "Expression.generate": {
            "name": "generate",
            "location": 1806,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": [],
                "isolate": [
                    "bool"
                ]
            }
        },
        "Parentheses.generate": {
            "name": "generate",
            "location": 1836,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Delete.generate": {
            "name": "generate",
            "location": 1850,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpTernary.generate": {
            "name": "generate",
            "location": 1869,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": [],
                "isolate": [
                    "bool"
                ]
            }
        },
        "DictObject.generate": {
            "name": "generate",
            "location": 1902,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": [],
                "isolate": [
                    "bool"
                ]
            }
        },
        "DictElem.generate": {
            "name": "generate",
            "location": 1929,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "isolate": [
                    "bool"
                ]
            }
        },
        "OpUnary.generate": {
            "name": "generate",
            "location": 1946,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": [],
                "isolate": [
                    "bool"
                ]
            }
        },
        "New.generate": {
            "name": "generate",
            "location": 1971,
            "return": [
                "typing.Generator[tuple]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Constant.generate": {
            "name": "generate",
            "location": 2002,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Identifier.generate": {
            "name": "generate",
            "location": 2071,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "is_member": [
                    "bool"
                ]
            }
        },
        "regex.generate": {
            "name": "generate",
            "location": 2084,
            "return": [
                "None",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "regexbody.generate": {
            "name": "generate",
            "location": 2102,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "regexchar.generate": {
            "name": "generate",
            "location": 2115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OpUpdate.generate": {
            "name": "generate",
            "location": 2171,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Compare.generate": {
            "name": "generate",
            "location": 2194,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpMath.generate": {
            "name": "generate",
            "location": 2229,
            "return": [
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeclarationBlock.generate": {
            "name": "generate",
            "location": 2260,
            "return": [
                "typing.Generator[tuple]",
                "typing.Generator[tuple[typing.Text]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Unknown.can_process_tag": {
            "name": "can_process_tag",
            "location": 2293,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tagname": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/qsaparser/__init__.py": {},
    "pineboo-master/pineboolib/application/parsers/qsaparser/tests/test_parser.py": {
        "TestParser.setUpClass": {
            "name": "setUpClass",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestParser.test_basic": {
            "name": "test_basic",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParser.test_file_class": {
            "name": "test_file_class",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/qsaparser/tests/__init__.py": {},
    "pineboo-master/pineboolib/application/parsers/qt3uiparser/dgi_qt3ui.py": {
        "loadUi": {
            "name": "loadUi",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "form_path": [],
                "widget": [],
                "parent": [
                    "None"
                ]
            }
        },
        "loadToolBar": {
            "name": "loadToolBar",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "xml": [],
                "widget": []
            }
        },
        "loadMenuBar": {
            "name": "loadMenuBar",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "xml": [],
                "widget": []
            }
        },
        "process_item": {
            "name": "process_item",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "xml": [],
                "parent": [],
                "widget": []
            }
        },
        "load_action": {
            "name": "load_action",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "action": [],
                "widget": []
            }
        },
        "loadAction": {
            "name": "loadAction",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "action": [],
                "widget": []
            }
        },
        "createWidget": {
            "name": "createWidget",
            "location": 454,
            "return": [],
            "arguments": {
                "classname": [],
                "parent": [
                    "None"
                ]
            }
        },
        "loadIcon": {
            "name": "loadIcon",
            "location": 931,
            "return": [
                "None"
            ],
            "arguments": {
                "xml": []
            }
        },
        "loadVariant": {
            "name": "loadVariant",
            "location": 958,
            "return": [],
            "arguments": {
                "xml": [],
                "widget": [
                    "None"
                ]
            }
        },
        "loadProperty": {
            "name": "loadProperty",
            "location": 965,
            "return": [
                "tuple"
            ],
            "arguments": {
                "xml": []
            }
        },
        "u": {
            "name": "u",
            "location": 972,
            "return": [
                "str"
            ],
            "arguments": {
                "x": []
            }
        },
        "b": {
            "name": "b",
            "location": 979,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": []
            }
        },
        "_loadVariant": {
            "name": "_loadVariant",
            "location": 998,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "variant": [],
                "widget": [
                    "None"
                ]
            }
        },
        "WidgetResolver.get_widget_class": {
            "name": "get_widget_class",
            "location": 419,
            "return": [
                "None"
            ],
            "arguments": {
                "resolver_cls": [],
                "classname": []
            }
        },
        "loadWidget.__init__": {
            "name": "__init__",
            "location": 484,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xml": [],
                "widget": [],
                "parent": [
                    "None"
                ],
                "origWidget": [
                    "None"
                ]
            }
        },
        "loadWidget.process_property": {
            "name": "process_property",
            "location": 725,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xmlprop": [],
                "widget": [
                    "None"
                ]
            }
        },
        "loadWidget.process_action": {
            "name": "process_action",
            "location": 820,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xmlaction": [],
                "toolBar": []
            }
        },
        "loadWidget.process_layout_box": {
            "name": "process_layout_box",
            "location": 834,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xmllayout": [],
                "widget": [
                    "None"
                ],
                "mode": [
                    "typing.Text"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/application/parsers/qt3uiparser/__init__.py": {},
    "pineboo-master/pineboolib/application/qsatypes/date.py": {
        "Date.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Date.toString": {
            "name": "toString",
            "location": 58,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "pattern": [
                    "None"
                ]
            }
        },
        "Date.getTime": {
            "name": "getTime",
            "location": 78,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Date.getYear": {
            "name": "getYear",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.setYear": {
            "name": "setYear",
            "location": 98,
            "return": [
                "Date"
            ],
            "arguments": {
                "self": [],
                "year": []
            }
        },
        "Date.getMonth": {
            "name": "getMonth",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.setMonth": {
            "name": "setMonth",
            "location": 118,
            "return": [
                "Date"
            ],
            "arguments": {
                "self": [],
                "mm": []
            }
        },
        "Date.getDay": {
            "name": "getDay",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.setDay": {
            "name": "setDay",
            "location": 144,
            "return": [
                "Date"
            ],
            "arguments": {
                "self": [],
                "dd": []
            }
        },
        "Date.getHours": {
            "name": "getHours",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.getMinutes": {
            "name": "getMinutes",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.getSeconds": {
            "name": "getSeconds",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.getMilliseconds": {
            "name": "getMilliseconds",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.setDate": {
            "name": "setDate",
            "location": 197,
            "return": [
                "Date"
            ],
            "arguments": {
                "self": [],
                "date": []
            }
        },
        "Date.addDays": {
            "name": "addDays",
            "location": 214,
            "return": [
                "Date"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "Date.addMonths": {
            "name": "addMonths",
            "location": 223,
            "return": [
                "Date"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "Date.addYears": {
            "name": "addYears",
            "location": 232,
            "return": [
                "Date"
            ],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "Date.parse": {
            "name": "parse",
            "location": 242,
            "return": [
                "Date"
            ],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "Date.__str__": {
            "name": "__str__",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Date.__lt__": {
            "name": "__lt__",
            "location": 250,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Date.__le__": {
            "name": "__le__",
            "location": 254,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Date.__ge__": {
            "name": "__ge__",
            "location": 258,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Date.__gt__": {
            "name": "__gt__",
            "location": 262,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Date.__eq__": {
            "name": "__eq__",
            "location": 266,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Date.__ne__": {
            "name": "__ne__",
            "location": 270,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "pineboo-master/pineboolib/application/qsatypes/sysbasetype.py": {
        "SysBaseType.nameUser": {
            "name": "nameUser",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.interactiveGUI": {
            "name": "interactiveGUI",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isUserBuild": {
            "name": "isUserBuild",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isDeveloperBuild": {
            "name": "isDeveloperBuild",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isNebulaBuild": {
            "name": "isNebulaBuild",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isDebuggerMode": {
            "name": "isDebuggerMode",
            "location": 73,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isCloudMode": {
            "name": "isCloudMode",
            "location": 79,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isDebuggerEnabled": {
            "name": "isDebuggerEnabled",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isQuickBuild": {
            "name": "isQuickBuild",
            "location": 89,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.isLoadedModule": {
            "name": "isLoadedModule",
            "location": 94,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "modulename": []
            }
        },
        "SysBaseType.osName": {
            "name": "osName",
            "location": 101,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.nameBD": {
            "name": "nameBD",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.toUnicode": {
            "name": "toUnicode",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "val": [],
                "format": []
            }
        },
        "SysBaseType.fromUnicode": {
            "name": "fromUnicode",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "val": [],
                "format": []
            }
        },
        "SysBaseType.Mr_Proper": {
            "name": "Mr_Proper",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.installPrefix": {
            "name": "installPrefix",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.version": {
            "name": "version",
            "location": 146,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.processEvents": {
            "name": "processEvents",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.write": {
            "name": "write",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "encode_": [],
                "dir_": [],
                "contenido": []
            }
        },
        "SysBaseType.cleanupMetaData": {
            "name": "cleanupMetaData",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "SysBaseType.nameDriver": {
            "name": "nameDriver",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "SysBaseType.nameHost": {
            "name": "nameHost",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "SysBaseType.addDatabase": {
            "name": "addDatabase",
            "location": 189,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.removeDatabase": {
            "name": "removeDatabase",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "SysBaseType.idSession": {
            "name": "idSession",
            "location": 242,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.reportChanges": {
            "name": "reportChanges",
            "location": 248,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "changes": []
            }
        },
        "SysBaseType.diffXmlFilesDef": {
            "name": "diffXmlFilesDef",
            "location": 265,
            "return": [
                "dict[typing.Text, typing.Union[str,int]]"
            ],
            "arguments": {
                "self": [],
                "xmlOld": [
                    "None"
                ],
                "xmlNew": [
                    "None"
                ]
            }
        },
        "SysBaseType.filesDefToArray": {
            "name": "filesDefToArray",
            "location": 304,
            "return": [
                "dict[, dict[typing.Text, ]]"
            ],
            "arguments": {
                "self": [],
                "xml": [
                    "None"
                ]
            }
        },
        "SysBaseType.textPacking": {
            "name": "textPacking",
            "location": 339,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "SysBaseType.binaryPacking": {
            "name": "binaryPacking",
            "location": 357,
            "return": [],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "SysBaseType.infoMsgBox": {
            "name": "infoMsgBox",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ]
            }
        },
        "SysBaseType.warnMsgBox": {
            "name": "warnMsgBox",
            "location": 372,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ]
            }
        },
        "SysBaseType.errorMsgBox": {
            "name": "errorMsgBox",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ]
            }
        },
        "SysBaseType.translate": {
            "name": "translate",
            "location": 392,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "SysBaseType._warnHtmlPopup": {
            "name": "_warnHtmlPopup",
            "location": 397,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "html": [],
                "options": []
            }
        },
        "SysBaseType.infoPopup": {
            "name": "infoPopup",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ]
            }
        },
        "SysBaseType.warnPopup": {
            "name": "warnPopup",
            "location": 418,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ]
            }
        },
        "SysBaseType.errorPopup": {
            "name": "errorPopup",
            "location": 434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ]
            }
        },
        "SysBaseType.trTagText": {
            "name": "trTagText",
            "location": 450,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tagText": []
            }
        },
        "SysBaseType.updatePineboo": {
            "name": "updatePineboo",
            "location": 460,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysBaseType.setObjText": {
            "name": "setObjText",
            "location": 471,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "container": [
                    "None"
                ],
                "component": [
                    "None"
                ],
                "value": [
                    "None"
                ]
            }
        },
        "SysBaseType.disableObj": {
            "name": "disableObj",
            "location": 491,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "container": [
                    "None"
                ],
                "component": [
                    "None"
                ]
            }
        },
        "SysBaseType.enableObj": {
            "name": "enableObj",
            "location": 513,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "container": [
                    "None"
                ],
                "component": [
                    "None"
                ]
            }
        },
        "SysBaseType.filterObj": {
            "name": "filterObj",
            "location": 534,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "container": [
                    "None"
                ],
                "component": [
                    "None"
                ],
                "filter": [
                    "None"
                ]
            }
        },
        "SysBaseType.testObj": {
            "name": "testObj",
            "location": 553,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "container": [
                    "None"
                ],
                "component": [
                    "None"
                ]
            }
        },
        "SysBaseType.testAndRun": {
            "name": "testAndRun",
            "location": 564,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "container": [
                    "None"
                ],
                "component": [
                    "None"
                ],
                "method": [
                    "None"
                ],
                "param": [
                    "None"
                ]
            }
        },
        "SysBaseType.runObjMethod": {
            "name": "runObjMethod",
            "location": 574,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "container": [
                    "None"
                ],
                "component": [
                    "None"
                ],
                "method": [
                    "None"
                ],
                "param": [
                    "None"
                ]
            }
        },
        "SysBaseType.connectSS": {
            "name": "connectSS",
            "location": 586,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "ssSender": [
                    "None"
                ],
                "ssSignal": [
                    "None"
                ],
                "ssReceiver": [
                    "None"
                ],
                "ssSlot": [
                    "None"
                ]
            }
        },
        "SysBaseType.openUrl": {
            "name": "openUrl",
            "location": 594,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SysBaseType.launchCommand": {
            "name": "launchCommand",
            "location": 629,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "comando": []
            }
        }
    },
    "pineboo-master/pineboolib/application/qsatypes/__init__.py": {},
    "pineboo-master/pineboolib/application/tests/test_types.py": {
        "TestBoolean.test_true": {
            "name": "test_true",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBoolean.test_false": {
            "name": "test_false",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQString.test_basic": {
            "name": "test_basic",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunction.test_basic": {
            "name": "test_basic",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestObject.test_basic1": {
            "name": "test_basic1",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestObject.test_basic2": {
            "name": "test_basic2",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArray.test_basic1": {
            "name": "test_basic1",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArray.test_basic2": {
            "name": "test_basic2",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArray.test_repr": {
            "name": "test_repr",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestArray.test_iter": {
            "name": "test_iter",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDate.test_basic1": {
            "name": "test_basic1",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/application/tests/__init__.py": {},
    "pineboo-master/pineboolib/application/utils/check_dependencies.py": {
        "check_dependencies": {
            "name": "check_dependencies",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "dict_": [],
                "exit": [
                    "bool"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/application/utils/convert_flaction.py": {
        "convertFLAction": {
            "name": "convertFLAction",
            "location": 14,
            "return": [],
            "arguments": {
                "action": []
            }
        },
        "convert2FLAction": {
            "name": "convert2FLAction",
            "location": 29,
            "return": [],
            "arguments": {
                "action": []
            }
        }
    },
    "pineboo-master/pineboolib/application/utils/date_conversion.py": {
        "date_dma_to_amd": {
            "name": "date_dma_to_amd",
            "location": 11,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "f": []
            }
        },
        "date_amd_to_dma": {
            "name": "date_amd_to_dma",
            "location": 49,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "f": []
            }
        },
        "convert_to_qdate": {
            "name": "convert_to_qdate",
            "location": 86,
            "return": [],
            "arguments": {
                "date": []
            }
        }
    },
    "pineboo-master/pineboolib/application/utils/geometry.py": {
        "saveGeometryForm": {
            "name": "saveGeometryForm",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [],
                "geo": []
            }
        },
        "loadGeometryForm": {
            "name": "loadGeometryForm",
            "location": 28,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/application/utils/mobilemode.py": {
        "is_mobile_mode": {
            "name": "is_mobile_mode",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "check_mobile_mode": {
            "name": "check_mobile_mode",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/application/utils/path.py": {
        "_dir": {
            "name": "_dir",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "coalesce_path": {
            "name": "coalesce_path",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_path": {
            "name": "_path",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [],
                "showNotFound": [
                    "bool"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/application/utils/sql_tools.py": {
        "resolve_query": {
            "name": "resolve_query",
            "location": 367,
            "return": [],
            "arguments": {
                "table_name": [],
                "params": []
            }
        },
        "resolve_order_params": {
            "name": "resolve_order_params",
            "location": 409,
            "return": [],
            "arguments": {
                "key": [],
                "valor": []
            }
        },
        "resolve_where_params": {
            "name": "resolve_where_params",
            "location": 422,
            "return": [],
            "arguments": {
                "key": [],
                "valor": [],
                "mtd_table": []
            }
        },
        "resolve_pagination": {
            "name": "resolve_pagination",
            "location": 485,
            "return": [],
            "arguments": {
                "query": []
            }
        },
        "get_tipo_aqnext": {
            "name": "get_tipo_aqnext",
            "location": 509,
            "return": [],
            "arguments": {
                "tipo": []
            }
        },
        "SqlInspector.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "sql_text": []
            }
        },
        "SqlInspector.mtd_fields": {
            "name": "mtd_fields",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SqlInspector.table_names": {
            "name": "table_names",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SqlInspector.field_names": {
            "name": "field_names",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SqlInspector.fieldNameToPos": {
            "name": "fieldNameToPos",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SqlInspector.posToFieldName": {
            "name": "posToFieldName",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "SqlInspector._resolve_fields": {
            "name": "_resolve_fields",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "sql": []
            }
        },
        "SqlInspector.resolve_empty_value": {
            "name": "resolve_empty_value",
            "location": 219,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "SqlInspector.resolve_value": {
            "name": "resolve_value",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "pos": [],
                "value": [],
                "raw": []
            }
        },
        "SqlInspector._create_mtd_fields": {
            "name": "_create_mtd_fields",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "fields_list": [],
                "tables_list": []
            }
        }
    },
    "pineboo-master/pineboolib/application/utils/xpm.py": {
        "cacheXPM": {
            "name": "cacheXPM",
            "location": 9,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "value": []
            }
        }
    },
    "pineboo-master/pineboolib/application/utils/__init__.py": {},
    "pineboo-master/pineboolib/core/decorators.py": {
        "clean_repr": {
            "name": "clean_repr",
            "location": 22,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "NotImplementedWarn": {
            "name": "NotImplementedWarn",
            "location": 27,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "NotImplementedDebug": {
            "name": "NotImplementedDebug",
            "location": 60,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "WorkingOnThis": {
            "name": "WorkingOnThis",
            "location": 86,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "BetaImplementation": {
            "name": "BetaImplementation",
            "location": 109,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "Empty": {
            "name": "Empty",
            "location": 130,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "Incomplete": {
            "name": "Incomplete",
            "location": 155,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "needRevision": {
            "name": "needRevision",
            "location": 176,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "Deprecated": {
            "name": "Deprecated",
            "location": 196,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "pyqtSlot": {
            "name": "pyqtSlot",
            "location": 223,
            "return": [],
            "arguments": {}
        },
        "NotImplementedWarn.newfn": {
            "name": "newfn",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "NotImplementedDebug.newfn": {
            "name": "newfn",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "WorkingOnThis.newfn": {
            "name": "newfn",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "BetaImplementation.newfn": {
            "name": "newfn",
            "location": 113,
            "return": [],
            "arguments": {}
        },
        "Empty.newfn": {
            "name": "newfn",
            "location": 138,
            "return": [],
            "arguments": {}
        },
        "Incomplete.newfn": {
            "name": "newfn",
            "location": 159,
            "return": [],
            "arguments": {}
        },
        "needRevision.newfn": {
            "name": "newfn",
            "location": 179,
            "return": [],
            "arguments": {}
        },
        "Deprecated.newfn": {
            "name": "newfn",
            "location": 200,
            "return": [],
            "arguments": {}
        },
        "pyqtSlot._pyqtSlot": {
            "name": "_pyqtSlot",
            "location": 231,
            "return": [],
            "arguments": {
                "fn": []
            }
        }
    },
    "pineboo-master/pineboolib/core/error_manager.py": {
        "translate": {
            "name": "translate",
            "location": 15,
            "return": [],
            "arguments": {
                "mod": [],
                "txt": []
            }
        },
        "error_manager": {
            "name": "error_manager",
            "location": 21,
            "return": [],
            "arguments": {
                "e": []
            }
        },
        "process_error": {
            "name": "process_error",
            "location": 36,
            "return": [],
            "arguments": {
                "error_str": []
            }
        }
    },
    "pineboo-master/pineboolib/core/exceptions.py": {},
    "pineboo-master/pineboolib/core/garbage_collector.py": {
        "check_gc_referrers": {
            "name": "check_gc_referrers",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "typename": [],
                "w_obj": [],
                "name": []
            }
        },
        "check_gc_referrers.checkfn": {
            "name": "checkfn",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/core/message_manager.py": {
        "Manager.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dgi": []
            }
        },
        "Manager.send": {
            "name": "send",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type_": [],
                "function_": [
                    "None"
                ],
                "data_": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/core/parsetable.py": {
        "parseTable": {
            "name": "parseTable",
            "location": 9,
            "return": [],
            "arguments": {
                "nombre": [],
                "contenido": [],
                "encoding": [
                    "typing.Text"
                ],
                "remove_blank_text": [
                    "bool"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/core/settings.py": {
        "PinebooSettings.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "typing.Text"
                ]
            }
        },
        "PinebooSettings.dump_qsize": {
            "name": "dump_qsize",
            "location": 47,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "value": []
            }
        },
        "PinebooSettings.dump_value": {
            "name": "dump_value",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "PinebooSettings.load_value": {
            "name": "load_value",
            "location": 57,
            "return": [
                "QSize"
            ],
            "arguments": {
                "self": [],
                "value_text": []
            }
        },
        "PinebooSettings.value": {
            "name": "value",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "defaultValue": [
                    "None"
                ],
                "type": [
                    "None"
                ]
            }
        },
        "PinebooSettings._value": {
            "name": "_value",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "default": [
                    "None"
                ]
            }
        },
        "PinebooSettings.set_value": {
            "name": "set_value",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        }
    },
    "pineboo-master/pineboolib/core/system.py": {
        "System.setenv": {
            "name": "setenv",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [],
                "val": []
            }
        },
        "System.getenv": {
            "name": "getenv",
            "location": 19,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/core/__init__.py": {},
    "pineboo-master/pineboolib/core/utils/check_dependencies.py": {
        "get_dependency_errors": {
            "name": "get_dependency_errors",
            "location": 31,
            "return": [
                "dict[tuple, typing.Text]"
            ],
            "arguments": {
                "dict_": []
            }
        },
        "check_dependencies_cli": {
            "name": "check_dependencies_cli",
            "location": 79,
            "return": [
                "bool"
            ],
            "arguments": {
                "dict_": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/get_table_obj.py": {
        "getTableObj": {
            "name": "getTableObj",
            "location": 8,
            "return": [
                "TableStruct"
            ],
            "arguments": {
                "tree": [],
                "root": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/logging.py": {
        "getLogger": {
            "name": "getLogger",
            "location": 61,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_addLoggingLevel": {
            "name": "_addLoggingLevel",
            "location": 81,
            "return": [],
            "arguments": {
                "levelName": [],
                "levelNum": []
            }
        },
        "Logger.set_pineboo_default_level": {
            "name": "set_pineboo_default_level",
            "location": 35,
            "return": [],
            "arguments": {
                "cls": [],
                "level": []
            }
        },
        "Logger.message": {
            "name": "message",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Logger.hint": {
            "name": "hint",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Logger.notice": {
            "name": "notice",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Logger.trace": {
            "name": "trace",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "_addLoggingLevel.logForLevel": {
            "name": "logForLevel",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/singleton.py": {
        "Singleton.__call__": {
            "name": "__call__",
            "location": 16,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/struct.py": {
        "Struct.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XMLStruct.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xmlobj": [
                    "None"
                ]
            }
        },
        "XMLStruct.__str__": {
            "name": "__str__",
            "location": 66,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "XMLStruct._v": {
            "name": "_v",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "default": [
                    "None"
                ]
            }
        },
        "XMLStruct._rv": {
            "name": "_rv",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/utils_base.py": {
        "auto_qt_translate_text": {
            "name": "auto_qt_translate_text",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "text": []
            }
        },
        "one": {
            "name": "one",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [],
                "default": [
                    "None"
                ]
            }
        },
        "traceit": {
            "name": "traceit",
            "location": 114,
            "return": [],
            "arguments": {
                "frame": [],
                "event": [],
                "arg": []
            }
        },
        "trace_function": {
            "name": "trace_function",
            "location": 162,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "copy_dir_recursive": {
            "name": "copy_dir_recursive",
            "location": 266,
            "return": [
                "bool"
            ],
            "arguments": {
                "from_dir": [],
                "to_dir": [],
                "replace_on_conflict": [
                    "bool"
                ]
            }
        },
        "text2bool": {
            "name": "text2bool",
            "location": 310,
            "return": [
                "bool"
            ],
            "arguments": {
                "text": []
            }
        },
        "ustr": {
            "name": "ustr",
            "location": 338,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "load2xml": {
            "name": "load2xml",
            "location": 382,
            "return": [],
            "arguments": {
                "form_path_or_str": []
            }
        },
        "_parse_for_duplicates": {
            "name": "_parse_for_duplicates",
            "location": 428,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "pretty_print_xml": {
            "name": "pretty_print_xml",
            "location": 501,
            "return": [
                "None"
            ],
            "arguments": {
                "elem": [],
                "level": [
                    "int"
                ]
            }
        },
        "format_double": {
            "name": "format_double",
            "location": 524,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "d": [],
                "part_integer": [],
                "part_decimal": []
            }
        },
        "format_int": {
            "name": "format_int",
            "location": 561,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "value": [],
                "part_integer": [
                    "None"
                ]
            }
        },
        "unformat_number": {
            "name": "unformat_number",
            "location": 575,
            "return": [],
            "arguments": {
                "new_str": [],
                "old_str": [],
                "type_": []
            }
        },
        "is_deployed": {
            "name": "is_deployed",
            "location": 620,
            "return": [],
            "arguments": {}
        },
        "get_base_dir": {
            "name": "get_base_dir",
            "location": 625,
            "return": [],
            "arguments": {}
        },
        "filedir": {
            "name": "filedir",
            "location": 637,
            "return": [],
            "arguments": {}
        },
        "download_files": {
            "name": "download_files",
            "location": 650,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pixmap_fromMimeSource": {
            "name": "pixmap_fromMimeSource",
            "location": 664,
            "return": [
                "QPixmap",
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "sha1": {
            "name": "sha1",
            "location": 670,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "print_stack": {
            "name": "print_stack",
            "location": 675,
            "return": [
                "None"
            ],
            "arguments": {
                "maxsize": [
                    "int"
                ]
            }
        },
        "DefFun.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "funname": [],
                "realfun": [
                    "None"
                ]
            }
        },
        "DefFun.__str__": {
            "name": "__str__",
            "location": 79,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DefFun.__call__": {
            "name": "__call__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TraceBlock.__enter__": {
            "name": "__enter__",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TraceBlock.__exit__": {
            "name": "__exit__",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [],
                "value": [],
                "traceback": []
            }
        },
        "trace_function.wrapper": {
            "name": "wrapper",
            "location": 165,
            "return": [],
            "arguments": {}
        },
        "downloadManager.__init__": {
            "name": "__init__",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "downloadManager.setLE": {
            "name": "setLE",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [],
                "dir_": [],
                "urllineedit": []
            }
        },
        "downloadManager.doDownload": {
            "name": "doDownload",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "downloadManager.saveFileName": {
            "name": "saveFileName",
            "location": 208,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "downloadManager.saveToDisk": {
            "name": "saveToDisk",
            "location": 225,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "filename": [],
                "data": []
            }
        },
        "downloadManager.isHttpRedirect": {
            "name": "isHttpRedirect",
            "location": 241,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "reply": []
            }
        },
        "downloadManager.downloadFinished": {
            "name": "downloadFinished",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reply": []
            }
        },
        "ustr.ustr1": {
            "name": "ustr1",
            "location": 341,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "t": []
            }
        },
        "StructMyDict.__getattr__": {
            "name": "__getattr__",
            "location": 370,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "StructMyDict.__setattr__": {
            "name": "__setattr__",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/version.py": {
        "VersionNumber.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version_string": [],
                "default": [
                    "None"
                ]
            }
        },
        "VersionNumber.__eq__": {
            "name": "__eq__",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_any": []
            }
        },
        "VersionNumber.__neq__": {
            "name": "__neq__",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_any": []
            }
        },
        "VersionNumber.__gt__": {
            "name": "__gt__",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_any": []
            }
        },
        "VersionNumber.__lt__": {
            "name": "__lt__",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_any": []
            }
        },
        "VersionNumber.__ge__": {
            "name": "__ge__",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_any": []
            }
        },
        "VersionNumber.__le__": {
            "name": "__le__",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other_any": []
            }
        },
        "VersionNumber.__str__": {
            "name": "__str__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VersionNumber.__repr__": {
            "name": "__repr__",
            "location": 77,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionNumber.to_version_number": {
            "name": "to_version_number",
            "location": 82,
            "return": [
                "VersionNumber"
            ],
            "arguments": {
                "self": [],
                "other_any": []
            }
        },
        "VersionNumber.normalize_complex": {
            "name": "normalize_complex",
            "location": 94,
            "return": [
                "list[tuple[int]]"
            ],
            "arguments": {
                "cls": [],
                "raw_text": []
            }
        },
        "VersionNumber.check": {
            "name": "check",
            "location": 114,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "mod_name": [],
                "mod_ver": [],
                "min_ver": []
            }
        },
        "VersionNumber.normalize": {
            "name": "normalize",
            "location": 124,
            "return": [
                "list[int]"
            ],
            "arguments": {
                "cls": [],
                "v": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/__init__.py": {},
    "pineboo-master/pineboolib/core/utils/tests/test_version.py": {
        "TestVersionNumber.test_create": {
            "name": "test_create",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVersionNumber.test_normalize_complex": {
            "name": "test_normalize_complex",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVersionNumber.test_compare": {
            "name": "test_compare",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVersionNumber.test_repr_str": {
            "name": "test_repr_str",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/core/utils/tests/__init__.py": {},
    "pineboo-master/pineboolib/fllegacy/flaccesscontrol.py": {
        "FLAccessControl.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.__del__": {
            "name": "__del__",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.name": {
            "name": "name",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.user": {
            "name": "user",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.perm": {
            "name": "perm",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.setName": {
            "name": "setName",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLAccessControl.setUser": {
            "name": "setUser",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "u": []
            }
        },
        "FLAccessControl.setPerm": {
            "name": "setPerm",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "FLAccessControl.clear": {
            "name": "clear",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.type": {
            "name": "type",
            "location": 169,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.set": {
            "name": "set",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLAccessControl.get": {
            "name": "get",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "FLAccessControl.setAcos": {
            "name": "setAcos",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "acos": []
            }
        },
        "FLAccessControl.getAcos": {
            "name": "getAcos",
            "location": 273,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControl.processObject": {
            "name": "processObject",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLAccessControl.setFromObject": {
            "name": "setFromObject",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flaccesscontrolfactory.py": {
        "FLAccessControlMainWindow.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlMainWindow.type": {
            "name": "type",
            "location": 33,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlMainWindow.processObject": {
            "name": "processObject",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLAccessControlMainWindow.setFromObject": {
            "name": "setFromObject",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "object": []
            }
        },
        "FLAccessControlForm.__init__": {
            "name": "__init__",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlForm.type": {
            "name": "type",
            "location": 88,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlForm.processObject": {
            "name": "processObject",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLAccessControlForm.setFromObject": {
            "name": "setFromObject",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "object": []
            }
        },
        "FLAccessControlTable.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlTable.type": {
            "name": "type",
            "location": 165,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlTable.processObject": {
            "name": "processObject",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLAccessControlTable.setFromObject": {
            "name": "setFromObject",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLAccessControlFactory.create": {
            "name": "create",
            "location": 256,
            "return": [
                "FLAccessControlMainWindow",
                "FLAccessControlForm",
                "FLAccessControlTable"
            ],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "FLAccessControlFactory.type": {
            "name": "type",
            "location": 271,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flaccesscontrollists.py": {
        "FLAccessControlLists.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlLists.__del__": {
            "name": "__del__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlLists.name": {
            "name": "name",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAccessControlLists.init": {
            "name": "init",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aclXml": [
                    "None"
                ]
            }
        },
        "FLAccessControlLists.process": {
            "name": "process",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLAccessControlLists.installACL": {
            "name": "installACL",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idacl": []
            }
        },
        "FLAccessControlLists.makeRule": {
            "name": "makeRule",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": [],
                "d": []
            }
        },
        "FLAccessControlLists.makeRuleUser": {
            "name": "makeRuleUser",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": [],
                "d": [],
                "iduser": []
            }
        },
        "FLAccessControlLists.makeRuleGroup": {
            "name": "makeRuleGroup",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": [],
                "d": [],
                "idgroup": [
                    "typing.Text"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flaction.py": {
        "FLAction.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "FLAction.__repr__": {
            "name": "__repr__",
            "location": 92,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLAction.setName": {
            "name": "setName",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLAction.setScriptFormRecord": {
            "name": "setScriptFormRecord",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLAction.setScriptForm": {
            "name": "setScriptForm",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLAction.setTable": {
            "name": "setTable",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "FLAction.setForm": {
            "name": "setForm",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLAction.setFormRecord": {
            "name": "setFormRecord",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLAction.setCaption": {
            "name": "setCaption",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLAction.setDescription": {
            "name": "setDescription",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "FLAction.name": {
            "name": "name",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAction.scriptFormRecord": {
            "name": "scriptFormRecord",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAction.scriptForm": {
            "name": "scriptForm",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAction.table": {
            "name": "table",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAction.caption": {
            "name": "caption",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAction.description": {
            "name": "description",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAction.form": {
            "name": "form",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLAction.formRecord": {
            "name": "formRecord",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flapplication.py": {
        "FLPopupWarn.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mainwindow": []
            }
        },
        "FLApplication.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.event_loop": {
            "name": "event_loop",
            "location": 124,
            "return": [
                "QEventLoop"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.__del__": {
            "name": "__del__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.eventFilter": {
            "name": "eventFilter",
            "location": 180,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [],
                "ev": []
            }
        },
        "FLApplication.eventLoop": {
            "name": "eventLoop",
            "location": 268,
            "return": [
                "QEventLoop"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.checkForUpdate": {
            "name": "checkForUpdate",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.checkForUpdateFinish": {
            "name": "checkForUpdateFinish",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "op": []
            }
        },
        "FLApplication.exit_button_clicked": {
            "name": "exit_button_clicked",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.init": {
            "name": "init",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initfcgi": {
            "name": "initfcgi",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.addObjectFactory": {
            "name": "addObjectFactory",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_object_factory": []
            }
        },
        "FLApplication.callfcgi": {
            "name": "callfcgi",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "call_function": [],
                "argument_list": []
            }
        },
        "FLApplication.endfcgi": {
            "name": "endfcgi",
            "location": 392,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.localeSystem": {
            "name": "localeSystem",
            "location": 396,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.openQSWorkbench": {
            "name": "openQSWorkbench",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initMainWidget": {
            "name": "initMainWidget",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.showMainWidget": {
            "name": "showMainWidget",
            "location": 422,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "FLApplication.setMainWidget": {
            "name": "setMainWidget",
            "location": 481,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "FLApplication.makeStyle": {
            "name": "makeStyle",
            "location": 513,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "style_": []
            }
        },
        "FLApplication.chooseFont": {
            "name": "chooseFont",
            "location": 517,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.showStyles": {
            "name": "showStyles",
            "location": 527,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.showToggleBars": {
            "name": "showToggleBars",
            "location": 535,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initToolBox": {
            "name": "initToolBox",
            "location": 539,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.workspace": {
            "name": "workspace",
            "location": 739,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initActions": {
            "name": "initActions",
            "location": 743,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initMenuBar": {
            "name": "initMenuBar",
            "location": 750,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initToolBar": {
            "name": "initToolBar",
            "location": 757,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initStatusBar": {
            "name": "initStatusBar",
            "location": 804,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.initView": {
            "name": "initView",
            "location": 816,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.setStyle": {
            "name": "setStyle",
            "location": 834,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "style_": []
            }
        },
        "FLApplication.initStyles": {
            "name": "initStyles",
            "location": 844,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.getTabWidgetPages": {
            "name": "getTabWidgetPages",
            "location": 871,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wn": [],
                "n": []
            }
        },
        "FLApplication.getWidgetList": {
            "name": "getWidgetList",
            "location": 876,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wn": [],
                "c": []
            }
        },
        "FLApplication.toggleToolBar": {
            "name": "toggleToolBar",
            "location": 880,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "toggle": []
            }
        },
        "FLApplication.toggleStatusBar": {
            "name": "toggleStatusBar",
            "location": 891,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "toggle": []
            }
        },
        "FLApplication.aboutQt": {
            "name": "aboutQt",
            "location": 898,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.aboutPineboo": {
            "name": "aboutPineboo",
            "location": 903,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.statusHelpMsg": {
            "name": "statusHelpMsg",
            "location": 908,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FLApplication.windowMenuAboutToShow": {
            "name": "windowMenuAboutToShow",
            "location": 920,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.windowMenuActivated": {
            "name": "windowMenuActivated",
            "location": 950,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "FLApplication.existFormInMDI": {
            "name": "existFormInMDI",
            "location": 959,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "FLApplication.openMasterForm": {
            "name": "openMasterForm",
            "location": 975,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action_name": [],
                "pix": []
            }
        },
        "FLApplication.openDefaultForm": {
            "name": "openDefaultForm",
            "location": 981,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.execMainScript": {
            "name": "execMainScript",
            "location": 985,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action_name": []
            }
        },
        "FLApplication.execDefaultScript": {
            "name": "execDefaultScript",
            "location": 991,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.windowClose": {
            "name": "windowClose",
            "location": 995,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.loadScriptsFromModule": {
            "name": "loadScriptsFromModule",
            "location": 1002,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idm": []
            }
        },
        "FLApplication.activateModule": {
            "name": "activateModule",
            "location": 1007,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idm": [
                    "None"
                ]
            }
        },
        "FLApplication.reinit": {
            "name": "reinit",
            "location": 1051,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.clearProject": {
            "name": "clearProject",
            "location": 1069,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.reinitP": {
            "name": "reinitP",
            "location": 1076,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.showDocPage": {
            "name": "showDocPage",
            "location": 1133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "FLApplication.timeUser": {
            "name": "timeUser",
            "location": 1137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.call": {
            "name": "call",
            "location": 1142,
            "return": [],
            "arguments": {
                "self": [],
                "function": [],
                "argument_list": [
                    "list"
                ],
                "object_content": [
                    "None"
                ],
                "show_exceptions": [
                    "bool"
                ]
            }
        },
        "FLApplication.setCaptionMainWidget": {
            "name": "setCaptionMainWidget",
            "location": 1146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "FLApplication.setNotExit": {
            "name": "setNotExit",
            "location": 1176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLApplication.printTextEdit": {
            "name": "printTextEdit",
            "location": 1181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "editor_": []
            }
        },
        "FLApplication.setPrintProgram": {
            "name": "setPrintProgram",
            "location": 1186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "print_program_": []
            }
        },
        "FLApplication.addSysCode": {
            "name": "addSysCode",
            "location": 1191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [],
                "scritp_entry_function": []
            }
        },
        "FLApplication.setScriptEntryFunction": {
            "name": "setScriptEntryFunction",
            "location": 1195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "script_enttry_function": []
            }
        },
        "FLApplication.setDatabaseLockDetection": {
            "name": "setDatabaseLockDetection",
            "location": 1200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "on": [],
                "msec_lapsus": [],
                "lim_checks": [],
                "show_warn": [],
                "msg_warn": [],
                "connection_name": []
            }
        },
        "FLApplication.popupWarn": {
            "name": "popupWarn",
            "location": 1206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg_warn": [],
                "script_calls": [
                    "list"
                ]
            }
        },
        "FLApplication.checkDatabaseLocks": {
            "name": "checkDatabaseLocks",
            "location": 1238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timer_": []
            }
        },
        "FLApplication.saveGeometryForm": {
            "name": "saveGeometryForm",
            "location": 1243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "geo": []
            }
        },
        "FLApplication.geometryForm": {
            "name": "geometryForm",
            "location": 1248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLApplication.staticLoaderSetup": {
            "name": "staticLoaderSetup",
            "location": 1252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.mrProper": {
            "name": "mrProper",
            "location": 1256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.showConsole": {
            "name": "showConsole",
            "location": 1260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.consoleShown": {
            "name": "consoleShown",
            "location": 1273,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.modMainWidget": {
            "name": "modMainWidget",
            "location": 1278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_modulo": []
            }
        },
        "FLApplication.evaluateProject": {
            "name": "evaluateProject",
            "location": 1282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.callScriptEntryFunction": {
            "name": "callScriptEntryFunction",
            "location": 1286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.emitTransactionBegin": {
            "name": "emitTransactionBegin",
            "location": 1292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "FLApplication.emitTransactionEnd": {
            "name": "emitTransactionEnd",
            "location": 1296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "FLApplication.emitTransactionRollback": {
            "name": "emitTransactionRollback",
            "location": 1300,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "FLApplication.gsExecutable": {
            "name": "gsExecutable",
            "location": 1305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.evalueateProject": {
            "name": "evalueateProject",
            "location": 1310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.aqAppIdle": {
            "name": "aqAppIdle",
            "location": 1314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.DGI": {
            "name": "DGI",
            "location": 1327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.startTimerIdle": {
            "name": "startTimerIdle",
            "location": 1331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.stopTimerIdle": {
            "name": "stopTimerIdle",
            "location": 1341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.singleFLLarge": {
            "name": "singleFLLarge",
            "location": 1346,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.msgBoxWarning": {
            "name": "msgBoxWarning",
            "location": 1360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": [],
                "_gui": []
            }
        },
        "FLApplication.checkAndFixTransactionLevel": {
            "name": "checkAndFixTransactionLevel",
            "location": 1364,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [
                    "None"
                ]
            }
        },
        "FLApplication.showDebug": {
            "name": "showDebug",
            "location": 1403,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.db": {
            "name": "db",
            "location": 1407,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.classType": {
            "name": "classType",
            "location": 1412,
            "return": [
                "typing.Type"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLApplication.mainWidget": {
            "name": "mainWidget",
            "location": 1421,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.generalExit": {
            "name": "generalExit",
            "location": 1428,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "ask_exit": [
                    "bool"
                ]
            }
        },
        "FLApplication.quit": {
            "name": "quit",
            "location": 1455,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.queryExit": {
            "name": "queryExit",
            "location": 1460,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.writeState": {
            "name": "writeState",
            "location": 1477,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.writeStateModule": {
            "name": "writeStateModule",
            "location": 1521,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.readState": {
            "name": "readState",
            "location": 1548,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.readStateModule": {
            "name": "readStateModule",
            "location": 1623,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.loadScripts": {
            "name": "loadScripts",
            "location": 1657,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.urlPineboo": {
            "name": "urlPineboo",
            "location": 1667,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.helpIndex": {
            "name": "helpIndex",
            "location": 1671,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.tr": {
            "name": "tr",
            "location": 1675,
            "return": [],
            "arguments": {
                "self": [],
                "sourceText": [],
                "disambiguation": [
                    "None"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "FLApplication.loadTranslations": {
            "name": "loadTranslations",
            "location": 1680,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.trMulti": {
            "name": "trMulti",
            "location": 1706,
            "return": [],
            "arguments": {
                "self": [],
                "s": [],
                "l": []
            }
        },
        "FLApplication.setMultiLang": {
            "name": "setMultiLang",
            "location": 1722,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enable": [],
                "langid": []
            }
        },
        "FLApplication.loadTranslationFromModule": {
            "name": "loadTranslationFromModule",
            "location": 1733,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idM": [],
                "lang": []
            }
        },
        "FLApplication.installTranslator": {
            "name": "installTranslator",
            "location": 1743,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tor": []
            }
        },
        "FLApplication.removeTranslator": {
            "name": "removeTranslator",
            "location": 1756,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tor": []
            }
        },
        "FLApplication.createSysTranslator": {
            "name": "createSysTranslator",
            "location": 1772,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lang": [],
                "loadDefault": []
            }
        },
        "FLApplication.createModTranslator": {
            "name": "createModTranslator",
            "location": 1782,
            "return": [
                "FLTranslator",
                "None"
            ],
            "arguments": {
                "self": [],
                "idM": [],
                "lang": [],
                "loadDefault": [
                    "bool"
                ]
            }
        },
        "FLApplication.modules": {
            "name": "modules",
            "location": 1803,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.commaSeparator": {
            "name": "commaSeparator",
            "location": 1807,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.tmp_dir": {
            "name": "tmp_dir",
            "location": 1811,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.transactionLevel": {
            "name": "transactionLevel",
            "location": 1815,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLApplication.version": {
            "name": "version",
            "location": 1819,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flcheckbox.py": {
        "FLCheckBox.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "num_rows": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flcodbar.py": {
        "FLCodBar.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "None"
                ],
                "type_": [
                    "int"
                ],
                "margin": [
                    "int"
                ],
                "scale": [
                    "float"
                ],
                "cut": [
                    "float"
                ],
                "rotation": [
                    "int"
                ],
                "text_flag": [
                    "bool"
                ],
                "fg": [],
                "bg": [],
                "res": [
                    "int"
                ]
            }
        },
        "FLCodBar.pixmap": {
            "name": "pixmap",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.pixmapError": {
            "name": "pixmapError",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.value": {
            "name": "value",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.type_": {
            "name": "type_",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.margin": {
            "name": "margin",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.scale": {
            "name": "scale",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.cut": {
            "name": "cut",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.text": {
            "name": "text",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.rotation": {
            "name": "rotation",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.fg": {
            "name": "fg",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.bg": {
            "name": "bg",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.setData": {
            "name": "setData",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "FLCodBar.validBarcode": {
            "name": "validBarcode",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.setCaption": {
            "name": "setCaption",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "caption": []
            }
        },
        "FLCodBar.caption": {
            "name": "caption",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.setValue": {
            "name": "setValue",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "FLCodBar.setType": {
            "name": "setType",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "FLCodBar.setMargin": {
            "name": "setMargin",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "margin": []
            }
        },
        "FLCodBar.setScale": {
            "name": "setScale",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scale": []
            }
        },
        "FLCodBar.setCut": {
            "name": "setCut",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cut": []
            }
        },
        "FLCodBar.setText": {
            "name": "setText",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FLCodBar.setRotation": {
            "name": "setRotation",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rotation": []
            }
        },
        "FLCodBar.setFg": {
            "name": "setFg",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fg": []
            }
        },
        "FLCodBar.setBg": {
            "name": "setBg",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bg": []
            }
        },
        "FLCodBar.setRes": {
            "name": "setRes",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "res": []
            }
        },
        "FLCodBar.data": {
            "name": "data",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.fillDefault": {
            "name": "fillDefault",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "FLCodBar.cleanUp": {
            "name": "cleanUp",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar.nameToType": {
            "name": "nameToType",
            "location": 190,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLCodBar.typeToName": {
            "name": "typeToName",
            "location": 234,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "FLCodBar._createBarcode": {
            "name": "_createBarcode",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLCodBar._copyBarCode": {
            "name": "_copyBarCode",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [],
                "dest": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fldatatable.py": {
        "FLDataTable.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "popup": [
                    "bool"
                ]
            }
        },
        "FLDataTable.__del__": {
            "name": "__del__",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.header": {
            "name": "header",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.model": {
            "name": "model",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setFLSqlCursor": {
            "name": "setFLSqlCursor",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLDataTable.marcaRow": {
            "name": "marcaRow",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_pk": []
            }
        },
        "FLDataTable.setPersistentFilter": {
            "name": "setPersistentFilter",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pFilter": []
            }
        },
        "FLDataTable.setFilter": {
            "name": "setFilter",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLDataTable.numCols": {
            "name": "numCols",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setSort": {
            "name": "setSort",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLDataTable.cur": {
            "name": "cur",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setFLReadOnly": {
            "name": "setFLReadOnly",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLDataTable.flReadOnly": {
            "name": "flReadOnly",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setEditOnly": {
            "name": "setEditOnly",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLDataTable.editOnly": {
            "name": "editOnly",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setInsertOnly": {
            "name": "setInsertOnly",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLDataTable.insertOnly": {
            "name": "insertOnly",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.primarysKeysChecked": {
            "name": "primarysKeysChecked",
            "location": 300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.clearChecked": {
            "name": "clearChecked",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setPrimaryKeyChecked": {
            "name": "setPrimaryKeyChecked",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "primaryKeyValue": [],
                "on": []
            }
        },
        "FLDataTable.setShowAllPixmaps": {
            "name": "setShowAllPixmaps",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLDataTable.showAllPixmap": {
            "name": "showAllPixmap",
            "location": 340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setFunctionGetColor": {
            "name": "setFunctionGetColor",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [],
                "iface": [
                    "None"
                ]
            }
        },
        "FLDataTable.functionGetColor": {
            "name": "functionGetColor",
            "location": 351,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setOnlyTable": {
            "name": "setOnlyTable",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "on": [
                    "bool"
                ]
            }
        },
        "FLDataTable.onlyTable": {
            "name": "onlyTable",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.indexOf": {
            "name": "indexOf",
            "location": 373,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "FLDataTable.fieldName": {
            "name": "fieldName",
            "location": 376,
            "return": [],
            "arguments": {
                "self": [],
                "col": []
            }
        },
        "FLDataTable.eventFilter": {
            "name": "eventFilter",
            "location": 389,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "o": [],
                "e": []
            }
        },
        "FLDataTable.paintCell": {
            "name": "paintCell",
            "location": 485,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "row": [],
                "col": [],
                "cr": [],
                "selected": [],
                "cg": []
            }
        },
        "FLDataTable.paintField": {
            "name": "paintField",
            "location": 493,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "field": [],
                "cr": [],
                "selected": []
            }
        },
        "FLDataTable.contextMenuEvent": {
            "name": "contextMenuEvent",
            "location": 501,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLDataTable.setChecked": {
            "name": "setChecked",
            "location": 586,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "FLDataTable.focusOutEvent": {
            "name": "focusOutEvent",
            "location": 604,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLDataTable.handleError": {
            "name": "handleError",
            "location": 612,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.drawContents": {
            "name": "drawContents",
            "location": 620,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "cx": [],
                "cy": [],
                "cw": [],
                "ch": []
            }
        },
        "FLDataTable.syncNumRows": {
            "name": "syncNumRows",
            "location": 626,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.getCellStyle": {
            "name": "getCellStyle",
            "location": 641,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "brush": [],
                "pen": [],
                "field": [],
                "fieldTMD": [],
                "row": [],
                "selected": [],
                "cg": []
            }
        },
        "FLDataTable.paintFieldMtd": {
            "name": "paintFieldMtd",
            "location": 649,
            "return": [],
            "arguments": {
                "self": [],
                "f": [],
                "t": []
            }
        },
        "FLDataTable.focusInEvent": {
            "name": "focusInEvent",
            "location": 662,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLDataTable.refresh": {
            "name": "refresh",
            "location": 694,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refresh_option": [
                    "None"
                ]
            }
        },
        "FLDataTable.ensureRowSelectedVisible": {
            "name": "ensureRowSelectedVisible",
            "location": 742,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "None"
                ]
            }
        },
        "FLDataTable.setQuickFocus": {
            "name": "setQuickFocus",
            "location": 757,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.setColWidth": {
            "name": "setColWidth",
            "location": 768,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [],
                "w": []
            }
        },
        "FLDataTable.resize_column": {
            "name": "resize_column",
            "location": 771,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": [],
                "str_text": []
            }
        },
        "FLDataTable.cursorDestroyed": {
            "name": "cursorDestroyed",
            "location": 815,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "None"
                ]
            }
        },
        "FLDataTable.numRows": {
            "name": "numRows",
            "location": 841,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.column_name_to_column_index": {
            "name": "column_name_to_column_index",
            "location": 853,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLDataTable.mouseDoubleClickEvent": {
            "name": "mouseDoubleClickEvent",
            "location": 864,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLDataTable.visual_index_to_column_index": {
            "name": "visual_index_to_column_index",
            "location": 870,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLDataTable.visual_index_to_logical_index": {
            "name": "visual_index_to_logical_index",
            "location": 891,
            "return": [],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLDataTable.logical_index_to_visual_index": {
            "name": "logical_index_to_visual_index",
            "location": 897,
            "return": [],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLDataTable.visual_index_to_field": {
            "name": "visual_index_to_field",
            "location": 903,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos_": []
            }
        },
        "FLDataTable.currentRow": {
            "name": "currentRow",
            "location": 927,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDataTable.currentColumn": {
            "name": "currentColumn",
            "location": 933,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fldateedit.py": {
        "FLDateEdit.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "name": []
            }
        },
        "FLDateEdit.setOrder": {
            "name": "setOrder",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "order": []
            }
        },
        "FLDateEdit.getDate": {
            "name": "getDate",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLDateEdit.setDate": {
            "name": "setDate",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fldoublevalidator.py": {
        "FLDoubleValidator.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLDoubleValidator.validate": {
            "name": "validate",
            "location": 21,
            "return": [
                "tuple",
                "tuple[typing.Union[typing.Text,int]]"
            ],
            "arguments": {
                "self": [],
                "input_": [],
                "pos_cursor": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flfielddb.py": {
        "FLFieldDB.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "FLFieldDB.load": {
            "name": "load",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setName": {
            "name": "setName",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "FLFieldDB.actionName": {
            "name": "actionName",
            "location": 254,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setActionName": {
            "name": "setActionName",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aN": []
            }
        },
        "FLFieldDB.fieldName": {
            "name": "fieldName",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setFilter": {
            "name": "setFilter",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLFieldDB.filter": {
            "name": "filter",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setFieldName": {
            "name": "setFieldName",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "FLFieldDB.tableName": {
            "name": "tableName",
            "location": 311,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setTableName": {
            "name": "setTableName",
            "location": 320,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fT": []
            }
        },
        "FLFieldDB.foreignField": {
            "name": "foreignField",
            "location": 332,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setForeignField": {
            "name": "setForeignField",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "FLFieldDB.fieldRelation": {
            "name": "fieldRelation",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setFieldRelation": {
            "name": "setFieldRelation",
            "location": 359,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "FLFieldDB.setFieldAlias": {
            "name": "setFieldAlias",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "alias": []
            }
        },
        "FLFieldDB.setTextFormat": {
            "name": "setTextFormat",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLFieldDB.textFormat": {
            "name": "textFormat",
            "location": 386,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setEchoMode": {
            "name": "setEchoMode",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "FLFieldDB.echoMode": {
            "name": "echoMode",
            "location": 402,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB._process_autocomplete_events": {
            "name": "_process_autocomplete_events",
            "location": 413,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "FLFieldDB.eventFilter": {
            "name": "eventFilter",
            "location": 465,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [],
                "event": []
            }
        },
        "FLFieldDB.updateValue": {
            "name": "updateValue",
            "location": 521,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "None"
                ]
            }
        },
        "FLFieldDB.status": {
            "name": "status",
            "location": 683,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setValue": {
            "name": "setValue",
            "location": 700,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "FLFieldDB.value": {
            "name": "value",
            "location": 877,
            "return": [
                "None",
                "int",
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.selectAll": {
            "name": "selectAll",
            "location": 963,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.cursor": {
            "name": "cursor",
            "location": 989,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.showAlias": {
            "name": "showAlias",
            "location": 998,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setShowAlias": {
            "name": "setShowAlias",
            "location": 1005,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "FLFieldDB.insertAccel": {
            "name": "insertAccel",
            "location": 1022,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "FLFieldDB.removeAccel": {
            "name": "removeAccel",
            "location": 1044,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identifier": []
            }
        },
        "FLFieldDB.setKeepDisabled": {
            "name": "setKeepDisabled",
            "location": 1056,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keep": []
            }
        },
        "FLFieldDB.showEditor": {
            "name": "showEditor",
            "location": 1063,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setShowEditor": {
            "name": "setShowEditor",
            "location": 1070,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "show": []
            }
        },
        "FLFieldDB.setPartDecimal": {
            "name": "setPartDecimal",
            "location": 1088,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "FLFieldDB.setAutoCompletionMode": {
            "name": "setAutoCompletionMode",
            "location": 1097,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "FLFieldDB.autoCompletionMode": {
            "name": "autoCompletionMode",
            "location": 1100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.refresh": {
            "name": "refresh",
            "location": 1116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "FLFieldDB.refreshQuick": {
            "name": "refreshQuick",
            "location": 1485,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": [
                    "None"
                ]
            }
        },
        "FLFieldDB.initCursor": {
            "name": "initCursor",
            "location": 1658,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.initEditor": {
            "name": "initEditor",
            "location": 1842,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.initEditorControlForNumber": {
            "name": "initEditorControlForNumber",
            "location": 2285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "has_option_list": [],
                "field": [],
                "type_": [],
                "partDecimal": [],
                "partInteger": [],
                "len_": [],
                "rX": [],
                "hasPushButtonDB": []
            }
        },
        "FLFieldDB.clearPixmap": {
            "name": "clearPixmap",
            "location": 2449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.savePixmap": {
            "name": "savePixmap",
            "location": 2461,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLFieldDB.toggleAutoCompletion": {
            "name": "toggleAutoCompletion",
            "location": 2488,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.autoCompletionUpdateValue": {
            "name": "autoCompletionUpdateValue",
            "location": 2634,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.openFormRecordRelation": {
            "name": "openFormRecordRelation",
            "location": 2689,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.searchValue": {
            "name": "searchValue",
            "location": 2754,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.searchPixmap": {
            "name": "searchPixmap",
            "location": 2891,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setPixmap": {
            "name": "setPixmap",
            "location": 2924,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "FLFieldDB.setPixmapFromPixmap": {
            "name": "setPixmapFromPixmap",
            "location": 2988,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pixmap": [],
                "w": [
                    "int"
                ],
                "h": [
                    "int"
                ]
            }
        },
        "FLFieldDB.setPixmapFromClipboard": {
            "name": "setPixmapFromClipboard",
            "location": 3031,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "unknown": []
            }
        },
        "FLFieldDB.pixmap": {
            "name": "pixmap",
            "location": 3089,
            "return": [
                "QPixmap"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.emitLostFocus": {
            "name": "emitLostFocus",
            "location": 3098,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setNoShowed": {
            "name": "setNoShowed",
            "location": 3106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.setMapValue": {
            "name": "setMapValue",
            "location": 3124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": [
                    "None"
                ]
            }
        },
        "FLFieldDB.emitKeyF2Pressed": {
            "name": "emitKeyF2Pressed",
            "location": 3183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.emitLabelClicked": {
            "name": "emitLabelClicked",
            "location": 3191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.emitTextChanged": {
            "name": "emitTextChanged",
            "location": 3202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "FLFieldDB.ActivatedAccel": {
            "name": "ActivatedAccel",
            "location": 3210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identifier": []
            }
        },
        "FLFieldDB.setDisabled": {
            "name": "setDisabled",
            "location": 3214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "disable": []
            }
        },
        "FLFieldDB.setEnabled": {
            "name": "setEnabled",
            "location": 3221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enable": []
            }
        },
        "FLFieldDB.showEvent": {
            "name": "showEvent",
            "location": 3342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLFieldDB.showWidget": {
            "name": "showWidget",
            "location": 3352,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.editor": {
            "name": "editor",
            "location": 3422,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.initFakeEditor": {
            "name": "initFakeEditor",
            "location": 3434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFieldDB.notNullColor": {
            "name": "notNullColor",
            "location": 3509,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flformdb.py": {
        "FLFormDB.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "action": [],
                "load": [
                    "bool"
                ]
            }
        },
        "FLFormDB.load": {
            "name": "load",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.loaded": {
            "name": "loaded",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.initScript": {
            "name": "initScript",
            "location": 254,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.__del__": {
            "name": "__del__",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.setCursor": {
            "name": "setCursor",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": [
                    "None"
                ]
            }
        },
        "FLFormDB.cursor": {
            "name": "cursor",
            "location": 343,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.mainWidget": {
            "name": "mainWidget",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.setIdMDI": {
            "name": "setIdMDI",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_": []
            }
        },
        "FLFormDB.idMDI": {
            "name": "idMDI",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.setMainWidget": {
            "name": "setMainWidget",
            "location": 372,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": [
                    "None"
                ]
            }
        },
        "FLFormDB.snapShot": {
            "name": "snapShot",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.saveSnapShot": {
            "name": "saveSnapShot",
            "location": 447,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path_file": [
                    "None"
                ]
            }
        },
        "FLFormDB.saveGeometry": {
            "name": "saveGeometry",
            "location": 473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.setCaptionWidget": {
            "name": "setCaptionWidget",
            "location": 488,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FLFormDB.accepted": {
            "name": "accepted",
            "location": 500,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.formClassName": {
            "name": "formClassName",
            "location": 507,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.exec_": {
            "name": "exec_",
            "location": 513,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.hide": {
            "name": "hide",
            "location": 520,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.close": {
            "name": "close",
            "location": 527,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.accept": {
            "name": "accept",
            "location": 539,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.reject": {
            "name": "reject",
            "location": 546,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.showForDocument": {
            "name": "showForDocument",
            "location": 562,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.debugScript": {
            "name": "debugScript",
            "location": 582,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.get_script": {
            "name": "get_script",
            "location": 589,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.callInitScript": {
            "name": "callInitScript",
            "location": 601,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.emitFormReady": {
            "name": "emitFormReady",
            "location": 609,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.emitFormClosed": {
            "name": "emitFormClosed",
            "location": 623,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.action": {
            "name": "action",
            "location": 637,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.initForm": {
            "name": "initForm",
            "location": 641,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.loadControls": {
            "name": "loadControls",
            "location": 684,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.formName": {
            "name": "formName",
            "location": 767,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.name": {
            "name": "name",
            "location": 773,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.geoName": {
            "name": "geoName",
            "location": 777,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.bindIface": {
            "name": "bindIface",
            "location": 782,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.unbindIface": {
            "name": "unbindIface",
            "location": 790,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.isIfaceBind": {
            "name": "isIfaceBind",
            "location": 799,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.closeEvent": {
            "name": "closeEvent",
            "location": 808,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLFormDB.showEvent": {
            "name": "showEvent",
            "location": 862,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLFormDB.cursorDestroyed": {
            "name": "cursorDestroyed",
            "location": 897,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj_": [
                    "None"
                ]
            }
        },
        "FLFormDB.focusInEvent": {
            "name": "focusInEvent",
            "location": 925,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLFormDB.show": {
            "name": "show",
            "location": 933,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormDB.initMainWidget": {
            "name": "initMainWidget",
            "location": 979,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": [
                    "None"
                ]
            }
        },
        "FLFormDB.child": {
            "name": "child",
            "location": 985,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "childName": []
            }
        },
        "FLFormDB.exportToXml": {
            "name": "exportToXml",
            "location": 996,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flformrecorddb.py": {
        "FLFormRecordDB.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent_or_cursor": [],
                "action": [],
                "load": [
                    "bool"
                ]
            }
        },
        "FLFormRecordDB.setMainWidget": {
            "name": "setMainWidget",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": [
                    "None"
                ]
            }
        },
        "FLFormRecordDB.setCaptionWidget": {
            "name": "setCaptionWidget",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "None"
                ]
            }
        },
        "FLFormRecordDB.formClassName": {
            "name": "formClassName",
            "location": 178,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.initForm": {
            "name": "initForm",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.loadControls": {
            "name": "loadControls",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.formName": {
            "name": "formName",
            "location": 447,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.closeEvent": {
            "name": "closeEvent",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLFormRecordDB.validateForm": {
            "name": "validateForm",
            "location": 518,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.acceptedForm": {
            "name": "acceptedForm",
            "location": 605,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.afterCommitBuffer": {
            "name": "afterCommitBuffer",
            "location": 618,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.afterCommitTransaction": {
            "name": "afterCommitTransaction",
            "location": 631,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.canceledForm": {
            "name": "canceledForm",
            "location": 644,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.accept": {
            "name": "accept",
            "location": 658,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.acceptContinue": {
            "name": "acceptContinue",
            "location": 694,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.reject": {
            "name": "reject",
            "location": 734,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.script": {
            "name": "script",
            "location": 744,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.firstRecord": {
            "name": "firstRecord",
            "location": 751,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.previousRecord": {
            "name": "previousRecord",
            "location": 773,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.nextRecord": {
            "name": "nextRecord",
            "location": 799,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.lastRecord": {
            "name": "lastRecord",
            "location": 825,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.disablePushButtonCancel": {
            "name": "disablePushButtonCancel",
            "location": 847,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.show": {
            "name": "show",
            "location": 854,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.inicializeControls": {
            "name": "inicializeControls",
            "location": 891,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.show_and_wait": {
            "name": "show_and_wait",
            "location": 901,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormRecordDB.hide": {
            "name": "hide",
            "location": 913,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flformsearchdb.py": {
        "FLFormSearchDB.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name_or_cursor": [],
                "parent": [
                    "None"
                ]
            }
        },
        "FLFormSearchDB.setAction": {
            "name": "setAction",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "FLFormSearchDB.__delattr__": {
            "name": "__delattr__",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.loadControls": {
            "name": "loadControls",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.exec_": {
            "name": "exec_",
            "location": 205,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "valor": [
                    "None"
                ]
            }
        },
        "FLFormSearchDB.setFilter": {
            "name": "setFilter",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLFormSearchDB.formClassName": {
            "name": "formClassName",
            "location": 271,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.geoName": {
            "name": "geoName",
            "location": 278,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.closeEvent": {
            "name": "closeEvent",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLFormSearchDB.callInitScript": {
            "name": "callInitScript",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.hide": {
            "name": "hide",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.accept": {
            "name": "accept",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.reject": {
            "name": "reject",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.show": {
            "name": "show",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.child": {
            "name": "child",
            "location": 385,
            "return": [],
            "arguments": {
                "self": [],
                "childName": []
            }
        },
        "FLFormSearchDB.accepted": {
            "name": "accepted",
            "location": 388,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLFormSearchDB.setMainWidget": {
            "name": "setMainWidget",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flgroupbyquery.py": {},
    "pineboo-master/pineboolib/fllegacy/flintvalidator.py": {
        "FLIntValidator.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLIntValidator.validate": {
            "name": "validate",
            "location": 13,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": [],
                "input_": [],
                "pos_cursor": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fllineedit.py": {
        "FLLineEdit.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "name": [
                    "None"
                ]
            }
        },
        "FLLineEdit.setText": {
            "name": "setText",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text_": [],
                "check_focus": [
                    "bool"
                ]
            }
        },
        "FLLineEdit.text": {
            "name": "text",
            "location": 83,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLLineEdit.setMaxValue": {
            "name": "setMaxValue",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max_value": []
            }
        },
        "FLLineEdit.focusOutEvent": {
            "name": "focusOutEvent",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLLineEdit.focusInEvent": {
            "name": "focusInEvent",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fllistviewitem.py": {
        "FLListViewItem.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "FLListViewItem.firstChild": {
            "name": "firstChild",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLListViewItem.nextSibling": {
            "name": "nextSibling",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLListViewItem.isExpandable": {
            "name": "isExpandable",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLListViewItem.setText": {
            "name": "setText",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLListViewItem.text": {
            "name": "text",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "col": []
            }
        },
        "FLListViewItem.setPixmap": {
            "name": "setPixmap",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLListViewItem.setExpandable": {
            "name": "setExpandable",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLListViewItem.setKey": {
            "name": "setKey",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "FLListViewItem.key": {
            "name": "key",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLListViewItem.setOpen": {
            "name": "setOpen",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "FLListViewItem.del_": {
            "name": "del_",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flmanager.py": {
        "FLManager.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "db": []
            }
        },
        "FLManager.init": {
            "name": "init",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManager.finish": {
            "name": "finish",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManager.metadata": {
            "name": "metadata",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "quick": []
            }
        },
        "FLManager.metadataDev": {
            "name": "metadataDev",
            "location": 454,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "quick": []
            }
        },
        "FLManager.query": {
            "name": "query",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "parent": []
            }
        },
        "FLManager.action": {
            "name": "action",
            "location": 537,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManager.existsTable": {
            "name": "existsTable",
            "location": 690,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "cache": []
            }
        },
        "FLManager.checkMetaData": {
            "name": "checkMetaData",
            "location": 707,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": []
            }
        },
        "FLManager.alterTable": {
            "name": "alterTable",
            "location": 777,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "FLManager.createTable": {
            "name": "createTable",
            "location": 797,
            "return": [],
            "arguments": {
                "self": [],
                "n_or_tmd": []
            }
        },
        "FLManager.formatValueLike": {
            "name": "formatValueLike",
            "location": 840,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManager.formatAssignValueLike": {
            "name": "formatAssignValueLike",
            "location": 865,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManager.formatValue": {
            "name": "formatValue",
            "location": 946,
            "return": [],
            "arguments": {
                "self": [],
                "fMD_or_type": [],
                "v": [],
                "upper": []
            }
        },
        "FLManager.formatAssignValue": {
            "name": "formatAssignValue",
            "location": 959,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManager.metadataField": {
            "name": "metadataField",
            "location": 1037,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "v": [],
                "ed": []
            }
        },
        "FLManager.metadataRelation": {
            "name": "metadataRelation",
            "location": 1307,
            "return": [],
            "arguments": {
                "self": [],
                "relation": []
            }
        },
        "FLManager.queryParameter": {
            "name": "queryParameter",
            "location": 1372,
            "return": [],
            "arguments": {
                "self": [],
                "parameter": []
            }
        },
        "FLManager.queryGroup": {
            "name": "queryGroup",
            "location": 1387,
            "return": [],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "FLManager.createSystemTable": {
            "name": "createSystemTable",
            "location": 1400,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManager.loadTables": {
            "name": "loadTables",
            "location": 1447,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManager.cleanupMetaData": {
            "name": "cleanupMetaData",
            "location": 1461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManager.isSystemTable": {
            "name": "isSystemTable",
            "location": 1522,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManager.storeLargeValue": {
            "name": "storeLargeValue",
            "location": 1555,
            "return": [],
            "arguments": {
                "self": [],
                "mtd": [],
                "largeValue": []
            }
        },
        "FLManager.fetchLargeValue": {
            "name": "fetchLargeValue",
            "location": 1635,
            "return": [],
            "arguments": {
                "self": [],
                "refKey": []
            }
        },
        "FLManager.initCount": {
            "name": "initCount",
            "location": 1669,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flmanagermodules.py": {
        "FLManagerModules.__init__": {
            "name": "__init__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "db": []
            }
        },
        "FLManagerModules.finish": {
            "name": "finish",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.content": {
            "name": "content",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManagerModules.byteCodeToStr": {
            "name": "byteCodeToStr",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManagerModules.contentCode": {
            "name": "contentCode",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManagerModules.contentFS": {
            "name": "contentFS",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "pN": [],
                "utf8": []
            }
        },
        "FLManagerModules.contentCached": {
            "name": "contentCached",
            "location": 227,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "shaKey": []
            }
        },
        "FLManagerModules.setContent": {
            "name": "setContent",
            "location": 312,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "idM": [],
                "content": []
            }
        },
        "FLManagerModules.createUI": {
            "name": "createUI",
            "location": 349,
            "return": [],
            "arguments": {
                "n": [],
                "connector": [],
                "parent": [],
                "name": []
            }
        },
        "FLManagerModules.createForm": {
            "name": "createForm",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "connector": [],
                "parent": [],
                "name": []
            }
        },
        "FLManagerModules.createFormRecord": {
            "name": "createFormRecord",
            "location": 393,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "connector": [],
                "parent_or_cursor": [],
                "name": []
            }
        },
        "FLManagerModules.setActiveIdModule": {
            "name": "setActiveIdModule",
            "location": 428,
            "return": [],
            "arguments": {
                "self": [],
                "_id": []
            }
        },
        "FLManagerModules.activeIdArea": {
            "name": "activeIdArea",
            "location": 445,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.activeIdModule": {
            "name": "activeIdModule",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.listIdAreas": {
            "name": "listIdAreas",
            "location": 463,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.listIdModules": {
            "name": "listIdModules",
            "location": 488,
            "return": [],
            "arguments": {
                "self": [],
                "idA": []
            }
        },
        "FLManagerModules.listAllIdModules": {
            "name": "listAllIdModules",
            "location": 504,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.idAreaToDescription": {
            "name": "idAreaToDescription",
            "location": 528,
            "return": [],
            "arguments": {
                "self": [],
                "idA": []
            }
        },
        "FLManagerModules.idModuleToDescription": {
            "name": "idModuleToDescription",
            "location": 543,
            "return": [],
            "arguments": {
                "self": [],
                "idM": []
            }
        },
        "FLManagerModules.iconModule": {
            "name": "iconModule",
            "location": 557,
            "return": [],
            "arguments": {
                "self": [],
                "idM": []
            }
        },
        "FLManagerModules.versionModule": {
            "name": "versionModule",
            "location": 577,
            "return": [],
            "arguments": {
                "self": [],
                "idM": []
            }
        },
        "FLManagerModules.shaLocal": {
            "name": "shaLocal",
            "location": 593,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.shaGlobal": {
            "name": "shaGlobal",
            "location": 602,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.setShaLocalFromGlobal": {
            "name": "setShaLocalFromGlobal",
            "location": 622,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.shaOfFile": {
            "name": "shaOfFile",
            "location": 632,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManagerModules.loadKeyFiles": {
            "name": "loadKeyFiles",
            "location": 647,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.loadAllIdModules": {
            "name": "loadAllIdModules",
            "location": 664,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.loadIdAreas": {
            "name": "loadIdAreas",
            "location": 712,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.checkSignatures": {
            "name": "checkSignatures",
            "location": 729,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.idModuleOfFile": {
            "name": "idModuleOfFile",
            "location": 739,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLManagerModules.writeState": {
            "name": "writeState",
            "location": 760,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.readState": {
            "name": "readState",
            "location": 791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLManagerModules.contentStatic": {
            "name": "contentStatic",
            "location": 822,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLManagerModules.staticLoaderSetup": {
            "name": "staticLoaderSetup",
            "location": 862,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flmodulesstaticloader.py": {
        "AQStaticDirInfo.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQStaticBdInfo.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "database": []
            }
        },
        "AQStaticBdInfo.findPath": {
            "name": "findPath",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "AQStaticBdInfo.readSettings": {
            "name": "readSettings",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQStaticBdInfo.writeSettings": {
            "name": "writeSettings",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoaderWarning.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoaderWarning.popupWarnings": {
            "name": "popupWarnings",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoaderWarning.scriptBaseFileName": {
            "name": "scriptBaseFileName",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLStaticLoaderWarning.updateScripts": {
            "name": "updateScripts",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoader.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": [],
                "ui": []
            }
        },
        "FLStaticLoader.load": {
            "name": "load",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoader.addDir": {
            "name": "addDir",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoader.modDir": {
            "name": "modDir",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoader.delDir": {
            "name": "delDir",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLStaticLoader.setEnabled": {
            "name": "setEnabled",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "on": []
            }
        },
        "FLStaticLoader.setChecked": {
            "name": "setChecked",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "on": []
            }
        },
        "FLStaticLoader.setup": {
            "name": "setup",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "b": [],
                "ui": []
            }
        },
        "FLStaticLoader.content": {
            "name": "content",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "n": [],
                "b": [],
                "only_path": [
                    "bool"
                ]
            }
        },
        "FLStaticLoader.__getattr__": {
            "name": "__getattr__",
            "location": 357,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flnetwork.py": {
        "FLNetwork.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "FLNetwork.get": {
            "name": "get",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "FLNetwork.put": {
            "name": "put",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "location": []
            }
        },
        "FLNetwork.copy": {
            "name": "copy",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fromLocation": [],
                "toLocation": []
            }
        },
        "FLNetwork._slotNetworkStart": {
            "name": "_slotNetworkStart",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLNetwork._slotNetworkFinished": {
            "name": "_slotNetworkFinished",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reply": [
                    "None"
                ]
            }
        },
        "FLNetwork._slotNetworkProgress": {
            "name": "_slotNetworkProgress",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bDone": [],
                "bTotal": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flparameterquery.py": {},
    "pineboo-master/pineboolib/fllegacy/flpicture.py": {
        "FLPicturePrivate.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicturePrivate.begin": {
            "name": "begin",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicturePrivate.play": {
            "name": "play",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        },
        "FLPicturePrivate.end": {
            "name": "end",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicturePrivate.setPainter": {
            "name": "setPainter",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pt": []
            }
        },
        "FLPicture.__init__": {
            "name": "__init__",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.PIC_NEW_D": {
            "name": "PIC_NEW_D",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.PIC_CHK_D": {
            "name": "PIC_CHK_D",
            "location": 168,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.picture": {
            "name": "picture",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setPicture": {
            "name": "setPicture",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pic": []
            }
        },
        "FLPicture.isNull": {
            "name": "isNull",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.load": {
            "name": "load",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fileName": [],
                "fformat": [
                    "int"
                ]
            }
        },
        "FLPicture.save": {
            "name": "save",
            "location": 198,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fileName": [],
                "fformat": [
                    "int"
                ]
            }
        },
        "FLPicture.boundingRect": {
            "name": "boundingRect",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setBoundingRect": {
            "name": "setBoundingRect",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "FLPicture.begin": {
            "name": "begin",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.end": {
            "name": "end",
            "location": 220,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.cleanup": {
            "name": "cleanup",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.isActive": {
            "name": "isActive",
            "location": 235,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.play": {
            "name": "play",
            "location": 241,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        },
        "FLPicture.flush": {
            "name": "flush",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.savePainter": {
            "name": "savePainter",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.restorePainter": {
            "name": "restorePainter",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.font": {
            "name": "font",
            "location": 265,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setFont": {
            "name": "setFont",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "font": []
            }
        },
        "FLPicture.setPen": {
            "name": "setPen",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "color": [],
                "width": [
                    "int"
                ],
                "style": []
            }
        },
        "FLPicture.setBrush": {
            "name": "setBrush",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "color": [],
                "style": []
            }
        },
        "FLPicture.backgroundColor": {
            "name": "backgroundColor",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setBackgroundColor": {
            "name": "setBackgroundColor",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "color": []
            }
        },
        "FLPicture.backgroundMode": {
            "name": "backgroundMode",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setBackgroundMode": {
            "name": "setBackgroundMode",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bgm": []
            }
        },
        "FLPicture.rasterOp": {
            "name": "rasterOp",
            "location": 313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setRasterOp": {
            "name": "setRasterOp",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rop": []
            }
        },
        "FLPicture.brushOrigin": {
            "name": "brushOrigin",
            "location": 325,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setBrushOrigin": {
            "name": "setBrushOrigin",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.window": {
            "name": "window",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setWindow": {
            "name": "setWindow",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "w": [],
                "h": []
            }
        },
        "FLPicture.viewport": {
            "name": "viewport",
            "location": 349,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setViewport": {
            "name": "setViewport",
            "location": 355,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.scale": {
            "name": "scale",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sx": [],
                "sy": []
            }
        },
        "FLPicture.shear": {
            "name": "shear",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sh": [],
                "sv": []
            }
        },
        "FLPicture.rotate": {
            "name": "rotate",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "FLPicture.translate": {
            "name": "translate",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dx": [],
                "dy": []
            }
        },
        "FLPicture.translationX": {
            "name": "translationX",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.translationY": {
            "name": "translationY",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setClipping": {
            "name": "setClipping",
            "location": 397,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLPicture.hasClipping": {
            "name": "hasClipping",
            "location": 403,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.setClipRect": {
            "name": "setClipRect",
            "location": 409,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawLine": {
            "name": "drawLine",
            "location": 415,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawPoint": {
            "name": "drawPoint",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.moveTo": {
            "name": "moveTo",
            "location": 427,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.lineTo": {
            "name": "lineTo",
            "location": 433,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawRect": {
            "name": "drawRect",
            "location": 439,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawWinFocusRect": {
            "name": "drawWinFocusRect",
            "location": 445,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawRoundRect": {
            "name": "drawRoundRect",
            "location": 451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawEllipse": {
            "name": "drawEllipse",
            "location": 457,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawArc": {
            "name": "drawArc",
            "location": 463,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawPie": {
            "name": "drawPie",
            "location": 469,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawChord": {
            "name": "drawChord",
            "location": 475,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawPixmap": {
            "name": "drawPixmap",
            "location": 481,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawTiledPixmap": {
            "name": "drawTiledPixmap",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawPicture": {
            "name": "drawPicture",
            "location": 493,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.fillRect": {
            "name": "fillRect",
            "location": 509,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.eraseRect": {
            "name": "eraseRect",
            "location": 515,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.drawText": {
            "name": "drawText",
            "location": 521,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPicture.playOnPixmap": {
            "name": "playOnPixmap",
            "location": 527,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "pix": []
            }
        },
        "FLPicture.playOnPicture": {
            "name": "playOnPicture",
            "location": 544,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "pic": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flpixmapview.py": {
        "FLPixmapView.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "FLPixmapView.setPixmap": {
            "name": "setPixmap",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pix": []
            }
        },
        "FLPixmapView.eventFilter": {
            "name": "eventFilter",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "ev": []
            }
        },
        "FLPixmapView.resizeContents": {
            "name": "resizeContents",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPixmapView.previewUrl": {
            "name": "previewUrl",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "FLPixmapView.clear": {
            "name": "clear",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPixmapView.pixmap": {
            "name": "pixmap",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPixmapView.setAutoScaled": {
            "name": "setAutoScaled",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "autoScaled": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flposprinter.py": {
        "FLPosPrinter.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.__del__": {
            "name": "__del__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.paperWidths": {
            "name": "paperWidths",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.paperWidth": {
            "name": "paperWidth",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.setPaperWidth": {
            "name": "setPaperWidth",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pW": []
            }
        },
        "FLPosPrinter.printerName": {
            "name": "printerName",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.metric": {
            "name": "metric",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "FLPosPrinter.setPrinterName": {
            "name": "setPrinterName",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLPosPrinter.cleanup": {
            "name": "cleanup",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.flush": {
            "name": "flush",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.send": {
            "name": "send",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "str_": [],
                "col": [
                    "int"
                ],
                "row": [
                    "int"
                ]
            }
        },
        "FLPosPrinter.sendStr": {
            "name": "sendStr",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": [],
                "col": [],
                "row": []
            }
        },
        "FLPosPrinter.sendEsc": {
            "name": "sendEsc",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": [],
                "col": [],
                "row": []
            }
        },
        "FLPosPrinter.cmd": {
            "name": "cmd",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": [],
                "paint": [],
                "p": []
            }
        },
        "FLPosPrinter.paperWidthToCols": {
            "name": "paperWidthToCols",
            "location": 78,
            "return": [
                "None",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.initFile": {
            "name": "initFile",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.initStrBuffer": {
            "name": "initStrBuffer",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.initEscBuffer": {
            "name": "initEscBuffer",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLPosPrinter.parsePrinterName": {
            "name": "parsePrinterName",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flreportengine.py": {
        "FLReportEngine.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "FLReportEngine.rptXmlData": {
            "name": "rptXmlData",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.rptXmlTemplate": {
            "name": "rptXmlTemplate",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.relDpi": {
            "name": "relDpi",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.setReportData": {
            "name": "setReportData",
            "location": 121,
            "return": [
                "None",
                "bool"
            ],
            "arguments": {
                "self": [],
                "q": [
                    "None"
                ]
            }
        },
        "FLReportEngine.setFLReportData": {
            "name": "setFLReportData",
            "location": 160,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLReportEngine.setFLReportTemplate": {
            "name": "setFLReportTemplate",
            "location": 168,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "FLReportEngine.rptQueryData": {
            "name": "rptQueryData",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.rptNameTemplate": {
            "name": "rptNameTemplate",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.setReportTemplate": {
            "name": "setReportTemplate",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "FLReportEngine.reportData": {
            "name": "reportData",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.reportTemplate": {
            "name": "reportTemplate",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.csvData": {
            "name": "csvData",
            "location": 211,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.exportToOds": {
            "name": "exportToOds",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pages": []
            }
        },
        "FLReportEngine.renderReport": {
            "name": "renderReport",
            "location": 222,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "init_row": [
                    "int"
                ],
                "init_col": [
                    "int"
                ],
                "flags": [
                    "bool"
                ],
                "pages": [
                    "None"
                ]
            }
        },
        "FLReportEngine.initData": {
            "name": "initData",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.number_pages": {
            "name": "number_pages",
            "location": 289,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportEngine.FLReportEnginePrivate.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "FLReportEngine.FLReportEnginePrivate.addRowToReportData": {
            "name": "addRowToReportData",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "l": []
            }
        },
        "FLReportEngine.FLReportEnginePrivate.groupBy": {
            "name": "groupBy",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "levelMax": [],
                "vA": []
            }
        },
        "FLReportEngine.FLReportEnginePrivate.setQuery": {
            "name": "setQuery",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "qry": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flreportpages.py": {
        "FLReportPages.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.pageCollection": {
            "name": "pageCollection",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.setPageCollection": {
            "name": "setPageCollection",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pages": []
            }
        },
        "FLReportPages.getCurrentPage": {
            "name": "getCurrentPage",
            "location": 76,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.getFirstPage": {
            "name": "getFirstPage",
            "location": 82,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.getPreviousPage": {
            "name": "getPreviousPage",
            "location": 88,
            "return": [
                "FLPicture",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.getNextPage": {
            "name": "getNextPage",
            "location": 94,
            "return": [
                "FLPicture",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.getLastPage": {
            "name": "getLastPage",
            "location": 100,
            "return": [
                "FLPicture",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.getPageAt": {
            "name": "getPageAt",
            "location": 106,
            "return": [
                "FLPicture",
                "int"
            ],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "FLReportPages.clearPages": {
            "name": "clearPages",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.appendPage": {
            "name": "appendPage",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.getCurrentIndex": {
            "name": "getCurrentIndex",
            "location": 122,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.setCurrentPage": {
            "name": "setCurrentPage",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "FLReportPages.setPageSize": {
            "name": "setPageSize",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLReportPages.setPageOrientation": {
            "name": "setPageOrientation",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "FLReportPages.setPageDimensions": {
            "name": "setPageDimensions",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dim": []
            }
        },
        "FLReportPages.pageSize": {
            "name": "pageSize",
            "location": 148,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.pageOrientation": {
            "name": "pageOrientation",
            "location": 154,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.pageDimensions": {
            "name": "pageDimensions",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportPages.pageCount": {
            "name": "pageCount",
            "location": 166,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flreportviewer.py": {
        "internalReportViewer.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "internalReportViewer.setReportEngine": {
            "name": "setReportEngine",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rptEngine": []
            }
        },
        "internalReportViewer.resolution": {
            "name": "resolution",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "internalReportViewer.reportPages": {
            "name": "reportPages",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "internalReportViewer.renderReport": {
            "name": "renderReport",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "init_row": [],
                "init_col": [],
                "flags": []
            }
        },
        "internalReportViewer.setNumCopies": {
            "name": "setNumCopies",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_copies": []
            }
        },
        "internalReportViewer.__getattr__": {
            "name": "__getattr__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLReportViewer.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "embedInParent": [
                    "bool"
                ],
                "rptEngine": [
                    "None"
                ]
            }
        },
        "FLReportViewer.rptViewer": {
            "name": "rptViewer",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.rptEngine": {
            "name": "rptEngine",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.setReportEngine": {
            "name": "setReportEngine",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "None"
                ]
            }
        },
        "FLReportViewer.exec_": {
            "name": "exec_",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.csvData": {
            "name": "csvData",
            "location": 219,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.closeEvent": {
            "name": "closeEvent",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLReportViewer.showEvent": {
            "name": "showEvent",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLReportViewer.renderReport": {
            "name": "renderReport",
            "location": 259,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "init_row": [
                    "int"
                ],
                "init_col": [
                    "int"
                ],
                "append_or_flags": [
                    "None"
                ],
                "display_report": [
                    "bool"
                ]
            }
        },
        "FLReportViewer.slotFirstPage": {
            "name": "slotFirstPage",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.slotLastPage": {
            "name": "slotLastPage",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.slotNextPage": {
            "name": "slotNextPage",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.slotPrevPage": {
            "name": "slotPrevPage",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.slotZoomUp": {
            "name": "slotZoomUp",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.slotZoomDown": {
            "name": "slotZoomDown",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.exportFileCSVData": {
            "name": "exportFileCSVData",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.exportToPDF": {
            "name": "exportToPDF",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.sendEMailPDF": {
            "name": "sendEMailPDF",
            "location": 404,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.showInitCentralWidget": {
            "name": "showInitCentralWidget",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "show": []
            }
        },
        "FLReportViewer.saveSVGStyle": {
            "name": "saveSVGStyle",
            "location": 481,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.saveSimpleSVGStyle": {
            "name": "saveSimpleSVGStyle",
            "location": 533,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.loadSVGStyle": {
            "name": "loadSVGStyle",
            "location": 541,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.slotExit": {
            "name": "slotExit",
            "location": 558,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.slotPrintReportToPs": {
            "name": "slotPrintReportToPs",
            "location": 562,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "outPsFile": []
            }
        },
        "FLReportViewer.slotPrintReportToPdf": {
            "name": "slotPrintReportToPdf",
            "location": 575,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "outPdfFile": []
            }
        },
        "FLReportViewer.slotPrintReport": {
            "name": "slotPrintReport",
            "location": 588,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.setReportData": {
            "name": "setReportData",
            "location": 600,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "FLReportViewer.setReportTemplate": {
            "name": "setReportTemplate",
            "location": 619,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "t": [],
                "style": [
                    "None"
                ]
            }
        },
        "FLReportViewer.sizeHint": {
            "name": "sizeHint",
            "location": 644,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.setNumCopies": {
            "name": "setNumCopies",
            "location": 648,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "numCopies": []
            }
        },
        "FLReportViewer.setPrintToPos": {
            "name": "setPrintToPos",
            "location": 652,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ptp": []
            }
        },
        "FLReportViewer.setPrinterName": {
            "name": "setPrinterName",
            "location": 656,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pName": []
            }
        },
        "FLReportViewer.reportPrinted": {
            "name": "reportPrinted",
            "location": 660,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.setAutoClose": {
            "name": "setAutoClose",
            "location": 664,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLReportViewer.setResolution": {
            "name": "setResolution",
            "location": 672,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dpi": []
            }
        },
        "FLReportViewer.setPixel": {
            "name": "setPixel",
            "location": 679,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "relDpi": []
            }
        },
        "FLReportViewer.setDefaults": {
            "name": "setDefaults",
            "location": 686,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.updateReport": {
            "name": "updateReport",
            "location": 701,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.getCurrentPage": {
            "name": "getCurrentPage",
            "location": 726,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.getFirstPage": {
            "name": "getFirstPage",
            "location": 733,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.getPreviousPage": {
            "name": "getPreviousPage",
            "location": 740,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.getNextPage": {
            "name": "getNextPage",
            "location": 747,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.getLastPage": {
            "name": "getLastPage",
            "location": 754,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.getPageAt": {
            "name": "getPageAt",
            "location": 761,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "FLReportViewer.updateDisplay": {
            "name": "updateDisplay",
            "location": 768,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.clearPages": {
            "name": "clearPages",
            "location": 772,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.appendPage": {
            "name": "appendPage",
            "location": 779,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.getCurrentIndex": {
            "name": "getCurrentIndex",
            "location": 786,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.setCurrentPage": {
            "name": "setCurrentPage",
            "location": 793,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "FLReportViewer.setPageSize": {
            "name": "setPageSize",
            "location": 800,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLReportViewer.setPageOrientation": {
            "name": "setPageOrientation",
            "location": 807,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "FLReportViewer.setPageDimensions": {
            "name": "setPageDimensions",
            "location": 814,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dim": []
            }
        },
        "FLReportViewer.pageSize": {
            "name": "pageSize",
            "location": 821,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.pageOrientation": {
            "name": "pageOrientation",
            "location": 828,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.pageDimensions": {
            "name": "pageDimensions",
            "location": 834,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.pageCount": {
            "name": "pageCount",
            "location": 839,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.setStyleName": {
            "name": "setStyleName",
            "location": 845,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "FLReportViewer.rptViewerEmbedInParent": {
            "name": "rptViewerEmbedInParent",
            "location": 849,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parentFrame": []
            }
        },
        "FLReportViewer.rptViewerReparent": {
            "name": "rptViewerReparent",
            "location": 865,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parentFrame": []
            }
        },
        "FLReportViewer.setReportPages": {
            "name": "setReportPages",
            "location": 884,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pgs": []
            }
        },
        "FLReportViewer.setColorMode": {
            "name": "setColorMode",
            "location": 892,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLReportViewer.colorMode": {
            "name": "colorMode",
            "location": 896,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.disableSlotsPrintExports": {
            "name": "disableSlotsPrintExports",
            "location": 900,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dPrints": [
                    "bool"
                ],
                "dExports": [
                    "bool"
                ]
            }
        },
        "FLReportViewer.exportToOds": {
            "name": "exportToOds",
            "location": 905,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.setName": {
            "name": "setName",
            "location": 912,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLReportViewer.name": {
            "name": "name",
            "location": 916,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLReportViewer.__getattr__": {
            "name": "__getattr__",
            "location": 919,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flsettings.py": {
        "FLSettings.readListEntry": {
            "name": "readListEntry",
            "location": 12,
            "return": [
                "list",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "FLSettings.readEntry": {
            "name": "readEntry",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_key": [],
                "_def": [
                    "None"
                ]
            }
        },
        "FLSettings.readNumEntry": {
            "name": "readNumEntry",
            "location": 39,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "_def": [
                    "int"
                ]
            }
        },
        "FLSettings.readDoubleEntry": {
            "name": "readDoubleEntry",
            "location": 49,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "_def": [
                    "int"
                ]
            }
        },
        "FLSettings.readBoolEntry": {
            "name": "readBoolEntry",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "_def": [
                    "bool"
                ]
            }
        },
        "FLSettings.writeEntry": {
            "name": "writeEntry",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "FLSettings.writeEntryList": {
            "name": "writeEntryList",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flsmtpclient.py": {
        "FLSmtpClient.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "FLSmtpClient.setFrom": {
            "name": "setFrom",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_": []
            }
        },
        "FLSmtpClient.from_": {
            "name": "from_",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setReplyTo": {
            "name": "setReplyTo",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reply_to": []
            }
        },
        "FLSmtpClient.replyTo": {
            "name": "replyTo",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setTo": {
            "name": "setTo",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "to": []
            }
        },
        "FLSmtpClient.to": {
            "name": "to",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setCC": {
            "name": "setCC",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cc": []
            }
        },
        "FLSmtpClient.CC": {
            "name": "CC",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setBCC": {
            "name": "setBCC",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cc": []
            }
        },
        "FLSmtpClient.BCC": {
            "name": "BCC",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setOrganization": {
            "name": "setOrganization",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "org": []
            }
        },
        "FLSmtpClient.organization": {
            "name": "organization",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setPriority": {
            "name": "setPriority",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prio": []
            }
        },
        "FLSmtpClient.priority": {
            "name": "priority",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setSubject": {
            "name": "setSubject",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "subject": []
            }
        },
        "FLSmtpClient.subject": {
            "name": "subject",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setBody": {
            "name": "setBody",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": []
            }
        },
        "FLSmtpClient.body": {
            "name": "body",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.addAttachment": {
            "name": "addAttachment",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attach": [],
                "cid": [
                    "None"
                ]
            }
        },
        "FLSmtpClient.addTextPart": {
            "name": "addTextPart",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [],
                "mime_type": [
                    "typing.Text"
                ]
            }
        },
        "FLSmtpClient.setMailServer": {
            "name": "setMailServer",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mail_server": []
            }
        },
        "FLSmtpClient.mailServer": {
            "name": "mailServer",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setMimeType": {
            "name": "setMimeType",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mine_type": []
            }
        },
        "FLSmtpClient.mimeType": {
            "name": "mimeType",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setPort": {
            "name": "setPort",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "port": []
            }
        },
        "FLSmtpClient.port": {
            "name": "port",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.lastStatusMsg": {
            "name": "lastStatusMsg",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.lastStateCode": {
            "name": "lastStateCode",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setUser": {
            "name": "setUser",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "FLSmtpClient.user": {
            "name": "user",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setPassword": {
            "name": "setPassword",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "password": []
            }
        },
        "FLSmtpClient.password": {
            "name": "password",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setConnectionType": {
            "name": "setConnectionType",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLSmtpClient.connectionType": {
            "name": "connectionType",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.setAuthMethod": {
            "name": "setAuthMethod",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "FLSmtpClient.authMethod": {
            "name": "authMethod",
            "location": 219,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.startSend": {
            "name": "startSend",
            "location": 222,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSmtpClient.changeStatus": {
            "name": "changeStatus",
            "location": 352,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status_msg": [],
                "state_code": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flspinbox.py": {
        "FLSpinBox.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "FLSpinBox.setMaxValue": {
            "name": "setMaxValue",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "FLSpinBox.getValue": {
            "name": "getValue",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSpinBox.setValue": {
            "name": "setValue",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flsqlconnections.py": {
        "FLSqlConnections.database": {
            "name": "database",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flsqlcursor.py": {},
    "pineboo-master/pineboolib/fllegacy/flsqlquery.py": {},
    "pineboo-master/pineboolib/fllegacy/flstylepainter.py": {
        "FLStylePainter.__init__": {
            "name": "__init__",
            "location": 1064,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.painter": {
            "name": "painter",
            "location": 1074,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.styleName": {
            "name": "styleName",
            "location": 1078,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.relDpi": {
            "name": "relDpi",
            "location": 1082,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.setStyleName": {
            "name": "setStyleName",
            "location": 1086,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "FLStylePainter.setRelDpi": {
            "name": "setRelDpi",
            "location": 1091,
            "return": [],
            "arguments": {
                "self": [],
                "relDpi": []
            }
        },
        "FLStylePainter.beginMark": {
            "name": "beginMark",
            "location": 1095,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "obj": []
            }
        },
        "FLStylePainter.endMark": {
            "name": "endMark",
            "location": 1108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.beginSection": {
            "name": "beginSection",
            "location": 1114,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "w": [],
                "h": [],
                "obj": []
            }
        },
        "FLStylePainter.endSection": {
            "name": "endSection",
            "location": 1160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.drawPixmap": {
            "name": "drawPixmap",
            "location": 1174,
            "return": [],
            "arguments": {
                "self": [],
                "pixmap": [],
                "sx": [],
                "sy": [],
                "sw": [],
                "sh": [],
                "obj": []
            }
        },
        "FLStylePainter.drawText": {
            "name": "drawText",
            "location": 1196,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "tf": [],
                "obj": []
            }
        },
        "FLStylePainter.drawLine": {
            "name": "drawLine",
            "location": 1222,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLStylePainter.drawRect": {
            "name": "drawRect",
            "location": 1239,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLStylePainter.setStyle": {
            "name": "setStyle",
            "location": 1256,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "FLStylePainter.applyTransforms": {
            "name": "applyTransforms",
            "location": 1275,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.errCode": {
            "name": "errCode",
            "location": 1279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.normalizeSVGFile": {
            "name": "normalizeSVGFile",
            "location": 1283,
            "return": [],
            "arguments": {
                "self": [],
                "fileName": [],
                "fileNames": []
            }
        },
        "FLStylePainter.setSVGMode": {
            "name": "setSVGMode",
            "location": 1333,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.setObjNodesMap": {
            "name": "setObjNodesMap",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.paramsTransform": {
            "name": "paramsTransform",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "tr": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.normalizeTranslates": {
            "name": "normalizeTranslates",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "isRoot": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.parseDomDoc": {
            "name": "parseDomDoc",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.saveAttributes": {
            "name": "saveAttributes",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.restoreAttributes": {
            "name": "restoreAttributes",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.parseColor": {
            "name": "parseColor",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "col": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.setStyleProperty": {
            "name": "setStyleProperty",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "prop": [],
                "val": [],
                "pen": [],
                "font": [],
                "talign": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.parseLen": {
            "name": "parseLen",
            "location": 355,
            "return": [],
            "arguments": {
                "self": [],
                "string": [],
                "ok": [],
                "horiz": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.lenToInt": {
            "name": "lenToInt",
            "location": 398,
            "return": [],
            "arguments": {
                "self": [],
                "aqmap": [],
                "attr": [],
                "aqdef": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.lenToDouble": {
            "name": "lenToDouble",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "aqmap": [],
                "attr": [],
                "aqdef": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.setStyle": {
            "name": "setStyle",
            "location": 418,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.setTransform": {
            "name": "setTransform",
            "location": 435,
            "return": [],
            "arguments": {
                "self": [],
                "tr": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.applyTransforms": {
            "name": "applyTransforms",
            "location": 473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.play": {
            "name": "play",
            "location": 479,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "elm": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.pathArcSegment": {
            "name": "pathArcSegment",
            "location": 777,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "pcount": [],
                "xc": [],
                "yc": [],
                "th0": [],
                "th1": [],
                "rx": [],
                "ry": [],
                "xar": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.pathArc": {
            "name": "pathArc",
            "location": 811,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "pcount": [],
                "rx": [],
                "ry": [],
                "x_axis_rotation": [],
                "large_arc_flag": [],
                "sweep_flag": [],
                "x": [],
                "y": [],
                "curx": [],
                "cury": []
            }
        },
        "FLStylePainter.FLStylePainterPrivate.drawPath": {
            "name": "drawPath",
            "location": 891,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fltable.py": {
        "FLTable.setColumnMovingEnabled": {
            "name": "setColumnMovingEnabled",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLTable.setVScrollBarMode": {
            "name": "setVScrollBarMode",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLTable.setHScrollBarMode": {
            "name": "setHScrollBarMode",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fltabledb.py": {
        "FLTableDB.__init__": {
            "name": "__init__",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ]
            }
        },
        "FLTableDB.load": {
            "name": "load",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.loaded": {
            "name": "loaded",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.initCursor": {
            "name": "initCursor",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.cursor": {
            "name": "cursor",
            "location": 603,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.tableName": {
            "name": "tableName",
            "location": 613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setTableName": {
            "name": "setTableName",
            "location": 623,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fT": []
            }
        },
        "FLTableDB.foreignField": {
            "name": "foreignField",
            "location": 635,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setForeignField": {
            "name": "setForeignField",
            "location": 643,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "FLTableDB.fieldRelation": {
            "name": "fieldRelation",
            "location": 655,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setFieldRelation": {
            "name": "setFieldRelation",
            "location": 663,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "FLTableDB.setReadOnly": {
            "name": "setReadOnly",
            "location": 675,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLTableDB.readOnly": {
            "name": "readOnly",
            "location": 687,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setEditOnly": {
            "name": "setEditOnly",
            "location": 690,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLTableDB.editOnly": {
            "name": "editOnly",
            "location": 701,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setInsertOnly": {
            "name": "setInsertOnly",
            "location": 704,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FLTableDB.insertOnly": {
            "name": "insertOnly",
            "location": 715,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setInitSearch": {
            "name": "setInitSearch",
            "location": 718,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "iS": []
            }
        },
        "FLTableDB.setOrderCols": {
            "name": "setOrderCols",
            "location": 725,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fields": []
            }
        },
        "FLTableDB.orderCols": {
            "name": "orderCols",
            "location": 782,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setFilter": {
            "name": "setFilter",
            "location": 813,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLTableDB.filter": {
            "name": "filter",
            "location": 821,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.findFilter": {
            "name": "findFilter",
            "location": 829,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.checkColumnEnabled": {
            "name": "checkColumnEnabled",
            "location": 837,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setCheckColumnEnabled": {
            "name": "setCheckColumnEnabled",
            "location": 843,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLTableDB.aliasCheckColumn": {
            "name": "aliasCheckColumn",
            "location": 852,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setAliasCheckColumn": {
            "name": "setAliasCheckColumn",
            "location": 865,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "FLTableDB.findHidden": {
            "name": "findHidden",
            "location": 873,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setFindHidden": {
            "name": "setFindHidden",
            "location": 880,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "h": []
            }
        },
        "FLTableDB.filterHidden": {
            "name": "filterHidden",
            "location": 894,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setFilterHidden": {
            "name": "setFilterHidden",
            "location": 901,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "h": []
            }
        },
        "FLTableDB.showAllPixmaps": {
            "name": "showAllPixmaps",
            "location": 915,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setShowAllPixmaps": {
            "name": "setShowAllPixmaps",
            "location": 921,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "FLTableDB.functionGetColor": {
            "name": "functionGetColor",
            "location": 927,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setFunctionGetColor": {
            "name": "setFunctionGetColor",
            "location": 933,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "FLTableDB.setFilterRecordsFunction": {
            "name": "setFilterRecordsFunction",
            "location": 942,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "FLTableDB.setOnlyTable": {
            "name": "setOnlyTable",
            "location": 948,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "on": [
                    "bool"
                ]
            }
        },
        "FLTableDB.onlyTable": {
            "name": "onlyTable",
            "location": 958,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setAutoSortColumn": {
            "name": "setAutoSortColumn",
            "location": 962,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "on": [
                    "bool"
                ]
            }
        },
        "FLTableDB.autoSortColumn": {
            "name": "autoSortColumn",
            "location": 968,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.eventFilter": {
            "name": "eventFilter",
            "location": 971,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [],
                "ev": []
            }
        },
        "FLTableDB.showEvent": {
            "name": "showEvent",
            "location": 1025,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "FLTableDB.showWidget": {
            "name": "showWidget",
            "location": 1034,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.createFLTableDBWidget": {
            "name": "createFLTableDBWidget",
            "location": 1112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.tableRecords": {
            "name": "tableRecords",
            "location": 1250,
            "return": [
                "None",
                "FLDataTable"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setTableRecordsCursor": {
            "name": "setTableRecordsCursor",
            "location": 1289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.recordChoosedSlot": {
            "name": "recordChoosedSlot",
            "location": 1326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.currentChangedSlot": {
            "name": "currentChangedSlot",
            "location": 1333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.currentRow": {
            "name": "currentRow",
            "location": 1336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.refreshTabData": {
            "name": "refreshTabData",
            "location": 1339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.refreshTabFilter": {
            "name": "refreshTabFilter",
            "location": 1349,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.decodeCondType": {
            "name": "decodeCondType",
            "location": 1585,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "strCondType": []
            }
        },
        "FLTableDB.tdbFilterBuildWhere": {
            "name": "tdbFilterBuildWhere",
            "location": 1599,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.initFakeEditor": {
            "name": "initFakeEditor",
            "location": 1824,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.refresh": {
            "name": "refresh",
            "location": 1865,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refreshHead": [
                    "bool"
                ],
                "refreshData": [
                    "bool"
                ]
            }
        },
        "FLTableDB.refreshDelayed": {
            "name": "refreshDelayed",
            "location": 2098,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msec": [
                    "int"
                ],
                "refreshData": [
                    "bool"
                ]
            }
        },
        "FLTableDB.refreshDelayed2": {
            "name": "refreshDelayed2",
            "location": 2112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.insertRecord": {
            "name": "insertRecord",
            "location": 2117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wait": [
                    "bool"
                ]
            }
        },
        "FLTableDB.editRecord": {
            "name": "editRecord",
            "location": 2144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wait": [
                    "bool"
                ]
            }
        },
        "FLTableDB.browseRecord": {
            "name": "browseRecord",
            "location": 2169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wait": [
                    "bool"
                ]
            }
        },
        "FLTableDB.deleteRecord": {
            "name": "deleteRecord",
            "location": 2184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wait": [
                    "bool"
                ]
            }
        },
        "FLTableDB.copyRecord": {
            "name": "copyRecord",
            "location": 2211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.putFirstCol": {
            "name": "putFirstCol",
            "location": 2238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": []
            }
        },
        "FLTableDB.putSecondCol": {
            "name": "putSecondCol",
            "location": 2272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": []
            }
        },
        "FLTableDB.moveCol": {
            "name": "moveCol",
            "location": 2292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_": [],
                "to": [],
                "firstSearch": [
                    "bool"
                ]
            }
        },
        "FLTableDB.seekCursor": {
            "name": "seekCursor",
            "location": 2391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setEnabled": {
            "name": "setEnabled",
            "location": 2420,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLTableDB.setColumnWidth": {
            "name": "setColumnWidth",
            "location": 2426,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [],
                "w": []
            }
        },
        "FLTableDB.setCurrentRow": {
            "name": "setCurrentRow",
            "location": 2437,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "FLTableDB.columnWidth": {
            "name": "columnWidth",
            "location": 2451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "FLTableDB.setRowHeight": {
            "name": "setRowHeight",
            "location": 2458,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "h": []
            }
        },
        "FLTableDB.rowHeight": {
            "name": "rowHeight",
            "location": 2468,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "FLTableDB.exportToOds": {
            "name": "exportToOds",
            "location": 2474,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.switchSortOrder": {
            "name": "switchSortOrder",
            "location": 2642,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": [
                    "int"
                ]
            }
        },
        "FLTableDB.filterRecords": {
            "name": "filterRecords",
            "location": 2660,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "FLTableDB.setSortOrder": {
            "name": "setSortOrder",
            "location": 2726,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ascending": [
                    "bool"
                ],
                "col_order": [
                    "None"
                ]
            }
        },
        "FLTableDB.isSortOrderAscending": {
            "name": "isSortOrderAscending",
            "location": 2740,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.activeTabData": {
            "name": "activeTabData",
            "location": 2743,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLTableDB.activeTabFilter": {
            "name": "activeTabFilter",
            "location": 2755,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "FLTableDB.tdbFilterClear": {
            "name": "tdbFilterClear",
            "location": 2767,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.primarysKeysChecked": {
            "name": "primarysKeysChecked",
            "location": 2802,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.clearChecked": {
            "name": "clearChecked",
            "location": 2805,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTableDB.setPrimaryKeyChecked": {
            "name": "setPrimaryKeyChecked",
            "location": 2808,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "b": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fltexteditoutput.py": {
        "FLTextEditOutput.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "FLTextEditOutput.write": {
            "name": "write",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "txt": []
            }
        },
        "FLTextEditOutput.close": {
            "name": "close",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fltimeedit.py": {
        "FLTimeEdit.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "FLTimeEdit.setTime": {
            "name": "setTime",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fltranslations.py": {
        "FLTranslate": {
            "name": "FLTranslate",
            "location": 123,
            "return": [],
            "arguments": {
                "group": [],
                "context": [],
                "translate": [
                    "bool"
                ]
            }
        },
        "FLTranslations.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTranslations.loadTsFile": {
            "name": "loadTsFile",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tor": [],
                "ts_file_name": [],
                "verbose": []
            }
        },
        "FLTranslations.releaseTsFile": {
            "name": "releaseTsFile",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ts_file_name": [],
                "verbose": [],
                "stripped": []
            }
        },
        "FLTranslations.lrelease": {
            "name": "lrelease",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ts_input_file": [],
                "qm_output_file": [],
                "stripped": [
                    "bool"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fltranslator.py": {
        "FLTranslator.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [],
                "multiLang": [
                    "bool"
                ],
                "sysTrans": [
                    "bool"
                ]
            }
        },
        "FLTranslator.loadTsContent": {
            "name": "loadTsContent",
            "location": 46,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "FLTranslator.translate": {
            "name": "translate",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLTranslator.load_ts": {
            "name": "load_ts",
            "location": 99,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "file_name": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/fluintvalidator.py": {
        "FLUIntValidator.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLUIntValidator.validate": {
            "name": "validate",
            "location": 18,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": [],
                "input_": [],
                "pos_cursor": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flutil.py": {
        "FLUtil.deleteCascade": {
            "name": "deleteCascade",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "collector": [],
                "field": [],
                "sub_objs": [],
                "using": []
            }
        },
        "FLUtil.partInteger": {
            "name": "partInteger",
            "location": 114,
            "return": [
                "int"
            ],
            "arguments": {
                "n": []
            }
        },
        "FLUtil.partDecimal": {
            "name": "partDecimal",
            "location": 128,
            "return": [
                "int"
            ],
            "arguments": {
                "n": []
            }
        },
        "FLUtil.unidades": {
            "name": "unidades",
            "location": 143,
            "return": [],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.utf8": {
            "name": "utf8",
            "location": 156,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "FLUtil.centenamillar": {
            "name": "centenamillar",
            "location": 166,
            "return": [],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.decenas": {
            "name": "decenas",
            "location": 186,
            "return": [],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.centenas": {
            "name": "centenas",
            "location": 207,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.unidadesmillar": {
            "name": "unidadesmillar",
            "location": 229,
            "return": [],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.decenasmillar": {
            "name": "decenasmillar",
            "location": 251,
            "return": [],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.enLetra": {
            "name": "enLetra",
            "location": 268,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.enLetraMoneda": {
            "name": "enLetraMoneda",
            "location": 299,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "n": [],
                "m": []
            }
        },
        "FLUtil.enLetraMonedaEuro": {
            "name": "enLetraMonedaEuro",
            "location": 336,
            "return": [],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.letraDni": {
            "name": "letraDni",
            "location": 352,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.nombreCampos": {
            "name": "nombreCampos",
            "location": 363,
            "return": [],
            "arguments": {
                "cls": [],
                "tablename": []
            }
        },
        "FLUtil.calcularDC": {
            "name": "calcularDC",
            "location": 378,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.dateDMAtoAMD": {
            "name": "dateDMAtoAMD",
            "location": 422,
            "return": [],
            "arguments": {
                "cls": [],
                "f": []
            }
        },
        "FLUtil.dateAMDtoDMA": {
            "name": "dateAMDtoDMA",
            "location": 435,
            "return": [],
            "arguments": {
                "cls": [],
                "f": []
            }
        },
        "FLUtil.formatoMiles": {
            "name": "formatoMiles",
            "location": 449,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "s": []
            }
        },
        "FLUtil.translate": {
            "name": "translate",
            "location": 493,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "group": [],
                "text_": []
            }
        },
        "FLUtil.numCreditCard": {
            "name": "numCreditCard",
            "location": 514,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "num": []
            }
        },
        "FLUtil.nextCounter": {
            "name": "nextCounter",
            "location": 538,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FLUtil.nextSequence": {
            "name": "nextSequence",
            "location": 545,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "nivel": [],
                "secuencia": [],
                "ultimo": []
            }
        },
        "FLUtil.isFLDefFile": {
            "name": "isFLDefFile",
            "location": 564,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "head": []
            }
        },
        "FLUtil.addDays": {
            "name": "addDays",
            "location": 599,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "fecha": [],
                "offset": []
            }
        },
        "FLUtil.addMonths": {
            "name": "addMonths",
            "location": 617,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "fecha": [],
                "offset": []
            }
        },
        "FLUtil.addYears": {
            "name": "addYears",
            "location": 635,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "fecha": [],
                "offset": []
            }
        },
        "FLUtil.daysTo": {
            "name": "daysTo",
            "location": 652,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "d1": [],
                "d2": []
            }
        },
        "FLUtil.buildNumber": {
            "name": "buildNumber",
            "location": 694,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "v": [],
                "tipo": [],
                "partDecimal": []
            }
        },
        "FLUtil.readSettingEntry": {
            "name": "readSettingEntry",
            "location": 725,
            "return": [],
            "arguments": {
                "cls": [],
                "key": [],
                "def_": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.writeSettingEntry": {
            "name": "writeSettingEntry",
            "location": 740,
            "return": [],
            "arguments": {
                "cls": [],
                "key": [],
                "value": []
            }
        },
        "FLUtil.readDBSettingEntry": {
            "name": "readDBSettingEntry",
            "location": 754,
            "return": [
                "None",
                "bool"
            ],
            "arguments": {
                "cls": [],
                "key": []
            }
        },
        "FLUtil.writeDBSettingEntry": {
            "name": "writeDBSettingEntry",
            "location": 780,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "key": [],
                "value": []
            }
        },
        "FLUtil.roundFieldValue": {
            "name": "roundFieldValue",
            "location": 812,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "value": [],
                "table_name": [],
                "field_name": []
            }
        },
        "FLUtil.sqlSelect": {
            "name": "sqlSelect",
            "location": 834,
            "return": [],
            "arguments": {
                "cls": [],
                "f": [],
                "s": [],
                "w": [],
                "tL": [
                    "None"
                ],
                "size": [
                    "int"
                ],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.quickSqlSelect": {
            "name": "quickSqlSelect",
            "location": 848,
            "return": [],
            "arguments": {
                "cls": [],
                "f": [],
                "s": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.sqlInsert": {
            "name": "sqlInsert",
            "location": 854,
            "return": [],
            "arguments": {
                "cls": [],
                "t": [],
                "fL": [],
                "vL": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.sqlUpdate": {
            "name": "sqlUpdate",
            "location": 862,
            "return": [],
            "arguments": {
                "cls": [],
                "t": [],
                "fL": [],
                "vL": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.sqlDelete": {
            "name": "sqlDelete",
            "location": 870,
            "return": [],
            "arguments": {
                "cls": [],
                "t": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.quickSqlDelete": {
            "name": "quickSqlDelete",
            "location": 876,
            "return": [],
            "arguments": {
                "cls": [],
                "t": [],
                "w": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.execSql": {
            "name": "execSql",
            "location": 882,
            "return": [],
            "arguments": {
                "cls": [],
                "sql": [],
                "connName": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.createProgressDialog": {
            "name": "createProgressDialog",
            "location": 888,
            "return": [],
            "arguments": {
                "cls": [],
                "title": [],
                "steps": [],
                "id_": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.destroyProgressDialog": {
            "name": "destroyProgressDialog",
            "location": 902,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "id_": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.setProgress": {
            "name": "setProgress",
            "location": 912,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "step_number": [],
                "id_": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.setLabelText": {
            "name": "setLabelText",
            "location": 924,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "l": [],
                "id_": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.setTotalSteps": {
            "name": "setTotalSteps",
            "location": 936,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "tS": [],
                "id_": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.domDocumentSetContent": {
            "name": "domDocumentSetContent",
            "location": 948,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "doc": [],
                "content": []
            }
        },
        "FLUtil.sha1": {
            "name": "sha1",
            "location": 980,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "str_": []
            }
        },
        "FLUtil.usha1": {
            "name": "usha1",
            "location": 996,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "data": [],
                "_len": []
            }
        },
        "FLUtil.snapShotUI": {
            "name": "snapShotUI",
            "location": 1001,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "n": []
            }
        },
        "FLUtil.saveSnapShotUI": {
            "name": "saveSnapShotUI",
            "location": 1011,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "n": [],
                "pathFile": []
            }
        },
        "FLUtil.flDecodeType": {
            "name": "flDecodeType",
            "location": 1022,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "fltype": []
            }
        },
        "FLUtil.saveIconFile": {
            "name": "saveIconFile",
            "location": 1033,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "data": [],
                "pathFile": []
            }
        },
        "FLUtil.getIdioma": {
            "name": "getIdioma",
            "location": 1043,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FLUtil.getOS": {
            "name": "getOS",
            "location": 1052,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FLUtil.serialLettertoNumber": {
            "name": "serialLettertoNumber",
            "location": 1057,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "letter": []
            }
        },
        "FLUtil.serialNumbertoLetter": {
            "name": "serialNumbertoLetter",
            "location": 1068,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "cls": [],
                "number": []
            }
        },
        "FLUtil.findFiles": {
            "name": "findFiles",
            "location": 1078,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": [],
                "paths": [],
                "filter_": [
                    "typing.Text"
                ],
                "break_on_first_match": [
                    "bool"
                ]
            }
        },
        "FLUtil.savePixmap": {
            "name": "savePixmap",
            "location": 1104,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "data": [],
                "filename": [],
                "format_": []
            }
        },
        "FLUtil.fieldType": {
            "name": "fieldType",
            "location": 1116,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "fn": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.fieldLength": {
            "name": "fieldLength",
            "location": 1133,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": [],
                "fn": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.fieldNameToAlias": {
            "name": "fieldNameToAlias",
            "location": 1152,
            "return": [],
            "arguments": {
                "cls": [],
                "fn": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.tableNameToAlias": {
            "name": "tableNameToAlias",
            "location": 1171,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.fieldAliasToName": {
            "name": "fieldAliasToName",
            "location": 1190,
            "return": [],
            "arguments": {
                "cls": [],
                "an": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.fieldAllowNull": {
            "name": "fieldAllowNull",
            "location": 1211,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "fn": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.fieldIsPrimaryKey": {
            "name": "fieldIsPrimaryKey",
            "location": 1231,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "fn": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.fieldIsCompoundKey": {
            "name": "fieldIsCompoundKey",
            "location": 1250,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "fn": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.fieldDefaultValue": {
            "name": "fieldDefaultValue",
            "location": 1273,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "fn": [],
                "tn": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.formatValue": {
            "name": "formatValue",
            "location": 1299,
            "return": [],
            "arguments": {
                "cls": [],
                "t": [],
                "v": [],
                "upper": [],
                "conn_name": [
                    "typing.Text"
                ]
            }
        },
        "FLUtil.nameUser": {
            "name": "nameUser",
            "location": 1314,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FLUtil.nameBD": {
            "name": "nameBD",
            "location": 1335,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flvar.py": {
        "FLVar.set": {
            "name": "set",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "v": []
            }
        },
        "FLVar.get": {
            "name": "get",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLVar.del_": {
            "name": "del_",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLVar.clean": {
            "name": "clean",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flwidget.py": {
        "FLWidget.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/flworkspace.py": {
        "FLWorkSpace.__getattr__": {
            "name": "__getattr__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/systype.py": {
        "SysType.translate": {
            "name": "translate",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.installACL": {
            "name": "installACL",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idacl": []
            }
        },
        "SysType.updateAreas": {
            "name": "updateAreas",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.reinit": {
            "name": "reinit",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.setCaptionMainWidget": {
            "name": "setCaptionMainWidget",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "SysType.execQSA": {
            "name": "execQSA",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "fileQSA": [],
                "args": [
                    "None"
                ]
            }
        },
        "SysType.dumpDatabase": {
            "name": "dumpDatabase",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.terminateChecksLocks": {
            "name": "terminateChecksLocks",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sqlCursor": [
                    "None"
                ]
            }
        },
        "SysType.statusDbLocksDialog": {
            "name": "statusDbLocksDialog",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locks": []
            }
        },
        "SysType.mvProjectXml": {
            "name": "mvProjectXml",
            "location": 216,
            "return": [
                "QDomDocument"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.mvProjectModules": {
            "name": "mvProjectModules",
            "location": 254,
            "return": [
                "Array"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.mvProjectExtensions": {
            "name": "mvProjectExtensions",
            "location": 281,
            "return": [
                "Array"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.calculateShaGlobal": {
            "name": "calculateShaGlobal",
            "location": 308,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.registerUpdate": {
            "name": "registerUpdate",
            "location": 320,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_": [
                    "None"
                ]
            }
        },
        "SysType.warnLocalChanges": {
            "name": "warnLocalChanges",
            "location": 364,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "changes": [
                    "None"
                ]
            }
        },
        "SysType.xmlFilesDefBd": {
            "name": "xmlFilesDefBd",
            "location": 411,
            "return": [
                "QDomDocument"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.loadModules": {
            "name": "loadModules",
            "location": 529,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_": [
                    "None"
                ],
                "warnBackup": [
                    "None"
                ]
            }
        },
        "SysType.loadAbanQPackage": {
            "name": "loadAbanQPackage",
            "location": 548,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_": [
                    "None"
                ],
                "warnBackup": [
                    "None"
                ]
            }
        },
        "SysType.loadFilesDef": {
            "name": "loadFilesDef",
            "location": 612,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "un": [
                    "None"
                ]
            }
        },
        "SysType.registerFile": {
            "name": "registerFile",
            "location": 663,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fil": [],
                "un": [
                    "None"
                ]
            }
        },
        "SysType.checkProjectName": {
            "name": "checkProjectName",
            "location": 694,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "proName": [
                    "None"
                ]
            }
        },
        "SysType.loadModulesDef": {
            "name": "loadModulesDef",
            "location": 727,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "un": [
                    "None"
                ]
            }
        },
        "SysType.registerArea": {
            "name": "registerArea",
            "location": 776,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "mod": []
            }
        },
        "SysType.registerModule": {
            "name": "registerModule",
            "location": 787,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "mod": []
            }
        },
        "SysType.questionMsgBox": {
            "name": "questionMsgBox",
            "location": 800,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ],
                "keyRemember": [],
                "txtRemember": [
                    "None"
                ],
                "forceShow": [
                    "None"
                ],
                "txtCaption": [
                    "None"
                ],
                "txtYes": [
                    "None"
                ],
                "txtNo": [
                    "None"
                ]
            }
        },
        "SysType.exportModules": {
            "name": "exportModules",
            "location": 862,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.xmlModule": {
            "name": "xmlModule",
            "location": 929,
            "return": [
                "None",
                "QDomDocument"
            ],
            "arguments": {
                "self": [],
                "idMod": [
                    "None"
                ]
            }
        },
        "SysType.fileWriteIso": {
            "name": "fileWriteIso",
            "location": 966,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fileName": [
                    "None"
                ],
                "content": [
                    "None"
                ]
            }
        },
        "SysType.fileWriteUtf8": {
            "name": "fileWriteUtf8",
            "location": 980,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "fileName": [
                    "None"
                ],
                "content": [
                    "None"
                ]
            }
        },
        "SysType.exportModule": {
            "name": "exportModule",
            "location": 994,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idMod": [
                    "None"
                ],
                "dirBasePath": [
                    "None"
                ]
            }
        },
        "SysType.importModules": {
            "name": "importModules",
            "location": 1078,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "warnBackup": [
                    "None"
                ]
            }
        },
        "SysType.selectModsDialog": {
            "name": "selectModsDialog",
            "location": 1134,
            "return": [
                "Array"
            ],
            "arguments": {
                "self": [],
                "listFilesMod": []
            }
        },
        "SysType.importModule": {
            "name": "importModule",
            "location": 1185,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "modPath": []
            }
        },
        "SysType.importFiles": {
            "name": "importFiles",
            "location": 1241,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "dirPath": [
                    "None"
                ],
                "ext": [
                    "None"
                ],
                "idMod": [
                    "None"
                ]
            }
        },
        "SysType.importFile": {
            "name": "importFile",
            "location": 1271,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "filePath": [
                    "None"
                ],
                "idMod": [
                    "None"
                ]
            }
        },
        "SysType.importReportAr": {
            "name": "importReportAr",
            "location": 1337,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "filePath": [],
                "idMod": [
                    "None"
                ],
                "content": [
                    "None"
                ]
            }
        },
        "SysType.runTransaction": {
            "name": "runTransaction",
            "location": 1365,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "None"
                ],
                "oParam": []
            }
        },
        "SysType.search_git_updates": {
            "name": "search_git_updates",
            "location": 1426,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "None"
                ]
            }
        },
        "SysType.qsaExceptions": {
            "name": "qsaExceptions",
            "location": 1465,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysType.serverTime": {
            "name": "serverTime",
            "location": 1471,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.localChanges": {
            "name": "localChanges",
            "location": 1483,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SysType.interactiveGUI": {
            "name": "interactiveGUI",
            "location": 1500,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.__init__": {
            "name": "__init__",
            "location": 1521,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": [
                    "None"
                ],
                "dirBase": [
                    "None"
                ],
                "showGui": [
                    "None"
                ],
                "funLog": [
                    "None"
                ]
            }
        },
        "AbanQDbDumper.init": {
            "name": "init",
            "location": 1531,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.buildGui": {
            "name": "buildGui",
            "location": 1536,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.initDump": {
            "name": "initDump",
            "location": 1597,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.genFileName": {
            "name": "genFileName",
            "location": 1612,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.changeDirBase": {
            "name": "changeDirBase",
            "location": 1625,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dir_": [
                    "None"
                ]
            }
        },
        "AbanQDbDumper.addLog": {
            "name": "addLog",
            "location": 1638,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "None"
                ]
            }
        },
        "AbanQDbDumper.setState": {
            "name": "setState",
            "location": 1644,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ok": [
                    "None"
                ],
                "msg": [
                    "None"
                ]
            }
        },
        "AbanQDbDumper.state": {
            "name": "state",
            "location": 1648,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.launchProc": {
            "name": "launchProc",
            "location": 1651,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "AbanQDbDumper.readFromStdout": {
            "name": "readFromStdout",
            "location": 1665,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.readFromStderr": {
            "name": "readFromStderr",
            "location": 1670,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.dumpDatabase": {
            "name": "dumpDatabase",
            "location": 1675,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.dumpPostgreSQL": {
            "name": "dumpPostgreSQL",
            "location": 1727,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.dumpMySQL": {
            "name": "dumpMySQL",
            "location": 1775,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbanQDbDumper.dumpTableToCsv": {
            "name": "dumpTableToCsv",
            "location": 1816,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "table": [
                    "None"
                ],
                "dirBase": [
                    "None"
                ]
            }
        },
        "AbanQDbDumper.dumpAllTablesToCsv": {
            "name": "dumpAllTablesToCsv",
            "location": 1881,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQGlobalFunctions.set": {
            "name": "set",
            "location": 1904,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "functionName": [
                    "None"
                ],
                "globalFunction": [
                    "None"
                ]
            }
        },
        "AQGlobalFunctions.get": {
            "name": "get",
            "location": 1907,
            "return": [],
            "arguments": {
                "self": [],
                "functionName": [
                    "None"
                ]
            }
        },
        "AQGlobalFunctions.exec_": {
            "name": "exec_",
            "location": 1910,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "functionName": [
                    "None"
                ]
            }
        },
        "AQGlobalFunctions.mapConnect": {
            "name": "mapConnect",
            "location": 1915,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "None"
                ],
                "signal": [
                    "None"
                ],
                "functionName": [
                    "None"
                ]
            }
        },
        "AQGlobalFunctions.mapConnect._": {
            "name": "_",
            "location": 1920,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/fllegacy/__init__.py": {},
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqboolflagstate.py": {
        "AQBoolFlagStateList.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQBoolFlagStateList.append": {
            "name": "append",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AQBoolFlagStateList.pushOnTop": {
            "name": "pushOnTop",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AQBoolFlagStateList.erase": {
            "name": "erase",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AQBoolFlagStateList.find": {
            "name": "find",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AQBoolFlagStateList.current": {
            "name": "current",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqformdb.py": {
        "AQFormDB": {
            "name": "AQFormDB",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "action_name": [],
                "parent": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqods.py": {
        "AQOdsColor": {
            "name": "AQOdsColor",
            "location": 313,
            "return": [
                "str"
            ],
            "arguments": {
                "color": []
            }
        },
        "AQOdsGenerator_class.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQOdsGenerator_class.generateOds": {
            "name": "generateOds",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_name": []
            }
        },
        "AQOdsGenerator_class.set_doc_": {
            "name": "set_doc_",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "document": []
            }
        },
        "AQOdsSpreadSheet.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generator": []
            }
        },
        "AQOdsSpreadSheet.close": {
            "name": "close",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQOdsImage.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "width": [],
                "height": [],
                "x": [],
                "y": [],
                "link": []
            }
        },
        "AQOdsSheet.__init__": {
            "name": "__init__",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spread_sheet": [],
                "sheet_name": []
            }
        },
        "AQOdsSheet.rowsCount": {
            "name": "rowsCount",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsSheet.close": {
            "name": "close",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQOdsRow.__init__": {
            "name": "__init__",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sheet": []
            }
        },
        "AQOdsRow.addBgColor": {
            "name": "addBgColor",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "color": []
            }
        },
        "AQOdsRow.opIn": {
            "name": "opIn",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "opt": []
            }
        },
        "AQOdsRow.__newCell__": {
            "name": "__newCell__",
            "location": 263,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQOdsRow.close": {
            "name": "close",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQOdsRow.coveredCell": {
            "name": "coveredCell",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AQOdsRow.setFixedPrecision": {
            "name": "setFixedPrecision",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "AQOdsStyle_class.alignCenter": {
            "name": "alignCenter",
            "location": 325,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.alignRight": {
            "name": "alignRight",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.alignLeft": {
            "name": "alignLeft",
            "location": 343,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.textBold": {
            "name": "textBold",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.textItalic": {
            "name": "textItalic",
            "location": 363,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.borderBottom": {
            "name": "borderBottom",
            "location": 374,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.borderLeft": {
            "name": "borderLeft",
            "location": 383,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.borderRight": {
            "name": "borderRight",
            "location": 394,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AQOdsStyle_class.borderTop": {
            "name": "borderTop",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqs.py": {
        "AQS.ColorDialog_getColor": {
            "name": "ColorDialog_getColor",
            "location": 53,
            "return": [],
            "arguments": {
                "color": [
                    "None"
                ],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ]
            }
        },
        "AQS.toXml": {
            "name": "toXml",
            "location": 79,
            "return": [
                "QDomDocument"
            ],
            "arguments": {
                "cls": [],
                "obj_": [],
                "include_children": [
                    "bool"
                ],
                "include_complex_types": [
                    "bool"
                ]
            }
        },
        "AQS.pixmap_fromMimeSource": {
            "name": "pixmap_fromMimeSource",
            "location": 140,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "AQS.sha1": {
            "name": "sha1",
            "location": 155,
            "return": [],
            "arguments": {
                "cls": [],
                "byte_array": []
            }
        },
        "AQS.Application_setOverrideCursor": {
            "name": "Application_setOverrideCursor",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "shape": [],
                "replace": [
                    "bool"
                ]
            }
        },
        "AQS.Application_restoreOverrideCursor": {
            "name": "Application_restoreOverrideCursor",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "AQS.__getattr__": {
            "name": "__getattr__",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "AQS.TextCodec_codecForName": {
            "name": "TextCodec_codecForName",
            "location": 211,
            "return": [],
            "arguments": {
                "cls": [],
                "codec_name": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqsettings.py": {},
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqsmtpclient.py": {},
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqsobjectfactory.py": {},
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqsql.py": {
        "AQSql.database": {
            "name": "database",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "connection_name": [
                    "typing.Text"
                ]
            }
        },
        "AQSql.update": {
            "name": "update",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "table_or_cursor": [],
                "fields": [],
                "values": [],
                "where": [
                    "typing.Text"
                ],
                "conn": [
                    "typing.Text"
                ]
            }
        },
        "AQSql.insert": {
            "name": "insert",
            "location": 93,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "table_or_cursor": [],
                "fields": [],
                "values": [],
                "where": [
                    "typing.Text"
                ],
                "conn": [
                    "typing.Text"
                ]
            }
        },
        "AQSql.del_": {
            "name": "del_",
            "location": 135,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cur_or_table": [],
                "where": [
                    "typing.Text"
                ],
                "conn_name": [
                    "typing.Text"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqsqlcursor.py": {},
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqsqlquery.py": {},
    "pineboo-master/pineboolib/fllegacy/aqsobjects/aqutil.py": {
        "AQUtil.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/fllegacy/aqsobjects/__init__.py": {},
    "pineboo-master/pineboolib/interfaces/cursoraccessmode.py": {},
    "pineboo-master/pineboolib/interfaces/dgi_schema.py": {},
    "pineboo-master/pineboolib/interfaces/iapicursor.py": {
        "IApiCursor.close": {
            "name": "close",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IApiCursor.execute": {
            "name": "execute",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "query": [],
                "vars": [
                    "None"
                ]
            }
        },
        "IApiCursor.executemany": {
            "name": "executemany",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "query": [],
                "vars_list": []
            }
        },
        "IApiCursor.callproc": {
            "name": "callproc",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "procname": []
            }
        },
        "IApiCursor.setinputsizes": {
            "name": "setinputsizes",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sizes": []
            }
        },
        "IApiCursor.fetch": {
            "name": "fetch",
            "location": 42,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "IApiCursor.__iter__": {
            "name": "__iter__",
            "location": 46,
            "return": [
                "typing.Generator[list]"
            ],
            "arguments": {
                "self": []
            }
        },
        "IApiCursor.fetchone": {
            "name": "fetchone",
            "location": 50,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "IApiCursor.fetchall": {
            "name": "fetchall",
            "location": 54,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "IApiCursor.scroll": {
            "name": "scroll",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "value": [],
                "mode": [
                    "typing.Text"
                ]
            }
        },
        "IApiCursor.nextset": {
            "name": "nextset",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IApiCursor.setoutputsize": {
            "name": "setoutputsize",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "size": [],
                "column": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/interfaces/iconnection.py": {
        "IConnection.finish": {
            "name": "finish",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.connectionName": {
            "name": "connectionName",
            "location": 42,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.useConn": {
            "name": "useConn",
            "location": 46,
            "return": [
                "IConnection"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "typing.Text"
                ]
            }
        },
        "IConnection.removeConn": {
            "name": "removeConn",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "typing.Text"
                ]
            }
        },
        "IConnection.isOpen": {
            "name": "isOpen",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.tables": {
            "name": "tables",
            "location": 62,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "t_": [
                    "None"
                ]
            }
        },
        "IConnection.database": {
            "name": "database",
            "location": 66,
            "return": [
                "IConnection"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "None"
                ]
            }
        },
        "IConnection.DBName": {
            "name": "DBName",
            "location": 70,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.driver": {
            "name": "driver",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.session": {
            "name": "session",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.engine": {
            "name": "engine",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.declarative_base": {
            "name": "declarative_base",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.dictDatabases": {
            "name": "dictDatabases",
            "location": 98,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.cursor": {
            "name": "cursor",
            "location": 103,
            "return": [
                "IApiCursor"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.lastActiveCursor": {
            "name": "lastActiveCursor",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.conectar": {
            "name": "conectar",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_returnword": []
            }
        },
        "IConnection.driverName": {
            "name": "driverName",
            "location": 118,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.driverAlias": {
            "name": "driverAlias",
            "location": 123,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.driverNameToDriverAlias": {
            "name": "driverNameToDriverAlias",
            "location": 128,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "IConnection.lastError": {
            "name": "lastError",
            "location": 133,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.host": {
            "name": "host",
            "location": 138,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.port": {
            "name": "port",
            "location": 143,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.user": {
            "name": "user",
            "location": 148,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.returnword": {
            "name": "returnword",
            "location": 153,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.seek": {
            "name": "seek",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "offs": [],
                "whence": [
                    "int"
                ]
            }
        },
        "IConnection.manager": {
            "name": "manager",
            "location": 162,
            "return": [
                "IManager"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.md5TuplesStateTable": {
            "name": "md5TuplesStateTable",
            "location": 171,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "curname": []
            }
        },
        "IConnection.setInteractiveGUI": {
            "name": "setInteractiveGUI",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "IConnection.setQsaExceptions": {
            "name": "setQsaExceptions",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "IConnection.db": {
            "name": "db",
            "location": 190,
            "return": [
                "IConnection"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.dbAux": {
            "name": "dbAux",
            "location": 195,
            "return": [
                "IConnection"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.formatValue": {
            "name": "formatValue",
            "location": 204,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "t": [],
                "v": [],
                "upper": []
            }
        },
        "IConnection.formatValueLike": {
            "name": "formatValueLike",
            "location": 209,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "t": [],
                "v": [],
                "upper": []
            }
        },
        "IConnection.canSavePoint": {
            "name": "canSavePoint",
            "location": 214,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.canTransaction": {
            "name": "canTransaction",
            "location": 219,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.doTransaction": {
            "name": "doTransaction",
            "location": 224,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cursor": []
            }
        },
        "IConnection.transactionLevel": {
            "name": "transactionLevel",
            "location": 229,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.doRollback": {
            "name": "doRollback",
            "location": 234,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cur": []
            }
        },
        "IConnection.interactiveGUI": {
            "name": "interactiveGUI",
            "location": 239,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.doCommit": {
            "name": "doCommit",
            "location": 244,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cur": [],
                "notify": [
                    "bool"
                ]
            }
        },
        "IConnection.canDetectLocks": {
            "name": "canDetectLocks",
            "location": 249,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.commit": {
            "name": "commit",
            "location": 254,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.managerModules": {
            "name": "managerModules",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.canOverPartition": {
            "name": "canOverPartition",
            "location": 268,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.savePoint": {
            "name": "savePoint",
            "location": 273,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "save_point": []
            }
        },
        "IConnection.releaseSavePoint": {
            "name": "releaseSavePoint",
            "location": 278,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "save_point": []
            }
        },
        "IConnection.Mr_Proper": {
            "name": "Mr_Proper",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.rollbackSavePoint": {
            "name": "rollbackSavePoint",
            "location": 288,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "save_point": []
            }
        },
        "IConnection.transaction": {
            "name": "transaction",
            "location": 293,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.commitTransaction": {
            "name": "commitTransaction",
            "location": 298,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.rollbackTransaction": {
            "name": "rollbackTransaction",
            "location": 303,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IConnection.nextSerialVal": {
            "name": "nextSerialVal",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "table": [],
                "field": []
            }
        },
        "IConnection.existsTable": {
            "name": "existsTable",
            "location": 313,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "IConnection.createTable": {
            "name": "createTable",
            "location": 318,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tmd": []
            }
        },
        "IConnection.mismatchedTable": {
            "name": "mismatchedTable",
            "location": 323,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tablename": [],
                "tmd": []
            }
        },
        "IConnection.normalizeValue": {
            "name": "normalizeValue",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "IConnection.queryUpdate": {
            "name": "queryUpdate",
            "location": 333,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "update": [],
                "filter": []
            }
        },
        "IConnection.execute_query": {
            "name": "execute_query",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "IConnection.alterTable": {
            "name": "alterTable",
            "location": 343,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "mtd_1": [],
                "mtd_2": [],
                "key": [],
                "force": [
                    "bool"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/interfaces/ifieldmetadata.py": {
        "IFieldMetaData.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.__len__": {
            "name": "__len__",
            "location": 20,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.addRelationMD": {
            "name": "addRelationMD",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "IFieldMetaData.alias": {
            "name": "alias",
            "location": 28,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.allowNull": {
            "name": "allowNull",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.associatedField": {
            "name": "associatedField",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.associatedFieldFilterTo": {
            "name": "associatedFieldFilterTo",
            "location": 40,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.associatedFieldName": {
            "name": "associatedFieldName",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.defaultValue": {
            "name": "defaultValue",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.editable": {
            "name": "editable",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.formatAssignValue": {
            "name": "formatAssignValue",
            "location": 56,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "fieldName": [],
                "value": [],
                "upper": []
            }
        },
        "IFieldMetaData.generated": {
            "name": "generated",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.getIndexOptionsList": {
            "name": "getIndexOptionsList",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "IFieldMetaData.hasOptionsList": {
            "name": "hasOptionsList",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.inicializeFLFieldMetaData": {
            "name": "inicializeFLFieldMetaData",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "IFieldMetaData.inicializeNewFLFieldMetaData": {
            "name": "inicializeNewFLFieldMetaData",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "aN": [],
                "isPrimaryKey": [],
                "t": [],
                "length_": [
                    "int"
                ],
                "c": [
                    "bool"
                ],
                "v": [
                    "bool"
                ],
                "ed": [
                    "bool"
                ],
                "pI": [
                    "int"
                ],
                "pD": [
                    "int"
                ],
                "iNX": [
                    "bool"
                ],
                "uNI": [
                    "bool"
                ],
                "coun": [
                    "bool"
                ],
                "defValue": [
                    "None"
                ],
                "oT": [
                    "bool"
                ],
                "rX": [
                    "None"
                ],
                "vG": [
                    "bool"
                ],
                "gen": [
                    "bool"
                ],
                "iCK": [
                    "bool"
                ]
            }
        },
        "IFieldMetaData.isCompoundKey": {
            "name": "isCompoundKey",
            "location": 102,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.isPrimaryKey": {
            "name": "isPrimaryKey",
            "location": 106,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.length": {
            "name": "length",
            "location": 110,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.metadata": {
            "name": "metadata",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.name": {
            "name": "name",
            "location": 118,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.optionsList": {
            "name": "optionsList",
            "location": 122,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.outTransaction": {
            "name": "outTransaction",
            "location": 126,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.partDecimal": {
            "name": "partDecimal",
            "location": 130,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.partInteger": {
            "name": "partInteger",
            "location": 134,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.regExpValidator": {
            "name": "regExpValidator",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.relationM1": {
            "name": "relationM1",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.setAssociatedField": {
            "name": "setAssociatedField",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r_or_name": [],
                "f": []
            }
        },
        "IFieldMetaData.setEditable": {
            "name": "setEditable",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ed": []
            }
        },
        "IFieldMetaData.setFullyCalculated": {
            "name": "setFullyCalculated",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "IFieldMetaData.setMetadata": {
            "name": "setMetadata",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mtd": []
            }
        },
        "IFieldMetaData.setOptionsList": {
            "name": "setOptionsList",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ol": []
            }
        },
        "IFieldMetaData.setTrimed": {
            "name": "setTrimed",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "IFieldMetaData.setVisible": {
            "name": "setVisible",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "IFieldMetaData.type": {
            "name": "type",
            "location": 174,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.visible": {
            "name": "visible",
            "location": 178,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IFieldMetaData.visibleGrid": {
            "name": "visibleGrid",
            "location": 182,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/interfaces/imanager.py": {
        "IManager.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.action": {
            "name": "action",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "IManager.alterTable": {
            "name": "alterTable",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "IManager.checkMetaData": {
            "name": "checkMetaData",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": []
            }
        },
        "IManager.cleanupMetaData": {
            "name": "cleanupMetaData",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.createSystemTable": {
            "name": "createSystemTable",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "IManager.createTable": {
            "name": "createTable",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n_or_tmd": []
            }
        },
        "IManager.existsTable": {
            "name": "existsTable",
            "location": 62,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "cache": [
                    "bool"
                ]
            }
        },
        "IManager.fetchLargeValue": {
            "name": "fetchLargeValue",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refKey": []
            }
        },
        "IManager.finish": {
            "name": "finish",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.formatAssignValue": {
            "name": "formatAssignValue",
            "location": 74,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.formatAssignValueLike": {
            "name": "formatAssignValueLike",
            "location": 78,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.formatValue": {
            "name": "formatValue",
            "location": 82,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "fMD_or_type": [],
                "v": [],
                "upper": [
                    "bool"
                ]
            }
        },
        "IManager.formatValueLike": {
            "name": "formatValueLike",
            "location": 86,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.init": {
            "name": "init",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.initCount": {
            "name": "initCount",
            "location": 94,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.isSystemTable": {
            "name": "isSystemTable",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "IManager.loadTables": {
            "name": "loadTables",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IManager.metadata": {
            "name": "metadata",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "quick": [
                    "bool"
                ]
            }
        },
        "IManager.metadataField": {
            "name": "metadataField",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [],
                "v": [
                    "bool"
                ],
                "ed": [
                    "bool"
                ]
            }
        },
        "IManager.metadataRelation": {
            "name": "metadataRelation",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "relation": []
            }
        },
        "IManager.query": {
            "name": "query",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "parent": []
            }
        },
        "IManager.storeLargeValue": {
            "name": "storeLargeValue",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mtd": [],
                "largeValue": []
            }
        }
    },
    "pineboo-master/pineboolib/interfaces/isqlcursor.py": {
        "ISqlCursor.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "None"
                ],
                "autopopulate": [
                    "bool"
                ],
                "connectionName_or_db": [
                    "None"
                ],
                "cR": [
                    "None"
                ],
                "r": [
                    "None"
                ],
                "parent": [
                    "None"
                ]
            }
        },
        "ISqlCursor.init": {
            "name": "init",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "autopopulate": [],
                "cR": [],
                "r": []
            }
        },
        "ISqlCursor.conn": {
            "name": "conn",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.table": {
            "name": "table",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setName": {
            "name": "setName",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "autop": []
            }
        },
        "ISqlCursor.metadata": {
            "name": "metadata",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.currentRegister": {
            "name": "currentRegister",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.modeAccess": {
            "name": "modeAccess",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.filter": {
            "name": "filter",
            "location": 61,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.mainFilter": {
            "name": "mainFilter",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.action": {
            "name": "action",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.actionName": {
            "name": "actionName",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setAction": {
            "name": "setAction",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "ISqlCursor.setMainFilter": {
            "name": "setMainFilter",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [],
                "doRefresh": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.setModeAccess": {
            "name": "setModeAccess",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ISqlCursor.connectionName": {
            "name": "connectionName",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setValueBuffer": {
            "name": "setValueBuffer",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": [],
                "v": []
            }
        },
        "ISqlCursor.valueBuffer": {
            "name": "valueBuffer",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "ISqlCursor.fetchLargeValue": {
            "name": "fetchLargeValue",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ISqlCursor.valueBufferCopy": {
            "name": "valueBufferCopy",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "ISqlCursor.setEdition": {
            "name": "setEdition",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": [],
                "m": [
                    "None"
                ]
            }
        },
        "ISqlCursor.restoreEditionFlag": {
            "name": "restoreEditionFlag",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ISqlCursor.setBrowse": {
            "name": "setBrowse",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": [],
                "m": [
                    "None"
                ]
            }
        },
        "ISqlCursor.restoreBrowseFlag": {
            "name": "restoreBrowseFlag",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ISqlCursor.meta_model": {
            "name": "meta_model",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setContext": {
            "name": "setContext",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": [
                    "None"
                ]
            }
        },
        "ISqlCursor.context": {
            "name": "context",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.fieldDisabled": {
            "name": "fieldDisabled",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "ISqlCursor.inTransaction": {
            "name": "inTransaction",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.transaction": {
            "name": "transaction",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lock": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.rollback": {
            "name": "rollback",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.commit": {
            "name": "commit",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "notify": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.size": {
            "name": "size",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.openFormInMode": {
            "name": "openFormInMode",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": [],
                "cont": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.isNull": {
            "name": "isNull",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "ISqlCursor.updateBufferCopy": {
            "name": "updateBufferCopy",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.isModifiedBuffer": {
            "name": "isModifiedBuffer",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setAskForCancelChanges": {
            "name": "setAskForCancelChanges",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "ISqlCursor.setActivatedCheckIntegrity": {
            "name": "setActivatedCheckIntegrity",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "ISqlCursor.activatedCheckIntegrity": {
            "name": "activatedCheckIntegrity",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setActivatedCommitActions": {
            "name": "setActivatedCommitActions",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "ISqlCursor.activatedCommitActions": {
            "name": "activatedCommitActions",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setActivatedBufferChanged": {
            "name": "setActivatedBufferChanged",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "activated_bufferchanged": []
            }
        },
        "ISqlCursor.activatedBufferChanged": {
            "name": "activatedBufferChanged",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setActivatedBufferCommited": {
            "name": "setActivatedBufferCommited",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "activated_buffercommited": []
            }
        },
        "ISqlCursor.activatedBufferCommited": {
            "name": "activatedBufferCommited",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.cursorRelation": {
            "name": "cursorRelation",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.relation": {
            "name": "relation",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setUnLock": {
            "name": "setUnLock",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": [],
                "v": []
            }
        },
        "ISqlCursor.isLocked": {
            "name": "isLocked",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.buffer": {
            "name": "buffer",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.bufferCopy": {
            "name": "bufferCopy",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.bufferIsNull": {
            "name": "bufferIsNull",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "ISqlCursor.bufferSetNull": {
            "name": "bufferSetNull",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "ISqlCursor.bufferCopyIsNull": {
            "name": "bufferCopyIsNull",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "ISqlCursor.bufferCopySetNull": {
            "name": "bufferCopySetNull",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos_or_name": []
            }
        },
        "ISqlCursor.setNull": {
            "name": "setNull",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ISqlCursor.db": {
            "name": "db",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.curName": {
            "name": "curName",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.filterAssoc": {
            "name": "filterAssoc",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fieldName": [],
                "tableMD": [
                    "None"
                ]
            }
        },
        "ISqlCursor.calculateField": {
            "name": "calculateField",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ISqlCursor.model": {
            "name": "model",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.selection": {
            "name": "selection",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.at": {
            "name": "at",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.isValid": {
            "name": "isValid",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.refresh": {
            "name": "refresh",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": [
                    "None"
                ]
            }
        },
        "ISqlCursor.refreshBuffer": {
            "name": "refreshBuffer",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setEditMode": {
            "name": "setEditMode",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.seek": {
            "name": "seek",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "i": [],
                "relative": [
                    "None"
                ],
                "emite": [
                    "None"
                ]
            }
        },
        "ISqlCursor.next": {
            "name": "next",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "emite": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.moveby": {
            "name": "moveby",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "ISqlCursor.prev": {
            "name": "prev",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "emite": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.move": {
            "name": "move",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "ISqlCursor.first": {
            "name": "first",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "emite": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.last": {
            "name": "last",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "emite": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.select": {
            "name": "select",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_filter": [
                    "None"
                ],
                "sort": [
                    "None"
                ]
            }
        },
        "ISqlCursor.setSort": {
            "name": "setSort",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sortO": []
            }
        },
        "ISqlCursor.insertRecord": {
            "name": "insertRecord",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.editRecord": {
            "name": "editRecord",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.browseRecord": {
            "name": "browseRecord",
            "location": 345,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.deleteRecord": {
            "name": "deleteRecord",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.copyRecord": {
            "name": "copyRecord",
            "location": 353,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.chooseRecord": {
            "name": "chooseRecord",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.setForwardOnly": {
            "name": "setForwardOnly",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "ISqlCursor.commitBuffer": {
            "name": "commitBuffer",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "emite": [
                    "bool"
                ],
                "checkLocks": [
                    "bool"
                ]
            }
        },
        "ISqlCursor.commitBufferCursorRelation": {
            "name": "commitBufferCursorRelation",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.transactionLevel": {
            "name": "transactionLevel",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.transactionsOpened": {
            "name": "transactionsOpened",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ISqlCursor.rollbackOpened": {
            "name": "rollbackOpened",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": [
                    "int"
                ],
                "msg": [
                    "None"
                ]
            }
        },
        "ISqlCursor.commitOpened": {
            "name": "commitOpened",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": [
                    "int"
                ],
                "msg": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/interfaces/itablemetadata.py": {
        "ITableMetaData.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "q": []
            }
        },
        "ITableMetaData.addFieldMD": {
            "name": "addFieldMD",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "ITableMetaData.field": {
            "name": "field",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "ITableMetaData.fieldIsIndex": {
            "name": "fieldIsIndex",
            "location": 25,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "field_name": []
            }
        },
        "ITableMetaData.fieldList": {
            "name": "fieldList",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ITableMetaData.fieldListOfCompoundKey": {
            "name": "fieldListOfCompoundKey",
            "location": 33,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "ITableMetaData.fieldNameToAlias": {
            "name": "fieldNameToAlias",
            "location": 37,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "fN": []
            }
        },
        "ITableMetaData.fieldNames": {
            "name": "fieldNames",
            "location": 41,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "ITableMetaData.fieldNamesUnlock": {
            "name": "fieldNamesUnlock",
            "location": 45,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "ITableMetaData.inCache": {
            "name": "inCache",
            "location": 49,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ITableMetaData.indexFieldObject": {
            "name": "indexFieldObject",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "ITableMetaData.indexPos": {
            "name": "indexPos",
            "location": 57,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "field_name": []
            }
        },
        "ITableMetaData.inicializeNewFLTableMetaData": {
            "name": "inicializeNewFLTableMetaData",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "a": [],
                "q": []
            }
        },
        "ITableMetaData.isQuery": {
            "name": "isQuery",
            "location": 65,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ITableMetaData.name": {
            "name": "name",
            "location": 69,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ITableMetaData.primaryKey": {
            "name": "primaryKey",
            "location": 73,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "prefixTable": []
            }
        },
        "ITableMetaData.query": {
            "name": "query",
            "location": 77,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ITableMetaData.relation": {
            "name": "relation",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fN": [],
                "fFN": [],
                "fTN": []
            }
        },
        "ITableMetaData.setCompoundKey": {
            "name": "setCompoundKey",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cK": []
            }
        },
        "ITableMetaData.setConcurWarn": {
            "name": "setConcurWarn",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "ITableMetaData.setDetectLocks": {
            "name": "setDetectLocks",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "ITableMetaData.setFTSFunction": {
            "name": "setFTSFunction",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ftsfun": []
            }
        }
    },
    "pineboo-master/pineboolib/interfaces/__init__.py": {},
    "pineboo-master/pineboolib/loader/connection.py": {
        "config_dbconn": {
            "name": "config_dbconn",
            "location": 15,
            "return": [
                "ProjectConfig",
                "None"
            ],
            "arguments": {
                "options": []
            }
        },
        "connect_to_db": {
            "name": "connect_to_db",
            "location": 37,
            "return": [
                "PNConnection"
            ],
            "arguments": {
                "config": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/dgi.py": {
        "load_dgi": {
            "name": "load_dgi",
            "location": 19,
            "return": [],
            "arguments": {
                "name": [],
                "param": []
            }
        },
        "DGILoader.load_dgi_qt": {
            "name": "load_dgi_qt",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "DGILoader.load_dgi_aqnext": {
            "name": "load_dgi_aqnext",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "DGILoader.load_dgi_fcgi": {
            "name": "load_dgi_fcgi",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "DGILoader.load_dgi_jsonrpc": {
            "name": "load_dgi_jsonrpc",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "DGILoader.load_dgi_server": {
            "name": "load_dgi_server",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "DGILoader.load_dgi": {
            "name": "load_dgi",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/init_project.py": {
        "init_project": {
            "name": "init_project",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "DGI": [],
                "options": [],
                "project": [],
                "mainForm": [],
                "app": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/main.py": {
        "startup_no_X": {
            "name": "startup_no_X",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "startup": {
            "name": "startup",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "enable_gui": [
                    "None"
                ]
            }
        },
        "init_logging": {
            "name": "init_logging",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "loglevel": [],
                "logtime": [
                    "bool"
                ],
                "trace_loggers": [
                    "list"
                ]
            }
        },
        "exec_main_with_profiler": {
            "name": "exec_main_with_profiler",
            "location": 93,
            "return": [],
            "arguments": {
                "options": []
            }
        },
        "init_cli": {
            "name": "init_cli",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "catch_ctrl_c": [
                    "bool"
                ]
            }
        },
        "init_gui": {
            "name": "init_gui",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "setup_gui": {
            "name": "setup_gui",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "options": []
            }
        },
        "init_testing": {
            "name": "init_testing",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "exec_main": {
            "name": "exec_main",
            "location": 230,
            "return": [
                "int"
            ],
            "arguments": {
                "options": []
            }
        },
        "init_cli._excepthook": {
            "name": "_excepthook",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "type_": [],
                "value": [],
                "traceback": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/options.py": {
        "parse_options": {
            "name": "parse_options",
            "location": 8,
            "return": [],
            "arguments": {
                "custom_argv": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/loader/preload.py": {
        "preload_actions": {
            "name": "preload_actions",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "project": [],
                "forceload": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/loader/projectconfig.py": {
        "ProjectConfig.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "database": [
                    "None"
                ],
                "host": [
                    "None"
                ],
                "port": [
                    "None"
                ],
                "type": [
                    "None"
                ],
                "username": [
                    "None"
                ],
                "password": [
                    "None"
                ],
                "load_xml": [
                    "None"
                ],
                "connstring": [
                    "None"
                ],
                "description": [
                    "None"
                ],
                "filename": [
                    "None"
                ],
                "project_password": [
                    "typing.Text"
                ]
            }
        },
        "ProjectConfig.get_uri": {
            "name": "get_uri",
            "location": 81,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "show_password": [
                    "bool"
                ]
            }
        },
        "ProjectConfig.__repr__": {
            "name": "__repr__",
            "location": 111,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectConfig.__eq__": {
            "name": "__eq__",
            "location": 126,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ProjectConfig.load_projectxml": {
            "name": "load_projectxml",
            "location": 140,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectConfig.save_projectxml": {
            "name": "save_projectxml",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "overwrite_existing": [
                    "bool"
                ]
            }
        },
        "ProjectConfig.translate_connstring": {
            "name": "translate_connstring",
            "location": 263,
            "return": [
                "tuple[typing.Union[typing.Text,int]]"
            ],
            "arguments": {
                "cls": [],
                "connstring": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/utils.py": {
        "monkey_patch_connect": {
            "name": "monkey_patch_connect",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "monkey_patch_connect.BoundSignal.slot_decorator": {
            "name": "slot_decorator",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "slot": [],
                "connect_stack": []
            }
        },
        "monkey_patch_connect.BoundSignal.connect": {
            "name": "connect",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "slot": [],
                "type_": [
                    "int"
                ],
                "no_receiver_check": [
                    "bool"
                ]
            }
        },
        "monkey_patch_connect.BoundSignal.emit": {
            "name": "emit",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "monkey_patch_connect.BoundSignal.slot_decorator.decorated_slot": {
            "name": "decorated_slot",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/loader/__init__.py": {},
    "pineboo-master/pineboolib/loader/dlgconnect/conn_dialog.py": {
        "show_connection_dialog": {
            "name": "show_connection_dialog",
            "location": 12,
            "return": [
                "None",
                "ProjectConfig"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/dlgconnect/dlgconnect.py": {
        "DlgConnect.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.load": {
            "name": "load",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.cleanProfileForm": {
            "name": "cleanProfileForm",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.loadProfiles": {
            "name": "loadProfiles",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.showOptions": {
            "name": "showOptions",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.open": {
            "name": "open",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.saveProfile": {
            "name": "saveProfile",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.deleteProfile": {
            "name": "deleteProfile",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.editProfile": {
            "name": "editProfile",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.updatePort": {
            "name": "updatePort",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.enablePassword": {
            "name": "enablePassword",
            "location": 378,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "None"
                ]
            }
        },
        "DlgConnect.updateDBName": {
            "name": "updateDBName",
            "location": 414,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.enableProfilePassword": {
            "name": "enableProfilePassword",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DlgConnect.change_profile_dir": {
            "name": "change_profile_dir",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/dlgconnect/__init__.py": {},
    "pineboo-master/pineboolib/loader/tests/test_connection.py": {
        "TestConfigDBConn.test_connstring": {
            "name": "test_connstring",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfigDBConn.test_project": {
            "name": "test_project",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfigDBConn.test_project_passwd": {
            "name": "test_project_passwd",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_pass": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/tests/test_main.py": {
        "TestMain.test_startup": {
            "name": "test_startup",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_parse_options": [],
                "mock_exec_main": [],
                "mock_sys_exit": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/tests/test_projectconfig.py": {
        "TestProjectConfig.test_basic": {
            "name": "test_basic",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProjectConfig.test_read_write": {
            "name": "test_read_write",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProjectConfig.test_read_write2": {
            "name": "test_read_write2",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/loader/tests/__init__.py": {
        "fixture_path": {
            "name": "fixture_path",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "fixture_read": {
            "name": "fixture_read",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/plugins/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_schema.py": {
        "dgi_schema.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.name": {
            "name": "name",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.alias": {
            "name": "alias",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.create_app": {
            "name": "create_app",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.alternativeMain": {
            "name": "alternativeMain",
            "location": 51,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "dgi_schema.accept_file": {
            "name": "accept_file",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "dgi_schema.useDesktop": {
            "name": "useDesktop",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.setUseDesktop": {
            "name": "setUseDesktop",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "dgi_schema.localDesktop": {
            "name": "localDesktop",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.setLocalDesktop": {
            "name": "setLocalDesktop",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "dgi_schema.setUseMLDefault": {
            "name": "setUseMLDefault",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "dgi_schema.useMLDefault": {
            "name": "useMLDefault",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.setParameter": {
            "name": "setParameter",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "dgi_schema.extraProjectInit": {
            "name": "extraProjectInit",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.showInitBanner": {
            "name": "showInitBanner",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.mainForm": {
            "name": "mainForm",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.interactiveGUI": {
            "name": "interactiveGUI",
            "location": 92,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.processEvents": {
            "name": "processEvents",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.show_object_not_found_warnings": {
            "name": "show_object_not_found_warnings",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.loadReferences": {
            "name": "loadReferences",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.mobilePlatform": {
            "name": "mobilePlatform",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.isDeployed": {
            "name": "isDeployed",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.iconSize": {
            "name": "iconSize",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.alternative_content_cached": {
            "name": "alternative_content_cached",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.alternative_script_path": {
            "name": "alternative_script_path",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "script_name": []
            }
        },
        "dgi_schema.use_model": {
            "name": "use_model",
            "location": 135,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.__getattr__": {
            "name": "__getattr__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "dgi_schema.resolveObject": {
            "name": "resolveObject",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": [],
                "name": []
            }
        },
        "dgi_schema.sys_mtds": {
            "name": "sys_mtds",
            "location": 155,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.use_alternative_credentials": {
            "name": "use_alternative_credentials",
            "location": 158,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_schema.debug": {
            "name": "debug",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "txt": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/dgi_aqnext.py": {
        "dgi_aqnext.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.extraProjectInit": {
            "name": "extraProjectInit",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.setParameter": {
            "name": "setParameter",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "dgi_aqnext.mainForm": {
            "name": "mainForm",
            "location": 39,
            "return": [
                "mainForm"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.__getattr__": {
            "name": "__getattr__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "dgi_aqnext.exec_": {
            "name": "exec_",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.processEvents": {
            "name": "processEvents",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.interactiveGUI": {
            "name": "interactiveGUI",
            "location": 60,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.authenticate": {
            "name": "authenticate",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.use_authentication": {
            "name": "use_authentication",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.use_model": {
            "name": "use_model",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.alternative_content_cached": {
            "name": "alternative_content_cached",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.content_cached": {
            "name": "content_cached",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_folder": [],
                "db_name": [],
                "module_id": [],
                "file_ext": [],
                "file_name": [],
                "sha_key": []
            }
        },
        "dgi_aqnext.use_alternative_credentials": {
            "name": "use_alternative_credentials",
            "location": 90,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.get_nameuser": {
            "name": "get_nameuser",
            "location": 93,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.sys_mtds": {
            "name": "sys_mtds",
            "location": 99,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_aqnext.__content_cached__old__": {
            "name": "__content_cached__old__",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_dir": [],
                "db_name": [],
                "module_id": [],
                "ext_": [],
                "name_": [],
                "sha_key": []
            }
        },
        "dgi_aqnext.alternative_script_path": {
            "name": "alternative_script_path",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "script_name": [],
                "app": [
                    "None"
                ]
            }
        },
        "dgi_aqnext.register_script": {
            "name": "register_script",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [],
                "module_name": [],
                "script_name": [],
                "prefix": []
            }
        },
        "dgi_aqnext.load_meta_model": {
            "name": "load_meta_model",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action_name": [],
                "opt": [
                    "None"
                ]
            }
        },
        "dgi_aqnext.get_master_cursor": {
            "name": "get_master_cursor",
            "location": 250,
            "return": [
                "FLSqlCursor",
                "None"
            ],
            "arguments": {
                "self": [],
                "prefix": [],
                "template": [
                    "typing.Text"
                ]
            }
        },
        "dgi_aqnext.init_cursor": {
            "name": "init_cursor",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": [],
                "params": [],
                "template": []
            }
        },
        "dgi_aqnext.populate_with_params": {
            "name": "populate_with_params",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": [],
                "params": []
            }
        },
        "dgi_aqnext.cursor2json": {
            "name": "cursor2json",
            "location": 323,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "cursor": [],
                "template": [
                    "None"
                ]
            }
        },
        "dgi_aqnext.getYBschema": {
            "name": "getYBschema",
            "location": 392,
            "return": [
                "tuple[dict]"
            ],
            "arguments": {
                "self": [],
                "cursor": [],
                "template": [
                    "None"
                ]
            }
        },
        "dgi_aqnext.get_foreign_fields": {
            "name": "get_foreign_fields",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "meta_model": [],
                "template": [
                    "None"
                ]
            }
        },
        "dgi_aqnext.pagination": {
            "name": "pagination",
            "location": 488,
            "return": [
                "pagination_class"
            ],
            "arguments": {
                "self": [],
                "data_": [],
                "query": []
            }
        },
        "dgi_aqnext.get_queryset": {
            "name": "get_queryset",
            "location": 491,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "prefix": [],
                "params": []
            }
        },
        "dgi_aqnext.get_paginated_response": {
            "name": "get_paginated_response",
            "location": 523,
            "return": [
                "paginated_object"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "params": [],
                "size": [
                    "None"
                ]
            }
        },
        "dgi_aqnext.carga_datos_custom_filter": {
            "name": "carga_datos_custom_filter",
            "location": 541,
            "return": [
                "dict[, dict[typing.Text, ]]"
            ],
            "arguments": {
                "self": [],
                "table": [],
                "usuario": []
            }
        },
        "dgi_aqnext._convert_to_ordered_dict": {
            "name": "_convert_to_ordered_dict",
            "location": 556,
            "return": [
                "list[dict[list, ]]"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "pagination_class.__init__": {
            "name": "__init__",
            "location": 580,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_": [],
                "query": [
                    "dict"
                ]
            }
        },
        "pagination_class.get_next_offset": {
            "name": "get_next_offset",
            "location": 587,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "pagination_class.get_previous_offset": {
            "name": "get_previous_offset",
            "location": 598,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/dgi_objects/auth.py": {
        "auth.authenticate": {
            "name": "authenticate",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/dgi_objects/flsqlcursor.py": {
        "DelayedObjectProxyLoader.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "DelayedObjectProxyLoader.__load": {
            "name": "__load",
            "location": 34,
            "return": [
                "None",
                "meta_model"
            ],
            "arguments": {
                "self": []
            }
        },
        "DelayedObjectProxyLoader.__getattr__": {
            "name": "__getattr__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DelayedObjectProxyLoader.__le__": {
            "name": "__le__",
            "location": 103,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DelayedObjectProxyLoader.__lt__": {
            "name": "__lt__",
            "location": 107,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DelayedObjectProxyLoader.__ne__": {
            "name": "__ne__",
            "location": 111,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DelayedObjectProxyLoader.__eq__": {
            "name": "__eq__",
            "location": 115,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DelayedObjectProxyLoader.__gt__": {
            "name": "__gt__",
            "location": 119,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DelayedObjectProxyLoader.__ge__": {
            "name": "__ge__",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DelayedObjectProxyLoader.__str__": {
            "name": "__str__",
            "location": 127,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "DelayedObjectProxyLoader.resolve_expression": {
            "name": "resolve_expression",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.__init__": {
            "name": "__init__",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cursor": [],
                "stabla": []
            }
        },
        "FLSqlCursor.buffer_changed_signal": {
            "name": "buffer_changed_signal",
            "location": 178,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "scampo": []
            }
        },
        "FLSqlCursor.buffer_commited_signal": {
            "name": "buffer_commited_signal",
            "location": 184,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.before_commit_signal": {
            "name": "before_commit_signal",
            "location": 196,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.after_commit_signal": {
            "name": "after_commit_signal",
            "location": 205,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.inicia_valores_cursor_signal": {
            "name": "inicia_valores_cursor_signal",
            "location": 214,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.buffer_changed_label_signal": {
            "name": "buffer_changed_label_signal",
            "location": 220,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "scampo": []
            }
        },
        "FLSqlCursor.validate_cursor_signal": {
            "name": "validate_cursor_signal",
            "location": 232,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.validate_transaction_signal": {
            "name": "validate_transaction_signal",
            "location": 238,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.cursor_accepted_signal": {
            "name": "cursor_accepted_signal",
            "location": 244,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursor.assoc_model": {
            "name": "assoc_model",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module_name": [
                    "None"
                ]
            }
        },
        "meta_model.__init__": {
            "name": "__init__",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [],
                "cursor": []
            }
        },
        "meta_model.__getattr__": {
            "name": "__getattr__",
            "location": 289,
            "return": [
                "None",
                "meta_model"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/dgi_objects/formdbwidget.py": {
        "FormDBWidget.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "project": [],
                "parent": []
            }
        },
        "FormDBWidget._connect": {
            "name": "_connect",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": []
            }
        },
        "FormDBWidget._disconnect": {
            "name": "_disconnect",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": []
            }
        },
        "FormDBWidget.obj": {
            "name": "obj",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.parent": {
            "name": "parent",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget._class_init": {
            "name": "_class_init",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.init": {
            "name": "init",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.closeEvent": {
            "name": "closeEvent",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "FormDBWidget.doCleanUp": {
            "name": "doCleanUp",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.clear_connections": {
            "name": "clear_connections",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.child": {
            "name": "child",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "child_name": []
            }
        },
        "FormDBWidget.cursor": {
            "name": "cursor",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.parentWidget": {
            "name": "parentWidget",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.__getattr__": {
            "name": "__getattr__",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FormDBWidget.__iter__": {
            "name": "__iter__",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.__next__": {
            "name": "__next__",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.legacy": {
            "name": "legacy",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/dgi_objects/qlistview.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/dgi_objects/qmainwindow.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_aqnext/dgi_objects/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_fcgi/dgi_fcgi.py": {
        "dgi_fcgi.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_fcgi.alternativeMain": {
            "name": "alternativeMain",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "main_": []
            }
        },
        "dgi_fcgi.setParameter": {
            "name": "setParameter",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "parser.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prj": [],
                "callScript": []
            }
        },
        "parser.call": {
            "name": "call",
            "location": 61,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "environ": [],
                "start_response": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_fcgi/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_jsonrpc/dgi_jsonrpc.py": {
        "parser.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mainForm": []
            }
        },
        "parser.addQueque": {
            "name": "addQueque",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "parser.receive": {
            "name": "receive",
            "location": 40,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "parser.mainWindow": {
            "name": "mainWindow",
            "location": 50,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "parser.mainForm": {
            "name": "mainForm",
            "location": 65,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "parser.callFunction": {
            "name": "callFunction",
            "location": 80,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "parser.queqe": {
            "name": "queqe",
            "location": 104,
            "return": [
                "bool",
                "typing.Text",
                "list[tuple]"
            ],
            "arguments": {}
        },
        "parser.action": {
            "name": "action",
            "location": 127,
            "return": [
                "typing.Text",
                "bool"
            ],
            "arguments": {}
        },
        "dgi_jsonrpc.__init__": {
            "name": "__init__",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_jsonrpc.extraProjectInit": {
            "name": "extraProjectInit",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_jsonrpc.setParameter": {
            "name": "setParameter",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "param": []
            }
        },
        "dgi_jsonrpc.mainForm": {
            "name": "mainForm",
            "location": 189,
            "return": [
                "MainForm"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_jsonrpc.exec_": {
            "name": "exec_",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_jsonrpc.launchServer": {
            "name": "launchServer",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_jsonrpc.loadUI": {
            "name": "loadUI",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "widget": []
            }
        },
        "dgi_jsonrpc.showWidget": {
            "name": "showWidget",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "widget": []
            }
        },
        "dgi_jsonrpc.__getattr__": {
            "name": "__getattr__",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "parserJson.__init__": {
            "name": "__init__",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "parserJson.isInDgi": {
            "name": "isInDgi",
            "location": 260,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "property": [],
                "type": []
            }
        },
        "parserJson.manageProperties": {
            "name": "manageProperties",
            "location": 270,
            "return": [
                "None",
                "list",
                "dict"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "parserJson.parse": {
            "name": "parse",
            "location": 296,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "MainForm.__init__": {
            "name": "__init__",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainForm.json_process": {
            "name": "json_process",
            "location": 347,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "MainForm.runAction": {
            "name": "runAction",
            "location": 358,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "json_mainWindow.__init__": {
            "name": "__init__",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "json_mainWindow.show": {
            "name": "show",
            "location": 427,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "json_mainWindow.loadAction": {
            "name": "loadAction",
            "location": 430,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "json_mainWindow.loadConnection": {
            "name": "loadConnection",
            "location": 433,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "json_mainWindow.loadToolBarsAction": {
            "name": "loadToolBarsAction",
            "location": 436,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "json_mainWindow.addToJson": {
            "name": "addToJson",
            "location": 439,
            "return": [],
            "arguments": {
                "self": [],
                "xml": []
            }
        },
        "json_mainWindow.json_areas": {
            "name": "json_areas",
            "location": 444,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "json_mainWindow.json_modules": {
            "name": "json_modules",
            "location": 447,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "json_mainWindow.json_actions": {
            "name": "json_actions",
            "location": 466,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "json_mainWindow.json_image": {
            "name": "json_image",
            "location": 488,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "json_mainWindow.initScript": {
            "name": "initScript",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "json_mainWindow.initModule": {
            "name": "initModule",
            "location": 497,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "json_MainForm.setDebugLevel": {
            "name": "setDebugLevel",
            "location": 511,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "number": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_jsonrpc/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/dgi_qt.py": {
        "dgi_qt.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_qt.__getattr__": {
            "name": "__getattr__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "dgi_qt.msgBoxWarning": {
            "name": "msgBoxWarning",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "dgi_qt.createUI": {
            "name": "createUI",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "connector": [
                    "None"
                ],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ]
            }
        },
        "dgi_qt.about_pineboo": {
            "name": "about_pineboo",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/dgi_objects/progress_dialog_manager.py": {
        "ProgressDialogManager.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProgressDialogManager.create": {
            "name": "create",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [],
                "steps": [],
                "id_": []
            }
        },
        "ProgressDialogManager.destroy": {
            "name": "destroy",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_": []
            }
        },
        "ProgressDialogManager.setProgress": {
            "name": "setProgress",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "step_number": [],
                "id_": []
            }
        },
        "ProgressDialogManager.setLabelText": {
            "name": "setLabelText",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "l": [],
                "id_": []
            }
        },
        "ProgressDialogManager.setTotalSteps": {
            "name": "setTotalSteps",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tS": [],
                "id_": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/dgi_objects/splash_screen.py": {
        "splashscreen.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "splashscreen.showMessage": {
            "name": "showMessage",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "splashscreen.hide": {
            "name": "hide",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "splashscreen.show": {
            "name": "show",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/dgi_objects/status_help_msg.py": {
        "StatusHelpMsg.send": {
            "name": "send",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text_": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/dgi_objects/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/dgi_objects/dlg_about/about_pineboo.py": {
        "AboutPineboo.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutPineboo.load": {
            "name": "load",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutPineboo.load_components": {
            "name": "load_components",
            "location": 31,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "AboutPineboo.to_clipboard": {
            "name": "to_clipboard",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_qt/dgi_objects/dlg_about/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_server/dgi_server.py": {
        "normalize_data": {
            "name": "normalize_data",
            "location": 42,
            "return": [
                "list"
            ],
            "arguments": {
                "data": []
            }
        },
        "parser_options.hello": {
            "name": "hello",
            "location": 27,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "parser_options.db_name": {
            "name": "db_name",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "parser_options.__getattr__": {
            "name": "__getattr__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "parser.receive": {
            "name": "receive",
            "location": 58,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "parser.call_function": {
            "name": "call_function",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "parser.dbdata": {
            "name": "dbdata",
            "location": 80,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "dgi_server.__init__": {
            "name": "__init__",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_server.alternativeMain": {
            "name": "alternativeMain",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "dgi_server.exec_": {
            "name": "exec_",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_server.launchServer": {
            "name": "launchServer",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "dgi_server.__getattr__": {
            "name": "__getattr__",
            "location": 251,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "dgi_server.accept_file": {
            "name": "accept_file",
            "location": 254,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_server/__init__.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_server/dgi_objects/formdbwidget.py": {
        "FormDBWidget.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "project": [],
                "parent": []
            }
        },
        "FormDBWidget._connect": {
            "name": "_connect",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": []
            }
        },
        "FormDBWidget._disconnect": {
            "name": "_disconnect",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": []
            }
        },
        "FormDBWidget.obj": {
            "name": "obj",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.parent": {
            "name": "parent",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget._class_init": {
            "name": "_class_init",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.init": {
            "name": "init",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.closeEvent": {
            "name": "closeEvent",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "FormDBWidget.doCleanUp": {
            "name": "doCleanUp",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.clear_connections": {
            "name": "clear_connections",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.child": {
            "name": "child",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "child_name": []
            }
        },
        "FormDBWidget.cursor": {
            "name": "cursor",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.parentWidget": {
            "name": "parentWidget",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.__getattr__": {
            "name": "__getattr__",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FormDBWidget.__iter__": {
            "name": "__iter__",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.__next__": {
            "name": "__next__",
            "location": 190,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/dgi/dgi_server/dgi_objects/qlistview.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_server/dgi_objects/qmainwindow.py": {},
    "pineboo-master/pineboolib/plugins/dgi/dgi_server/dgi_objects/__init__.py": {},
    "pineboo-master/pineboolib/plugins/mainform/__init__.py": {},
    "pineboo-master/pineboolib/plugins/mainform/eneboo/eneboo.py": {
        "DockListView.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "parent": [],
                "name": [],
                "title": []
            }
        },
        "DockListView.writeState": {
            "name": "writeState",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DockListView.readState": {
            "name": "readState",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DockListView.initFromWidget": {
            "name": "initFromWidget",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "DockListView.change_state": {
            "name": "change_state",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "DockListView.activateAction": {
            "name": "activateAction",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "DockListView.update": {
            "name": "update",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "action_group": [],
                "reverse": []
            }
        },
        "DockListView.buildListView": {
            "name": "buildListView",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "parent_item": [],
                "parent_element": [],
                "ag": [],
                "reverse": []
            }
        },
        "MainForm.__init__": {
            "name": "__init__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.eventFilter": {
            "name": "eventFilter",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "o": [],
                "e": []
            }
        },
        "MainForm.createUi": {
            "name": "createUi",
            "location": 346,
            "return": [],
            "arguments": {
                "self": [],
                "ui_file": []
            }
        },
        "MainForm.exit": {
            "name": "exit",
            "location": 354,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.writeState": {
            "name": "writeState",
            "location": 367,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.readState": {
            "name": "readState",
            "location": 419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.loadTabs": {
            "name": "loadTabs",
            "location": 461,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.init": {
            "name": "init",
            "location": 500,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initFromWidget": {
            "name": "initFromWidget",
            "location": 515,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "MainForm.initEventFilter": {
            "name": "initEventFilter",
            "location": 532,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initModule": {
            "name": "initModule",
            "location": 555,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "MainForm.removeCurrentPage": {
            "name": "removeCurrentPage",
            "location": 570,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "MainForm.removeAllPages": {
            "name": "removeAllPages",
            "location": 585,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.addForm": {
            "name": "addForm",
            "location": 596,
            "return": [],
            "arguments": {
                "self": [],
                "action_name": [],
                "icono": []
            }
        },
        "MainForm.addRecent": {
            "name": "addRecent",
            "location": 625,
            "return": [],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "MainForm.addMark": {
            "name": "addMark",
            "location": 662,
            "return": [],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "MainForm.addMarkFromItem": {
            "name": "addMarkFromItem",
            "location": 685,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "pos": []
            }
        },
        "MainForm.removeMarkFromItem": {
            "name": "removeMarkFromItem",
            "location": 705,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "pos": []
            }
        },
        "MainForm.updateMenu": {
            "name": "updateMenu",
            "location": 727,
            "return": [],
            "arguments": {
                "self": [],
                "action_group": [],
                "parent": []
            }
        },
        "MainForm.updateMenuAndDocks": {
            "name": "updateMenuAndDocks",
            "location": 761,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.updateActionGroup": {
            "name": "updateActionGroup",
            "location": 816,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initTabWidget": {
            "name": "initTabWidget",
            "location": 917,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initHelpMenu": {
            "name": "initHelpMenu",
            "location": 936,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initConfigMenu": {
            "name": "initConfigMenu",
            "location": 957,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initTextLabels": {
            "name": "initTextLabels",
            "location": 969,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initDocks": {
            "name": "initDocks",
            "location": 985,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.cloneAction": {
            "name": "cloneAction",
            "location": 1009,
            "return": [],
            "arguments": {
                "self": [],
                "act": [],
                "parent": []
            }
        },
        "MainForm.addWidgetActions": {
            "name": "addWidgetActions",
            "location": 1027,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "actGroup": [],
                "wi": []
            }
        },
        "MainForm.widgetActions": {
            "name": "widgetActions",
            "location": 1048,
            "return": [],
            "arguments": {
                "self": [],
                "ui_file": [],
                "parent": []
            }
        },
        "MainForm.iconSet16x16": {
            "name": "iconSet16x16",
            "location": 1149,
            "return": [],
            "arguments": {
                "self": [],
                "pix": []
            }
        },
        "MainForm.show": {
            "name": "show",
            "location": 1162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.initScript": {
            "name": "initScript",
            "location": 1168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.reinitSript": {
            "name": "reinitSript",
            "location": 1186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MainForm.triggerAction": {
            "name": "triggerAction",
            "location": 1206,
            "return": [],
            "arguments": {
                "self": [],
                "signature": []
            }
        },
        "MainForm.setDebugLevel": {
            "name": "setDebugLevel",
            "location": 1278,
            "return": [],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "MainForm.child": {
            "name": "child",
            "location": 1283,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/mainform/eneboo/__init__.py": {},
    "pineboo-master/pineboolib/plugins/mainform/eneboo_mdi/eneboo_mdi.py": {
        "MainForm.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainForm.setDebugLevel": {
            "name": "setDebugLevel",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "MainForm.initScript": {
            "name": "initScript",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MainForm.createUi": {
            "name": "createUi",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ui_file": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/mainform/eneboo_mdi/__init__.py": {},
    "pineboo-master/pineboolib/plugins/sql/flmysql_innodb.py": {
        "FLMYSQL_INNODB.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_INNODB.canSavePoint": {
            "name": "canSavePoint",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_INNODB.canTransaction": {
            "name": "canTransaction",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/flmysql_innodb2.py": {
        "FLMYSQL_INNODB2.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_INNODB2.canSavePoint": {
            "name": "canSavePoint",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_INNODB2.canTransaction": {
            "name": "canTransaction",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/flmysql_myisam.py": {
        "FLMYSQL_MYISAM.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.version": {
            "name": "version",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.driverName": {
            "name": "driverName",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.pure_python": {
            "name": "pure_python",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.safe_load": {
            "name": "safe_load",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.mobile": {
            "name": "mobile",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.isOpen": {
            "name": "isOpen",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.DBName": {
            "name": "DBName",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.connect": {
            "name": "connect",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_password": []
            }
        },
        "FLMYSQL_MYISAM.cursor": {
            "name": "cursor",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.engine": {
            "name": "engine",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.session": {
            "name": "session",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.declarative_base": {
            "name": "declarative_base",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.formatValueLike": {
            "name": "formatValueLike",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLMYSQL_MYISAM.formatValue": {
            "name": "formatValue",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLMYSQL_MYISAM.canOverPartition": {
            "name": "canOverPartition",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.tables": {
            "name": "tables",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "type_name": []
            }
        },
        "FLMYSQL_MYISAM.nextSerialVal": {
            "name": "nextSerialVal",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "table": [],
                "field": []
            }
        },
        "FLMYSQL_MYISAM.queryUpdate": {
            "name": "queryUpdate",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "update": [],
                "filter": []
            }
        },
        "FLMYSQL_MYISAM.savePoint": {
            "name": "savePoint",
            "location": 367,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLMYSQL_MYISAM.canSavePoint": {
            "name": "canSavePoint",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.canTransaction": {
            "name": "canTransaction",
            "location": 392,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.rollbackSavePoint": {
            "name": "rollbackSavePoint",
            "location": 395,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLMYSQL_MYISAM.setLastError": {
            "name": "setLastError",
            "location": 420,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "command": []
            }
        },
        "FLMYSQL_MYISAM.lastError": {
            "name": "lastError",
            "location": 423,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.commitTransaction": {
            "name": "commitTransaction",
            "location": 426,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.rollbackTransaction": {
            "name": "rollbackTransaction",
            "location": 444,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.transaction": {
            "name": "transaction",
            "location": 462,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.releaseSavePoint": {
            "name": "releaseSavePoint",
            "location": 480,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLMYSQL_MYISAM.setType": {
            "name": "setType",
            "location": 504,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "leng": []
            }
        },
        "FLMYSQL_MYISAM.refreshQuery": {
            "name": "refreshQuery",
            "location": 510,
            "return": [],
            "arguments": {
                "self": [],
                "curname": [],
                "fields": [],
                "table": [],
                "where": [],
                "cursor": [],
                "conn": []
            }
        },
        "FLMYSQL_MYISAM.fix_query": {
            "name": "fix_query",
            "location": 521,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "FLMYSQL_MYISAM.refreshFetch": {
            "name": "refreshFetch",
            "location": 529,
            "return": [],
            "arguments": {
                "self": [],
                "number": [],
                "curname": [],
                "table": [],
                "cursor": [],
                "fields": [],
                "where_filter": []
            }
        },
        "FLMYSQL_MYISAM.useThreads": {
            "name": "useThreads",
            "location": 535,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.useTimer": {
            "name": "useTimer",
            "location": 538,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.fetchAll": {
            "name": "fetchAll",
            "location": 541,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [],
                "tablename": [],
                "where_filter": [],
                "fields": [],
                "curname": []
            }
        },
        "FLMYSQL_MYISAM.existsTable": {
            "name": "existsTable",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLMYSQL_MYISAM.sqlCreateTable": {
            "name": "sqlCreateTable",
            "location": 573,
            "return": [],
            "arguments": {
                "self": [],
                "tmd": []
            }
        },
        "FLMYSQL_MYISAM.Mr_Proper": {
            "name": "Mr_Proper",
            "location": 669,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.alterTable": {
            "name": "alterTable",
            "location": 820,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "FLMYSQL_MYISAM.hasCheckColumn": {
            "name": "hasCheckColumn",
            "location": 823,
            "return": [],
            "arguments": {
                "self": [],
                "mtd": []
            }
        },
        "FLMYSQL_MYISAM.alterTable2": {
            "name": "alterTable2",
            "location": 834,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "FLMYSQL_MYISAM.insertMulti": {
            "name": "insertMulti",
            "location": 1170,
            "return": [],
            "arguments": {
                "self": [],
                "table_name": [],
                "records": []
            }
        },
        "FLMYSQL_MYISAM.mismatchedTable": {
            "name": "mismatchedTable",
            "location": 1208,
            "return": [],
            "arguments": {
                "self": [],
                "table1": [],
                "tmd_or_table2": [],
                "db_": []
            }
        },
        "FLMYSQL_MYISAM.recordInfo2": {
            "name": "recordInfo2",
            "location": 1257,
            "return": [],
            "arguments": {
                "self": [],
                "tablename": []
            }
        },
        "FLMYSQL_MYISAM.decodeSqlType": {
            "name": "decodeSqlType",
            "location": 1312,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "FLMYSQL_MYISAM.recordInfo": {
            "name": "recordInfo",
            "location": 1338,
            "return": [],
            "arguments": {
                "self": [],
                "tablename_or_query": []
            }
        },
        "FLMYSQL_MYISAM.notEqualsFields": {
            "name": "notEqualsFields",
            "location": 1387,
            "return": [],
            "arguments": {
                "self": [],
                "field1": [],
                "field2": []
            }
        },
        "FLMYSQL_MYISAM.normalizeValue": {
            "name": "normalizeValue",
            "location": 1416,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FLMYSQL_MYISAM.cascadeSupport": {
            "name": "cascadeSupport",
            "location": 1428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.canDetectLocks": {
            "name": "canDetectLocks",
            "location": 1431,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.desktopFile": {
            "name": "desktopFile",
            "location": 1434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM.execute_query": {
            "name": "execute_query",
            "location": 1437,
            "return": [],
            "arguments": {
                "self": [],
                "q": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/flmysql_myisam2.py": {
        "FLMYSQL_MYISAM2.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.version": {
            "name": "version",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.driverName": {
            "name": "driverName",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.pure_python": {
            "name": "pure_python",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.safe_load": {
            "name": "safe_load",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.mobile": {
            "name": "mobile",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.isOpen": {
            "name": "isOpen",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.DBName": {
            "name": "DBName",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.connect": {
            "name": "connect",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_password": []
            }
        },
        "FLMYSQL_MYISAM2.cursor": {
            "name": "cursor",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.engine": {
            "name": "engine",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.session": {
            "name": "session",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.declarative_base": {
            "name": "declarative_base",
            "location": 201,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.formatValueLike": {
            "name": "formatValueLike",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLMYSQL_MYISAM2.formatValue": {
            "name": "formatValue",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLMYSQL_MYISAM2.canOverPartition": {
            "name": "canOverPartition",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.tables": {
            "name": "tables",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "type_name": []
            }
        },
        "FLMYSQL_MYISAM2.nextSerialVal": {
            "name": "nextSerialVal",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "table": [],
                "field": []
            }
        },
        "FLMYSQL_MYISAM2.queryUpdate": {
            "name": "queryUpdate",
            "location": 400,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "update": [],
                "filter": []
            }
        },
        "FLMYSQL_MYISAM2.savePoint": {
            "name": "savePoint",
            "location": 405,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLMYSQL_MYISAM2.canSavePoint": {
            "name": "canSavePoint",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.canTransaction": {
            "name": "canTransaction",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.rollbackSavePoint": {
            "name": "rollbackSavePoint",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLMYSQL_MYISAM2.setLastError": {
            "name": "setLastError",
            "location": 462,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "command": []
            }
        },
        "FLMYSQL_MYISAM2.lastError": {
            "name": "lastError",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.commitTransaction": {
            "name": "commitTransaction",
            "location": 470,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.rollbackTransaction": {
            "name": "rollbackTransaction",
            "location": 489,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.transaction": {
            "name": "transaction",
            "location": 514,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.releaseSavePoint": {
            "name": "releaseSavePoint",
            "location": 533,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLMYSQL_MYISAM2.setType": {
            "name": "setType",
            "location": 558,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "leng": []
            }
        },
        "FLMYSQL_MYISAM2.refreshQuery": {
            "name": "refreshQuery",
            "location": 565,
            "return": [],
            "arguments": {
                "self": [],
                "curname": [],
                "fields": [],
                "table": [],
                "where": [],
                "cursor": [],
                "conn": []
            }
        },
        "FLMYSQL_MYISAM2.fix_query": {
            "name": "fix_query",
            "location": 578,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "FLMYSQL_MYISAM2.refreshFetch": {
            "name": "refreshFetch",
            "location": 587,
            "return": [],
            "arguments": {
                "self": [],
                "number": [],
                "curname": [],
                "table": [],
                "cursor": [],
                "fields": [],
                "where_filter": []
            }
        },
        "FLMYSQL_MYISAM2.useThreads": {
            "name": "useThreads",
            "location": 594,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.useTimer": {
            "name": "useTimer",
            "location": 598,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.fetchAll": {
            "name": "fetchAll",
            "location": 602,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [],
                "tablename": [],
                "where_filter": [],
                "fields": [],
                "curname": []
            }
        },
        "FLMYSQL_MYISAM2.existsTable": {
            "name": "existsTable",
            "location": 623,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLMYSQL_MYISAM2.sqlCreateTable": {
            "name": "sqlCreateTable",
            "location": 636,
            "return": [],
            "arguments": {
                "self": [],
                "tmd": []
            }
        },
        "FLMYSQL_MYISAM2.Mr_Proper": {
            "name": "Mr_Proper",
            "location": 733,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.alterTable": {
            "name": "alterTable",
            "location": 885,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "FLMYSQL_MYISAM2.hasCheckColumn": {
            "name": "hasCheckColumn",
            "location": 889,
            "return": [],
            "arguments": {
                "self": [],
                "mtd": []
            }
        },
        "FLMYSQL_MYISAM2.alterTable2": {
            "name": "alterTable2",
            "location": 901,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "FLMYSQL_MYISAM2.insertMulti": {
            "name": "insertMulti",
            "location": 1239,
            "return": [],
            "arguments": {
                "self": [],
                "table_name": [],
                "records": []
            }
        },
        "FLMYSQL_MYISAM2.mismatchedTable": {
            "name": "mismatchedTable",
            "location": 1277,
            "return": [],
            "arguments": {
                "self": [],
                "table1": [],
                "tmd_or_table2": [],
                "db_": []
            }
        },
        "FLMYSQL_MYISAM2.recordInfo2": {
            "name": "recordInfo2",
            "location": 1324,
            "return": [],
            "arguments": {
                "self": [],
                "tablename": []
            }
        },
        "FLMYSQL_MYISAM2.decodeSqlType": {
            "name": "decodeSqlType",
            "location": 1380,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "FLMYSQL_MYISAM2.recordInfo": {
            "name": "recordInfo",
            "location": 1406,
            "return": [],
            "arguments": {
                "self": [],
                "tablename_or_query": []
            }
        },
        "FLMYSQL_MYISAM2.notEqualsFields": {
            "name": "notEqualsFields",
            "location": 1456,
            "return": [],
            "arguments": {
                "self": [],
                "field1": [],
                "field2": []
            }
        },
        "FLMYSQL_MYISAM2.normalizeValue": {
            "name": "normalizeValue",
            "location": 1486,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FLMYSQL_MYISAM2.cascadeSupport": {
            "name": "cascadeSupport",
            "location": 1501,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.canDetectLocks": {
            "name": "canDetectLocks",
            "location": 1505,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.desktopFile": {
            "name": "desktopFile",
            "location": 1509,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLMYSQL_MYISAM2.execute_query": {
            "name": "execute_query",
            "location": 1513,
            "return": [],
            "arguments": {
                "self": [],
                "q": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/flqpsql.py": {
        "FLQPSQL.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.useThreads": {
            "name": "useThreads",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.useTimer": {
            "name": "useTimer",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.version": {
            "name": "version",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.driverName": {
            "name": "driverName",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.isOpen": {
            "name": "isOpen",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.pure_python": {
            "name": "pure_python",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.safe_load": {
            "name": "safe_load",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.mobile": {
            "name": "mobile",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.DBName": {
            "name": "DBName",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.connect": {
            "name": "connect",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_password": []
            }
        },
        "FLQPSQL.engine": {
            "name": "engine",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.session": {
            "name": "session",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.declarative_base": {
            "name": "declarative_base",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.formatValueLike": {
            "name": "formatValueLike",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLQPSQL.formatValue": {
            "name": "formatValue",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLQPSQL.canOverPartition": {
            "name": "canOverPartition",
            "location": 287,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.nextSerialVal": {
            "name": "nextSerialVal",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "table": [],
                "field": []
            }
        },
        "FLQPSQL.savePoint": {
            "name": "savePoint",
            "location": 303,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLQPSQL.canSavePoint": {
            "name": "canSavePoint",
            "location": 321,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.canTransaction": {
            "name": "canTransaction",
            "location": 324,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.rollbackSavePoint": {
            "name": "rollbackSavePoint",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLQPSQL.setLastError": {
            "name": "setLastError",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "command": []
            }
        },
        "FLQPSQL.lastError": {
            "name": "lastError",
            "location": 350,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.commitTransaction": {
            "name": "commitTransaction",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.rollbackTransaction": {
            "name": "rollbackTransaction",
            "location": 370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.transaction": {
            "name": "transaction",
            "location": 387,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.releaseSavePoint": {
            "name": "releaseSavePoint",
            "location": 403,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLQPSQL.setType": {
            "name": "setType",
            "location": 425,
            "return": [],
            "arguments": {
                "self": [],
                "type_": [],
                "leng": []
            }
        },
        "FLQPSQL.refreshQuery": {
            "name": "refreshQuery",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "curname": [],
                "fields": [],
                "table": [],
                "where": [],
                "cursor": [],
                "conn": []
            }
        },
        "FLQPSQL.refreshFetch": {
            "name": "refreshFetch",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "number": [],
                "curname": [],
                "table": [],
                "cursor": [],
                "fields": [],
                "where_filter": []
            }
        },
        "FLQPSQL.fetchAll": {
            "name": "fetchAll",
            "location": 454,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [],
                "tablename": [],
                "where_filter": [],
                "fields": [],
                "curname": []
            }
        },
        "FLQPSQL.existsTable": {
            "name": "existsTable",
            "location": 465,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLQPSQL.sqlCreateTable": {
            "name": "sqlCreateTable",
            "location": 478,
            "return": [],
            "arguments": {
                "self": [],
                "tmd": []
            }
        },
        "FLQPSQL.mismatchedTable": {
            "name": "mismatchedTable",
            "location": 580,
            "return": [],
            "arguments": {
                "self": [],
                "table1": [],
                "tmd_or_table2": [],
                "db_": []
            }
        },
        "FLQPSQL.recordInfo2": {
            "name": "recordInfo2",
            "location": 627,
            "return": [],
            "arguments": {
                "self": [],
                "tablename": []
            }
        },
        "FLQPSQL.decodeSqlType": {
            "name": "decodeSqlType",
            "location": 672,
            "return": [],
            "arguments": {
                "self": [],
                "type_": []
            }
        },
        "FLQPSQL.recordInfo": {
            "name": "recordInfo",
            "location": 692,
            "return": [],
            "arguments": {
                "self": [],
                "tablename_or_query": []
            }
        },
        "FLQPSQL.notEqualsFields": {
            "name": "notEqualsFields",
            "location": 742,
            "return": [],
            "arguments": {
                "self": [],
                "field1": [],
                "field2": []
            }
        },
        "FLQPSQL.tables": {
            "name": "tables",
            "location": 767,
            "return": [],
            "arguments": {
                "self": [],
                "typeName": []
            }
        },
        "FLQPSQL.normalizeValue": {
            "name": "normalizeValue",
            "location": 798,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FLQPSQL.hasCheckColumn": {
            "name": "hasCheckColumn",
            "location": 801,
            "return": [],
            "arguments": {
                "self": [],
                "mtd": []
            }
        },
        "FLQPSQL.constraintExists": {
            "name": "constraintExists",
            "location": 812,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLQPSQL.queryUpdate": {
            "name": "queryUpdate",
            "location": 825,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "update": [],
                "filter": []
            }
        },
        "FLQPSQL.alterTable": {
            "name": "alterTable",
            "location": 828,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "FLQPSQL.alterTable3": {
            "name": "alterTable3",
            "location": 835,
            "return": [],
            "arguments": {
                "self": [],
                "newMTD": []
            }
        },
        "FLQPSQL.alterTable2": {
            "name": "alterTable2",
            "location": 1004,
            "return": [],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": []
            }
        },
        "FLQPSQL.insertMulti": {
            "name": "insertMulti",
            "location": 1362,
            "return": [],
            "arguments": {
                "self": [],
                "table_name": [],
                "records": []
            }
        },
        "FLQPSQL.Mr_Proper": {
            "name": "Mr_Proper",
            "location": 1403,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.cascadeSupport": {
            "name": "cascadeSupport",
            "location": 1544,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.canDetectLocks": {
            "name": "canDetectLocks",
            "location": 1547,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.fix_query": {
            "name": "fix_query",
            "location": 1550,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "FLQPSQL.desktopFile": {
            "name": "desktopFile",
            "location": 1554,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL.execute_query": {
            "name": "execute_query",
            "location": 1557,
            "return": [],
            "arguments": {
                "self": [],
                "q": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/flqpsql2.py": {
        "FLQPSQL2.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL2.useThreads": {
            "name": "useThreads",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL2.useTimer": {
            "name": "useTimer",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL2.safe_load": {
            "name": "safe_load",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLQPSQL2.connect": {
            "name": "connect",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_password": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/flremoteclient.py": {
        "base_create_dict": {
            "name": "base_create_dict",
            "location": 21,
            "return": [
                "dict[typing.Text, typing.Union[list[dict[typing.Text, list]],typing.Text]]"
            ],
            "arguments": {
                "method": [],
                "fun": [],
                "id": [],
                "arguments": [
                    "list"
                ]
            }
        },
        "FLREMOTECLIENT.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.useThreads": {
            "name": "useThreads",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.useTimer": {
            "name": "useTimer",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.desktopFile": {
            "name": "desktopFile",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.version": {
            "name": "version",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.driverName": {
            "name": "driverName",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.isOpen": {
            "name": "isOpen",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.pure_python": {
            "name": "pure_python",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.safe_load": {
            "name": "safe_load",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.mobile": {
            "name": "mobile",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.DBName": {
            "name": "DBName",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.create_dict": {
            "name": "create_dict",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "fun": [],
                "data": [
                    "list"
                ]
            }
        },
        "FLREMOTECLIENT.send_to_server": {
            "name": "send_to_server",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "js": []
            }
        },
        "FLREMOTECLIENT.connect": {
            "name": "connect",
            "location": 106,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_user_name": [],
                "db_password": []
            }
        },
        "FLREMOTECLIENT.existsTable": {
            "name": "existsTable",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLREMOTECLIENT.mismatchedTable": {
            "name": "mismatchedTable",
            "location": 133,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLREMOTECLIENT.__getattr__": {
            "name": "__getattr__",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLREMOTECLIENT.refreshQuery": {
            "name": "refreshQuery",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "curname": [],
                "fields": [],
                "table": [],
                "where": [],
                "cursor": [],
                "conn": []
            }
        },
        "FLREMOTECLIENT.refreshFetch": {
            "name": "refreshFetch",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "number": [],
                "curname": [],
                "table": [],
                "cursor": [],
                "fields": [],
                "where_filter": []
            }
        },
        "FLREMOTECLIENT.fetchAll": {
            "name": "fetchAll",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "cursor": [],
                "tablename": [],
                "where_filter": [],
                "fields": [],
                "curname": []
            }
        },
        "cursor_class.__init__": {
            "name": "__init__",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [],
                "n": []
            }
        },
        "cursor_class.__getattr__": {
            "name": "__getattr__",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "cursor_class.execute": {
            "name": "execute",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sql": []
            }
        },
        "cursor_class.close": {
            "name": "close",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "cursor_class.fetchone": {
            "name": "fetchone",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "cursor_class.fetchall": {
            "name": "fetchall",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "cursor_class.__iter__": {
            "name": "__iter__",
            "location": 225,
            "return": [
                "cursor_class"
            ],
            "arguments": {
                "self": []
            }
        },
        "cursor_class.__next__": {
            "name": "__next__",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "conn_class.__init__": {
            "name": "__init__",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_name": [],
                "driver": []
            }
        },
        "conn_class.is_valid": {
            "name": "is_valid",
            "location": 248,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "conn_class.cursor": {
            "name": "cursor",
            "location": 252,
            "return": [
                "cursor_class"
            ],
            "arguments": {
                "self": []
            }
        },
        "virtual_function.__init__": {
            "name": "__init__",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "driver": []
            }
        },
        "virtual_function.virtual": {
            "name": "virtual",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/flsqlite.py": {
        "FLSQLITE.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.pure_python": {
            "name": "pure_python",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.mobile": {
            "name": "mobile",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.version": {
            "name": "version",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.driverName": {
            "name": "driverName",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.safe_load": {
            "name": "safe_load",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.isOpen": {
            "name": "isOpen",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.cursor": {
            "name": "cursor",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.useThreads": {
            "name": "useThreads",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.useTimer": {
            "name": "useTimer",
            "location": 101,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.cascadeSupport": {
            "name": "cascadeSupport",
            "location": 104,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.canDetectLocks": {
            "name": "canDetectLocks",
            "location": 107,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.desktopFile": {
            "name": "desktopFile",
            "location": 110,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.connect": {
            "name": "connect",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "db_name": [],
                "db_host": [],
                "db_port": [],
                "db_userName": [],
                "db_password": []
            }
        },
        "FLSQLITE.engine": {
            "name": "engine",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.session": {
            "name": "session",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.declarative_base": {
            "name": "declarative_base",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.formatValueLike": {
            "name": "formatValueLike",
            "location": 167,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLSQLITE.formatValue": {
            "name": "formatValue",
            "location": 197,
            "return": [
                "typing.Text",
                "int",
                "None"
            ],
            "arguments": {
                "self": [],
                "type_": [],
                "v": [],
                "upper": []
            }
        },
        "FLSQLITE.DBName": {
            "name": "DBName",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.canOverPartition": {
            "name": "canOverPartition",
            "location": 247,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.nextSerialVal": {
            "name": "nextSerialVal",
            "location": 250,
            "return": [
                "None",
                "int"
            ],
            "arguments": {
                "self": [],
                "table": [],
                "field": []
            }
        },
        "FLSQLITE.savePoint": {
            "name": "savePoint",
            "location": 263,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLSQLITE.canSavePoint": {
            "name": "canSavePoint",
            "location": 284,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.canTransaction": {
            "name": "canTransaction",
            "location": 287,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.rollbackSavePoint": {
            "name": "rollbackSavePoint",
            "location": 290,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLSQLITE.setLastError": {
            "name": "setLastError",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [],
                "command": []
            }
        },
        "FLSQLITE.lastError": {
            "name": "lastError",
            "location": 317,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.commitTransaction": {
            "name": "commitTransaction",
            "location": 320,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.inTransaction": {
            "name": "inTransaction",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.fix_query": {
            "name": "fix_query",
            "location": 343,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "FLSQLITE.execute_query": {
            "name": "execute_query",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "q": []
            }
        },
        "FLSQLITE.rollbackTransaction": {
            "name": "rollbackTransaction",
            "location": 361,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.transaction": {
            "name": "transaction",
            "location": 375,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSQLITE.releaseSavePoint": {
            "name": "releaseSavePoint",
            "location": 388,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "FLSQLITE.setType": {
            "name": "setType",
            "location": 409,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "type_": [],
                "leng": [
                    "None"
                ]
            }
        },
        "FLSQLITE.refreshQuery": {
            "name": "refreshQuery",
            "location": 412,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "curname": [],
                "fields": [],
                "table": [],
                "where": [],
                "cursor": [],
                "conn": []
            }
        },
        "FLSQLITE.refreshFetch": {
            "name": "refreshFetch",
            "location": 416,
            "return": [],
            "arguments": {
                "self": [],
                "number": [],
                "curname": [],
                "table": [],
                "cursor": [],
                "fields": [],
                "where": []
            }
        },
        "FLSQLITE.process_booleans": {
            "name": "process_booleans",
            "location": 424,
            "return": [],
            "arguments": {
                "self": [],
                "where": []
            }
        },
        "FLSQLITE.fetchAll": {
            "name": "fetchAll",
            "location": 428,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "cursor": [],
                "tablename": [],
                "where_filter": [],
                "fields": [],
                "curname": []
            }
        },
        "FLSQLITE.existsTable": {
            "name": "existsTable",
            "location": 450,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FLSQLITE.sqlCreateTable": {
            "name": "sqlCreateTable",
            "location": 462,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmd": []
            }
        },
        "FLSQLITE.mismatchedTable": {
            "name": "mismatchedTable",
            "location": 560,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "table1": [],
                "tmd_or_table2": [],
                "db_": [
                    "None"
                ]
            }
        },
        "FLSQLITE.notEqualsFields": {
            "name": "notEqualsFields",
            "location": 604,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "field1": [],
                "field2": []
            }
        },
        "FLSQLITE.recordInfo2": {
            "name": "recordInfo2",
            "location": 632,
            "return": [],
            "arguments": {
                "self": [],
                "tablename": []
            }
        },
        "FLSQLITE.recordInfo": {
            "name": "recordInfo",
            "location": 645,
            "return": [
                "None",
                "list[list[bool]]"
            ],
            "arguments": {
                "self": [],
                "tablename_or_query": []
            }
        },
        "FLSQLITE.decodeSqlType": {
            "name": "decodeSqlType",
            "location": 709,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "type": []
            }
        },
        "FLSQLITE.alterTable": {
            "name": "alterTable",
            "location": 724,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mtd1": [],
                "mtd2": [],
                "key": [],
                "force": [
                    "bool"
                ]
            }
        },
        "FLSQLITE.tables": {
            "name": "tables",
            "location": 941,
            "return": [
                "list",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "typeName": [
                    "None"
                ]
            }
        },
        "FLSQLITE.normalizeValue": {
            "name": "normalizeValue",
            "location": 965,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "FLSQLITE.queryUpdate": {
            "name": "queryUpdate",
            "location": 968,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "update": [],
                "filter": []
            }
        },
        "FLSQLITE.Mr_Proper": {
            "name": "Mr_Proper",
            "location": 972,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/sql/__init__.py": {},
    "pineboo-master/pineboolib/plugins/test/flsqlcursormock.py": {
        "FLSqlCursorMock.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FLSqlCursorMock.run": {
            "name": "run",
            "location": 12,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/plugins/test/__init__.py": {},
    "pineboo-master/pineboolib/qsa/dictmodules.py": {
        "from_project": {
            "name": "from_project",
            "location": 4,
            "return": [],
            "arguments": {
                "scriptname": []
            }
        },
        "Application.__getattr__": {
            "name": "__getattr__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qsa/emptyscript.py": {
        "interna.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "interna.init": {
            "name": "init",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "oficial.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "head.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "ifaceCtx.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.interna_init": {
            "name": "interna_init",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qsa/input.py": {
        "Input.getText": {
            "name": "getText",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "question": [],
                "prevtxt": [
                    "typing.Text"
                ],
                "title": [
                    "typing.Text"
                ]
            }
        },
        "Input.getNumber": {
            "name": "getNumber",
            "location": 26,
            "return": [
                "None",
                "float"
            ],
            "arguments": {
                "cls": [],
                "question": [],
                "value": [],
                "part_decimal": [],
                "title": [
                    "typing.Text"
                ]
            }
        },
        "Input.getItem": {
            "name": "getItem",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "question": [],
                "items_list": [
                    "list"
                ],
                "title": [
                    "typing.Text"
                ],
                "editable": [
                    "bool"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/qsa/pncontrolsfactory.py": {},
    "pineboo-master/pineboolib/qsa/qsa.py": {},
    "pineboo-master/pineboolib/qsa/utils.py": {
        "RegExp": {
            "name": "RegExp",
            "location": 96,
            "return": [
                "qsaRegExp"
            ],
            "arguments": {
                "strRE": []
            }
        },
        "parseFloat": {
            "name": "parseFloat",
            "location": 145,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "x": []
            }
        },
        "parseString": {
            "name": "parseString",
            "location": 184,
            "return": [
                "str"
            ],
            "arguments": {
                "obj": []
            }
        },
        "parseInt": {
            "name": "parseInt",
            "location": 194,
            "return": [
                "int"
            ],
            "arguments": {
                "x": []
            }
        },
        "length": {
            "name": "length",
            "location": 212,
            "return": [
                "int"
            ],
            "arguments": {
                "obj": []
            }
        },
        "text": {
            "name": "text",
            "location": 232,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "startTimer": {
            "name": "startTimer",
            "location": 245,
            "return": [],
            "arguments": {
                "time": [],
                "fun": []
            }
        },
        "killTimer": {
            "name": "killTimer",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "t": [
                    "None"
                ]
            }
        },
        "debug": {
            "name": "debug",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "txt": []
            }
        },
        "format_exc": {
            "name": "format_exc",
            "location": 270,
            "return": [],
            "arguments": {
                "exc": [
                    "None"
                ]
            }
        },
        "isNaN": {
            "name": "isNaN",
            "location": 275,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": []
            }
        },
        "isnan": {
            "name": "isnan",
            "location": 295,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "replace": {
            "name": "replace",
            "location": 300,
            "return": [],
            "arguments": {
                "source": [],
                "search": [],
                "replace": []
            }
        },
        "switch.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "switch.__iter__": {
            "name": "__iter__",
            "location": 32,
            "return": [
                "typing.Generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "switch.match": {
            "name": "match",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "qsaRegExp.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "strRE": [],
                "is_global": [
                    "bool"
                ]
            }
        },
        "qsaRegExp.search": {
            "name": "search",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "qsaRegExp.replace": {
            "name": "replace",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "new_value": []
            }
        },
        "qsaRegExp.cap": {
            "name": "cap",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "qsaRegExp.get_global": {
            "name": "get_global",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "qsaRegExp.set_global": {
            "name": "set_global",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "Math.abs": {
            "name": "abs",
            "location": 120,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "Math.ceil": {
            "name": "ceil",
            "location": 125,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "Math.floor": {
            "name": "floor",
            "location": 130,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "Math.pow": {
            "name": "pow",
            "location": 135,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "Math.round": {
            "name": "round",
            "location": 140,
            "return": [
                "float"
            ],
            "arguments": {
                "x": [],
                "y": [
                    "int"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/qsa/__init__.py": {},
    "pineboo-master/pineboolib/qsa/tests/test_knownbugs.py": {
        "TestIsLoadedModule.setUpClass": {
            "name": "setUpClass",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestIsLoadedModule.test_full": {
            "name": "test_full",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qsa/tests/__init__.py": {},
    "pineboo-master/pineboolib/qt3_widgets/checkbox.py": {
        "CheckBox.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CheckBox.__setattr__": {
            "name": "__setattr__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "CheckBox.__getattr__": {
            "name": "__getattr__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/combobox.py": {},
    "pineboo-master/pineboolib/qt3_widgets/dateedit.py": {},
    "pineboo-master/pineboolib/qt3_widgets/dialog.py": {
        "Dialog.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "None"
                ],
                "f": [
                    "None"
                ],
                "desc": [
                    "None"
                ]
            }
        },
        "Dialog.add": {
            "name": "add",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_object": []
            }
        },
        "Dialog.exec_": {
            "name": "exec_",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dialog.newTab": {
            "name": "newTab",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Dialog.__getattr__": {
            "name": "__getattr__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/filedialog.py": {
        "FileDialog.getOpenFileName": {
            "name": "getOpenFileName",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "FileDialog.getSaveFileName": {
            "name": "getSaveFileName",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "filter": [
                    "typing.Text"
                ],
                "title": [
                    "typing.Text"
                ]
            }
        },
        "FileDialog.getExistingDirectory": {
            "name": "getExistingDirectory",
            "location": 21,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "basedir": [
                    "None"
                ],
                "title": [
                    "typing.Text"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/formdbwidget.py": {
        "FormDBWidget.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "project": [],
                "parent": []
            }
        },
        "FormDBWidget._connect": {
            "name": "_connect",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": []
            }
        },
        "FormDBWidget._disconnect": {
            "name": "_disconnect",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "signal": [],
                "receiver": [],
                "slot": []
            }
        },
        "FormDBWidget.obj": {
            "name": "obj",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.parent": {
            "name": "parent",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget._class_init": {
            "name": "_class_init",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.init": {
            "name": "init",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.closeEvent": {
            "name": "closeEvent",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "FormDBWidget.doCleanUp": {
            "name": "doCleanUp",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.clear_connections": {
            "name": "clear_connections",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.child": {
            "name": "child",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "child_name": []
            }
        },
        "FormDBWidget.cursor": {
            "name": "cursor",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.__getattr__": {
            "name": "__getattr__",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FormDBWidget.__hasattr__": {
            "name": "__hasattr__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "FormDBWidget.__iter__": {
            "name": "__iter__",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormDBWidget.__next__": {
            "name": "__next__",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/groupbox.py": {
        "GroupBox.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GroupBox.add": {
            "name": "add",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_object": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/lineedit.py": {
        "LineEdit.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LineEdit.__setattr__": {
            "name": "__setattr__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "LineEdit.__getattr__": {
            "name": "__getattr__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/messagebox.py": {
        "MessageBox.msgbox": {
            "name": "msgbox",
            "location": 12,
            "return": [],
            "arguments": {
                "cls": [],
                "typename": [],
                "text": [],
                "button0": [],
                "button1": [
                    "None"
                ],
                "button2": [
                    "None"
                ],
                "title": [
                    "None"
                ],
                "form": [
                    "None"
                ]
            }
        },
        "MessageBox.question": {
            "name": "question",
            "location": 72,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MessageBox.information": {
            "name": "information",
            "location": 76,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MessageBox.warning": {
            "name": "warning",
            "location": 80,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MessageBox.critical": {
            "name": "critical",
            "location": 89,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/numberedit.py": {
        "NumberEdit.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NumberEdit.getValue": {
            "name": "getValue",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NumberEdit.setValue": {
            "name": "setValue",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "NumberEdit.getDecimals": {
            "name": "getDecimals",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NumberEdit.setDecimals": {
            "name": "setDecimals",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "decimals": []
            }
        },
        "NumberEdit.setMinimum": {
            "name": "setMinimum",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "min": []
            }
        },
        "NumberEdit.getMinimum": {
            "name": "getMinimum",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NumberEdit.getMaximum": {
            "name": "getMaximum",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NumberEdit.setMaximum": {
            "name": "setMaximum",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max": []
            }
        },
        "NumberEdit.getLabel": {
            "name": "getLabel",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NumberEdit.setLabel": {
            "name": "setLabel",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "label": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/process.py": {
        "Process.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.start": {
            "name": "start",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.stop": {
            "name": "stop",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.writeToStdin": {
            "name": "writeToStdin",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stdin_": []
            }
        },
        "Process.stdoutReady": {
            "name": "stdoutReady",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.stderrReady": {
            "name": "stderrReady",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.readStderr": {
            "name": "readStderr",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Process.readStdout": {
            "name": "readStdout",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Process.getWorkingDirectory": {
            "name": "getWorkingDirectory",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Process.setWorkingDirectory": {
            "name": "setWorkingDirectory",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wd": []
            }
        },
        "Process.getIsRunning": {
            "name": "getIsRunning",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Process.exitcode": {
            "name": "exitcode",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Process.executeNoSplit": {
            "name": "executeNoSplit",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "comando": [],
                "stdin_buffer": []
            }
        },
        "Process.execute": {
            "name": "execute",
            "location": 89,
            "return": [
                "int"
            ],
            "arguments": {
                "comando": [],
                "arguments": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qaction.py": {
        "QAction.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QAction.send_activated": {
            "name": "send_activated",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": [
                    "None"
                ]
            }
        },
        "QAction.getName": {
            "name": "getName",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAction.setName": {
            "name": "setName",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "QAction.getMenuText": {
            "name": "getMenuText",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAction.setMenuText": {
            "name": "setMenuText",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qbuttongroup.py": {
        "QButtonGroup.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QButtonGroup.setLineWidth": {
            "name": "setLineWidth",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "QButtonGroup.setSelectedId": {
            "name": "setSelectedId",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "QButtonGroup.__getattr__": {
            "name": "__getattr__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qbytearray.py": {
        "QByteArray.sha1": {
            "name": "sha1",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QByteArray.setString": {
            "name": "setString",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "QByteArray.getString": {
            "name": "getString",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qcheckbox.py": {
        "QCheckBox.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QCheckBox.get_checked": {
            "name": "get_checked",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QCheckBox.set_checked": {
            "name": "set_checked",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qcombobox.py": {
        "QComboBox.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "QComboBox.insertStringList": {
            "name": "insertStringList",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "strl": []
            }
        },
        "QComboBox.setReadOnly": {
            "name": "setReadOnly",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QComboBox.getCurrentItem": {
            "name": "getCurrentItem",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QComboBox.setCurrentItem": {
            "name": "setCurrentItem",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "QComboBox.getCurrentText": {
            "name": "getCurrentText",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QComboBox.setCurrentText": {
            "name": "setCurrentText",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qdataview.py": {},
    "pineboo-master/pineboolib/qt3_widgets/qdateedit.py": {
        "QDateEdit.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ]
            }
        },
        "QDateEdit.getDate": {
            "name": "getDate",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QDateEdit.setDate": {
            "name": "setDate",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "QDateEdit.setAutoAdvance": {
            "name": "setAutoAdvance",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QDateEdit.setSeparator": {
            "name": "setSeparator",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "QDateEdit.separator": {
            "name": "separator",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QDateEdit.__getattr__": {
            "name": "__getattr__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qdialog.py": {
        "QDialog.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ],
                "b": [
                    "None"
                ]
            }
        },
        "QDialog.child": {
            "name": "child",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "QDialog.getTitle": {
            "name": "getTitle",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QDialog.setTitle": {
            "name": "setTitle",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": []
            }
        },
        "QDialog.getEnabled": {
            "name": "getEnabled",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QDialog.setEnable_": {
            "name": "setEnable_",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enable_": []
            }
        },
        "QDialog.accept": {
            "name": "accept",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QDialog.reject": {
            "name": "reject",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QDialog.close": {
            "name": "close",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qeventloop.py": {
        "QEventLoop.exitLoop": {
            "name": "exitLoop",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QEventLoop.enterLoop": {
            "name": "enterLoop",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qframe.py": {
        "QFrame.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "QFrame._do_style": {
            "name": "_do_style",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qgroupbox.py": {
        "QGroupBox.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QGroupBox.setLineWidth": {
            "name": "setLineWidth",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "width": []
            }
        },
        "QGroupBox.setTitle": {
            "name": "setTitle",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "QGroupBox._do_style": {
            "name": "_do_style",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QGroupBox.selectedId": {
            "name": "selectedId",
            "location": 46,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "QGroupBox.get_enabled": {
            "name": "get_enabled",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QGroupBox.set_enabled": {
            "name": "set_enabled",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QGroupBox.setShown": {
            "name": "setShown",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QGroupBox.__setattr__": {
            "name": "__setattr__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "QGroupBox.setFrameShadow": {
            "name": "setFrameShadow",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "QGroupBox.setFrameShape": {
            "name": "setFrameShape",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "QGroupBox.newColumn": {
            "name": "newColumn",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qhboxlayout.py": {
        "QHBoxLayout.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qlabel.py": {
        "QLabel.get_text": {
            "name": "get_text",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QLabel.setText": {
            "name": "setText",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "QLabel.setPixmap": {
            "name": "setPixmap",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pix": []
            }
        },
        "QLabel.setShown": {
            "name": "setShown",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QLabel.getAlign": {
            "name": "getAlign",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QLabel.setAlign": {
            "name": "setAlign",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "alignment_": []
            }
        },
        "QLabel.get_palette_fore_ground": {
            "name": "get_palette_fore_ground",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QLabel.set_palette_fore_ground": {
            "name": "set_palette_fore_ground",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "color": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qlayoutwidget.py": {},
    "pineboo-master/pineboolib/qt3_widgets/qline.py": {
        "QLine.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "QLine.getObjectName": {
            "name": "getObjectName",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QLine.setObjectName": {
            "name": "setObjectName",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "QLine.setOrientation": {
            "name": "setOrientation",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ori_": [
                    "int"
                ]
            }
        },
        "QLine.getOrientation": {
            "name": "getOrientation",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qlineedit.py": {
        "QLineEdit.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ]
            }
        },
        "QLineEdit.getText": {
            "name": "getText",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QLineEdit.setText": {
            "name": "setText",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "QLineEdit.setBackgroundOrigin": {
            "name": "setBackgroundOrigin",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bgo": []
            }
        },
        "QLineEdit.setLineWidth": {
            "name": "setLineWidth",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "QLineEdit.setFrameShape": {
            "name": "setFrameShape",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "QLineEdit.setFrameShadow": {
            "name": "setFrameShadow",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qlistview.py": {
        "QListView.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "QListView.singleClickedEmit": {
            "name": "singleClickedEmit",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "QListView.doubleClickedEmit": {
            "name": "doubleClickedEmit",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "QListView.addItem": {
            "name": "addItem",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "QListView.setItemMargin": {
            "name": "setItemMargin",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "QListView.setHeaderLabel": {
            "name": "setHeaderLabel",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "labels": []
            }
        },
        "QListView.setColumnText": {
            "name": "setColumnText",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": [],
                "new_value": []
            }
        },
        "QListView.addColumn": {
            "name": "addColumn",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "QListView.setClickable": {
            "name": "setClickable",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        },
        "QListView.setResizable": {
            "name": "setResizable",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "QListView.resizeEvent": {
            "name": "resizeEvent",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "QListView.clear": {
            "name": "clear",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QListView.defaultRenameAction": {
            "name": "defaultRenameAction",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QListView.setDefaultRenameAction": {
            "name": "setDefaultRenameAction",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QListView.model": {
            "name": "model",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qlistviewwidget.py": {},
    "pineboo-master/pineboolib/qt3_widgets/qmainwindow.py": {
        "QMainWindow.child": {
            "name": "child",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "n": [],
                "c": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qmdiarea.py": {
        "QMdiArea.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QMdiArea.paintEvent": {
            "name": "paintEvent",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qmenu.py": {},
    "pineboo-master/pineboolib/qt3_widgets/qmessagebox.py": {},
    "pineboo-master/pineboolib/qt3_widgets/qpushbutton.py": {
        "QPushButton.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QPushButton.setTextPosition": {
            "name": "setTextPosition",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "QPushButton.setUsesBigPixmap": {
            "name": "setUsesBigPixmap",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QPushButton.setUsesTextLabel": {
            "name": "setUsesTextLabel",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QPushButton.pixmap": {
            "name": "pixmap",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QPushButton.setPixmap": {
            "name": "setPixmap",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QPushButton.getToggleButton": {
            "name": "getToggleButton",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QPushButton.setToggleButton": {
            "name": "setToggleButton",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "QPushButton.getOn": {
            "name": "getOn",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QPushButton.setOn": {
            "name": "setOn",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QPushButton.getText": {
            "name": "getText",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QPushButton.setText": {
            "name": "setText",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "QPushButton.setMaximumSize": {
            "name": "setMaximumSize",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QPushButton.__getattr__": {
            "name": "__getattr__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qradiobutton.py": {
        "QRadioButton.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "QRadioButton.setButtonGroupId": {
            "name": "setButtonGroupId",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "QRadioButton.send_clicked": {
            "name": "send_clicked",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QRadioButton.isChecked": {
            "name": "isChecked",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QRadioButton.setChecked": {
            "name": "setChecked",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QRadioButton.getText": {
            "name": "getText",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QRadioButton.setText": {
            "name": "setText",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qspinbox.py": {},
    "pineboo-master/pineboolib/qt3_widgets/qtable.py": {
        "QTable.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ],
                "name": [
                    "None"
                ]
            }
        },
        "QTable.currentChanged_": {
            "name": "currentChanged_",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "current_row": [],
                "current_column": [],
                "previous_row": [],
                "previous_column": []
            }
        },
        "QTable.doubleClicked_": {
            "name": "doubleClicked_",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [],
                "c": []
            }
        },
        "QTable.simpleClicked_": {
            "name": "simpleClicked_",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [],
                "c": []
            }
        },
        "QTable.setResizePolicy": {
            "name": "setResizePolicy",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pol": []
            }
        },
        "QTable.__getattr__": {
            "name": "__getattr__",
            "location": 74,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "QTable.valueChanged_": {
            "name": "valueChanged_",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "None"
                ]
            }
        },
        "QTable.numRows": {
            "name": "numRows",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QTable.numCols": {
            "name": "numCols",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QTable.setCellAlignment": {
            "name": "setCellAlignment",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "col": [],
                "alig_": []
            }
        },
        "QTable.setNumCols": {
            "name": "setNumCols",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "QTable.setNumRows": {
            "name": "setNumRows",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "QTable.setReadOnly": {
            "name": "setReadOnly",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "QTable.selectionMode": {
            "name": "selectionMode",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QTable.setFocusStyle": {
            "name": "setFocusStyle",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "QTable.setColumnLabels": {
            "name": "setColumnLabels",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "separador": [],
                "lista": []
            }
        },
        "QTable.setRowLabels": {
            "name": "setRowLabels",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "separator": [],
                "lista": []
            }
        },
        "QTable.clear": {
            "name": "clear",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QTable.setSelectionMode": {
            "name": "setSelectionMode",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "QTable.setColumnStrechable": {
            "name": "setColumnStrechable",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": [],
                "b": []
            }
        },
        "QTable.setHeaderLabel": {
            "name": "setHeaderLabel",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "l": []
            }
        },
        "QTable.insertRows": {
            "name": "insertRows",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "numero": [],
                "n": [
                    "int"
                ]
            }
        },
        "QTable.text": {
            "name": "text",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "col": []
            }
        },
        "QTable.setText": {
            "name": "setText",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "col": [],
                "value": []
            }
        },
        "QTable.setCellWidget": {
            "name": "setCellWidget",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "col": [],
                "obj": []
            }
        },
        "QTable.adjustColumn": {
            "name": "adjustColumn",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "QTable.setRowReadOnly": {
            "name": "setRowReadOnly",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "b": []
            }
        },
        "QTable.setColumnReadOnly": {
            "name": "setColumnReadOnly",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": [],
                "b": []
            }
        },
        "QTable.setLeftMargin": {
            "name": "setLeftMargin",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "QTable.setCellBackgroundColor": {
            "name": "setCellBackgroundColor",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "col": [],
                "color": []
            }
        },
        "QTable.getSorting": {
            "name": "getSorting",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QTable.setSorting": {
            "name": "setSorting",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "col": []
            }
        },
        "QTable.editCell": {
            "name": "editCell",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "col": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qtabwidget.py": {
        "QTabWidget.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "QTabWidget.setTabEnabled": {
            "name": "setTabEnabled",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tab": [],
                "enabled": []
            }
        },
        "QTabWidget.showPage": {
            "name": "showPage",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tab": []
            }
        },
        "QTabWidget.indexByName": {
            "name": "indexByName",
            "location": 34,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": [],
                "tab": []
            }
        },
        "QTabWidget.removePage": {
            "name": "removePage",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "idx": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qtextedit.py": {
        "QTextEdit.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "QTextEdit.setText": {
            "name": "setText",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "QTextEdit.getText": {
            "name": "getText",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QTextEdit.textFormat": {
            "name": "textFormat",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QTextEdit.setTextFormat": {
            "name": "setTextFormat",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QTextEdit.setShown": {
            "name": "setShown",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QTextEdit.getPlainText": {
            "name": "getPlainText",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QTextEdit.setAutoFormatting": {
            "name": "setAutoFormatting",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qtimeedit.py": {
        "QTimeEdit.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        },
        "QTimeEdit.setTime": {
            "name": "setTime",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "QTimeEdit.getTime": {
            "name": "getTime",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qtoolbar.py": {
        "QToolBar.setLabel": {
            "name": "setLabel",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "l": []
            }
        },
        "QToolBar.getLabel": {
            "name": "getLabel",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qtoolbutton.py": {
        "QToolButton.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "QToolButton.setToggleButton": {
            "name": "setToggleButton",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QToolButton.setUsesBigPixmap": {
            "name": "setUsesBigPixmap",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QToolButton.toggleButton": {
            "name": "toggleButton",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QToolButton.getOn": {
            "name": "getOn",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QToolButton.setOn": {
            "name": "setOn",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QToolButton.setUsesTextLabel": {
            "name": "setUsesTextLabel",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "QToolButton.buttonGroupId": {
            "name": "buttonGroupId",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QToolButton.setButtonGroupId": {
            "name": "setButtonGroupId",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qvboxlayout.py": {
        "QVBoxLayout.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/qwidget.py": {
        "QWidget.child": {
            "name": "child",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pineboo-master/pineboolib/qt3_widgets/radiobutton.py": {},
    "pineboo-master/pineboolib/qt3_widgets/spinbox.py": {},
    "pineboo-master/pineboolib/qt3_widgets/textedit.py": {},
    "pineboo-master/pineboolib/qt3_widgets/timeedit.py": {},
    "pineboo-master/pineboolib/qt3_widgets/__init__.py": {},
    "pineboo-master/qtdesigner-plugins/FLFieldDB.py": {
        "moduleInformation": {
            "name": "moduleInformation",
            "location": 10,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/qtdesigner-plugins/FLTable.py": {
        "moduleInformation": {
            "name": "moduleInformation",
            "location": 10,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/qtdesigner-plugins/FLTableDB.py": {
        "moduleInformation": {
            "name": "moduleInformation",
            "location": 10,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {}
        }
    },
    "pineboo-master/share/pineboo/scripts/ebcomportamiento.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.cargarConfiguracion": {
            "name": "cargarConfiguracion",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.search_git_updates": {
            "name": "search_git_updates",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.leerValorGlobal": {
            "name": "leerValorGlobal",
            "location": 100,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "valor_name": [
                    "None"
                ]
            }
        },
        "FormInternalObj.grabarValorGlobal": {
            "name": "grabarValorGlobal",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "valor_name": [
                    "None"
                ],
                "value": [
                    "None"
                ]
            }
        },
        "FormInternalObj.leerValorLocal": {
            "name": "leerValorLocal",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "valor_name": []
            }
        },
        "FormInternalObj.grabarValorLocal": {
            "name": "grabarValorLocal",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "valor_name": [
                    "None"
                ],
                "value": [
                    "None"
                ]
            }
        },
        "FormInternalObj.initEventFilter": {
            "name": "initEventFilter",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.eventFilter": {
            "name": "eventFilter",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "o": [
                    "None"
                ],
                "e": [
                    "None"
                ]
            }
        },
        "FormInternalObj.cerrar_clicked": {
            "name": "cerrar_clicked",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.guardar_clicked": {
            "name": "guardar_clicked",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.seleccionarColor_clicked": {
            "name": "seleccionarColor_clicked",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.cambiar_kugar_clicked": {
            "name": "cambiar_kugar_clicked",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.fixPath": {
            "name": "fixPath",
            "location": 212,
            "return": [
                "None",
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "ruta": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/fldumpdb.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.main": {
            "name": "main",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flfiles.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.init": {
            "name": "init",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.acceptedForm": {
            "name": "acceptedForm",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.tipoDeFichero": {
            "name": "tipoDeFichero",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "nombre": []
            }
        },
        "FormInternalObj.editarFichero": {
            "name": "editarFichero",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.editarFicheroXML": {
            "name": "editarFicheroXML",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.calculateField": {
            "name": "calculateField",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "fN": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flloadmod.qs.py": {
        "dameValor": {
            "name": "dameValor",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "linea": [
                    "None"
                ]
            }
        },
        "valorPorClave": {
            "name": "valorPorClave",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "tabla": [
                    "None"
                ],
                "campo": [
                    "None"
                ],
                "where": [
                    "None"
                ]
            }
        },
        "compararVersiones": {
            "name": "compararVersiones",
            "location": 191,
            "return": [
                "int"
            ],
            "arguments": {
                "v1": [],
                "v2": []
            }
        },
        "evaluarDependencias": {
            "name": "evaluarDependencias",
            "location": 219,
            "return": [
                "bool"
            ],
            "arguments": {
                "dependencias": []
            }
        },
        "traducirCadena": {
            "name": "traducirCadena",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "cadena": [],
                "path": [
                    "None"
                ],
                "modulo": [
                    "None"
                ]
            }
        },
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.main": {
            "name": "main",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flloadmodpkg.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flmasterareas.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.init": {
            "name": "init",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.actualizarAreas": {
            "name": "actualizarAreas",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flmodules.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.init": {
            "name": "init",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.cargarFicheroEnBD": {
            "name": "cargarFicheroEnBD",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nombre": [],
                "contenido": [
                    "None"
                ],
                "log": [
                    "None"
                ],
                "directorio": [
                    "None"
                ]
            }
        },
        "FormInternalObj.cargarAr": {
            "name": "cargarAr",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "nombre": [],
                "contenido": [
                    "None"
                ],
                "log": [
                    "None"
                ],
                "directorio": [
                    "None"
                ]
            }
        },
        "FormInternalObj.cargarFicheros": {
            "name": "cargarFicheros",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directorio": [
                    "None"
                ],
                "extension": [
                    "None"
                ]
            }
        },
        "FormInternalObj.botonCargar_clicked": {
            "name": "botonCargar_clicked",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.botonExportar_clicked": {
            "name": "botonExportar_clicked",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.aceptarLicenciaDelModulo": {
            "name": "aceptarLicenciaDelModulo",
            "location": 143,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "directorio": [
                    "None"
                ]
            }
        },
        "FormInternalObj.cargarDeDisco": {
            "name": "cargarDeDisco",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directorio": [
                    "None"
                ],
                "comprobarLicencia": [
                    "None"
                ]
            }
        },
        "FormInternalObj.tipoDeFichero": {
            "name": "tipoDeFichero",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "nombre": []
            }
        },
        "FormInternalObj.exportarADisco": {
            "name": "exportarADisco",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directorio": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flmrproper.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flreinit.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flreloadbatch.qs.py": {
        "interna.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "interna.main": {
            "name": "main",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "interna.init": {
            "name": "init",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "oficial.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "oficial.cargarModulo": {
            "name": "cargarModulo",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "nombreFichero": [
                    "None"
                ]
            }
        },
        "oficial.compararVersiones": {
            "name": "compararVersiones",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "v1": [
                    "None"
                ],
                "v2": [
                    "None"
                ]
            }
        },
        "oficial.traducirCadena": {
            "name": "traducirCadena",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "cadena": [
                    "None"
                ],
                "path": [
                    "None"
                ],
                "modulo": [
                    "None"
                ]
            }
        },
        "oficial.ejecutarComando": {
            "name": "ejecutarComando",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "comando": [
                    "None"
                ]
            }
        },
        "oficial.elegirOpcion": {
            "name": "elegirOpcion",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "opciones": [
                    "None"
                ]
            }
        },
        "head.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "ifaceCtx.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "ifaceCtx.pub_cargarModulo": {
            "name": "pub_cargarModulo",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "nombreFichero": [
                    "None"
                ]
            }
        },
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.interna_init": {
            "name": "interna_init",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.interna_main": {
            "name": "interna_main",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.oficial_ejecutarComando": {
            "name": "oficial_ejecutarComando",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "comando": [
                    "None"
                ]
            }
        },
        "FormInternalObj.oficial_cargarModulo": {
            "name": "oficial_cargarModulo",
            "location": 135,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "nombreFichero": []
            }
        },
        "FormInternalObj.oficial_compararVersiones": {
            "name": "oficial_compararVersiones",
            "location": 254,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "v1": [],
                "v2": []
            }
        },
        "FormInternalObj.oficial_traducirCadena": {
            "name": "oficial_traducirCadena",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cadena": [],
                "path": [
                    "None"
                ],
                "modulo": [
                    "None"
                ]
            }
        },
        "FormInternalObj.oficial_elegirOpcion": {
            "name": "oficial_elegirOpcion",
            "location": 323,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "opciones": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flreloadlast.qs.py": {
        "interna.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "interna.main": {
            "name": "main",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "interna.init": {
            "name": "init",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "oficial.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "oficial.cargarModulo": {
            "name": "cargarModulo",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "nombreFichero": [
                    "None"
                ]
            }
        },
        "oficial.compararVersiones": {
            "name": "compararVersiones",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "v1": [
                    "None"
                ],
                "v2": [
                    "None"
                ]
            }
        },
        "oficial.traducirCadena": {
            "name": "traducirCadena",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "cadena": [
                    "None"
                ],
                "path": [
                    "None"
                ],
                "modulo": [
                    "None"
                ]
            }
        },
        "head.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "ifaceCtx.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.interna_init": {
            "name": "interna_init",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.interna_main": {
            "name": "interna_main",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.oficial_cargarModulo": {
            "name": "oficial_cargarModulo",
            "location": 69,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "nombreFichero": [
                    "None"
                ]
            }
        },
        "FormInternalObj.oficial_compararVersiones": {
            "name": "oficial_compararVersiones",
            "location": 185,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "v1": [],
                "v2": []
            }
        },
        "FormInternalObj.oficial_traducirCadena": {
            "name": "oficial_traducirCadena",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cadena": [],
                "path": [
                    "None"
                ],
                "modulo": [
                    "None"
                ]
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/fltest.qs.py": {
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/flupdates.qs.py": {
        "interna.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "interna.main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "oficial.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "head.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "ifaceCtx.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "None"
                ]
            }
        },
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.interna_main": {
            "name": "interna_main",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pineboo-master/share/pineboo/scripts/sys.qs.py": {
        "afterCommit_flfiles": {
            "name": "afterCommit_flfiles",
            "location": 69,
            "return": [
                "bool"
            ],
            "arguments": {
                "curFiles": [
                    "None"
                ]
            }
        },
        "FormInternalObj._class_init": {
            "name": "_class_init",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FormInternalObj.init": {
            "name": "init",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
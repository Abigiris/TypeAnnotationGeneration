{
    "poet-master/manage.py": {},
    "poet-master/app/admin.py": {},
    "poet-master/app/apps.py": {},
    "poet-master/app/jinja_config.py": {
        "environment": {
            "name": "environment",
            "location": 7,
            "return": [
                "Environment"
            ],
            "arguments": {}
        }
    },
    "poet-master/app/urls.py": {},
    "poet-master/app/views.py": {
        "paginate_list": {
            "name": "paginate_list",
            "location": 10,
            "return": [
                "dict[typing.Text, typing.Union[int,float,dict[int, typing.Any]]]"
            ],
            "arguments": {
                "request": [
                    "str",
                    "dict[, ]",
                    "bool"
                ],
                "page_list": [
                    "int"
                ],
                "number_of_pages": [
                    "int"
                ]
            }
        },
        "home": {
            "name": "home",
            "location": 29,
            "return": [],
            "arguments": {
                "request": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "work": {
            "name": "work",
            "location": 33,
            "return": [],
            "arguments": {
                "request": [],
                "work_id": [
                    "int",
                    "str"
                ]
            }
        },
        "collection": {
            "name": "collection",
            "location": 41,
            "return": [],
            "arguments": {
                "request": [
                    "str",
                    "int"
                ],
                "collection_id": [
                    "int",
                    "str"
                ]
            }
        },
        "entity": {
            "name": "entity",
            "location": 51,
            "return": [],
            "arguments": {
                "request": [],
                "entity_id": []
            }
        },
        "search": {
            "name": "search",
            "location": 60,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "error_404_view": {
            "name": "error_404_view",
            "location": 67,
            "return": [],
            "arguments": {
                "request": [],
                "exception": [
                    "None",
                    "Exception"
                ]
            }
        },
        "error_500_view": {
            "name": "error_500_view",
            "location": 71,
            "return": [],
            "arguments": {
                "request": [],
                "exception": [
                    "None",
                    "Exception"
                ]
            }
        },
        "error_403_view": {
            "name": "error_403_view",
            "location": 75,
            "return": [],
            "arguments": {
                "request": [],
                "exception": [
                    "None",
                    "Exception"
                ]
            }
        },
        "error_400_view": {
            "name": "error_400_view",
            "location": 79,
            "return": [],
            "arguments": {
                "request": [],
                "exception": [
                    "None",
                    "Exception"
                ]
            }
        }
    },
    "poet-master/app/__init__.py": {},
    "poet-master/app/controllers/collection.py": {
        "get_collection": {
            "name": "get_collection",
            "location": 9,
            "return": [],
            "arguments": {
                "collection_id": [
                    "int"
                ]
            }
        },
        "get_collection_or_404": {
            "name": "get_collection_or_404",
            "location": 15,
            "return": [],
            "arguments": {
                "collection_id": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "clean_collection": {
            "name": "clean_collection",
            "location": 19,
            "return": [],
            "arguments": {
                "collection_dict": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, dict[str, typing.Any]]"
                ]
            }
        },
        "get_recordings": {
            "name": "get_recordings",
            "location": 27,
            "return": [
                "list[]"
            ],
            "arguments": {
                "collection_id": [
                    "int",
                    "str"
                ]
            }
        },
        "get_entities": {
            "name": "get_entities",
            "location": 40,
            "return": [],
            "arguments": {
                "collection_id": [
                    "int",
                    "str"
                ]
            }
        },
        "enrich_collection": {
            "name": "enrich_collection",
            "location": 58,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "collection": [
                    "str"
                ]
            }
        },
        "get_work_collection_context": {
            "name": "get_work_collection_context",
            "location": 66,
            "return": [],
            "arguments": {
                "collection_id": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "poet-master/app/controllers/entity.py": {
        "get_entity": {
            "name": "get_entity",
            "location": 6,
            "return": [],
            "arguments": {
                "entity_id": [
                    "int"
                ]
            }
        },
        "get_entity_or_404": {
            "name": "get_entity_or_404",
            "location": 15,
            "return": [],
            "arguments": {
                "entity_id": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "clean_entity": {
            "name": "clean_entity",
            "location": 19,
            "return": [],
            "arguments": {
                "entity_dict": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "get_affiliated_entities": {
            "name": "get_affiliated_entities",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "entity_id": [
                    "int",
                    "str"
                ]
            }
        },
        "get_recordings": {
            "name": "get_recordings",
            "location": 36,
            "return": [
                "list[]"
            ],
            "arguments": {
                "entity_id": [
                    "str",
                    "int"
                ]
            }
        },
        "enrich_entity": {
            "name": "enrich_entity",
            "location": 50,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "entity": []
            }
        },
        "get_entity_context": {
            "name": "get_entity_context",
            "location": 58,
            "return": [],
            "arguments": {
                "entity_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "poet-master/app/controllers/search.py": {
        "get_search_fields": {
            "name": "get_search_fields",
            "location": 23,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "make_tsvector": {
            "name": "make_tsvector",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "field_weight_ls": [
                    "list[tuple[typing.Union[str,str]]]",
                    "str",
                    "tuple[typing.Type]"
                ]
            }
        },
        "make_field_search": {
            "name": "make_field_search",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "term_number": [
                    "bool"
                ]
            }
        },
        "make_query": {
            "name": "make_query",
            "location": 47,
            "return": [
                "list[]"
            ],
            "arguments": {
                "base_string": [
                    "str",
                    "int",
                    "None"
                ],
                "field_list": [
                    "str",
                    "int"
                ],
                "term": [
                    "str"
                ]
            }
        },
        "search_works_and_entities": {
            "name": "search_works_and_entities",
            "location": 124,
            "return": [],
            "arguments": {
                "field_list": [
                    "list[tuple[typing.Union[str,str]]]",
                    "str",
                    "list[int]",
                    "dict[, ]"
                ],
                "term": [
                    "list[tuple[typing.Union[str,str]]]",
                    "str",
                    "list[int]",
                    "dict[, ]"
                ]
            }
        },
        "dict_agg": {
            "name": "dict_agg",
            "location": 153,
            "return": [],
            "arguments": {
                "d": [
                    "str",
                    "typing.DefaultDict",
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bytes"
                ],
                "ele": [
                    "str",
                    "typing.DefaultDict",
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "get_aggregate_data": {
            "name": "get_aggregate_data",
            "location": 158,
            "return": [],
            "arguments": {
                "model_ls": [
                    "list[dict[, ]]",
                    "int"
                ]
            }
        },
        "shuffle_and_take_fields": {
            "name": "shuffle_and_take_fields",
            "location": 180,
            "return": [
                "dict[typing.Text, tuple[typing.Union[str,typing.Any]]]"
            ],
            "arguments": {
                "field_dict": [
                    "dict[str, typing.Any]"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "shuffle_and_take_collections": {
            "name": "shuffle_and_take_collections",
            "location": 187,
            "return": [
                "dict[typing.Text, typing.Union[int,dict[, ],tuple[typing.Union[int,dict[, ]]]]]"
            ],
            "arguments": {
                "collection_dict": [
                    "dict[int, dict[, ]]"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "sort_and_scale_tags": {
            "name": "sort_and_scale_tags",
            "location": 194,
            "return": [
                "list[dict[typing.Text, typing.Union[str,float,int]]]",
                "list[]"
            ],
            "arguments": {
                "d": [
                    "dict[str, str]"
                ],
                "n": [
                    "int"
                ]
            }
        },
        "get_search_context": {
            "name": "get_search_context",
            "location": 240,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "request_dict": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Accumulator.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Accumulator.__str__": {
            "name": "__str__",
            "location": 137,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "get_aggregate_data.reducer": {
            "name": "reducer",
            "location": 160,
            "return": [],
            "arguments": {
                "acc": [],
                "ele": []
            }
        }
    },
    "poet-master/app/controllers/util.py": {
        "return_or_404": {
            "name": "return_or_404",
            "location": 10,
            "return": [],
            "arguments": {
                "f": [
                    "typing.Pattern",
                    "typing.Type",
                    "float"
                ],
                "message": [
                    "None",
                    "str",
                    "int",
                    "typing.Callable[..., T]",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        },
        "normalize": {
            "name": "normalize",
            "location": 20,
            "return": [
                "list[]"
            ],
            "arguments": {
                "arr": [
                    "int",
                    "typing.Iterable[typing.Any]"
                ]
            }
        },
        "get_peaks_from_audio_path": {
            "name": "get_peaks_from_audio_path",
            "location": 25,
            "return": [],
            "arguments": {
                "file": [
                    "str"
                ]
            }
        },
        "get_extension": {
            "name": "get_extension",
            "location": 41,
            "return": [],
            "arguments": {
                "path": [
                    "str",
                    "typing.Sequence[str]"
                ]
            }
        },
        "to_none": {
            "name": "to_none",
            "location": 49,
            "return": [
                "None",
                "list[]"
            ],
            "arguments": {
                "s": [
                    "typing.Any",
                    "None",
                    "str",
                    "list[str]",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "to_dict": {
            "name": "to_dict",
            "location": 62,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cursor": []
            }
        },
        "sort_entities": {
            "name": "sort_entities",
            "location": 75,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {
                "entity_ls": [
                    "list[]",
                    "str"
                ]
            }
        },
        "query": {
            "name": "query",
            "location": 86,
            "return": [],
            "arguments": {
                "query_string": [
                    "str",
                    "int"
                ],
                "query_args": [
                    "str",
                    "int"
                ]
            }
        },
        "get_dashed_location": {
            "name": "get_dashed_location",
            "location": 92,
            "return": [],
            "arguments": {
                "model_dict": [
                    "dict[, ]",
                    "list[str]",
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "get_dashed_name": {
            "name": "get_dashed_name",
            "location": 96,
            "return": [],
            "arguments": {
                "model_dict": [
                    "int",
                    "dict[, ]",
                    "list[list[int]]",
                    "typing.Mapping",
                    "list[str]"
                ]
            }
        },
        "get_dashed_date": {
            "name": "get_dashed_date",
            "location": 100,
            "return": [],
            "arguments": {
                "model_dict": [
                    "list[str]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "get_dashed_list": {
            "name": "get_dashed_list",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "key_ls": [
                    "bytes"
                ],
                "d": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "poet-master/app/controllers/work.py": {
        "get_work": {
            "name": "get_work",
            "location": 30,
            "return": [],
            "arguments": {
                "work_id": [
                    "int",
                    "str"
                ]
            }
        },
        "get_associated_collections": {
            "name": "get_associated_collections",
            "location": 39,
            "return": [],
            "arguments": {
                "work_id": [
                    "str",
                    "int"
                ]
            }
        },
        "get_work_or_404": {
            "name": "get_work_or_404",
            "location": 49,
            "return": [],
            "arguments": {
                "work_id": [
                    "str",
                    "int"
                ]
            }
        },
        "clean_work": {
            "name": "clean_work",
            "location": 53,
            "return": [],
            "arguments": {
                "work_dict": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, piccolo.conf.apps.MigrationModule]"
                ]
            }
        },
        "get_entities": {
            "name": "get_entities",
            "location": 62,
            "return": [],
            "arguments": {
                "work_id": [
                    "int",
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "enrich_work": {
            "name": "enrich_work",
            "location": 79,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "work": [
                    "str"
                ]
            }
        },
        "get_work_context": {
            "name": "get_work_context",
            "location": 87,
            "return": [],
            "arguments": {
                "work_id": [
                    "str"
                ]
            }
        }
    },
    "poet-master/app/controllers/__init__.py": {},
    "poet-master/app/migrations/0001_initial.py": {},
    "poet-master/app/migrations/0002_auto_20180709_0024.py": {},
    "poet-master/app/migrations/0003_auto_20180722_1429.py": {},
    "poet-master/app/migrations/0004_auto_20180722_1636.py": {},
    "poet-master/app/migrations/0005_auto_20180722_1656.py": {},
    "poet-master/app/migrations/0006_auto_20180722_2013.py": {},
    "poet-master/app/migrations/0007_historicalcomposicion.py": {},
    "poet-master/app/migrations/0008_model_refactor.py": {},
    "poet-master/app/migrations/0009_lookup_entities.py": {},
    "poet-master/app/migrations/0010_util_funcs.py": {},
    "poet-master/app/migrations/0011_rename_columns.py": {},
    "poet-master/app/migrations/0012_delete_date_columns.py": {},
    "poet-master/app/migrations/0013_insert_statements.py": {},
    "poet-master/app/migrations/0014_insert_relations.py": {},
    "poet-master/app/migrations/0015_remove_old_models.py": {},
    "poet-master/app/migrations/0016_static_lookup_tables.py": {},
    "poet-master/app/migrations/0017_auto_20181126_1407.py": {},
    "poet-master/app/migrations/0018_unjsonify_fields.py": {},
    "poet-master/app/migrations/0019_work_relationship_choices.py": {},
    "poet-master/app/migrations/0020_insert_to_new_fields.py": {},
    "poet-master/app/migrations/0021_change_work_type_names.py": {},
    "poet-master/app/migrations/0022_filefield_and_charfields.py": {},
    "poet-master/app/migrations/0023_work_collection_entity.py": {},
    "poet-master/app/migrations/0024_clean_recursive_relationship.py": {},
    "poet-master/app/migrations/0025_delete_from_poet_work.py": {
        "generate_waveform_peaks": {
            "name": "generate_waveform_peaks",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        }
    },
    "poet-master/app/migrations/0026_rename_collections.py": {},
    "poet-master/app/migrations/0027_split_text.py": {
        "split_text_and_commentaries": {
            "name": "split_text_and_commentaries",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "float",
                    "list[object]"
                ]
            }
        }
    },
    "poet-master/app/migrations/0028_move_additional_data.py": {},
    "poet-master/app/migrations/0029_delete_additional_data.py": {},
    "poet-master/app/migrations/0030_verbose_name.py": {},
    "poet-master/app/migrations/0031_requested_fields.py": {},
    "poet-master/app/migrations/0032_model_translations.py": {},
    "poet-master/app/migrations/0033_blank_collection.py": {},
    "poet-master/app/migrations/0034_add_license_version.py": {},
    "poet-master/app/migrations/0035_add_mm_work_collection_rel.py": {},
    "poet-master/app/migrations/0036_populate_work_collection_rel.py": {},
    "poet-master/app/migrations/0037_remove_in_collection_fields.py": {},
    "poet-master/app/migrations/0038_rename_fields.py": {},
    "poet-master/app/migrations/__init__.py": {},
    "poet-master/app/models/choices.py": {
        "validate_date": {
            "name": "validate_date",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "date": [
                    "None"
                ]
            }
        }
    },
    "poet-master/app/models/entity.py": {
        "Entity.clean": {
            "name": "clean",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Entity.save": {
            "name": "save",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Entity.__str__": {
            "name": "__str__",
            "location": 91,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "EntityToEntityRel.__str__": {
            "name": "__str__",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EntityToEntityRel.clean": {
            "name": "clean",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EntityToEntityRel.save": {
            "name": "save",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/app/models/model_util.py": {},
    "poet-master/app/models/relations.py": {
        "strip_to_none": {
            "name": "strip_to_none",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "maybe_str": []
            }
        },
        "EntityToWorkRel.clean": {
            "name": "clean",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EntityToWorkRel.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WorkToCollection.__str__": {
            "name": "__str__",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/app/models/work.py": {
        "WorkCollection.__str__": {
            "name": "__str__",
            "location": 72,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Work.clean": {
            "name": "clean",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Work.save": {
            "name": "save",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Work.__str__": {
            "name": "__str__",
            "location": 142,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/app/models/__init__.py": {},
    "poet-master/config/settings.py": {},
    "poet-master/config/urls.py": {},
    "poet-master/config/wsgi.py": {},
    "poet-master/config/__init__.py": {},
    "poet-master/test/__init__.py": {},
    "poet-master/test/app/__init__.py": {},
    "poet-master/test/app/controllers/test_collection.py": {
        "TestCollectionController.test_get_collection_or_404": {
            "name": "test_get_collection_or_404",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCollectionController.test_clean_collection": {
            "name": "test_clean_collection",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCollectionController.test_get_recordings": {
            "name": "test_get_recordings",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/controllers/test_search.py": {
        "TestSearchController.test_make_tsvector": {
            "name": "test_make_tsvector",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearchController.test_field_search": {
            "name": "test_field_search",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearchController.test_search_work": {
            "name": "test_search_work",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearchController.test_dict_agg": {
            "name": "test_dict_agg",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearchController.test_aggregate_data": {
            "name": "test_aggregate_data",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/controllers/test_util.py": {
        "TestUtils.test_query": {
            "name": "test_query",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_extension": {
            "name": "test_get_extension",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_return_or_404": {
            "name": "test_return_or_404",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_normalize": {
            "name": "test_normalize",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_to_none": {
            "name": "test_to_none",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_dashed_list": {
            "name": "test_dashed_list",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_return_or_404.raises": {
            "name": "raises",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "TestUtils.test_return_or_404.doesnt_raise": {
            "name": "doesnt_raise",
            "location": 24,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        }
    },
    "poet-master/test/app/controllers/__init__.py": {},
    "poet-master/test/app/models/test_choices.py": {
        "TestChoices.test_validate_date": {
            "name": "test_validate_date",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/models/test_entity.py": {
        "TestWorkModel.test_entity_stringify_default": {
            "name": "test_entity_stringify_default",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWorkModel.test_entity_stringify_named": {
            "name": "test_entity_stringify_named",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWorkModel.test_entity_rel_stringify": {
            "name": "test_entity_rel_stringify",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/models/test_relations.py": {
        "TestRelations.test_strip_to_none": {
            "name": "test_strip_to_none",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/models/test_work.py": {
        "TestWorkModel.test_work_collection_stringify_default": {
            "name": "test_work_collection_stringify_default",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWorkModel.test_work_collection_stringify_named": {
            "name": "test_work_collection_stringify_named",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWorkModel.test_work_stringify_default": {
            "name": "test_work_stringify_default",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/models/__init__.py": {},
    "poet-master/test/app/views/test_collection.py": {
        "TestCollection.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCollection.test_200_collection": {
            "name": "test_200_collection",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCollection.test_csrf": {
            "name": "test_csrf",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCollection.test_entity_contains_search": {
            "name": "test_entity_contains_search",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCollection.test_entity_contains_audio": {
            "name": "test_entity_contains_audio",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCollection.test_404_page": {
            "name": "test_404_page",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/views/test_entity.py": {
        "TestEntity.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEntity.test_200_collection": {
            "name": "test_200_collection",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEntity.test_csrf": {
            "name": "test_csrf",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEntity.test_entity_contains_search": {
            "name": "test_entity_contains_search",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEntity.test_entity_contains_audio": {
            "name": "test_entity_contains_audio",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEntity.test_404_page": {
            "name": "test_404_page",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/views/test_search.py": {
        "TestSearch.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearch.test_200_search": {
            "name": "test_200_search",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearch.test_csrf": {
            "name": "test_csrf",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearch.test_entity_contains_search": {
            "name": "test_entity_contains_search",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearch.test_entity_contains_audio": {
            "name": "test_entity_contains_audio",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/views/test_work.py": {
        "TestWork.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWork.test_200_collection": {
            "name": "test_200_collection",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWork.test_csrf": {
            "name": "test_csrf",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWork.test_entity_contains_search": {
            "name": "test_entity_contains_search",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWork.test_entity_contains_audio": {
            "name": "test_entity_contains_audio",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWork.test_404_page": {
            "name": "test_404_page",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "poet-master/test/app/views/__init__.py": {}
}
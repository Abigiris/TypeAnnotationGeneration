{
    "polynomials-master/polynomial.py": {
        "main": {
            "name": "main",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Polynomial.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [
                    "typing.Callable[[], bool]",
                    "bool",
                    "list[tuple[typing.Union[str,str,str,str]]]",
                    "list[str]"
                ]
            }
        },
        "Polynomial._to_poly": {
            "name": "_to_poly",
            "location": 9,
            "return": [
                "Polynomial"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int"
                ]
            }
        },
        "Polynomial.at": {
            "name": "at",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "i": [
                    "int",
                    "typing.Iterator"
                ]
            }
        },
        "Polynomial.__add__": {
            "name": "__add__",
            "location": 22,
            "return": [
                "Polynomial"
            ],
            "arguments": {
                "self": [],
                "rhs": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "Polynomial.__radd__": {
            "name": "__radd__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "lhs": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Polynomial.__sub__": {
            "name": "__sub__",
            "location": 29,
            "return": [
                "Polynomial"
            ],
            "arguments": {
                "self": [],
                "rhs": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Polynomial.__rsub__": {
            "name": "__rsub__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "lhs": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Polynomial.__mul__": {
            "name": "__mul__",
            "location": 36,
            "return": [
                "Polynomial"
            ],
            "arguments": {
                "self": [],
                "rhs": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Polynomial.__rmul__": {
            "name": "__rmul__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "lhs": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Polynomial.__pow__": {
            "name": "__pow__",
            "location": 45,
            "return": [
                "Polynomial",
                "int"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "Polynomial.__str__": {
            "name": "__str__",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Polynomial.__repr__": {
            "name": "__repr__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Polynomial.__mul__.f": {
            "name": "f",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "n": []
            }
        },
        "Polynomial.__str__.x": {
            "name": "x",
            "location": 53,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "i": []
            }
        },
        "Polynomial.__str__.sign": {
            "name": "sign",
            "location": 62,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "x": []
            }
        }
    }
}
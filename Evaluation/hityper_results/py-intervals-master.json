{
    "py-intervals-master/intervals/deprecated.py": {
        "prompt": {
            "name": "prompt",
            "location": 100,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "create_random_ranges": {
            "name": "create_random_ranges",
            "location": 112,
            "return": [
                "tuple[list[typing.Union[float,int,str]]]"
            ],
            "arguments": {
                "nb_ranges": [
                    "int",
                    "str"
                ]
            }
        },
        "intersects": {
            "name": "intersects",
            "location": 134,
            "return": [
                "bool"
            ],
            "arguments": {
                "point": [],
                "range": []
            }
        },
        "included_ranges": {
            "name": "included_ranges",
            "location": 139,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "point": [
                    "float",
                    "int"
                ],
                "ranges": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Node.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "float",
                    "str",
                    "typing.Callable[None, bool]"
                ],
                "ranges": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "Node.find": {
            "name": "find",
            "location": 48,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "list[]"
                ],
                "ranges": [
                    "list[]"
                ]
            }
        },
        "Tree.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tree.set_root": {
            "name": "set_root",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ],
                "ranges": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ]
            }
        },
        "Tree.insert": {
            "name": "insert",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int"
                ],
                "ranges": [
                    "int",
                    "None",
                    "float"
                ]
            }
        },
        "Tree.find": {
            "name": "find",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "int",
                    "bytes",
                    "float"
                ]
            }
        }
    },
    "py-intervals-master/intervals/__init__.py": {
        "prompt": {
            "name": "prompt",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "create_random_range": {
            "name": "create_random_range",
            "location": 21,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        },
        "create_ranges": {
            "name": "create_ranges",
            "location": 38,
            "return": [
                "dict[int, int]"
            ],
            "arguments": {
                "nb_ranges": [
                    "float",
                    "typing.Callable[[], float]",
                    "int"
                ]
            }
        },
        "get_nb_enclosures": {
            "name": "get_nb_enclosures",
            "location": 53,
            "return": [
                "int"
            ],
            "arguments": {
                "value": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ],
                "ranges": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        }
    },
    "py-intervals-master/tests/test_create_random_range.py": {
        "test_create_random_range_ok": {
            "name": "test_create_random_range_ok",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_start_smaller_end_ok": {
            "name": "test_start_smaller_end_ok",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str"
                ]
            }
        },
        "test_no_range_one_element_ok": {
            "name": "test_no_range_one_element_ok",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str"
                ]
            }
        },
        "test_start_smaller_end_ok.randrange": {
            "name": "randrange",
            "location": 18,
            "return": [],
            "arguments": {
                "x": [],
                "_": []
            }
        },
        "test_no_range_one_element_ok.randrange": {
            "name": "randrange",
            "location": 33,
            "return": [],
            "arguments": {
                "x": [],
                "_": []
            }
        }
    },
    "py-intervals-master/tests/test_create_ranges.py": {
        "test_create_ranges_ok": {
            "name": "test_create_ranges_ok",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "py-intervals-master/tests/test_get_nb_enclosures.py": {
        "test_get_nb_enclosures_ok": {
            "name": "test_get_nb_enclosures_ok",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "py-intervals-master/tests/test_prompt.py": {
        "test_prompt_ok": {
            "name": "test_prompt_ok",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_prompt_with_no_input": {
            "name": "test_prompt_with_no_input",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_prompt_with_str_input": {
            "name": "test_prompt_with_str_input",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "py-intervals-master/tests/__init__.py": {}
}
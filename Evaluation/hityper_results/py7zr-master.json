{
    "py7zr-master/setup.py": {},
    "py7zr-master/docs/conf.py": {},
    "py7zr-master/py7zr/archiveinfo.py": {
        "read_crcs": {
            "name": "read_crcs",
            "location": 46,
            "return": [
                "list[]"
            ],
            "arguments": {
                "file": [],
                "count": [
                    "int",
                    "list[str]"
                ]
            }
        },
        "write_crcs": {
            "name": "write_crcs",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "typing.BinaryIO",
                    "str"
                ],
                "crcs": [
                    "str",
                    "list[str]",
                    "list[]"
                ]
            }
        },
        "read_byte": {
            "name": "read_byte",
            "location": 56,
            "return": [
                "int"
            ],
            "arguments": {
                "file": []
            }
        },
        "write_bytes": {
            "name": "write_bytes",
            "location": 60,
            "return": [],
            "arguments": {
                "file": [],
                "data": [
                    "bytes",
                    "typing.BinaryIO",
                    "str"
                ]
            }
        },
        "write_byte": {
            "name": "write_byte",
            "location": 64,
            "return": [],
            "arguments": {
                "file": [
                    "typing.BinaryIO",
                    "str",
                    "bytes",
                    "dict[, ]"
                ],
                "data": [
                    "bytes",
                    "str",
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "read_real_uint64": {
            "name": "read_real_uint64",
            "location": 69,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "file": []
            }
        },
        "read_uint32": {
            "name": "read_uint32",
            "location": 76,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "file": []
            }
        },
        "write_uint32": {
            "name": "write_uint32",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [],
                "value": [
                    "str",
                    "tuple[]"
                ]
            }
        },
        "read_uint64": {
            "name": "read_uint64",
            "location": 89,
            "return": [
                "int"
            ],
            "arguments": {
                "file": []
            }
        },
        "write_real_uint64": {
            "name": "write_real_uint64",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "typing.BinaryIO",
                    "int",
                    "str",
                    "bytes",
                    "set[str]"
                ],
                "value": [
                    "typing.BinaryIO",
                    "int",
                    "str",
                    "bytes",
                    "set[str]"
                ]
            }
        },
        "write_uint64": {
            "name": "write_uint64",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [],
                "value": [
                    "int"
                ]
            }
        },
        "read_boolean": {
            "name": "read_boolean",
            "location": 162,
            "return": [
                "list[bool]"
            ],
            "arguments": {
                "file": [],
                "count": [
                    "int"
                ],
                "checkall": [
                    "bool"
                ]
            }
        },
        "write_boolean": {
            "name": "write_boolean",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [],
                "booleans": [],
                "all_defined": [
                    "bool"
                ]
            }
        },
        "read_utf16": {
            "name": "read_utf16",
            "location": 192,
            "return": [
                "str"
            ],
            "arguments": {
                "file": []
            }
        },
        "write_utf16": {
            "name": "write_utf16",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [],
                "val": [
                    "str",
                    "list[str]",
                    "list[]"
                ]
            }
        },
        "bits_to_bytes": {
            "name": "bits_to_bytes",
            "location": 210,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "bit_length": [
                    "int",
                    "float"
                ]
            }
        },
        "PackInfo.__init__": {
            "name": "__init__",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackInfo.retrieve": {
            "name": "retrieve",
            "location": 236,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.BinaryIO",
                    "bool",
                    "typing.Pattern"
                ],
                "file": [
                    "typing.BinaryIO",
                    "bool",
                    "typing.Pattern"
                ]
            }
        },
        "PackInfo._read": {
            "name": "_read",
            "location": 239,
            "return": [
                "PackInfo"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "PackInfo.write": {
            "name": "write",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO",
                    "typing.IO",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Bond.__init__": {
            "name": "__init__",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "incoder": [
                    "int",
                    "float"
                ],
                "outcoder": [
                    "int",
                    "float"
                ]
            }
        },
        "Folder.__init__": {
            "name": "__init__",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Folder.retrieve": {
            "name": "retrieve",
            "location": 334,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "file": [
                    "typing.BinaryIO",
                    "bool",
                    "typing.Pattern"
                ]
            }
        },
        "Folder._read": {
            "name": "_read",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "Folder.prepare_coderinfo": {
            "name": "prepare_coderinfo",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filters": [
                    "dict[, ]",
                    "typing.Type",
                    "dict[str, dict[str, typing.Any]]"
                ]
            }
        },
        "Folder.write": {
            "name": "write",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO",
                    "typing.IO",
                    "bytes",
                    "typing.TextIO"
                ]
            }
        },
        "Folder.is_simple": {
            "name": "is_simple",
            "location": 420,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "coder": [
                    "str"
                ]
            }
        },
        "Folder.get_decompressor": {
            "name": "get_decompressor",
            "location": 423,
            "return": [
                "int",
                "float",
                "str",
                "SevenZipDecompressor"
            ],
            "arguments": {
                "self": [],
                "packsize": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "reset": [
                    "bool"
                ]
            }
        },
        "Folder.get_compressor": {
            "name": "get_compressor",
            "location": 430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Folder.get_unpack_size": {
            "name": "get_unpack_size",
            "location": 434,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Folder._find_in_bin_pair": {
            "name": "_find_in_bin_pair",
            "location": 442,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "str",
                    "set[]"
                ]
            }
        },
        "Folder._find_out_bin_pair": {
            "name": "_find_out_bin_pair",
            "location": 448,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "float",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "UnpackInfo.retrieve": {
            "name": "retrieve",
            "location": 461,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "file": [
                    "typing.BinaryIO",
                    "bool",
                    "typing.Pattern"
                ]
            }
        },
        "UnpackInfo.__init__": {
            "name": "__init__",
            "location": 466,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnpackInfo._read": {
            "name": "_read",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "UnpackInfo._retrieve_coders_info": {
            "name": "_retrieve_coders_info",
            "location": 488,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "UnpackInfo.write": {
            "name": "write",
            "location": 509,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO",
                    "typing.TextIO"
                ]
            }
        },
        "SubstreamsInfo.__init__": {
            "name": "__init__",
            "location": 541,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubstreamsInfo.retrieve": {
            "name": "retrieve",
            "location": 548,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "file": [
                    "typing.BinaryIO",
                    "int",
                    "str",
                    "None",
                    "typing.TextIO"
                ],
                "numfolders": [
                    "typing.BinaryIO",
                    "int",
                    "str",
                    "None",
                    "typing.TextIO"
                ],
                "folders": [
                    "typing.BinaryIO",
                    "int",
                    "str",
                    "None",
                    "typing.TextIO"
                ]
            }
        },
        "SubstreamsInfo._read": {
            "name": "_read",
            "location": 553,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [],
                "numfolders": [
                    "int"
                ],
                "folders": [
                    "typing.Iterable[typing.Any]",
                    "typing.Callable[, ]",
                    "typing.TextIO",
                    "int",
                    "str"
                ]
            }
        },
        "SubstreamsInfo.write": {
            "name": "write",
            "location": 599,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO",
                    "str",
                    "typing.IO"
                ]
            }
        },
        "StreamsInfo.__init__": {
            "name": "__init__",
            "location": 630,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamsInfo.retrieve": {
            "name": "retrieve",
            "location": 636,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "file": [
                    "typing.BinaryIO",
                    "bool",
                    "typing.Pattern"
                ]
            }
        },
        "StreamsInfo.read": {
            "name": "read",
            "location": 641,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "StreamsInfo.write": {
            "name": "write",
            "location": 657,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO"
                ]
            }
        },
        "HeaderStreamsInfo.__init__": {
            "name": "__init__",
            "location": 673,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HeaderStreamsInfo.write": {
            "name": "write",
            "location": 679,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO",
                    "str"
                ]
            }
        },
        "FilesInfo.__init__": {
            "name": "__init__",
            "location": 691,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FilesInfo.retrieve": {
            "name": "retrieve",
            "location": 697,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "file": [
                    "typing.BinaryIO",
                    "bool",
                    "typing.Pattern"
                ]
            }
        },
        "FilesInfo._read": {
            "name": "_read",
            "location": 702,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": []
            }
        },
        "FilesInfo._read_name": {
            "name": "_read_name",
            "location": 755,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "typing.BinaryIO",
                    "str",
                    "int"
                ]
            }
        },
        "FilesInfo._read_attributes": {
            "name": "_read_attributes",
            "location": 759,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buffer": [
                    "typing.BinaryIO",
                    "list[bool]",
                    "bytearray",
                    "memoryview",
                    "int"
                ],
                "defined": [
                    "typing.BinaryIO",
                    "list[bool]",
                    "bytearray",
                    "memoryview",
                    "int"
                ]
            }
        },
        "FilesInfo._read_times": {
            "name": "_read_times",
            "location": 763,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": [],
                "name": [
                    "str",
                    "bool",
                    "typing.Iterable[typing.Hashable]"
                ]
            }
        },
        "FilesInfo._read_start_pos": {
            "name": "_read_start_pos",
            "location": 771,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": []
            }
        },
        "FilesInfo._write_times": {
            "name": "_write_times",
            "location": 779,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": [
                    "typing.BinaryIO",
                    "bytes",
                    "memoryview",
                    "bytearray",
                    "dict[, ]"
                ],
                "propid": [
                    "str",
                    "typing.Callable[, ]",
                    "None",
                    "int",
                    "bytes",
                    "dict[, ]",
                    "list[]",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "int"
                ]
            }
        },
        "FilesInfo._write_prop_bool_vector": {
            "name": "_write_prop_bool_vector",
            "location": 800,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": [
                    "typing.BinaryIO",
                    "int",
                    "bytes"
                ],
                "propid": [
                    "int",
                    "str",
                    "float",
                    "bytes"
                ],
                "vector": [
                    "float",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "FilesInfo._are_there": {
            "name": "_are_there",
            "location": 805,
            "return": [
                "bool"
            ],
            "arguments": {
                "vector": [
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "FilesInfo._write_names": {
            "name": "_write_names",
            "location": 811,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO"
                ]
            }
        },
        "FilesInfo._write_attributes": {
            "name": "_write_attributes",
            "location": 827,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "typing.BinaryIO",
                    "typing.TextIO"
                ]
            }
        },
        "FilesInfo.write": {
            "name": "write",
            "location": 847,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "WriteWithCrc.__init__": {
            "name": "__init__",
            "location": 886,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": [
                    "int",
                    "float"
                ]
            }
        },
        "WriteWithCrc.write": {
            "name": "write",
            "location": 890,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "WriteWithCrc.tell": {
            "name": "tell",
            "location": 894,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Header.__init__": {
            "name": "__init__",
            "location": 903,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Header.retrieve": {
            "name": "retrieve",
            "location": 913,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "int"
                ],
                "fp": [
                    "int",
                    "typing.BinaryIO",
                    "str",
                    "list[\"libkol.Item\"]",
                    "dict[, ]",
                    "set[str]"
                ],
                "buffer": [
                    "int",
                    "typing.BinaryIO",
                    "str",
                    "list[\"libkol.Item\"]",
                    "dict[, ]",
                    "set[str]"
                ],
                "start_pos": [
                    "int",
                    "typing.BinaryIO",
                    "str",
                    "list[\"libkol.Item\"]",
                    "dict[, ]",
                    "set[str]"
                ],
                "password": [
                    "None",
                    "int",
                    "typing.BinaryIO",
                    "str",
                    "list[\"libkol.Item\"]",
                    "dict[, ]",
                    "set[str]"
                ]
            }
        },
        "Header._read": {
            "name": "_read",
            "location": 918,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": [],
                "buffer": [],
                "start_pos": [
                    "str",
                    "list[D]",
                    "None",
                    "set[str]",
                    "list[str]",
                    "int"
                ],
                "password": [
                    "bool",
                    "list[list[str]]",
                    "str",
                    "None",
                    "list[]",
                    "float"
                ]
            }
        },
        "Header._encode_header": {
            "name": "_encode_header",
            "location": 967,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "file": [],
                "afterheader": [
                    "str",
                    "None",
                    "bool"
                ],
                "filters": [
                    "str",
                    "list[]",
                    "bool"
                ]
            }
        },
        "Header.write": {
            "name": "write",
            "location": 997,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "file": [],
                "afterheader": [
                    "list[str]",
                    "typing.BinaryIO"
                ],
                "encoded": [
                    "bool"
                ],
                "encrypted": [
                    "bool"
                ]
            }
        },
        "Header._extract_header_info": {
            "name": "_extract_header_info",
            "location": 1018,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": []
            }
        },
        "Header.build_header": {
            "name": "build_header",
            "location": 1030,
            "return": [
                "Header"
            ],
            "arguments": {
                "filters": [
                    "str",
                    "bytes"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "Header.initialize": {
            "name": "initialize",
            "location": 1036,
            "return": [
                "Folder"
            ],
            "arguments": {
                "self": []
            }
        },
        "SignatureHeader.__init__": {
            "name": "__init__",
            "location": 1084,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SignatureHeader.retrieve": {
            "name": "retrieve",
            "location": 1095,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "file": [
                    "typing.BinaryIO",
                    "bool",
                    "typing.Pattern"
                ]
            }
        },
        "SignatureHeader._read": {
            "name": "_read",
            "location": 1100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "SignatureHeader.calccrc": {
            "name": "calccrc",
            "location": 1115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "length": [
                    "dict[str, typing.Any]",
                    "str",
                    "int",
                    "list[str]"
                ],
                "header_crc": [
                    "dict[str, typing.Any]",
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        },
        "SignatureHeader.write": {
            "name": "write",
            "location": 1125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "SignatureHeader._write_skelton": {
            "name": "_write_skelton",
            "location": 1139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        }
    },
    "py7zr-master/py7zr/callbacks.py": {
        "Callback.report_start_preparation": {
            "name": "report_start_preparation",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Callback.report_start": {
            "name": "report_start",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processing_file_path": [
                    "str",
                    "bool",
                    "list[dict[str, typing.Any]]"
                ],
                "processing_bytes": [
                    "str",
                    "bool",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "Callback.report_end": {
            "name": "report_end",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processing_file_path": [
                    "bool",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "wrote_bytes": [
                    "bool",
                    "str",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "Callback.report_warning": {
            "name": "report_warning",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Callback.report_postprocess": {
            "name": "report_postprocess",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "py7zr-master/py7zr/cli.py": {
        "CliExtractCallback.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "total_bytes": [
                    "int"
                ],
                "ofd": []
            }
        },
        "CliExtractCallback.report_start_preparation": {
            "name": "report_start_preparation",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CliExtractCallback.report_start": {
            "name": "report_start",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processing_file_path": [],
                "processing_bytes": [
                    "str",
                    "bool",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "CliExtractCallback.report_end": {
            "name": "report_end",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processing_file_path": [
                    "bool",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "wrote_bytes": []
            }
        },
        "CliExtractCallback.report_postprocess": {
            "name": "report_postprocess",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CliExtractCallback.report_warning": {
            "name": "report_warning",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Cli.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.run": {
            "name": "run",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "arg": [
                    "None",
                    "list[str]",
                    "str",
                    "typing.Any"
                ]
            }
        },
        "Cli._create_parser": {
            "name": "_create_parser",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cli.show_version": {
            "name": "show_version",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli._get_version": {
            "name": "_get_version",
            "location": 152,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Cli.show_help": {
            "name": "show_help",
            "location": 167,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Cli.run_info": {
            "name": "run_info",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Cli.run_list": {
            "name": "run_list",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Cli._run_list": {
            "name": "_run_list",
            "location": 213,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "target": [
                    "str"
                ],
                "verbose": [
                    "int",
                    "bytes",
                    "list[str]"
                ]
            }
        },
        "Cli.print_archiveinfo": {
            "name": "print_archiveinfo",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "archive": [],
                "file": []
            }
        },
        "Cli.run_test": {
            "name": "run_test",
            "location": 296,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Cli.run_extract": {
            "name": "run_extract",
            "location": 321,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Cli._check_volumesize_valid": {
            "name": "_check_volumesize_valid",
            "location": 377,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "str",
                    "typing.Match",
                    "int",
                    "list[]",
                    "dict[str, typing.Union[typing.Any,typing.Any,str]]"
                ]
            }
        },
        "Cli._volumesize_unitconv": {
            "name": "_volumesize_unitconv",
            "location": 383,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "typing.Match",
                    "str",
                    "int",
                    "None",
                    "typing.Pattern",
                    "typing.Iterator"
                ]
            }
        },
        "Cli.run_create": {
            "name": "run_create",
            "location": 389,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Cli.run_append": {
            "name": "run_append",
            "location": 433,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        }
    },
    "py7zr-master/py7zr/compressor.py": {
        "get_methods_names": {
            "name": "get_methods_names",
            "location": 1166,
            "return": [],
            "arguments": {
                "coders_lists": []
            }
        },
        "ISevenZipCompressor.compress": {
            "name": "compress",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ISevenZipCompressor.flush": {
            "name": "flush",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ISevenZipDecompressor.decompress": {
            "name": "decompress",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "AESCompressor.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "password": [],
                "blocksize": []
            }
        },
        "AESCompressor.encode_filter_properties": {
            "name": "encode_filter_properties",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AESCompressor.compress": {
            "name": "compress",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AESCompressor.flush": {
            "name": "flush",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AESDecompressor.__init__": {
            "name": "__init__",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "aes_properties": [],
                "password": [],
                "blocksize": []
            }
        },
        "AESDecompressor.decompress": {
            "name": "decompress",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "DeflateCompressor.__init__": {
            "name": "__init__",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeflateCompressor.compress": {
            "name": "compress",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "DeflateCompressor.flush": {
            "name": "flush",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeflateDecompressor.__init__": {
            "name": "__init__",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DeflateDecompressor.decompress": {
            "name": "decompress",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "Deflate64Compressor.__init__": {
            "name": "__init__",
            "location": 267,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deflate64Decompressor.__init__": {
            "name": "__init__",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deflate64Decompressor.decompress": {
            "name": "decompress",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "CopyCompressor.compress": {
            "name": "compress",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CopyCompressor.flush": {
            "name": "flush",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CopyDecompressor.decompress": {
            "name": "decompress",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "PpmdDecompressor.__init__": {
            "name": "__init__",
            "location": 308,
            "return": [],
            "arguments": {
                "self": [],
                "properties": [],
                "blocksize": []
            }
        },
        "PpmdDecompressor.decompress": {
            "name": "decompress",
            "location": 319,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "PpmdCompressor.__init__": {
            "name": "__init__",
            "location": 328,
            "return": [],
            "arguments": {
                "self": [],
                "properties": []
            }
        },
        "PpmdCompressor.compress": {
            "name": "compress",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "PpmdCompressor.flush": {
            "name": "flush",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PpmdCompressor._decode_property": {
            "name": "_decode_property",
            "location": 338,
            "return": [],
            "arguments": {
                "self": [],
                "properties": []
            }
        },
        "PpmdCompressor.encode_filter_properties": {
            "name": "encode_filter_properties",
            "location": 343,
            "return": [],
            "arguments": {
                "cls": [],
                "filter": []
            }
        },
        "BcjSparcDecoder.__init__": {
            "name": "__init__",
            "location": 366,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "BcjSparcDecoder.decompress": {
            "name": "decompress",
            "location": 369,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "BcjSparcEncoder.__init__": {
            "name": "__init__",
            "location": 374,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BcjSparcEncoder.compress": {
            "name": "compress",
            "location": 377,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BcjSparcEncoder.flush": {
            "name": "flush",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BcjPpcDecoder.__init__": {
            "name": "__init__",
            "location": 385,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "BcjPpcDecoder.decompress": {
            "name": "decompress",
            "location": 388,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "BcjPpcEncoder.__init__": {
            "name": "__init__",
            "location": 393,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BcjPpcEncoder.compress": {
            "name": "compress",
            "location": 396,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BcjPpcEncoder.flush": {
            "name": "flush",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BcjArmtDecoder.__init__": {
            "name": "__init__",
            "location": 404,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "BcjArmtDecoder.decompress": {
            "name": "decompress",
            "location": 407,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "BcjArmtEncoder.__init__": {
            "name": "__init__",
            "location": 412,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BcjArmtEncoder.compress": {
            "name": "compress",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BcjArmtEncoder.flush": {
            "name": "flush",
            "location": 418,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BcjArmDecoder.__init__": {
            "name": "__init__",
            "location": 423,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "BcjArmDecoder.decompress": {
            "name": "decompress",
            "location": 426,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "BcjArmEncoder.__init__": {
            "name": "__init__",
            "location": 431,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BcjArmEncoder.compress": {
            "name": "compress",
            "location": 434,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BcjArmEncoder.flush": {
            "name": "flush",
            "location": 437,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BCJDecoder.__init__": {
            "name": "__init__",
            "location": 442,
            "return": [],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "BCJDecoder.decompress": {
            "name": "decompress",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "BCJEncoder.__init__": {
            "name": "__init__",
            "location": 450,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BCJEncoder.compress": {
            "name": "compress",
            "location": 453,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BCJEncoder.flush": {
            "name": "flush",
            "location": 456,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BrotliCompressor.__init__": {
            "name": "__init__",
            "location": 461,
            "return": [],
            "arguments": {
                "self": [],
                "level": []
            }
        },
        "BrotliCompressor.compress": {
            "name": "compress",
            "location": 464,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BrotliCompressor.flush": {
            "name": "flush",
            "location": 467,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BrotliDecompressor.__init__": {
            "name": "__init__",
            "location": 472,
            "return": [],
            "arguments": {
                "self": [],
                "properties": [],
                "block_size": []
            }
        },
        "BrotliDecompressor.decompress": {
            "name": "decompress",
            "location": 485,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "ZstdCompressor.__init__": {
            "name": "__init__",
            "location": 497,
            "return": [],
            "arguments": {
                "self": [],
                "level": []
            }
        },
        "ZstdCompressor.compress": {
            "name": "compress",
            "location": 500,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ZstdCompressor.flush": {
            "name": "flush",
            "location": 503,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZstdDecompressor.__init__": {
            "name": "__init__",
            "location": 508,
            "return": [],
            "arguments": {
                "self": [],
                "properties": [],
                "blocksize": []
            }
        },
        "ZstdDecompressor.decompress": {
            "name": "decompress",
            "location": 515,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "LZMA1Decompressor.__init__": {
            "name": "__init__",
            "location": 537,
            "return": [],
            "arguments": {
                "self": [],
                "filters": [],
                "unpacksize": []
            }
        },
        "LZMA1Decompressor.decompress": {
            "name": "decompress",
            "location": 541,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "SevenZipDecompressor.__init__": {
            "name": "__init__",
            "location": 549,
            "return": [],
            "arguments": {
                "self": [],
                "coders": [],
                "packsize": [],
                "unpacksizes": [],
                "crc": [],
                "password": [],
                "blocksize": []
            }
        },
        "SevenZipDecompressor._decompress": {
            "name": "_decompress",
            "location": 634,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "max_length": []
            }
        },
        "SevenZipDecompressor._read_data": {
            "name": "_read_data",
            "location": 645,
            "return": [],
            "arguments": {
                "self": [],
                "fp": []
            }
        },
        "SevenZipDecompressor.decompress": {
            "name": "decompress",
            "location": 663,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "max_length": []
            }
        },
        "SevenZipDecompressor.check_crc": {
            "name": "check_crc",
            "location": 693,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipDecompressor.unused_size": {
            "name": "unused_size",
            "location": 697,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipDecompressor._get_lzma_decompressor": {
            "name": "_get_lzma_decompressor",
            "location": 700,
            "return": [],
            "arguments": {
                "self": [],
                "coders": [],
                "unpacksize": []
            }
        },
        "SevenZipDecompressor._get_alternative_decompressor": {
            "name": "_get_alternative_decompressor",
            "location": 721,
            "return": [],
            "arguments": {
                "self": [],
                "coder": [],
                "unpacksize": [],
                "password": []
            }
        },
        "SevenZipCompressor.__init__": {
            "name": "__init__",
            "location": 767,
            "return": [],
            "arguments": {
                "self": [],
                "filters": [],
                "password": [],
                "blocksize": []
            }
        },
        "SevenZipCompressor._set_native_compressors_coders": {
            "name": "_set_native_compressors_coders",
            "location": 817,
            "return": [],
            "arguments": {
                "self": [],
                "filters": []
            }
        },
        "SevenZipCompressor._set_alternate_compressors_coders": {
            "name": "_set_alternate_compressors_coders",
            "location": 823,
            "return": [],
            "arguments": {
                "self": [],
                "alt_filter": [],
                "password": []
            }
        },
        "SevenZipCompressor.compress": {
            "name": "compress",
            "location": 858,
            "return": [],
            "arguments": {
                "self": [],
                "fd": [],
                "fp": [],
                "crc": []
            }
        },
        "SevenZipCompressor.flush": {
            "name": "flush",
            "location": 875,
            "return": [],
            "arguments": {
                "self": [],
                "fp": []
            }
        },
        "SevenZipCompressor.unpacksizes": {
            "name": "unpacksizes",
            "location": 890,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SupportedMethods._find_method": {
            "name": "_find_method",
            "location": 1051,
            "return": [],
            "arguments": {
                "cls": [],
                "key_id": [],
                "key_value": []
            }
        },
        "SupportedMethods.get_method_name_id": {
            "name": "get_method_name_id",
            "location": 1055,
            "return": [],
            "arguments": {
                "cls": [],
                "filter_id": []
            }
        },
        "SupportedMethods.get_filter_id": {
            "name": "get_filter_id",
            "location": 1060,
            "return": [],
            "arguments": {
                "cls": [],
                "coder": []
            }
        },
        "SupportedMethods.is_native_filter": {
            "name": "is_native_filter",
            "location": 1067,
            "return": [],
            "arguments": {
                "cls": [],
                "filter": []
            }
        },
        "SupportedMethods.is_compressor": {
            "name": "is_compressor",
            "location": 1074,
            "return": [],
            "arguments": {
                "cls": [],
                "filter": []
            }
        },
        "SupportedMethods.is_compressor_id": {
            "name": "is_compressor_id",
            "location": 1079,
            "return": [],
            "arguments": {
                "cls": [],
                "filter_id": []
            }
        },
        "SupportedMethods.is_native_coder": {
            "name": "is_native_coder",
            "location": 1084,
            "return": [],
            "arguments": {
                "cls": [],
                "coder": []
            }
        },
        "SupportedMethods.need_property": {
            "name": "need_property",
            "location": 1091,
            "return": [],
            "arguments": {
                "cls": [],
                "filter_id": []
            }
        },
        "SupportedMethods.is_crypto_id": {
            "name": "is_crypto_id",
            "location": 1098,
            "return": [],
            "arguments": {
                "cls": [],
                "filter_id": []
            }
        },
        "SupportedMethods.get_method_id": {
            "name": "get_method_id",
            "location": 1105,
            "return": [],
            "arguments": {
                "cls": [],
                "filter_id": []
            }
        },
        "SupportedMethods.get_coder": {
            "name": "get_coder",
            "location": 1112,
            "return": [],
            "arguments": {
                "cls": [],
                "filter": []
            }
        },
        "SupportedMethods.needs_password": {
            "name": "needs_password",
            "location": 1126,
            "return": [],
            "arguments": {
                "cls": [],
                "coders": []
            }
        },
        "SupportedMethods.raise_unsupported_method_id": {
            "name": "raise_unsupported_method_id",
            "location": 1136,
            "return": [],
            "arguments": {
                "cls": [],
                "coder": []
            }
        },
        "SupportedMethods.raise_unsupported_filter_id": {
            "name": "raise_unsupported_filter_id",
            "location": 1160,
            "return": [],
            "arguments": {
                "cls": [],
                "filter_id": []
            }
        }
    },
    "py7zr-master/py7zr/exceptions.py": {
        "ArchiveError.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrcError.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expected": [
                    "str",
                    "None",
                    "dict[, ]"
                ],
                "actual": [
                    "bool",
                    "str",
                    "None"
                ],
                "filename": [
                    "str",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "UnsupportedCompressionMethodError.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "int",
                    "dict[str, object]",
                    "dict[, ]",
                    "str"
                ],
                "message": [
                    "str",
                    "float",
                    "None",
                    "typing.Any",
                    "dict[, ]"
                ]
            }
        }
    },
    "py7zr-master/py7zr/helpers.py": {
        "calculate_crc32": {
            "name": "calculate_crc32",
            "location": 42,
            "return": [],
            "arguments": {
                "data": [],
                "value": [
                    "int"
                ],
                "blocksize": [
                    "int"
                ]
            }
        },
        "_calculate_key1": {
            "name": "_calculate_key1",
            "location": 56,
            "return": [
                "bytes"
            ],
            "arguments": {
                "password": [],
                "cycles": [
                    "int"
                ],
                "salt": [],
                "digest": [
                    "str",
                    "int",
                    "bytes",
                    "None"
                ]
            }
        },
        "_calculate_key2": {
            "name": "_calculate_key2",
            "location": 73,
            "return": [
                "bytes"
            ],
            "arguments": {
                "password": [],
                "cycles": [
                    "int"
                ],
                "salt": [],
                "digest": [
                    "str",
                    "int",
                    "bytes",
                    "None"
                ]
            }
        },
        "_calculate_key3": {
            "name": "_calculate_key3",
            "location": 105,
            "return": [
                "bytes"
            ],
            "arguments": {
                "password": [],
                "cycles": [
                    "int"
                ],
                "salt": [],
                "digest": [
                    "str",
                    "int",
                    "bytes",
                    "None"
                ]
            }
        },
        "filetime_to_dt": {
            "name": "filetime_to_dt",
            "location": 152,
            "return": [],
            "arguments": {
                "ft": [
                    "float"
                ]
            }
        },
        "islink": {
            "name": "islink",
            "location": 266,
            "return": [
                "str",
                "bool",
                "list[str]",
                "None",
                "tuple[typing.Union[str,int]]",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "readlink": {
            "name": "readlink",
            "location": 281,
            "return": [
                "typing.TextIO",
                "list[]",
                "typing.Pattern"
            ],
            "arguments": {
                "path": []
            }
        },
        "remove_relative_path_marker": {
            "name": "remove_relative_path_marker",
            "location": 425,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "LocalTimezone.fromutc": {
            "name": "fromutc",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "LocalTimezone.utcoffset": {
            "name": "utcoffset",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "str",
                    "int"
                ]
            }
        },
        "LocalTimezone.dst": {
            "name": "dst",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "str",
                    "int"
                ]
            }
        },
        "LocalTimezone.tzname": {
            "name": "tzname",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "str",
                    "int"
                ]
            }
        },
        "LocalTimezone._isdst": {
            "name": "_isdst",
            "location": 202,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "UTC.utcoffset": {
            "name": "utcoffset",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "typing.Callable[[], None]",
                    "int"
                ]
            }
        },
        "UTC.tzname": {
            "name": "tzname",
            "location": 229,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "typing.Callable[[], None]",
                    "int"
                ]
            }
        },
        "UTC.dst": {
            "name": "dst",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [
                    "typing.Callable[[], None]",
                    "int"
                ]
            }
        },
        "UTC._call__": {
            "name": "_call__",
            "location": 235,
            "return": [
                "UTC"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArchiveTimestamp.__repr__": {
            "name": "__repr__",
            "location": 242,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArchiveTimestamp.__index__": {
            "name": "__index__",
            "location": 245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveTimestamp.totimestamp": {
            "name": "totimestamp",
            "location": 248,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArchiveTimestamp.as_datetime": {
            "name": "as_datetime",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveTimestamp.from_datetime": {
            "name": "from_datetime",
            "location": 258,
            "return": [
                "ArchiveTimestamp"
            ],
            "arguments": {
                "val": [
                    "float"
                ]
            }
        },
        "ArchiveTimestamp.from_now": {
            "name": "from_now",
            "location": 262,
            "return": [
                "ArchiveTimestamp"
            ],
            "arguments": {}
        },
        "MemIO.__init__": {
            "name": "__init__",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buf": [
                    "int",
                    "float"
                ]
            }
        },
        "MemIO.write": {
            "name": "write",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "data": [
                    "str",
                    "bytes",
                    "bytearray"
                ]
            }
        },
        "MemIO.read": {
            "name": "read",
            "location": 317,
            "return": [],
            "arguments": {
                "self": [],
                "length": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "MemIO.close": {
            "name": "close",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MemIO.flush": {
            "name": "flush",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MemIO.seek": {
            "name": "seek",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "MemIO.open": {
            "name": "open",
            "location": 332,
            "return": [
                "MemIO"
            ],
            "arguments": {
                "self": [],
                "mode": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "MemIO.parent": {
            "name": "parent",
            "location": 336,
            "return": [
                "MemIO"
            ],
            "arguments": {
                "self": []
            }
        },
        "MemIO.mkdir": {
            "name": "mkdir",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parents": [
                    "None",
                    "bool"
                ],
                "exist_ok": [
                    "bool"
                ]
            }
        },
        "MemIO.__enter__": {
            "name": "__enter__",
            "location": 342,
            "return": [
                "MemIO"
            ],
            "arguments": {
                "self": []
            }
        },
        "MemIO.__exit__": {
            "name": "__exit__",
            "location": 345,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_val": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_tb": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "NullIO.__init__": {
            "name": "__init__",
            "location": 352,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NullIO.write": {
            "name": "write",
            "location": 355,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "NullIO.read": {
            "name": "read",
            "location": 358,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "length": [
                    "None"
                ]
            }
        },
        "NullIO.close": {
            "name": "close",
            "location": 364,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NullIO.flush": {
            "name": "flush",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NullIO.open": {
            "name": "open",
            "location": 370,
            "return": [
                "NullIO"
            ],
            "arguments": {
                "self": [],
                "mode": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "NullIO.parent": {
            "name": "parent",
            "location": 374,
            "return": [
                "NullIO"
            ],
            "arguments": {
                "self": []
            }
        },
        "NullIO.mkdir": {
            "name": "mkdir",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NullIO.__enter__": {
            "name": "__enter__",
            "location": 380,
            "return": [
                "NullIO"
            ],
            "arguments": {
                "self": []
            }
        },
        "NullIO.__exit__": {
            "name": "__exit__",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_val": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ],
                "exc_tb": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "Buffer.__init__": {
            "name": "__init__",
            "location": 392,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "Buffer.add": {
            "name": "add",
            "location": 397,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Buffer.reset": {
            "name": "reset",
            "location": 403,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Buffer.set": {
            "name": "set",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Buffer.get": {
            "name": "get",
            "location": 413,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Buffer.__len__": {
            "name": "__len__",
            "location": 418,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Buffer.__bytes__": {
            "name": "__bytes__",
            "location": 421,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "py7zr-master/py7zr/properties.py": {
        "is_64bit": {
            "name": "is_64bit",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_pypy369later": {
            "name": "is_pypy369later",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "get_default_blocksize": {
            "name": "get_default_blocksize",
            "location": 52,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "get_memory_limit": {
            "name": "get_memory_limit",
            "location": 89,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {}
        },
        "Constant.__setattr__": {
            "name": "__setattr__",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "py7zr-master/py7zr/py7zr.py": {
        "is_7zfile": {
            "name": "is_7zfile",
            "location": 1146,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "unpack_7zarchive": {
            "name": "unpack_7zarchive",
            "location": 1169,
            "return": [],
            "arguments": {
                "archive": [],
                "path": [],
                "extra": []
            }
        },
        "pack_7zarchive": {
            "name": "pack_7zarchive",
            "location": 1178,
            "return": [],
            "arguments": {
                "base_name": [],
                "base_dir": [],
                "owner": [],
                "group": [],
                "dry_run": [],
                "logger": []
            }
        },
        "ArchiveFile.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "file_info": []
            }
        },
        "ArchiveFile.file_properties": {
            "name": "file_properties",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile._get_property": {
            "name": "_get_property",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ArchiveFile.origin": {
            "name": "origin",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.folder": {
            "name": "folder",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.filename": {
            "name": "filename",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.emptystream": {
            "name": "emptystream",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.uncompressed": {
            "name": "uncompressed",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.compressed": {
            "name": "compressed",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.crc32": {
            "name": "crc32",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile._test_attribute": {
            "name": "_test_attribute",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "target_bit": []
            }
        },
        "ArchiveFile.archivable": {
            "name": "archivable",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.is_directory": {
            "name": "is_directory",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.readonly": {
            "name": "readonly",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile._get_unix_extension": {
            "name": "_get_unix_extension",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.data": {
            "name": "data",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.has_strdata": {
            "name": "has_strdata",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.is_symlink": {
            "name": "is_symlink",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.is_junction": {
            "name": "is_junction",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.is_socket": {
            "name": "is_socket",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.lastwritetime": {
            "name": "lastwritetime",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.posix_mode": {
            "name": "posix_mode",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFile.st_fmt": {
            "name": "st_fmt",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFileList.__init__": {
            "name": "__init__",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "offset": []
            }
        },
        "ArchiveFileList.append": {
            "name": "append",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "file_info": []
            }
        },
        "ArchiveFileList.__len__": {
            "name": "__len__",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFileList.__iter__": {
            "name": "__iter__",
            "location": 242,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveFileList.__getitem__": {
            "name": "__getitem__",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "ArchiveFileListIterator.__init__": {
            "name": "__init__",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "archive_file_list": []
            }
        },
        "ArchiveFileListIterator.__next__": {
            "name": "__next__",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArchiveInfo.__init__": {
            "name": "__init__",
            "location": 273,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "stat": [],
                "header_size": [],
                "method_names": [],
                "solid": [],
                "blocks": [],
                "uncompressed": []
            }
        },
        "FileInfo.__init__": {
            "name": "__init__",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "compressed": [],
                "uncompressed": [],
                "archivable": [],
                "is_directory": [],
                "creationtime": [],
                "crc32": []
            }
        },
        "SevenZipFile.__init__": {
            "name": "__init__",
            "location": 318,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "mode": []
            }
        },
        "SevenZipFile.__enter__": {
            "name": "__enter__",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.__exit__": {
            "name": "__exit__",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "SevenZipFile._fpclose": {
            "name": "_fpclose",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile._real_get_contents": {
            "name": "_real_get_contents",
            "location": 417,
            "return": [],
            "arguments": {
                "self": [],
                "password": []
            }
        },
        "SevenZipFile._extract": {
            "name": "_extract",
            "location": 524,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "targets": [],
                "return_dict": [],
                "callback": []
            }
        },
        "SevenZipFile._prepare_append": {
            "name": "_prepare_append",
            "location": 671,
            "return": [],
            "arguments": {
                "self": [],
                "filters": [],
                "password": []
            }
        },
        "SevenZipFile._prepare_write": {
            "name": "_prepare_write",
            "location": 689,
            "return": [],
            "arguments": {
                "self": [],
                "filters": [],
                "password": []
            }
        },
        "SevenZipFile._write_flush": {
            "name": "_write_flush",
            "location": 706,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile._write_header": {
            "name": "_write_header",
            "location": 712,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile._writeall": {
            "name": "_writeall",
            "location": 724,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "arcname": []
            }
        },
        "SevenZipFile._get_fileinfo_sizes": {
            "name": "_get_fileinfo_sizes",
            "location": 754,
            "return": [],
            "arguments": {
                "self": [],
                "pstat": [],
                "subinfo": [],
                "packinfo": [],
                "folder": [],
                "packsizes": [],
                "unpacksizes": [],
                "file_in_solid": [],
                "numinstreams": []
            }
        },
        "SevenZipFile.set_encoded_header_mode": {
            "name": "set_encoded_header_mode",
            "location": 778,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "SevenZipFile.set_encrypted_header": {
            "name": "set_encrypted_header",
            "location": 785,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "SevenZipFile._check_7zfile": {
            "name": "_check_7zfile",
            "location": 793,
            "return": [],
            "arguments": {
                "fp": []
            }
        },
        "SevenZipFile._get_method_names": {
            "name": "_get_method_names",
            "location": 798,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile._read_digest": {
            "name": "_read_digest",
            "location": 804,
            "return": [],
            "arguments": {
                "self": [],
                "pos": [],
                "size": []
            }
        },
        "SevenZipFile._is_solid": {
            "name": "_is_solid",
            "location": 814,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile._var_release": {
            "name": "_var_release",
            "location": 820,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile._make_file_info": {
            "name": "_make_file_info",
            "location": 830,
            "return": [],
            "arguments": {
                "target": [],
                "arcname": [],
                "dereference": []
            }
        },
        "SevenZipFile._make_file_info_from_name": {
            "name": "_make_file_info_from_name",
            "location": 912,
            "return": [],
            "arguments": {
                "self": [],
                "bio": [],
                "size": [],
                "arcname": []
            }
        },
        "SevenZipFile.getnames": {
            "name": "getnames",
            "location": 926,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.archiveinfo": {
            "name": "archiveinfo",
            "location": 932,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.needs_password": {
            "name": "needs_password",
            "location": 951,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.list": {
            "name": "list",
            "location": 954,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.readall": {
            "name": "readall",
            "location": 974,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.extractall": {
            "name": "extractall",
            "location": 977,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "callback": []
            }
        },
        "SevenZipFile.read": {
            "name": "read",
            "location": 985,
            "return": [],
            "arguments": {
                "self": [],
                "targets": []
            }
        },
        "SevenZipFile.extract": {
            "name": "extract",
            "location": 988,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "targets": []
            }
        },
        "SevenZipFile.reporter": {
            "name": "reporter",
            "location": 991,
            "return": [],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "SevenZipFile.writeall": {
            "name": "writeall",
            "location": 1014,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "arcname": []
            }
        },
        "SevenZipFile.write": {
            "name": "write",
            "location": 1025,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "arcname": []
            }
        },
        "SevenZipFile.writed": {
            "name": "writed",
            "location": 1040,
            "return": [],
            "arguments": {
                "self": [],
                "targets": []
            }
        },
        "SevenZipFile.writef": {
            "name": "writef",
            "location": 1044,
            "return": [],
            "arguments": {
                "self": [],
                "bio": [],
                "arcname": []
            }
        },
        "SevenZipFile.writestr": {
            "name": "writestr",
            "location": 1073,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "arcname": []
            }
        },
        "SevenZipFile.close": {
            "name": "close",
            "location": 1083,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.reset": {
            "name": "reset",
            "location": 1101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.test": {
            "name": "test",
            "location": 1112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.testzip": {
            "name": "testzip",
            "location": 1130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Worker.__init__": {
            "name": "__init__",
            "location": 1193,
            "return": [],
            "arguments": {
                "self": [],
                "files": [],
                "src_start": [],
                "header": [],
                "mp": []
            }
        },
        "Worker.extract": {
            "name": "extract",
            "location": 1205,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "parallel": [],
                "skip_notarget": [],
                "q": []
            }
        },
        "Worker.extract_single": {
            "name": "extract_single",
            "location": 1273,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "files": [],
                "src_start": [],
                "src_end": [],
                "q": [],
                "exc_q": [],
                "skip_notarget": []
            }
        },
        "Worker._extract_single": {
            "name": "_extract_single",
            "location": 1300,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "files": [],
                "src_end": [],
                "q": [],
                "skip_notarget": []
            }
        },
        "Worker._check": {
            "name": "_check",
            "location": 1369,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "check_target": [],
                "src_end": []
            }
        },
        "Worker.decompress": {
            "name": "decompress",
            "location": 1379,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "folder": [],
                "fq": [],
                "size": [],
                "compressed_size": [],
                "src_end": []
            }
        },
        "Worker._find_link_target": {
            "name": "_find_link_target",
            "location": 1419,
            "return": [],
            "arguments": {
                "self": [],
                "target": []
            }
        },
        "Worker._after_write": {
            "name": "_after_write",
            "location": 1440,
            "return": [],
            "arguments": {
                "self": [],
                "insize": [],
                "foutsize": [],
                "crc": []
            }
        },
        "Worker.write": {
            "name": "write",
            "location": 1453,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "f": [],
                "assym": [],
                "folder": []
            }
        },
        "Worker.writestr": {
            "name": "writestr",
            "location": 1466,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "f": [],
                "folder": []
            }
        },
        "Worker.flush_archive": {
            "name": "flush_archive",
            "location": 1471,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "folder": []
            }
        },
        "Worker.archive": {
            "name": "archive",
            "location": 1487,
            "return": [],
            "arguments": {
                "self": [],
                "fp": [],
                "files": [],
                "folder": [],
                "deref": []
            }
        },
        "Worker.register_filelike": {
            "name": "register_filelike",
            "location": 1502,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "fileish": []
            }
        },
        "Worker.close": {
            "name": "close",
            "location": 1506,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SevenZipFile.ParseStatus.__init__": {
            "name": "__init__",
            "location": 747,
            "return": [],
            "arguments": {
                "self": [],
                "src_pos": []
            }
        }
    },
    "py7zr-master/py7zr/win32compat.py": {
        "is_windows_native_python": {
            "name": "is_windows_native_python",
            "location": 203,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "is_windows_unc_path": {
            "name": "is_windows_unc_path",
            "location": 212,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "bool",
                    "str"
                ]
            }
        },
        "_check_bit": {
            "name": "_check_bit",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "val": [
                    "int"
                ],
                "flag": [
                    "int"
                ]
            }
        },
        "is_reparse_point": {
            "name": "is_reparse_point",
            "location": 91,
            "return": [],
            "arguments": {
                "path": [
                    "str",
                    "list[pathlib.Path]"
                ]
            }
        },
        "readlink": {
            "name": "readlink",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "py7zr-master/py7zr/__init__.py": {},
    "py7zr-master/py7zr/__main__.py": {
        "main": {
            "name": "main",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "py7zr-master/tests/conftest.py": {
        "pytest_collection_finish": {
            "name": "pytest_collection_finish",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str",
                    "list[]"
                ]
            }
        },
        "collect_types_fixture": {
            "name": "collect_types_fixture",
            "location": 20,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "pytest_sessionfinish": {
            "name": "pytest_sessionfinish",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str",
                    "list[]"
                ],
                "exitstatus": [
                    "str",
                    "list[]"
                ]
            }
        },
        "pytest_benchmark_update_json": {
            "name": "pytest_benchmark_update_json",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "str"
                ],
                "benchmarks": [
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "str"
                ],
                "output_json": [
                    "str"
                ]
            }
        },
        "pytest_benchmark_update_machine_info": {
            "name": "pytest_benchmark_update_machine_info",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "bool",
                    "typing.Type",
                    "list[dict[, ]]",
                    "str"
                ],
                "machine_info": []
            }
        },
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "pytest_collection_modifyitems": {
            "name": "pytest_collection_modifyitems",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "items": [
                    "list[]",
                    "dict[, ]",
                    "str"
                ]
            }
        }
    },
    "py7zr-master/tests/test_archive.py": {
        "check_bit": {
            "name": "check_bit",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "val": [
                    "int"
                ],
                "mask": [
                    "int"
                ]
            }
        },
        "test_compress_single_encoded_header": {
            "name": "test_compress_single_encoded_header",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "capsys": [],
                "tmp_path": []
            }
        },
        "test_compress_directory_encoded_header": {
            "name": "test_compress_directory_encoded_header",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_files_encoded_header": {
            "name": "test_compress_files_encoded_header",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_file_0": {
            "name": "test_compress_file_0",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "capsys": [],
                "tmp_path": []
            }
        },
        "test_compress_directory": {
            "name": "test_compress_directory",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_files_1": {
            "name": "test_compress_files_1",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_register_archive_format": {
            "name": "test_register_archive_format",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_with_simple_filter": {
            "name": "test_compress_with_simple_filter",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_with_custom_filter": {
            "name": "test_compress_with_custom_filter",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_files_2": {
            "name": "test_compress_files_2",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_files_3": {
            "name": "test_compress_files_3",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_symlink": {
            "name": "test_compress_symlink",
            "location": 398,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_zerofile": {
            "name": "test_compress_zerofile",
            "location": 475,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_directories": {
            "name": "test_compress_directories",
            "location": 503,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_absolute_symlink_as_relative": {
            "name": "test_compress_absolute_symlink_as_relative",
            "location": 538,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_files_deref": {
            "name": "test_compress_files_deref",
            "location": 571,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_lzma2_bcj": {
            "name": "test_compress_lzma2_bcj",
            "location": 587,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_files_deref_loop": {
            "name": "test_compress_files_deref_loop",
            "location": 633,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_writestr1": {
            "name": "test_compress_writestr1",
            "location": 646,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_writestr2": {
            "name": "test_compress_writestr2",
            "location": 660,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_writef1": {
            "name": "test_compress_writef1",
            "location": 674,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_writef2": {
            "name": "test_compress_writef2",
            "location": 688,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_writef3": {
            "name": "test_compress_writef3",
            "location": 702,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_copy": {
            "name": "test_compress_copy",
            "location": 714,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_multi_filter_delta": {
            "name": "test_compress_multi_filter_delta",
            "location": 739,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_deflate": {
            "name": "test_compress_deflate",
            "location": 785,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_deflate_bcj": {
            "name": "test_compress_deflate_bcj",
            "location": 800,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_bz2_bcj": {
            "name": "test_compress_bz2_bcj",
            "location": 815,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_zstd": {
            "name": "test_compress_zstd",
            "location": 831,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_zstd_2": {
            "name": "test_compress_zstd_2",
            "location": 845,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_arm64": {
            "name": "test_compress_arm64",
            "location": 859,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_ppc": {
            "name": "test_compress_ppc",
            "location": 874,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_ia64": {
            "name": "test_compress_ia64",
            "location": 892,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_sparc": {
            "name": "test_compress_sparc",
            "location": 910,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_armt": {
            "name": "test_compress_armt",
            "location": 928,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_small_files": {
            "name": "test_compress_small_files",
            "location": 946,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_append": {
            "name": "test_compress_append",
            "location": 960,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_append_2": {
            "name": "test_compress_append_2",
            "location": 977,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_append_files_2": {
            "name": "test_append_files_2",
            "location": 991,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_append_empty_files": {
            "name": "test_append_empty_files",
            "location": 1009,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_archive_emptyfile_1": {
            "name": "test_archive_emptyfile_1",
            "location": 1031,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_null_archive": {
            "name": "test_compress_null_archive",
            "location": 1049,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_append_archive": {
            "name": "test_compress_append_archive",
            "location": 1063,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_append_writestr_archive": {
            "name": "test_compress_append_writestr_archive",
            "location": 1080,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_simple_file_0": {
            "name": "test_compress_simple_file_0",
            "location": 1098,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_append_archive_w_zerofile": {
            "name": "test_compress_append_archive_w_zerofile",
            "location": 1105,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "py7zr-master/tests/test_basic.py": {
        "test_basic_initinfo": {
            "name": "test_basic_initinfo",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_basic_not_implemented_yet1": {
            "name": "test_basic_not_implemented_yet1",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_basic_append_mode": {
            "name": "test_basic_append_mode",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_basic_wrong_option_value": {
            "name": "test_basic_wrong_option_value",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_basic_extract_1": {
            "name": "test_basic_extract_1",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "test_basic_extract_2": {
            "name": "test_basic_extract_2",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "test_basic_decode_3": {
            "name": "test_basic_decode_3",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "test_py7zr_is_7zfile": {
            "name": "test_py7zr_is_7zfile",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_is_7zfile_fileish": {
            "name": "test_py7zr_is_7zfile_fileish",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_is_7zfile_path": {
            "name": "test_py7zr_is_7zfile_path",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_is_not_7zfile": {
            "name": "test_py7zr_is_not_7zfile",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_digests": {
            "name": "test_digests",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_digests_corrupted": {
            "name": "test_digests_corrupted",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_write_mode": {
            "name": "test_py7zr_write_mode",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_py7zr_writeall_single": {
            "name": "test_py7zr_writeall_single",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_py7zr_writeall_dir": {
            "name": "test_py7zr_writeall_dir",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_py7zr_extract_specified_file": {
            "name": "test_py7zr_extract_specified_file",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_py7zr_extract_and_getnames": {
            "name": "test_py7zr_extract_and_getnames",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_py7zr_extract_and_reset_iteration": {
            "name": "test_py7zr_extract_and_reset_iteration",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_context_manager_1": {
            "name": "test_context_manager_1",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_context_manager_2": {
            "name": "test_context_manager_2",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_py7zr_list_values": {
            "name": "test_py7zr_list_values",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "py7zr-master/tests/test_benchmark.py": {
        "test_benchmark_filters_compress": {
            "name": "test_benchmark_filters_compress",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [],
                "benchmark": [
                    "str",
                    "bytes"
                ],
                "name": [
                    "str"
                ],
                "filters": [
                    "list[tuple[typing.Union[str,str]]]",
                    "bool"
                ]
            }
        },
        "test_benchmark_filters_decompress": {
            "name": "test_benchmark_filters_decompress",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [],
                "benchmark": [
                    "str",
                    "int"
                ],
                "name": [
                    "str"
                ],
                "filters": [
                    "str",
                    "None"
                ]
            }
        },
        "test_benchmark_text_compress": {
            "name": "test_benchmark_text_compress",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [],
                "benchmark": [
                    "str",
                    "bytes",
                    "int",
                    "float",
                    "dict[, ]",
                    "Exception"
                ],
                "name": [
                    "str",
                    "typing.IO",
                    "bool",
                    "None"
                ],
                "filters": [
                    "list[tuple[typing.Union[str,str]]]",
                    "int",
                    "None"
                ]
            }
        },
        "test_benchmark_text_decompress": {
            "name": "test_benchmark_text_decompress",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [],
                "benchmark": [
                    "str",
                    "int"
                ],
                "name": [
                    "str",
                    "typing.IO",
                    "bool",
                    "None"
                ],
                "filters": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_benchmark_calculate_key1": {
            "name": "test_benchmark_calculate_key1",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "benchmark": []
            }
        },
        "test_benchmark_calculate_key2": {
            "name": "test_benchmark_calculate_key2",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "benchmark": []
            }
        },
        "test_benchmark_calculate_key3": {
            "name": "test_benchmark_calculate_key3",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "benchmark": []
            }
        },
        "test_benchmark_filters_compress.compressor": {
            "name": "compressor",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "filters": [],
                "password": []
            }
        },
        "test_benchmark_filters_compress.setup": {
            "name": "setup",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_benchmark_filters_decompress.decompressor": {
            "name": "decompressor",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "secret": []
            }
        },
        "test_benchmark_filters_decompress.setup": {
            "name": "setup",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_benchmark_text_compress.compressor": {
            "name": "compressor",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "filters": []
            }
        },
        "test_benchmark_text_compress.setup": {
            "name": "setup",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_benchmark_text_decompress.decompressor": {
            "name": "decompressor",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_benchmark_text_decompress.setup": {
            "name": "setup",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "py7zr-master/tests/test_cli.py": {
        "test_cli_list_1": {
            "name": "test_cli_list_1",
            "location": 22,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_list_2": {
            "name": "test_cli_list_2",
            "location": 40,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_help": {
            "name": "test_cli_help",
            "location": 135,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_no_subcommand": {
            "name": "test_cli_no_subcommand",
            "location": 148,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_list_verbose": {
            "name": "test_cli_list_verbose",
            "location": 161,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_test": {
            "name": "test_cli_test",
            "location": 191,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_info": {
            "name": "test_cli_info",
            "location": 214,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_extract": {
            "name": "test_cli_extract",
            "location": 258,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_cli_encrypted_extract": {
            "name": "test_cli_encrypted_extract",
            "location": 286,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "tmp_path": []
            }
        },
        "test_cli_encrypted_wrong_password": {
            "name": "test_cli_encrypted_wrong_password",
            "location": 311,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_cli_encrypted_zero_length_password": {
            "name": "test_cli_encrypted_zero_length_password",
            "location": 329,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_non7z_ext": {
            "name": "test_non7z_ext",
            "location": 346,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmp_path": []
            }
        },
        "test_non7z_test": {
            "name": "test_non7z_test",
            "location": 356,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_non7z_list": {
            "name": "test_non7z_list",
            "location": 366,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_archive_creation": {
            "name": "test_archive_creation",
            "location": 376,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_archive_already_exist": {
            "name": "test_archive_already_exist",
            "location": 394,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_archive_append": {
            "name": "test_archive_append",
            "location": 409,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_archive_without_extension": {
            "name": "test_archive_without_extension",
            "location": 425,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_volume_creation": {
            "name": "test_volume_creation",
            "location": 437,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_volume_creation_wrong_volume_unit": {
            "name": "test_volume_creation_wrong_volume_unit",
            "location": 452,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "capsys": []
            }
        },
        "test_list_multivolume": {
            "name": "test_list_multivolume",
            "location": 466,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_encrypted_no_password": {
            "name": "test_cli_encrypted_no_password",
            "location": 518,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_cli_encrypted_extract._getpasswd": {
            "name": "_getpasswd",
            "location": 287,
            "return": [],
            "arguments": {}
        },
        "test_cli_encrypted_wrong_password._getpasswd": {
            "name": "_getpasswd",
            "location": 312,
            "return": [],
            "arguments": {}
        },
        "test_cli_encrypted_zero_length_password._getpasswd": {
            "name": "_getpasswd",
            "location": 330,
            "return": [],
            "arguments": {}
        }
    },
    "py7zr-master/tests/test_concurrent.py": {
        "test_concurrent_futures": {
            "name": "test_concurrent_futures",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "typing.Callable[typing.Any, None]",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_concurrent_extraction": {
            "name": "test_concurrent_extraction",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [],
                "caplog": [
                    "list[str]"
                ]
            }
        },
        "test_concurrent_futures.download_and_extract": {
            "name": "download_and_extract",
            "location": 64,
            "return": [
                "bool"
            ],
            "arguments": {
                "ar": [],
                "path": []
            }
        },
        "test_concurrent_extraction.extractor": {
            "name": "extractor",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "archive": [],
                "path": []
            }
        }
    },
    "py7zr-master/tests/test_encryption.py": {
        "test_extract_encrypted_1": {
            "name": "test_extract_encrypted_1",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_encrypted_1_mem": {
            "name": "test_extract_encrypted_1_mem",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extract_encrypted_no_password": {
            "name": "test_extract_encrypted_no_password",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_encrypted_needs_password": {
            "name": "test_extract_encrypted_needs_password",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_header_encrypted_no_password": {
            "name": "test_extract_header_encrypted_no_password",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_header_encrypted_no_password_2": {
            "name": "test_extract_header_encrypted_no_password_2",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_encrypted_2": {
            "name": "test_extract_encrypted_2",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_encrypted_5": {
            "name": "test_extract_encrypted_5",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_encrypted_6": {
            "name": "test_extract_encrypted_6",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_encrypt_file_0": {
            "name": "test_encrypt_file_0",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_1": {
            "name": "test_encrypt_file_1",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_2": {
            "name": "test_encrypt_file_2",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_3": {
            "name": "test_encrypt_file_3",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_4": {
            "name": "test_encrypt_file_4",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_5": {
            "name": "test_encrypt_file_5",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_6": {
            "name": "test_encrypt_file_6",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_7": {
            "name": "test_encrypt_file_7",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_emptyfile_1": {
            "name": "test_encrypt_emptyfile_1",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_simple_file_0": {
            "name": "test_encrypt_simple_file_0",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_encrypt_file_8": {
            "name": "test_encrypt_file_8",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "py7zr-master/tests/test_extract.py": {
        "check_archive": {
            "name": "check_archive",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "archive": [],
                "tmp_path": [
                    "bool",
                    "None",
                    "str"
                ],
                "return_dict": [
                    "bool",
                    "str",
                    "list[str]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "test_solid": {
            "name": "test_solid",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_solid_mem": {
            "name": "test_solid_mem",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_empty": {
            "name": "test_empty",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_github_14": {
            "name": "test_github_14",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_github_14_mem": {
            "name": "test_github_14_mem",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "list[str]"
                ]
            }
        },
        "_test_umlaut_archive": {
            "name": "_test_umlaut_archive",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "typing.Callable[, ]",
                    "bool",
                    "str"
                ],
                "target": [
                    "str"
                ],
                "return_dict": [
                    "bool",
                    "typing.Iterable[str]"
                ]
            }
        },
        "test_non_solid_umlaut": {
            "name": "test_non_solid_umlaut",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_non_solid_umlaut_mem": {
            "name": "test_non_solid_umlaut_mem",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_solid_umlaut": {
            "name": "test_solid_umlaut",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_solid_umlaut_mem": {
            "name": "test_solid_umlaut_mem",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_bugzilla_4": {
            "name": "test_bugzilla_4",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "test_extract_symlink": {
            "name": "test_extract_symlink",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_symlink_mem": {
            "name": "test_extract_symlink_mem",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lzma2bcj": {
            "name": "test_lzma2bcj",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_lzma2bcj_mem": {
            "name": "test_lzma2bcj_mem",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lzma2bcj2": {
            "name": "test_lzma2bcj2",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_lzma2bcj2_2": {
            "name": "test_lzma2bcj2_2",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_lzma_1": {
            "name": "test_extract_lzma_1",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_lzma2_1": {
            "name": "test_extract_lzma2_1",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "list[str]"
                ]
            }
        },
        "test_zerosize": {
            "name": "test_zerosize",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_zerosize_mem": {
            "name": "test_zerosize_mem",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_register_unpack_archive": {
            "name": "test_register_unpack_archive",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_skip": {
            "name": "test_skip",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_github_14_multi": {
            "name": "test_github_14_multi",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_github_14_multi_mem": {
            "name": "test_github_14_multi_mem",
            "location": 353,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_multiblock": {
            "name": "test_multiblock",
            "location": 366,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_multiblock_mem": {
            "name": "test_multiblock_mem",
            "location": 376,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_multiblock_unlink": {
            "name": "test_multiblock_unlink",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_copy": {
            "name": "test_copy",
            "location": 398,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "bool"
                ]
            }
        },
        "test_copy_2": {
            "name": "test_copy_2",
            "location": 408,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_close_unlink": {
            "name": "test_close_unlink",
            "location": 415,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_asyncio_executor": {
            "name": "test_asyncio_executor",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_no_main_streams": {
            "name": "test_no_main_streams",
            "location": 436,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_no_main_streams_mem": {
            "name": "test_no_main_streams_mem",
            "location": 443,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extract_symlink_with_relative_target_path": {
            "name": "test_extract_symlink_with_relative_target_path",
            "location": 454,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_emptystream_mix": {
            "name": "test_extract_emptystream_mix",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_longpath_file": {
            "name": "test_extract_longpath_file",
            "location": 475,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_symlink_overwrite": {
            "name": "test_extract_symlink_overwrite",
            "location": 485,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_py7zr_extract_corrupted": {
            "name": "test_py7zr_extract_corrupted",
            "location": 496,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_lzma2delta": {
            "name": "test_extract_lzma2delta",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_decompress_small_files": {
            "name": "test_decompress_small_files",
            "location": 510,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_lzma_bcj_x86": {
            "name": "test_extract_lzma_bcj_x86",
            "location": 529,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_lzma_bcj_arm": {
            "name": "test_extract_lzma_bcj_arm",
            "location": 535,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_lzma_bcj_armt": {
            "name": "test_extract_lzma_bcj_armt",
            "location": 541,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_lzma_bcj_ppc": {
            "name": "test_extract_lzma_bcj_ppc",
            "location": 547,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_lzma_bcj_sparc": {
            "name": "test_extract_lzma_bcj_sparc",
            "location": 553,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_lzma_bcj_2": {
            "name": "test_extract_lzma_bcj_2",
            "location": 559,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_extract_hidden_linux_folder": {
            "name": "test_extract_hidden_linux_folder",
            "location": 565,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_hidden_linux_file": {
            "name": "test_extract_hidden_linux_file",
            "location": 576,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "py7zr-master/tests/test_extra_codecs.py": {
        "test_aes_cipher": {
            "name": "test_aes_cipher",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_deflate_compressor": {
            "name": "test_deflate_compressor",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_deflate_compressor_flushed": {
            "name": "test_deflate_compressor_flushed",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_deflate_decompressor": {
            "name": "test_deflate_decompressor",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_copy_compressor": {
            "name": "test_copy_compressor",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_copy_decompressor": {
            "name": "test_copy_decompressor",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pyzstd_decompressor_1": {
            "name": "test_pyzstd_decompressor_1",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pyzstd_decompressor_2": {
            "name": "test_pyzstd_decompressor_2",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sevenzipcompressor_aes_lzma2": {
            "name": "test_sevenzipcompressor_aes_lzma2",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_aes_compressor": {
            "name": "test_aes_compressor",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sevenzipcompressor_aes_only": {
            "name": "test_sevenzipcompressor_aes_only",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_aes_encrypt_data": {
            "name": "test_aes_encrypt_data",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_aes_decrypt": {
            "name": "test_aes_decrypt",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "test_extract_bzip2": {
            "name": "test_extract_bzip2",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_ppmd": {
            "name": "test_extract_ppmd",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_ppmd2": {
            "name": "test_extract_ppmd2",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_deflate": {
            "name": "test_extract_deflate",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_compress_ppmd": {
            "name": "test_compress_ppmd",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_ppmd_2": {
            "name": "test_compress_ppmd_2",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_decompress_brotli": {
            "name": "test_compress_decompress_brotli",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_decompress_brotli": {
            "name": "test_decompress_brotli",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_decompress_deflate64": {
            "name": "test_compress_decompress_deflate64",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_deflate64": {
            "name": "test_compress_deflate64",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_decompress_deflate64": {
            "name": "test_decompress_deflate64",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "py7zr-master/tests/test_info.py": {
        "test_archiveinfo_deflate": {
            "name": "test_archiveinfo_deflate",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_deflate64": {
            "name": "test_archiveinfo_deflate64",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma_bcj2": {
            "name": "test_archiveinfo_lzma_bcj2",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma_bcj": {
            "name": "test_archiveinfo_lzma_bcj",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma2_bcj": {
            "name": "test_archiveinfo_lzma2_bcj",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma2_bcj_arm": {
            "name": "test_archiveinfo_lzma2_bcj_arm",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma2_bcj_armt": {
            "name": "test_archiveinfo_lzma2_bcj_armt",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma2_bcj_ia64": {
            "name": "test_archiveinfo_lzma2_bcj_ia64",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma2_bcj_ppc": {
            "name": "test_archiveinfo_lzma2_bcj_ppc",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_lzma2_bcj_sparc": {
            "name": "test_archiveinfo_lzma2_bcj_sparc",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archiveinfo_7zaes_lzma": {
            "name": "test_archiveinfo_7zaes_lzma",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archivetest_deflate": {
            "name": "test_archivetest_deflate",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archivetest_deflate64": {
            "name": "test_archivetest_deflate64",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archivetest_lzma_bcj2": {
            "name": "test_archivetest_lzma_bcj2",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archivetest_lzma_bcj": {
            "name": "test_archivetest_lzma_bcj",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archivetest_lzma2_bcj": {
            "name": "test_archivetest_lzma2_bcj",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archivetest_7zaes": {
            "name": "test_archivetest_7zaes",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_list_filename_encryption": {
            "name": "test_list_filename_encryption",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "py7zr-master/tests/test_misc.py": {
        "test_extract_multi_volume": {
            "name": "test_extract_multi_volume",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compress_to_multi_volume": {
            "name": "test_compress_to_multi_volume",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_copy_bcj_file": {
            "name": "test_copy_bcj_file",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_bcj_file": {
            "name": "test_bcj_file",
            "location": 57,
            "return": [
                "int"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_read_writed": {
            "name": "test_read_writed",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_double_extract_symlink": {
            "name": "test_double_extract_symlink",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_callback_raw_class": {
            "name": "test_callback_raw_class",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_callback_not_concrete_class": {
            "name": "test_callback_not_concrete_class",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extract_callback": {
            "name": "test_extract_callback",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_extract_high_compression_rate": {
            "name": "test_extract_high_compression_rate",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "limit_memory": {
            "name": "limit_memory",
            "location": 172,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "maxsize": [
                    "int"
                ]
            }
        },
        "callback.__init__": {
            "name": "__init__",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Generator.__init__": {
            "name": "__init__",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Generator.readinto": {
            "name": "readinto",
            "location": 201,
            "return": [
                "bytes",
                "int"
            ],
            "arguments": {
                "self": [],
                "b": []
            }
        },
        "Generator.read1": {
            "name": "read1",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "Generator.read": {
            "name": "read",
            "location": 212,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "Generator.seek": {
            "name": "seek",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Generator.tell": {
            "name": "tell",
            "location": 221,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Generator.generate_raw_bytes": {
            "name": "generate_raw_bytes",
            "location": 227,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "size": []
            }
        },
        "test_extract_callback.ECB.__init__": {
            "name": "__init__",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ofd": []
            }
        },
        "test_extract_callback.ECB.report_start_preparation": {
            "name": "report_start_preparation",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "test_extract_callback.ECB.report_start": {
            "name": "report_start",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processing_file_path": [],
                "processing_bytes": []
            }
        },
        "test_extract_callback.ECB.report_end": {
            "name": "report_end",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processing_file_path": [],
                "wrote_bytes": []
            }
        },
        "test_extract_callback.ECB.report_postprocess": {
            "name": "report_postprocess",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "test_extract_callback.ECB.report_warning": {
            "name": "report_warning",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "py7zr-master/tests/test_unit.py": {
        "test_py7zr_signatureheader": {
            "name": "test_py7zr_signatureheader",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_mainstreams": {
            "name": "test_py7zr_mainstreams",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_folder_retrive": {
            "name": "test_py7zr_folder_retrive",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_folder_write": {
            "name": "test_py7zr_folder_write",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_unpack_info": {
            "name": "test_py7zr_unpack_info",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_substreamsinfo": {
            "name": "test_py7zr_substreamsinfo",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_substreamsinfo_write": {
            "name": "test_py7zr_substreamsinfo_write",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_header": {
            "name": "test_py7zr_header",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_encoded_header": {
            "name": "test_py7zr_encoded_header",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_files_info_1": {
            "name": "test_py7zr_files_info_1",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_py7zr_files_info_2": {
            "name": "test_py7zr_files_info_2",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lzma_lzma2_compressor": {
            "name": "test_lzma_lzma2_compressor",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lzma_lzma2bcj_compressor": {
            "name": "test_lzma_lzma2bcj_compressor",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_read_booleans": {
            "name": "test_read_booleans",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "abytes": [
                    "bytes"
                ],
                "count": [
                    "int"
                ],
                "checkall": [
                    "int"
                ],
                "expected": [
                    "str",
                    "float",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "test_write_booleans": {
            "name": "test_write_booleans",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {
                "booleans": [
                    "int",
                    "float",
                    "str",
                    "dict[, ]"
                ],
                "all_defined": [
                    "int",
                    "float",
                    "str",
                    "dict[, ]"
                ],
                "expected": [
                    "int",
                    "float",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "test_write_uint64": {
            "name": "test_write_uint64",
            "location": 370,
            "return": [
                "None"
            ],
            "arguments": {
                "testinput": [
                    "str",
                    "dict[int, str]",
                    "list[str]",
                    "bytes"
                ],
                "expected": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_read_uint64": {
            "name": "test_read_uint64",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "testinput": [
                    "bytes",
                    "str",
                    "typing.IO"
                ],
                "expected": [
                    "int",
                    "str",
                    "list[int]"
                ]
            }
        },
        "test_read_utf16": {
            "name": "test_read_utf16",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "testinput": [
                    "bytes",
                    "str",
                    "typing.IO"
                ],
                "expected": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_write_utf16": {
            "name": "test_write_utf16",
            "location": 409,
            "return": [
                "None"
            ],
            "arguments": {
                "testinput": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "expected": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_write_packinfo": {
            "name": "test_write_packinfo",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_utc": {
            "name": "test_utc",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_utcoffset": {
            "name": "test_utcoffset",
            "location": 438,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dst": {
            "name": "test_dst",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_localtime_tzname": {
            "name": "test_localtime_tzname",
            "location": 451,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_read_crcs": {
            "name": "test_read_crcs",
            "location": 457,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fileinfo_st_fmt": {
            "name": "test_fileinfo_st_fmt",
            "location": 474,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wrong_mode": {
            "name": "test_wrong_mode",
            "location": 485,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculate_crc32": {
            "name": "test_calculate_crc32",
            "location": 491,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculate_crc32_blocksize": {
            "name": "test_calculate_crc32_blocksize",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_startheader_calccrc": {
            "name": "test_startheader_calccrc",
            "location": 505,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_write_signature_header": {
            "name": "test_write_signature_header",
            "location": 522,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_file_info1": {
            "name": "test_make_file_info1",
            "location": 545,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_make_file_info2": {
            "name": "test_make_file_info2",
            "location": 555,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_simple_compress_and_decompress": {
            "name": "test_simple_compress_and_decompress",
            "location": 564,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sevenzipcompressor_default": {
            "name": "test_sevenzipcompressor_default",
            "location": 591,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculate_key1": {
            "name": "test_calculate_key1",
            "location": 620,
            "return": [
                "None"
            ],
            "arguments": {
                "password": [
                    "str"
                ],
                "cycle": [
                    "str",
                    "bytes",
                    "int"
                ],
                "salt": [
                    "str",
                    "bytes",
                    "int"
                ],
                "expected": [
                    "bytes",
                    "str",
                    "typing.AnyStr"
                ]
            }
        },
        "test_calculate_key2": {
            "name": "test_calculate_key2",
            "location": 637,
            "return": [
                "None"
            ],
            "arguments": {
                "password": [
                    "str"
                ],
                "cycle": [
                    "str",
                    "bytes",
                    "int"
                ],
                "salt": [
                    "str",
                    "bytes",
                    "int"
                ],
                "expected": [
                    "bytes",
                    "str",
                    "typing.AnyStr"
                ]
            }
        },
        "test_calculate_key3": {
            "name": "test_calculate_key3",
            "location": 660,
            "return": [
                "None"
            ],
            "arguments": {
                "password": [
                    "str"
                ],
                "cycle": [
                    "str",
                    "bytes",
                    "int"
                ],
                "salt": [
                    "str",
                    "bytes",
                    "int"
                ],
                "expected": [
                    "bytes",
                    "str",
                    "typing.AnyStr"
                ]
            }
        },
        "test_calculate_key1_nohash": {
            "name": "test_calculate_key1_nohash",
            "location": 665,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculate_key2_nohash": {
            "name": "test_calculate_key2_nohash",
            "location": 670,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calculate_key3_nohash": {
            "name": "test_calculate_key3_nohash",
            "location": 675,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_helpers_readlink_dirfd": {
            "name": "test_helpers_readlink_dirfd",
            "location": 686,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_compressor_lzma2bcj": {
            "name": "test_compressor_lzma2bcj",
            "location": 701,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "list[str]"
                ]
            }
        },
        "test_lzmadecompressor_lzmabcj": {
            "name": "test_lzmadecompressor_lzmabcj",
            "location": 724,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unit_buffer": {
            "name": "test_unit_buffer",
            "location": 741,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_supported_method_is_crypto_id": {
            "name": "test_supported_method_is_crypto_id",
            "location": 754,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_supported_method_get_method_id": {
            "name": "test_supported_method_get_method_id",
            "location": 759,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bcj_encode": {
            "name": "test_bcj_encode",
            "location": 765,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_bcj_decode": {
            "name": "test_bcj_decode",
            "location": 783,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [
                    "list[str]"
                ]
            }
        },
        "test_remove_relative_path_marker": {
            "name": "test_remove_relative_path_marker",
            "location": 795,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_relative_path_marker_no_change": {
            "name": "test_remove_relative_path_marker_no_change",
            "location": 802,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_relative_path_marker_ignore_marker": {
            "name": "test_remove_relative_path_marker_ignore_marker",
            "location": 808,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "py7zr-master/tests/test_win32compat.py": {
        "test_symlink_readlink_absolute": {
            "name": "test_symlink_readlink_absolute",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_symlink_readlink_relative": {
            "name": "test_symlink_readlink_relative",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_hardlink_readlink": {
            "name": "test_hardlink_readlink",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_junction_readlink": {
            "name": "test_junction_readlink",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "py7zr-master/tests/__init__.py": {
        "check_output": {
            "name": "check_output",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "expected": [
                    "dict[, ]"
                ],
                "tmpdir": [
                    "str"
                ]
            }
        },
        "decode_all": {
            "name": "decode_all",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "archive": [],
                "expected": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "Exception"
                ],
                "tmpdir": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "ltime": {
            "name": "ltime",
            "location": 65,
            "return": [],
            "arguments": {
                "dt_utc": [
                    "str",
                    "None",
                    "dict[str, str]",
                    "int"
                ]
            }
        },
        "ltime2": {
            "name": "ltime2",
            "location": 69,
            "return": [],
            "arguments": {
                "y": [
                    "bool",
                    "None"
                ],
                "m": [
                    "bool",
                    "None"
                ],
                "d": [
                    "bool",
                    "None"
                ],
                "h": [
                    "bool",
                    "None"
                ],
                "min": [
                    "bool",
                    "None"
                ],
                "s": [
                    "bool",
                    "None"
                ]
            }
        },
        "p7zip_test": {
            "name": "p7zip_test",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "archive": []
            }
        },
        "libarchive_extract": {
            "name": "libarchive_extract",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "archive": [
                    "bytes",
                    "str",
                    "typing.IO"
                ],
                "tmpdir": []
            }
        }
    },
    "py7zr-master/utils/bench_result.py": {
        "generate_metainfo": {
            "name": "generate_metainfo",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "root": [
                    "str"
                ]
            }
        },
        "generate_table": {
            "name": "generate_table",
            "location": 22,
            "return": [],
            "arguments": {
                "benchmarks": [
                    "str"
                ],
                "group": [
                    "typing.Iterable[typing.Any]",
                    "str",
                    "None",
                    "typing.Match"
                ],
                "type": [
                    "typing.Text"
                ]
            }
        },
        "generate_comment": {
            "name": "generate_comment",
            "location": 49,
            "return": [],
            "arguments": {
                "results_file": [
                    "str"
                ],
                "type": [
                    "typing.Type",
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "py7zr-master/utils/github_comment_bench.py": {
        "CommentBenchmark.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommentBenchmark.post_comment": {
            "name": "post_comment",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "py7zr-master/utils/prof_result.py": {
        "print_prof": {
            "name": "print_prof",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "str",
                    "typing.BinaryIO",
                    "typing.IO",
                    "list[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
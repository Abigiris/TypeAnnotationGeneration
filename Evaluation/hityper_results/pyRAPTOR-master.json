{
    "pyRAPTOR-master/setup.py": {},
    "pyRAPTOR-master/pyraptor/constants.py": {},
    "pyRAPTOR-master/pyraptor/db_loader.py": {
        "initialize_schedule": {
            "name": "initialize_schedule",
            "location": 8,
            "return": [],
            "arguments": {
                "filename": [
                    "typing.Text"
                ]
            }
        },
        "load_gtfs_feed": {
            "name": "load_gtfs_feed",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "schedule": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "float"
                ],
                "filename": [
                    "str",
                    "bool",
                    "typing.Sequence[int]"
                ]
            }
        }
    },
    "pyRAPTOR-master/pyraptor/main.py": {
        "parse_cmd_line": {
            "name": "parse_cmd_line",
            "location": 11,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 32,
            "return": [
                "list[]",
                "list[dict[str, typing.Any]]",
                "str"
            ],
            "arguments": {
                "origin_stop_id": [
                    "str",
                    "int"
                ],
                "dest_stop_id": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pyRAPTOR-master/pyraptor/model.py": {
        "StopTime.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stop_id": [
                    "str",
                    "int",
                    "list[str]"
                ],
                "trip_id": [
                    "str",
                    "int",
                    "list[str]"
                ],
                "arrival_time": [
                    "int",
                    "float",
                    "None"
                ],
                "departure_time": [
                    "int",
                    "float",
                    "None"
                ]
            }
        },
        "Transfer.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_stop_id": [
                    "int",
                    "str",
                    "None"
                ],
                "to_stop_id": [
                    "int",
                    "str",
                    "None"
                ],
                "transfer_time_mins": [
                    "str",
                    "int"
                ]
            }
        },
        "Route.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gtfs_route_id": [
                    "int",
                    "None",
                    "dict[str, bool]",
                    "str",
                    "dict[str, dict[str, typing.Any]]",
                    "dict[, ]"
                ],
                "num_trips": [
                    "int",
                    "None"
                ],
                "num_stops": [
                    "int",
                    "None"
                ],
                "route_stop_idx": [
                    "int",
                    "list[str]",
                    "list[int]",
                    "typing.Callable[, ]",
                    "tuple[int]"
                ],
                "stop_times_idx": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "pyRAPTOR-master/pyraptor/router.py": {
        "Label.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stop_id": [
                    "str",
                    "int",
                    "None"
                ],
                "arrival_time": [
                    "float"
                ],
                "boarded_stop_id": [
                    "None",
                    "int",
                    "str",
                    "dict[str, dict[str, typing.Any]]",
                    "list[str]"
                ],
                "route_idx": [
                    "None",
                    "int",
                    "dict[str, typing.Any]",
                    "tuple[]",
                    "typing.Callable[, ]",
                    "tuple[typing.Union[int,int]]"
                ],
                "trip_id": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "Router.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Router.find_route": {
            "name": "find_route",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "origin_stop_id": [
                    "str",
                    "int",
                    "list[str]",
                    "list[bytes]"
                ],
                "dest_stop_id": [
                    "str",
                    "int",
                    "list[str]",
                    "list[bytes]"
                ],
                "departure_time": [
                    "None",
                    "int",
                    "float",
                    "list[str]"
                ]
            }
        },
        "Router._build_itineraries": {
            "name": "_build_itineraries",
            "location": 56,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "origin_stop_id": [
                    "str",
                    "None",
                    "bool"
                ],
                "dest_stop_id": [
                    "int"
                ],
                "departure_time": [
                    "int",
                    "None"
                ],
                "labels": [
                    "str"
                ]
            }
        },
        "Router._compute_labels": {
            "name": "_compute_labels",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "origin_stop_id": [
                    "str",
                    "int",
                    "list[str]",
                    "None"
                ],
                "dest_stop_id": [
                    "str",
                    "bool",
                    "list[str]",
                    "None",
                    "list[dict[, ]]"
                ],
                "departure_time": [
                    "int",
                    "None"
                ]
            }
        },
        "Router._get_current_time_seconds": {
            "name": "_get_current_time_seconds",
            "location": 188,
            "return": [],
            "arguments": {}
        },
        "Router._load_schedule": {
            "name": "_load_schedule",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyRAPTOR-master/pyraptor/settings.py": {},
    "pyRAPTOR-master/pyraptor/timetable.py": {
        "Timetable.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schedule": [
                    "int",
                    "float"
                ]
            }
        },
        "Timetable.earliest_trip": {
            "name": "earliest_trip",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "route": [
                    "int"
                ],
                "stop_seq": [
                    "int",
                    "list[int]",
                    "str"
                ],
                "min_departure_time": [
                    "int",
                    "list[int]",
                    "str"
                ]
            }
        },
        "Timetable._build_stop_ids": {
            "name": "_build_stop_ids",
            "location": 43,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timetable._build_stops_dict": {
            "name": "_build_stops_dict",
            "location": 46,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timetable._build_transfers": {
            "name": "_build_transfers",
            "location": 49,
            "return": [
                "list[Transfer]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timetable._build_routes": {
            "name": "_build_routes",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyRAPTOR-master/pyraptor/__init__.py": {
        "healtcheck": {
            "name": "healtcheck",
            "location": 11,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "get_route": {
            "name": "get_route",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "pyRAPTOR-master/tests/main_test.py": {
        "test_main": {
            "name": "test_main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
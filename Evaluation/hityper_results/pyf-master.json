{
    "pyf-master/pyf.py": {
        "partial": {
            "name": "partial",
            "location": 14,
            "return": [],
            "arguments": {
                "f": [
                    "typing.Iterable[str]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "identity": {
            "name": "identity",
            "location": 25,
            "return": [
                "bool",
                "float",
                "typing.Iterable[typing.Iterable[float]]",
                "str",
                "bytes"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "always": {
            "name": "always",
            "location": 29,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "typing.Iterable[typing.Iterable[float]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "as_str": {
            "name": "as_str",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [
                    "int",
                    "str",
                    "typing.Any",
                    "None"
                ]
            }
        },
        "as_int": {
            "name": "as_int",
            "location": 39,
            "return": [
                "int"
            ],
            "arguments": {
                "x": []
            }
        },
        "equals": {
            "name": "equals",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "str"
                ],
                "y": [
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "prop_eq": {
            "name": "prop_eq",
            "location": 49,
            "return": [],
            "arguments": {
                "k": [
                    "int"
                ],
                "v": [
                    "int",
                    "str",
                    "float",
                    "list[list[]]"
                ],
                "dct": [
                    "str",
                    "list[list[]]"
                ]
            }
        },
        "prop": {
            "name": "prop",
            "location": 54,
            "return": [],
            "arguments": {
                "dct": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, tuple[]]"
                ],
                "k": [
                    "str",
                    "dict[, ]",
                    "list[]",
                    "dict[str, typing.Any]",
                    "dict[str, tuple[]]"
                ],
                "default": [
                    "None",
                    "str",
                    "dict[, ]",
                    "list[]",
                    "dict[str, typing.Any]",
                    "dict[str, tuple[]]"
                ]
            }
        },
        "values": {
            "name": "values",
            "location": 59,
            "return": [
                "list[list[]]"
            ],
            "arguments": {
                "dct": [
                    "dict[, ]"
                ]
            }
        },
        "prepend": {
            "name": "prepend",
            "location": 64,
            "return": [],
            "arguments": {
                "lst": [],
                "elm": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "merge": {
            "name": "merge",
            "location": 69,
            "return": [
                "dict[typing.Union[dict[, ],int,dict[int, tuple[typing.Union[int,int]]]], typing.Union[dict[, ],int,dict[int, tuple[typing.Union[int,int]]]]]"
            ],
            "arguments": {
                "l_dct": [
                    "dict[, ]",
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ],
                "r_dct": [
                    "dict[, ]",
                    "int",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "path": {
            "name": "path",
            "location": 74,
            "return": [
                "None",
                "str",
                "dict[, ]",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "dct": [
                    "str",
                    "dict[str, str]",
                    "dict[, ]",
                    "None",
                    "list[str]",
                    "Exception",
                    "dict[str, typing.Union[str,int]]"
                ],
                "steps": [
                    "list[str]",
                    "str"
                ],
                "default": [
                    "None",
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "map": {
            "name": "map",
            "location": 83,
            "return": [],
            "arguments": {
                "lst": [
                    "typing.Callable[, ]",
                    "list[]"
                ],
                "f": [
                    "typing.Callable[, ]",
                    "list[]"
                ]
            }
        },
        "filter": {
            "name": "filter",
            "location": 88,
            "return": [],
            "arguments": {
                "lst": [
                    "typing.Callable[, ]",
                    "int",
                    "typing.Sequence[]",
                    "list[\"Block\"]",
                    "str",
                    "None"
                ],
                "f": [
                    "typing.Callable[, ]",
                    "int",
                    "typing.Sequence[]",
                    "list[\"Block\"]",
                    "str",
                    "None"
                ]
            }
        },
        "reduce": {
            "name": "reduce",
            "location": 93,
            "return": [],
            "arguments": {
                "lst": [
                    "list[]",
                    "typing.Type",
                    "float",
                    "dict[str, typing.Any]",
                    "int"
                ],
                "f": [
                    "typing.Callable[, ]",
                    "list[]"
                ],
                "init": [
                    "None",
                    "str",
                    "typing.Callable[..., T]",
                    "list[\"Block\"]"
                ]
            }
        },
        "pick": {
            "name": "pick",
            "location": 101,
            "return": [
                "dict[tuple[typing.Union[str,typing.Any]], tuple[typing.Union[str,typing.Any]]]"
            ],
            "arguments": {
                "dct": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "names": [
                    "dict[, ]",
                    "list[]",
                    "dict[str, typing.Any]",
                    "bytes",
                    "str",
                    "list[str]"
                ]
            }
        },
        "omit": {
            "name": "omit",
            "location": 106,
            "return": [
                "dict[tuple[typing.Union[str,typing.Any]], tuple[typing.Union[str,typing.Any]]]"
            ],
            "arguments": {
                "dct": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "names": [
                    "dict[, ]",
                    "list[]",
                    "dict[str, typing.Any]",
                    "bytes",
                    "str",
                    "list[str]"
                ]
            }
        },
        "find": {
            "name": "find",
            "location": 111,
            "return": [
                "None",
                "str",
                "list[]",
                "list[str]"
            ],
            "arguments": {
                "lst": [
                    "str",
                    "bytes",
                    "list[bytes]",
                    "tuple[typing.Union[str,str]]"
                ],
                "f": [
                    "typing.Callable[, ]",
                    "set[str]",
                    "list[dict[, ]]",
                    "str",
                    "int"
                ]
            }
        },
        "find_index": {
            "name": "find_index",
            "location": 123,
            "return": [
                "int"
            ],
            "arguments": {
                "lst": [
                    "list[]",
                    "str",
                    "list[dict[, ]]"
                ],
                "f": [
                    "list[]",
                    "typing.Callable[, ]",
                    "str",
                    "list[dict[, ]]"
                ]
            }
        },
        "partial.wrapped": {
            "name": "wrapped",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "pyf-master/setup.py": {}
}
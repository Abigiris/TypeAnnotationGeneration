{
    "pyff-master/setup.py": {},
    "pyff-master/pyff/classes.py": {
        "pyff_class": {
            "name": "pyff_class",
            "location": 249,
            "return": [
                "ClassPyfference",
                "None"
            ],
            "arguments": {
                "old": [
                    "dict[, ]"
                ],
                "new": [
                    "dict[, ]"
                ],
                "old_imports": [
                    "dict[, ]"
                ],
                "new_imports": [
                    "dict[, ]"
                ]
            }
        },
        "pyff_classes": {
            "name": "pyff_classes",
            "location": 268,
            "return": [
                "ClassesPyfference",
                "None"
            ],
            "arguments": {
                "old": [
                    "bool",
                    "typing.Type"
                ],
                "new": [
                    "str",
                    "typing.AbstractSet",
                    "None"
                ],
                "old_imports": [],
                "new_imports": [
                    "str",
                    "typing.Type",
                    "typing.Container",
                    "typing.Callable[, ]"
                ]
            }
        },
        "LocalBaseClass.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "LocalBaseClass.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedBaseClass.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "ImportedBaseClass.__str__": {
            "name": "__str__",
            "location": 33,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassSummary.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "methods": [
                    "dict[str, typing.Any]",
                    "set[str]",
                    "list[str]",
                    "None",
                    "bool"
                ],
                "definition": [
                    "bool",
                    "list[str]",
                    "typing.Sequence[str]",
                    "float",
                    "None",
                    "str"
                ],
                "attributes": [
                    "list[typing.Union[str,str,str,str,str,str,str,str]]",
                    "str"
                ],
                "baseclasses": [
                    "None",
                    "dict[, ]",
                    "bool",
                    "str"
                ]
            }
        },
        "ClassSummary.name": {
            "name": "name",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClassSummary.public_methods": {
            "name": "public_methods",
            "location": 61,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassSummary.private_methods": {
            "name": "private_methods",
            "location": 66,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassSummary.__str__": {
            "name": "__str__",
            "location": 70,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassSummary.__lt__": {
            "name": "__lt__",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str"
                ]
            }
        },
        "ClassSummary.__repr__": {
            "name": "__repr__",
            "location": 86,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesExtractor.__init__": {
            "name": "__init__",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "names": [
                    "None",
                    "str",
                    "list[typing.Any]",
                    "typing.Any",
                    "list[str]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ClassesExtractor.classes": {
            "name": "classes",
            "location": 154,
            "return": [
                "MappingProxyType"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesExtractor.classnames": {
            "name": "classnames",
            "location": 159,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesExtractor.visit_ClassDef": {
            "name": "visit_ClassDef",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "AttributesPyfference.__init__": {
            "name": "__init__",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "removed": [
                    "list[str]",
                    "bool",
                    "frozenset",
                    "set[str]",
                    "dict[str, typing.Any]",
                    "set[]"
                ],
                "new": [
                    "list[str]",
                    "bool",
                    "frozenset",
                    "set[str]",
                    "dict[str, typing.Any]",
                    "set[]"
                ]
            }
        },
        "AttributesPyfference.__str__": {
            "name": "__str__",
            "location": 192,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AttributesPyfference.__bool__": {
            "name": "__bool__",
            "location": 203,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassPyfference.__init__": {
            "name": "__init__",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None",
                    "typing.Sequence[typing.Any]",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "attributes": [
                    "str",
                    "None",
                    "int",
                    "typing.Callable[, ]"
                ],
                "methods": [
                    "str",
                    "None"
                ]
            }
        },
        "ClassPyfference.__str__": {
            "name": "__str__",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClassesPyfference.__init__": {
            "name": "__init__",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new": [],
                "changed": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "set[str]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "ClassesPyfference.__str__": {
            "name": "__str__",
            "location": 239,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesPyfference.simplify": {
            "name": "simplify",
            "location": 244,
            "return": [
                "ClassesPyfference",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesExtractor.SelfAttributeExtractor.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesExtractor.SelfAttributeExtractor.visit_Attribute": {
            "name": "visit_Attribute",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ClassesExtractor.AssignmentExtractor.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesExtractor.AssignmentExtractor.visit_Assign": {
            "name": "visit_Assign",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ClassesExtractor.AssignmentExtractor.visit_AnnAssign": {
            "name": "visit_AnnAssign",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ClassesExtractor.MethodExtractor.extract_attributes": {
            "name": "extract_attributes",
            "location": 129,
            "return": [
                "set[]"
            ],
            "arguments": {
                "node": []
            }
        },
        "ClassesExtractor.MethodExtractor.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassesExtractor.MethodExtractor.visit_FunctionDef": {
            "name": "visit_FunctionDef",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "pyff-master/pyff/directories.py": {
        "find_those_pythonz": {
            "name": "find_those_pythonz",
            "location": 36,
            "return": [
                "tuple[set[]]"
            ],
            "arguments": {
                "directory": [
                    "str",
                    "typing.Iterable[pathlib.Path]"
                ]
            }
        },
        "_compare_packages_in_dir": {
            "name": "_compare_packages_in_dir",
            "location": 66,
            "return": [
                "PackagesPyfference",
                "None"
            ],
            "arguments": {
                "old_dir": [
                    "tuple[typing.Union[str,set[str]]]"
                ],
                "new_dir": [
                    "str",
                    "typing.OrderedDict",
                    "None",
                    "dict[, ]"
                ],
                "old": [
                    "str"
                ],
                "new": []
            }
        },
        "_compare_modules_in_dir": {
            "name": "_compare_modules_in_dir",
            "location": 109,
            "return": [
                "ModulesPyfference",
                "None"
            ],
            "arguments": {
                "old_dir": [
                    "dict[, ]",
                    "str"
                ],
                "new_dir": [
                    "str"
                ],
                "old": [],
                "new": []
            }
        },
        "pyff_directory": {
            "name": "pyff_directory",
            "location": 148,
            "return": [
                "DirectoryPyfference",
                "None"
            ],
            "arguments": {
                "old": [],
                "new": []
            }
        },
        "DirectoryPyfference.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packages": [
                    "typing.Any",
                    "None",
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ],
                "modules": [
                    "int",
                    "None",
                    "str"
                ]
            }
        },
        "DirectoryPyfference.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DirectoryPyfference.__bool__": {
            "name": "__bool__",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/pyff/functions.py": {
        "compare_import_usage": {
            "name": "compare_import_usage",
            "location": 203,
            "return": [
                "ExternalUsageChange",
                "None"
            ],
            "arguments": {
                "old": [
                    "int",
                    "float",
                    "tuple[]"
                ],
                "new": [
                    "int",
                    "float",
                    "tuple[]"
                ],
                "old_imports": [
                    "list[str]",
                    "list[float]",
                    "typing.Sequence[int]",
                    "None",
                    "list[int]",
                    "list[typing.Optional[str]]"
                ],
                "new_imports": [
                    "str",
                    "int",
                    "float",
                    "tuple[int]",
                    "None"
                ]
            }
        },
        "pyff_function": {
            "name": "pyff_function",
            "location": 245,
            "return": [],
            "arguments": {
                "old": [
                    "typing.Type"
                ],
                "new": [],
                "old_imports": [
                    "typing.Type"
                ],
                "new_imports": [
                    "typing.Type"
                ]
            }
        },
        "pyff_function_code": {
            "name": "pyff_function_code",
            "location": 301,
            "return": [],
            "arguments": {
                "old": [
                    "str",
                    "int",
                    "None",
                    "typing.Callable[str, bool]"
                ],
                "new": [
                    "str",
                    "int",
                    "None",
                    "typing.Callable[str, bool]"
                ],
                "old_imports": [],
                "new_imports": []
            }
        },
        "pyff_functions": {
            "name": "pyff_functions",
            "location": 408,
            "return": [
                "FunctionsPyfference",
                "None"
            ],
            "arguments": {
                "old": [
                    "bool",
                    "dict[, ]",
                    "list[list[]]",
                    "float"
                ],
                "new": [
                    "typing.Type"
                ],
                "old_imports": [
                    "int",
                    "float"
                ],
                "new_imports": [
                    "int",
                    "float"
                ]
            }
        },
        "FunctionImplementationChange.make_message": {
            "name": "make_message",
            "location": 20,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionImplementationChange.__eq__": {
            "name": "__eq__",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "list[T]",
                    "typing.Type"
                ]
            }
        },
        "FunctionImplementationChange.__hash__": {
            "name": "__hash__",
            "location": 27,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionImplementationChange.__repr__": {
            "name": "__repr__",
            "location": 30,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExternalUsageChange.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gone": [
                    "set[str]",
                    "list[str]",
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "None"
                ],
                "appeared": [
                    "set[str]",
                    "list[str]",
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "None"
                ]
            }
        },
        "ExternalUsageChange.make_message": {
            "name": "make_message",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExternalUsageChange.__eq__": {
            "name": "__eq__",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "int"
                ]
            }
        },
        "ExternalUsageChange.__hash__": {
            "name": "__hash__",
            "location": 54,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExternalUsageChange.__repr__": {
            "name": "__repr__",
            "location": 57,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatementChange.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": [
                    "str",
                    "float",
                    "typing.MutableMapping"
                ]
            }
        },
        "StatementChange.make_message": {
            "name": "make_message",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatementChange.__hash__": {
            "name": "__hash__",
            "location": 70,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatementChange.__repr__": {
            "name": "__repr__",
            "location": 73,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionPyfference.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "typing.Callable[, ]",
                    "int"
                ],
                "implementation": [
                    "str",
                    "set[str]",
                    "None",
                    "int",
                    "typing.Type"
                ],
                "old_name": [
                    "None",
                    "str"
                ]
            }
        },
        "FunctionPyfference.__str__": {
            "name": "__str__",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionPyfference.set_method": {
            "name": "set_method",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionPyfference.simplify": {
            "name": "simplify",
            "location": 110,
            "return": [
                "FunctionPyfference",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionPyfference.__repr__": {
            "name": "__repr__",
            "location": 114,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionSummary.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "bool",
                    "typing.Any",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "node": [
                    "list[int]",
                    "None",
                    "bool",
                    "typing.Callable[, ]",
                    "float"
                ],
                "is_property": [
                    "bool"
                ]
            }
        },
        "FunctionSummary.__eq__": {
            "name": "__eq__",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "str"
                ]
            }
        },
        "FunctionSummary.set_method": {
            "name": "set_method",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionSummary.__str__": {
            "name": "__str__",
            "location": 137,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionSummary.__repr__": {
            "name": "__repr__",
            "location": 141,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionPyfferenceRecorder.__init__": {
            "name": "__init__",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "FunctionPyfferenceRecorder.name_changed": {
            "name": "name_changed",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "old_name": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "FunctionPyfferenceRecorder.implementation_changed": {
            "name": "implementation_changed",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": [
                    "int"
                ]
            }
        },
        "FunctionPyfferenceRecorder.build": {
            "name": "build",
            "location": 163,
            "return": [
                "None",
                "FunctionPyfference"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExternalNamesExtractor.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "imported_names": [
                    "str",
                    "list[str]",
                    "set[str]"
                ]
            }
        },
        "ExternalNamesExtractor.visit_Name": {
            "name": "visit_Name",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ExternalNamesExtractor.visit_Attribute": {
            "name": "visit_Attribute",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Type"
                ]
            }
        },
        "FunctionsExtractor.__init__": {
            "name": "__init__",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionsExtractor.visit_ClassDef": {
            "name": "visit_ClassDef",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "FunctionsExtractor.names": {
            "name": "names",
            "location": 343,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionsExtractor._is_property_decorator": {
            "name": "_is_property_decorator",
            "location": 348,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "FunctionsExtractor.visit_FunctionDef": {
            "name": "visit_FunctionDef",
            "location": 351,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "FunctionsPyfference.__init__": {
            "name": "__init__",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Type",
                    "bool"
                ],
                "changed": [
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Type",
                    "bool"
                ],
                "removed": [
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Type",
                    "bool"
                ]
            }
        },
        "FunctionsPyfference.__str__": {
            "name": "__str__",
            "location": 378,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionsPyfference.set_method": {
            "name": "set_method",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionsPyfference.simplify": {
            "name": "simplify",
            "location": 396,
            "return": [
                "FunctionsPyfference",
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/pyff/imports.py": {
        "pyff_imports": {
            "name": "pyff_imports",
            "location": 400,
            "return": [
                "None"
            ],
            "arguments": {
                "old": [
                    "int"
                ],
                "new": [
                    "int"
                ]
            }
        },
        "pyff_imports_code": {
            "name": "pyff_imports_code",
            "location": 413,
            "return": [],
            "arguments": {
                "old_code": [
                    "str",
                    "int",
                    "None"
                ],
                "new_code": [
                    "str",
                    "bool",
                    "list[str]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "ImportedName.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "node": [
                    "int",
                    "str"
                ],
                "alias": [
                    "int",
                    "str"
                ]
            }
        },
        "ImportedName.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedName.is_import": {
            "name": "is_import",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedName.is_import_from": {
            "name": "is_import_from",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedName.canonical_name": {
            "name": "canonical_name",
            "location": 35,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedName.canonical_ast": {
            "name": "canonical_ast",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImportedName.__str__": {
            "name": "__str__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FromImportPyfference.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FromImportPyfference.new": {
            "name": "new",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FromImportPyfference.removed": {
            "name": "removed",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FromImportPyfference.new_modules": {
            "name": "new_modules",
            "location": 96,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FromImportPyfference.removed_modules": {
            "name": "removed_modules",
            "location": 101,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FromImportPyfference.add_new": {
            "name": "add_new",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "FromImportPyfference.add_removed": {
            "name": "add_removed",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "FromImportPyfference.add_new_modules": {
            "name": "add_new_modules",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "modules": [
                    "dict[, ]",
                    "typing.MutableMapping",
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ]
            }
        },
        "FromImportPyfference.add_removed_modules": {
            "name": "add_removed_modules",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "modules": [
                    "dict[, ]",
                    "dict[str, str]",
                    "None",
                    "bool",
                    "dict[str, dict[str, typing.Any]]",
                    "str"
                ]
            }
        },
        "FromImportPyfference.delete_new_module": {
            "name": "delete_new_module",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": [
                    "str",
                    "list[str]",
                    "typing.Type"
                ]
            }
        },
        "FromImportPyfference.delete_removed_module": {
            "name": "delete_removed_module",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": [
                    "list[str]",
                    "str",
                    "list[]"
                ]
            }
        },
        "FromImportPyfference.__bool__": {
            "name": "__bool__",
            "location": 156,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportsPyfference.__init__": {
            "name": "__init__",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportsPyfference.__bool__": {
            "name": "__bool__",
            "location": 170,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportsPyfference.new_imports": {
            "name": "new_imports",
            "location": 182,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportsPyfference.removed_imports": {
            "name": "removed_imports",
            "location": 187,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportsPyfference.simplify": {
            "name": "simplify",
            "location": 191,
            "return": [
                "ImportsPyfference",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportsPyfference.new_import": {
            "name": "new_import",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "dict[, ]"
                ]
            }
        },
        "ImportsPyfference.removed_import": {
            "name": "removed_import",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Sequence[object]",
                    "dict[, ]"
                ]
            }
        },
        "ImportsPyfference.new_from_import": {
            "name": "new_from_import",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ImportsPyfference.removed_from_import": {
            "name": "removed_from_import",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ImportsPyfference.new_fromimport_modules": {
            "name": "new_fromimport_modules",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "modules": [
                    "bool",
                    "typing.Type"
                ]
            }
        },
        "ImportsPyfference.removed_fromimport_modules": {
            "name": "removed_fromimport_modules",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "modules": [
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "ImportsPyfference.reduce": {
            "name": "reduce",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportsPyfference.__str__": {
            "name": "__str__",
            "location": 259,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedNames.extract": {
            "name": "extract",
            "location": 311,
            "return": [],
            "arguments": {
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "ImportedNames.compare": {
            "name": "compare",
            "location": 318,
            "return": [
                "ImportsPyfference",
                "None"
            ],
            "arguments": {
                "old": [
                    "list[str]",
                    "int",
                    "typing.Callable[, ]"
                ],
                "new": [
                    "int",
                    "str",
                    "dict[, ]",
                    "list[T]"
                ]
            }
        },
        "ImportedNames.__init__": {
            "name": "__init__",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedNames.__getitem__": {
            "name": "__getitem__",
            "location": 353,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "list[str]"
                ]
            }
        },
        "ImportedNames.__iter__": {
            "name": "__iter__",
            "location": 356,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedNames.__len__": {
            "name": "__len__",
            "location": 359,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedNames.__repr__": {
            "name": "__repr__",
            "location": 362,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportedNames._add": {
            "name": "_add",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "list[mypy.types.Type]",
                    "None",
                    "str",
                    "typing.Pattern"
                ],
                "node": [
                    "str",
                    "dict[, ]",
                    "tuple[typing.Type]",
                    "typing.Type"
                ]
            }
        },
        "ImportedNames.add_import": {
            "name": "add_import",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Sequence[object]",
                    "str"
                ]
            }
        },
        "ImportedNames.add_importfrom": {
            "name": "add_importfrom",
            "location": 376,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Sequence[object]"
                ]
            }
        },
        "ImportExtractor.__init__": {
            "name": "__init__",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportExtractor.visit_Import": {
            "name": "visit_Import",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "list[str]"
                ]
            }
        },
        "ImportExtractor.visit_ImportFrom": {
            "name": "visit_ImportFrom",
            "location": 395,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "pyff-master/pyff/kitchensink.py": {
        "highlight": {
            "name": "highlight",
            "location": 12,
            "return": [],
            "arguments": {
                "message": [
                    "str",
                    "bool",
                    "None"
                ],
                "highlights": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "hl": {
            "name": "hl",
            "location": 22,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "what": [
                    "BaseException"
                ]
            }
        },
        "pluralize": {
            "name": "pluralize",
            "location": 27,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "name": [
                    "int",
                    "list[int]",
                    "None",
                    "list[str]"
                ],
                "items": []
            }
        },
        "hlistify": {
            "name": "hlistify",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "container": [
                    "str"
                ]
            }
        }
    },
    "pyff-master/pyff/modules.py": {
        "summarize_module": {
            "name": "summarize_module",
            "location": 104,
            "return": [
                "ModuleSummary"
            ],
            "arguments": {
                "module": []
            }
        },
        "pyff_module": {
            "name": "pyff_module",
            "location": 109,
            "return": [
                "ModulePyfference",
                "None"
            ],
            "arguments": {
                "old": [
                    "dict[, ]",
                    "list[]"
                ],
                "new": []
            }
        },
        "pyff_module_path": {
            "name": "pyff_module_path",
            "location": 126,
            "return": [],
            "arguments": {
                "old": [
                    "str",
                    "None"
                ],
                "new": [
                    "str",
                    "None"
                ]
            }
        },
        "ModuleSummary.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "node": [
                    "str",
                    "typing.Hashable",
                    "bool"
                ]
            }
        },
        "ModulePyfference.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "imports": [
                    "None",
                    "dict[str, typing.Any]",
                    "str"
                ],
                "classes": [
                    "None",
                    "dict[str, typing.Any]",
                    "str"
                ],
                "functions": [
                    "None",
                    "dict[, ]",
                    "typing.Callable[T, typing.Union[T,None]]",
                    "typing.Type",
                    "str"
                ]
            }
        },
        "ModulePyfference.__str__": {
            "name": "__str__",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModulePyfference.simplify": {
            "name": "simplify",
            "location": 44,
            "return": [
                "ModulePyfference",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModulesPyfference.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "removed": [
                    "dict[pathlib.Path, ModuleSummary]",
                    "str",
                    "None"
                ],
                "changed": [
                    "dict[pathlib.Path, ModuleSummary]",
                    "str",
                    "None"
                ],
                "new": [
                    "dict[pathlib.Path, ModuleSummary]",
                    "str",
                    "None"
                ]
            }
        },
        "ModulesPyfference.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModulesPyfference.__repr__": {
            "name": "__repr__",
            "location": 94,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModulesPyfference.__bool__": {
            "name": "__bool__",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/pyff/packages.py": {
        "extract_modules": {
            "name": "extract_modules",
            "location": 88,
            "return": [
                "set[]"
            ],
            "arguments": {
                "files": [
                    "str"
                ],
                "package": [
                    "typing.Iterable[pathlib.Path]",
                    "str"
                ]
            }
        },
        "_compare_module_in_packages": {
            "name": "_compare_module_in_packages",
            "location": 93,
            "return": [],
            "arguments": {
                "module": [
                    "typing.Pattern",
                    "bytes",
                    "dict[, ]"
                ],
                "old_package": [
                    "str"
                ],
                "new_package": [
                    "str",
                    "None"
                ]
            }
        },
        "summarize_package": {
            "name": "summarize_package",
            "location": 106,
            "return": [
                "PackageSummary"
            ],
            "arguments": {
                "package": [
                    "str",
                    "float",
                    "bool"
                ]
            }
        },
        "_summarize_module_in_package": {
            "name": "_summarize_module_in_package",
            "location": 111,
            "return": [
                "ModuleSummary"
            ],
            "arguments": {
                "module": [
                    "str"
                ],
                "package": [
                    "str"
                ]
            }
        },
        "pyff_package": {
            "name": "pyff_package",
            "location": 117,
            "return": [
                "PackagePyfference",
                "None"
            ],
            "arguments": {
                "old_package": [
                    "str",
                    "bool"
                ],
                "new_package": [
                    "str",
                    "bool",
                    "dict[str, str]"
                ]
            }
        },
        "pyff_package_path": {
            "name": "pyff_package_path",
            "location": 169,
            "return": [],
            "arguments": {
                "old": [
                    "int",
                    "None",
                    "dict[str, typing.Any]",
                    "str"
                ],
                "new": [
                    "int",
                    "None",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "PackageSummary.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "PackagePyfference.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "modules": [
                    "None",
                    "typing.Type",
                    "typing.Callable[bool, None]"
                ]
            }
        },
        "PackagePyfference.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagePyfference.__repr__": {
            "name": "__repr__",
            "location": 32,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagesPyfference.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "removed": [
                    "dict[pathlib.Path, ModuleSummary]",
                    "dict[pathlib.Path, PackageSummary]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "changed": [
                    "dict[pathlib.Path, ModuleSummary]",
                    "dict[pathlib.Path, PackageSummary]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "new": [
                    "dict[pathlib.Path, ModuleSummary]",
                    "dict[pathlib.Path, PackageSummary]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PackagesPyfference.removed": {
            "name": "removed",
            "location": 50,
            "return": [
                "MappingProxyType"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagesPyfference.new": {
            "name": "new",
            "location": 55,
            "return": [
                "MappingProxyType"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagesPyfference.changed": {
            "name": "changed",
            "location": 60,
            "return": [
                "MappingProxyType"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagesPyfference.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagesPyfference.__bool__": {
            "name": "__bool__",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/pyff/repositories.py": {
        "pyff_git_revision": {
            "name": "pyff_git_revision",
            "location": 31,
            "return": [
                "RevisionsPyfference",
                "None"
            ],
            "arguments": {
                "repository": [
                    "str",
                    "bool",
                    "None",
                    "typing.IO"
                ],
                "old": [
                    "str",
                    "int"
                ],
                "new": [
                    "str",
                    "int"
                ]
            }
        },
        "RevisionsPyfference.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": [
                    "int",
                    "float"
                ]
            }
        },
        "RevisionsPyfference.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RevisionsPyfference.packages": {
            "name": "packages",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/pyff/run.py": {
        "_pyff_that": {
            "name": "_pyff_that",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "function": [
                    "typing.Callable[, ]",
                    "str",
                    "list[str]"
                ],
                "what": [
                    "str",
                    "bool"
                ],
                "parser": [
                    "ArgumentParser"
                ]
            }
        },
        "pyffmod": {
            "name": "pyffmod",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pyffpkg": {
            "name": "pyffpkg",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pyffdir": {
            "name": "pyffdir",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pyffgit": {
            "name": "pyffgit",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pyffmod.compare": {
            "name": "compare",
            "location": 48,
            "return": [],
            "arguments": {
                "old": [],
                "new": [],
                "_": []
            }
        },
        "pyffpkg.compare": {
            "name": "compare",
            "location": 58,
            "return": [],
            "arguments": {
                "old": [],
                "new": [],
                "_": []
            }
        },
        "pyffdir.compare": {
            "name": "compare",
            "location": 68,
            "return": [],
            "arguments": {
                "old": [],
                "new": [],
                "_": []
            }
        },
        "pyffgit.compare": {
            "name": "compare",
            "location": 80,
            "return": [],
            "arguments": {
                "old": [],
                "new": [],
                "args": []
            }
        }
    },
    "pyff-master/pyff/statements.py": {
        "find_external_name_matches": {
            "name": "find_external_name_matches",
            "location": 106,
            "return": [
                "None",
                "ExternalNameUsageChange"
            ],
            "arguments": {
                "old": [
                    "typing.Callable[, ]",
                    "str",
                    "bool",
                    "typing.ClassVar"
                ],
                "new": [
                    "str",
                    "typing.Callable[, ]",
                    "bool"
                ],
                "old_imports": [
                    "str",
                    "None",
                    "bool"
                ],
                "new_imports": [
                    "str",
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ]
            }
        },
        "pyff_statement": {
            "name": "pyff_statement",
            "location": 214,
            "return": [
                "None",
                "StatementPyfference"
            ],
            "arguments": {
                "old_statement": [
                    "bool"
                ],
                "new_statement": [
                    "bool"
                ],
                "old_imports": [
                    "dict[, ]",
                    "typing.Sequence[typing.Any]",
                    "None",
                    "list[]"
                ],
                "new_imports": [
                    "dict[, ]",
                    "typing.Sequence[typing.Any]",
                    "None",
                    "list[]"
                ]
            }
        },
        "SingleExternalNameUsageChange.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "old": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "new": [
                    "str",
                    "int",
                    "typing.Type"
                ]
            }
        },
        "SingleExternalNameUsageChange.__eq__": {
            "name": "__eq__",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "float",
                    "None"
                ]
            }
        },
        "SingleExternalNameUsageChange.__hash__": {
            "name": "__hash__",
            "location": 32,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingleExternalNameUsageChange.__repr__": {
            "name": "__repr__",
            "location": 35,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingleExternalNameUsageChange.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExternalNameUsageChange.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "changes": [
                    "dict[str, typing.Any]",
                    "tuple[]",
                    "list[]"
                ]
            }
        },
        "ExternalNameUsageChange.__repr__": {
            "name": "__repr__",
            "location": 58,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExternalNameUsageChange.__str__": {
            "name": "__str__",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FullyQualifyNames.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "imports": [
                    "str",
                    "bool",
                    "dict[str, list[str]]"
                ]
            }
        },
        "FullyQualifyNames.visit_Name": {
            "name": "visit_Name",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "FullyQualifyNames.visit_Attribute": {
            "name": "visit_Attribute",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "StatementPyfference.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatementPyfference.add_semantically_irrelevant_change": {
            "name": "add_semantically_irrelevant_change",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": [
                    "str",
                    "int"
                ]
            }
        },
        "StatementPyfference.add_semantically_relevant_change": {
            "name": "add_semantically_relevant_change",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": [
                    "str",
                    "int"
                ]
            }
        },
        "StatementPyfference.semantically_different": {
            "name": "semantically_different",
            "location": 181,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatementPyfference.__str__": {
            "name": "__str__",
            "location": 193,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatementPyfference.__repr__": {
            "name": "__repr__",
            "location": 203,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatementPyfference.is_specific": {
            "name": "is_specific",
            "location": 209,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/pyff/summary.py": {},
    "pyff-master/pyff/__init__.py": {},
    "pyff-master/tests/package-examples/new/pkg01/__init__.py": {
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ParsePlayerAction.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParsePlayerAction.__call__": {
            "name": "__call__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "str",
                    "None"
                ],
                "namespace": [
                    "str",
                    "tuple[]"
                ],
                "values": [],
                "option_string": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "pyff-master/tests/package-examples/old/pkg01/__init__.py": {
        "main": {
            "name": "main",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyff-master/tests/pyff-dir/new/01/module.py": {},
    "pyff-master/tests/pyff-dir/new/01/subdir/module.py": {},
    "pyff-master/tests/unit/helpers.py": {
        "parse_imports": {
            "name": "parse_imports",
            "location": 8,
            "return": [],
            "arguments": {
                "code": [
                    "str",
                    "typing.Deque"
                ]
            }
        },
        "extract_names_from_function": {
            "name": "extract_names_from_function",
            "location": 15,
            "return": [],
            "arguments": {
                "code": [
                    "str"
                ],
                "imported_names": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "pyff-master/tests/unit/test_classes.py": {
        "TestPyffClass._make_summary": {
            "name": "_make_summary",
            "location": 14,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "classname": [
                    "str",
                    "bytes"
                ],
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "TestPyffClass.test_new_method": {
            "name": "test_new_method",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassPyfference.test_methods": {
            "name": "test_methods",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassPyfference.test_attributes": {
            "name": "test_attributes",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassSummary.classdef": {
            "name": "classdef",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClassSummary.test_class_summary": {
            "name": "test_class_summary",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classdef": [
                    "dict[, ]",
                    "typing.Mapping",
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        },
        "TestClassSummary.test_attributes": {
            "name": "test_attributes",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classdef": [
                    "str"
                ]
            }
        },
        "TestClassSummary.test_singular": {
            "name": "test_singular",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classdef": [
                    "str"
                ]
            }
        },
        "TestClassSummary.test_baseclasses": {
            "name": "test_baseclasses",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassSummary.test_inherited_class_summary": {
            "name": "test_inherited_class_summary",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classdef": [
                    "dict[str, typing.Sequence[str]]",
                    "tuple[int]"
                ]
            }
        },
        "TestClassSummary.test_multiple_inherited_summary": {
            "name": "test_multiple_inherited_summary",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classdef": []
            }
        },
        "TestAttributesPyfference.test_sanity": {
            "name": "test_sanity",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAttributesPyfference.test_empty": {
            "name": "test_empty",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassesExtractor.extractor": {
            "name": "extractor",
            "location": 144,
            "return": [
                "ClassesExtractor"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassesExtractor.test_extract_single_class": {
            "name": "test_extract_single_class",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "str",
                    "bytes"
                ]
            }
        },
        "TestClassesExtractor.test_extract_multiple_classes": {
            "name": "test_extract_multiple_classes",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "str",
                    "bytes"
                ]
            }
        },
        "TestClassesExtractor.test_extract_class_with_methods": {
            "name": "test_extract_class_with_methods",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "tuple[int]",
                    "str"
                ]
            }
        },
        "TestClassesExtractor.test_extract_local_baseclass": {
            "name": "test_extract_local_baseclass",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassesExtractor.test_extract_external_baseclass": {
            "name": "test_extract_external_baseclass",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassesExtractor.test_extract_attribute": {
            "name": "test_extract_attribute",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "str",
                    "float"
                ]
            }
        },
        "TestClassesExtractor.test_extract_annotated_attribute": {
            "name": "test_extract_annotated_attribute",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "str",
                    "float"
                ]
            }
        },
        "TestClassesPyfference.test_new_classes": {
            "name": "test_new_classes",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassesPyfference.test_simplify": {
            "name": "test_simplify",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffClasses.test_new_classes": {
            "name": "test_new_classes",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffClasses.test_same": {
            "name": "test_same",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffClasses.test_changed_class": {
            "name": "test_changed_class",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/tests/unit/test_directories.py": {
        "TestDirectoryPyfference.test_packages": {
            "name": "test_packages",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDirectoryPyfference.test_empty": {
            "name": "test_empty",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDirectoryPyfference.test_modules": {
            "name": "test_modules",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindThosePythonz.test_package": {
            "name": "test_package",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestFindThosePythonz.test_only_toplevel_package": {
            "name": "test_only_toplevel_package",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestFindThosePythonz.test_package_somewhere_deep": {
            "name": "test_package_somewhere_deep",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestFindThosePythonz.test_ignore_nonpython_stuff": {
            "name": "test_ignore_nonpython_stuff",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestFindThosePythonz.test_module": {
            "name": "test_module",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestFindThosePythonz.test_module_deep": {
            "name": "test_module_deep",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestFindThosePythonz.test_everything": {
            "name": "test_everything",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_identical": {
            "name": "test_identical",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_invalid": {
            "name": "test_invalid",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_remove_package": {
            "name": "test_remove_package",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_add_package": {
            "name": "test_add_package",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_changed_package": {
            "name": "test_changed_package",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_removed_module": {
            "name": "test_removed_module",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_changed_module": {
            "name": "test_changed_module",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffDirectory.test_new_module": {
            "name": "test_new_module",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        }
    },
    "pyff-master/tests/unit/test_functions.py": {
        "TestFunctionImplementationChange.test_sanity": {
            "name": "test_sanity",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionImplementationChange.test_make_message": {
            "name": "test_make_message",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionImplementationChange.test_equality": {
            "name": "test_equality",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExternalUsageChange.test_sanity": {
            "name": "test_sanity",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExternalUsageChange.test_make_message": {
            "name": "test_make_message",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExternalUsageChange.test_equality": {
            "name": "test_equality",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatementChange.test_sanity": {
            "name": "test_sanity",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfferenceRecorder.test_nochange": {
            "name": "test_nochange",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfferenceRecorder.test_namechange": {
            "name": "test_namechange",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfferenceRecorder.test_implementation": {
            "name": "test_implementation",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfference.test_sanity": {
            "name": "test_sanity",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfference.test_name_change": {
            "name": "test_name_change",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfference.test_method_name_change": {
            "name": "test_method_name_change",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfference.test_implementation_change": {
            "name": "test_implementation_change",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionPyfference.test_simplify": {
            "name": "test_simplify",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExternalNamesExtractor.test_import": {
            "name": "test_import",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExternalNamesExtractor.test_importfrom": {
            "name": "test_importfrom",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCompareImportUsage.test_no_external": {
            "name": "test_no_external",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCompareImportUsage.test_appeared": {
            "name": "test_appeared",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCompareImportUsage.test_gone": {
            "name": "test_gone",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunction._make_summary": {
            "name": "_make_summary",
            "location": 194,
            "return": [],
            "arguments": {
                "code": [
                    "str",
                    "typing.Deque"
                ]
            }
        },
        "TestPyffFunction.test_identical": {
            "name": "test_identical",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunction.test_namechange": {
            "name": "test_namechange",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunction.test_imports_fixes": {
            "name": "test_imports_fixes",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunction.test_external_name_usage": {
            "name": "test_external_name_usage",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunction.test_different_statement_count": {
            "name": "test_different_statement_count",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunctionCode.test_identical": {
            "name": "test_identical",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunctionCode.test_namechange": {
            "name": "test_namechange",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunctionCode.test_invalid": {
            "name": "test_invalid",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionSummary.mocked_node": {
            "name": "mocked_node",
            "location": 273,
            "return": [
                "Mock"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionSummary.test_sanity": {
            "name": "test_sanity",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mocked_node": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestFunctionSummary.test_set_method": {
            "name": "test_set_method",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mocked_node": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestFunctionSummary.test_property": {
            "name": "test_property",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mocked_node": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestFunctionsExtractor.extractor": {
            "name": "extractor",
            "location": 298,
            "return": [
                "FunctionsExtractor"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFunctionsExtractor.test_functions": {
            "name": "test_functions",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "TestFunctionsExtractor.test_not_enter_classes": {
            "name": "test_not_enter_classes",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "str"
                ]
            }
        },
        "TestFunctionsExtractor.test_property_functions": {
            "name": "test_property_functions",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extractor": [
                    "str"
                ]
            }
        },
        "TestFunctionsPyfference.test_sanity": {
            "name": "test_sanity",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunctions.test_sanity": {
            "name": "test_sanity",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunctions.test_property_functions": {
            "name": "test_property_functions",
            "location": 390,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunctions.test_changed_arguments": {
            "name": "test_changed_arguments",
            "location": 404,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffFunctions.test_same": {
            "name": "test_same",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/tests/unit/test_imports.py": {
        "TestImportedName.test_import": {
            "name": "test_import",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedName.test_importfrom": {
            "name": "test_importfrom",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedName.test_fqdn_imports": {
            "name": "test_fqdn_imports",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedName.test_fqast_imports": {
            "name": "test_fqast_imports",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedName.test_fqdn_importfrom": {
            "name": "test_fqdn_importfrom",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedName.test_fqast_importfrom": {
            "name": "test_fqast_importfrom",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNames.test_dictionary": {
            "name": "test_dictionary",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNames.test_import": {
            "name": "test_import",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNames.test_importfrom": {
            "name": "test_importfrom",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNames.test_asname": {
            "name": "test_asname",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffImports.test_new_import": {
            "name": "test_new_import",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNamesCompare.test_new_import": {
            "name": "test_new_import",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNamesCompare.test_removed_import": {
            "name": "test_removed_import",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNamesCompare.test_new_importfrom": {
            "name": "test_new_importfrom",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNamesCompare.test_removed_importfrom": {
            "name": "test_removed_importfrom",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNamesCompare.test_new_importfrom_module": {
            "name": "test_new_importfrom_module",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportedNamesCompare.test_identical": {
            "name": "test_identical",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFromImportPyfference.change": {
            "name": "change",
            "location": 244,
            "return": [
                "FromImportPyfference"
            ],
            "arguments": {}
        },
        "TestFromImportPyfference.test_truthiness": {
            "name": "test_truthiness",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "TestFromImportPyfference.test_new": {
            "name": "test_new",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "TestFromImportPyfference.test_removed": {
            "name": "test_removed",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "TestFromImportPyfference.test_new_modules": {
            "name": "test_new_modules",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "TestFromImportPyfference.test_removed_modules": {
            "name": "test_removed_modules",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "TestImportsPyfference.test_truthiness": {
            "name": "test_truthiness",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_message_new_import": {
            "name": "test_message_new_import",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_message_remove_import": {
            "name": "test_message_remove_import",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_message_new_fromimport": {
            "name": "test_message_new_fromimport",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_message_remove_fromimport": {
            "name": "test_message_remove_fromimport",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_message_new_fromimport_module": {
            "name": "test_message_new_fromimport_module",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_message_removed_fromimport_module": {
            "name": "test_message_removed_fromimport_module",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_from_to_general": {
            "name": "test_from_to_general",
            "location": 356,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportsPyfference.test_general_to_from": {
            "name": "test_general_to_from",
            "location": 364,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportExtractor.test_import_simple": {
            "name": "test_import_simple",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportExtractor.test_import_multiple": {
            "name": "test_import_multiple",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportExtractor.test_import_alias": {
            "name": "test_import_alias",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportExtractor.test_importfrom_simple": {
            "name": "test_importfrom_simple",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportExtractor.test_importfrom_multiple": {
            "name": "test_importfrom_multiple",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportExtractor.test_importfrom_alias": {
            "name": "test_importfrom_alias",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/tests/unit/test_kitchensink.py": {
        "test_highlights": {
            "name": "test_highlights",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyff-master/tests/unit/test_modules.py": {
        "TestModuleSummary.test_sanity": {
            "name": "test_sanity",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModulesPyfference.test_sanity": {
            "name": "test_sanity",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModulesPyfference.test_emptiness": {
            "name": "test_emptiness",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModulePyfference.test_sanity": {
            "name": "test_sanity",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModulePyfference.test_empty": {
            "name": "test_empty",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffModule.test_sanity": {
            "name": "test_sanity",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffModule.test_pyff_module_path": {
            "name": "test_pyff_module_path",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffModule.test_same": {
            "name": "test_same",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyff-master/tests/unit/test_packages.py": {
        "TestPackagesPyfference.test_empty": {
            "name": "test_empty",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPackagesPyfference.test_removed": {
            "name": "test_removed",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPackagesPyfference.test_new": {
            "name": "test_new",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPackagesPyfference.test_changed": {
            "name": "test_changed",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPackagePyfference.test_sanity": {
            "name": "test_sanity",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExtractions.test_extract_module": {
            "name": "test_extract_module",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffPackage.sample_package_path": {
            "name": "sample_package_path",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffPackage.sample_with_new_module_path": {
            "name": "sample_with_new_module_path",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TestPyffPackage.sample_package": {
            "name": "sample_package",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "sample_package_path": [
                    "str",
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "TestPyffPackage.sample_with_new_module": {
            "name": "sample_with_new_module",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "sample_with_new_module_path": [
                    "list[str]",
                    "bool"
                ]
            }
        },
        "TestPyffPackage.test_identical": {
            "name": "test_identical",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sample_package": []
            }
        },
        "TestPyffPackage.test_new_module": {
            "name": "test_new_module",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sample_package": [
                    "typing.Callable[, ]",
                    "bool"
                ],
                "sample_with_new_module": [
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "TestPyffPackage.test_pyff_package_path": {
            "name": "test_pyff_package_path",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sample_package_path": [
                    "bool"
                ],
                "sample_with_new_module_path": [
                    "bool"
                ]
            }
        }
    },
    "pyff-master/tests/unit/test_repositories.py": {
        "TestRevisionsPyfference.test_sanity": {
            "name": "test_sanity",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffGitRevision._make_fake_clone": {
            "name": "_make_fake_clone",
            "location": 22,
            "return": [],
            "arguments": {
                "fs": [
                    "typing.Iterable[str]",
                    "typing.Callable[, ]"
                ],
                "revisions": [
                    "typing.Iterable[str]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "TestPyffGitRevision.test_difference": {
            "name": "test_difference",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": [
                    "int",
                    "dict[, ]",
                    "typing.Sequence['cirq.Qid']",
                    "str"
                ]
            }
        },
        "TestPyffGitRevision.test_identical": {
            "name": "test_identical",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fs": [
                    "int",
                    "dict[, ]",
                    "typing.Sequence['cirq.Qid']",
                    "str"
                ]
            }
        },
        "TestPyffGitRevision._make_fake_clone._fake_clone_method": {
            "name": "_fake_clone_method",
            "location": 23,
            "return": [
                "MagicMock"
            ],
            "arguments": {
                "_": [],
                "directory": []
            }
        },
        "TestPyffGitRevision.test_difference.checkout_old": {
            "name": "checkout_old",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestPyffGitRevision.test_difference.checkout_new": {
            "name": "checkout_new",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestPyffGitRevision.test_identical.checkout_old": {
            "name": "checkout_old",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestPyffGitRevision._make_fake_clone._fake_clone_method._fake_checkout": {
            "name": "_fake_checkout",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "revision": []
            }
        }
    },
    "pyff-master/tests/unit/test_statements.py": {
        "TestFullyQualifyNames._check_fqn": {
            "name": "_check_fqn",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "imports": [
                    "str",
                    "int"
                ],
                "code": [
                    "str"
                ],
                "expected_subs": [
                    "bytes",
                    "int",
                    "str",
                    "dict[, ]"
                ],
                "expected_qualified_code": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "TestFullyQualifyNames._check_references": {
            "name": "_check_references",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "imports": [
                    "str",
                    "None"
                ],
                "code": [
                    "str",
                    "int"
                ],
                "references": [
                    "str",
                    "typing.Type",
                    "int",
                    "float"
                ]
            }
        },
        "TestFullyQualifyNames.test_import": {
            "name": "test_import",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFullyQualifyNames.test_importfrom": {
            "name": "test_importfrom",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFullyQualifyNames.test_nosub": {
            "name": "test_nosub",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFullyQualifyNames.test_references": {
            "name": "test_references",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFullyQualifyNames.test_references_from": {
            "name": "test_references_from",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFullyQualifyNames.test_references_alias": {
            "name": "test_references_alias",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleExternalNameUsageChange.test_sanity": {
            "name": "test_sanity",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleExternalNameUsageChange.test_equality": {
            "name": "test_equality",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExternalNameUsageChange.test_sanity": {
            "name": "test_sanity",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindExternalNameMatches._check_matches": {
            "name": "_check_matches",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "changeset": [
                    "bool",
                    "set[str]",
                    "None",
                    "list[str]",
                    "list[]",
                    "str"
                ],
                "length": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "typing.Sequence[str]",
                    "typing.MutableMapping",
                    "None",
                    "dict[str, list[typing.Any]]"
                ],
                "old": [
                    "int",
                    "set[str]",
                    "tuple[typing.Union[str,list[str]]]"
                ],
                "new": [
                    "int",
                    "list[str]",
                    "float",
                    "typing.Sequence[float]",
                    "None"
                ]
            }
        },
        "TestFindExternalNameMatches.test_import": {
            "name": "test_import",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindExternalNameMatches.test_importfrom": {
            "name": "test_importfrom",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFindExternalNameMatches.test_example_04": {
            "name": "test_example_04",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatementPyfference.test_sem_relevant": {
            "name": "test_sem_relevant",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatementPyfference.test_sem_irrelevant": {
            "name": "test_sem_irrelevant",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffStatement.test_identical": {
            "name": "test_identical",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffStatement.test_different": {
            "name": "test_different",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPyffStatement.test_external_names": {
            "name": "test_external_names",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
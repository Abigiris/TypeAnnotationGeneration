{
    "pygetmarc-master/setup.py": {},
    "pygetmarc-master/docs/source/conf.py": {},
    "pygetmarc-master/tests/test_get_marc.py": {
        "get_sample_record": {
            "name": "get_sample_record",
            "location": 8,
            "return": [],
            "arguments": {
                "bib_id": [
                    "str",
                    "int"
                ]
            }
        },
        "test_get_marc": {
            "name": "test_get_marc",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "bib_id": [
                    "str",
                    "int"
                ],
                "validate": [
                    "int",
                    "None"
                ]
            }
        },
        "test_get_marc_bad": {
            "name": "test_get_marc_bad",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_data": {
            "name": "test_clean_data",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pygetmarc-master/tests/test_modifers.py": {
        "test_add_955": {
            "name": "test_add_955",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_reflow": {
            "name": "test_reflow",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pygetmarc-master/tests/__init__.py": {},
    "pygetmarc-master/uiucprescon/__init__.py": {},
    "pygetmarc-master/uiucprescon/pygetmarc/modifiers.py": {
        "AbsEnrichment.enrich": {
            "name": "enrich",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "typing.Iterator",
                    "list[int]",
                    "str"
                ]
            }
        },
        "Add955.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Add955.enrich": {
            "name": "enrich",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "src": [
                    "str"
                ]
            }
        },
        "Add955._create_new_955_field": {
            "name": "_create_new_955_field",
            "location": 56,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool",
                    "list[str]",
                    "None"
                ],
                "bib_id": [
                    "tuple[]",
                    "str"
                ],
                "contains_v": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool",
                    "list[str]",
                    "None"
                ]
            }
        },
        "Reflow.enrich": {
            "name": "enrich",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "src": [
                    "str"
                ]
            }
        }
    },
    "pygetmarc-master/uiucprescon/pygetmarc/request.py": {
        "clean_up": {
            "name": "clean_up",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "data": [
                    "str",
                    "bytes"
                ]
            }
        },
        "get_marc": {
            "name": "get_marc",
            "location": 45,
            "return": [
                "int",
                "tuple[typing.Union[int,int,int]]",
                "str",
                "None",
                "float"
            ],
            "arguments": {
                "bib_id": [
                    "int",
                    "str",
                    "list[typing.Optional[int]]"
                ],
                "validate": [
                    "bool"
                ]
            }
        }
    },
    "pygetmarc-master/uiucprescon/pygetmarc/__init__.py": {},
    "pygetmarc-master/uiucprescon/pygetmarc/data/__init__.py": {}
}
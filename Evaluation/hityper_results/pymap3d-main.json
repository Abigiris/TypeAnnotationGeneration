{
    "pymap3d-main/setup.py": {},
    "pymap3d-main/Examples/angle_distance.py": {},
    "pymap3d-main/Examples/azel2radec.py": {},
    "pymap3d-main/Examples/lox_stability.py": {
        "matlab_func": {
            "name": "matlab_func",
            "location": 22,
            "return": [],
            "arguments": {
                "lat1": [
                    "float",
                    "typing.Callable[T, bool]"
                ],
                "lon1": [
                    "float",
                    "typing.Callable[T, bool]"
                ],
                "rng": [
                    "float",
                    "typing.Callable[T, bool]"
                ],
                "az": [
                    "float",
                    "typing.Callable[T, bool]"
                ]
            }
        }
    },
    "pymap3d-main/Examples/plot_geodetic2ecef.py": {
        "panel": {
            "name": "panel",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "ax": [],
                "val": [
                    "int",
                    "dict[, ]",
                    "str"
                ],
                "name": [
                    "str"
                ],
                "cmap": [
                    "None",
                    "int",
                    "dict[, ]",
                    "str"
                ]
            }
        }
    },
    "pymap3d-main/Examples/radec2azel.py": {},
    "pymap3d-main/Examples/vdist_poi.py": {
        "get_place_coords": {
            "name": "get_place_coords",
            "location": 24,
            "return": [],
            "arguments": {
                "place_type": [
                    "str",
                    "None",
                    "list[str]",
                    "list[tuple[typing.Union[int,int]]]",
                    "bool"
                ],
                "latitude": [
                    "str"
                ],
                "longitude": [
                    "str"
                ],
                "search_radius_km": [
                    "int",
                    "list[tuple[typing.Union[str,str]]]",
                    "list[str]"
                ],
                "keyfn": [
                    "str",
                    "bytes",
                    "None",
                    "int"
                ]
            }
        }
    },
    "pymap3d-main/Examples/vdist_stability.py": {
        "matlab_func": {
            "name": "matlab_func",
            "location": 21,
            "return": [],
            "arguments": {
                "lat1": [
                    "float",
                    "typing.Callable[T, bool]"
                ],
                "lon1": [
                    "float",
                    "typing.Callable[T, bool]"
                ],
                "lat2": [
                    "float",
                    "typing.Callable[T, bool]"
                ],
                "lon2": [
                    "float",
                    "typing.Callable[T, bool]"
                ]
            }
        }
    },
    "pymap3d-main/scripts/benchmark_ecef2geo.py": {
        "bench": {
            "name": "bench",
            "location": 13,
            "return": [],
            "arguments": {
                "N": [
                    "int"
                ]
            }
        }
    },
    "pymap3d-main/scripts/benchmark_vincenty.py": {
        "bench_vreckon": {
            "name": "bench_vreckon",
            "location": 28,
            "return": [],
            "arguments": {
                "N": [
                    "int",
                    "tuple[typing.Union[int,...]]",
                    "None"
                ]
            }
        },
        "bench_vdist": {
            "name": "bench_vdist",
            "location": 39,
            "return": [],
            "arguments": {
                "N": [
                    "int",
                    "tuple[typing.Union[int,...]]",
                    "None"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/aer.py": {
        "ecef2aer": {
            "name": "ecef2aer",
            "location": 18,
            "return": [],
            "arguments": {
                "x": [
                    "bool",
                    "float"
                ],
                "y": [
                    "bool",
                    "float"
                ],
                "z": [
                    "bool",
                    "float"
                ],
                "lat0": [
                    "bool",
                    "float"
                ],
                "lon0": [
                    "bool",
                    "float"
                ],
                "h0": [
                    "bool",
                    "float"
                ],
                "ell": [
                    "None",
                    "bool",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2aer": {
            "name": "geodetic2aer",
            "location": 67,
            "return": [],
            "arguments": {
                "lat": [
                    "bool"
                ],
                "lon": [
                    "bool"
                ],
                "h": [
                    "bool"
                ],
                "lat0": [
                    "bool"
                ],
                "lon0": [
                    "bool"
                ],
                "h0": [
                    "bool"
                ],
                "ell": [
                    "None",
                    "bool"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "aer2geodetic": {
            "name": "aer2geodetic",
            "location": 115,
            "return": [],
            "arguments": {
                "az": [
                    "int",
                    "list[]",
                    "str"
                ],
                "el": [
                    "int",
                    "list[]",
                    "str"
                ],
                "srange": [
                    "int",
                    "list[]",
                    "str"
                ],
                "lat0": [
                    "int",
                    "list[]",
                    "str"
                ],
                "lon0": [
                    "int",
                    "list[]",
                    "str"
                ],
                "h0": [
                    "int",
                    "list[]",
                    "str"
                ],
                "ell": [
                    "None",
                    "bool",
                    "typing.Sequence['cirq.Qid']"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "eci2aer": {
            "name": "eci2aer",
            "location": 165,
            "return": [],
            "arguments": {
                "x": [
                    "float",
                    "str"
                ],
                "y": [
                    "float",
                    "str"
                ],
                "z": [
                    "float",
                    "str"
                ],
                "lat0": [
                    "float",
                    "bool",
                    "None"
                ],
                "lon0": [
                    "float",
                    "bool",
                    "None"
                ],
                "h0": [
                    "float",
                    "bool",
                    "None"
                ],
                "t": [
                    "float",
                    "str"
                ]
            }
        },
        "aer2eci": {
            "name": "aer2eci",
            "location": 207,
            "return": [],
            "arguments": {
                "az": [
                    "bool",
                    "float",
                    "tuple[]"
                ],
                "el": [
                    "bool",
                    "float",
                    "tuple[]"
                ],
                "srange": [
                    "bool",
                    "float",
                    "tuple[]"
                ],
                "lat0": [
                    "bool",
                    "float",
                    "tuple[]"
                ],
                "lon0": [
                    "bool",
                    "float",
                    "tuple[]"
                ],
                "h0": [
                    "bool",
                    "float",
                    "tuple[]"
                ],
                "t": [
                    "float",
                    "int",
                    "tuple[typing.Union[float,float,float]]"
                ],
                "ell": [
                    "None",
                    "bool",
                    "float",
                    "tuple[]"
                ]
            }
        },
        "aer2ecef": {
            "name": "aer2ecef",
            "location": 264,
            "return": [
                "tuple[typing.Union[float,int]]"
            ],
            "arguments": {
                "az": [
                    "bool"
                ],
                "el": [
                    "bool"
                ],
                "srange": [
                    "bool"
                ],
                "lat0": [
                    "bool"
                ],
                "lon0": [
                    "bool"
                ],
                "alt0": [
                    "int",
                    "list[]",
                    "str"
                ],
                "ell": [
                    "None",
                    "int",
                    "list[]",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/azelradec.py": {
        "azel2radec": {
            "name": "azel2radec",
            "location": 21,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "az_deg": [
                    "int",
                    "str",
                    "typing.Type",
                    "typing.Mapping",
                    "None",
                    "float"
                ],
                "el_deg": [
                    "int",
                    "str",
                    "typing.Type",
                    "typing.Mapping",
                    "None",
                    "float"
                ],
                "lat_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "lon_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "time": [
                    "int",
                    "str",
                    "typing.Type",
                    "typing.Mapping",
                    "None",
                    "float"
                ]
            }
        },
        "radec2azel": {
            "name": "radec2azel",
            "location": 67,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "ra_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "dec_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "lat_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "lon_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "time": [
                    "float",
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/ecef.py": {
        "geodetic2ecef": {
            "name": "geodetic2ecef",
            "location": 31,
            "return": [
                "tuple[float]"
            ],
            "arguments": {
                "lat": [
                    "float",
                    "int",
                    "str",
                    "list[str]"
                ],
                "lon": [
                    "tuple[]",
                    "int",
                    "None"
                ],
                "alt": [
                    "float",
                    "int"
                ],
                "ell": [
                    "None",
                    "float",
                    "int",
                    "str",
                    "list[str]"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ecef2geodetic": {
            "name": "ecef2geodetic",
            "location": 84,
            "return": [],
            "arguments": {
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "str"
                ],
                "z": [
                    "int",
                    "str"
                ],
                "ell": [
                    "None",
                    "dict[, ]",
                    "bool",
                    "float",
                    "list[]",
                    "typing.Sequence[str]"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ecef2enuv": {
            "name": "ecef2enuv",
            "location": 206,
            "return": [
                "tuple[typing.Union[tuple[typing.Union[float,float,float,float,float]],str,int,list[None],float,list[int],tuple[typing.Union[tuple[typing.Union[typing.Literal,typing.Literal]],tuple[typing.Union[typing.Any,typing.Literal]]]],typing.Pattern]]"
            ],
            "arguments": {
                "u": [],
                "v": [],
                "w": [],
                "lat0": [
                    "list['cirq.Qid']",
                    "str"
                ],
                "lon0": [
                    "int",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ecef2enu": {
            "name": "ecef2enu",
            "location": 249,
            "return": [],
            "arguments": {
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ],
                "z": [
                    "int",
                    "float"
                ],
                "lat0": [
                    "int"
                ],
                "lon0": [
                    "int"
                ],
                "h0": [
                    "float",
                    "str"
                ],
                "ell": [
                    "None",
                    "float",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "enu2uvw": {
            "name": "enu2uvw",
            "location": 296,
            "return": [
                "tuple[typing.Union[int,dict[str, int],float,str]]"
            ],
            "arguments": {
                "east": [
                    "str",
                    "tuple[int]",
                    "list[int]"
                ],
                "north": [
                    "str",
                    "int"
                ],
                "up": [
                    "str",
                    "int"
                ],
                "lat0": [
                    "dict[, ]",
                    "int"
                ],
                "lon0": [
                    "int",
                    "None",
                    "tuple[]",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "uvw2enu": {
            "name": "uvw2enu",
            "location": 336,
            "return": [
                "tuple[typing.Union[float,dict[int, int],list[float],int,list[int],dict[typing.Any, None]]]"
            ],
            "arguments": {
                "u": [],
                "v": [],
                "w": [
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "list[dict[str, str]]"
                ],
                "lat0": [
                    "typing.Sequence[T]",
                    "str"
                ],
                "lon0": [
                    "int",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "eci2geodetic": {
            "name": "eci2geodetic",
            "location": 368,
            "return": [],
            "arguments": {
                "x": [
                    "float"
                ],
                "y": [
                    "float"
                ],
                "z": [
                    "float"
                ],
                "t": [
                    "float"
                ],
                "ell": [
                    "None",
                    "typing.Collection",
                    "float",
                    "typing.Sequence[float]"
                ]
            }
        },
        "geodetic2eci": {
            "name": "geodetic2eci",
            "location": 409,
            "return": [],
            "arguments": {
                "lat": [
                    "int",
                    "str",
                    "tuple[]",
                    "float"
                ],
                "lon": [
                    "int",
                    "str",
                    "tuple[]",
                    "float"
                ],
                "alt": [
                    "int",
                    "str",
                    "tuple[]",
                    "float"
                ],
                "t": [
                    "int",
                    "float",
                    "dict[int, tuple[typing.Union[int,int]]]",
                    "str"
                ],
                "ell": [
                    "None",
                    "int",
                    "str",
                    "tuple[]",
                    "float"
                ]
            }
        },
        "enu2ecef": {
            "name": "enu2ecef",
            "location": 450,
            "return": [
                "tuple[typing.Union[float,int]]"
            ],
            "arguments": {
                "e1": [
                    "int"
                ],
                "n1": [
                    "int"
                ],
                "u1": [
                    "int"
                ],
                "lat0": [
                    "int",
                    "str",
                    "typing.Iterable[str]",
                    "typing.Sequence[T]"
                ],
                "lon0": [
                    "int",
                    "str",
                    "typing.Iterable[str]",
                    "typing.Sequence[T]"
                ],
                "h0": [
                    "int",
                    "str"
                ],
                "ell": [
                    "None",
                    "int",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/eci.py": {
        "eci2ecef": {
            "name": "eci2ecef",
            "location": 19,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "x": [
                    "int",
                    "list[float]"
                ],
                "y": [
                    "int"
                ],
                "z": [
                    "int",
                    "float",
                    "typing.Sequence[int]",
                    "typing.Sequence[float]"
                ],
                "time": [
                    "int",
                    "float"
                ]
            }
        },
        "ecef2eci": {
            "name": "ecef2eci",
            "location": 73,
            "return": [
                "tuple[typing.Union[int,dict[str, int],list[list[typing.Any]],list[tuple[typing.Union[typing.Any,typing.Any,typing.Any]]],list[list[int]],list[],list[int],list[list[None]],tuple[typing.Union[tuple[typing.Union[typing.Literal,typing.Literal]],tuple[typing.Union[typing.Literal,typing.Literal]]]],typing.Type,tuple[typing.Union[list[int],list[float]]]]]"
            ],
            "arguments": {
                "x": [
                    "int",
                    "list[float]"
                ],
                "y": [
                    "int"
                ],
                "z": [
                    "int",
                    "float",
                    "typing.Sequence[int]",
                    "typing.Sequence[float]"
                ],
                "time": [
                    "int",
                    "float"
                ]
            }
        },
        "R3": {
            "name": "R3",
            "location": 129,
            "return": [],
            "arguments": {
                "x": [
                    "float"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/ellipsoid.py": {
        "Ellipsoid.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "typing.Text"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/enu.py": {
        "enu2aer": {
            "name": "enu2aer",
            "location": 18,
            "return": [],
            "arguments": {
                "e": [],
                "n": [],
                "u": [],
                "deg": []
            }
        },
        "aer2enu": {
            "name": "aer2enu",
            "location": 71,
            "return": [],
            "arguments": {
                "az": [],
                "el": [],
                "srange": [],
                "deg": []
            }
        },
        "enu2geodetic": {
            "name": "enu2geodetic",
            "location": 111,
            "return": [],
            "arguments": {
                "e": [],
                "n": [],
                "u": [],
                "lat0": [],
                "lon0": [],
                "h0": [],
                "ell": [],
                "deg": []
            }
        },
        "geodetic2enu": {
            "name": "geodetic2enu",
            "location": 159,
            "return": [],
            "arguments": {
                "lat": [],
                "lon": [],
                "h": [],
                "lat0": [],
                "lon0": [],
                "h0": [],
                "ell": [],
                "deg": []
            }
        }
    },
    "pymap3d-main/src/pymap3d/haversine.py": {
        "anglesep_meeus": {
            "name": "anglesep_meeus",
            "location": 22,
            "return": [
                "int",
                "dict[, ]",
                "list[int]",
                "list[list[int]]",
                "str"
            ],
            "arguments": {
                "lon0": [
                    "int"
                ],
                "lat0": [
                    "int"
                ],
                "lon1": [
                    "int"
                ],
                "lat1": [
                    "int"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "anglesep": {
            "name": "anglesep",
            "location": 69,
            "return": [
                "str",
                "None",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "lon0": [
                    "str",
                    "float"
                ],
                "lat0": [
                    "str",
                    "float"
                ],
                "lon1": [
                    "str",
                    "float"
                ],
                "lat1": [
                    "str",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "haversine": {
            "name": "haversine",
            "location": 109,
            "return": [
                "float"
            ],
            "arguments": {
                "theta": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/latitude.py": {
        "geoc2geod": {
            "name": "geoc2geod",
            "location": 32,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "geocentric_lat": [
                    "str",
                    "bool",
                    "float"
                ],
                "geocentric_distance": [
                    "float",
                    "int",
                    "list[float]"
                ],
                "ell": [
                    "None",
                    "bool",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2geocentric": {
            "name": "geodetic2geocentric",
            "location": 79,
            "return": [
                "tuple[typing.Union[float,float,float,float,float]]",
                "float"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "float"
                ],
                "alt_m": [
                    "int",
                    "float"
                ],
                "ell": [
                    "None",
                    "bool",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geocentric2geodetic": {
            "name": "geocentric2geodetic",
            "location": 118,
            "return": [
                "int"
            ],
            "arguments": {
                "geocentric_lat": [
                    "bool",
                    "float"
                ],
                "alt_m": [
                    "int",
                    "float"
                ],
                "ell": [
                    "None",
                    "bool",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2isometric": {
            "name": "geodetic2isometric",
            "location": 154,
            "return": [],
            "arguments": {
                "geodetic_lat": [
                    "str"
                ],
                "ell": [
                    "None",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "isometric2geodetic": {
            "name": "isometric2geodetic",
            "location": 214,
            "return": [
                "list[]",
                "tuple[typing.Union[str,str]]",
                "int"
            ],
            "arguments": {
                "isometric_lat": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "ell": [
                    "None",
                    "bool",
                    "typing.Callable[, ]",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "conformal2geodetic": {
            "name": "conformal2geodetic",
            "location": 250,
            "return": [],
            "arguments": {
                "conformal_lat": [
                    "list['cirq.Qid']",
                    "str",
                    "float"
                ],
                "ell": [
                    "None",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2conformal": {
            "name": "geodetic2conformal",
            "location": 295,
            "return": [
                "int"
            ],
            "arguments": {
                "geodetic_lat": [
                    "typing.Any",
                    "str"
                ],
                "ell": [
                    "None",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2rectifying": {
            "name": "geodetic2rectifying",
            "location": 341,
            "return": [
                "float"
            ],
            "arguments": {
                "geodetic_lat": [
                    "list['cirq.Qid']",
                    "str",
                    "float"
                ],
                "ell": [
                    "None",
                    "bool",
                    "str",
                    "typing.Callable[, ]"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "rectifying2geodetic": {
            "name": "rectifying2geodetic",
            "location": 387,
            "return": [],
            "arguments": {
                "rectifying_lat": [
                    "list['cirq.Qid']",
                    "str",
                    "float"
                ],
                "ell": [
                    "None",
                    "bool",
                    "str",
                    "typing.Callable[, ]"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2authalic": {
            "name": "geodetic2authalic",
            "location": 433,
            "return": [
                "float"
            ],
            "arguments": {
                "geodetic_lat": [
                    "list['cirq.Qid']",
                    "str",
                    "float"
                ],
                "ell": [
                    "None",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "authalic2geodetic": {
            "name": "authalic2geodetic",
            "location": 477,
            "return": [],
            "arguments": {
                "authalic_lat": [
                    "list['cirq.Qid']",
                    "str",
                    "float"
                ],
                "ell": [
                    "None",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2parametric": {
            "name": "geodetic2parametric",
            "location": 520,
            "return": [
                "int",
                "dict[, ]",
                "list[int]",
                "list[list[int]]",
                "str"
            ],
            "arguments": {
                "geodetic_lat": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "ell": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "parametric2geodetic": {
            "name": "parametric2geodetic",
            "location": 554,
            "return": [
                "int",
                "dict[, ]",
                "list[int]",
                "list[list[int]]",
                "str"
            ],
            "arguments": {
                "parametric_lat": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "ell": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/los.py": {
        "lookAtSpheroid": {
            "name": "lookAtSpheroid",
            "location": 20,
            "return": [],
            "arguments": {
                "lat0": [],
                "lon0": [],
                "h0": [],
                "az": [],
                "tilt": [],
                "ell": [],
                "deg": []
            }
        }
    },
    "pymap3d-main/src/pymap3d/lox.py": {
        "meridian_dist": {
            "name": "meridian_dist",
            "location": 38,
            "return": [],
            "arguments": {
                "lat": [],
                "ell": [],
                "deg": []
            }
        },
        "meridian_arc": {
            "name": "meridian_arc",
            "location": 59,
            "return": [],
            "arguments": {
                "lat1": [],
                "lat2": [],
                "ell": [],
                "deg": []
            }
        },
        "loxodrome_inverse": {
            "name": "loxodrome_inverse",
            "location": 87,
            "return": [],
            "arguments": {
                "lat1": [],
                "lon1": [],
                "lat2": [],
                "lon2": [],
                "ell": [],
                "deg": []
            }
        },
        "loxodrome_direct": {
            "name": "loxodrome_direct",
            "location": 179,
            "return": [],
            "arguments": {
                "lat1": [],
                "lon1": [],
                "rng": [],
                "a12": [],
                "ell": [],
                "deg": []
            }
        },
        "departure": {
            "name": "departure",
            "location": 265,
            "return": [],
            "arguments": {
                "lon1": [],
                "lon2": [],
                "lat": [],
                "ell": [],
                "deg": []
            }
        },
        "meanm": {
            "name": "meanm",
            "location": 293,
            "return": [],
            "arguments": {
                "lat": [],
                "lon": [],
                "ell": [],
                "deg": []
            }
        }
    },
    "pymap3d-main/src/pymap3d/mathfun.py": {
        "power": {
            "name": "power",
            "location": 30,
            "return": [],
            "arguments": {
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ]
            }
        },
        "sign": {
            "name": "sign",
            "location": 33,
            "return": [
                "float"
            ],
            "arguments": {
                "x": []
            }
        },
        "cbrt": {
            "name": "cbrt",
            "location": 44,
            "return": [
                "float"
            ],
            "arguments": {
                "x": []
            }
        }
    },
    "pymap3d-main/src/pymap3d/ned.py": {
        "aer2ned": {
            "name": "aer2ned",
            "location": 10,
            "return": [
                "tuple[typing.Union[int,float,str]]"
            ],
            "arguments": {
                "az": [
                    "bool",
                    "str",
                    "float"
                ],
                "elev": [
                    "bool",
                    "str",
                    "float"
                ],
                "slantRange": [
                    "bool",
                    "str",
                    "float"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ned2aer": {
            "name": "ned2aer",
            "location": 40,
            "return": [],
            "arguments": {
                "n": [
                    "bool"
                ],
                "e": [
                    "bool"
                ],
                "d": [
                    "bool"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ned2geodetic": {
            "name": "ned2geodetic",
            "location": 69,
            "return": [],
            "arguments": {
                "n": [
                    "bool",
                    "str"
                ],
                "e": [
                    "bool",
                    "str"
                ],
                "d": [
                    "bool"
                ],
                "lat0": [
                    "bool",
                    "str"
                ],
                "lon0": [
                    "bool",
                    "str"
                ],
                "h0": [
                    "bool",
                    "str"
                ],
                "ell": [
                    "None",
                    "bool",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ned2ecef": {
            "name": "ned2ecef",
            "location": 118,
            "return": [],
            "arguments": {
                "n": [
                    "bool"
                ],
                "e": [
                    "bool"
                ],
                "d": [
                    "bool"
                ],
                "lat0": [
                    "bool"
                ],
                "lon0": [
                    "bool"
                ],
                "h0": [
                    "bool"
                ],
                "ell": [
                    "None",
                    "bool"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ecef2ned": {
            "name": "ecef2ned",
            "location": 164,
            "return": [
                "tuple[typing.Union[int,float,tuple[typing.Union[typing.Any,typing.Any]],list[float]]]"
            ],
            "arguments": {
                "x": [
                    "bool"
                ],
                "y": [
                    "bool"
                ],
                "z": [
                    "bool"
                ],
                "lat0": [
                    "bool"
                ],
                "lon0": [
                    "bool"
                ],
                "h0": [
                    "bool"
                ],
                "ell": [
                    "None",
                    "bool"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "geodetic2ned": {
            "name": "geodetic2ned",
            "location": 213,
            "return": [
                "tuple[typing.Union[int,str,float]]"
            ],
            "arguments": {
                "lat": [
                    "bool"
                ],
                "lon": [
                    "bool"
                ],
                "h": [
                    "bool"
                ],
                "lat0": [
                    "bool"
                ],
                "lon0": [
                    "bool"
                ],
                "h0": [
                    "bool"
                ],
                "ell": [
                    "None",
                    "bool"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "ecef2nedv": {
            "name": "ecef2nedv",
            "location": 262,
            "return": [
                "tuple[typing.Union[int,float,tuple[typing.Union[typing.Any,typing.Any]],list[float]]]"
            ],
            "arguments": {
                "x": [
                    "bool"
                ],
                "y": [
                    "bool"
                ],
                "z": [
                    "bool"
                ],
                "lat0": [
                    "bool"
                ],
                "lon0": [
                    "bool"
                ],
                "deg": [
                    "bool"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/rcurve.py": {
        "geocentric_radius": {
            "name": "geocentric_radius",
            "location": 12,
            "return": [],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str",
                    "dict[str, bool]"
                ],
                "ell": [
                    "None",
                    "bool",
                    "str",
                    "dict[str, bool]"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "parallel": {
            "name": "parallel",
            "location": 32,
            "return": [],
            "arguments": {
                "lat": [
                    "typing.Callable[, ]",
                    "str"
                ],
                "ell": [
                    "None",
                    "typing.Callable[, ]",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "meridian": {
            "name": "meridian",
            "location": 58,
            "return": [],
            "arguments": {
                "lat": [
                    "bool",
                    "float",
                    "str",
                    "typing.Iterable[str]"
                ],
                "ell": [
                    "None",
                    "float",
                    "str",
                    "typing.Iterable[str]"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "transverse": {
            "name": "transverse",
            "location": 85,
            "return": [],
            "arguments": {
                "lat": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "ell": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/rsphere.py": {
        "eqavol": {
            "name": "eqavol",
            "location": 26,
            "return": [
                "float"
            ],
            "arguments": {
                "ell": [
                    "None",
                    "float",
                    "str"
                ]
            }
        },
        "authalic": {
            "name": "authalic",
            "location": 47,
            "return": [],
            "arguments": {
                "ell": [
                    "None",
                    "float",
                    "str"
                ]
            }
        },
        "rectifying": {
            "name": "rectifying",
            "location": 74,
            "return": [
                "float"
            ],
            "arguments": {
                "ell": [
                    "None",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "euler": {
            "name": "euler",
            "location": 92,
            "return": [],
            "arguments": {
                "lat1": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "lon1": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "lat2": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "lon2": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "ell": [
                    "None",
                    "bool",
                    "str"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "curve": {
            "name": "curve",
            "location": 143,
            "return": [
                "int"
            ],
            "arguments": {
                "lat": [
                    "float",
                    "None",
                    "int",
                    "list[int]"
                ],
                "ell": [
                    "None",
                    "bool",
                    "float"
                ],
                "deg": [
                    "bool"
                ],
                "method": [
                    "typing.Text"
                ]
            }
        },
        "triaxial": {
            "name": "triaxial",
            "location": 178,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "ell": [
                    "None",
                    "str",
                    "int",
                    "typing.AnyStr"
                ],
                "method": [
                    "typing.Text"
                ]
            }
        },
        "biaxial": {
            "name": "biaxial",
            "location": 205,
            "return": [
                "int"
            ],
            "arguments": {
                "ell": [
                    "None",
                    "str",
                    "int",
                    "typing.AnyStr"
                ],
                "method": [
                    "typing.Text"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/sidereal.py": {
        "datetime2sidereal": {
            "name": "datetime2sidereal",
            "location": 19,
            "return": [
                "list[]",
                "int",
                "str",
                "float"
            ],
            "arguments": {
                "time": [
                    "list[int]",
                    "list[]",
                    "list[str]"
                ],
                "lon_radians": [
                    "float",
                    "int",
                    "str"
                ]
            }
        },
        "juliandate": {
            "name": "juliandate",
            "location": 56,
            "return": [
                "list[]",
                "float"
            ],
            "arguments": {
                "time": [
                    "list[float]",
                    "int",
                    "float"
                ]
            }
        },
        "greenwichsrt": {
            "name": "greenwichsrt",
            "location": 92,
            "return": [
                "list[]",
                "float"
            ],
            "arguments": {
                "Jdate": [
                    "int"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/spherical.py": {
        "geodetic2spherical": {
            "name": "geodetic2spherical",
            "location": 20,
            "return": [
                "tuple[typing.Union[int,typing.Callable[, ],str,dict[, ],list[int],list[list[int]]]]"
            ],
            "arguments": {
                "lat": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "lon": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "alt": [
                    "int",
                    "tuple[typing.Union[int,int,int]]",
                    "list[]"
                ],
                "ell": [
                    "None",
                    "float",
                    "int",
                    "str",
                    "list[str]"
                ],
                "deg": [
                    "bool"
                ]
            }
        },
        "spherical2geodetic": {
            "name": "spherical2geodetic",
            "location": 91,
            "return": [],
            "arguments": {
                "lat": [
                    "int",
                    "float",
                    "typing.Iterable[list[str]]"
                ],
                "lon": [
                    "int",
                    "float",
                    "typing.Iterable[list[str]]"
                ],
                "radius": [
                    "int",
                    "float",
                    "str",
                    "list[int]"
                ],
                "ell": [
                    "None",
                    "int",
                    "str",
                    "dict[, ]",
                    "float",
                    "tuple[]"
                ],
                "deg": [
                    "bool"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/timeconv.py": {
        "str2dt": {
            "name": "str2dt",
            "location": 16,
            "return": [
                "datetime",
                "str",
                "list[]"
            ],
            "arguments": {
                "time": [
                    "str"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/utils.py": {
        "cart2pol": {
            "name": "cart2pol",
            "location": 19,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "pol2cart": {
            "name": "pol2cart",
            "location": 24,
            "return": [],
            "arguments": {
                "theta": [],
                "rho": []
            }
        },
        "cart2sph": {
            "name": "cart2sph",
            "location": 29,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "z": []
            }
        },
        "sph2cart": {
            "name": "sph2cart",
            "location": 38,
            "return": [],
            "arguments": {
                "az": [],
                "el": [],
                "r": []
            }
        },
        "sanitize": {
            "name": "sanitize",
            "location": 47,
            "return": [],
            "arguments": {
                "lat": [],
                "ell": [],
                "deg": []
            }
        }
    },
    "pymap3d-main/src/pymap3d/vallado.py": {
        "azel2radec": {
            "name": "azel2radec",
            "location": 18,
            "return": [
                "tuple[int]"
            ],
            "arguments": {
                "az_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "el_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "lat_deg": [
                    "bool",
                    "float"
                ],
                "lon_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "time": [
                    "float",
                    "int",
                    "tuple[]"
                ]
            }
        },
        "radec2azel": {
            "name": "radec2azel",
            "location": 75,
            "return": [
                "tuple[float]"
            ],
            "arguments": {
                "ra_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "dec_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "lat_deg": [
                    "bool",
                    "float"
                ],
                "lon_deg": [
                    "bool",
                    "list[typing.Any]",
                    "None",
                    "float",
                    "str"
                ],
                "time": [
                    "float",
                    "int",
                    "tuple[]"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/vincenty.py": {
        "vdist": {
            "name": "vdist",
            "location": 23,
            "return": [],
            "arguments": {
                "Lat1": [],
                "Lon1": [],
                "Lat2": [],
                "Lon2": [],
                "ell": []
            }
        },
        "vreckon": {
            "name": "vreckon",
            "location": 265,
            "return": [],
            "arguments": {
                "Lat1": [],
                "Lon1": [],
                "Rng": [],
                "Azim": [],
                "ell": []
            }
        },
        "track2": {
            "name": "track2",
            "location": 449,
            "return": [],
            "arguments": {
                "lat1": [],
                "lon1": [],
                "lat2": [],
                "lon2": [],
                "ell": [],
                "npts": [],
                "deg": []
            }
        }
    },
    "pymap3d-main/src/pymap3d/__init__.py": {},
    "pymap3d-main/src/pymap3d/tests/test_aer.py": {
        "test_aer2ecef": {
            "name": "test_aer2ecef",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "aer": [],
                "lla": [],
                "xyz": []
            }
        },
        "test_ecef2aer": {
            "name": "test_ecef2aer",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "xyz": [
                    "bool",
                    "str"
                ],
                "lla": [
                    "str"
                ],
                "aer": [
                    "str"
                ]
            }
        },
        "test_aer_enu": {
            "name": "test_aer_enu",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "aer": [
                    "str"
                ],
                "enu": [
                    "str",
                    "float"
                ]
            }
        },
        "test_aer_ned": {
            "name": "test_aer_ned",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "aer": [
                    "str"
                ],
                "ned": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_eci.py": {
        "test_eci2ecef": {
            "name": "test_eci2ecef",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ecef2eci": {
            "name": "test_ecef2eci",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_eci2geodetic": {
            "name": "test_eci2geodetic",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geodetic2eci": {
            "name": "test_geodetic2eci",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_eci2aer": {
            "name": "test_eci2aer",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_aer2eci": {
            "name": "test_aer2eci",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_elliposid.py": {
        "test_reference": {
            "name": "test_reference",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "model": [
                    "str",
                    "bool"
                ],
                "f": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_ellipsoid": {
            "name": "test_ellipsoid",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_enu.py": {
        "test_scalar_enu": {
            "name": "test_scalar_enu",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "xyz": []
            }
        },
        "test_array_enu": {
            "name": "test_array_enu",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_enu_ecef": {
            "name": "test_enu_ecef",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "enu": [
                    "int",
                    "float",
                    "typing.Mapping"
                ],
                "lla": [],
                "xyz": []
            }
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_geodetic.py": {
        "test_scalar_geodetic2ecef": {
            "name": "test_scalar_geodetic2ecef",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "lla": []
            }
        },
        "test_array_geodetic2ecef": {
            "name": "test_array_geodetic2ecef",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_scalar_ecef2geodetic": {
            "name": "test_scalar_ecef2geodetic",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "xyz": []
            }
        },
        "test_array_ecef2geodetic": {
            "name": "test_array_ecef2geodetic",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_inside_ecef2geodetic": {
            "name": "test_inside_ecef2geodetic",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_xarray_ecef": {
            "name": "test_xarray_ecef",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pandas_ecef": {
            "name": "test_pandas_ecef",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ecef": {
            "name": "test_ecef",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geodetic2ecef": {
            "name": "test_geodetic2ecef",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "lla": [
                    "str",
                    "float"
                ],
                "xyz": [
                    "str",
                    "float"
                ]
            }
        },
        "test_ecef2geodetic": {
            "name": "test_ecef2geodetic",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "xyz": [
                    "str",
                    "float"
                ],
                "lla": [
                    "str",
                    "float"
                ]
            }
        },
        "test_aer_geodetic": {
            "name": "test_aer_geodetic",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "aer": [
                    "str"
                ],
                "lla": [
                    "bool",
                    "str"
                ],
                "lla0": [
                    "str",
                    "float"
                ]
            }
        },
        "test_scalar_nan": {
            "name": "test_scalar_nan",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_allnan": {
            "name": "test_allnan",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_somenan": {
            "name": "test_somenan",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_numpy_ecef2geodetic": {
            "name": "test_numpy_ecef2geodetic",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "xyz": [
                    "bool"
                ],
                "lla": [
                    "str",
                    "float"
                ]
            }
        },
        "test_numpy_geodetic2ecef": {
            "name": "test_numpy_geodetic2ecef",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "lla": [
                    "bool",
                    "typing.Mapping"
                ],
                "xyz": [
                    "typing.Mapping",
                    "bool"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_latitude.py": {
        "test_geodetic_alt_geocentric": {
            "name": "test_geodetic_alt_geocentric",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str",
                    "float"
                ],
                "alt_m": [
                    "bool",
                    "str"
                ],
                "geocentric_lat": [
                    "bool",
                    "str"
                ]
            }
        },
        "test_geodetic_geocentric": {
            "name": "test_geodetic_geocentric",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str"
                ],
                "geocentric_lat": [
                    "bool",
                    "str"
                ]
            }
        },
        "test_numpy_geodetic_geocentric": {
            "name": "test_numpy_geodetic_geocentric",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geodetic_isometric": {
            "name": "test_geodetic_isometric",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str"
                ],
                "isometric_lat": [
                    "bool"
                ]
            }
        },
        "test_numpy_geodetic_isometric": {
            "name": "test_numpy_geodetic_isometric",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geodetic_conformal": {
            "name": "test_geodetic_conformal",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str"
                ],
                "conformal_lat": [
                    "bool"
                ]
            }
        },
        "test_numpy_geodetic_conformal": {
            "name": "test_numpy_geodetic_conformal",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geodetic_rectifying": {
            "name": "test_geodetic_rectifying",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str"
                ],
                "rectifying_lat": [
                    "bool",
                    "str"
                ]
            }
        },
        "test_numpy_geodetic_rectifying": {
            "name": "test_numpy_geodetic_rectifying",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geodetic_authalic": {
            "name": "test_geodetic_authalic",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str"
                ],
                "authalic_lat": [
                    "bool",
                    "str"
                ]
            }
        },
        "test_numpy_geodetic_authalic": {
            "name": "test_numpy_geodetic_authalic",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geodetic_parametric": {
            "name": "test_geodetic_parametric",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "geodetic_lat": [
                    "bool",
                    "str"
                ],
                "parametric_lat": [
                    "bool",
                    "str"
                ]
            }
        },
        "test_numpy_geodetic_parametric": {
            "name": "test_numpy_geodetic_parametric",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_badvals": {
            "name": "test_badvals",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_look_spheroid.py": {
        "test_losint": {
            "name": "test_losint",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "az": [
                    "str",
                    "float"
                ],
                "tilt": [
                    "str"
                ],
                "lat": [
                    "str",
                    "float"
                ],
                "lon": [
                    "str",
                    "float"
                ],
                "sr": [
                    "str",
                    "float"
                ]
            }
        },
        "test_badval": {
            "name": "test_badval",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_array_los": {
            "name": "test_array_los",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_xarray_los": {
            "name": "test_xarray_los",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pandas_los": {
            "name": "test_pandas_los",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_ned.py": {
        "test_ecef_ned": {
            "name": "test_ecef_ned",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_enuv_nedv": {
            "name": "test_enuv_nedv",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ned_geodetic": {
            "name": "test_ned_geodetic",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_pyproj.py": {
        "test_compare_vicenty": {
            "name": "test_compare_vicenty",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_compare_geodetic": {
            "name": "test_compare_geodetic",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_rcurve.py": {
        "test_rcurve_parallel": {
            "name": "test_rcurve_parallel",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ],
                "curvature": [
                    "str",
                    "float"
                ]
            }
        },
        "test_numpy_parallel": {
            "name": "test_numpy_parallel",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rcurve_meridian": {
            "name": "test_rcurve_meridian",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ],
                "curvature": [
                    "str",
                    "float"
                ]
            }
        },
        "test_numpy_meridian": {
            "name": "test_numpy_meridian",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_numpy_transverse": {
            "name": "test_numpy_transverse",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_rhumb.py": {
        "test_meridian_dist": {
            "name": "test_meridian_dist",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ],
                "dist": [
                    "str",
                    "float"
                ]
            }
        },
        "test_meridian_arc": {
            "name": "test_meridian_arc",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "lat1": [
                    "str",
                    "float"
                ],
                "lat2": [
                    "str",
                    "float"
                ],
                "arclen": [
                    "str",
                    "float"
                ]
            }
        },
        "test_departure": {
            "name": "test_departure",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "lon1": [
                    "str",
                    "float"
                ],
                "lon2": [
                    "str",
                    "float"
                ],
                "lat": [
                    "str",
                    "float"
                ],
                "dist": [
                    "str",
                    "float"
                ]
            }
        },
        "test_loxodrome_inverse": {
            "name": "test_loxodrome_inverse",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "lat1": [
                    "str",
                    "float"
                ],
                "lon1": [
                    "str",
                    "float"
                ],
                "lat2": [
                    "str",
                    "float"
                ],
                "lon2": [
                    "str",
                    "float"
                ],
                "arclen": [
                    "str",
                    "float"
                ],
                "az": [
                    "str",
                    "float"
                ]
            }
        },
        "test_numpy_loxodrome_inverse": {
            "name": "test_numpy_loxodrome_inverse",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_numpy_2d_loxodrome_inverse": {
            "name": "test_numpy_2d_loxodrome_inverse",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_loxodrome_direct": {
            "name": "test_loxodrome_direct",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "lat0": [
                    "str",
                    "float"
                ],
                "lon0": [
                    "str",
                    "float"
                ],
                "rng": [
                    "str",
                    "float"
                ],
                "az": [
                    "str",
                    "float"
                ],
                "lat1": [
                    "str",
                    "float"
                ],
                "lon1": [
                    "str",
                    "float"
                ]
            }
        },
        "test_numpy_loxodrome_direct": {
            "name": "test_numpy_loxodrome_direct",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_meanm": {
            "name": "test_meanm",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ],
                "lon": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_rsphere.py": {
        "test_geocentric_radius": {
            "name": "test_geocentric_radius",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_geocentric_radius_badval": {
            "name": "test_geocentric_radius_badval",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "bad_lat": [
                    "int"
                ]
            }
        },
        "test_rsphere_eqavol": {
            "name": "test_rsphere_eqavol",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rsphere_authalic": {
            "name": "test_rsphere_authalic",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rsphere_rectifying": {
            "name": "test_rsphere_rectifying",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rsphere_biaxial": {
            "name": "test_rsphere_biaxial",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rsphere_triaxial": {
            "name": "test_rsphere_triaxial",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rsphere_euler": {
            "name": "test_rsphere_euler",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_numpy_rsphere_euler": {
            "name": "test_numpy_rsphere_euler",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_sidereal.py": {
        "test_sidereal": {
            "name": "test_sidereal",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "time": [
                    "str",
                    "tuple[]",
                    "float",
                    "int"
                ]
            }
        },
        "test_anglesep": {
            "name": "test_anglesep",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_anglesep_meeus": {
            "name": "test_anglesep_meeus",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_sky.py": {
        "test_azel2radec": {
            "name": "test_azel2radec",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_numpy_azel2radec": {
            "name": "test_numpy_azel2radec",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_radec2azel": {
            "name": "test_radec2azel",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_numpy_radec2azel": {
            "name": "test_numpy_radec2azel",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_spherical.py": {
        "test_geodetic2spherical": {
            "name": "test_geodetic2spherical",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "lla": [
                    "str",
                    "float"
                ],
                "llr": [
                    "str",
                    "float"
                ]
            }
        },
        "test_spherical2geodetic": {
            "name": "test_spherical2geodetic",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "llr": [
                    "str",
                    "float"
                ],
                "lla": [
                    "str",
                    "float"
                ]
            }
        },
        "test_geodetic2spherical_list": {
            "name": "test_geodetic2spherical_list",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "lla": [],
                "llr": []
            }
        },
        "test_spherical2geodetic_list": {
            "name": "test_spherical2geodetic_list",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "llr": [],
                "lla": []
            }
        },
        "test_geodetic2spherical_array": {
            "name": "test_geodetic2spherical_array",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "lla": [
                    "str",
                    "float"
                ],
                "llr": [
                    "str",
                    "float"
                ]
            }
        },
        "test_spherical2geodetic_array": {
            "name": "test_spherical2geodetic_array",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "llr": [
                    "str",
                    "float"
                ],
                "lla": [
                    "str",
                    "float"
                ]
            }
        },
        "asarray": {
            "name": "asarray",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_time.py": {
        "test_juliantime": {
            "name": "test_juliantime",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_types": {
            "name": "test_types",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_datetime64": {
            "name": "test_datetime64",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_xarray_time": {
            "name": "test_xarray_time",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pandas_time": {
            "name": "test_pandas_time",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_vincenty.py": {
        "test_track2": {
            "name": "test_track2",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_vincenty_dist.py": {
        "test_unit": {
            "name": "test_unit",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ],
                "lon": [
                    "str",
                    "float"
                ],
                "lat1": [
                    "str",
                    "float"
                ],
                "lon1": [
                    "str",
                    "float"
                ],
                "srange": [
                    "str",
                    "float"
                ],
                "az": [
                    "str",
                    "float"
                ]
            }
        },
        "test_vector": {
            "name": "test_vector",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_identity": {
            "name": "test_identity",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ],
                "lon": [
                    "str",
                    "float"
                ],
                "slantrange": [
                    "str",
                    "float"
                ],
                "az": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "pymap3d-main/src/pymap3d/tests/test_vincenty_vreckon.py": {
        "test_unit": {
            "name": "test_unit",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "lat": [
                    "str",
                    "float"
                ],
                "lon": [
                    "str",
                    "float"
                ],
                "srange": [
                    "str",
                    "float"
                ],
                "az": [
                    "str",
                    "float"
                ],
                "lato": [
                    "str",
                    "float"
                ],
                "lono": [
                    "str",
                    "float"
                ]
            }
        },
        "test_az_vector": {
            "name": "test_az_vector",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_both_vector": {
            "name": "test_both_vector",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pymap3d-main/src/pymap3d/tests/__init__.py": {},
    "pymap3d-main/src/pymap3d/vdist/__init__.py": {},
    "pymap3d-main/src/pymap3d/vdist/__main__.py": {},
    "pymap3d-main/src/pymap3d/vreckon/__init__.py": {},
    "pymap3d-main/src/pymap3d/vreckon/__main__.py": {}
}
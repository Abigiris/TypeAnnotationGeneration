{
    "pytest-timekeeper-master/setup.py": {
        "read": {
            "name": "read",
            "location": 10,
            "return": [],
            "arguments": {
                "fname": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/hookspec.py": {
        "pytest_timekeeper_set_writer": {
            "name": "pytest_timekeeper_set_writer",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pytest_timekeeper_add_writer": {
            "name": "pytest_timekeeper_add_writer",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pytest_timekeeper_set_monitor": {
            "name": "pytest_timekeeper_set_monitor",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/keeper.py": {
        "TimeKeeper.__post_init__": {
            "name": "__post_init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.get_timer": {
            "name": "get_timer",
            "location": 26,
            "return": [
                "Timer"
            ],
            "arguments": {
                "self": [],
                "test_name": [
                    "dict[str, str]",
                    "str",
                    "bool",
                    "list[str]"
                ],
                "test_version": [
                    "dict[str, str]",
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "TimeKeeper.run_calibration": {
            "name": "run_calibration",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "save": [
                    "bool"
                ]
            }
        },
        "TimeKeeper.calibrate": {
            "name": "calibrate",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.start_monitor": {
            "name": "start_monitor",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.stop_monitor": {
            "name": "stop_monitor",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.monitor": {
            "name": "monitor",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.monitored": {
            "name": "monitored",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.config": {
            "name": "config",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.sys_info": {
            "name": "sys_info",
            "location": 66,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.sys_state_history": {
            "name": "sys_state_history",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.sys_dict": {
            "name": "sys_dict",
            "location": 82,
            "return": [
                "dict[typing.Text, dict[typing.Text, ]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.timers": {
            "name": "timers",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.timer_dict": {
            "name": "timer_dict",
            "location": 94,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.calibration_dict": {
            "name": "calibration_dict",
            "location": 101,
            "return": [
                "dict[typing.Text, dict[typing.Text, int]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.data": {
            "name": "data",
            "location": 113,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.finalize": {
            "name": "finalize",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.write_report": {
            "name": "write_report",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tr": [
                    "str",
                    "int"
                ]
            }
        },
        "TimeKeeper.report": {
            "name": "report",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeKeeper.report_line": {
            "name": "report_line",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "list[]",
                    "list[float]",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/monitor.py": {
        "get_sys_state": {
            "name": "get_sys_state",
            "location": 21,
            "return": [
                "dict[, ]",
                "dict[typing.Text, typing.Union[int,float]]"
            ],
            "arguments": {}
        },
        "get_sys_info": {
            "name": "get_sys_info",
            "location": 35,
            "return": [
                "dict[, ]",
                "dict[typing.Text, int]"
            ],
            "arguments": {}
        },
        "state_farmer": {
            "name": "state_farmer",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "q": [
                    "bool",
                    "str"
                ],
                "exit_receiever": [],
                "interval": [
                    "int"
                ]
            }
        },
        "Monitor.start": {
            "name": "start",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Monitor.stop": {
            "name": "stop",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Monitor.sys_info": {
            "name": "sys_info",
            "location": 94,
            "return": [
                "int",
                "str",
                "dict[str, list[typing.Any]]",
                "range"
            ],
            "arguments": {
                "self": []
            }
        },
        "Monitor.sys_state_history": {
            "name": "sys_state_history",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/plugin.py": {
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "pytest_sessionstart": {
            "name": "pytest_sessionstart",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "str",
                    "int",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "pytest_sessionfinish": {
            "name": "pytest_sessionfinish",
            "location": 19,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "session": [
                    "str",
                    "int"
                ],
                "exitstatus": [
                    "str",
                    "list[]"
                ]
            }
        },
        "pytest_addhooks": {
            "name": "pytest_addhooks",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "pluginmanager": [
                    "bool",
                    "str"
                ]
            }
        },
        "pytest_timekeeper_set_writer": {
            "name": "pytest_timekeeper_set_writer",
            "location": 32,
            "return": [
                "PytestReport"
            ],
            "arguments": {}
        },
        "pytest_timekeeper_set_monitor": {
            "name": "pytest_timekeeper_set_monitor",
            "location": 37,
            "return": [
                "Monitor"
            ],
            "arguments": {}
        },
        "pytest_terminal_summary": {
            "name": "pytest_terminal_summary",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "terminalreporter": [
                    "typing.Mapping",
                    "typing.Sequence[]",
                    "list[list[float]]"
                ]
            }
        },
        "timekeeper": {
            "name": "timekeeper",
            "location": 50,
            "return": [],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "timekeeper.get_timer": {
            "name": "get_timer",
            "location": 54,
            "return": [],
            "arguments": {}
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/timer.py": {
        "Timer.start": {
            "name": "start",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timer.stop": {
            "name": "stop",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timer.asdict": {
            "name": "asdict",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timer.runtime_ns": {
            "name": "runtime_ns",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timer.runtime": {
            "name": "runtime",
            "location": 31,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/utility.py": {
        "version": {
            "name": "version",
            "location": 1,
            "return": [],
            "arguments": {
                "version": [
                    "str",
                    "int"
                ]
            }
        },
        "version.set_version": {
            "name": "set_version",
            "location": 2,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/writers.py": {
        "default_json_file": {
            "name": "default_json_file",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "Writer.finalize": {
            "name": "finalize",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keeper": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Serialize.serialized": {
            "name": "serialized",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "keeper": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Serialize.finalize": {
            "name": "finalize",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keeper": [
                    "str",
                    "typing.IO"
                ]
            }
        },
        "PytestReport.finalize": {
            "name": "finalize",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keeper": [
                    "dict[, ]",
                    "int",
                    "str"
                ]
            }
        },
        "PostWriter.__post_init__": {
            "name": "__post_init__",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostWriter.post": {
            "name": "post",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "data": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        },
        "PostWriter.finalize": {
            "name": "finalize",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keeper": []
            }
        }
    },
    "pytest-timekeeper-master/pytest_timekeeper/__init__.py": {},
    "pytest-timekeeper-master/test/conftest.py": {
        "pytest_timekeeper_add_writer": {
            "name": "pytest_timekeeper_add_writer",
            "location": 6,
            "return": [
                "JsonWriter"
            ],
            "arguments": {}
        }
    },
    "pytest-timekeeper-master/test/test_example.py": {
        "test_timer": {
            "name": "test_timer",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "timekeeper": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "pytest-timekeeper-master/test/test_timekeeper.py": {
        "test_hello": {
            "name": "test_hello",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "testdir": []
            }
        }
    },
    "pytest-timekeeper-master/test/__init__.py": {}
}
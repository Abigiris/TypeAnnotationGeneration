{
    "python-sample-master/pysample/__init__.py": {},
    "python-sample-master/pysample/basic/exception.py": {},
    "python-sample-master/pysample/basic/hello_python.py": {},
    "python-sample-master/pysample/basic/variable.py": {},
    "python-sample-master/pysample/basic/__init__.py": {},
    "python-sample-master/pysample/class/abstraction.py": {
        "AbstractClass.method": {
            "name": "method",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImplClass.method": {
            "name": "method",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-sample-master/pysample/class/access.py": {
        "MyClass.public": {
            "name": "public",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyClass.__private": {
            "name": "__private",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-sample-master/pysample/class/basic.py": {
        "SampleClass.class_method": {
            "name": "class_method",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "arg": []
            }
        },
        "SampleClass.static_method": {
            "name": "static_method",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "arg": []
            }
        },
        "SampleClass.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ins_var1": [],
                "ins_var2": []
            }
        },
        "SampleClass.instance_method": {
            "name": "instance_method",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg": []
            }
        },
        "SampleClass.__str__": {
            "name": "__str__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-sample-master/pysample/class/inheritance.py": {
        "Parent.func1": {
            "name": "func1",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Child.func2": {
            "name": "func2",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-sample-master/pysample/class/__init__.py": {},
    "python-sample-master/pysample/controlflow/for.py": {},
    "python-sample-master/pysample/controlflow/if.py": {
        "func_if": {
            "name": "func_if",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "num": []
            }
        },
        "func_ternary_op": {
            "name": "func_ternary_op",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "num": []
            }
        }
    },
    "python-sample-master/pysample/controlflow/iterator.py": {
        "FibonacciIterator.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max": []
            }
        },
        "FibonacciIterator.__iter__": {
            "name": "__iter__",
            "location": 7,
            "return": [
                "FibonacciIterator"
            ],
            "arguments": {
                "self": []
            }
        },
        "FibonacciIterator.__next__": {
            "name": "__next__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-sample-master/pysample/controlflow/loop_control.py": {},
    "python-sample-master/pysample/controlflow/loop_else.py": {},
    "python-sample-master/pysample/controlflow/while.py": {},
    "python-sample-master/pysample/controlflow/__init__.py": {},
    "python-sample-master/pysample/function/arguments.py": {
        "func": {
            "name": "func",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "arg1": [
                    "str"
                ]
            }
        }
    },
    "python-sample-master/pysample/function/basic.py": {
        "func1": {
            "name": "func1",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "text": []
            }
        }
    },
    "python-sample-master/pysample/function/decorator.py": {
        "deco": {
            "name": "deco",
            "location": 2,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "test": {
            "name": "test",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [],
                "y": [],
                "z": [
                    "typing.Text"
                ]
            }
        },
        "arg_deco": {
            "name": "arg_deco",
            "location": 20,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "test2": {
            "name": "test2",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [],
                "y": [],
                "z": [
                    "typing.Text"
                ]
            }
        },
        "deco.wrapper": {
            "name": "wrapper",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "arg_deco._deco": {
            "name": "_deco",
            "location": 21,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "arg_deco._deco._decorated": {
            "name": "_decorated",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-sample-master/pysample/function/generator.py": {
        "gen_sample": {
            "name": "gen_sample",
            "location": 2,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "text": []
            }
        }
    },
    "python-sample-master/pysample/function/keywords.py": {
        "func": {
            "name": "func",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-sample-master/pysample/function/lambda.py": {
        "func": {
            "name": "func",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "filter": []
            }
        }
    },
    "python-sample-master/pysample/function/parameter.py": {
        "parameter": {
            "name": "parameter",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [],
                "y": [
                    "int"
                ],
                "z": [
                    "int"
                ]
            }
        }
    },
    "python-sample-master/pysample/function/return.py": {
        "single_return": {
            "name": "single_return",
            "location": 1,
            "return": [],
            "arguments": {
                "num": []
            }
        },
        "multi_return": {
            "name": "multi_return",
            "location": 9,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "num": []
            }
        }
    },
    "python-sample-master/pysample/function/__init__.py": {},
    "python-sample-master/pysample/library/json.py": {},
    "python-sample-master/pysample/library/__init__.py": {},
    "python-sample-master/pysample/library/logging_/basic.py": {},
    "python-sample-master/pysample/library/logging_/dictconfig.py": {},
    "python-sample-master/pysample/library/logging_/fileconfig.py": {},
    "python-sample-master/pysample/library/logging_/filter.py": {
        "SampleFilter.filter": {
            "name": "filter",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "python-sample-master/pysample/library/logging_/format.py": {},
    "python-sample-master/pysample/library/logging_/handler.py": {},
    "python-sample-master/pysample/library/logging_/logger.py": {},
    "python-sample-master/pysample/library/logging_/outfile.py": {},
    "python-sample-master/pysample/library/logging_/__init__.py": {},
    "python-sample-master/pysample/library/numpy_/basic.py": {},
    "python-sample-master/pysample/library/numpy_/matplotlib_pyplot.py": {},
    "python-sample-master/pysample/library/numpy_/__init__.py": {},
    "python-sample-master/pysample/library/typing_/alias.py": {
        "introduce_oneself": {
            "name": "introduce_oneself",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        }
    },
    "python-sample-master/pysample/library/typing_/callable.py": {
        "method": {
            "name": "method",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {
                "callable": [],
                "i": []
            }
        },
        "p_method": {
            "name": "p_method",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "i": []
            }
        }
    },
    "python-sample-master/pysample/library/typing_/generics.py": {
        "method_t": {
            "name": "method_t",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "arg": []
            }
        },
        "method_u": {
            "name": "method_u",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "arg": []
            }
        }
    },
    "python-sample-master/pysample/library/typing_/__init__.py": {},
    "python-sample-master/pysample/structure/dictionary.py": {},
    "python-sample-master/pysample/structure/list.py": {},
    "python-sample-master/pysample/structure/set.py": {},
    "python-sample-master/pysample/structure/tuple.py": {},
    "python-sample-master/pysample/structure/__init__.py": {},
    "python-sample-master/pysample/text/regex.py": {},
    "python-sample-master/pysample/text/string.py": {},
    "python-sample-master/pysample/text/__init__.py": {},
    "python-sample-master/pysample/unittest/basic.py": {
        "method": {
            "name": "method",
            "location": 4,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "arg1": [
                    "str",
                    "int"
                ],
                "arg2": [
                    "str",
                    "int"
                ]
            }
        },
        "Test.test_method_1": {
            "name": "test_method_1",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test.test_method_2": {
            "name": "test_method_2",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-sample-master/pysample/unittest/mock.py": {},
    "python-sample-master/pysample/unittest/patch.py": {
        "method": {
            "name": "method",
            "location": 4,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "test": {
            "name": "test",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "mock": []
            }
        }
    },
    "python-sample-master/pysample/unittest/__init__.py": {}
}
{
    "python-semantic-release-master/setup.py": {
        "_read_long_description": {
            "name": "_read_long_description",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/docs/conf.py": {
        "run_apidoc": {
            "name": "run_apidoc",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "_": [
                    "str",
                    "bool"
                ]
            }
        },
        "setup": {
            "name": "setup",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "dict[, ]"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/ci_checks.py": {
        "checker": {
            "name": "checker",
            "location": 9,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "travis": {
            "name": "travis",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "semaphore": {
            "name": "semaphore",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "frigg": {
            "name": "frigg",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "circle": {
            "name": "circle",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "gitlab": {
            "name": "gitlab",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "bitbucket": {
            "name": "bitbucket",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "jenkins": {
            "name": "jenkins",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "check": {
            "name": "check",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [
                    "typing.Text"
                ]
            }
        },
        "checker.func_wrapper": {
            "name": "func_wrapper",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/semantic_release/cli.py": {
        "common_options": {
            "name": "common_options",
            "location": 89,
            "return": [
                "int",
                "str",
                "list[str]",
                "dict[str, int]",
                "dict[, ]",
                "typing.Callable[T, None]"
            ],
            "arguments": {
                "func": [
                    "dict[, ]",
                    "typing.Callable[T, None]",
                    "str"
                ]
            }
        },
        "print_version": {
            "name": "print_version",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "version": {
            "name": "version",
            "location": 133,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "should_bump_version": {
            "name": "should_bump_version",
            "location": 179,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "bump_version": {
            "name": "bump_version",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "new_version": [
                    "bool",
                    "typing.Type",
                    "typing.Callable[, ]",
                    "str"
                ],
                "level_bump": [
                    "dict[str, typing.Any]",
                    "bool",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "changelog": {
            "name": "changelog",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "publish": {
            "name": "publish",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "retry": [
                    "bool"
                ],
                "noop": [
                    "bool"
                ],
                "prerelease": [
                    "bool"
                ]
            }
        },
        "filter_output_for_secrets": {
            "name": "filter_output_for_secrets",
            "location": 392,
            "return": [
                "str"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "entry": {
            "name": "entry",
            "location": 404,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 424,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cmd_publish": {
            "name": "cmd_publish",
            "location": 451,
            "return": [],
            "arguments": {}
        },
        "cmd_changelog": {
            "name": "cmd_changelog",
            "location": 465,
            "return": [],
            "arguments": {}
        },
        "cmd_version": {
            "name": "cmd_version",
            "location": 475,
            "return": [],
            "arguments": {}
        },
        "cmd_print_version": {
            "name": "cmd_print_version",
            "location": 490,
            "return": [],
            "arguments": {}
        }
    },
    "python-semantic-release-master/semantic_release/dist.py": {
        "should_build": {
            "name": "should_build",
            "location": 13,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "should_remove_dist": {
            "name": "should_remove_dist",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "build_dists": {
            "name": "build_dists",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "remove_dists": {
            "name": "remove_dists",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/errors.py": {},
    "python-semantic-release-master/semantic_release/helpers.py": {
        "format_arg": {
            "name": "format_arg",
            "location": 9,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "value": [
                    "str",
                    "None"
                ]
            }
        },
        "build_requests_session": {
            "name": "build_requests_session",
            "location": 16,
            "return": [
                "Session"
            ],
            "arguments": {
                "raise_for_status": [
                    "bool"
                ],
                "retry": [
                    "bool"
                ]
            }
        },
        "LoggedFunction.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "str",
                    "list[str]",
                    "tuple[tuple[typing.Union[str,...]]]"
                ]
            }
        },
        "LoggedFunction.__call__": {
            "name": "__call__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "LoggedFunction.__call__.logged_func": {
            "name": "logged_func",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/semantic_release/hvcs.py": {
        "_fix_mime_types": {
            "name": "_fix_mime_types",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_hvcs": {
            "name": "get_hvcs",
            "location": 756,
            "return": [],
            "arguments": {}
        },
        "check_build_status": {
            "name": "check_build_status",
            "location": 772,
            "return": [],
            "arguments": {
                "owner": [
                    "str",
                    "int"
                ],
                "repository": [
                    "str",
                    "int"
                ],
                "ref": [
                    "str",
                    "int"
                ]
            }
        },
        "post_changelog": {
            "name": "post_changelog",
            "location": 785,
            "return": [],
            "arguments": {
                "owner": [
                    "str",
                    "list[str]",
                    "int"
                ],
                "repository": [
                    "str",
                    "list[str]",
                    "int"
                ],
                "version": [
                    "str",
                    "list[str]",
                    "int"
                ],
                "changelog": [
                    "str",
                    "int"
                ]
            }
        },
        "upload_to_release": {
            "name": "upload_to_release",
            "location": 799,
            "return": [],
            "arguments": {
                "owner": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "bool",
                    "bytes"
                ],
                "repository": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "bool",
                    "bytes"
                ],
                "version": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "bool",
                    "bytes"
                ],
                "path": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "bool",
                    "bytes"
                ]
            }
        },
        "get_token": {
            "name": "get_token",
            "location": 814,
            "return": [],
            "arguments": {}
        },
        "get_domain": {
            "name": "get_domain",
            "location": 823,
            "return": [],
            "arguments": {}
        },
        "check_token": {
            "name": "check_token",
            "location": 832,
            "return": [],
            "arguments": {}
        },
        "Base.domain": {
            "name": "domain",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Base.api_url": {
            "name": "api_url",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Base.token": {
            "name": "token",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Base.check_build_status": {
            "name": "check_build_status",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "owner": [
                    "str",
                    "typing.Type",
                    "bool",
                    "bytes",
                    "None"
                ],
                "repo": [
                    "str",
                    "typing.Type",
                    "bool",
                    "bytes",
                    "None"
                ],
                "ref": [
                    "str",
                    "typing.Type",
                    "bool",
                    "bytes",
                    "None"
                ]
            }
        },
        "Base.post_release_changelog": {
            "name": "post_release_changelog",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[]",
                    "str"
                ],
                "owner": [
                    "bool",
                    "list[]",
                    "str"
                ],
                "repo": [
                    "bool",
                    "list[]",
                    "str"
                ],
                "version": [
                    "bool",
                    "list[]",
                    "str"
                ],
                "changelog": [
                    "bool",
                    "list[]",
                    "str"
                ]
            }
        },
        "Base.upload_dists": {
            "name": "upload_dists",
            "location": 49,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "list[int]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "owner": [
                    "list[int]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "repo": [
                    "list[int]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "version": [
                    "list[int]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "path": [
                    "list[int]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "TokenAuth.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "TokenAuth.__eq__": {
            "name": "__eq__",
            "location": 77,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "typing.Mapping",
                    "str"
                ]
            }
        },
        "TokenAuth.__ne__": {
            "name": "__ne__",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "list[str]",
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "TokenAuth.__call__": {
            "name": "__call__",
            "location": 87,
            "return": [
                "str",
                "int",
                "dict[, ]",
                "bytes"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "str",
                    "int",
                    "dict[, ]",
                    "bytes"
                ]
            }
        },
        "Github.domain": {
            "name": "domain",
            "location": 99,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Github.api_url": {
            "name": "api_url",
            "location": 113,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "Github.token": {
            "name": "token",
            "location": 130,
            "return": [],
            "arguments": {}
        },
        "Github.auth": {
            "name": "auth",
            "location": 138,
            "return": [
                "None",
                "TokenAuth"
            ],
            "arguments": {}
        },
        "Github.session": {
            "name": "session",
            "location": 149,
            "return": [
                "dict[, ]",
                "str",
                "None"
            ],
            "arguments": {
                "raise_for_status": [
                    "bool"
                ],
                "retry": [
                    "bool"
                ]
            }
        },
        "Github.check_build_status": {
            "name": "check_build_status",
            "location": 158,
            "return": [
                "bool"
            ],
            "arguments": {
                "owner": [
                    "str"
                ],
                "repo": [
                    "str"
                ],
                "ref": [
                    "str"
                ]
            }
        },
        "Github.create_release": {
            "name": "create_release",
            "location": 181,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "bytes",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "owner": [
                    "str",
                    "None",
                    "int"
                ],
                "repo": [
                    "str",
                    "None",
                    "int"
                ],
                "tag": [
                    "str",
                    "None",
                    "int"
                ],
                "changelog": [
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "Github.get_release": {
            "name": "get_release",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Any",
                    "None",
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "str",
                    "float",
                    "int"
                ],
                "owner": [
                    "str",
                    "list[int]"
                ],
                "repo": [
                    "str",
                    "list[int]"
                ],
                "tag": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "Github.edit_release": {
            "name": "edit_release",
            "location": 234,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None"
                ],
                "owner": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "repo": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "id": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "changelog": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "Github.post_release_changelog": {
            "name": "post_release_changelog",
            "location": 258,
            "return": [
                "str",
                "int",
                "list[str]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[]",
                    "str"
                ],
                "owner": [
                    "str",
                    "dict[, ]",
                    "tuple[typing.Union[str,str]]",
                    "None",
                    "list[str]"
                ],
                "repo": [
                    "str",
                    "dict[, ]",
                    "tuple[typing.Union[str,str]]",
                    "None",
                    "list[str]"
                ],
                "version": [
                    "str",
                    "None"
                ],
                "changelog": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "Github.get_asset_upload_url": {
            "name": "get_asset_upload_url",
            "location": 287,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[tuple[typing.Union[str,int]]]",
                    "str"
                ],
                "owner": [
                    "str",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "repo": [
                    "str",
                    "None",
                    "int",
                    "dict[, ]"
                ],
                "release_id": [
                    "str",
                    "None",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "Github.upload_asset": {
            "name": "upload_asset",
            "location": 312,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "owner": [
                    "str",
                    "int",
                    "list[int]",
                    "None",
                    "dict[, ]"
                ],
                "repo": [
                    "str",
                    "int",
                    "list[int]",
                    "None",
                    "dict[, ]"
                ],
                "release_id": [
                    "str",
                    "int",
                    "list[int]",
                    "None",
                    "dict[, ]"
                ],
                "file": [
                    "str",
                    "bytes"
                ],
                "label": [
                    "None",
                    "str",
                    "bytes"
                ]
            }
        },
        "Github.upload_dists": {
            "name": "upload_dists",
            "location": 356,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "list[int]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "owner": [
                    "str",
                    "dict[, ]"
                ],
                "repo": [
                    "str",
                    "dict[, ]"
                ],
                "version": [
                    "str",
                    "tuple[str]",
                    "int",
                    "typing.Any",
                    "None"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "Gitea.domain": {
            "name": "domain",
            "location": 393,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Gitea.api_url": {
            "name": "api_url",
            "location": 406,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "Gitea.token": {
            "name": "token",
            "location": 427,
            "return": [],
            "arguments": {}
        },
        "Gitea.auth": {
            "name": "auth",
            "location": 435,
            "return": [
                "None",
                "TokenAuth"
            ],
            "arguments": {}
        },
        "Gitea.session": {
            "name": "session",
            "location": 446,
            "return": [
                "dict[, ]",
                "str",
                "None"
            ],
            "arguments": {
                "raise_for_status": [
                    "bool"
                ],
                "retry": [
                    "bool"
                ]
            }
        },
        "Gitea.check_build_status": {
            "name": "check_build_status",
            "location": 455,
            "return": [
                "bool"
            ],
            "arguments": {
                "owner": [
                    "str"
                ],
                "repo": [
                    "str"
                ],
                "ref": [
                    "str"
                ]
            }
        },
        "Gitea.create_release": {
            "name": "create_release",
            "location": 482,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "bytes",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "owner": [
                    "str",
                    "None",
                    "int"
                ],
                "repo": [
                    "str",
                    "None",
                    "int"
                ],
                "tag": [
                    "str",
                    "None",
                    "int"
                ],
                "changelog": [
                    "str",
                    "None",
                    "int"
                ]
            }
        },
        "Gitea.get_release": {
            "name": "get_release",
            "location": 512,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Any",
                    "None",
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "str",
                    "float",
                    "int"
                ],
                "owner": [
                    "str",
                    "list[int]"
                ],
                "repo": [
                    "str",
                    "list[int]"
                ],
                "tag": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "Gitea.edit_release": {
            "name": "edit_release",
            "location": 535,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "None"
                ],
                "owner": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "repo": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "id": [
                    "str",
                    "int",
                    "dict[, ]"
                ],
                "changelog": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "Gitea.post_release_changelog": {
            "name": "post_release_changelog",
            "location": 559,
            "return": [
                "str",
                "int",
                "list[str]"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[]",
                    "str"
                ],
                "owner": [
                    "str",
                    "dict[, ]",
                    "tuple[typing.Union[str,str]]",
                    "None",
                    "list[str]"
                ],
                "repo": [
                    "str",
                    "dict[, ]",
                    "tuple[typing.Union[str,str]]",
                    "None",
                    "list[str]"
                ],
                "version": [
                    "str",
                    "None"
                ],
                "changelog": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        },
        "Gitea.upload_asset": {
            "name": "upload_asset",
            "location": 588,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "list[str]",
                    "None",
                    "typing.AnyStr"
                ],
                "owner": [
                    "str"
                ],
                "repo": [
                    "str"
                ],
                "release_id": [
                    "str"
                ],
                "file": [
                    "str"
                ],
                "label": [
                    "None",
                    "str",
                    "bool",
                    "list[str]",
                    "typing.AnyStr"
                ]
            }
        },
        "Gitea.upload_dists": {
            "name": "upload_dists",
            "location": 629,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "list[int]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "owner": [
                    "str",
                    "dict[, ]"
                ],
                "repo": [
                    "str",
                    "dict[, ]"
                ],
                "version": [
                    "str",
                    "tuple[str]",
                    "int",
                    "typing.Any",
                    "None"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "Gitlab.domain": {
            "name": "domain",
            "location": 661,
            "return": [
                "str",
                "dict[str, str]",
                "list[]",
                "list[str]"
            ],
            "arguments": {}
        },
        "Gitlab.api_url": {
            "name": "api_url",
            "location": 675,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "Gitlab.token": {
            "name": "token",
            "location": 687,
            "return": [],
            "arguments": {}
        },
        "Gitlab.check_build_status": {
            "name": "check_build_status",
            "location": 696,
            "return": [
                "bool"
            ],
            "arguments": {
                "owner": [
                    "str",
                    "dict[str, str]",
                    "list[str]"
                ],
                "repo": [
                    "str",
                    "dict[str, str]",
                    "list[str]"
                ],
                "ref": [
                    "str",
                    "dict[str, str]",
                    "list[str]"
                ]
            }
        },
        "Gitlab.post_release_changelog": {
            "name": "post_release_changelog",
            "location": 722,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "list[]",
                    "str"
                ],
                "owner": [
                    "str",
                    "bool",
                    "typing.Any",
                    "None"
                ],
                "repo": [
                    "str",
                    "bool",
                    "typing.Any",
                    "None"
                ],
                "version": [
                    "str"
                ],
                "changelog": [
                    "str",
                    "typing.Any",
                    "None",
                    "int",
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/pre_commit.py": {
        "should_run_pre_commit": {
            "name": "should_run_pre_commit",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "run_pre_commit": {
            "name": "run_pre_commit",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/semantic_release/repository.py": {
        "get_env_var": {
            "name": "get_env_var",
            "location": 23,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "ArtifactRepo.__post_init__": {
            "name": "__post_init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dist_path": [
                    "str"
                ]
            }
        },
        "ArtifactRepo._handle_credentials_init": {
            "name": "_handle_credentials_init",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtifactRepo._handle_glob_patterns": {
            "name": "_handle_glob_patterns",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dist_path": []
            }
        },
        "ArtifactRepo._handle_repository_config": {
            "name": "_handle_repository_config",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArtifactRepo._create_twine_settings": {
            "name": "_create_twine_settings",
            "location": 121,
            "return": [
                "str",
                "bool",
                "dict[str, typing.Union[typing.Any,typing.Any]]",
                "typing.Pattern"
            ],
            "arguments": {
                "self": [],
                "addon_kwargs": [
                    "str",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "ArtifactRepo.upload": {
            "name": "upload",
            "location": 132,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "noop": [
                    "list[str]",
                    "int",
                    "str",
                    "dict[str, object]"
                ],
                "verbose": [
                    "int",
                    "None",
                    "str"
                ],
                "skip_existing": [
                    "int",
                    "None",
                    "str"
                ]
            }
        },
        "ArtifactRepo.upload_enabled": {
            "name": "upload_enabled",
            "location": 173,
            "return": [],
            "arguments": {}
        }
    },
    "python-semantic-release-master/semantic_release/settings.py": {
        "_config": {
            "name": "_config",
            "location": 20,
            "return": [
                "UserDict"
            ],
            "arguments": {}
        },
        "_config_from_ini": {
            "name": "_config_from_ini",
            "location": 35,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "paths": [
                    "str"
                ]
            }
        },
        "_config_from_pyproject": {
            "name": "_config_from_pyproject",
            "location": 67,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "current_commit_parser": {
            "name": "current_commit_parser",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "current_changelog_components": {
            "name": "current_changelog_components",
            "location": 100,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "overload_configuration": {
            "name": "overload_configuration",
            "location": 124,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "overload_configuration.wrap": {
            "name": "wrap",
            "location": 130,
            "return": [],
            "arguments": {}
        }
    },
    "python-semantic-release-master/semantic_release/vcs_helpers.py": {
        "check_repo": {
            "name": "check_repo",
            "location": 28,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]",
                    "list[]",
                    "str"
                ]
            }
        },
        "get_formatted_tag": {
            "name": "get_formatted_tag",
            "location": 40,
            "return": [],
            "arguments": {
                "version": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "get_commit_log": {
            "name": "get_commit_log",
            "location": 47,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "from_rev": [
                    "None",
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "get_last_version": {
            "name": "get_last_version",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "pattern": [
                    "str"
                ],
                "skip_tags": [
                    "None",
                    "str",
                    "bytes"
                ]
            }
        },
        "get_repository_owner_and_name": {
            "name": "get_repository_owner_and_name",
            "location": 92,
            "return": [
                "tuple[]"
            ],
            "arguments": {}
        },
        "get_current_head_hash": {
            "name": "get_current_head_hash",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "commit_new_version": {
            "name": "commit_new_version",
            "location": 130,
            "return": [],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "update_changelog_file": {
            "name": "update_changelog_file",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "version": [
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "dict[, ]",
                    "list[]",
                    "typing.Callable[[], typing.Any]"
                ],
                "content_to_add": [
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "dict[, ]",
                    "list[]",
                    "typing.Callable[[], typing.Any]"
                ]
            }
        },
        "get_changed_files": {
            "name": "get_changed_files",
            "location": 201,
            "return": [
                "list[list[]]"
            ],
            "arguments": {
                "repo": [
                    "dict[str, P]"
                ]
            }
        },
        "update_additional_files": {
            "name": "update_additional_files",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tag_new_version": {
            "name": "tag_new_version",
            "location": 233,
            "return": [],
            "arguments": {
                "version": [
                    "str",
                    "bool",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "push_new_version": {
            "name": "push_new_version",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "auth_token": [
                    "str"
                ],
                "owner": [
                    "None",
                    "str",
                    "bytes",
                    "dict[, ]"
                ],
                "name": [
                    "None",
                    "str",
                    "bytes",
                    "dict[, ]"
                ],
                "branch": [
                    "typing.Text"
                ],
                "domain": [
                    "typing.Text"
                ]
            }
        },
        "checkout": {
            "name": "checkout",
            "location": 288,
            "return": [],
            "arguments": {
                "branch": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "check_repo.function_wrapper": {
            "name": "function_wrapper",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "get_last_version.version_finder": {
            "name": "version_finder",
            "location": 74,
            "return": [],
            "arguments": {
                "tag": []
            }
        }
    },
    "python-semantic-release-master/semantic_release/__init__.py": {
        "setup_hook": {
            "name": "setup_hook",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": []
            }
        }
    },
    "python-semantic-release-master/semantic_release/__main__.py": {},
    "python-semantic-release-master/semantic_release/changelog/changelog.py": {
        "add_pr_link": {
            "name": "add_pr_link",
            "location": 8,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "owner": [
                    "str"
                ],
                "repo_name": [
                    "str"
                ],
                "message": [
                    "str",
                    "int"
                ]
            }
        },
        "get_changelog_sections": {
            "name": "get_changelog_sections",
            "location": 30,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "changelog": [
                    "str",
                    "bool"
                ],
                "changelog_sections": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "get_hash_link": {
            "name": "get_hash_link",
            "location": 41,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "owner": [
                    "str"
                ],
                "repo_name": [
                    "str"
                ],
                "hash_": [
                    "str"
                ]
            }
        },
        "changelog_headers": {
            "name": "changelog_headers",
            "location": 52,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "owner": [
                    "str",
                    "typing.Callable[..., None]"
                ],
                "repo_name": [
                    "str",
                    "typing.Callable[..., None]"
                ],
                "changelog": [
                    "str",
                    "list[]",
                    "typing.Callable[, ]"
                ],
                "changelog_sections": [
                    "str",
                    "list[]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "changelog_table": {
            "name": "changelog_table",
            "location": 69,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "owner": [
                    "str",
                    "None",
                    "typing.Type"
                ],
                "repo_name": [
                    "str",
                    "None",
                    "typing.Type"
                ],
                "changelog": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "changelog_sections": [
                    "str",
                    "list[]",
                    "typing.Callable[..., T]",
                    "dict[, ]"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/changelog/compare.py": {
        "get_github_compare_url": {
            "name": "get_github_compare_url",
            "location": 7,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "from_version": [
                    "str",
                    "bool",
                    "typing.Mapping",
                    "None"
                ],
                "to_version": [
                    "str",
                    "bool",
                    "typing.Mapping",
                    "None"
                ]
            }
        },
        "compare_url": {
            "name": "compare_url",
            "location": 22,
            "return": [
                "typing.Text",
                "None"
            ],
            "arguments": {
                "version": [
                    "str",
                    "dict[, ]"
                ],
                "previous_version": [
                    "None",
                    "str",
                    "dict[str, str]"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/changelog/__init__.py": {
        "markdown_changelog": {
            "name": "markdown_changelog",
            "location": 13,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "owner": [
                    "str",
                    "typing.Callable[str, str]",
                    "typing.Mapping",
                    "None"
                ],
                "repo_name": [
                    "str",
                    "typing.Callable[str, str]",
                    "typing.Mapping",
                    "None"
                ],
                "version": [
                    "str",
                    "None",
                    "typing.Callable[str, str]"
                ],
                "changelog": [
                    "str",
                    "typing.Callable[str, str]",
                    "typing.Mapping",
                    "None"
                ],
                "header": [
                    "bool"
                ],
                "previous_version": [
                    "None",
                    "str",
                    "typing.Callable[str, str]",
                    "typing.Mapping"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/history/logs.py": {
        "evaluate_version_bump": {
            "name": "evaluate_version_bump",
            "location": 22,
            "return": [
                "None",
                "str",
                "dict[str, typing.Any]",
                "typing.Text"
            ],
            "arguments": {
                "current_version": [
                    "str"
                ],
                "force": [
                    "None",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "generate_changelog": {
            "name": "generate_changelog",
            "location": 84,
            "return": [],
            "arguments": {
                "from_version": [
                    "str",
                    "None",
                    "int"
                ],
                "to_version": [
                    "None",
                    "str",
                    "int"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/history/parser_angular.py": {
        "parse_commit_message": {
            "name": "parse_commit_message",
            "location": 28,
            "return": [
                "ParsedCommit"
            ],
            "arguments": {
                "message": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/history/parser_emoji.py": {
        "parse_commit_message": {
            "name": "parse_commit_message",
            "location": 14,
            "return": [
                "ParsedCommit"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/history/parser_helpers.py": {
        "parse_paragraphs": {
            "name": "parse_paragraphs",
            "location": 15,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/history/parser_scipy.py": {
        "parse_commit_message": {
            "name": "parse_commit_message",
            "location": 113,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "ChangeType.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "section": []
            }
        },
        "ChangeType.make_breaking": {
            "name": "make_breaking",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Breaking.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "section": []
            }
        },
        "Compatible.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "section": []
            }
        },
        "Patch.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "section": []
            }
        },
        "Ignore.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "section": []
            }
        }
    },
    "python-semantic-release-master/semantic_release/history/parser_tag.py": {
        "parse_commit_message": {
            "name": "parse_commit_message",
            "location": 17,
            "return": [
                "ParsedCommit"
            ],
            "arguments": {
                "message": [
                    "dict[, ]"
                ]
            }
        }
    },
    "python-semantic-release-master/semantic_release/history/__init__.py": {
        "get_current_version_by_tag": {
            "name": "get_current_version_by_tag",
            "location": 184,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {}
        },
        "get_current_release_version_by_tag": {
            "name": "get_current_release_version_by_tag",
            "location": 199,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {}
        },
        "get_current_version_by_config_file": {
            "name": "get_current_version_by_config_file",
            "location": 214,
            "return": [],
            "arguments": {}
        },
        "get_current_version": {
            "name": "get_current_version",
            "location": 238,
            "return": [],
            "arguments": {}
        },
        "get_current_release_version": {
            "name": "get_current_release_version",
            "location": 251,
            "return": [],
            "arguments": {}
        },
        "get_new_version": {
            "name": "get_new_version",
            "location": 266,
            "return": [
                "str"
            ],
            "arguments": {
                "current_version": [
                    "dict[int, str]",
                    "typing.Callable[[], typing.Any]",
                    "bool",
                    "str",
                    "None"
                ],
                "current_release_version": [
                    "str",
                    "dict[str, int]",
                    "int",
                    "None"
                ],
                "level_bump": [
                    "bool",
                    "None",
                    "dict[str, dict[str, typing.Any]]",
                    "str",
                    "list[str]",
                    "tuple[typing.Union[str,...]]",
                    "typing.Any"
                ],
                "prerelease": [
                    "bool"
                ]
            }
        },
        "get_previous_version": {
            "name": "get_previous_version",
            "location": 329,
            "return": [],
            "arguments": {
                "version": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "get_previous_release_version": {
            "name": "get_previous_release_version",
            "location": 356,
            "return": [],
            "arguments": {
                "version": [
                    "str",
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "get_current_release_version_by_commits": {
            "name": "get_current_release_version_by_commits",
            "location": 383,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "set_new_version": {
            "name": "set_new_version",
            "location": 401,
            "return": [
                "bool"
            ],
            "arguments": {
                "new_version": [
                    "str",
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "load_version_declarations": {
            "name": "load_version_declarations",
            "location": 415,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "VersionDeclaration.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "None"
                ]
            }
        },
        "VersionDeclaration.from_toml": {
            "name": "from_toml",
            "location": 41,
            "return": [
                "TomlVersionDeclaration"
            ],
            "arguments": {
                "config_str": [
                    "str",
                    "bytes"
                ]
            }
        },
        "VersionDeclaration.from_variable": {
            "name": "from_variable",
            "location": 50,
            "return": [
                "PatternVersionDeclaration"
            ],
            "arguments": {
                "config_str": [
                    "str"
                ]
            }
        },
        "VersionDeclaration.from_pattern": {
            "name": "from_pattern",
            "location": 60,
            "return": [
                "PatternVersionDeclaration"
            ],
            "arguments": {
                "config_str": [
                    "str"
                ]
            }
        },
        "VersionDeclaration.parse": {
            "name": "parse",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VersionDeclaration.replace": {
            "name": "replace",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_version": [
                    "str",
                    "list[str]",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TomlVersionDeclaration.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "None",
                    "bool"
                ],
                "key": [
                    "str",
                    "dict[, ]",
                    "dict[str, P]",
                    "typing.Callable[A, typing.Any]"
                ]
            }
        },
        "TomlVersionDeclaration._read": {
            "name": "_read",
            "location": 98,
            "return": [
                "Dotty"
            ],
            "arguments": {
                "self": []
            }
        },
        "TomlVersionDeclaration.parse": {
            "name": "parse",
            "location": 102,
            "return": [
                "set[str]",
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TomlVersionDeclaration.replace": {
            "name": "replace",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_version": [
                    "int",
                    "typing.Iterable[int]"
                ]
            }
        },
        "PatternVersionDeclaration.__init__": {
            "name": "__init__",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "None"
                ],
                "pattern": [
                    "bool",
                    "list[str]",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "PatternVersionDeclaration.parse": {
            "name": "parse",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PatternVersionDeclaration.replace": {
            "name": "replace",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_version": [
                    "str",
                    "list[str]",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "load_version_declarations.iter_fields": {
            "name": "iter_fields",
            "location": 421,
            "return": [
                "None",
                "typing.Generator[list[]]",
                "typing.Generator[]"
            ],
            "arguments": {
                "x": []
            }
        },
        "PatternVersionDeclaration.replace.swap_version": {
            "name": "swap_version",
            "location": 164,
            "return": [],
            "arguments": {
                "m": []
            }
        }
    },
    "python-semantic-release-master/tests/test_changelog.py": {
        "test_markdown_changelog": {
            "name": "test_markdown_changelog",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_markdown_changelog_gitlab": {
            "name": "test_markdown_changelog_gitlab",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_changelog_table": {
            "name": "test_changelog_table",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_not_output_heading": {
            "name": "test_should_not_output_heading",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_output_heading": {
            "name": "test_should_output_heading",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_changelog_sections": {
            "name": "test_get_changelog_sections",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_pr_link": {
            "name": "test_add_pr_link",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str"
                ],
                "hvcs": [
                    "str"
                ],
                "expected_output": [
                    "str"
                ]
            }
        },
        "test_github_compare_url": {
            "name": "test_github_compare_url",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_compare_url": {
            "name": "test_compare_url",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/tests/test_cli.py": {
        "runner": {
            "name": "runner",
            "location": 14,
            "return": [
                "CliRunner"
            ],
            "arguments": {}
        },
        "test_main_should_call_correct_function": {
            "name": "test_main_should_call_correct_function",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_version_by_commit_should_call_correct_functions": {
            "name": "test_version_by_commit_should_call_correct_functions",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_tag_with_commit_version_number_should_call_correct_functions": {
            "name": "test_version_by_tag_with_commit_version_number_should_call_correct_functions",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_tag_only_with_commit_version_number_should_call_correct_functions": {
            "name": "test_version_by_tag_only_with_commit_version_number_should_call_correct_functions",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_tag_should_call_correct_functions": {
            "name": "test_version_by_tag_should_call_correct_functions",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_tag_only_should_call_correct_functions": {
            "name": "test_version_by_tag_only_should_call_correct_functions",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_commit_without_tag_should_call_correct_functions": {
            "name": "test_version_by_commit_without_tag_should_call_correct_functions",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_force_major": {
            "name": "test_force_major",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_force_minor": {
            "name": "test_force_minor",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_force_patch": {
            "name": "test_force_patch",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_retry": {
            "name": "test_retry",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_noop_mode": {
            "name": "test_noop_mode",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_cli_print_version": {
            "name": "test_cli_print_version",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_cli_print_version_force_major": {
            "name": "test_cli_print_version_force_major",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_cli_print_version_prerelease": {
            "name": "test_cli_print_version_prerelease",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_cli_print_version_current": {
            "name": "test_cli_print_version_current",
            "location": 353,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_cli_print_version_next": {
            "name": "test_cli_print_version_next",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_print_version_no_change": {
            "name": "test_print_version_no_change",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [],
                "capsys": []
            }
        },
        "test_print_version_change": {
            "name": "test_print_version_change",
            "location": 408,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [],
                "capsys": []
            }
        },
        "test_print_version_change_prerelease": {
            "name": "test_print_version_change_prerelease",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [],
                "capsys": []
            }
        },
        "test_print_version_change_prerelease_bump": {
            "name": "test_print_version_change_prerelease_bump",
            "location": 450,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [],
                "capsys": []
            }
        },
        "test_print_version_force_major": {
            "name": "test_print_version_force_major",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [],
                "capsys": []
            }
        },
        "test_print_version_force_major_prerelease": {
            "name": "test_print_version_force_major_prerelease",
            "location": 492,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [],
                "capsys": []
            }
        },
        "test_version_no_change": {
            "name": "test_version_no_change",
            "location": 513,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": []
            }
        },
        "test_version_check_build_status_fails": {
            "name": "test_version_check_build_status_fails",
            "location": 541,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_commit_check_build_status_succeeds": {
            "name": "test_version_by_commit_check_build_status_succeeds",
            "location": 559,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_tag_check_build_status_succeeds": {
            "name": "test_version_by_tag_check_build_status_succeeds",
            "location": 577,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_by_tag_only_check_build_status_succeeds": {
            "name": "test_version_by_tag_only_check_build_status_succeeds",
            "location": 600,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_check_build_status_not_called_if_disabled": {
            "name": "test_version_check_build_status_not_called_if_disabled",
            "location": 623,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_retry_and_giterror": {
            "name": "test_version_retry_and_giterror",
            "location": 636,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_version_retry": {
            "name": "test_version_retry",
            "location": 646,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_not_run_pre_commit_by_default": {
            "name": "test_publish_should_not_run_pre_commit_by_default",
            "location": 670,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_not_run_pre_commit_with_empty_command": {
            "name": "test_publish_should_not_run_pre_commit_with_empty_command",
            "location": 699,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_run_pre_commit_if_provided": {
            "name": "test_publish_should_run_pre_commit_if_provided",
            "location": 729,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_not_upload_to_pypi_if_option_is_false": {
            "name": "test_publish_should_not_upload_to_pypi_if_option_is_false",
            "location": 759,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_not_upload_to_repository_if_option_is_false": {
            "name": "test_publish_should_not_upload_to_repository_if_option_is_false",
            "location": 788,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_do_nothing_when_not_should_bump_version": {
            "name": "test_publish_should_do_nothing_when_not_should_bump_version",
            "location": 817,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_call_functions": {
            "name": "test_publish_should_call_functions",
            "location": 841,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_should_skip_build_when_command_is_empty": {
            "name": "test_publish_should_skip_build_when_command_is_empty",
            "location": 887,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_retry_version_fail": {
            "name": "test_publish_retry_version_fail",
            "location": 940,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_bad_token": {
            "name": "test_publish_bad_token",
            "location": 979,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_publish_giterror_when_posting": {
            "name": "test_publish_giterror_when_posting",
            "location": 1044,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_changelog_should_call_functions": {
            "name": "test_changelog_should_call_functions",
            "location": 1140,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_overload_by_cli": {
            "name": "test_overload_by_cli",
            "location": 1155,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "runner": [
                    "str",
                    "float"
                ]
            }
        },
        "test_changelog_noop": {
            "name": "test_changelog_noop",
            "location": 1174,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_changelog_post_unreleased_no_token": {
            "name": "test_changelog_post_unreleased_no_token",
            "location": 1199,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_changelog_post_complete": {
            "name": "test_changelog_post_complete",
            "location": 1228,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_changelog_raises_exception_when_no_current_version": {
            "name": "test_changelog_raises_exception_when_no_current_version",
            "location": 1262,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        }
    },
    "python-semantic-release-master/tests/test_dist.py": {
        "test_build_command": {
            "name": "test_build_command",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "commands": [
                    "typing.Mapping",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_should_build": {
            "name": "test_should_build",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "dict[str, typing.Any]",
                    "dict[str, str]"
                ],
                "expected": [
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "dict[, ]"
                ],
                "mocker": []
            }
        },
        "test_should_remove_dist": {
            "name": "test_should_remove_dist",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "expected": [
                    "str",
                    "dict[, ]",
                    "typing.Mapping"
                ],
                "mocker": []
            }
        }
    },
    "python-semantic-release-master/tests/test_hvcs.py": {
        "test_get_hvcs_should_return_github": {
            "name": "test_get_hvcs_should_return_github",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_hvcs_should_return_gitlab": {
            "name": "test_get_hvcs_should_return_gitlab",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_hvcs_should_return_gitea": {
            "name": "test_get_hvcs_should_return_gitea",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_hvcs_should_raise_improper_config": {
            "name": "test_get_hvcs_should_raise_improper_config",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_build_status": {
            "name": "test_check_build_status",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_github_helper": []
            }
        },
        "test_check_token_should_return_true": {
            "name": "test_check_token_should_return_true",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_token_should_return_false": {
            "name": "test_check_token_should_return_false",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_custom_github_token_var_should_return_true": {
            "name": "test_check_custom_github_token_var_should_return_true",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_custom_github_token_should_return_false": {
            "name": "test_check_custom_github_token_should_return_false",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_custom_gitea_token_should_return_false": {
            "name": "test_check_custom_gitea_token_should_return_false",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_custom_gitlab_token_var_should_return_true": {
            "name": "test_check_custom_gitlab_token_var_should_return_true",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_check_custom_gitlab_token_should_return_false": {
            "name": "test_check_custom_gitlab_token_should_return_false",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_domain_should_have_expected_domain": {
            "name": "test_get_domain_should_have_expected_domain",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "hvcs": [
                    "typing.Callable[, ]"
                ],
                "hvcs_domain": [
                    "typing.Callable[, ]"
                ],
                "expected_domain": [
                    "dict[, ]",
                    "typing.Callable[, ]",
                    "str"
                ],
                "expected_api_url": [
                    "int",
                    "str",
                    "None"
                ],
                "ci_server_host": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "hvcs_api_domain": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_ghe_domain_should_be_retrieved_from_env": {
            "name": "test_ghe_domain_should_be_retrieved_from_env",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_token": {
            "name": "test_get_token",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_gitea_token": {
            "name": "test_gitea_token",
            "location": 826,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_github_token": {
            "name": "test_github_token",
            "location": 831,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "GithubCheckBuildStatusTests.get_response": {
            "name": "get_response",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "status": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "GithubCheckBuildStatusTests.test_should_return_false_if_pending": {
            "name": "test_should_return_false_if_pending",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GithubCheckBuildStatusTests.test_should_return_false_if_failure": {
            "name": "test_should_return_false_if_failure",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GithubCheckBuildStatusTests.test_should_return_true_if_success": {
            "name": "test_should_return_true_if_success",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GiteaCheckBuildStatusTests.get_response": {
            "name": "get_response",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "status": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "GiteaCheckBuildStatusTests.test_should_return_false_if_pending": {
            "name": "test_should_return_false_if_pending",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GiteaCheckBuildStatusTests.test_should_return_false_if_failure": {
            "name": "test_should_return_false_if_failure",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GiteaCheckBuildStatusTests.test_should_return_true_if_success": {
            "name": "test_should_return_true_if_success",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitlabCheckBuildStatusTests.test_should_return_false_if_pending": {
            "name": "test_should_return_false_if_pending",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_auth": [],
                "mock_project": []
            }
        },
        "GitlabCheckBuildStatusTests.test_should_return_false_if_failure": {
            "name": "test_should_return_false_if_failure",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_auth": [],
                "mock_project": []
            }
        },
        "GitlabCheckBuildStatusTests.test_should_return_true_if_allow_failure": {
            "name": "test_should_return_true_if_allow_failure",
            "location": 351,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_auth": [],
                "mock_project": []
            }
        },
        "GitlabCheckBuildStatusTests.test_should_return_true_if_success": {
            "name": "test_should_return_true_if_success",
            "location": 355,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_auth": [],
                "mock_project": []
            }
        },
        "GithubReleaseTests.test_should_post_changelog_using_github_token": {
            "name": "test_should_post_changelog_using_github_token",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GithubReleaseTests.test_should_post_changelog_using_netrc": {
            "name": "test_should_post_changelog_using_netrc",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GithubReleaseTests.test_should_return_false_status_if_it_failed": {
            "name": "test_should_return_false_status_if_it_failed",
            "location": 453,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GithubReleaseTests.test_should_upload_asset": {
            "name": "test_should_upload_asset",
            "location": 481,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GithubReleaseTests.test_should_upload_asset_with_no_extension": {
            "name": "test_should_upload_asset_with_no_extension",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GithubReleaseTests.test_should_upload_dists": {
            "name": "test_should_upload_dists",
            "location": 561,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GiteaReleaseTests.test_should_post_changelog_using_gitea_token": {
            "name": "test_should_post_changelog_using_gitea_token",
            "location": 626,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GiteaReleaseTests.test_should_post_changelog_using_netrc": {
            "name": "test_should_post_changelog_using_netrc",
            "location": 659,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GiteaReleaseTests.test_should_return_false_status_if_it_failed": {
            "name": "test_should_return_false_status_if_it_failed",
            "location": 693,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GiteaReleaseTests.test_should_upload_asset": {
            "name": "test_should_upload_asset",
            "location": 719,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GiteaReleaseTests.test_should_upload_asset_with_no_extension": {
            "name": "test_should_upload_asset_with_no_extension",
            "location": 746,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GiteaReleaseTests.test_should_upload_dists": {
            "name": "test_should_upload_dists",
            "location": 777,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_token": []
            }
        },
        "GitlabReleaseTests.test_should_return_true_if_success": {
            "name": "test_should_return_true_if_success",
            "location": 814,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_auth": [],
                "mock_project": []
            }
        },
        "GitlabReleaseTests.test_should_return_false_if_bad_tag": {
            "name": "test_should_return_false_if_bad_tag",
            "location": 818,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_auth": [],
                "mock_project": []
            }
        },
        "GitlabReleaseTests.test_should_return_true_for_locked_tags": {
            "name": "test_should_return_true_for_locked_tags",
            "location": 822,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_auth": [],
                "mock_project": []
            }
        },
        "GithubReleaseTests.test_should_upload_asset.request_callback": {
            "name": "request_callback",
            "location": 498,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GithubReleaseTests.test_should_upload_asset_with_no_extension.request_callback": {
            "name": "request_callback",
            "location": 538,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GithubReleaseTests.test_should_upload_dists.request_callback": {
            "name": "request_callback",
            "location": 578,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GiteaReleaseTests.test_should_upload_asset.request_callback": {
            "name": "request_callback",
            "location": 727,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GiteaReleaseTests.test_should_upload_asset_with_no_extension.request_callback": {
            "name": "request_callback",
            "location": 756,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GiteaReleaseTests.test_should_upload_dists.request_callback": {
            "name": "request_callback",
            "location": 785,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GithubReleaseTests.test_should_post_changelog_using_github_token.request_callback": {
            "name": "request_callback",
            "location": 390,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GithubReleaseTests.test_should_post_changelog_using_netrc.request_callback": {
            "name": "request_callback",
            "location": 425,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GiteaReleaseTests.test_should_post_changelog_using_gitea_token.request_callback": {
            "name": "request_callback",
            "location": 634,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        },
        "GiteaReleaseTests.test_should_post_changelog_using_netrc.request_callback": {
            "name": "request_callback",
            "location": 667,
            "return": [
                "tuple[typing.Union[int,dict[, ]]]"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "python-semantic-release-master/tests/test_pre_commit.py": {
        "test_pre_commit_command": {
            "name": "test_pre_commit_command",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "commands": [
                    "bool"
                ]
            }
        },
        "test_should_run_pre_commit_command": {
            "name": "test_should_run_pre_commit_command",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "expected": [
                    "str",
                    "typing.Mapping",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "mocker": []
            }
        }
    },
    "python-semantic-release-master/tests/test_repository.py": {
        "test_upload_enabled": {
            "name": "test_upload_enabled",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_upload_enabled_with_upload_to_repository_false": {
            "name": "test_upload_enabled_with_upload_to_repository_false",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_upload_enabled_with_upload_to_pypi_false": {
            "name": "test_upload_enabled_with_upload_to_pypi_false",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_repo_with_pypi_credentials": {
            "name": "test_repo_with_pypi_credentials",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_repo_with_repository_credentials": {
            "name": "test_repo_with_repository_credentials",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_repo_with_repository_password_only": {
            "name": "test_repo_with_repository_password_only",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_repo_with_pypirc_file": {
            "name": "test_repo_with_pypirc_file",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_path_exists": []
            }
        },
        "test_repo_without_pypirc_file": {
            "name": "test_repo_without_pypirc_file",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_path_exists": []
            }
        },
        "test_repo_prefers_repository_over_pypi": {
            "name": "test_repo_prefers_repository_over_pypi",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_repo_with_custom_dist_path": {
            "name": "test_repo_with_custom_dist_path",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_handle_creds": []
            }
        },
        "test_repo_with_custom_dist_globs": {
            "name": "test_repo_with_custom_dist_globs",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_handle_creds": []
            }
        },
        "test_repo_with_custom_pypi_globs": {
            "name": "test_repo_with_custom_pypi_globs",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_handle_creds": []
            }
        },
        "test_repo_with_repo_name_testpypi": {
            "name": "test_repo_with_repo_name_testpypi",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_handle_creds": []
            }
        },
        "test_raises_error_when_repo_name_invalid": {
            "name": "test_raises_error_when_repo_name_invalid",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_handle_creds": [
                    "typing.Generator[typing.Union[None,typing.Any,None]]"
                ]
            }
        },
        "test_repo_with_custom_repo_url": {
            "name": "test_repo_with_custom_repo_url",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_handle_creds": [
                    "typing.Generator[typing.Union[None,typing.Any,None]]"
                ]
            }
        },
        "test_upload_with_custom_settings": {
            "name": "test_upload_with_custom_settings",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_upload": []
            }
        },
        "test_upload_with_noop": {
            "name": "test_upload_with_noop",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_upload": [],
                "mock_handle_creds": []
            }
        },
        "test_repo_with_token_only": {
            "name": "test_repo_with_token_only",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": []
            }
        },
        "test_repo_with_pypi_password_only": {
            "name": "test_repo_with_pypi_password_only",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "str"
                ]
            }
        }
    },
    "python-semantic-release-master/tests/test_settings.py": {
        "ConfigTests.test_config": {
            "name": "test_config",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigTests.test_defaults": {
            "name": "test_defaults",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_getcwd": []
            }
        },
        "ConfigTests.test_toml_override": {
            "name": "test_toml_override",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_getcwd": []
            }
        },
        "ConfigTests.test_no_raise_toml_error": {
            "name": "test_no_raise_toml_error",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_getcwd": [],
                "mock_warning": []
            }
        },
        "ConfigTests.test_toml_no_psr_section": {
            "name": "test_toml_no_psr_section",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_getcwd": []
            }
        },
        "ConfigTests.test_current_commit_parser_should_raise_error_if_parser_module_do_not_exist": {
            "name": "test_current_commit_parser_should_raise_error_if_parser_module_do_not_exist",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigTests.test_current_commit_parser_should_raise_error_if_parser_do_not_exist": {
            "name": "test_current_commit_parser_should_raise_error_if_parser_do_not_exist",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigTests.test_current_commit_parser_should_return_correct_parser": {
            "name": "test_current_commit_parser_should_return_correct_parser",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-semantic-release-master/tests/test_setup_py_hook.py": {
        "SetupPyHookTests.test_setup_hook_should_not_call_main_if_to_few_args": {
            "name": "test_setup_hook_should_not_call_main_if_to_few_args",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_main": []
            }
        },
        "SetupPyHookTests.test_setup_hook_should_call_main": {
            "name": "test_setup_hook_should_call_main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_main": []
            }
        }
    },
    "python-semantic-release-master/tests/test_vcs_helpers.py": {
        "mock_git": {
            "name": "mock_git",
            "location": 28,
            "return": [],
            "arguments": {
                "mocker": []
            }
        },
        "test_raises_error_when_invalid_repo": {
            "name": "test_raises_error_when_invalid_repo",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_first_commit_is_not_initial_commit": {
            "name": "test_first_commit_is_not_initial_commit",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_and_commit": {
            "name": "test_add_and_commit",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": [],
                "params": []
            }
        },
        "test_tag_new_version": {
            "name": "test_tag_new_version",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_push_new_version": {
            "name": "test_push_new_version",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": []
            }
        },
        "test_push_new_version_with_custom_branch": {
            "name": "test_push_new_version_with_custom_branch",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": []
            }
        },
        "test_push_using_token": {
            "name": "test_push_using_token",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": [
                    "str"
                ],
                "actor": []
            }
        },
        "test_push_ignoring_token": {
            "name": "test_push_ignoring_token",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_get_repository_owner_and_name": {
            "name": "test_get_repository_owner_and_name",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "origin_url": [
                    "bool",
                    "str"
                ],
                "expected_result": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "test_get_repository_owner_and_name_github": {
            "name": "test_get_repository_owner_and_name_github",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "origin_url": [
                    "bool",
                    "str"
                ],
                "expected_result": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "test_get_repository_owner_and_name_gitlab": {
            "name": "test_get_repository_owner_and_name_gitlab",
            "location": 320,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "origin_url": [
                    "bool",
                    "str"
                ],
                "expected_result": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "test_get_current_head_hash": {
            "name": "test_get_current_head_hash",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_push_should_not_print_auth_token": {
            "name": "test_push_should_not_print_auth_token",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": [
                    "bool"
                ]
            }
        },
        "test_checkout_should_checkout_correct_branch": {
            "name": "test_checkout_should_checkout_correct_branch",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": []
            }
        },
        "test_get_last_version": {
            "name": "test_get_last_version",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "pattern": [
                    "str"
                ],
                "skip_tags": [
                    "str"
                ],
                "expected_result": [
                    "str"
                ]
            }
        },
        "test_get_last_version_with_real_pattern": {
            "name": "test_get_last_version_with_real_pattern",
            "location": 414,
            "return": [
                "None"
            ],
            "arguments": {
                "pattern": [
                    "str"
                ],
                "skip_tags": [
                    "str"
                ],
                "expected_result": [
                    "str"
                ]
            }
        },
        "test_update_changelog_file_ok": {
            "name": "test_update_changelog_file_ok",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_update_changelog_file_missing_file": {
            "name": "test_update_changelog_file_missing_file",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_update_changelog_file_missing_placeholder": {
            "name": "test_update_changelog_file_missing_placeholder",
            "location": 506,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_update_additional_files_with_no_changes": {
            "name": "test_update_additional_files_with_no_changes",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [
                    "bool"
                ],
                "mocker": [],
                "include_additional_files": [
                    "bool",
                    "bytes"
                ]
            }
        },
        "test_update_additional_files_single_changed_file": {
            "name": "test_update_additional_files_single_changed_file",
            "location": 548,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_update_additional_files_one_in_config_two_changes": {
            "name": "test_update_additional_files_one_in_config_two_changes",
            "location": 564,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_update_additional_files_two_in_config_one_change": {
            "name": "test_update_additional_files_two_in_config_one_change",
            "location": 581,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_git": [],
                "mocker": []
            }
        },
        "test_get_last_version.FakeCommit.__init__": {
            "name": "__init__",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "com_date": []
            }
        },
        "test_get_last_version.FakeTagObject.__init__": {
            "name": "__init__",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_date": []
            }
        },
        "test_get_last_version.FakeTag.__init__": {
            "name": "__init__",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "sha": [],
                "date": [],
                "is_tag_object": []
            }
        },
        "test_get_last_version_with_real_pattern.FakeCommit.__init__": {
            "name": "__init__",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "com_date": []
            }
        },
        "test_get_last_version_with_real_pattern.FakeTagObject.__init__": {
            "name": "__init__",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_date": []
            }
        },
        "test_get_last_version_with_real_pattern.FakeTag.__init__": {
            "name": "__init__",
            "location": 425,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "sha": [],
                "date": [],
                "is_tag_object": []
            }
        }
    },
    "python-semantic-release-master/tests/__init__.py": {
        "reset_config": {
            "name": "reset_config",
            "location": 8,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "wrapped_config_get": {
            "name": "wrapped_config_get",
            "location": 22,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_bitbucket.py": {
        "test_bitbucket_should_pass_if_branch_is_master_and_no_pr": {
            "name": "test_bitbucket_should_pass_if_branch_is_master_and_no_pr",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_bitbucket_should_pass_if_branch_is_correct_and_no_pr": {
            "name": "test_bitbucket_should_pass_if_branch_is_correct_and_no_pr",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_bitbucket_should_raise_ci_verification_error_for_wrong_branch": {
            "name": "test_bitbucket_should_raise_ci_verification_error_for_wrong_branch",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_bitbucket_should_raise_ci_verification_error_for_pr": {
            "name": "test_bitbucket_should_raise_ci_verification_error_for_pr",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_checker.py": {
        "test_check_should_call_travis_with_correct_env_variable": {
            "name": "test_check_should_call_travis_with_correct_env_variable",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        },
        "test_check_should_call_semaphore_with_correct_env_variable": {
            "name": "test_check_should_call_semaphore_with_correct_env_variable",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        },
        "test_check_should_call_frigg_with_correct_env_variable": {
            "name": "test_check_should_call_frigg_with_correct_env_variable",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        },
        "test_check_should_call_circle_with_correct_env_variable": {
            "name": "test_check_should_call_circle_with_correct_env_variable",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        },
        "test_check_should_call_gitlab_with_correct_env_variable": {
            "name": "test_check_should_call_gitlab_with_correct_env_variable",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        },
        "test_check_should_call_bitbucket_with_correct_env_variable": {
            "name": "test_check_should_call_bitbucket_with_correct_env_variable",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_circle.py": {
        "test_circle_should_pass_if_branch_is_master_and_no_pr": {
            "name": "test_circle_should_pass_if_branch_is_master_and_no_pr",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_circle_should_pass_if_branch_is_correct_and_no_pr": {
            "name": "test_circle_should_pass_if_branch_is_correct_and_no_pr",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_circle_should_raise_ci_verification_error_for_wrong_branch": {
            "name": "test_circle_should_raise_ci_verification_error_for_wrong_branch",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_circle_should_raise_ci_verification_error_for_pr": {
            "name": "test_circle_should_raise_ci_verification_error_for_pr",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_frigg.py": {
        "test_frigg_should_pass_if_branch_is_master_and_no_pr": {
            "name": "test_frigg_should_pass_if_branch_is_master_and_no_pr",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_frigg_should_pass_if_branch_is_correct_and_no_pr": {
            "name": "test_frigg_should_pass_if_branch_is_correct_and_no_pr",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_frigg_should_raise_ci_verification_error_for_wrong_branch": {
            "name": "test_frigg_should_raise_ci_verification_error_for_wrong_branch",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_frigg_should_raise_ci_verification_error_for_pr": {
            "name": "test_frigg_should_raise_ci_verification_error_for_pr",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_gitlab.py": {
        "test_gitlab_should_pass_if_branch_is_master": {
            "name": "test_gitlab_should_pass_if_branch_is_master",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_gitlab_should_pass_if_branch_is_correct": {
            "name": "test_gitlab_should_pass_if_branch_is_correct",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_gitlab_should_raise_ci_verification_error_for_wrong_branch": {
            "name": "test_gitlab_should_raise_ci_verification_error_for_wrong_branch",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_jenkins.py": {
        "test_jenkins_should_pass_if_url_set_branch_master_no_pr": {
            "name": "test_jenkins_should_pass_if_url_set_branch_master_no_pr",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_jenkins_should_pass_if_url_set_if_branch_correct_no_pr": {
            "name": "test_jenkins_should_pass_if_url_set_if_branch_correct_no_pr",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_jenkins_should_raise_ci_verification_error_no_url": {
            "name": "test_jenkins_should_raise_ci_verification_error_no_url",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_jenkins_should_raise_ci_verification_error_for_pr": {
            "name": "test_jenkins_should_raise_ci_verification_error_for_pr",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_semaphore.py": {
        "test_semaphore_should_pass_if_branch_and_status_is_ok": {
            "name": "test_semaphore_should_pass_if_branch_and_status_is_ok",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_semaphore_should_raise_ci_verification_error_if_branch_is_wrong": {
            "name": "test_semaphore_should_raise_ci_verification_error_if_branch_is_wrong",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_semaphore_should_raise_ci_verification_error_if_status_is_failed": {
            "name": "test_semaphore_should_raise_ci_verification_error_if_status_is_failed",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_semaphore_should_raise_ci_verification_error_if_pull_request_number_is_none": {
            "name": "test_semaphore_should_raise_ci_verification_error_if_pull_request_number_is_none",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/test_travis.py": {
        "test_travis_should_pass_if_branch_is_master_and_no_pr": {
            "name": "test_travis_should_pass_if_branch_is_master_and_no_pr",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_travis_should_pass_if_branch_is_correct_and_no_pr": {
            "name": "test_travis_should_pass_if_branch_is_correct_and_no_pr",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_travis_should_raise_ci_verification_error_for_wrong_branch": {
            "name": "test_travis_should_raise_ci_verification_error_for_wrong_branch",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_travis_should_raise_ci_verification_error_for_pr": {
            "name": "test_travis_should_raise_ci_verification_error_for_pr",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        }
    },
    "python-semantic-release-master/tests/ci_checks/__init__.py": {},
    "python-semantic-release-master/tests/history/test_changelog.py": {
        "test_should_generate_necessary_sections": {
            "name": "test_should_generate_necessary_sections",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_include_hash_in_section_contents": {
            "name": "test_should_include_hash_in_section_contents",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_only_read_until_given_version": {
            "name": "test_should_only_read_until_given_version",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_get_right_breaking_description": {
            "name": "test_should_get_right_breaking_description",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "str",
                    "int",
                    "None"
                ],
                "expected_description": [
                    "str",
                    "typing.Iterable[typing.Any]",
                    "bool",
                    "typing.Callable[, ]",
                    "typing.Sequence[typing.Any]"
                ]
            }
        },
        "test_should_get_multiple_breaking_descriptions": {
            "name": "test_should_get_multiple_breaking_descriptions",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_scope_is_included_in_changelog": {
            "name": "test_scope_is_included_in_changelog",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "bool"
                ],
                "commit_type": [
                    "str",
                    "typing.Callable[[], str]",
                    "int"
                ],
                "expected": [
                    "str",
                    "typing.Callable[[], str]",
                    "int"
                ]
            }
        },
        "test_scope_is_omitted_with_empty_scope": {
            "name": "test_scope_is_omitted_with_empty_scope",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_scope_included_in_changelog_configurable": {
            "name": "test_scope_included_in_changelog_configurable",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "bool"
                ],
                "commit_type": [
                    "str"
                ]
            }
        },
        "test_message_capitalization_is_configurable": {
            "name": "test_message_capitalization_is_configurable",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "commit": [
                    "int",
                    "BaseException"
                ],
                "config_setting": [
                    "dict[, ]",
                    "bool"
                ],
                "expected_description": [
                    "dict[str, typing.Sequence[typing.Any]]"
                ]
            }
        }
    },
    "python-semantic-release-master/tests/history/test_version.py": {
        "tmp_cwd": {
            "name": "tmp_cwd",
            "location": 29,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "tmp_path": [
                    "str"
                ]
            }
        },
        "test_current_version_should_return_correct_version": {
            "name": "test_current_version_should_return_correct_version",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_current_release_version_should_return_correct_version": {
            "name": "test_current_release_version_should_return_correct_version",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_current_version_should_return_git_version": {
            "name": "test_current_version_should_return_git_version",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_last_version": [
                    "typing.Callable[, ]",
                    "typing.Generator[typing.Union[None,typing.Any,None]]"
                ]
            }
        },
        "test_current_release_version_should_return_git_version": {
            "name": "test_current_release_version_should_return_git_version",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_last_version": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_current_version_should_return_default_version": {
            "name": "test_current_version_should_return_default_version",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_last_version": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_current_version_should_run_with_tag_only": {
            "name": "test_current_version_should_run_with_tag_only",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_current_release_version_should_return_default_version": {
            "name": "test_current_release_version_should_return_default_version",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_last_version": [],
                "mock_current_release_version_by_commits": []
            }
        },
        "test_set_version": {
            "name": "test_set_version",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_cwd": []
            }
        },
        "test_load_version_patterns": {
            "name": "test_load_version_patterns",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_cwd": [],
                "monkeypatch": [],
                "params": []
            }
        },
        "TestGetPreviousVersion.test_should_return_correct_version": {
            "name": "test_should_return_correct_version",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetPreviousVersion.test_should_return_correct_version_with_v": {
            "name": "test_should_return_correct_version_with_v",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetPreviousVersion.test_should_return_correct_version_from_prerelease": {
            "name": "test_should_return_correct_version_from_prerelease",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetPreviousVersion.test_should_return_correct_version_skip_prerelease": {
            "name": "test_should_return_correct_version_skip_prerelease",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetCurrentReleaseVersionByCommits.test_should_return_correct_version": {
            "name": "test_should_return_correct_version",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetCurrentReleaseVersionByCommits.test_should_return_correct_version_with_v": {
            "name": "test_should_return_correct_version_with_v",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetCurrentReleaseVersionByCommits.test_should_return_correct_version_from_prerelease": {
            "name": "test_should_return_correct_version_from_prerelease",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetCurrentReleaseVersionByCommits.test_should_return_correct_version_from_large_prerelease": {
            "name": "test_should_return_correct_version_from_large_prerelease",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetCurrentReleaseVersionByCommits.test_should_return_correct_version_without_prerelease": {
            "name": "test_should_return_correct_version_without_prerelease",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetNewVersion.test_major_bump": {
            "name": "test_major_bump",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetNewVersion.test_minor_bump": {
            "name": "test_minor_bump",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetNewVersion.test_patch_bump": {
            "name": "test_patch_bump",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetNewVersion.test_none_bump": {
            "name": "test_none_bump",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetNewVersion.test_prerelease": {
            "name": "test_prerelease",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVersionPattern.test_from_variable": {
            "name": "test_from_variable",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "str": [
                    "str",
                    "dict[, ]",
                    "int",
                    "dict[str, pathlib.Path]"
                ],
                "path": [
                    "str",
                    "list[]"
                ],
                "pattern": [
                    "str"
                ]
            }
        },
        "TestVersionPattern.test_from_pattern": {
            "name": "test_from_pattern",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "str": [
                    "str",
                    "dict[typing.Any, str]",
                    "typing.Sequence[str]",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "list[dict[str, str]]"
                ],
                "path": [
                    "str"
                ],
                "pattern": [
                    "str"
                ]
            }
        },
        "TestVersionPattern.test_from_toml": {
            "name": "test_from_toml",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "str": [
                    "str",
                    "typing.Callable[str, str]",
                    "dict[str, str]",
                    "None"
                ],
                "path": [
                    "str"
                ],
                "key": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        },
        "TestVersionPattern.test_pattern_parse": {
            "name": "test_pattern_parse",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": [
                    "bool"
                ],
                "pattern": [
                    "str"
                ],
                "content": [
                    "str",
                    "typing.Mapping"
                ],
                "hits": [
                    "bytes"
                ]
            }
        },
        "TestVersionPattern.test_pattern_replace": {
            "name": "test_pattern_replace",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": [],
                "pattern": [
                    "str"
                ],
                "old_content": [
                    "str",
                    "dict[str, typing.Sequence[str]]"
                ],
                "new_content": []
            }
        },
        "TestVersionPattern.test_toml_parse": {
            "name": "test_toml_parse",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": [],
                "key": [
                    "str",
                    "list[str]"
                ],
                "content": [
                    "str"
                ],
                "hits": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "TestVersionPattern.test_toml_replace": {
            "name": "test_toml_replace",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": [],
                "key": [
                    "str",
                    "None"
                ],
                "old_content": [
                    "str"
                ],
                "new_content": [
                    "str",
                    "None",
                    "dict[str, str]"
                ]
            }
        }
    },
    "python-semantic-release-master/tests/history/test_version_bump.py": {
        "test_major": {
            "name": "test_major",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_minor": {
            "name": "test_minor",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_patch": {
            "name": "test_patch",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_nothing_if_no_tag": {
            "name": "test_nothing_if_no_tag",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_force": {
            "name": "test_force",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_not_skip_commits_mentioning_other_commits": {
            "name": "test_should_not_skip_commits_mentioning_other_commits",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_minor_with_patch_without_tag": {
            "name": "test_should_minor_with_patch_without_tag",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_patch_without_tagged_commits": {
            "name": "test_should_patch_without_tagged_commits",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_return_none_without_tagged_commits": {
            "name": "test_should_return_none_without_tagged_commits",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_return_none_without_commits": {
            "name": "test_should_return_none_without_commits",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_should_minor_without_major_on_zero": {
            "name": "test_should_minor_without_major_on_zero",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/tests/history/__init__.py": {},
    "python-semantic-release-master/tests/mocks/mock_gitlab.py": {
        "mock_gitlab": {
            "name": "mock_gitlab",
            "location": 110,
            "return": [],
            "arguments": {
                "status": [
                    "typing.Text"
                ]
            }
        },
        "_GitlabProject.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": [
                    "int",
                    "str"
                ]
            }
        },
        "mock_gitlab.wraps": {
            "name": "wraps",
            "location": 123,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "_GitlabProject._Commit.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "_GitlabProject._Tags.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_GitlabProject._Tags.get": {
            "name": "get",
            "location": 76,
            "return": [
                "_Tag"
            ],
            "arguments": {
                "self": [],
                "version": []
            }
        },
        "_GitlabProject._Releases.__init__": {
            "name": "__init__",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_GitlabProject._Releases.create": {
            "name": "create",
            "location": 96,
            "return": [
                "_Release"
            ],
            "arguments": {
                "self": [],
                "input": []
            }
        },
        "_GitlabProject._Commit._Statuses.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "_GitlabProject._Commit._Statuses.list": {
            "name": "list",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_GitlabProject._Tags._Tag.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locked": [
                    "bool"
                ]
            }
        },
        "_GitlabProject._Tags._Tag.set_release_description": {
            "name": "set_release_description",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "changelog": []
            }
        },
        "_GitlabProject._Releases._Release.__init__": {
            "name": "__init__",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locked": [
                    "bool"
                ]
            }
        }
    },
    "python-semantic-release-master/tests/mocks/__init__.py": {},
    "python-semantic-release-master/tests/parsers/conftest.py": {
        "scipy_type": {
            "name": "scipy_type",
            "location": 7,
            "return": [],
            "arguments": {
                "request": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "subject": {
            "name": "subject",
            "location": 22,
            "return": [],
            "arguments": {
                "request": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "body_parts": {
            "name": "body_parts",
            "location": 56,
            "return": [],
            "arguments": {
                "request": [
                    "str"
                ]
            }
        },
        "expected_response_scipy": {
            "name": "expected_response_scipy",
            "location": 61,
            "return": [
                "tuple[typing.Optional[tuple[typing.Union[str,None,float,int]]]]"
            ],
            "arguments": {
                "scipy_type": [
                    "str",
                    "typing.Type"
                ],
                "subject": [
                    "str",
                    "None",
                    "float",
                    "int"
                ],
                "body_parts": [
                    "str",
                    "None",
                    "float",
                    "int"
                ]
            }
        },
        "valid_scipy_commit": {
            "name": "valid_scipy_commit",
            "location": 69,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "scipy_type": [
                    "str",
                    "dict[, ]",
                    "list[str]"
                ],
                "subject": [
                    "str",
                    "dict[, ]",
                    "list[str]"
                ],
                "body_parts": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "python-semantic-release-master/tests/parsers/test_angular.py": {
        "test_parser_raises_unknown_message_style": {
            "name": "test_parser_raises_unknown_message_style",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_correct_bump_level": {
            "name": "test_parser_return_correct_bump_level",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_type_from_commit_message": {
            "name": "test_parser_return_type_from_commit_message",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_scope_from_commit_message": {
            "name": "test_parser_return_scope_from_commit_message",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_subject_from_commit_message": {
            "name": "test_parser_return_subject_from_commit_message",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_text_from_commit_message": {
            "name": "test_parser_return_text_from_commit_message",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_footer_from_commit_message": {
            "name": "test_parser_return_footer_from_commit_message",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_should_accept_message_without_scope": {
            "name": "test_parser_should_accept_message_without_scope",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_custom_default_level": {
            "name": "test_parser_custom_default_level",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_custom_allowed_types": {
            "name": "test_parser_custom_allowed_types",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_custom_minor_types": {
            "name": "test_parser_custom_minor_types",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_custom_patch_types": {
            "name": "test_parser_custom_patch_types",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/tests/parsers/test_emoji.py": {
        "test_major": {
            "name": "test_major",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_minor": {
            "name": "test_minor",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_patch": {
            "name": "test_patch",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_other_emoji": {
            "name": "test_other_emoji",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_multiple_emojis": {
            "name": "test_multiple_emojis",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_emoji_in_description": {
            "name": "test_emoji_in_description",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/tests/parsers/test_helpers.py": {
        "test_parse_paragraphs_with_no_content": {
            "name": "test_parse_paragraphs_with_no_content",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_paragraphs": {
            "name": "test_parse_paragraphs",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_paragraphs_multiline": {
            "name": "test_parse_paragraphs_multiline",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/tests/parsers/test_scipy.py": {
        "test_valid_scipy_commit": {
            "name": "test_valid_scipy_commit",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "valid_scipy_commit": [
                    "str",
                    "dict[str, typing.Any]",
                    "float"
                ],
                "expected_response_scipy": [
                    "str",
                    "bool",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "python-semantic-release-master/tests/parsers/test_tag.py": {
        "test_parser_raises_unknown_message_style": {
            "name": "test_parser_raises_unknown_message_style",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_major_bump_level": {
            "name": "test_parser_return_major_bump_level",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_minor_bump_level": {
            "name": "test_parser_return_minor_bump_level",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_patch_bump_level": {
            "name": "test_parser_return_patch_bump_level",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_type_breaking_from_commit_message": {
            "name": "test_parser_return_type_breaking_from_commit_message",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_type_feature_from_commit_message": {
            "name": "test_parser_return_type_feature_from_commit_message",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_type_fix_from_commit_message": {
            "name": "test_parser_return_type_fix_from_commit_message",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_subject_from_commit_message": {
            "name": "test_parser_return_subject_from_commit_message",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_text_from_commit_message": {
            "name": "test_parser_return_text_from_commit_message",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parser_return_footer_from_commit_message": {
            "name": "test_parser_return_footer_from_commit_message",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-semantic-release-master/tests/parsers/__init__.py": {}
}
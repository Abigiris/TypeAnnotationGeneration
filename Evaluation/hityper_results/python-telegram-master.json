{
    "python-telegram-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 7,
            "return": [],
            "arguments": {
                "package": [
                    "str"
                ]
            }
        }
    },
    "python-telegram-master/docs/source/conf.py": {},
    "python-telegram-master/examples/bot_login.py": {
        "bot_get_me": {
            "name": "bot_get_me",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "api_id": [
                    "int",
                    "str"
                ],
                "api_hash": [
                    "int",
                    "str"
                ],
                "token": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "python-telegram-master/examples/chat_stats.py": {
        "retreive_messages": {
            "name": "retreive_messages",
            "location": 18,
            "return": [],
            "arguments": {
                "telegram": [],
                "chat_id": [
                    "str",
                    "int"
                ],
                "receive_limit": [
                    "bool"
                ]
            }
        },
        "print_stats": {
            "name": "print_stats",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "stats_data": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "dict[str, raiden.utils.Any]"
                ],
                "most_common_count": [
                    "str",
                    "bool",
                    "dict[, ]",
                    "None"
                ]
            }
        }
    },
    "python-telegram-master/examples/clear_group_messages.py": {
        "confirm": {
            "name": "confirm",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "dump_my_msgs": {
            "name": "dump_my_msgs",
            "location": 16,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "tg": [],
                "chat_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "delete_messages": {
            "name": "delete_messages",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "chat_id": [
                    "str",
                    "int"
                ],
                "message_ids": []
            }
        }
    },
    "python-telegram-master/examples/echo_bot.py": {
        "new_message_handler": {
            "name": "new_message_handler",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "update": [
                    "list[dict[, ]]"
                ]
            }
        }
    },
    "python-telegram-master/examples/get_instant_view.py": {},
    "python-telegram-master/examples/get_me.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-telegram-master/examples/get_me_non_blocking_login.py": {},
    "python-telegram-master/examples/send_message.py": {},
    "python-telegram-master/examples/utils.py": {
        "setup_logging": {
            "name": "setup_logging",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "level": []
            }
        },
        "add_api_args": {
            "name": "add_api_args",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "add_proxy_args": {
            "name": "add_proxy_args",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "parse_proxy_type": {
            "name": "parse_proxy_type",
            "location": 28,
            "return": [
                "None",
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "python-telegram-master/telegram/client.py": {
        "Telegram.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api_id": [
                    "int",
                    "str",
                    "None"
                ],
                "api_hash": [
                    "list[]",
                    "list[int]",
                    "str",
                    "None",
                    "bool"
                ],
                "database_encryption_key": [
                    "bool",
                    "float",
                    "None",
                    "str",
                    "bytes"
                ],
                "phone": [
                    "None",
                    "str",
                    "bool",
                    "dict[, ]"
                ],
                "bot_token": [
                    "None",
                    "str"
                ],
                "library_path": [
                    "None",
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "worker": [
                    "None",
                    "float",
                    "bool",
                    "list[str]"
                ],
                "files_directory": [
                    "None",
                    "str",
                    "int"
                ],
                "use_test_dc": [
                    "bool"
                ],
                "use_message_database": [
                    "bool"
                ],
                "device_model": [
                    "typing.Text"
                ],
                "application_version": [],
                "system_version": [
                    "typing.Text"
                ],
                "system_language_code": [
                    "typing.Text"
                ],
                "login": [
                    "bool"
                ],
                "default_workers_queue_size": [
                    "int"
                ],
                "tdlib_verbosity": [
                    "int"
                ],
                "proxy_server": [
                    "typing.Text"
                ],
                "proxy_port": [
                    "int"
                ],
                "proxy_type": [
                    "None",
                    "bool",
                    "str",
                    "typing.Sequence[str]"
                ],
                "use_secret_chats": [
                    "bool"
                ]
            }
        },
        "Telegram.stop": {
            "name": "stop",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Telegram._close": {
            "name": "_close",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Telegram.send_message": {
            "name": "send_message",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int",
                    "str",
                    "list[str]"
                ],
                "text": [
                    "int",
                    "str",
                    "list[str]"
                ]
            }
        },
        "Telegram.get_chat": {
            "name": "get_chat",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int",
                    "str"
                ]
            }
        },
        "Telegram.get_me": {
            "name": "get_me",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram.get_user": {
            "name": "get_user",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Telegram.get_user_full_info": {
            "name": "get_user_full_info",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Telegram.get_chats": {
            "name": "get_chats",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "offset_order": [
                    "int"
                ],
                "offset_chat_id": [
                    "int"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "Telegram.get_chat_history": {
            "name": "get_chat_history",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int",
                    "str"
                ],
                "limit": [
                    "int"
                ],
                "from_message_id": [
                    "int"
                ],
                "offset": [
                    "int"
                ],
                "only_local": [
                    "bool"
                ]
            }
        },
        "Telegram.get_message": {
            "name": "get_message",
            "location": 292,
            "return": [],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int",
                    "str"
                ],
                "message_id": [
                    "int",
                    "str"
                ]
            }
        },
        "Telegram.delete_messages": {
            "name": "delete_messages",
            "location": 324,
            "return": [],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int",
                    "str"
                ],
                "message_ids": [
                    "int",
                    "str"
                ],
                "revoke": [
                    "bool"
                ]
            }
        },
        "Telegram.get_supergroup_full_info": {
            "name": "get_supergroup_full_info",
            "location": 343,
            "return": [],
            "arguments": {
                "self": [],
                "supergroup_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Telegram.create_basic_group_chat": {
            "name": "create_basic_group_chat",
            "location": 353,
            "return": [],
            "arguments": {
                "self": [],
                "basic_group_id": [
                    "str"
                ]
            }
        },
        "Telegram.get_web_page_instant_view": {
            "name": "get_web_page_instant_view",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "bool"
                ],
                "force_full": [
                    "bool"
                ]
            }
        },
        "Telegram.call_method": {
            "name": "call_method",
            "location": 376,
            "return": [],
            "arguments": {
                "self": [],
                "method_name": [
                    "str",
                    "int"
                ],
                "params": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "block": [
                    "bool"
                ]
            }
        },
        "Telegram._run": {
            "name": "_run",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Telegram._listen_to_td": {
            "name": "_listen_to_td",
            "location": 403,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Telegram._update_async_result": {
            "name": "_update_async_result",
            "location": 413,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "update": []
            }
        },
        "Telegram._run_handlers": {
            "name": "_run_handlers",
            "location": 438,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "update": [
                    "dict[, ]"
                ]
            }
        },
        "Telegram.remove_update_handler": {
            "name": "remove_update_handler",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler_type": [
                    "str",
                    "typing.Any",
                    "None",
                    "bytes"
                ],
                "func": [
                    "str",
                    "typing.Any",
                    "None",
                    "bytes"
                ]
            }
        },
        "Telegram.add_message_handler": {
            "name": "add_message_handler",
            "location": 454,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "dict[, ]",
                    "bytes",
                    "str"
                ]
            }
        },
        "Telegram.add_update_handler": {
            "name": "add_update_handler",
            "location": 457,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler_type": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "list[str]"
                ],
                "func": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "list[str]"
                ]
            }
        },
        "Telegram._send_data": {
            "name": "_send_data",
            "location": 461,
            "return": [
                "AsyncResult"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "result_id": [
                    "None",
                    "int",
                    "typing.Iterable[typing.Callable[, ]]"
                ],
                "block": [
                    "bool"
                ]
            }
        },
        "Telegram.idle": {
            "name": "idle",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stop_signals": [
                    "tuple[]"
                ]
            }
        },
        "Telegram._stop_signal_handler": {
            "name": "_stop_signal_handler",
            "location": 509,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "signum": [
                    "int",
                    "str"
                ],
                "frame": [
                    "None",
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Telegram.get_authorization_state": {
            "name": "get_authorization_state",
            "location": 513,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram._wait_authorization_result": {
            "name": "_wait_authorization_result",
            "location": 519,
            "return": [
                "AuthorizationState"
            ],
            "arguments": {
                "self": [],
                "result": []
            }
        },
        "Telegram.login": {
            "name": "login",
            "location": 535,
            "return": [
                "int",
                "None",
                "str",
                "typing.Type",
                "list[tuple[typing.Union[str,str,str,str]]]",
                "dict[str, int]",
                "list[str]",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "blocking": [
                    "bool"
                ]
            }
        },
        "Telegram._set_initial_params": {
            "name": "_set_initial_params",
            "location": 601,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram._send_encryption_key": {
            "name": "_send_encryption_key",
            "location": 627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram._send_phone_number_or_bot_token": {
            "name": "_send_phone_number_or_bot_token",
            "location": 642,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram._send_phone_number": {
            "name": "_send_phone_number",
            "location": 652,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram._send_add_proxy": {
            "name": "_send_add_proxy",
            "location": 663,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram._send_bot_token": {
            "name": "_send_bot_token",
            "location": 675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram._send_telegram_code": {
            "name": "_send_telegram_code",
            "location": 681,
            "return": [],
            "arguments": {
                "self": [],
                "code": [
                    "None",
                    "str",
                    "typing.Any",
                    "typing.Type"
                ]
            }
        },
        "Telegram.send_code": {
            "name": "send_code",
            "location": 690,
            "return": [
                "str",
                "dict[int, typing.Any]",
                "dict[str, dict[str, bool]]",
                "dict[str, str]",
                "typing.Type",
                "dict[int, str]"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "Telegram._send_password": {
            "name": "_send_password",
            "location": 708,
            "return": [],
            "arguments": {
                "self": [],
                "password": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "Telegram.send_password": {
            "name": "send_password",
            "location": 717,
            "return": [
                "str",
                "dict[int, typing.Any]",
                "dict[str, dict[str, bool]]",
                "dict[str, str]",
                "typing.Type",
                "dict[int, str]"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        },
        "Telegram._register_user": {
            "name": "_register_user",
            "location": 737,
            "return": [],
            "arguments": {
                "self": [],
                "first": [
                    "None",
                    "bytes",
                    "float",
                    "bool",
                    "typing.Sequence[typing.Any]",
                    "typing.Callable[..., typing.Any]"
                ],
                "last": [
                    "None",
                    "bytes",
                    "float",
                    "bool",
                    "typing.Sequence[typing.Any]",
                    "typing.Callable[..., typing.Any]"
                ]
            }
        },
        "Telegram.register_user": {
            "name": "register_user",
            "location": 754,
            "return": [
                "str",
                "dict[int, typing.Any]",
                "dict[str, dict[str, bool]]",
                "dict[str, str]",
                "typing.Type",
                "dict[int, str]"
            ],
            "arguments": {
                "self": [],
                "first": [
                    "dict[, ]",
                    "typing.Type",
                    "str"
                ],
                "last": [
                    "dict[, ]",
                    "typing.Type",
                    "str"
                ]
            }
        }
    },
    "python-telegram-master/telegram/tdjson.py": {
        "_get_tdjson_lib_path": {
            "name": "_get_tdjson_lib_path",
            "location": 13,
            "return": [
                "float",
                "list[float]",
                "list[str]",
                "tuple[typing.Union[tuple[typing.Union[typing.Literal,typing.Literal]],tuple[typing.Union[typing.Literal,typing.Literal]]]]",
                "list[]",
                "list[tuple[typing.Union[typing.Any,typing.Any]]]"
            ],
            "arguments": {}
        },
        "TDJson.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "library_path": [
                    "None",
                    "str",
                    "list[str]",
                    "typing.Callable[str, str]"
                ],
                "verbosity": [
                    "int"
                ]
            }
        },
        "TDJson.__del__": {
            "name": "__del__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TDJson._build_client": {
            "name": "_build_client",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "library_path": [
                    "str",
                    "int",
                    "list[tuple[typing.Union[object,object]]]"
                ],
                "verbosity": [
                    "str",
                    "int",
                    "list[tuple[typing.Union[object,object]]]"
                ]
            }
        },
        "TDJson.send": {
            "name": "send",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "typing.Type",
                    "int",
                    "dict[, ]",
                    "dict[str, list[]]"
                ]
            }
        },
        "TDJson.receive": {
            "name": "receive",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TDJson.td_execute": {
            "name": "td_execute",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "typing.Type",
                    "int",
                    "dict[, ]",
                    "dict[str, list[]]"
                ]
            }
        },
        "TDJson.stop": {
            "name": "stop",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TDJson._build_client.on_fatal_error_callback": {
            "name": "on_fatal_error_callback",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "error_message": []
            }
        }
    },
    "python-telegram-master/telegram/utils.py": {
        "AsyncResult.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [
                    "int",
                    "str",
                    "None"
                ],
                "result_id": [
                    "None",
                    "str"
                ]
            }
        },
        "AsyncResult.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncResult.wait": {
            "name": "wait",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "None",
                    "int",
                    "float"
                ],
                "raise_exc": [
                    "bool"
                ]
            }
        },
        "AsyncResult.parse_update": {
            "name": "parse_update",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "update": [
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "python-telegram-master/telegram/worker.py": {
        "BaseWorker.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue": [
                    "int",
                    "float"
                ]
            }
        },
        "BaseWorker.run": {
            "name": "run",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseWorker.stop": {
            "name": "stop",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleWorker.run": {
            "name": "run",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleWorker._run_thread": {
            "name": "_run_thread",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleWorker.stop": {
            "name": "stop",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-telegram-master/telegram/__init__.py": {},
    "python-telegram-master/tests/test_tdjson.py": {
        "TestGetTdjsonTdlibPath.test_for_darwin": {
            "name": "test_for_darwin",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetTdjsonTdlibPath.test_for_linux": {
            "name": "test_for_linux",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetTdjsonTdlibPath.test_for_windows": {
            "name": "test_for_windows",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetTdjsonTdlibPath.test_unknown": {
            "name": "test_unknown",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-telegram-master/tests/test_telegram_methods.py": {
        "telegram": {
            "name": "telegram",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "_get_telegram_instance": {
            "name": "_get_telegram_instance",
            "location": 23,
            "return": [
                "Telegram"
            ],
            "arguments": {}
        },
        "TestTelegram.test_phone_bot_token_init": {
            "name": "test_phone_bot_token_init",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTelegram.test_send_message": {
            "name": "test_send_message",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_send_phone_number_or_bot_token": {
            "name": "test_send_phone_number_or_bot_token",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_send_bot_token": {
            "name": "test_send_bot_token",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_add_message_handler": {
            "name": "test_add_message_handler",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_remove_update_handler": {
            "name": "test_remove_update_handler",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_remove_update_handler_empty_handlers_list": {
            "name": "test_remove_update_handler_empty_handlers_list",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": [
                    "dict[, ]"
                ]
            }
        },
        "TestTelegram.test_add_update_handler": {
            "name": "test_add_update_handler",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_run_handlers": {
            "name": "test_run_handlers",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_run_handlers_should_not_be_called_for_another_update_type": {
            "name": "test_run_handlers_should_not_be_called_for_another_update_type",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_call_method": {
            "name": "test_call_method",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_get_web_page_instant_view": {
            "name": "test_get_web_page_instant_view",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_get_me": {
            "name": "test_get_me",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_get_user": {
            "name": "test_get_user",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_get_user_full_info": {
            "name": "test_get_user_full_info",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_get_chat": {
            "name": "test_get_chat",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_get_chats": {
            "name": "test_get_chats",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_get_chat_history": {
            "name": "test_get_chat_history",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_set_initial_params": {
            "name": "test_set_initial_params",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_send_encryption_key": {
            "name": "test_send_encryption_key",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "exp_key": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "TestTelegram__update_async_result.test_update_async_result_returns_async_result_with_same_id": {
            "name": "test_update_async_result_returns_async_result_with_same_id",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram__update_async_result.test_result_id_should_be_replaced_if_it_is_auth_process": {
            "name": "test_result_id_should_be_replaced_if_it_is_auth_process",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram__login.test_login_process_should_do_nothing_if_already_authorized": {
            "name": "test_login_process_should_do_nothing_if_already_authorized",
            "location": 363,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram__login.test_login_process_with_phone": {
            "name": "test_login_process_with_phone",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram__login_non_blocking.test_login_process_with_phone": {
            "name": "test_login_process_with_phone",
            "location": 411,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "telegram": []
            }
        },
        "TestTelegram.test_add_message_handler.my_handler": {
            "name": "my_handler",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTelegram.test_remove_update_handler.my_handler": {
            "name": "my_handler",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTelegram.test_remove_update_handler_empty_handlers_list.my_handler": {
            "name": "my_handler",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTelegram.test_add_update_handler.my_handler": {
            "name": "my_handler",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTelegram.test_run_handlers.my_handler": {
            "name": "my_handler",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTelegram.test_run_handlers_should_not_be_called_for_another_update_type.my_handler": {
            "name": "my_handler",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTelegram__login.test_login_process_with_phone._get_async_result": {
            "name": "_get_async_result",
            "location": 372,
            "return": [
                "AsyncResult"
            ],
            "arguments": {
                "data": [],
                "request_id": [
                    "None"
                ]
            }
        },
        "TestTelegram__login_non_blocking.test_login_process_with_phone._get_async_result": {
            "name": "_get_async_result",
            "location": 414,
            "return": [
                "AsyncResult"
            ],
            "arguments": {
                "data": [],
                "request_id": [
                    "None"
                ]
            }
        }
    },
    "python-telegram-master/tests/test_utils.py": {
        "TestAsyncResult.test_initial_params": {
            "name": "test_initial_params",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_str": {
            "name": "test_str",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_parse_update_with_error": {
            "name": "test_parse_update_with_error",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_parse_update_ok": {
            "name": "test_parse_update_ok",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_parse_update_authorization_state_ok": {
            "name": "test_parse_update_authorization_state_ok",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_parse_update": {
            "name": "test_parse_update",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_wait_with_timeout": {
            "name": "test_wait_with_timeout",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_wait_with_update": {
            "name": "test_wait_with_update",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_wait_with_error_and_raise_exc": {
            "name": "test_wait_with_error_and_raise_exc",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAsyncResult.test_wait_with_error_and_without_raise_exc": {
            "name": "test_wait_with_error_and_without_raise_exc",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-telegram-master/tests/__init__.py": {}
}
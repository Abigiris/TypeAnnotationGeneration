{
    "python-wechaty-master/setup.py": {
        "versioning": {
            "name": "versioning",
            "location": 11,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "version": []
            }
        },
        "get_version": {
            "name": "get_version",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "get_long_description": {
            "name": "get_long_description",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "get_install_requires": {
            "name": "get_install_requires",
            "location": 63,
            "return": [],
            "arguments": {}
        }
    },
    "python-wechaty-master/examples/contact-bot.py": {},
    "python-wechaty-master/examples/ding-dong-bot-oop.py": {
        "MyBot.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/examples/ding-dong-bot.py": {},
    "python-wechaty-master/examples/health_check_plugin.py": {},
    "python-wechaty-master/examples/plugin-server-bot.py": {
        "SimpleServerWechatyPlugin.blueprint.hello_wechaty": {
            "name": "hello_wechaty",
            "location": 27,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/scripts/check_python_version.py": {
        "version": {
            "name": "version",
            "location": 9,
            "return": [
                "tuple[int]"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/src/wechaty/accessory.py": {
        "Accessory.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Accessory.payload": {
            "name": "payload",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Accessory.is_ready": {
            "name": "is_ready",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Accessory.set_puppet": {
            "name": "set_puppet",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "new_puppet": []
            }
        },
        "Accessory.set_wechaty": {
            "name": "set_wechaty",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "new_wechaty": []
            }
        },
        "Accessory.get_puppet": {
            "name": "get_puppet",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Accessory.get_wechaty": {
            "name": "get_wechaty",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Accessory.puppet": {
            "name": "puppet",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Accessory.wechaty": {
            "name": "wechaty",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/config.py": {
        "global_exception_handler": {
            "name": "global_exception_handler",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "exception": []
            }
        },
        "valid_api_host": {
            "name": "valid_api_host",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "api_host": []
            }
        },
        "qr_code_for_chatie": {
            "name": "qr_code_for_chatie",
            "location": 134,
            "return": [],
            "arguments": {}
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api_host": [
                    "None"
                ],
                "token": [
                    "None"
                ],
                "protocol": [
                    "None"
                ],
                "http_port": [
                    "None"
                ],
                "name": [
                    "typing.Text"
                ],
                "debug": [
                    "bool"
                ],
                "docker": [
                    "bool"
                ]
            }
        }
    },
    "python-wechaty-master/src/wechaty/exceptions.py": {
        "WechatyError.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [],
                "code": [
                    "None"
                ],
                "params": [
                    "None"
                ]
            }
        },
        "WechatyError.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/plugin.py": {
        "_check_local_port": {
            "name": "_check_local_port",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "port": []
            }
        },
        "_list_routes_txt": {
            "name": "_list_routes_txt",
            "location": 100,
            "return": [
                "list[]",
                "list[str]"
            ],
            "arguments": {
                "app": []
            }
        },
        "_load_default_plugins": {
            "name": "_load_default_plugins",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "WechatyPlugin.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "None"
                ]
            }
        },
        "WechatyPlugin.set_bot": {
            "name": "set_bot",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "WechatyPlugin.name": {
            "name": "name",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WechatyPlugin.cache_dir": {
            "name": "cache_dir",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WechatyPlugin.get_dependency_plugins": {
            "name": "get_dependency_plugins",
            "location": 206,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "WechatyPlugin.get_output": {
            "name": "get_output",
            "location": 303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WechatyPluginManager.__init__": {
            "name": "__init__",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "wechaty": [],
                "endpoint": []
            }
        },
        "WechatyPluginManager._load_plugin_from_local_file": {
            "name": "_load_plugin_from_local_file",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "plugin_path": []
            }
        },
        "WechatyPluginManager._load_plugin_from_github_url": {
            "name": "_load_plugin_from_github_url",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "github_url": []
            }
        },
        "WechatyPluginManager.add_plugin": {
            "name": "add_plugin",
            "location": 353,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "plugin": []
            }
        },
        "WechatyPluginManager.remove_plugin": {
            "name": "remove_plugin",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "WechatyPluginManager._check_plugins": {
            "name": "_check_plugins",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "WechatyPluginManager.stop_plugin": {
            "name": "stop_plugin",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "WechatyPluginManager.start_plugin": {
            "name": "start_plugin",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "WechatyPluginManager.plugin_status": {
            "name": "plugin_status",
            "location": 411,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "WechatyPluginManager.server_endpoint": {
            "name": "server_endpoint",
            "location": 417,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/types.py": {},
    "python-wechaty-master/src/wechaty/version.py": {},
    "python-wechaty-master/src/wechaty/wechaty.py": {
        "Wechaty.__init__": {
            "name": "__init__",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "None"
                ]
            }
        },
        "Wechaty.puppet": {
            "name": "puppet",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wechaty._load_puppet": {
            "name": "_load_puppet",
            "location": 195,
            "return": [
                "Puppet"
            ],
            "arguments": {
                "options": []
            }
        },
        "Wechaty.__str__": {
            "name": "__str__",
            "location": 230,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wechaty.instance": {
            "name": "instance",
            "location": 235,
            "return": [],
            "arguments": {
                "cls": [],
                "options": [
                    "None"
                ]
            }
        },
        "Wechaty.use": {
            "name": "use",
            "location": 251,
            "return": [
                "Wechaty"
            ],
            "arguments": {
                "self": [],
                "plugin": []
            }
        },
        "Wechaty.name": {
            "name": "name",
            "location": 262,
            "return": [
                "typing.Text",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wechaty.on": {
            "name": "on",
            "location": 268,
            "return": [
                "Wechaty"
            ],
            "arguments": {
                "self": [],
                "event": [],
                "f": [
                    "None"
                ]
            }
        },
        "Wechaty.emit": {
            "name": "emit",
            "location": 279,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Wechaty.add_listener_function": {
            "name": "add_listener_function",
            "location": 701,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [],
                "listener": []
            }
        },
        "Wechaty.user_self": {
            "name": "user_self",
            "location": 737,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wechaty.self": {
            "name": "self",
            "location": 748,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wechaty.init_puppet_event_bridge.dong_listener": {
            "name": "dong_listener",
            "location": 439,
            "return": [
                "None"
            ],
            "arguments": {
                "payload": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/__init__.py": {},
    "python-wechaty-master/src/wechaty/user/contact.py": {
        "Contact.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contact_id": []
            }
        },
        "Contact.get_id": {
            "name": "get_id",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contact.load": {
            "name": "load",
            "location": 103,
            "return": [],
            "arguments": {
                "cls": [],
                "contact_id": []
            }
        },
        "Contact._filter_contacts": {
            "name": "_filter_contacts",
            "location": 130,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cls": [],
                "contacts": [],
                "query": []
            }
        },
        "Contact.__str__": {
            "name": "__str__",
            "location": 289,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.name": {
            "name": "name",
            "location": 378,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.is_friend": {
            "name": "is_friend",
            "location": 421,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.is_offical": {
            "name": "is_offical",
            "location": 440,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.is_personal": {
            "name": "is_personal",
            "location": 454,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.type": {
            "name": "type",
            "location": 464,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contact.star": {
            "name": "star",
            "location": 474,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.gender": {
            "name": "gender",
            "location": 484,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contact.province": {
            "name": "province",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.city": {
            "name": "city",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.is_self": {
            "name": "is_self",
            "location": 550,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact.weixin": {
            "name": "weixin",
            "location": 563,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contact._filter_contacts.filter_func": {
            "name": "filter_func",
            "location": 150,
            "return": [
                "bool"
            ],
            "arguments": {
                "contact": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/contact_self.py": {
        "ContactSelf.name": {
            "name": "name",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/favorite.py": {
        "Favorite.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "favorite_id": []
            }
        },
        "Favorite.get_id": {
            "name": "get_id",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/friendship.py": {
        "Friendship.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "friendship_id": []
            }
        },
        "Friendship.load": {
            "name": "load",
            "location": 69,
            "return": [],
            "arguments": {
                "cls": [],
                "friendship_id": []
            }
        },
        "Friendship.__str__": {
            "name": "__str__",
            "location": 117,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Friendship.contact": {
            "name": "contact",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Friendship.hello": {
            "name": "hello",
            "location": 168,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Friendship.type": {
            "name": "type",
            "location": 182,
            "return": [
                "FriendshipType"
            ],
            "arguments": {
                "self": []
            }
        },
        "Friendship.to_json": {
            "name": "to_json",
            "location": 196,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/image.py": {
        "Image.__str__": {
            "name": "__str__",
            "location": 45,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_id": []
            }
        },
        "Image.create": {
            "name": "create",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": [],
                "image_id": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/message.py": {
        "Message.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message_id": []
            }
        },
        "Message.message_type": {
            "name": "message_type",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 93,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.talker": {
            "name": "talker",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.to": {
            "name": "to",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.room": {
            "name": "room",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.chatter": {
            "name": "chatter",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.text": {
            "name": "text",
            "location": 309,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.load": {
            "name": "load",
            "location": 352,
            "return": [],
            "arguments": {
                "cls": [],
                "message_id": []
            }
        },
        "Message.type": {
            "name": "type",
            "location": 358,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.is_self": {
            "name": "is_self",
            "location": 365,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.date": {
            "name": "date",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.age": {
            "name": "age",
            "location": 515,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.to_image": {
            "name": "to_image",
            "location": 547,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/mini_program.py": {
        "MiniProgram.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload": []
            }
        },
        "MiniProgram.create_from_json": {
            "name": "create_from_json",
            "location": 66,
            "return": [],
            "arguments": {
                "cls": [],
                "payload_data": []
            }
        },
        "MiniProgram.to_json": {
            "name": "to_json",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.app_id": {
            "name": "app_id",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.title": {
            "name": "title",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.icon_url": {
            "name": "icon_url",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.page_path": {
            "name": "page_path",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.user_name": {
            "name": "user_name",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.description": {
            "name": "description",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.thumb_url": {
            "name": "thumb_url",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiniProgram.thumb_key": {
            "name": "thumb_key",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/room.py": {
        "Room.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "room_id": []
            }
        },
        "Room.on": {
            "name": "on",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_name": [],
                "func": []
            }
        },
        "Room.emit": {
            "name": "emit",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_name": []
            }
        },
        "Room._filter_rooms": {
            "name": "_filter_rooms",
            "location": 122,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cls": [],
                "rooms": [],
                "query": []
            }
        },
        "Room.load": {
            "name": "load",
            "location": 247,
            "return": [],
            "arguments": {
                "cls": [],
                "room_id": []
            }
        },
        "Room.__str__": {
            "name": "__str__",
            "location": 259,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Room._filter_rooms.filter_func": {
            "name": "filter_func",
            "location": 145,
            "return": [
                "bool"
            ],
            "arguments": {
                "room": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/room_invitation.py": {
        "RoomInvitation.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "room_invitation_id": []
            }
        },
        "RoomInvitation.__str__": {
            "name": "__str__",
            "location": 50,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "RoomInvitation.load": {
            "name": "load",
            "location": 76,
            "return": [
                "RoomInvitation"
            ],
            "arguments": {
                "cls": [],
                "room_invitation_id": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/tag.py": {
        "Tag.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_id": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "Tag.load": {
            "name": "load",
            "location": 47,
            "return": [
                "str",
                "dict[int, typing.Type]",
                "tuple[typing.Union[str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str]]",
                "typing.Final",
                "None",
                "list[str]",
                "dict[, ]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "list[dict[, ]]"
                ],
                "tag_id": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "list[dict[, ]]"
                ]
            }
        },
        "Tag.get": {
            "name": "get",
            "location": 59,
            "return": [],
            "arguments": {
                "cls": [],
                "tag_id": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "Tag.remove": {
            "name": "remove",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "typing.Type"
                ]
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/url_link.py": {
        "UrlLink.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "str",
                    "list[dict[, ]]",
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "UrlLink.create": {
            "name": "create",
            "location": 35,
            "return": [
                "UrlLink"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "url": [
                    "str",
                    "dict[str, str]",
                    "int"
                ],
                "title": [
                    "None",
                    "dict[str, typing.Any]",
                    "str",
                    "typing.Callable[, ]"
                ],
                "thumbnail_url": [
                    "None",
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "description": [
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "UrlLink.__str__": {
            "name": "__str__",
            "location": 56,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlLink.title": {
            "name": "title",
            "location": 64,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlLink.thumbnailUrl": {
            "name": "thumbnailUrl",
            "location": 72,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlLink.description": {
            "name": "description",
            "location": 80,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlLink.url": {
            "name": "url",
            "location": 88,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/user/__init__.py": {},
    "python-wechaty-master/src/wechaty/utils/async_helper.py": {
        "single_message": {
            "name": "single_message",
            "location": 66,
            "return": [],
            "arguments": {
                "on_message_func": [
                    "typing.Callable[, ]",
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "SingleIdContainer.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingleIdContainer.exist": {
            "name": "exist",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "message_id": [
                    "int",
                    "str"
                ]
            }
        },
        "SingleIdContainer.instance": {
            "name": "instance",
            "location": 58,
            "return": [
                "SingleIdContainer"
            ],
            "arguments": {
                "cls": [
                    "int",
                    "dict[, ]",
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "tuple[str]"
                ]
            }
        }
    },
    "python-wechaty-master/src/wechaty/utils/date_util.py": {
        "timestamp_to_date": {
            "name": "timestamp_to_date",
            "location": 25,
            "return": [],
            "arguments": {
                "timestamp": []
            }
        }
    },
    "python-wechaty-master/src/wechaty/utils/link.py": {
        "get_url_metadata": {
            "name": "get_url_metadata",
            "location": 8,
            "return": [
                "OpenGraph"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "fetch_github_user_avatar_url": {
            "name": "fetch_github_user_avatar_url",
            "location": 22,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        }
    },
    "python-wechaty-master/src/wechaty/utils/qrcode_terminal.py": {
        "qr_terminal_str": {
            "name": "qr_terminal_str",
            "location": 6,
            "return": [],
            "arguments": {
                "data": [],
                "version": [
                    "None"
                ]
            }
        },
        "draw": {
            "name": "draw",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [],
                "version": [
                    "None"
                ]
            }
        }
    },
    "python-wechaty-master/src/wechaty/utils/qr_code.py": {
        "qr_terminal": {
            "name": "qr_terminal",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "version": [
                    "None",
                    "typing.Any",
                    "bytes",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "python-wechaty-master/src/wechaty/utils/type_check.py": {
        "type_check": {
            "name": "type_check",
            "location": 5,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj": [
                    "str"
                ],
                "type_name": [
                    "str"
                ]
            }
        },
        "default_str": {
            "name": "default_str",
            "location": 22,
            "return": [
                "str",
                "None",
                "typing.Callable[[], T]",
                "int",
                "typing.Text"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "None",
                    "typing.Callable[[], T]",
                    "int"
                ]
            }
        }
    },
    "python-wechaty-master/src/wechaty/utils/__init__.py": {},
    "python-wechaty-master/tests/accessory_test.py": {
        "get_user_class": {
            "name": "get_user_class",
            "location": 27,
            "return": [
                "FixtureClass"
            ],
            "arguments": {}
        },
        "fixture_user_class": {
            "name": "fixture_user_class",
            "location": 41,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "test_indenpendent_user_classes": {
            "name": "test_indenpendent_user_classes",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_user_classes_should_share": {
            "name": "test_user_classes_should_share",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_indenpendent_user_classes_instances": {
            "name": "test_indenpendent_user_classes_instances",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_accessory_read_initialized_class": {
            "name": "test_accessory_read_initialized_class",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "user_class": [
                    "typing.Type",
                    "dict[, ]"
                ]
            }
        },
        "test_accessory_read_uninitialized_instance": {
            "name": "test_accessory_read_uninitialized_instance",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "user_class": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_accessory_read_initialized_instance": {
            "name": "test_accessory_read_initialized_instance",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "user_class": [
                    "typing.Type",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_accessory_set_twice": {
            "name": "test_accessory_set_twice",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "user_class": [
                    "typing.Type"
                ]
            }
        },
        "test_accessory_classmethod_access_puppet": {
            "name": "test_accessory_classmethod_access_puppet",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_accessory_classmethod_access_wechaty": {
            "name": "test_accessory_classmethod_access_wechaty",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/tests/config_test.py": {
        "fixture_data": {
            "name": "fixture_data",
            "location": 22,
            "return": [
                "typing.Generator[typing.Text]"
            ],
            "arguments": {}
        },
        "test_config": {
            "name": "test_config",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "bytes",
                    "str"
                ]
            }
        },
        "test_get_logger": {
            "name": "test_get_logger",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/tests/conftest.py": {
        "FakePuppet.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "list[str]",
                    "None",
                    "str"
                ],
                "name": [
                    "typing.Text"
                ]
            }
        },
        "FakePuppet.add_message": {
            "name": "add_message",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload": []
            }
        },
        "FakePuppet.add_room": {
            "name": "add_room",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "bool",
                    "dict[str, typing.Any]",
                    "list[typing.Any]",
                    "None",
                    "str"
                ]
            }
        },
        "FakePuppet.add_contact": {
            "name": "add_contact",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "payload": [
                    "bool",
                    "dict[str, typing.Any]",
                    "list[typing.Any]",
                    "None",
                    "str"
                ]
            }
        },
        "FakePuppet.add_room_member": {
            "name": "add_room_member",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "room_id": [
                    "int",
                    "set[int]",
                    "set[]",
                    "str",
                    "list[]",
                    "None",
                    "list[str]"
                ],
                "payload": [
                    "int",
                    "set[int]",
                    "set[]",
                    "str",
                    "list[]",
                    "None",
                    "list[str]"
                ]
            }
        },
        "FakePuppet.self_id": {
            "name": "self_id",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python-wechaty-master/tests/room_test.py": {},
    "python-wechaty-master/tests/smoke_testing_test.py": {
        "test_smoke_testing": {
            "name": "test_smoke_testing",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/tests/timestamp_test.py": {
        "test_timestamp_with_millisecond_precision": {
            "name": "test_timestamp_with_millisecond_precision",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_timestamp_with_microsecond_precision": {
            "name": "test_timestamp_with_microsecond_precision",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/tests/user_message_test.py": {},
    "python-wechaty-master/tests/utils_test.py": {
        "test_fetch_metadata": {
            "name": "test_fetch_metadata",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fetch_github_user_avatar": {
            "name": "test_fetch_github_user_avatar",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_single_id_container": {
            "name": "test_single_id_container",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/tests/version_test.py": {
        "test_version": {
            "name": "test_version",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/tests/wechaty_test.py": {
        "ding_dong_test": {
            "name": "ding_dong_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-wechaty-master/wip/wechaty/__init__.py": {
        "Wechaty.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wechaty.version": {
            "name": "version",
            "location": 35,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wechaty.ding": {
            "name": "ding",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "bytes",
                    "bytearray",
                    "memoryview"
                ]
            }
        }
    }
}
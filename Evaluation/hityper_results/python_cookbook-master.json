{
    "python_cookbook-master/app/01__Data-Structs-and-Algorithms/01__01-Unpacking-Seq-into-Vars.py": {},
    "python_cookbook-master/app/01__Data-Structs-and-Algorithms/01__02-Unpacking-Elements-from-Iterables-of-Arbitrary-Length.py": {
        "drop_first_last": {
            "name": "drop_first_last",
            "location": 5,
            "return": [],
            "arguments": {
                "grades": [
                    "str",
                    "float",
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "typing.Type",
                    "list[int]"
                ]
            }
        },
        "avg": {
            "name": "avg",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "middle": []
            }
        },
        "do_foo": {
            "name": "do_foo",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float"
                ],
                "y": [
                    "int",
                    "float"
                ]
            }
        },
        "do_bar": {
            "name": "do_bar",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "sum": {
            "name": "sum",
            "location": 54,
            "return": [
                "int"
            ],
            "arguments": {
                "items": [
                    "typing.Iterable[str]"
                ]
            }
        }
    },
    "python_cookbook-master/app/01__Data-Structs-and-Algorithms/01__03-Keeping-Last-N-Items.py": {
        "search": {
            "name": "search",
            "location": 9,
            "return": [
                "typing.Generator[tuple[typing.Union[typing.Text,list[],str]]]"
            ],
            "arguments": {
                "lines": [
                    "str"
                ],
                "pattern": [
                    "str",
                    "list[str]"
                ],
                "history": [
                    "int"
                ]
            }
        }
    },
    "python_cookbook-master/app/02__Strings-and-Text/02__01-Split-Strings-Multi-Delimiters.py": {},
    "python_cookbook-master/app/02__Strings-and-Text/02__02-Matching-Text-at-the-Start-or-End-of-a-String.py": {
        "read_data": {
            "name": "read_data",
            "location": 27,
            "return": [],
            "arguments": {
                "names": [
                    "str",
                    "set[str]",
                    "dict[, ]",
                    "bool"
                ]
            }
        }
    },
    "python_cookbook-master/app/02__Strings-and-Text/02__03-Matching-Strings-Using-Shell-Wildcard-Patterns.py": {},
    "python_cookbook-master/app/02__Strings-and-Text/02__20-f-strings.py": {},
    "python_cookbook-master/app/03__Numbers-Dates-Times/03__01-Rounding-Numerics.py": {},
    "python_cookbook-master/app/03__Numbers-Dates-Times/03__02-Performing-Accurate-Decimal-Calculations.py": {},
    "python_cookbook-master/app/03__Numbers-Dates-Times/03__03-Formatting-Numbers-for-Output.py": {},
    "python_cookbook-master/app/04__Iterators-and-Generators/04__01-Manually-Consuming-Iterator.py": {},
    "python_cookbook-master/app/04__Iterators-and-Generators/04__02-Delegating-Iteration.py": {
        "Node.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "Node.__repr__": {
            "name": "__repr__",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.add_child": {
            "name": "add_child",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "list[str]",
                    "int",
                    "str"
                ]
            }
        },
        "Node.__iter__": {
            "name": "__iter__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "python_cookbook-master/app/04__Iterators-and-Generators/04__03-Creating-New-Iteration-Patterns-with-Generators.py": {
        "frange": {
            "name": "frange",
            "location": 6,
            "return": [
                "typing.Generator[typing.Union[int,str]]"
            ],
            "arguments": {
                "start": [
                    "int",
                    "str"
                ],
                "stop": [
                    "int",
                    "str"
                ],
                "increment": [
                    "int",
                    "str"
                ]
            }
        },
        "countdown": {
            "name": "countdown",
            "location": 19,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "n": [
                    "int",
                    "str",
                    "float",
                    "list[str]"
                ]
            }
        }
    },
    "python_cookbook-master/app/05__Files-and-IO/05__01-Reading-and-Writing-Text.py": {},
    "python_cookbook-master/app/05__Files-and-IO/05__02-Printing-to-File.py": {},
    "python_cookbook-master/app/05__Files-and-IO/05__03-Printing-with-a-Different-Separator-or-Line-Ending.py": {},
    "python_cookbook-master/app/06__Data-Encoding-and-Processing/06__01-Reading-andWriting-CSV-Data.py": {},
    "python_cookbook-master/app/06__Data-Encoding-and-Processing/06__02-Reading-and-Writing-JSON.py": {
        "serialize_instance": {
            "name": "serialize_instance",
            "location": 75,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "obj": [
                    "bool",
                    "str",
                    "float"
                ]
            }
        },
        "JSONObject.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": [
                    "int",
                    "list[]",
                    "float"
                ]
            }
        },
        "Point.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ],
                "y": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ]
            }
        }
    },
    "python_cookbook-master/app/06__Data-Encoding-and-Processing/06__03-Parsing-Simple-XML-Data.py": {},
    "python_cookbook-master/app/07__functions/07__01-Funcs-That-Accept-Any-Number-of-Args.py": {
        "avg": {
            "name": "avg",
            "location": 7,
            "return": [
                "float"
            ],
            "arguments": {
                "first": [
                    "list[int]",
                    "list[]",
                    "bool",
                    "list[float]"
                ]
            }
        },
        "make_element": {
            "name": "make_element",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "name": [
                    "str",
                    "None"
                ],
                "value": [
                    "str",
                    "None"
                ]
            }
        },
        "anyargs": {
            "name": "anyargs",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/07__functions/07__02-Writing-Functions-that-Only-Accept-kwargs.py": {
        "recv": {
            "name": "recv",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "maxsize": [
                    "bool",
                    "str",
                    "list[]"
                ]
            }
        },
        "mininum": {
            "name": "mininum",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/07__functions/07__03-Attaching-Informational-Metadata-Func-Args.py": {
        "add": {
            "name": "add",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ]
            }
        }
    },
    "python_cookbook-master/app/08__Classes-and-Objects/08__01-Changing-String-Representation-of-Instance.py": {
        "Pair.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [
                    "float",
                    "int"
                ],
                "y": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ]
            }
        },
        "Pair.__repr__": {
            "name": "__repr__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pair.__str__": {
            "name": "__str__",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python_cookbook-master/app/08__Classes-and-Objects/08__02-Customizing-String-Formatting.py": {
        "Date.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "year": [
                    "int",
                    "list[int]"
                ],
                "month": [
                    "int",
                    "list[int]"
                ],
                "day": [
                    "int",
                    "list[int]"
                ]
            }
        },
        "Date.__format__": {
            "name": "__format__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "code": [
                    "str",
                    "None",
                    "int"
                ]
            }
        }
    },
    "python_cookbook-master/app/08__Classes-and-Objects/08__03-Making-Objs-Support-Context-Mgmt-Protocol.py": {
        "LazyConnection.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "bool",
                    "list[float]",
                    "list[str]"
                ],
                "family": [],
                "type": []
            }
        },
        "LazyConnection.__enter__": {
            "name": "__enter__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyConnection.__exit__": {
            "name": "__exit__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_ty": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "exc_val": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "tb": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        }
    },
    "python_cookbook-master/app/09__Metaprogramming/09__01-Putting-a-Wrapper-Around-a-Func.py": {
        "timethis": {
            "name": "timethis",
            "location": 7,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "countdown": {
            "name": "countdown",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "timethis.wrapper": {
            "name": "wrapper",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/09__Metaprogramming/09__02-Preserving-Func-Metadata-When-Writing-Decorators.py": {
        "timethis": {
            "name": "timethis",
            "location": 8,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "countdown": {
            "name": "countdown",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "timethis.wrapper": {
            "name": "wrapper",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/09__Metaprogramming/09__03-Unwrapping-a-Decorator.py": {
        "decorator1": {
            "name": "decorator1",
            "location": 7,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "decorator2": {
            "name": "decorator2",
            "location": 14,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "add": {
            "name": "add",
            "location": 23,
            "return": [
                "int"
            ],
            "arguments": {
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ]
            }
        },
        "decorator1.wrapper": {
            "name": "wrapper",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "decorator2.wrapper": {
            "name": "wrapper",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/10__Modules-and-Packages/10__01-Making-Hierarchical-Pkg-of-Modules.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/10__02-Controlling-the-Import-of-Everything.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/10__03-Importing-Package-Submodules-Using-Relative-Names.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/somemodule.py": {
        "spam": {
            "name": "spam",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "grok": {
            "name": "grok",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/10__Modules-and-Packages/__init__.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/formats/jpg.py": {
        "print_jpg": {
            "name": "print_jpg",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/10__Modules-and-Packages/formats/png.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/formats/__init__.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/mypackage/A/grok.py": {
        "testA": {
            "name": "testA",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/10__Modules-and-Packages/mypackage/A/spam.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/mypackage/A/__init__.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/mypackage/B/bar.py": {
        "testB": {
            "name": "testB",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/10__Modules-and-Packages/mypackage/B/__init__.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/primitive/fill.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/primitive/line.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/primitive/text.py": {},
    "python_cookbook-master/app/10__Modules-and-Packages/primitive/__init__.py": {},
    "python_cookbook-master/app/11__Network-and-Web-Programming/11__01-Interacting-with-HTTP-Services-As-a-Client.py": {},
    "python_cookbook-master/app/11__Network-and-Web-Programming/11__02-Creating-TCP-Server.py": {
        "EchoHandler.handle": {
            "name": "handle",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python_cookbook-master/app/11__Network-and-Web-Programming/11__03-Creating-a-UDP-Server.py": {
        "TimeHandler.handle": {
            "name": "handle",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python_cookbook-master/app/12__Concurrency/12__01-Starting-and-Stopping-Threads.py": {
        "countdown": {
            "name": "countdown",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "n": [
                    "int",
                    "float"
                ]
            }
        },
        "CountdownTask.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountdownTask.terminate": {
            "name": "terminate",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountdownTask.run": {
            "name": "run",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "IOTask.terminate": {
            "name": "terminate",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IOTask.run": {
            "name": "run",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sock": []
            }
        },
        "CountdownThread.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [
                    "int"
                ]
            }
        },
        "CountdownThread.run": {
            "name": "run",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python_cookbook-master/app/12__Concurrency/12__02-Determining-If-a-Thread-Has-Started.py": {
        "countdown": {
            "name": "countdown",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "n": [
                    "int"
                ],
                "started_evt": [
                    "str",
                    "int"
                ]
            }
        },
        "pcountdown": {
            "name": "pcountdown",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "nticks": [
                    "int"
                ]
            }
        },
        "pcountup": {
            "name": "pcountup",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "last": [
                    "int"
                ]
            }
        },
        "worker": {
            "name": "worker",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "n": [
                    "int",
                    "str",
                    "float",
                    "list[str]"
                ],
                "sema": []
            }
        },
        "PeriodicTimer.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "interval": [
                    "int",
                    "float"
                ]
            }
        },
        "PeriodicTimer.start": {
            "name": "start",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PeriodicTimer.run": {
            "name": "run",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PeriodicTimer.wait_for_tick": {
            "name": "wait_for_tick",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python_cookbook-master/app/12__Concurrency/12__03-Communicating-Between-Threads.py": {
        "producer": {
            "name": "producer",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "out_q": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "running": [
                    "bool",
                    "dict[, ]",
                    "dict[str, dict[str, float]]",
                    "list[dict[, ]]"
                ]
            }
        },
        "consumer": {
            "name": "consumer",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "in_q": [
                    "dict[, ]"
                ]
            }
        },
        "producer2": {
            "name": "producer2",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "out_q": [
                    "str",
                    "bytes",
                    "dict[, ]",
                    "typing.AnyStr"
                ]
            }
        },
        "consumer2": {
            "name": "consumer2",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "in_q": [
                    "dict[, ]"
                ]
            }
        }
    },
    "python_cookbook-master/app/13__Utility-Scripting-and-System-Administrtion/13__01-Accepting-Script-Input-via-Redirect-Pipes-Files.py": {},
    "python_cookbook-master/app/13__Utility-Scripting-and-System-Administrtion/13__02-Terminating-Program-with-an-Error-Msg.py": {},
    "python_cookbook-master/app/13__Utility-Scripting-and-System-Administrtion/13__03-Parsing-Command-Line-Options.py": {},
    "python_cookbook-master/app/13__Utility-Scripting-and-System-Administrtion/13__20-Pathlib.py": {},
    "python_cookbook-master/app/14__Testing-Debugging-Exceptions/14__01-Testing-Output-Sent-to_stdout.py": {
        "TestURLPrint.test_url_gets_to_stdout": {
            "name": "test_url_gets_to_stdout",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python_cookbook-master/app/14__Testing-Debugging-Exceptions/14__02-Testing-Output-Sent-to-stdout.py": {
        "test1": {
            "name": "test1",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [],
                "mock_func": []
            }
        }
    },
    "python_cookbook-master/app/14__Testing-Debugging-Exceptions/mymodule.py": {
        "urlprint": {
            "name": "urlprint",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "protocol": [
                    "int",
                    "str",
                    "bytes"
                ],
                "host": [
                    "int",
                    "str",
                    "bytes"
                ],
                "domain": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "python_cookbook-master/app/15__Test-Dir/copy.py": {},
    "python_cookbook-master/app/15__Test-Dir/test.py": {},
    "python_cookbook-master/app/16__pypi-libraries/16__01-mypy.py": {
        "add_one": {
            "name": "add_one",
            "location": 6,
            "return": [],
            "arguments": {
                "input": [
                    "list[str]"
                ]
            }
        },
        "print_seven": {
            "name": "print_seven",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_cookbook-master/app/17__builtins/17__01-the-name-variable.py": {},
    "python_cookbook-master/app/17__builtins/nameScript.py": {
        "myFunction": {
            "name": "myFunction",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
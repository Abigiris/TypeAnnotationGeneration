{
    "raster-vision-plugin-develop/setup.py": {
        "read": {
            "name": "read",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "raster-vision-plugin-develop/examples/utils.py": {
        "str_to_bool": {
            "name": "str_to_bool",
            "location": 18,
            "return": [
                "bool",
                "dict[str, typing.Any]",
                "list[]",
                "dict[str, str]",
                "list[int]",
                "list[str]",
                "str"
            ],
            "arguments": {
                "x": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[]",
                    "dict[str, str]",
                    "list[int]",
                    "list[str]"
                ]
            }
        },
        "get_scene_info": {
            "name": "get_scene_info",
            "location": 29,
            "return": [
                "list[]"
            ],
            "arguments": {
                "csv_uri": [
                    "str",
                    "float"
                ]
            }
        },
        "save_image_crop": {
            "name": "save_image_crop",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "image_uri": [
                    "int",
                    "str",
                    "bytes",
                    "float",
                    "None"
                ],
                "crop_uri": [
                    "bool",
                    "str"
                ],
                "label_uri": [
                    "None",
                    "dict[, ]",
                    "tuple[typing.Union[float,float]]"
                ],
                "size": [
                    "int"
                ],
                "min_features": [
                    "int"
                ]
            }
        }
    },
    "raster-vision-plugin-develop/examples/__init__.py": {},
    "raster-vision-plugin-develop/examples/object_detection/__init__.py": {},
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/plugin_config.py": {
        "register_plugin": {
            "name": "register_plugin",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "plugin_registry": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/__init__.py": {},
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/http/converters.py": {
        "annotation_features_from_labels": {
            "name": "annotation_features_from_labels",
            "location": 12,
            "return": [
                "list[dict[typing.Text, typing.Union[dict[typing.Text, typing.Union[typing.Text,list[]]],dict[typing.Text, typing.Union[None,str,bool,dict[, ],list[str],float]]]]]"
            ],
            "arguments": {
                "labels": [
                    "None",
                    "dict[, ]",
                    "float",
                    "list[str]",
                    "str",
                    "typing.Any"
                ],
                "crs_transformer": [
                    "typing.Sequence[str]",
                    "None"
                ],
                "annotation_group": [
                    "dict[, ]",
                    "None",
                    "list[str]",
                    "bool",
                    "float"
                ],
                "inverted_class_map": [
                    "dict[, ]",
                    "None",
                    "list[str]",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/http/raster_foundry.py": {
        "get_api_token": {
            "name": "get_api_token",
            "location": 9,
            "return": [],
            "arguments": {
                "refresh_token": [
                    "str"
                ],
                "api_host": [
                    "str"
                ]
            }
        },
        "get_labels": {
            "name": "get_labels",
            "location": 18,
            "return": [],
            "arguments": {
                "jwt": [
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "api_host": [
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "project_id": [
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "project_layer_id": [
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "annotation_group_id": [
                    "str",
                    "int",
                    "bytes"
                ],
                "window": [
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "get_project": {
            "name": "get_project",
            "location": 50,
            "return": [],
            "arguments": {
                "jwt": [
                    "str",
                    "bool"
                ],
                "api_host": [
                    "str",
                    "bool"
                ],
                "project_id": [
                    "str",
                    "bool"
                ]
            }
        },
        "post_labels": {
            "name": "post_labels",
            "location": 61,
            "return": [],
            "arguments": {
                "jwt": [
                    "str"
                ],
                "api_host": [
                    "str"
                ],
                "project_id": [
                    "str"
                ],
                "project_layer_id": [
                    "str"
                ],
                "labels": [
                    "str"
                ]
            }
        },
        "get_labels.make_request": {
            "name": "make_request",
            "location": 26,
            "return": [],
            "arguments": {
                "params": []
            }
        }
    },
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/http/vision.py": {
        "create_project": {
            "name": "create_project",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [
                    "str",
                    "dict[, ]",
                    "set[str]",
                    "bool"
                ]
            }
        },
        "fetch_project": {
            "name": "fetch_project",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "project_id": [
                    "str",
                    "int"
                ]
            }
        },
        "create_experiment_for_project": {
            "name": "create_experiment_for_project",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "experiment": [
                    "str",
                    "bool",
                    "typing.Type",
                    "list[str]",
                    "dict[, ]"
                ],
                "project_id": [
                    "str",
                    "bool",
                    "typing.Type",
                    "list[str]",
                    "dict[, ]"
                ]
            }
        },
        "Experiment.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/http/__init__.py": {},
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/label_source/rf_annotation_group_label_source.py": {
        "_to_rv_feature": {
            "name": "_to_rv_feature",
            "location": 15,
            "return": [
                "dict[typing.Text, dict[typing.Text, ]]"
            ],
            "arguments": {
                "annotation": [],
                "class_map": [
                    "dict[, ]",
                    "bool",
                    "typing.Sequence[]"
                ]
            }
        },
        "RfAnnotationGroupLabelSource.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "annotation_group": [
                    "bool",
                    "str",
                    "dict[int, bool]"
                ],
                "project_id": [
                    "bool",
                    "str"
                ],
                "project_layer_id": [
                    "str",
                    "int"
                ],
                "refresh_token": [
                    "bool",
                    "str",
                    "dict[int, bool]"
                ],
                "crs_transformer": [
                    "bool",
                    "str",
                    "dict[int, bool]"
                ],
                "rf_api_host": [
                    "typing.Text"
                ]
            }
        },
        "RfAnnotationGroupLabelSource._set_rv_labels": {
            "name": "_set_rv_labels",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "window": [
                    "None",
                    "bool",
                    "str",
                    "dict[str, str]",
                    "dict[, ]",
                    "list[str]"
                ]
            }
        },
        "RfAnnotationGroupLabelSource._get_api_token": {
            "name": "_get_api_token",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refresh_token": [
                    "bool",
                    "tuple[starfish.core.types.Number]",
                    "typing.Callable[, ]",
                    "list[]"
                ]
            }
        },
        "RfAnnotationGroupLabelSource._set_labels": {
            "name": "_set_labels",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RfAnnotationGroupLabelSource._set_class_map": {
            "name": "_set_class_map",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RfAnnotationGroupLabelSource.get_labels": {
            "name": "get_labels",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "window": [
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "str"
                ]
            }
        }
    },
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/label_source/__init__.py": {},
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/label_store/rf_annotation_group_label_store.py": {
        "RfAnnotationGroupLabelStore.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "annotation_group": [
                    "bool",
                    "str",
                    "dict[int, bool]"
                ],
                "project_id": [
                    "bool",
                    "str"
                ],
                "project_layer_id": [
                    "str",
                    "int"
                ],
                "refresh_token": [
                    "str",
                    "None",
                    "int"
                ],
                "crs_transformer": [
                    "bool",
                    "str",
                    "dict[int, bool]"
                ],
                "class_map": [
                    "bool",
                    "str",
                    "dict[int, bool]"
                ],
                "rf_api_host": [
                    "typing.Text"
                ]
            }
        },
        "RfAnnotationGroupLabelStore._get_api_token": {
            "name": "_get_api_token",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refresh_token": [
                    "bool",
                    "tuple[starfish.core.types.Number]",
                    "typing.Callable[, ]",
                    "list[]"
                ]
            }
        },
        "RfAnnotationGroupLabelStore.get_labels": {
            "name": "get_labels",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RfAnnotationGroupLabelStore.empty_labels": {
            "name": "empty_labels",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RfAnnotationGroupLabelStore.save": {
            "name": "save",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "labels": [
                    "str",
                    "list[str]",
                    "None",
                    "int",
                    "bytes"
                ]
            }
        }
    },
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/label_store/__init__.py": {},
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/raster_source/rf_layer_raster_source.py": {
        "RfLayerRasterSource.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "project_id": [
                    "int",
                    "str",
                    "None",
                    "bytes"
                ],
                "project_layer_id": [
                    "str",
                    "int",
                    "None"
                ],
                "source_annotation_group_id": [
                    "int",
                    "str",
                    "None"
                ],
                "refresh_token": [
                    "str",
                    "None",
                    "bool"
                ],
                "channel_order": [
                    "list[str]",
                    "str",
                    "tuple[]"
                ],
                "num_channels": [
                    "int",
                    "str",
                    "None"
                ],
                "rf_api_host": [
                    "typing.Text"
                ],
                "rf_tile_host": [
                    "typing.Text"
                ]
            }
        },
        "RfLayerRasterSource._get_api_token": {
            "name": "_get_api_token",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refresh_token": [
                    "str",
                    "typing.Callable[, ]",
                    "list[]"
                ]
            }
        },
        "RfLayerRasterSource.get_rf_scenes": {
            "name": "get_rf_scenes",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RfLayerRasterSource._get_chip": {
            "name": "_get_chip",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "window": [
                    "int",
                    "dict[str, str]",
                    "typing.Callable[..., None]",
                    "float"
                ]
            }
        },
        "RfLayerRasterSource.get_extent": {
            "name": "get_extent",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RfLayerRasterSource.get_dtype": {
            "name": "get_dtype",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RfLayerRasterSource.get_crs_transformer": {
            "name": "get_crs_transformer",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "raster-vision-plugin-develop/src/rf_raster_vision_plugin/raster_source/__init__.py": {},
    "raster-vision-plugin-develop/tests/test_rf_raster_vision_plugin.py": {
        "test_main": {
            "name": "test_main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
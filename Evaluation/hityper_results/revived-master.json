{
    "revived-master/setup.py": {},
    "revived-master/docs/conf.py": {},
    "revived-master/revived/action.py": {
        "action": {
            "name": "action",
            "location": 102,
            "return": [],
            "arguments": {
                "action_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "ActionType.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Action.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action_type": [
                    "str",
                    "bool",
                    "None",
                    "list[str]"
                ],
                "data": [
                    "None",
                    "dict[str, typing.Any]",
                    "str",
                    "typing.Type"
                ]
            }
        },
        "action.wrap": {
            "name": "wrap",
            "location": 114,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "action.wrap.wrapped": {
            "name": "wrapped",
            "location": 116,
            "return": [
                "Action"
            ],
            "arguments": {}
        }
    },
    "revived-master/revived/reducer.py": {
        "reducer": {
            "name": "reducer",
            "location": 226,
            "return": [],
            "arguments": {
                "action_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "combine_reducers": {
            "name": "combine_reducers",
            "location": 246,
            "return": [],
            "arguments": {}
        },
        "Module.__init__": {
            "name": "__init__",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Module.__call__": {
            "name": "__call__",
            "location": 192,
            "return": [
                "str",
                "None",
                "dict[str, list[str]]",
                "int",
                "dict[str, int]",
                "float",
                "typing.Callable[, ]"
            ],
            "arguments": {
                "self": [],
                "prev": [
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ],
                "action": [
                    "int"
                ]
            }
        },
        "Module.reducer": {
            "name": "reducer",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "action_type": [
                    "typing.Type",
                    "None",
                    "str",
                    "BaseException",
                    "Exception"
                ]
            }
        },
        "reducer.wrap": {
            "name": "wrap",
            "location": 235,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "combine_reducers.reduce": {
            "name": "reduce",
            "location": 258,
            "return": [],
            "arguments": {
                "prev": [],
                "action": []
            }
        },
        "Module.reducer.wrap": {
            "name": "wrap",
            "location": 214,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "reducer.wrap.wrapped": {
            "name": "wrapped",
            "location": 237,
            "return": [],
            "arguments": {
                "prev": [],
                "action": []
            }
        },
        "Module.reducer.wrap.wrapped": {
            "name": "wrapped",
            "location": 216,
            "return": [],
            "arguments": {
                "prev": [],
                "action": []
            }
        }
    },
    "revived-master/revived/store.py": {
        "init": {
            "name": "init",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "DispatchInReducerError.__init__": {
            "name": "__init__",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Subscriber.__init__": {
            "name": "__init__",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "callback": [
                    "int",
                    "float"
                ],
                "unsubscribe": [
                    "int",
                    "float"
                ]
            }
        },
        "Subscriber.__call__": {
            "name": "__call__",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Subscriber.unsubscribe": {
            "name": "unsubscribe",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Store.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reducer": [
                    "int",
                    "float"
                ]
            }
        },
        "Store.subscribe": {
            "name": "subscribe",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "callback": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Store.subscriber": {
            "name": "subscriber",
            "location": 203,
            "return": [
                "Subscriber"
            ],
            "arguments": {
                "self": [],
                "callback": [
                    "str",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        },
        "Store.dispatch": {
            "name": "dispatch",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "Store.get_state": {
            "name": "get_state",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Store.subscribe.unsubscribe": {
            "name": "unsubscribe",
            "location": 198,
            "return": [],
            "arguments": {}
        }
    },
    "revived-master/revived/__init__.py": {},
    "revived-master/tests/test_action.py": {
        "test_action__action_creator_without_arguments": {
            "name": "test_action__action_creator_without_arguments",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_action__action_creator_with_arguments": {
            "name": "test_action__action_creator_with_arguments",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_action__action_creator_without_arguments.action1": {
            "name": "action1",
            "location": 8,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {}
        },
        "test_action__action_creator_with_arguments.action2": {
            "name": "action2",
            "location": 18,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "value": []
            }
        }
    },
    "revived-master/tests/test_integration.py": {
        "building_change": {
            "name": "building_change",
            "location": 32,
            "return": [
                "dict[typing.Text, typing.Union[int,str,typing.Iterable['Context']]]"
            ],
            "arguments": {
                "building": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "building_target_change": {
            "name": "building_target_change",
            "location": 37,
            "return": [
                "dict[typing.Text, typing.Union[int,str,typing.Iterable['Context']]]"
            ],
            "arguments": {
                "target": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "building_started": {
            "name": "building_started",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "building_finished": {
            "name": "building_finished",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "building_change_reducer": {
            "name": "building_change_reducer",
            "location": 55,
            "return": [],
            "arguments": {
                "prev": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "building_target_change_reducer": {
            "name": "building_target_change_reducer",
            "location": 61,
            "return": [],
            "arguments": {
                "prev": [
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "typing.Callable[[], object]",
                    "typing.Pattern"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "building_started_reducer": {
            "name": "building_started_reducer",
            "location": 67,
            "return": [],
            "arguments": {
                "prev": [
                    "str",
                    "bool",
                    "None"
                ],
                "action": [
                    "str",
                    "typing.Iterable[typing.Any]"
                ]
            }
        },
        "building_finished_reducer": {
            "name": "building_finished_reducer",
            "location": 72,
            "return": [],
            "arguments": {
                "prev": [
                    "str",
                    "typing.IO"
                ],
                "action": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "attack_target_change": {
            "name": "attack_target_change",
            "location": 95,
            "return": [
                "dict[typing.Text, typing.Union[int,str,typing.Iterable['Context']]]"
            ],
            "arguments": {
                "target": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "attack_started": {
            "name": "attack_started",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "attack_finished": {
            "name": "attack_finished",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "attack_target_change_reducer": {
            "name": "attack_target_change_reducer",
            "location": 113,
            "return": [],
            "arguments": {
                "prev": [
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "typing.Callable[[], object]",
                    "typing.Pattern"
                ],
                "action": [
                    "str"
                ]
            }
        },
        "attack_started_reducer": {
            "name": "attack_started_reducer",
            "location": 119,
            "return": [],
            "arguments": {
                "prev": [
                    "bool",
                    "list[int]",
                    "bytes"
                ],
                "action": [
                    "str",
                    "typing.Iterable[typing.Any]"
                ]
            }
        },
        "attack_finished_reducer": {
            "name": "attack_finished_reducer",
            "location": 124,
            "return": [],
            "arguments": {
                "prev": [
                    "int",
                    "str",
                    "tuple[typing.Union[float,float]]"
                ],
                "action": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "game_mode_change": {
            "name": "game_mode_change",
            "location": 154,
            "return": [
                "dict[typing.Text, typing.Union[bool,typing.Iterable[str],str]]"
            ],
            "arguments": {
                "mode": [
                    "bool",
                    "typing.Iterable[str]",
                    "str"
                ]
            }
        },
        "game_mode_change_reducer": {
            "name": "game_mode_change_reducer",
            "location": 162,
            "return": [
                "dict[typing.Text, typing.Union[tuple[typing.Union[str,str]],str,bytes,dict[, ]]]"
            ],
            "arguments": {
                "prev": [
                    "bool",
                    "tuple[tuple[typing.Union[str,str]]]",
                    "dict[str, typing.Any]",
                    "str",
                    "bytes"
                ],
                "action": [
                    "tuple[tuple[typing.Union[str,str]]]",
                    "str",
                    "bytes"
                ]
            }
        },
        "game_init": {
            "name": "game_init",
            "location": 171,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[, ]]]"
            ],
            "arguments": {
                "prev": [
                    "dict[str, int]"
                ],
                "action": [
                    "dict[str, int]"
                ]
            }
        },
        "test_revived__integration": {
            "name": "test_revived__integration",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "revived-master/tests/test_reducer.py": {
        "test_reducer__create": {
            "name": "test_reducer__create",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_reducer__combine": {
            "name": "test_reducer__combine",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_reducer__module_reducer": {
            "name": "test_reducer__module_reducer",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_reducer__create.red": {
            "name": "red",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "prev": [],
                "action": []
            }
        },
        "test_reducer__combine.red1": {
            "name": "red1",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "prev": [],
                "action": []
            }
        },
        "test_reducer__combine.red2": {
            "name": "red2",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "prev": [],
                "action": []
            }
        },
        "test_reducer__module_reducer.red1": {
            "name": "red1",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "prev": [],
                "action": []
            }
        },
        "test_reducer__module_reducer.red2": {
            "name": "red2",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "prev": [],
                "action": []
            }
        }
    },
    "revived-master/tests/test_store.py": {
        "dummy_reducer": {
            "name": "dummy_reducer",
            "location": 12,
            "return": [
                "typing.Callable[, ]"
            ],
            "arguments": {}
        },
        "test_store__creation": {
            "name": "test_store__creation",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": []
            }
        },
        "test_store__dispatch": {
            "name": "test_store__dispatch",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": []
            }
        },
        "test_store__dispatch__dispatch_in_reducer": {
            "name": "test_store__dispatch__dispatch_in_reducer",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": []
            }
        },
        "test_store__dispatch__dispatch_in_subscriber": {
            "name": "test_store__dispatch__dispatch_in_subscriber",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": []
            }
        },
        "test_store__dispatch__subscriber": {
            "name": "test_store__dispatch__subscriber",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": []
            }
        },
        "test_store__dispatch__subscriber_decorator": {
            "name": "test_store__dispatch__subscriber_decorator",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": [
                    "str"
                ]
            }
        },
        "test_store__dispatch__subscriber_decorator__direct_call": {
            "name": "test_store__dispatch__subscriber_decorator__direct_call",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": []
            }
        },
        "test_store__unsubscribe": {
            "name": "test_store__unsubscribe",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": []
            }
        },
        "test_store__unsubscribe_decorator": {
            "name": "test_store__unsubscribe_decorator",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "dummy_reducer": [
                    "str"
                ]
            }
        },
        "test_store__dispatch__dispatch_in_reducer.wrong_reducer": {
            "name": "wrong_reducer",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "state": [],
                "action": []
            }
        },
        "test_store__dispatch__dispatch_in_subscriber.callback": {
            "name": "callback",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_store__dispatch__subscriber.callback": {
            "name": "callback",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_store__dispatch__subscriber_decorator.callback": {
            "name": "callback",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_store__dispatch__subscriber_decorator__direct_call.callback": {
            "name": "callback",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_store__unsubscribe.callback": {
            "name": "callback",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_store__unsubscribe_decorator.callback": {
            "name": "callback",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "revived-master/tests/__init__.py": {}
}
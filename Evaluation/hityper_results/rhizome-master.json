{
    "rhizome-master/streakers/flashcards.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "rhizome-master/streakers/studying.py": {
        "read_csv_to_deck": {
            "name": "read_csv_to_deck",
            "location": 84,
            "return": [
                "Deck"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "header": [
                    "bool"
                ]
            }
        },
        "write_deck_to_csv": {
            "name": "write_deck_to_csv",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "deck": [
                    "bytes",
                    "dict[, ]"
                ],
                "header": [
                    "bool"
                ]
            }
        },
        "clear": {
            "name": "clear",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Card.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "flashes": [
                    "int",
                    "float"
                ]
            }
        },
        "Card.items": {
            "name": "items",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deck.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]"
                ],
                "cards": [
                    "list[str]",
                    "list[]",
                    "tuple[typing.Union[int,int]]"
                ],
                "knowledge": [
                    "list[]"
                ]
            }
        },
        "Deck._update_card_prob": {
            "name": "_update_card_prob",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Deck.change_name": {
            "name": "change_name",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_name": [
                    "tuple[typing.Union[str,str]]",
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "Deck.change_cards": {
            "name": "change_cards",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Deck.add_cards": {
            "name": "add_cards",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_cards": [],
                "new_knowledge": [
                    "list[]"
                ]
            }
        },
        "Deck.flash_a_card": {
            "name": "flash_a_card",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "rhizome-master/streakers/__init__.py": {},
    "rhizome-master/zsmd-utils/get_input_choices.py": {
        "get_input_choices": {
            "name": "get_input_choices",
            "location": 3,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any,typing.Any]]",
                "int"
            ],
            "arguments": {
                "question": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "choices": [
                    "str",
                    "list[]"
                ],
                "case_sensitive": [
                    "bool"
                ],
                "invalid_msg": [
                    "typing.Text"
                ]
            }
        }
    }
}
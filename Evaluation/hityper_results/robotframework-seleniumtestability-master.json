{
    "robotframework-seleniumtestability-master/setup.py": {},
    "robotframework-seleniumtestability-master/tasks.py": {
        "filter_entries": {
            "name": "filter_entries",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "bytes"
                ]
            }
        },
        "webdrivers": {
            "name": "webdrivers",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "geckodriver": [
                    "None"
                ],
                "chromedriver": [
                    "None"
                ]
            }
        },
        "generatejs": {
            "name": "generatejs",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "flake": {
            "name": "flake",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "rflint": {
            "name": "rflint",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "docs": {
            "name": "docs",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "mypy": {
            "name": "mypy",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "black": {
            "name": "black",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "build": {
            "name": "build",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "cobertura": {
            "name": "cobertura",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "outputfile": []
            }
        },
        "test": {
            "name": "test",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "coverage": [
                    "bool"
                ],
                "xunit": [
                    "None",
                    "str"
                ],
                "skipci": [
                    "bool"
                ],
                "outputdir": [
                    "typing.Text"
                ],
                "tests": [
                    "None",
                    "str",
                    "Exception"
                ]
            }
        },
        "clean": {
            "name": "clean",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "changelog": {
            "name": "changelog",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "version": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "release": {
            "name": "release",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "version": [
                    "None"
                ]
            }
        }
    },
    "robotframework-seleniumtestability-master/versioneer.py": {
        "get_root": {
            "name": "get_root",
            "location": 297,
            "return": [],
            "arguments": {}
        },
        "get_config_from_root": {
            "name": "get_config_from_root",
            "location": 336,
            "return": [],
            "arguments": {
                "root": []
            }
        },
        "register_vcs_handler": {
            "name": "register_vcs_handler",
            "location": 374,
            "return": [],
            "arguments": {
                "vcs": [],
                "method": []
            }
        },
        "run_command": {
            "name": "run_command",
            "location": 385,
            "return": [],
            "arguments": {
                "commands": [],
                "args": [],
                "cwd": [],
                "verbose": [],
                "hide_stderr": [],
                "env": []
            }
        },
        "git_get_keywords": {
            "name": "git_get_keywords",
            "location": 946,
            "return": [],
            "arguments": {
                "versionfile_abs": []
            }
        },
        "git_versions_from_keywords": {
            "name": "git_versions_from_keywords",
            "location": 975,
            "return": [],
            "arguments": {
                "keywords": [],
                "tag_prefix": [],
                "verbose": []
            }
        },
        "git_pieces_from_vcs": {
            "name": "git_pieces_from_vcs",
            "location": 1030,
            "return": [],
            "arguments": {
                "tag_prefix": [],
                "root": [],
                "verbose": [],
                "run_command": []
            }
        },
        "do_vcs_install": {
            "name": "do_vcs_install",
            "location": 1121,
            "return": [],
            "arguments": {
                "manifest_in": [],
                "versionfile_source": [],
                "ipy": []
            }
        },
        "versions_from_parentdir": {
            "name": "versions_from_parentdir",
            "location": 1159,
            "return": [],
            "arguments": {
                "parentdir_prefix": [],
                "root": [],
                "verbose": []
            }
        },
        "versions_from_file": {
            "name": "versions_from_file",
            "location": 1202,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "write_to_version_file": {
            "name": "write_to_version_file",
            "location": 1219,
            "return": [],
            "arguments": {
                "filename": [],
                "versions": []
            }
        },
        "plus_or_dot": {
            "name": "plus_or_dot",
            "location": 1230,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440": {
            "name": "render_pep440",
            "location": 1237,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440_pre": {
            "name": "render_pep440_pre",
            "location": 1262,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440_post": {
            "name": "render_pep440_post",
            "location": 1278,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440_old": {
            "name": "render_pep440_old",
            "location": 1305,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_git_describe": {
            "name": "render_git_describe",
            "location": 1327,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_git_describe_long": {
            "name": "render_git_describe_long",
            "location": 1347,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render": {
            "name": "render",
            "location": 1367,
            "return": [],
            "arguments": {
                "pieces": [],
                "style": []
            }
        },
        "get_versions": {
            "name": "get_versions",
            "location": 1403,
            "return": [],
            "arguments": {
                "verbose": []
            }
        },
        "get_version": {
            "name": "get_version",
            "location": 1479,
            "return": [],
            "arguments": {}
        },
        "get_cmdclass": {
            "name": "get_cmdclass",
            "location": 1484,
            "return": [],
            "arguments": {}
        },
        "do_setup": {
            "name": "do_setup",
            "location": 1698,
            "return": [],
            "arguments": {}
        },
        "scan_setup_py": {
            "name": "scan_setup_py",
            "location": 1780,
            "return": [],
            "arguments": {}
        },
        "get_config_from_root.get": {
            "name": "get",
            "location": 348,
            "return": [],
            "arguments": {
                "parser": [],
                "name": []
            }
        },
        "register_vcs_handler.decorate": {
            "name": "decorate",
            "location": 376,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "get_cmdclass.cmd_version.initialize_options": {
            "name": "initialize_options",
            "location": 1511,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_cmdclass.cmd_version.finalize_options": {
            "name": "finalize_options",
            "location": 1514,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_cmdclass.cmd_version.run": {
            "name": "run",
            "location": 1517,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_cmdclass.cmd_build_py.run": {
            "name": "run",
            "location": 1549,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_cmdclass.cmd_sdist.run": {
            "name": "run",
            "location": 1630,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_cmdclass.cmd_sdist.make_release_tree": {
            "name": "make_release_tree",
            "location": 1638,
            "return": [],
            "arguments": {
                "self": [],
                "base_dir": [],
                "files": []
            }
        },
        "get_cmdclass.cmd_build_exe.run": {
            "name": "run",
            "location": 1573,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_cmdclass.cmd_py2exe.run": {
            "name": "run",
            "location": 1602,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "robotframework-seleniumtestability-master/assets/app.py": {
        "rf": {
            "name": "rf",
            "location": 12,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "add_header": {
            "name": "add_header",
            "location": 20,
            "return": [
                "dict[, ]",
                "dict[typing.Any, int]"
            ],
            "arguments": {
                "r": [
                    "dict[, ]",
                    "dict[typing.Any, int]"
                ]
            }
        },
        "small_img": {
            "name": "small_img",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "big_img": {
            "name": "big_img",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "code": {
            "name": "code",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "longfetch": {
            "name": "longfetch",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "fetch": {
            "name": "fetch",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "bigpage": {
            "name": "bigpage",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "secret_view": {
            "name": "secret_view",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "secret_sub_view": {
            "name": "secret_sub_view",
            "location": 64,
            "return": [],
            "arguments": {}
        }
    },
    "robotframework-seleniumtestability-master/src/Helpers/__init__.py": {
        "Helpers.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Helpers.die_die_die": {
            "name": "die_die_die",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "robotframework-seleniumtestability-master/src/SeleniumTestability/javascript.py": {},
    "robotframework-seleniumtestability-master/src/SeleniumTestability/listener.py": {
        "log_wrapper": {
            "name": "log_wrapper",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "wrapped": [
                    "str",
                    "tuple[str]",
                    "typing.MutableMapping",
                    "typing.Callable[, ]"
                ],
                "instance": [
                    "str",
                    "tuple[str]",
                    "typing.Callable[, ]",
                    "typing.MutableMapping",
                    "bool"
                ],
                "args": [],
                "kwargs": []
            }
        },
        "auto_injection": {
            "name": "auto_injection",
            "location": 19,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "auto_injection.injection_wrapper": {
            "name": "injection_wrapper",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "TestabilityListener.automatic_wait": {
            "name": "automatic_wait",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestabilityListener.automatic_injection": {
            "name": "automatic_injection",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestabilityListener.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestabilityListener._get_sl": {
            "name": "_get_sl",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestabilityListener.before_navigate_to": {
            "name": "before_navigate_to",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict[str, typing.Union[str,int]]"
                ],
                "driver": [
                    "str",
                    "dict[str, typing.Union[str,int]]"
                ]
            }
        },
        "TestabilityListener.after_navigate_to": {
            "name": "after_navigate_to",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict[str, typing.Union[str,int]]"
                ],
                "driver": [
                    "str",
                    "dict[str, typing.Union[str,int]]"
                ]
            }
        },
        "TestabilityListener.before_click": {
            "name": "before_click",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "typing.Sequence[T]",
                    "tuple[]",
                    "list[int]",
                    "str"
                ],
                "driver": [
                    "typing.Sequence[T]",
                    "tuple[]",
                    "list[int]",
                    "str"
                ]
            }
        },
        "TestabilityListener.after_click": {
            "name": "after_click",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "typing.Sequence[T]",
                    "tuple[]",
                    "list[int]",
                    "str"
                ],
                "driver": [
                    "typing.Sequence[T]",
                    "tuple[]",
                    "list[int]",
                    "str"
                ]
            }
        },
        "TestabilityListener.before_change_value_of": {
            "name": "before_change_value_of",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "list[dict[, ]]"
                ],
                "driver": [
                    "list[dict[, ]]"
                ]
            }
        },
        "TestabilityListener.after_change_value_of": {
            "name": "after_change_value_of",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "list[dict[, ]]"
                ],
                "driver": [
                    "list[dict[, ]]"
                ]
            }
        },
        "TestabilityListener.after_close": {
            "name": "after_close",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.after_execute_script": {
            "name": "after_execute_script",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "script": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.after_find": {
            "name": "after_find",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "by": [
                    "str",
                    "bool"
                ],
                "value": [
                    "str",
                    "bool"
                ],
                "driver": [
                    "str",
                    "bool"
                ]
            }
        },
        "TestabilityListener.after_navigate_back": {
            "name": "after_navigate_back",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.after_navigate_forward": {
            "name": "after_navigate_forward",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.after_quit": {
            "name": "after_quit",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.before_close": {
            "name": "before_close",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.before_execute_script": {
            "name": "before_execute_script",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "script": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.before_find": {
            "name": "before_find",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "by": [
                    "str",
                    "bool"
                ],
                "value": [
                    "str",
                    "bool"
                ],
                "driver": [
                    "str",
                    "bool"
                ]
            }
        },
        "TestabilityListener.before_navigate_back": {
            "name": "before_navigate_back",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.before_navigate_forward": {
            "name": "before_navigate_forward",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.before_quit": {
            "name": "before_quit",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "driver": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "TestabilityListener.on_exception": {
            "name": "on_exception",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exception": [
                    "str",
                    "Exception",
                    "int",
                    "BaseException",
                    "typing.Callable[, ]"
                ],
                "driver": [
                    "Exception",
                    "int",
                    "typing.Callable[[], collections.abc.Awaitable[typing.Mapping]]"
                ]
            }
        }
    },
    "robotframework-seleniumtestability-master/src/SeleniumTestability/logger.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 24,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "Exception",
                    "typing.Type",
                    "dict[, ]",
                    "typing.Deque"
                ]
            }
        },
        "kwargstr": {
            "name": "kwargstr",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "kwargs": []
            }
        },
        "argstr": {
            "name": "argstr",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "robotframework-seleniumtestability-master/src/SeleniumTestability/plugin.py": {
        "log_wrapper": {
            "name": "log_wrapper",
            "location": 36,
            "return": [],
            "arguments": {
                "wrapped": [],
                "instance": [],
                "args": [],
                "kwargs": []
            }
        },
        "SeleniumTestability.automatic_wait": {
            "name": "automatic_wait",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SeleniumTestability.error_on_timeout": {
            "name": "error_on_timeout",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SeleniumTestability.timeout": {
            "name": "timeout",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SeleniumTestability.automatic_injection": {
            "name": "automatic_injection",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SeleniumTestability.__init__": {
            "name": "__init__",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "automatic_wait": [
                    "bool"
                ],
                "timeout": [
                    "typing.Text"
                ],
                "error_on_timeout": [
                    "bool"
                ],
                "automatic_injection": [
                    "bool"
                ]
            }
        },
        "SeleniumTestability._inject_testability": {
            "name": "_inject_testability",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.set_testability_config": {
            "name": "set_testability_config",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "SeleniumTestability.instrument_browser": {
            "name": "instrument_browser",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.is_testability_installed": {
            "name": "is_testability_installed",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.wait_for_document_ready": {
            "name": "wait_for_document_ready",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.set_testability_automatic_wait": {
            "name": "set_testability_automatic_wait",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enabled": []
            }
        },
        "SeleniumTestability.enable_testability_automatic_wait": {
            "name": "enable_testability_automatic_wait",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.disable_testability_automatic_wait": {
            "name": "disable_testability_automatic_wait",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.wait_for_testability_ready": {
            "name": "wait_for_testability_ready",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "None"
                ],
                "error_on_timeout": [
                    "None"
                ]
            }
        },
        "SeleniumTestability.set_testability_timeout": {
            "name": "set_testability_timeout",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "SeleniumTestability.get_testability_timeout": {
            "name": "get_testability_timeout",
            "location": 344,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.set_testability_error_on_timeout": {
            "name": "set_testability_error_on_timeout",
            "location": 352,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error_on_timeout": []
            }
        },
        "SeleniumTestability.get_testability_error_on_timeout": {
            "name": "get_testability_error_on_timeout",
            "location": 361,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.add_authentication": {
            "name": "add_authentication",
            "location": 368,
            "return": [],
            "arguments": {
                "url": [],
                "user": [],
                "password": []
            }
        },
        "SeleniumTestability.split_url_to_host_and_path": {
            "name": "split_url_to_host_and_path",
            "location": 383,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "url": []
            }
        },
        "SeleniumTestability.set_testability_automatic_injection": {
            "name": "set_testability_automatic_injection",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enabled": []
            }
        },
        "SeleniumTestability.enable_testability_automatic_injection": {
            "name": "enable_testability_automatic_injection",
            "location": 403,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.disable_testability_automatic_injection": {
            "name": "disable_testability_automatic_injection",
            "location": 411,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.cookies_to_dict": {
            "name": "cookies_to_dict",
            "location": 419,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "cookies": []
            }
        },
        "SeleniumTestability.get_navigator_useragent": {
            "name": "get_navigator_useragent",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_appCodeName": {
            "name": "get_navigator_appCodeName",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_appname": {
            "name": "get_navigator_appname",
            "location": 448,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_appversion": {
            "name": "get_navigator_appversion",
            "location": 456,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_cookieenabled": {
            "name": "get_navigator_cookieenabled",
            "location": 464,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_language": {
            "name": "get_navigator_language",
            "location": 472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_online": {
            "name": "get_navigator_online",
            "location": 480,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_platform": {
            "name": "get_navigator_platform",
            "location": 488,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_navigator_product": {
            "name": "get_navigator_product",
            "location": 496,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.drag_and_drop": {
            "name": "drag_and_drop",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locator": [],
                "target": [],
                "html5": [
                    "bool"
                ]
            }
        },
        "SeleniumTestability.scroll_to_bottom": {
            "name": "scroll_to_bottom",
            "location": 547,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "smooth": [
                    "bool"
                ]
            }
        },
        "SeleniumTestability.scroll_to_top": {
            "name": "scroll_to_top",
            "location": 559,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "smooth": [
                    "bool"
                ]
            }
        },
        "SeleniumTestability.toggle_element_visibility": {
            "name": "toggle_element_visibility",
            "location": 571,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "SeleniumTestability.hide_element": {
            "name": "hide_element",
            "location": 582,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "SeleniumTestability.show_element": {
            "name": "show_element",
            "location": 595,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "SeleniumTestability._element_blocked": {
            "name": "_element_blocked",
            "location": 604,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "SeleniumTestability.get_webelement_at": {
            "name": "get_webelement_at",
            "location": 617,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "SeleniumTestability.is_element_blocked": {
            "name": "is_element_blocked",
            "location": 629,
            "return": [],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "SeleniumTestability.element_should_be_blocked": {
            "name": "element_should_be_blocked",
            "location": 641,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "SeleniumTestability.element_should_not_be_blocked": {
            "name": "element_should_not_be_blocked",
            "location": 654,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locator": []
            }
        },
        "SeleniumTestability._get_ff_log": {
            "name": "_get_ff_log",
            "location": 665,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SeleniumTestability.get_log": {
            "name": "get_log",
            "location": 701,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "log_type": [
                    "typing.Text"
                ]
            }
        },
        "SeleniumTestability.get_default_capabilities": {
            "name": "get_default_capabilities",
            "location": 729,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "browser_name": []
            }
        },
        "SeleniumTestability.set_element_attribute": {
            "name": "set_element_attribute",
            "location": 742,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "locator": [],
                "attribute": [],
                "value": []
            }
        },
        "SeleniumTestability.get_location_hash": {
            "name": "get_location_hash",
            "location": 751,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_location_host": {
            "name": "get_location_host",
            "location": 759,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_location_hostname": {
            "name": "get_location_hostname",
            "location": 767,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_location_href": {
            "name": "get_location_href",
            "location": 775,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_location_origin": {
            "name": "get_location_origin",
            "location": 783,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_location_port": {
            "name": "get_location_port",
            "location": 791,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_location_protocol": {
            "name": "get_location_protocol",
            "location": 799,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.get_location_search": {
            "name": "get_location_search",
            "location": 807,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestability.generate_firefox_profile": {
            "name": "generate_firefox_profile",
            "location": 815,
            "return": [
                "FirefoxProfile"
            ],
            "arguments": {
                "self": [],
                "preferences": [],
                "accept_untrusted_certs": [
                    "bool"
                ],
                "proxy": [
                    "None"
                ]
            }
        },
        "SeleniumTestability.get_storage_length": {
            "name": "get_storage_length",
            "location": 847,
            "return": [],
            "arguments": {
                "self": [],
                "storage_type": [
                    "typing.Text"
                ]
            }
        },
        "SeleniumTestability.get_storage_keys": {
            "name": "get_storage_keys",
            "location": 857,
            "return": [],
            "arguments": {
                "self": [],
                "storage_type": [
                    "typing.Text"
                ]
            }
        },
        "SeleniumTestability.get_storage_item": {
            "name": "get_storage_item",
            "location": 867,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "storage_type": [
                    "typing.Text"
                ]
            }
        },
        "SeleniumTestability.set_storage_item": {
            "name": "set_storage_item",
            "location": 882,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "storage_type": [
                    "typing.Text"
                ]
            }
        },
        "SeleniumTestability.clear_storage": {
            "name": "clear_storage",
            "location": 896,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "storage_type": [
                    "typing.Text"
                ]
            }
        },
        "SeleniumTestability.remove_storage_item": {
            "name": "remove_storage_item",
            "location": 906,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "storage_type": [
                    "typing.Text"
                ]
            }
        }
    },
    "robotframework-seleniumtestability-master/src/SeleniumTestability/types.py": {
        "is_firefox": {
            "name": "is_firefox",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "webdriver": [
                    "bool",
                    "str"
                ]
            }
        }
    },
    "robotframework-seleniumtestability-master/src/SeleniumTestability/_version.py": {
        "get_keywords": {
            "name": "get_keywords",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "get_config": {
            "name": "get_config",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "register_vcs_handler": {
            "name": "register_vcs_handler",
            "location": 59,
            "return": [],
            "arguments": {
                "vcs": [],
                "method": []
            }
        },
        "run_command": {
            "name": "run_command",
            "location": 72,
            "return": [],
            "arguments": {
                "commands": [],
                "args": [],
                "cwd": [],
                "verbose": [],
                "hide_stderr": [],
                "env": []
            }
        },
        "versions_from_parentdir": {
            "name": "versions_from_parentdir",
            "location": 107,
            "return": [],
            "arguments": {
                "parentdir_prefix": [],
                "root": [],
                "verbose": []
            }
        },
        "git_get_keywords": {
            "name": "git_get_keywords",
            "location": 136,
            "return": [],
            "arguments": {
                "versionfile_abs": []
            }
        },
        "git_versions_from_keywords": {
            "name": "git_versions_from_keywords",
            "location": 165,
            "return": [],
            "arguments": {
                "keywords": [],
                "tag_prefix": [],
                "verbose": []
            }
        },
        "git_pieces_from_vcs": {
            "name": "git_pieces_from_vcs",
            "location": 221,
            "return": [],
            "arguments": {
                "tag_prefix": [],
                "root": [],
                "verbose": [],
                "run_command": []
            }
        },
        "plus_or_dot": {
            "name": "plus_or_dot",
            "location": 306,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440": {
            "name": "render_pep440",
            "location": 313,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440_pre": {
            "name": "render_pep440_pre",
            "location": 337,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440_post": {
            "name": "render_pep440_post",
            "location": 353,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_pep440_old": {
            "name": "render_pep440_old",
            "location": 380,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_git_describe": {
            "name": "render_git_describe",
            "location": 402,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render_git_describe_long": {
            "name": "render_git_describe_long",
            "location": 422,
            "return": [],
            "arguments": {
                "pieces": []
            }
        },
        "render": {
            "name": "render",
            "location": 442,
            "return": [],
            "arguments": {
                "pieces": [],
                "style": []
            }
        },
        "get_versions": {
            "name": "get_versions",
            "location": 480,
            "return": [],
            "arguments": {}
        },
        "register_vcs_handler.decorate": {
            "name": "decorate",
            "location": 62,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "robotframework-seleniumtestability-master/src/SeleniumTestability/__init__.py": {}
}
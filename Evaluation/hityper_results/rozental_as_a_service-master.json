{
    "rozental_as_a_service-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "get_long_description": {
            "name": "get_long_description",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/args_utils.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "prepare_arguments": {
            "name": "prepare_arguments",
            "location": 66,
            "return": [
                "dict[typing.Text, bool]"
            ],
            "arguments": {
                "argparse_args": []
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/ast_utils.py": {
        "extract_all_constants_from_ast": {
            "name": "extract_all_constants_from_ast",
            "location": 6,
            "return": [
                "list[]"
            ],
            "arguments": {
                "ast_tree": [
                    "int"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/common_types.py": {},
    "rozental_as_a_service-master/rozental_as_a_service/config.py": {},
    "rozental_as_a_service-master/rozental_as_a_service/config_utils.py": {
        "get_params_from_config": {
            "name": "get_params_from_config",
            "location": 7,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "config_path": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/db_utils.py": {
        "save_ya_speller_results_to_db": {
            "name": "save_ya_speller_results_to_db",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "speller_result": [
                    "str",
                    "None",
                    "list[int]",
                    "bool"
                ],
                "words": [
                    "str",
                    "dict[typing.Hashable, typing.Any]"
                ],
                "db_path": [
                    "str"
                ]
            }
        },
        "get_ya_speller_cache_from_db": {
            "name": "get_ya_speller_cache_from_db",
            "location": 24,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "words": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "list[str]",
                    "typing.Any",
                    "dict[, ]"
                ],
                "db_path": [
                    "str"
                ]
            }
        },
        "create_db": {
            "name": "create_db",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "db_path": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "get_existing_words_in_db": {
            "name": "get_existing_words_in_db",
            "location": 42,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "words": [
                    "str",
                    "None"
                ],
                "connection": []
            }
        },
        "fetch_words_info_from_db": {
            "name": "fetch_words_info_from_db",
            "location": 51,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "words": [
                    "str",
                    "list[]",
                    "dict[str, str]",
                    "int"
                ],
                "connection": []
            }
        },
        "insert_db_words_info": {
            "name": "insert_db_words_info",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "bytes",
                    "str"
                ],
                "connection": []
            }
        },
        "is_table_exists": {
            "name": "is_table_exists",
            "location": 69,
            "return": [
                "bool"
            ],
            "arguments": {
                "db_path": [
                    "str",
                    "bytes"
                ],
                "table_name": [
                    "str"
                ]
            }
        },
        "is_obscene_table_has_data": {
            "name": "is_obscene_table_has_data",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "db_path": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "create_obscene_base_table": {
            "name": "create_obscene_base_table",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "db_path": [
                    "str"
                ]
            }
        },
        "save_obscene_words_to_db": {
            "name": "save_obscene_words_to_db",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "db_path": [
                    "str",
                    "list[int]"
                ],
                "obscene_words": [
                    "str",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "load_obscene_words": {
            "name": "load_obscene_words",
            "location": 104,
            "return": [
                "set[]"
            ],
            "arguments": {
                "db_path": [
                    "str",
                    "list[int]"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/extractors_utils.py": {
        "extract_words": {
            "name": "extract_words",
            "location": 7,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_constants": [],
                "min_word_length": [
                    "int"
                ],
                "only_russian": [
                    "bool"
                ],
                "strip_urls": [
                    "bool"
                ]
            }
        },
        "process_raw_constant": {
            "name": "process_raw_constant",
            "location": 48,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "constant": [],
                "min_word_length": []
            }
        },
        "process_camelcased_words": {
            "name": "process_camelcased_words",
            "location": 64,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_camelcase_words": []
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/files_utils.py": {
        "is_path_in_exclude_list": {
            "name": "is_path_in_exclude_list",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str",
                    "list[str]"
                ],
                "exclude": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "get_all_filepathes_recursively": {
            "name": "get_all_filepathes_recursively",
            "location": 14,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "path": [],
                "exclude": [
                    "list[str]",
                    "str",
                    "bytes"
                ],
                "extension": [
                    "str",
                    "None",
                    "typing.Sequence[str]",
                    "list[]"
                ]
            }
        },
        "get_content_from_file": {
            "name": "get_content_from_file",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ],
                "guess_encoding": [
                    "bool",
                    "list[str]",
                    "str",
                    "None"
                ]
            }
        },
        "get_config_path": {
            "name": "get_config_path",
            "location": 38,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "base_path": [
                    "str",
                    "None"
                ],
                "config_path": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/list_utils.py": {
        "chunks": {
            "name": "chunks",
            "location": 4,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "some_list": [],
                "chunk_size": [
                    "int",
                    "list[]",
                    "list[int]",
                    "list[tuple[typing.Union[str,int]]]",
                    "list[list[int]]"
                ]
            }
        },
        "flat": {
            "name": "flat",
            "location": 9,
            "return": [
                "list[typing.Union[typing.Text,int]]"
            ],
            "arguments": {
                "some_list": [
                    "list[list[]]",
                    "str",
                    "list[tuple[typing.Union[int,int,int]]]",
                    "list[]"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/logging_urils.py": {
        "set_logging_level": {
            "name": "set_logging_level",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "verbosity": [
                    "int"
                ],
                "logger": [],
                "max_logging": [
                    "int"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/obscene_utils.py": {
        "fetch_obscene_words_base_if_necessary": {
            "name": "fetch_obscene_words_base_if_necessary",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "db_path": [
                    "str"
                ]
            }
        },
        "fetch_obscene_words_from_github": {
            "name": "fetch_obscene_words_from_github",
            "location": 28,
            "return": [
                "list[]"
            ],
            "arguments": {}
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/rozental.py": {
        "extract_all_constants_from_path": {
            "name": "extract_all_constants_from_path",
            "location": 47,
            "return": [
                "list[]"
            ],
            "arguments": {
                "path": [],
                "exclude": [],
                "process_dots": [],
                "processes_amount": [],
                "verbosity": [
                    "int"
                ]
            }
        },
        "extract_all_constants_from_files": {
            "name": "extract_all_constants_from_files",
            "location": 92,
            "return": [
                "list[]"
            ],
            "arguments": {
                "files_pathes": [],
                "extractors": [],
                "verbosity": [
                    "int"
                ]
            }
        },
        "fetch_typos_info": {
            "name": "fetch_typos_info",
            "location": 115,
            "return": [
                "list[]"
            ],
            "arguments": {
                "string_constants": [],
                "backends": []
            }
        },
        "reorder_vocabulary": {
            "name": "reorder_vocabulary",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "vocabulary_path": []
            }
        },
        "main": {
            "name": "main",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/strings_extractors.py": {
        "extract_from_python_src": {
            "name": "extract_from_python_src",
            "location": 15,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_content": [
                    "str",
                    "bytes",
                    "list[str]",
                    "int"
                ]
            }
        },
        "extract_from_html": {
            "name": "extract_from_html",
            "location": 22,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_content": [
                    "str",
                    "typing.Mapping",
                    "bytes",
                    "bool"
                ]
            }
        },
        "extract_from_markdown": {
            "name": "extract_from_markdown",
            "location": 26,
            "return": [],
            "arguments": {
                "raw_content": [
                    "str",
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "extract_from_js": {
            "name": "extract_from_js",
            "location": 35,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_content": [
                    "str",
                    "list[dict[str, typing.Any]]",
                    "None"
                ]
            }
        },
        "extract_from_po": {
            "name": "extract_from_po",
            "location": 43,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_content": [
                    "str"
                ]
            }
        },
        "_extract_from_python_ast": {
            "name": "_extract_from_python_ast",
            "location": 53,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_content": [
                    "str"
                ]
            }
        },
        "_extract_from_python_code_comments": {
            "name": "_extract_from_python_code_comments",
            "location": 61,
            "return": [
                "list[]"
            ],
            "arguments": {
                "raw_content": [
                    "str",
                    "int",
                    "tuple[typing.Union[str,str,str]]"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/text_utils.py": {
        "is_camel_case_word": {
            "name": "is_camel_case_word",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "word": [
                    "float",
                    "list['cirq.Qid']",
                    "str",
                    "list[\"libkol.Item\"]"
                ]
            }
        },
        "split_camel_case_words": {
            "name": "split_camel_case_words",
            "location": 15,
            "return": [
                "list[]"
            ],
            "arguments": {
                "camel_cased_word": []
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/typos_backends.py": {
        "process_with_vocabulary": {
            "name": "process_with_vocabulary",
            "location": 20,
            "return": [
                "tuple[typing.Union[list[],str,list[list[int]]]]",
                "tuple[list[typing.Union[typing.Text,list[int]]]]"
            ],
            "arguments": {
                "words": [
                    "str",
                    "list[list[int]]"
                ],
                "vocabulary_path": [
                    "str"
                ]
            }
        },
        "_process_ya_speller_response": {
            "name": "_process_ya_speller_response",
            "location": 100,
            "return": [
                "tuple[typing.Union[list[dict[typing.Text, ]],list[typing.Text]]]"
            ],
            "arguments": {
                "response": [],
                "words": [
                    "str"
                ],
                "db_path": [
                    "str",
                    "None"
                ]
            }
        },
        "YaSpellerBackend.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_path": [
                    "str",
                    "None"
                ]
            }
        },
        "YaSpellerBackend.__call__": {
            "name": "__call__",
            "location": 37,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "words": [
                    "bytes",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "YaSpellerBackend._process_with_db_cache": {
            "name": "_process_with_db_cache",
            "location": 52,
            "return": [
                "tuple[list[]]",
                "tuple[list[dict[typing.Text, typing.Union[list[],list[int],str]]]]"
            ],
            "arguments": {
                "self": [],
                "words": [
                    "list[]"
                ]
            }
        },
        "YaSpellerBackend._process_with_ya_speller": {
            "name": "_process_with_ya_speller",
            "location": 79,
            "return": [
                "tuple[typing.Union[list[],dict[, ]]]",
                "tuple[list[]]"
            ],
            "arguments": {
                "self": [],
                "words": [
                    "dict[, ]"
                ]
            }
        },
        "AutocorrectCheckerBackend.__init__": {
            "name": "__init__",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AutocorrectCheckerBackend.__call__": {
            "name": "__call__",
            "location": 127,
            "return": [
                "tuple[list[dict[typing.Text, list[]]]]"
            ],
            "arguments": {
                "self": [],
                "words": [
                    "dict[, ]"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/__init__.py": {},
    "rozental_as_a_service-master/rozental_as_a_service/data/prepare_word_count.py": {
        "get_words": {
            "name": "get_words",
            "location": 16,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "filename": [],
                "encd": []
            }
        },
        "count_words": {
            "name": "count_words",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "src_filename": [],
                "encd": [
                    "None"
                ],
                "out_filename": [
                    "typing.Text"
                ]
            }
        }
    },
    "rozental_as_a_service-master/rozental_as_a_service/data/__init__.py": {},
    "rozental_as_a_service-master/tests/conftest.py": {
        "fake_default_config_name": {
            "name": "fake_default_config_name",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "fake_section_name": {
            "name": "fake_section_name",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "fake_custom_path_config_file": {
            "name": "fake_custom_path_config_file",
            "location": 20,
            "return": [
                "dict[, ]",
                "dict[str, typing.Any]",
                "typing.Type"
            ],
            "arguments": {
                "fake_default_config_name": [
                    "str",
                    "int",
                    "None"
                ],
                "tmpdir": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "fake_base_directory": {
            "name": "fake_base_directory",
            "location": 27,
            "return": [],
            "arguments": {
                "fake_default_config_name": [
                    "str"
                ],
                "tmpdir": []
            }
        },
        "get_temp_file_path": {
            "name": "get_temp_file_path",
            "location": 34,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "remove_file": [
                    "bool",
                    "str"
                ],
                "return_empty": [
                    "bool",
                    "str"
                ],
                "temp_file": []
            }
        },
        "fake_config_params": {
            "name": "fake_config_params",
            "location": 43,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {}
        },
        "fake_config_file": {
            "name": "fake_config_file",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "fake_section_name": [
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "fake_config_params": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "tmpdir": []
            }
        },
        "randomized_fake_argv": {
            "name": "randomized_fake_argv",
            "location": 70,
            "return": [
                "list[typing.Union[typing.Text,tuple[typing.Text]]]"
            ],
            "arguments": {}
        }
    },
    "rozental_as_a_service-master/tests/test_args_utils.py": {
        "test_parse_args": {
            "name": "test_parse_args",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "randomized_fake_argv": [
                    "dict[, ]"
                ]
            }
        }
    },
    "rozental_as_a_service-master/tests/test_config_utils.py": {
        "test_get_params_from_config": {
            "name": "test_get_params_from_config",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "fake_section_name": [
                    "str",
                    "dict[str, str]",
                    "typing.Callable[, ]"
                ],
                "fake_config_params": [
                    "str",
                    "list[str]",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "fake_config_file": [
                    "str",
                    "dict[, ]",
                    "None",
                    "int"
                ]
            }
        },
        "test_get_params_from_config_empty_section": {
            "name": "test_get_params_from_config_empty_section",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "fake_section_name": [
                    "str",
                    "dict[, ]"
                ],
                "fake_config_params": [
                    "bool",
                    "str",
                    "None"
                ],
                "fake_config_file": [
                    "str",
                    "dict[, ]",
                    "None",
                    "int"
                ]
            }
        }
    },
    "rozental_as_a_service-master/tests/test_files_utils.py": {
        "test_get_config_path": {
            "name": "test_get_config_path",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "custom_path_provided": [
                    "str",
                    "bool",
                    "dict[int, set[str]]"
                ],
                "custom_path_exists": [
                    "str",
                    "bool",
                    "dict[int, set[str]]"
                ],
                "custom_path_matches": [
                    "str",
                    "None",
                    "bool",
                    "list[str]"
                ],
                "default_path_provided": [
                    "str",
                    "bool"
                ],
                "default_path_exists": [
                    "str",
                    "bool"
                ],
                "default_path_matches": [
                    "str",
                    "None",
                    "list[]",
                    "bool",
                    "typing.IO"
                ],
                "fake_custom_path_config_file": [
                    "str",
                    "bool",
                    "dict[int, set[str]]"
                ],
                "fake_base_directory": [
                    "str",
                    "bool"
                ],
                "fake_default_config_name": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "rozental_as_a_service-master/tests/test_integrational.py": {
        "test_finds_correct_py_files_typos": {
            "name": "test_finds_correct_py_files_typos",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "vocabulary_path": [],
                "expected_typos": []
            }
        }
    },
    "rozental_as_a_service-master/tests/test_list_utils.py": {
        "test_calculate_age_works_fine": {
            "name": "test_calculate_age_works_fine",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "test_value": [
                    "int",
                    "list[]",
                    "dict[str, float]",
                    "str"
                ],
                "expected_result": [
                    "int",
                    "list[]",
                    "dict[str, float]",
                    "str"
                ]
            }
        },
        "test_flat": {
            "name": "test_flat",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "rozental_as_a_service-master/tests/test_strings_extractors.py": {
        "_load_src_file": {
            "name": "_load_src_file",
            "location": 6,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "test_extract_from_python_src": {
            "name": "test_extract_from_python_src",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extract_from_html_src": {
            "name": "test_extract_from_html_src",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extract_from_markdown_src": {
            "name": "test_extract_from_markdown_src",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extract_from_js": {
            "name": "test_extract_from_js",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extract_from_po": {
            "name": "test_extract_from_po",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "rozental_as_a_service-master/tests/test_text_utils.py": {
        "test_is_camel_case_word": {
            "name": "test_is_camel_case_word",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_split_camel_case_words": {
            "name": "test_split_camel_case_words",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "rozental_as_a_service-master/tests/test_files/src_with_typos.py": {
        "start_ad_company": {
            "name": "start_ad_company",
            "location": 2,
            "return": [
                "bool"
            ],
            "arguments": {
                "company": []
            }
        }
    }
}
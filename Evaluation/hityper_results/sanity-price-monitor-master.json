{
    "sanity-price-monitor-master/log_config.py": {
        "setup_logging": {
            "name": "setup_logging",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_set_external_modules_logging": {
            "name": "_set_external_modules_logging",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/sanity.py": {},
    "sanity-price-monitor-master/pricemonitor/coin_volatility.py": {
        "CoinVolatility.get": {
            "name": "get",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coin_symbol": [
                    "bool",
                    "str",
                    "None"
                ],
                "market": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "CoinVolatilityFile.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "volatility_file_path": [
                    "str"
                ]
            }
        },
        "CoinVolatilityFile.get": {
            "name": "get",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "coin_symbol": [
                    "str",
                    "Exception",
                    "int",
                    "list[]"
                ],
                "market": [
                    "str",
                    "Exception",
                    "int",
                    "list[]"
                ]
            }
        },
        "CoinNotDefined.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "None",
                    "bool"
                ],
                "market": [
                    "str",
                    "None",
                    "bool"
                ],
                "coin": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "configuration_file_path": [
                    "str",
                    "None",
                    "bool",
                    "bytes"
                ],
                "coin_volatility": [
                    "str",
                    "None",
                    "dict[str, typing.Any]",
                    "list[typing.Any]",
                    "list[str]",
                    "bool"
                ],
                "contract_address": [
                    "str",
                    "None",
                    "bool"
                ],
                "network": [
                    "str",
                    "None",
                    "dict[str, typing.Any]",
                    "list[typing.Any]",
                    "list[str]",
                    "bool"
                ],
                "private_key": [
                    "None",
                    "bytes",
                    "str",
                    "int"
                ]
            }
        },
        "Config._filter_market_coin": {
            "name": "_filter_market_coin",
            "location": 39,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "symbol": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Config._filter_internaly_used_coins": {
            "name": "_filter_internaly_used_coins",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "list[]",
                    "list[str]"
                ]
            }
        },
        "Config._prepare_coin_from_config_token": {
            "name": "_prepare_coin_from_config_token",
            "location": 46,
            "return": [
                "Coin"
            ],
            "arguments": {
                "self": [],
                "symbol": [
                    "str"
                ],
                "params": [
                    "str"
                ]
            }
        },
        "Config.get_smart_contract_abi": {
            "name": "get_smart_contract_abi",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "Config._load_config": {
            "name": "_load_config",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/exceptions.py": {},
    "sanity-price-monitor-master/pricemonitor/monitor.py": {
        "run_on_loop": {
            "name": "run_on_loop",
            "location": 138,
            "return": [],
            "arguments": {
                "private_key": [],
                "contract_address": [],
                "network_name": [],
                "task_name": [],
                "configuration_file_path": []
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/__init__.py": {},
    "sanity-price-monitor-master/pricemonitor/consuming/consumers.py": {
        "DataConsumer.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "PrintValues._print": {
            "name": "_print",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "typing.Any",
                    "None",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "PrintValuesAndAverage.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[, ]"
                ]
            }
        },
        "PrintValuesAndAverage._print_averages": {
            "name": "_print_averages",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrintValuesAndAverage._save_data": {
            "name": "_save_data",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "list[pricemonitor.producing.data_producer.PairPrice]",
                    "bytes",
                    "str",
                    "list[list[typing.Any]]"
                ]
            }
        },
        "ContractUpdater.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [],
                "force": [
                    "bool"
                ]
            }
        },
        "ContractUpdaterForce.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "typing.Mapping"
                ],
                "force": [
                    "bool"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/consuming/__init__.py": {},
    "sanity-price-monitor-master/pricemonitor/producing/all_token_prices.py": {
        "AllTokenPrices.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coins": [
                    "int",
                    "bytes",
                    "str"
                ],
                "market": [
                    "int",
                    "bytes",
                    "str"
                ],
                "exchange_data_action": [
                    "None",
                    "bool",
                    "str",
                    "typing.Sequence[str]",
                    "bytes"
                ]
            }
        },
        "AllTokenPrices._log_missing_pairs": {
            "name": "_log_missing_pairs",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pair_prices": [
                    "str",
                    "dict[str, set[str]]"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/producing/data_producer.py": {
        "DataProducer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coins": [
                    "int",
                    "float"
                ],
                "market": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/producing/exchanges.py": {},
    "sanity-price-monitor-master/pricemonitor/producing/exchange_prices.py": {
        "calculate_seconds_left_to_sleep": {
            "name": "calculate_seconds_left_to_sleep",
            "location": 13,
            "return": [],
            "arguments": {
                "start_time": [],
                "interval_in_milliseconds": []
            }
        },
        "ExchangePrices.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "coins": [],
                "market": [],
                "exchanges": [],
                "exchange_data_action": []
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/producing/feed_prices.py": {
        "_find_coin": {
            "name": "_find_coin",
            "location": 130,
            "return": [
                "tuple[typing.Union[typing.Literal,typing.Literal,typing.Literal]]",
                "dict[str, typing.Any]",
                "str",
                "dict[, ]",
                "list[]",
                "int"
            ],
            "arguments": {
                "symbol": [
                    "str",
                    "int",
                    "None"
                ],
                "coins": [
                    "str"
                ]
            }
        },
        "DigixFeed.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coins": [
                    "bool",
                    "list[str]",
                    "None",
                    "dict[, ]"
                ],
                "market": [
                    "bool",
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Callable[, ]"
                ],
                "network_access": [
                    "bool",
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Callable[, ]"
                ]
            }
        },
        "DigixFeed._get_price_from_feed": {
            "name": "_get_price_from_feed",
            "location": 52,
            "return": [],
            "arguments": {
                "feed": [
                    "str"
                ],
                "symbol": [
                    "str",
                    "float",
                    "None",
                    "bool",
                    "set[str]"
                ]
            }
        },
        "BtcFeed.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coins": [
                    "str",
                    "bool",
                    "None",
                    "dict[, ]"
                ],
                "market": [
                    "bool",
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Callable[, ]"
                ],
                "network_access": [
                    "bool",
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Callable[, ]"
                ]
            }
        },
        "FeedPrices.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coins": [
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Callable[A, bool]"
                ],
                "market": [
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Callable[A, bool]"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/producing/__init__.py": {},
    "sanity-price-monitor-master/pricemonitor/storing/ethereum_nodes.py": {
        "EthereumNetwork.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nodes": [
                    "str",
                    "list[dict[str, typing.Any]]",
                    "int",
                    "typing.Callable[..., T]"
                ],
                "etherscan_prefix": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "EthereumNetwork.current_node": {
            "name": "current_node",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EthereumNetwork.next_node": {
            "name": "next_node",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EthereumNetwork.etherscan": {
            "name": "etherscan",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "tx": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/storing/node_errors.py": {
        "detect_replacing_tx_low_gas_price": {
            "name": "detect_replacing_tx_low_gas_price",
            "location": 24,
            "return": [],
            "arguments": {
                "message": [
                    "str",
                    "dict[str, typing.Any]",
                    "int",
                    "bytes"
                ]
            }
        },
        "detect_nonce_too_low": {
            "name": "detect_nonce_too_low",
            "location": 32,
            "return": [],
            "arguments": {
                "message": [
                    "bytes",
                    "str",
                    "typing.Callable[bytes, bytes]"
                ]
            }
        },
        "_detect_replacing_tx_low_gas_price_parity": {
            "name": "_detect_replacing_tx_low_gas_price_parity",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "_detect_replacing_tx_low_gas_price_geth": {
            "name": "_detect_replacing_tx_low_gas_price_geth",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "_detect_nonce_too_low_parity": {
            "name": "_detect_nonce_too_low_parity",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        },
        "_detect_nonce_too_low_geth": {
            "name": "_detect_nonce_too_low_geth",
            "location": 59,
            "return": [
                "bool"
            ],
            "arguments": {
                "message": [
                    "str"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/storing/storing.py": {
        "SanityContractUpdater.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "web3_connector": [
                    "str",
                    "list[]",
                    "dict[, ]"
                ],
                "config": [
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "SanityContractUpdater._prepare_rates_for_update": {
            "name": "_prepare_rates_for_update",
            "location": 93,
            "return": [
                "list[typing.Union[pricemonitor.producing.data_producer.PairPrice,typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "previous_rates": [],
                "new_rates": [
                    "list[pricemonitor.producing.data_producer.PairPrice]",
                    "str"
                ]
            }
        },
        "SanityContractUpdater._should_update_price": {
            "name": "_should_update_price",
            "location": 113,
            "return": [
                "bool"
            ],
            "arguments": {
                "coin": [
                    "str",
                    "typing.Mapping"
                ],
                "market": [
                    "dict[str, str]",
                    "str"
                ],
                "previous_rate": [
                    "float",
                    "bool"
                ],
                "current_rate": [
                    "float",
                    "bool"
                ]
            }
        },
        "SanityContractUpdater._get_previous_rate": {
            "name": "_get_previous_rate",
            "location": 140,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "coin": [
                    "str",
                    "bool"
                ],
                "market": [
                    "str",
                    "bool"
                ],
                "rates": [
                    "str"
                ]
            }
        },
        "ContractRateArgumentsConverter.__init__": {
            "name": "__init__",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "market": [
                    "int",
                    "float"
                ]
            }
        },
        "ContractRateArgumentsConverter.format_coin_prices_for_setter": {
            "name": "format_coin_prices_for_setter",
            "location": 157,
            "return": [
                "list[list[]]"
            ],
            "arguments": {
                "coin_price_data": [
                    "list[pricemonitor.producing.data_producer.PairPrice]",
                    "str",
                    "list[dict[, ]]",
                    "dict[, ]"
                ]
            }
        },
        "ContractRateArgumentsConverter.format_coin_for_getter": {
            "name": "format_coin_for_getter",
            "location": 174,
            "return": [
                "list[]"
            ],
            "arguments": {
                "coin": [
                    "int",
                    "typing.Callable[bytes, None]",
                    "float"
                ]
            }
        },
        "ContractRateArgumentsConverter.convert_rate_from_contract_units": {
            "name": "convert_rate_from_contract_units",
            "location": 178,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "rate_from_contract": [
                    "float",
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "ContractRateArgumentsConverter.convert_price_to_contract_units": {
            "name": "convert_price_to_contract_units",
            "location": 182,
            "return": [
                "int"
            ],
            "arguments": {
                "price": [
                    "float",
                    "str",
                    "list[]"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/storing/web3_connector.py": {
        "Web3Connector.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "web3_interface": [],
                "private_key": [],
                "contract_abi": [],
                "contract_address": []
            }
        },
        "Web3ConnectionError.__init__": {
            "name": "__init__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "call_function": [],
                "function_name": [],
                "eth_args": []
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/storing/web3_interface.py": {
        "EthereumNodeCallError.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "list[]",
                    "bool",
                    "None",
                    "float"
                ],
                "method_name": [
                    "str",
                    "None",
                    "bool",
                    "float"
                ],
                "params": [
                    "str",
                    "list[]",
                    "bool",
                    "None",
                    "float"
                ],
                "response_status": [
                    "int",
                    "bytes",
                    "str",
                    "None",
                    "list[str]"
                ],
                "response_reason": [
                    "bool",
                    "str",
                    "dict[str, str]",
                    "dict[, ]",
                    "list[]",
                    "None"
                ],
                "response_text": [
                    "str",
                    "None",
                    "typing.Mapping",
                    "list[str]"
                ],
                "request_headers": [
                    "str",
                    "bool",
                    "float"
                ],
                "request_body": [
                    "str",
                    "bool",
                    "float"
                ]
            }
        },
        "EthereumNodeCallError.__repr__": {
            "name": "__repr__",
            "location": 38,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "EthereumNodeCallNoResultError.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "int"
                ],
                "method_name": [
                    "str",
                    "None"
                ],
                "params": [
                    "str",
                    "int"
                ],
                "request_headers": [
                    "str",
                    "int"
                ],
                "request_body": [
                    "str",
                    "int"
                ],
                "response_text": [
                    "str",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "response_json": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "EthereumNodeCallNoResultError.__repr__": {
            "name": "__repr__",
            "location": 65,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Web3Interface.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "network": [
                    "int",
                    "float"
                ]
            }
        },
        "Web3Interface.call_function": {
            "name": "call_function",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "priv_key": [
                    "bool",
                    "str",
                    "bytes",
                    "None",
                    "typing.Callable[T, typing.Any]"
                ],
                "value": [
                    "bool",
                    "str",
                    "bytes",
                    "None",
                    "typing.Callable[T, typing.Any]"
                ],
                "contract_hash": [
                    "bool",
                    "str",
                    "bytes",
                    "None",
                    "typing.Callable[T, typing.Any]"
                ],
                "contract_abi": [
                    "bool",
                    "list[cmk.utils.type_defs.HostKey]",
                    "None",
                    "str"
                ],
                "function_name": [
                    "bool",
                    "str",
                    "typing.Mapping",
                    "dict[str, typing.Any]"
                ],
                "eth_args": [
                    "bool",
                    "str",
                    "typing.Mapping",
                    "dict[str, typing.Any]"
                ],
                "use_increased_gas_price": [
                    "bool"
                ]
            }
        },
        "Web3Interface.call_const_function": {
            "name": "call_const_function",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "priv_key": [
                    "bool",
                    "typing.Iterable[str]",
                    "float",
                    "str",
                    "None"
                ],
                "value": [
                    "bool",
                    "typing.Iterable[str]",
                    "float",
                    "str",
                    "None"
                ],
                "contract_hash": [],
                "contract_abi": [
                    "dict[, ]",
                    "str",
                    "int",
                    "list[cmk.utils.type_defs.HostKey]",
                    "None",
                    "list[str]"
                ],
                "function_name": [
                    "bool",
                    "str",
                    "list[str]",
                    "None"
                ],
                "eth_args": [
                    "str",
                    "bool",
                    "list[str]",
                    "None"
                ]
            }
        },
        "Web3Interface.is_tx_confirmed": {
            "name": "is_tx_confirmed",
            "location": 133,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tx_hash": []
            }
        },
        "Web3Interface.wait_for_tx_confirmation": {
            "name": "wait_for_tx_confirmation",
            "location": 143,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tx_hash": [
                    "str",
                    "list[dict[, ]]",
                    "list[]"
                ]
            }
        },
        "Web3Interface.use_next_node": {
            "name": "use_next_node",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Web3Interface.prepare_etherscan_url": {
            "name": "prepare_etherscan_url",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "tx": [
                    "str",
                    "float"
                ]
            }
        },
        "Web3Interface._json_call": {
            "name": "_json_call",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "method_name": [
                    "str"
                ],
                "params": [
                    "str"
                ]
            }
        },
        "Web3Interface._get_num_transactions": {
            "name": "_get_num_transactions",
            "location": 202,
            "return": [
                "int",
                "tuple[typing.Union[typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal]]",
                "typing.Type"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str",
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "None"
                ]
            }
        },
        "Web3Interface._get_gas_price_in_wei": {
            "name": "_get_gas_price_in_wei",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Web3Interface._eval_startgas": {
            "name": "_eval_startgas",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "src": [
                    "str",
                    "list[]"
                ],
                "dst": [
                    "str",
                    "list[]"
                ],
                "value": [
                    "str",
                    "list[]"
                ],
                "data": [],
                "gas_price": [
                    "str",
                    "list[]"
                ]
            }
        },
        "Web3Interface._make_transaction": {
            "name": "_make_transaction",
            "location": 226,
            "return": [
                "int",
                "str",
                "list[]",
                "None",
                "tuple[typing.Union[str,str,str,str,str,str,str,str]]"
            ],
            "arguments": {
                "self": [],
                "src_priv_key": [
                    "bool"
                ],
                "dst_address": [
                    "str",
                    "set[int]",
                    "None",
                    "dict[, ]",
                    "int",
                    "dict[str, list[str]]"
                ],
                "value": [
                    "str",
                    "set[int]",
                    "None",
                    "dict[, ]",
                    "int",
                    "dict[str, list[str]]"
                ],
                "data": [
                    "str",
                    "set[int]",
                    "None",
                    "dict[, ]",
                    "int",
                    "dict[str, list[str]]"
                ],
                "use_increased_gas_price": [
                    "bool",
                    "dict[, ]",
                    "tuple[str]",
                    "str",
                    "list[]",
                    "list[str]"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/storing/__init__.py": {},
    "sanity-price-monitor-master/pricemonitor/volatility/calculate_from_collector.py": {
        "get_average_of_hourly_volatility": {
            "name": "get_average_of_hourly_volatility",
            "location": 16,
            "return": [],
            "arguments": {
                "trades": [
                    "str",
                    "None",
                    "dict[, ]",
                    "int",
                    "list[str]"
                ],
                "exchange_filter": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int",
                    "list[str]"
                ]
            }
        },
        "_verify_timestamp_order": {
            "name": "_verify_timestamp_order",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "trades": [
                    "str"
                ]
            }
        },
        "run_on_loop": {
            "name": "run_on_loop",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/pricemonitor/volatility/trades_from_collector_archive.py": {
        "normalize_trade_values": {
            "name": "normalize_trade_values",
            "location": 88,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "trade": [
                    "str"
                ]
            }
        },
        "convert_values_to_uppercase": {
            "name": "convert_values_to_uppercase",
            "location": 99,
            "return": [
                "dict[typing.Union[tuple[typing.Union[str,int]],tuple[typing.Union[str,list[typing.Any]]]], ]"
            ],
            "arguments": {
                "original_dict": [
                    "dict[str, int]",
                    "dict[, ]",
                    "dict[str, list[typing.Any]]",
                    "dict[str, str]"
                ]
            }
        },
        "TradesDownloader._prepare_trades_url_from_line": {
            "name": "_prepare_trades_url_from_line",
            "location": 59,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "line": [
                    "str"
                ]
            }
        },
        "TradesFromCollectorArchive.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coins": [
                    "int",
                    "float"
                ],
                "market": [
                    "int",
                    "float"
                ],
                "trades_downloader": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/volatility/volatility_calculator.py": {
        "calculate_volatility_score": {
            "name": "calculate_volatility_score",
            "location": 8,
            "return": [
                "None",
                "float"
            ],
            "arguments": {
                "data": [
                    "int",
                    "dict[, ]",
                    "str",
                    "None"
                ],
                "exchange_filter": [
                    "None",
                    "list[str]",
                    "int",
                    "str"
                ]
            }
        },
        "prepare_time_range": {
            "name": "prepare_time_range",
            "location": 36,
            "return": [
                "int"
            ],
            "arguments": {
                "df": [
                    "str"
                ],
                "end_time": [],
                "offset": []
            }
        },
        "calculate_volatility": {
            "name": "calculate_volatility",
            "location": 40,
            "return": [
                "float"
            ],
            "arguments": {
                "data_in_slice": [
                    "list[bytes]",
                    "str"
                ]
            }
        }
    },
    "sanity-price-monitor-master/pricemonitor/volatility/__init__.py": {},
    "sanity-price-monitor-master/tests/test_btc_feed.py": {
        "FixedNetwork.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "price": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "sanity-price-monitor-master/tests/test_coinVolatility.py": {
        "test_coinVolatilityFile_getVolatility_setTo5percent__fivePercentReturned": {
            "name": "test_coinVolatilityFile_getVolatility_setTo5percent__fivePercentReturned",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_coinVolatilityFile_getVolatility_coinNotDefined__defaultValueReturned": {
            "name": "test_coinVolatilityFile_getVolatility_coinNotDefined__defaultValueReturned",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": []
            }
        },
        "_get_coin_volatility_json_file": {
            "name": "_get_coin_volatility_json_file",
            "location": 26,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "sanity-price-monitor-master/tests/test_contractPriceFormatter.py": {
        "_get_target_class": {
            "name": "_get_target_class",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "_make_one": {
            "name": "_make_one",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_initial": {
            "name": "test_initial",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_format_coin_prices_for_setter": {
            "name": "test_format_coin_prices_for_setter",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/tests/test_digix_feed.py": {
        "test_initial": {
            "name": "test_initial",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/tests/test_ethereumNodes.py": {
        "test__current_node__returns_node": {
            "name": "test__current_node__returns_node",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test__current_node__returns_node_when_asking_multiple_times": {
            "name": "test__current_node__returns_node_when_asking_multiple_times",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test__next_node__returns_next_node": {
            "name": "test__next_node__returns_next_node",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test__next_node_is_cyclic__returns_next_node": {
            "name": "test__next_node_is_cyclic__returns_next_node",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test__etherscan__returns_etherscan_url": {
            "name": "test__etherscan__returns_etherscan_url",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test__etherscan__returns_unique_etherscan_url_per_tx": {
            "name": "test__etherscan__returns_unique_etherscan_url_per_tx",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/tests/test_exchanges.py": {
        "CcxtExchangeNoTrades.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CcxtExchangeNoTradesFromLastMinute._time_now_in_millis_from_epoch": {
            "name": "_time_now_in_millis_from_epoch",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/tests/test_sanityContractUpdater.py": {
        "test_initial": {
            "name": "test_initial",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Web3ConnectorFakeWithInitialOMG.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigFake.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sanity-price-monitor-master/tests/test_storing.py": {},
    "sanity-price-monitor-master/tests/__init__.py": {},
    "sanity-price-monitor-master/tools/__init__.py": {},
    "sanity-price-monitor-master/tools/json_changes/__init__.py": {},
    "sanity-price-monitor-master/tools/json_changes/__main__.py": {
        "calculate_diff": {
            "name": "calculate_diff",
            "location": 43,
            "return": [
                "Diff"
            ],
            "arguments": {
                "current_tokens": [
                    "str"
                ],
                "new_tokens": [
                    "str"
                ]
            }
        },
        "print_diff": {
            "name": "print_diff",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "diff": [
                    "int"
                ]
            }
        },
        "_create_backup": {
            "name": "_create_backup",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "bool"
                ]
            }
        },
        "_update_coin_volatility_file": {
            "name": "_update_coin_volatility_file",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "coin_volatility_file": [],
                "token_diff": [
                    "str",
                    "list[str]",
                    "None",
                    "int"
                ]
            }
        },
        "run_on_loop": {
            "name": "run_on_loop",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "coin_volatility_file": [
                    "str"
                ],
                "new_json_url": [
                    "str"
                ]
            }
        },
        "_setup_logging": {
            "name": "_setup_logging",
            "location": 106,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "_setup_logging._set_external_modules_logging": {
            "name": "_set_external_modules_logging",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/tools/json_changes/tests/test_diff.py": {
        "test_diff__no_changes": {
            "name": "test_diff__no_changes",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_diff__knc_added": {
            "name": "test_diff__knc_added",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_diff__omg_removed": {
            "name": "test_diff__omg_removed",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_diff__knc_added_omg_removed": {
            "name": "test_diff__knc_added_omg_removed",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "sanity-price-monitor-master/tools/json_changes/tests/__init__.py": {},
    "sanity-price-monitor-master/tools/sanity_of_sanity/main.py": {
        "_load_config": {
            "name": "_load_config",
            "location": 58,
            "return": [],
            "arguments": {
                "deployment_file_path": [
                    "str"
                ]
            }
        },
        "_prepare_coin_from_config_token": {
            "name": "_prepare_coin_from_config_token",
            "location": 63,
            "return": [
                "Coin"
            ],
            "arguments": {
                "symbol": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "params": [
                    "str"
                ]
            }
        },
        "_filter_internally_used": {
            "name": "_filter_internally_used",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "params": [
                    "list[]",
                    "list[str]"
                ]
            }
        },
        "get_tokens_from_deployment_json": {
            "name": "get_tokens_from_deployment_json",
            "location": 71,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "deployment_file_path": [
                    "str",
                    "dict[, ]",
                    "list[]",
                    "None"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "deployment_file_path": [
                    "str"
                ],
                "main_contract_address": [
                    "typing.Text"
                ],
                "main_contract_abi": [
                    "typing.Text"
                ],
                "sanity_address": [
                    "typing.Text"
                ],
                "sanity_abi": [
                    "typing.Text"
                ]
            }
        },
        "_log_zero_price_tokens": {
            "name": "_log_zero_price_tokens",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "now": []
            }
        },
        "Compare.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "str",
                    "list[str]"
                ],
                "main_contract_address": [
                    "str",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "main_contract_abi": [
                    "str",
                    "bool"
                ],
                "sanity_address": [
                    "str",
                    "None",
                    "typing.Iterable[typing.Any]"
                ],
                "sanity_abi": [
                    "str",
                    "bool"
                ]
            }
        },
        "Compare.sanity_rate": {
            "name": "sanity_rate",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str"
                ]
            }
        },
        "Compare.contract_price": {
            "name": "contract_price",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "list[str]",
                    "str"
                ],
                "base_token": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "Compare.compare_for_token": {
            "name": "compare_for_token",
            "location": 48,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "base_token": [
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "Compare.node_failed": {
            "name": "node_failed",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sanity-price-monitor-master/tools/sanity_of_sanity/__init__.py": {},
    "sanity-price-monitor-master/util/calculations.py": {
        "calculate_average": {
            "name": "calculate_average",
            "location": 1,
            "return": [
                "float",
                "None"
            ],
            "arguments": {
                "values": []
            }
        }
    },
    "sanity-price-monitor-master/util/functional.py": {
        "first": {
            "name": "first",
            "location": 1,
            "return": [
                "str",
                "frozenset"
            ],
            "arguments": {
                "iterable": [
                    "list[str]",
                    "str",
                    "tuple[frozenset]"
                ],
                "condition": [
                    "list[str]",
                    "str",
                    "tuple[frozenset]",
                    "int"
                ]
            }
        }
    },
    "sanity-price-monitor-master/util/network.py": {
        "add_url_params": {
            "name": "add_url_params",
            "location": 52,
            "return": [],
            "arguments": {
                "url": [
                    "str"
                ],
                "params": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "sanity-price-monitor-master/util/string_utils.py": {
        "_prepare_title": {
            "name": "_prepare_title",
            "location": 1,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "text": [],
                "char": [
                    "typing.Text"
                ]
            }
        },
        "_is_yes": {
            "name": "_is_yes",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "should_update": [
                    "str"
                ]
            }
        }
    },
    "sanity-price-monitor-master/util/time.py": {
        "prepare_time_str": {
            "name": "prepare_time_str",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "minutes_ago_in_millis_since_epoch": {
            "name": "minutes_ago_in_millis_since_epoch",
            "location": 8,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "minutes": [
                    "float",
                    "int",
                    "str",
                    "tuple[int]"
                ]
            }
        }
    },
    "sanity-price-monitor-master/util/__init__.py": {}
}
{
    "sauna-bot-master/sauna_bot/dbhelper.py": {
        "DBHelper.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dbname": [
                    "typing.Text"
                ]
            }
        },
        "DBHelper.setup": {
            "name": "setup",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBHelper.add_user": {
            "name": "add_user",
            "location": 17,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "chat_id": [
                    "str",
                    "None"
                ]
            }
        },
        "DBHelper.update_item": {
            "name": "update_item",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "bytes",
                    "typing.Any",
                    "None",
                    "int"
                ],
                "key": [
                    "str",
                    "typing.Sequence[typing.MutableMapping]",
                    "dict[, ]"
                ],
                "value": [
                    "str",
                    "bytes",
                    "typing.Any",
                    "None",
                    "int"
                ]
            }
        },
        "DBHelper.__getitem__": {
            "name": "__getitem__",
            "location": 34,
            "return": [
                "DBRow"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "typing.Type",
                    "typing.Any",
                    "str",
                    "None"
                ]
            }
        },
        "DBHelper.get_all_rows": {
            "name": "get_all_rows",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBRow.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "dict[, ]",
                    "typing.Type",
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ],
                "data": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "list[]"
                ],
                "db": [
                    "dict[, ]",
                    "typing.Type",
                    "str",
                    "None",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "DBRow.__getitem__": {
            "name": "__getitem__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "dict[str, typing.Any]",
                    "typing.Type",
                    "typing.Collection",
                    "dict[, ]",
                    "list[]",
                    "typing.MutableMapping",
                    "str"
                ]
            }
        },
        "DBRow.__setitem__": {
            "name": "__setitem__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bool",
                    "dict[, ]"
                ],
                "value": [
                    "str",
                    "bool",
                    "dict[, ]"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/hoas.py": {
        "HoasInterface.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "login_params": [
                    "str",
                    "typing.Sequence[str]",
                    "dict[str, str]"
                ]
            }
        },
        "HoasInterface._login": {
            "name": "_login",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoasInterface.get_page": {
            "name": "get_page",
            "location": 52,
            "return": [
                "str",
                "dict[str, typing.Union[str,typing.Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HoasInterface.view_page": {
            "name": "view_page",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "service": [
                    "int"
                ],
                "date": [
                    "None",
                    "str"
                ],
                "cache_time": [
                    "int"
                ]
            }
        },
        "HoasInterface.reserve": {
            "name": "reserve",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "bool"
                ],
                "date": [
                    "bool"
                ]
            }
        },
        "HoasInterface.cancel_by_id": {
            "name": "cancel_by_id",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int",
                    "set[str]"
                ]
            }
        },
        "HoasInterface.cancel_by_datetime": {
            "name": "cancel_by_datetime",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "None",
                    "bool"
                ],
                "datetime_": [
                    "None",
                    "bool"
                ]
            }
        },
        "Hoas.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "accounts": [
                    "list[]"
                ]
            }
        },
        "Hoas.create_config": {
            "name": "create_config",
            "location": 114,
            "return": [
                "dict[, dict[typing.Text, dict[, ]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hoas.get_timetables": {
            "name": "get_timetables",
            "location": 151,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "int"
                ],
                "date": [
                    "None",
                    "int",
                    "str"
                ],
                "cache_time": [
                    "int"
                ]
            }
        },
        "Hoas.get_reservations": {
            "name": "get_reservations",
            "location": 163,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hoas.reserve": {
            "name": "reserve",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sauna-bot-master/sauna_bot/hoasparser.py": {
        "parse_csfr_token": {
            "name": "parse_csfr_token",
            "location": 15,
            "return": [],
            "arguments": {
                "soup": []
            }
        },
        "get_users_reservations": {
            "name": "get_users_reservations",
            "location": 21,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "soup": []
            }
        },
        "parse_common_saunas": {
            "name": "parse_common_saunas",
            "location": 45,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "text": []
            }
        },
        "parse_users_reservations": {
            "name": "parse_users_reservations",
            "location": 65,
            "return": [
                "Reservation"
            ],
            "arguments": {
                "r": []
            }
        },
        "get_reservation_ids": {
            "name": "get_reservation_ids",
            "location": 89,
            "return": [
                "OrderedDict"
            ],
            "arguments": {
                "soup": []
            }
        },
        "parse_view_ids": {
            "name": "parse_view_ids",
            "location": 114,
            "return": [
                "list[tuple[None]]"
            ],
            "arguments": {
                "soup": []
            }
        },
        "parse_menu": {
            "name": "parse_menu",
            "location": 125,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "soup": []
            }
        },
        "parse_calendar": {
            "name": "parse_calendar",
            "location": 135,
            "return": [
                "tuple[typing.Union[list[typing.Text],list[list[tuple[typing.Union[int,dict[, ]]]]],typing.Text]]"
            ],
            "arguments": {
                "soup": []
            }
        },
        "Reservation.__str__": {
            "name": "__str__",
            "location": 11,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sauna-bot-master/sauna_bot/notifier.py": {
        "Notifier.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "str",
                    "bytes",
                    "list[str]",
                    "dict[str, dict[typing.Any, int]]",
                    "bool"
                ],
                "loop": [
                    "None",
                    "str"
                ]
            }
        },
        "Notifier.subscribe": {
            "name": "subscribe",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sub_id": [
                    "int",
                    "dict[str, typing.Any]"
                ],
                "coroutine_callback": [
                    "int",
                    "bytes",
                    "str"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "Notifier.unsubscribe": {
            "name": "unsubscribe",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sub_id": [
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/reservation.py": {
        "SaunaId.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_id": [
                    "str",
                    "int",
                    "None"
                ],
                "reserve_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/saunacommands.py": {
        "SaunaBotCommands.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hoas": [
                    "str",
                    "dict[str, str]",
                    "bool"
                ],
                "sauna_ids": [
                    "str",
                    "set[int]",
                    "int",
                    "None"
                ],
                "predicate": [
                    "typing.Text"
                ]
            }
        },
        "SaunaBotCommands.help": {
            "name": "help",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int",
                    "str",
                    "float",
                    "None",
                    "list[]",
                    "bytes"
                ],
                "cmd": [
                    "typing.Text"
                ]
            }
        },
        "SaunaBotCommands.start": {
            "name": "start",
            "location": 22,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "chat_id": [
                    "str",
                    "int",
                    "list[int]",
                    "Exception"
                ]
            }
        },
        "SaunaBotCommands.tt": {
            "name": "tt",
            "location": 31,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int"
                ]
            }
        },
        "SaunaBotCommands.show": {
            "name": "show",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SaunaBotCommands.config": {
            "name": "config",
            "location": 75,
            "return": [
                "typing.Text",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "chat_id": []
            }
        }
    },
    "sauna-bot-master/sauna_bot/saunaconfigs.py": {
        "load_config": {
            "name": "load_config",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "get_sauna_ids": {
            "name": "get_sauna_ids",
            "location": 17,
            "return": [
                "dict[typing.Union[str,list[],int], SaunaId]"
            ],
            "arguments": {
                "sauna_configs": []
            }
        }
    },
    "sauna-bot-master/sauna_bot/stream_utils.py": {
        "StreamDivider.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/templates.py": {
        "format_reservations": {
            "name": "format_reservations",
            "location": 1,
            "return": [
                "str"
            ],
            "arguments": {
                "reservations": [
                    "str"
                ]
            }
        },
        "format_timetable": {
            "name": "format_timetable",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "topics": [],
                "cal": [
                    "dict[str, typing.Any]",
                    "list[str]"
                ],
                "left": [
                    "str",
                    "bool"
                ],
                "state": [
                    "list[list[str]]",
                    "typing.Sequence[T]",
                    "list[dict[str, typing.Any]]",
                    "typing.Match",
                    "int"
                ]
            }
        },
        "format_diff": {
            "name": "format_diff",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "reserved": [
                    "str",
                    "dict[str, typing.Callable[, ]]",
                    "list[str]"
                ],
                "cancelled": [
                    "str",
                    "dict[str, typing.Callable[, ]]",
                    "list[str]"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/tg.py": {
        "SensolaBot.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "bool"
                ],
                "cmds": [
                    "typing.Sequence[]",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/userconfigs.py": {
        "UserConfigs.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserConfigs.__getitem__": {
            "name": "__getitem__",
            "location": 14,
            "return": [
                "str",
                "list[str]",
                "int",
                "None",
                "list[]",
                "tuple[typing.Union[str,str]]"
            ],
            "arguments": {
                "self": [],
                "chat_id": [
                    "str",
                    "int"
                ]
            }
        },
        "UserConfigs.update": {
            "name": "update",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "bool",
                    "dict[str, typing.Any]",
                    "dict[object, typing.Any]",
                    "None"
                ],
                "conf_dict": []
            }
        },
        "UserConfigs.add_user": {
            "name": "add_user",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "chat_id": [
                    "str",
                    "int"
                ]
            }
        },
        "UserConfigs.check_conf": {
            "name": "check_conf",
            "location": 35,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "conf": [
                    "str",
                    "list[]",
                    "set[]",
                    "typing.Pattern"
                ]
            }
        },
        "UserConfigs.send_configs": {
            "name": "send_configs",
            "location": 52,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "chat_id": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/utils.py": {
        "get_date": {
            "name": "get_date",
            "location": 84,
            "return": [],
            "arguments": {
                "day": [],
                "weekdays": [
                    "list[]"
                ]
            }
        },
        "get_hoas_credentials": {
            "name": "get_hoas_credentials",
            "location": 96,
            "return": [
                "dict[typing.Text, typing.Union[list[dict[typing.Text, typing.Union[str,dict[str, str],dict[, ]]]],str,None,dict[str, str],dict[str, bool]]]"
            ],
            "arguments": {}
        },
        "load_data_to_notifier": {
            "name": "load_data_to_notifier",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "configs": [],
                "notifier": [
                    "str",
                    "set[]",
                    "bool"
                ],
                "bot": [
                    "int",
                    "dict[int, dict[, ]]"
                ]
            }
        },
        "configure_logging": {
            "name": "configure_logging",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "names": [
                    "tuple[]"
                ],
                "level": [],
                "base_level": []
            }
        },
        "Commands.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "predicate": [
                    "typing.Text"
                ]
            }
        },
        "Commands.__getitem__": {
            "name": "__getitem__",
            "location": 27,
            "return": [
                "int",
                "dict[str, int]",
                "bytes",
                "tuple[typing.Union[str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str]]"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "str",
                    "bytes"
                ]
            }
        },
        "Commands.help": {
            "name": "help",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "typing.Text"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/__init__.py": {},
    "sauna-bot-master/sauna_bot/__main__.py": {
        "sauna_diff": {
            "name": "sauna_diff",
            "location": 38,
            "return": [
                "tuple[list[typing.Text]]"
            ],
            "arguments": {
                "previous": [
                    "str"
                ],
                "new": [
                    "str"
                ]
            }
        }
    },
    "sauna-bot-master/sauna_bot/tests/test_notifier.py": {},
    "sauna-bot-master/sauna_bot/tests/test_poller.py": {},
    "sauna-bot-master/sauna_bot/tests/test_stream_utils.py": {},
    "sauna-bot-master/sauna_bot/tests/utils.py": {
        "pause_generator": {
            "name": "pause_generator",
            "location": 69,
            "return": [
                "YieldPauser"
            ],
            "arguments": {
                "source": [
                    "str",
                    "float",
                    "typing.TextIO",
                    "list[]",
                    "None"
                ]
            }
        },
        "CallRecorder.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CallRecorder.__call__": {
            "name": "__call__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AwaitRecorder.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "YieldPauser.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "YieldPauser.__aiter__": {
            "name": "__aiter__",
            "location": 58,
            "return": [
                "YieldPauser"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sauna-bot-master/sauna_bot/tests/__init__.py": {}
}
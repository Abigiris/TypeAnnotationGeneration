{
    "scavenger-master/app.py": {
        "generate_grid": {
            "name": "generate_grid",
            "location": 8,
            "return": [
                "list[list[bool]]"
            ],
            "arguments": {
                "size": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str"
                ],
                "obstacles": [
                    "int",
                    "str",
                    "list[]"
                ]
            }
        },
        "generate_treasure": {
            "name": "generate_treasure",
            "location": 13,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "size": [
                    "int",
                    "str",
                    "list[]"
                ],
                "obstacles": [
                    "int",
                    "str",
                    "list[]"
                ]
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "scavenger-master/main.py": {},
    "scavenger-master/routes/connect.py": {},
    "scavenger-master/routes/map.py": {},
    "scavenger-master/routes/move.py": {},
    "scavenger-master/routes/player.py": {},
    "scavenger-master/routes/players.py": {},
    "scavenger-master/routes/root.py": {},
    "scavenger-master/routes/treasure.py": {},
    "scavenger-master/routes/types.py": {},
    "scavenger-master/routes/__init__.py": {},
    "scavenger-master/tests/__init__.py": {},
    "scavenger-master/tests/routes/connect_test.py": {
        "client": {
            "name": "client",
            "location": 9,
            "return": [],
            "arguments": {
                "loop": [],
                "aiohttp_client": []
            }
        }
    },
    "scavenger-master/tests/routes/__init__.py": {}
}
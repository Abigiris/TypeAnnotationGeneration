{
    "screamshot-master/setup.py": {
        "get_requires": {
            "name": "get_requires",
            "location": 15,
            "return": [
                "str",
                "bool",
                "dict[str, dict[str, typing.Any]]"
            ],
            "arguments": {}
        }
    },
    "screamshot-master/docs/conf.py": {},
    "screamshot-master/screamshot/browser_manager_script.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "screamshot-master/screamshot/bytes_to_file_function.py": {
        "bytes_to_file": {
            "name": "bytes_to_file",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "b_img": [
                    "str",
                    "list[str]",
                    "typing.BinaryIO",
                    "tuple[typing.Union[int,int]]",
                    "None"
                ],
                "path": [
                    "str"
                ],
                "img_format": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "screamshot-master/screamshot/errors.py": {},
    "screamshot-master/screamshot/generate_bytes_img_functions.py": {
        "_parse_parameters": {
            "name": "_parse_parameters",
            "location": 15,
            "return": [
                "dict[typing.Text, typing.Union[list[typing.Text],dict[typing.Text, bool]]]"
            ],
            "arguments": {}
        },
        "generate_bytes_img_wrap": {
            "name": "generate_bytes_img_wrap",
            "location": 276,
            "return": [],
            "arguments": {
                "url": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool",
                    "tuple[typing.Union[int,int]]",
                    "typing.Callable[typing.Any, None]"
                ]
            }
        }
    },
    "screamshot-master/screamshot/screamshot_script.py": {
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "screamshot-master/screamshot/utils.py": {
        "_check_wait_until_arg": {
            "name": "_check_wait_until_arg",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "wait_until_arg": [
                    "list[]",
                    "str"
                ]
            }
        },
        "to_sync": {
            "name": "to_sync",
            "location": 41,
            "return": [],
            "arguments": {
                "fun": [
                    "bool",
                    "str"
                ]
            }
        },
        "url_match": {
            "name": "url_match",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "url1": [
                    "str",
                    "bytes"
                ],
                "url2": [
                    "str",
                    "bytes"
                ]
            }
        },
        "set_endpoint": {
            "name": "set_endpoint",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "ws_endpoint": [
                    "str"
                ]
            }
        },
        "get_endpoint": {
            "name": "get_endpoint",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_token": {
            "name": "get_token",
            "location": 157,
            "return": [],
            "arguments": {
                "url": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "bytes"
                ],
                "data": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]",
                    "bytes"
                ],
                "local_storage": [
                    "bool"
                ],
                "page": []
            }
        },
        "get_local_storage_token": {
            "name": "get_local_storage_token",
            "location": 186,
            "return": [],
            "arguments": {
                "page": []
            }
        },
        "wait_server_start": {
            "name": "wait_server_start",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "None"
                ],
                "waiting_message": [
                    "str"
                ],
                "final_message": [
                    "str"
                ]
            }
        },
        "wait_server_close": {
            "name": "wait_server_close",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "None"
                ],
                "waiting_message": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "final_message": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "screamshot-master/screamshot/__init__.py": {},
    "screamshot-master/scripts/checks_command.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "screamshot-master/tests/test_browser_manager_script.py": {
        "TestBrowserManagerScript.test_open_headless_browser": {
            "name": "test_open_headless_browser",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "screamshot-master/tests/test_bytes_to_img_function.py": {
        "_rmsd": {
            "name": "_rmsd",
            "location": 12,
            "return": [],
            "arguments": {
                "img1": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "img2": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "_is_same_image": {
            "name": "_is_same_image",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "img1": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "img2": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestBytesToImgFunction.test_bytes_to_img": {
            "name": "test_bytes_to_img",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "screamshot-master/tests/test_generate_bytes_img_function.py": {
        "_rmsd": {
            "name": "_rmsd",
            "location": 27,
            "return": [],
            "arguments": {
                "img1": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "img2": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "_is_same_image": {
            "name": "_is_same_image",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "img1": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "img2": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestGenerateBytesImgFunction.setUp": {
            "name": "setUp",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screenshot_bad_url": {
            "name": "test_screenshot_bad_url",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screenshot_protected_page_no_auth": {
            "name": "test_screenshot_protected_page_no_auth",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screenshot_protected_page_bad_auth": {
            "name": "test_screenshot_protected_page_bad_auth",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screenshot_protected_page_with_auth_token": {
            "name": "test_screenshot_protected_page_with_auth_token",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screenshot_protected_page_with_auth_login": {
            "name": "test_screenshot_protected_page_with_auth_login",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_bytes_write": {
            "name": "test_screamshot_same_bytes_write",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_dog": {
            "name": "test_screamshot_same_dog",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_kitten": {
            "name": "test_screamshot_same_kitten",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_different_image": {
            "name": "test_screamshot_different_image",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_bytes_write_with_promise": {
            "name": "test_screamshot_same_bytes_write_with_promise",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_dog_with_promise": {
            "name": "test_screamshot_same_dog_with_promise",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_kitten_with_promise": {
            "name": "test_screamshot_same_kitten_with_promise",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_different_image_with_promise": {
            "name": "test_screamshot_different_image_with_promise",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_bytes_write_with_django_wrap": {
            "name": "test_screamshot_same_bytes_write_with_django_wrap",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_dog_with_django_wrap": {
            "name": "test_screamshot_same_dog_with_django_wrap",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_same_kitten_with_django_wrap": {
            "name": "test_screamshot_same_kitten_with_django_wrap",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.test_screamshot_different_image_with_django_wrap": {
            "name": "test_screamshot_different_image_with_django_wrap",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunction.tearDown": {
            "name": "tearDown",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "screamshot-master/tests/test_generate_bytes_img_function_unit.py": {
        "FakePage.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arg_viewport": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "wait_until": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "goto_called": [
                    "bool"
                ],
                "url": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "waitForSelector_called": [
                    "bool"
                ],
                "wait_for": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "waitForxPath_called": [
                    "bool"
                ],
                "wait_for_xpath": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "querySelector_called": [
                    "bool"
                ],
                "selector": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "credentials": [
                    "None",
                    "bool",
                    "float",
                    "str"
                ],
                "credentials_token_request": [
                    "None",
                    "str",
                    "int",
                    "typing.Callable[[], str]",
                    "dict[, ]",
                    "bytes"
                ],
                "use_local_token": [
                    "None",
                    "bool",
                    "float",
                    "str",
                    "typing.Iterable[typing.Any]"
                ]
            }
        },
        "TestGenerateBytesImgFunctionUnit.test_parse_parameters": {
            "name": "test_parse_parameters",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunctionUnit.test_page_manager": {
            "name": "test_page_manager",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_token": [],
                "mock_get_local_storage_token": []
            }
        },
        "TestGenerateBytesImgFunctionUnit.test_selector_manager": {
            "name": "test_selector_manager",
            "location": 551,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateBytesImgFunctionUnit.test_generate_bytes_img": {
            "name": "test_generate_bytes_img",
            "location": 610,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_browser": []
            }
        },
        "TestGenerateBytesImgFunctionUnit.test_generate_bytes_img_prom": {
            "name": "test_generate_bytes_img_prom",
            "location": 622,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_browser": []
            }
        }
    },
    "screamshot-master/tests/test_screamshot_script.py": {
        "TestScreamshotScript.test_simple_screamshot": {
            "name": "test_simple_screamshot",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestScreamshotScript.test_screamshot_username_without_password": {
            "name": "test_screamshot_username_without_password",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestScreamshotScript.test_screamshot_password_without_username": {
            "name": "test_screamshot_password_without_username",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestScreamshotScript.test_screamshot_with_username_and_password": {
            "name": "test_screamshot_with_username_and_password",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestScreamshotScript.test_screamshot_with_bad_token": {
            "name": "test_screamshot_with_bad_token",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestScreamshotScript.test_screamshot_with_token": {
            "name": "test_screamshot_with_token",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "screamshot-master/tests/test_utils_unit.py": {
        "mocked_set_endpoint": {
            "name": "mocked_set_endpoint",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "ws_endpoint": [
                    "str",
                    "int"
                ]
            }
        },
        "FakeBrowser.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "headless": [
                    "int",
                    "float"
                ],
                "autoClose": [
                    "int",
                    "float"
                ],
                "args": []
            }
        },
        "UnistTestsUtilsFunctions.test_check_wait_until_arg": {
            "name": "test_check_wait_until_arg",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnistTestsUtilsFunctions.test_url_match": {
            "name": "test_url_match",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnistTestsUtilsFunctions.test_set_endpoint": {
            "name": "test_set_endpoint",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnistTestsUtilsFunctions.test_get_end_point": {
            "name": "test_get_end_point",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnistTestsUtilsFunctions.test_open_browser": {
            "name": "test_open_browser",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_launch": [],
                "mock_set_endpoint": []
            }
        },
        "UnistTestsUtilsFunctions.test_get_browser": {
            "name": "test_get_browser",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open_browser": [],
                "mock_connect": [],
                "mock_get_endpoint": []
            }
        },
        "UnistTestsUtilsFunctions.test_wait_server_start": {
            "name": "test_wait_server_start",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get": [
                    "str"
                ]
            }
        },
        "UnistTestsUtilsFunctions.test_wait_server_close": {
            "name": "test_wait_server_close",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "UnistTestsUtilsFunctions.test_get_token_200": {
            "name": "test_get_token_200",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_post": []
            }
        },
        "UnistTestsUtilsFunctions.test_get_token_400": {
            "name": "test_get_token_400",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_post": []
            }
        },
        "UnistTestsUtilsFunctions.test_get_token_put_local_storage": {
            "name": "test_get_token_put_local_storage",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_post": []
            }
        },
        "UnistTestsUtilsFunctions.test_get_token_from_local_storage": {
            "name": "test_get_token_from_local_storage",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_post": []
            }
        }
    },
    "screamshot-master/tests/server/app.py": {
        "index": {
            "name": "index",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "other_page": {
            "name": "other_page",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "shutdown_server": {
            "name": "shutdown_server",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "close": {
            "name": "close",
            "location": 67,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "token_required": {
            "name": "token_required",
            "location": 72,
            "return": [],
            "arguments": {
                "f": [
                    "list[]",
                    "typing.Callable[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "protected_index_page": {
            "name": "protected_index_page",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "OwnResponse.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "status": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "headers": [
                    "None",
                    "bool",
                    "str"
                ],
                "mimetype": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "content_type": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "direct_passthrough": [
                    "bool"
                ]
            }
        },
        "token_required.decorated": {
            "name": "decorated",
            "location": 74,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "scyther-master/tester.py": {
        "emulate": {
            "name": "emulate",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "ball": []
            }
        }
    },
    "scyther-master/scyther/ball.py": {
        "Ball.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "catch_modifier": [
                    "int",
                    "float"
                ],
                "hp_factor": [
                    "bool",
                    "list[list[int]]",
                    "float",
                    "None"
                ],
                "display": [
                    "bool",
                    "list[list[int]]",
                    "float",
                    "None"
                ]
            }
        },
        "Ball.is_master_ball": {
            "name": "is_master_ball",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scyther-master/scyther/pokemon.py": {
        "Pokemon.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_hp": [
                    "int"
                ],
                "hp_ivs": [
                    "None"
                ],
                "level": [
                    "int"
                ],
                "catch_rate": [
                    "int"
                ],
                "status": [],
                "name": [
                    "typing.Text"
                ],
                "is_ghost_marowak": [
                    "bool"
                ]
            }
        },
        "Pokemon.get_hp_ivs": {
            "name": "get_hp_ivs",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "Pokemon.calculate_hp": {
            "name": "calculate_hp",
            "location": 80,
            "return": [],
            "arguments": {
                "base_hp": [],
                "hp_ivs": [],
                "level": []
            }
        },
        "Pokemon.catch": {
            "name": "catch",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "ball": []
            }
        },
        "Pokemon._catch_ballcheck": {
            "name": "_catch_ballcheck",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "ball": []
            }
        },
        "Pokemon._catch_hpcheck": {
            "name": "_catch_hpcheck",
            "location": 138,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "ball": []
            }
        },
        "Pokemon.animate": {
            "name": "animate",
            "location": 151,
            "return": [
                "tuple[typing.Union[int,typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "ball": []
            }
        }
    },
    "scyther-master/scyther/status.py": {
        "Status.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "catch_modifier": [
                    "int",
                    "None"
                ],
                "animation_modifier": [
                    "int",
                    "None"
                ],
                "display": [
                    "bool",
                    "str",
                    "float",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "scyther-master/scyther/__init__.py": {},
    "scyther-master/tests/test_ball.py": {
        "TestProperties.test_catch_modifier": {
            "name": "test_catch_modifier",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProperties.test_animation_modifier": {
            "name": "test_animation_modifier",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProperties.test_display": {
            "name": "test_display",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProperties.test_is_master_ball": {
            "name": "test_is_master_ball",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scyther-master/tests/test_pokemon.py": {
        "TestGetHpIVs.test_same_values": {
            "name": "test_same_values",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_rand": []
            }
        },
        "TestGetHpIVs.test_bit_combination": {
            "name": "test_bit_combination",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "rand_vals": [],
                "expected": [],
                "mock_rand": []
            }
        },
        "TestGetHpIVs.test_randoms": {
            "name": "test_randoms",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCalculateHP.test_minimum": {
            "name": "test_minimum",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCalculateHP.test_pokemon_values": {
            "name": "test_pokemon_values",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "base_hp": [],
                "hp_ivs": [],
                "level": [],
                "expected": []
            }
        },
        "TestInit.test_name": {
            "name": "test_name",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInit.test_get_hp_ivs": {
            "name": "test_get_hp_ivs",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_ivs": []
            }
        },
        "TestInit.test_max_hp": {
            "name": "test_max_hp",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_calc_hp": []
            }
        },
        "TestInit.test_status": {
            "name": "test_status",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCatchBallcheck.test_pokeball": {
            "name": "test_pokeball",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_rand": []
            }
        },
        "TestCatchBallcheck.test_negative_check": {
            "name": "test_negative_check",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_rand": []
            }
        },
        "TestCatchHPcheck.test_full_hp": {
            "name": "test_full_hp",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCatchHPcheck.test_low_hp": {
            "name": "test_low_hp",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCatch.test_ghost_marowak": {
            "name": "test_ghost_marowak",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCatch.test_masterball": {
            "name": "test_masterball",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCatch.test_negative_ballcheck": {
            "name": "test_negative_ballcheck",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ballcheck": []
            }
        },
        "TestCatch.test_ballcheck_catchrate": {
            "name": "test_ballcheck_catchrate",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ballcheck": []
            }
        },
        "TestCatch.test_hpcheck": {
            "name": "test_hpcheck",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ballcheck": [],
                "hpcheck": [],
                "mock_rand": []
            }
        },
        "TestCatch.test_fail_all": {
            "name": "test_fail_all",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ballcheck": [],
                "hpcheck": [],
                "mock_rand": []
            }
        },
        "TestAnimate.test_each_wobble": {
            "name": "test_each_wobble",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "catch_rates": [],
                "expected_wobbles": [],
                "expected_msg": [],
                "mock_ball": []
            }
        }
    },
    "scyther-master/tests/test_status.py": {
        "TestProperties.test_catch_modifier": {
            "name": "test_catch_modifier",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProperties.test_animation_modifier": {
            "name": "test_animation_modifier",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProperties.test_display": {
            "name": "test_display",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
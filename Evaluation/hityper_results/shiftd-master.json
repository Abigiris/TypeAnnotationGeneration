{
    "shiftd-master/setup.py": {
        "_read": {
            "name": "_read",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "bytes",
                    "typing.Callable[str, str]"
                ]
            }
        },
        "_read_requirements": {
            "name": "_read_requirements",
            "location": 32,
            "return": [
                "list[]"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "PyTest.initialize_options": {
            "name": "initialize_options",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PyTest.run_tests": {
            "name": "run_tests",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shiftd-master/doc/conf.py": {},
    "shiftd-master/shiftd/fusion.py": {
        "iter.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "iter.__len__": {
            "name": "__len__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "iter.__iter__": {
            "name": "__iter__",
            "location": 38,
            "return": [
                "iter"
            ],
            "arguments": {
                "self": []
            }
        },
        "iter.__next__": {
            "name": "__next__",
            "location": 41,
            "return": [
                "dict[str, int]",
                "dict[, ]",
                "dict[str, str]",
                "frozenset",
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "iter.rewind": {
            "name": "rewind",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shiftd-master/shiftd/logger.py": {
        "log": {
            "name": "log",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "str",
                    "None",
                    "bytes",
                    "int"
                ],
                "file": [
                    "str"
                ],
                "mode": [
                    "typing.Text"
                ],
                "level": [],
                "ident": [
                    "None",
                    "str",
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "shiftd-master/shiftd/shiftapp.py": {
        "parse_cmdline": {
            "name": "parse_cmdline",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shiftd-master/shiftd/shiftd.py": {
        "get_app_and_ui": {
            "name": "get_app_and_ui",
            "location": 41,
            "return": [
                "tuple[typing.Union[None,str,list[],dict[str, dict[str, str]]]]"
            ],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "dict[str, str]",
                    "tuple['cirq.Qid']",
                    "int"
                ]
            }
        },
        "stop": {
            "name": "stop",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [
                    "tuple['cirq.Qid']",
                    "dict[str, str]",
                    "str"
                ]
            }
        },
        "Dispatcher.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.app": {
            "name": "app",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.ui": {
            "name": "ui",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.fusion_hello": {
            "name": "fusion_hello",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "subject": [
                    "str",
                    "float",
                    "tuple[]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Dispatcher.quit": {
            "name": "quit",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.open_local_file": {
            "name": "open_local_file",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "Dispatcher.fusion_close_all": {
            "name": "fusion_close_all",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Server.build_uri_from_3": {
            "name": "build_uri_from_3",
            "location": 114,
            "return": [
                "str"
            ],
            "arguments": {
                "proto": [
                    "str",
                    "int"
                ],
                "host": [
                    "str",
                    "int"
                ],
                "port": [
                    "str",
                    "int"
                ]
            }
        },
        "Server.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": [
                    "bool",
                    "str",
                    "None",
                    "typing.Hashable"
                ]
            }
        },
        "Server.uri": {
            "name": "uri",
            "location": 129,
            "return": [
                "str",
                "dict[str, typing.Any]",
                "dict[, ]",
                "int"
            ],
            "arguments": {
                "self": [],
                "rpc_uri": []
            }
        },
        "Server.start": {
            "name": "start",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Server.shutdown": {
            "name": "shutdown",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shiftd-master/shiftd/utils.py": {
        "make_singleton": {
            "name": "make_singleton",
            "location": 25,
            "return": [
                "wrp"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bytes",
                    "typing.BinaryIO",
                    "memoryview",
                    "bool"
                ]
            }
        },
        "parse_config": {
            "name": "parse_config",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [
                    "str",
                    "bytes",
                    "None"
                ]
            }
        },
        "try_catch.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "int",
                    "float",
                    "list[list[T]]"
                ]
            }
        },
        "try_catch.__call__": {
            "name": "__call__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CustomHelpFormatter._format_action": {
            "name": "_format_action",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "action": []
            }
        },
        "make_singleton.wrp.__new__": {
            "name": "__new__",
            "location": 30,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "make_singleton.wrp._new": {
            "name": "_new",
            "location": 44,
            "return": [],
            "arguments": {
                "c": []
            }
        }
    },
    "shiftd-master/shiftd/__init__.py": {},
    "shiftd-master/shiftd/tests/test_fusion.py": {
        "TestFusion._setup": {
            "name": "_setup",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFusion._teardown": {
            "name": "_teardown",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFusion.test_iter": {
            "name": "test_iter",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFusion._setup.Foo.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "bar": []
            }
        },
        "TestFusion._setup.Foo.item": {
            "name": "item",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        }
    },
    "shiftd-master/shiftd/tests/test_shiftd.py": {
        "TestShiftd._setup": {
            "name": "_setup",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestShiftd._teardown": {
            "name": "_teardown",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestShiftd.test_shiftd": {
            "name": "test_shiftd",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shiftd-master/shiftd/tests/test_utils.py": {
        "TestUtils._setup": {
            "name": "_setup",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils._teardown": {
            "name": "_teardown",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_make_singleton": {
            "name": "test_make_singleton",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_make_singleton_new_method": {
            "name": "test_make_singleton_new_method",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils._setup.Foo.foo": {
            "name": "foo",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils._setup.Foo.bar": {
            "name": "bar",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nums": []
            }
        },
        "TestUtils._setup.Bar.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils._setup.Bar.qux": {
            "name": "qux",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "shiftd-master/shiftd/tests/__init__.py": {}
}
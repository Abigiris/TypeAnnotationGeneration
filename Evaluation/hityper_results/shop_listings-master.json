{
    "shop_listings-master/artifacts/save_listings_to_csv.py": {
        "write_listings_to_csv": {
            "name": "write_listings_to_csv",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        }
    },
    "shop_listings-master/lib/services/etsy_find_all_shops.py": {
        "get_shops_list": {
            "name": "get_shops_list",
            "location": 8,
            "return": [
                "list[]"
            ],
            "arguments": {
                "etsy_api_key": [
                    "int",
                    "list[str]",
                    "str"
                ],
                "max_stores": [
                    "int",
                    "None"
                ],
                "redis_store": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "page": [
                    "int"
                ]
            }
        }
    },
    "shop_listings-master/lib/services/etsy_shop.py": {
        "EtsyShop.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ],
                "api_key": [
                    "str",
                    "bool",
                    "list[dict[str, typing.Any]]",
                    "dict[typing.Any, list[]]",
                    "None",
                    "tuple[typing.Union[int,str]]"
                ],
                "api_base_url": [
                    "None",
                    "str",
                    "list[str]",
                    "dict[str, str]",
                    "int"
                ],
                "log_level": [
                    "typing.Text"
                ],
                "api_max_reqs_per_sec": [
                    "int"
                ],
                "api_query_limit": [
                    "int"
                ],
                "logger": [
                    "None",
                    "str",
                    "int"
                ],
                "session": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "EtsyShop.active_listings_url": {
            "name": "active_listings_url",
            "location": 42,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "EtsyShop.active_listings_query_dict": {
            "name": "active_listings_query_dict",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "page": [
                    "int"
                ]
            }
        },
        "EtsyShop.get_active_listings": {
            "name": "get_active_listings",
            "location": 54,
            "return": [
                "EtsyShop"
            ],
            "arguments": {
                "self": []
            }
        },
        "EtsyShop._initiate_request": {
            "name": "_initiate_request",
            "location": 81,
            "return": [
                "dict[str, str]",
                "dict[str, dict[str, typing.Any]]",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "page_num": [
                    "str",
                    "typing.Callable[str, None]"
                ]
            }
        },
        "EtsyShop._process_response": {
            "name": "_process_response",
            "location": 93,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int",
                    "dict[str, str]",
                    "str"
                ],
                "page_num": [
                    "str",
                    "int"
                ]
            }
        },
        "EtsyShop._parsed_response": {
            "name": "_parsed_response",
            "location": 108,
            "return": [
                "dict[typing.Text, typing.Union[list[],int]]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "page_num": [
                    "str",
                    "int"
                ]
            }
        },
        "EtsyShop._buffer_request": {
            "name": "_buffer_request",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shop_listings-master/lib/services/key_terms.py": {
        "compute_key_terms": {
            "name": "compute_key_terms",
            "location": 18,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "corpus": [
                    "list[]",
                    "int",
                    "float"
                ],
                "number": [
                    "int"
                ]
            }
        }
    },
    "shop_listings-master/lib/services/shop_listings_analysis.py": {
        "perform_analysis": {
            "name": "perform_analysis",
            "location": 17,
            "return": [
                "dict[typing.Text, typing.Union[str,bool,bytes,dict[str, str],typing.Mapping,None,list[typing.Text],set[]]]"
            ],
            "arguments": {
                "shop_name": [
                    "str",
                    "bool",
                    "bytes",
                    "dict[str, str]",
                    "typing.Mapping",
                    "None"
                ],
                "logger": [
                    "bool",
                    "None",
                    "bytes",
                    "str",
                    "typing.Mapping"
                ],
                "log_level": [
                    "bool",
                    "None",
                    "bytes",
                    "str",
                    "typing.Mapping"
                ],
                "etsy_api_key": [
                    "bool",
                    "None",
                    "bytes",
                    "str",
                    "typing.Mapping"
                ],
                "max_number_of_terms": [
                    "int",
                    "float",
                    "None"
                ],
                "redis_store": [
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "shop_listings-master/lib/web/routes.py": {
        "assets": {
            "name": "assets",
            "location": 28,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "index": {
            "name": "index",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "shop_names": {
            "name": "shop_names",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "key_terms": {
            "name": "key_terms",
            "location": 52,
            "return": [],
            "arguments": {}
        }
    },
    "shop_listings-master/lib/web/__init__.py": {},
    "shop_listings-master/tests/conftest.py": {
        "vcr_cassette_dir": {
            "name": "vcr_cassette_dir",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "app": {
            "name": "app",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "shop_listings-master/tests/services/test_etsy_shop.py": {
        "test_etsy_shop_initialization": {
            "name": "test_etsy_shop_initialization",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_active_listings_url_returns_a_url": {
            "name": "test_active_listings_url_returns_a_url",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_active_listings_query_dict_returns_params_dict": {
            "name": "test_active_listings_query_dict_returns_params_dict",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_active_listings_query_dict_returns_params_dict_with_defaults": {
            "name": "test_active_listings_query_dict_returns_params_dict_with_defaults",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_active_listings_queries_for_all_pages_of_results": {
            "name": "test_get_active_listings_queries_for_all_pages_of_results",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shop_listings-master/tests/web/test_routes.py": {
        "test_index_route": {
            "name": "test_index_route",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_key_terms_route_requires_query_string": {
            "name": "test_key_terms_route_requires_query_string",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_key_terms_route_responds_with_json": {
            "name": "test_key_terms_route_responds_with_json",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [
                    "bool"
                ],
                "client": []
            }
        }
    }
}
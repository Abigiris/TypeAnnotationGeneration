{
    "shopify_python-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 9,
            "return": [
                "str",
                "None"
            ],
            "arguments": {}
        }
    },
    "shopify_python-master/shopify_python/ast.py": {
        "count_tree_size": {
            "name": "count_tree_size",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {
                "node": []
            }
        }
    },
    "shopify_python-master/shopify_python/git_utils.py": {
        "_remote_origin_master": {
            "name": "_remote_origin_master",
            "location": 17,
            "return": [],
            "arguments": {
                "git_repo": [
                    "bool",
                    "str"
                ]
            }
        },
        "_modified_in_branch": {
            "name": "_modified_in_branch",
            "location": 25,
            "return": [
                "list[]"
            ],
            "arguments": {
                "git_repo": [
                    "list[]",
                    "list[str]",
                    "str"
                ],
                "other_ref": [
                    "int",
                    "str"
                ]
            }
        },
        "_file_is_python": {
            "name": "_file_is_python",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "changed_python_files_in_tree": {
            "name": "changed_python_files_in_tree",
            "location": 52,
            "return": [
                "list[]"
            ],
            "arguments": {
                "root_path": [
                    "str",
                    "bool",
                    "typing.Iterable[str]"
                ]
            }
        },
        "autopep_files": {
            "name": "autopep_files",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "files": [
                    "str"
                ],
                "max_line_length": [
                    "list[str]",
                    "str",
                    "typing.Callable[str, bool]",
                    "bool"
                ]
            }
        },
        "pylint_files": {
            "name": "pylint_files",
            "location": 123,
            "return": [],
            "arguments": {
                "files": [
                    "list[str]"
                ]
            }
        },
        "_CustomPylintReporter.__init__": {
            "name": "__init__",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_CustomPylintReporter.handle_message": {
            "name": "handle_message",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "shopify_python-master/shopify_python/google_styleguide.py": {
        "register_checkers": {
            "name": "register_checkers",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "linter": []
            }
        },
        "GoogleStyleGuideChecker.__init__": {
            "name": "__init__",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "linter": [
                    "str",
                    "typing.IO"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_assign": {
            "name": "visit_assign",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Sequence[typing.Any]"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_excepthandler": {
            "name": "visit_excepthandler",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "Exception"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_lambda": {
            "name": "visit_lambda",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "set[str]"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_listcomp": {
            "name": "visit_listcomp",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "GoogleStyleGuideChecker.visit_tryexcept": {
            "name": "visit_tryexcept",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_tryfinally": {
            "name": "visit_tryfinally",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_importfrom": {
            "name": "visit_importfrom",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "GoogleStyleGuideChecker.visit_raise": {
            "name": "visit_raise",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "tuple[]"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_if": {
            "name": "visit_if",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Sequence[typing.Any]"
                ]
            }
        },
        "GoogleStyleGuideChecker.visit_classdef": {
            "name": "visit_classdef",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Sequence[typing.Any]"
                ]
            }
        },
        "GoogleStyleGuideChecker.__get_module_names": {
            "name": "__get_module_names",
            "location": 191,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "node": [
                    "typing.Mapping"
                ]
            }
        },
        "GoogleStyleGuideChecker.__import_modules_only": {
            "name": "__import_modules_only",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ]
            }
        },
        "GoogleStyleGuideChecker.__import_full_path_only": {
            "name": "__import_full_path_only",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "GoogleStyleGuideChecker.__limit_one_import": {
            "name": "__limit_one_import",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "dict[, ]"
                ]
            }
        },
        "GoogleStyleGuideChecker.__avoid_global_variables": {
            "name": "__avoid_global_variables",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "GoogleStyleGuideChecker.__dont_use_archaic_raise_syntax": {
            "name": "__dont_use_archaic_raise_syntax",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "GoogleStyleGuideChecker.__dont_catch_standard_error": {
            "name": "__dont_catch_standard_error",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "GoogleStyleGuideChecker.__minimize_code_in_try_except": {
            "name": "__minimize_code_in_try_except",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "list[int]",
                    "int"
                ]
            }
        },
        "GoogleStyleGuideChecker.__minimize_code_in_finally": {
            "name": "__minimize_code_in_finally",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "list[int]",
                    "int"
                ]
            }
        },
        "GoogleStyleGuideChecker.__use_simple_lambdas": {
            "name": "__use_simple_lambdas",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "GoogleStyleGuideChecker.__use_simple_list_comp": {
            "name": "__use_simple_list_comp",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "GoogleStyleGuideChecker.__use_cond_expr": {
            "name": "__use_cond_expr",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ]
            }
        },
        "GoogleStyleGuideChecker.__lambda_func": {
            "name": "__lambda_func",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "GoogleStyleGuideChecker.__class_def_check": {
            "name": "__class_def_check",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "GoogleStyleGuideChecker.__avoid_global_variables.check_assignment": {
            "name": "check_assignment",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "node": []
            }
        }
    },
    "shopify_python-master/shopify_python/packaging.py": {
        "get_package_revision": {
            "name": "get_package_revision",
            "location": 8,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "package_name": [
                    "str",
                    "None"
                ]
            }
        },
        "write_package_revision": {
            "name": "write_package_revision",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "cmd": [],
                "_": [
                    "str",
                    "list[]",
                    "typing.Sequence[int]",
                    "typing.Optional[]",
                    "typing.Callable[, ]"
                ],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "shopify_python-master/shopify_python/shopify_styleguide.py": {
        "register_checkers": {
            "name": "register_checkers",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "linter": []
            }
        },
        "ShopifyStyleGuideChecker.process_tokens": {
            "name": "process_tokens",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "ShopifyStyleGuideChecker.__validate_comment": {
            "name": "__validate_comment",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str",
                    "tuple[typing.Sequence[]]",
                    "int"
                ],
                "start": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "ShopifyStyleGuideChecker.__validate_name": {
            "name": "__validate_name",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str",
                    "typing.Callable[str, bool]",
                    "int",
                    "typing.Iterable[]",
                    "None"
                ],
                "start": [
                    "str",
                    "list[str]",
                    "typing.Callable[float, bool]",
                    "typing.Sequence[int]"
                ],
                "line": [
                    "str"
                ]
            }
        },
        "ShopifyStyleGuideChecker.__disable_name_only": {
            "name": "__disable_name_only",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str",
                    "int",
                    "None",
                    "typing.Pattern"
                ],
                "start": [
                    "bool",
                    "str"
                ]
            }
        },
        "ShopifyStyleGuideChecker.__sequence_str": {
            "name": "__sequence_str",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str",
                    "int",
                    "None",
                    "typing.Pattern"
                ],
                "start": [
                    "int"
                ]
            }
        },
        "ShopifyStyleGuideChecker.__disable_name_only.get_name": {
            "name": "get_name",
            "location": 65,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "code": []
            }
        }
    },
    "shopify_python-master/shopify_python/__init__.py": {
        "register": {
            "name": "register",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "linter": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        }
    },
    "shopify_python-master/tests/test_functional.py": {
        "parse_python_version": {
            "name": "parse_python_version",
            "location": 98,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "str": [
                    "str",
                    "int"
                ]
            }
        },
        "parse_expected_output": {
            "name": "parse_expected_output",
            "location": 179,
            "return": [
                "list[]"
            ],
            "arguments": {
                "stream": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_expected_messages": {
            "name": "get_expected_messages",
            "location": 183,
            "return": [],
            "arguments": {
                "stream": [
                    "str"
                ]
            }
        },
        "multiset_difference": {
            "name": "multiset_difference",
            "location": 213,
            "return": [
                "tuple[dict[, ]]"
            ],
            "arguments": {
                "left_op": [],
                "right_op": [
                    "int",
                    "dict[, ]",
                    "Exception",
                    "dict[int, tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "get_tests": {
            "name": "get_tests",
            "location": 371,
            "return": [
                "list[FunctionalTestFile]"
            ],
            "arguments": {}
        },
        "test_a_functional_test_exists_for_all_rule_names": {
            "name": "test_a_functional_test_exists_for_all_rule_names",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_functional": {
            "name": "test_functional",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "test_file": [
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "OutputLine.from_msg": {
            "name": "from_msg",
            "location": 67,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Callable[, ]",
                    "typing.Sequence[str]",
                    "typing.Sequence[int]"
                ],
                "msg": [
                    "str",
                    "typing.Callable[, ]",
                    "typing.Sequence[str]",
                    "typing.Sequence[int]"
                ]
            }
        },
        "OutputLine.from_csv": {
            "name": "from_csv",
            "location": 74,
            "return": [],
            "arguments": {
                "cls": [
                    "int",
                    "float"
                ],
                "row": []
            }
        },
        "OutputLine.to_csv": {
            "name": "to_csv",
            "location": 78,
            "return": [
                "OutputLine"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionalTestReporter.handle_message": {
            "name": "handle_message",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "int",
                    "str"
                ]
            }
        },
        "FunctionalTestReporter.on_set_current_module": {
            "name": "on_set_current_module",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": [
                    "typing.Iterable[T]",
                    "typing.Callable[, ]",
                    "Exception",
                    "typing.Type",
                    "None"
                ],
                "filepath": [
                    "typing.Iterable[t]",
                    "typing.Callable[, ]",
                    "Exception",
                    "typing.Type",
                    "None"
                ]
            }
        },
        "FunctionalTestReporter.display_reports": {
            "name": "display_reports",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "layout": [
                    "int",
                    "str",
                    "typing.Iterable[t]"
                ]
            }
        },
        "FunctionalTestFile.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "str",
                    "int"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "FunctionalTestFile._parse_options": {
            "name": "_parse_options",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionalTestFile.option_file": {
            "name": "option_file",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FunctionalTestFile.module": {
            "name": "module",
            "location": 151,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FunctionalTestFile.expected_output": {
            "name": "expected_output",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FunctionalTestFile.source": {
            "name": "source",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FunctionalTestFile._file_type": {
            "name": "_file_type",
            "location": 163,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "ext": [
                    "str",
                    "None",
                    "dict[, ]",
                    "BaseException"
                ],
                "check_exists": [
                    "bool"
                ]
            }
        },
        "LintModuleTest.__init__": {
            "name": "__init__",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test_file": [
                    "str",
                    "typing.TextIO"
                ]
            }
        },
        "LintModuleTest.setUp": {
            "name": "setUp",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest._should_be_skipped_due_to_version": {
            "name": "_should_be_skipped_due_to_version",
            "location": 277,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest.__str__": {
            "name": "__str__",
            "location": 281,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest._open_expected_file": {
            "name": "_open_expected_file",
            "location": 285,
            "return": [
                "typing.IO"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest._open_source_file": {
            "name": "_open_source_file",
            "location": 288,
            "return": [
                "typing.IO"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest._get_expected": {
            "name": "_get_expected",
            "location": 294,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest._get_received": {
            "name": "_get_received",
            "location": 305,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest._runTest": {
            "name": "_runTest",
            "location": 315,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LintModuleTest._split_lines": {
            "name": "_split_lines",
            "location": 334,
            "return": [
                "tuple[list[typing.Text]]"
            ],
            "arguments": {
                "self": [],
                "expected_messages": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "lines": [
                    "list[]",
                    "str"
                ]
            }
        },
        "LintModuleTest._check_output_text": {
            "name": "_check_output_text",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expected_messages": [
                    "bool",
                    "str"
                ],
                "expected_lines": [
                    "bool",
                    "str"
                ],
                "received_lines": [
                    "bool",
                    "str"
                ]
            }
        },
        "LintModuleOutputUpdate._open_expected_file": {
            "name": "_open_expected_file",
            "location": 351,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LintModuleOutputUpdate._check_output_text": {
            "name": "_check_output_text",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expected_messages": [
                    "dict[str, typing.Any]"
                ],
                "expected_lines": [
                    "dict[str, typing.Any]"
                ],
                "received_lines": [
                    "list[]"
                ]
            }
        }
    },
    "shopify_python-master/tests/__init__.py": {},
    "shopify_python-master/tests/functional/blank_line_after_class_required.py": {
        "SomeClass.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shopify_python-master/tests/functional/catch_standard_error.py": {},
    "shopify_python-master/tests/functional/complex_list_comp.py": {
        "fcn_to_fail": {
            "name": "fcn_to_fail",
            "location": 4,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {}
        },
        "one_to_pass": {
            "name": "one_to_pass",
            "location": 9,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {}
        },
        "two_to_pass": {
            "name": "two_to_pass",
            "location": 17,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {}
        },
        "three_to_pass": {
            "name": "three_to_pass",
            "location": 26,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {}
        },
        "four_to_pass": {
            "name": "four_to_pass",
            "location": 32,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "five_to_pass": {
            "name": "five_to_pass",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shopify_python-master/tests/functional/cond_expr.py": {},
    "shopify_python-master/tests/functional/except_too_long.py": {},
    "shopify_python-master/tests/functional/finally_too_long.py": {},
    "shopify_python-master/tests/functional/global_variable.py": {
        "Integers.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyClass.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shopify_python-master/tests/functional/import_full_path.py": {},
    "shopify_python-master/tests/functional/import_modules_only.py": {},
    "shopify_python-master/tests/functional/lambda_func.py": {
        "foo1": {
            "name": "foo1",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "foo2": {
            "name": "foo2",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "foo3": {
            "name": "foo3",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "foo4": {
            "name": "foo4",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "shopify_python-master/tests/functional/multiple_import_items.py": {},
    "shopify_python-master/tests/functional/sequence_of_string_2.py": {
        "one_param": {
            "name": "one_param",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "seq": [
                    "str"
                ]
            }
        },
        "multiple_params": {
            "name": "multiple_params",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "message": [
                    "str"
                ],
                "seq": [
                    "str"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "return_type": {
            "name": "return_type",
            "location": 16,
            "return": [
                "list[typing.Union[str,int]]"
            ],
            "arguments": {
                "message_1": [
                    "str",
                    "int"
                ],
                "message_2": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "shopify_python-master/tests/functional/sequence_of_string_3.py": {
        "one_param": {
            "name": "one_param",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "seq": [
                    "str"
                ]
            }
        },
        "multiple_params": {
            "name": "multiple_params",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "message": [
                    "str"
                ],
                "seq": [
                    "str"
                ],
                "index": [
                    "int"
                ]
            }
        },
        "return_type": {
            "name": "return_type",
            "location": 17,
            "return": [
                "list[typing.Union[str,int]]"
            ],
            "arguments": {
                "message_1": [
                    "str",
                    "int"
                ],
                "message_2": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "shopify_python-master/tests/functional/string_exception.py": {},
    "shopify_python-master/tests/functional/try_too_long.py": {},
    "shopify_python-master/tests/functional/two_arg_exception2.py": {},
    "shopify_python-master/tests/functional/two_arg_exception3.py": {},
    "shopify_python-master/tests/functional/use_simple_lambdas.py": {},
    "shopify_python-master/tests/functional/__init__.py": {},
    "shopify_python-master/tests/shopify_python/test_ast.py": {
        "test_count_tree_size": {
            "name": "test_count_tree_size",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shopify_python-master/tests/shopify_python/test_git_utils.py": {
        "python_file": {
            "name": "python_file",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "main_repo": [
                    "str",
                    "typing.Iterable[str]"
                ]
            }
        },
        "python_script": {
            "name": "python_script",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "main_repo": [
                    "str"
                ]
            }
        },
        "non_python_file": {
            "name": "non_python_file",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "main_repo": [
                    "str"
                ]
            }
        },
        "remote_repo": {
            "name": "remote_repo",
            "location": 56,
            "return": [],
            "arguments": {
                "tmpdir": [
                    "str"
                ]
            }
        },
        "main_repo": {
            "name": "main_repo",
            "location": 62,
            "return": [
                "str",
                "list[str]"
            ],
            "arguments": {
                "tmpdir": [
                    "str"
                ],
                "remote_repo": [
                    "str",
                    "bool",
                    "None",
                    "set[str]"
                ]
            }
        },
        "test_detects_changed_python_files": {
            "name": "test_detects_changed_python_files",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [
                    "str",
                    "list[str]",
                    "None",
                    "int"
                ],
                "python_file": [
                    "str",
                    "None",
                    "set[str]"
                ],
                "python_script": [
                    "str",
                    "None",
                    "set[str]"
                ]
            }
        },
        "test_doesnt_include_changed_nonpython_files": {
            "name": "test_doesnt_include_changed_nonpython_files",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [
                    "str",
                    "list[str]"
                ],
                "python_file": [
                    "typing.Sequence[str]",
                    "list[str]",
                    "frozenset",
                    "str"
                ],
                "non_python_file": [
                    "set[_]",
                    "str",
                    "set[str]",
                    "bool"
                ]
            }
        },
        "test_only_include_modified_locally": {
            "name": "test_only_include_modified_locally",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [],
                "python_file": [
                    "str",
                    "typing.Callable[typing.Any, None]",
                    "None"
                ]
            }
        },
        "test_cant_find_remote_origin": {
            "name": "test_cant_find_remote_origin",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [],
                "remote_repo": [
                    "str"
                ]
            }
        },
        "test_cant_find_origin_master": {
            "name": "test_cant_find_origin_master",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [
                    "str",
                    "None",
                    "typing.Callable[, ]",
                    "bool"
                ],
                "remote_repo": []
            }
        },
        "test_dont_include_deleted_files": {
            "name": "test_dont_include_deleted_files",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [],
                "python_file": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_include_modified_files": {
            "name": "test_include_modified_files",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [],
                "python_file": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_dont_include_uncommited_or_untracked_files": {
            "name": "test_dont_include_uncommited_or_untracked_files",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [
                    "typing.Callable[str, str]",
                    "str"
                ],
                "python_file": [
                    "str",
                    "typing.Callable[str, str]",
                    "int"
                ]
            }
        },
        "test_dont_include_scripts_with_extensions": {
            "name": "test_dont_include_scripts_with_extensions",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [
                    "str"
                ]
            }
        },
        "test_dont_include_binary_files": {
            "name": "test_dont_include_binary_files",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "main_repo": [
                    "str"
                ]
            }
        },
        "test_autopep_files": {
            "name": "test_autopep_files",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_linter": {
            "name": "test_linter",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [
                    "str"
                ]
            }
        },
        "test_linter_with_config": {
            "name": "test_linter_with_config",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_passing_linter": {
            "name": "test_passing_linter",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [
                    "str"
                ]
            }
        },
        "test_only_include_modified_locally._add_and_commit_file": {
            "name": "_add_and_commit_file",
            "location": 106,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "shopify_python-master/tests/shopify_python/test_google_styleguide.py": {
        "TestGoogleStyleGuideChecker.assert_adds_code_messages": {
            "name": "assert_adds_code_messages",
            "location": 16,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "codes": [
                    "str",
                    "bool"
                ]
            }
        },
        "TestGoogleStyleGuideChecker.test_importing_function_fails": {
            "name": "test_importing_function_fails",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_importing_modules_passes": {
            "name": "test_importing_modules_passes",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_importing_relatively_fails": {
            "name": "test_importing_relatively_fails",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_global_variables": {
            "name": "test_global_variables",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_using_archaic_raise_fails": {
            "name": "test_using_archaic_raise_fails",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_using_reraise_passes": {
            "name": "test_using_reraise_passes",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_catch_standard_error_fails": {
            "name": "test_catch_standard_error_fails",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_catch_blank_passes": {
            "name": "test_catch_blank_passes",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_try_exc_fnly_complexity": {
            "name": "test_try_exc_fnly_complexity",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_multiple_from_imports": {
            "name": "test_multiple_from_imports",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_use_simple_lambdas": {
            "name": "test_use_simple_lambdas",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_use_simple_list_comps": {
            "name": "test_use_simple_list_comps",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_use_cond_exprs": {
            "name": "test_use_cond_exprs",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_unary_lambda_func_with_complex_operand_allowed": {
            "name": "test_unary_lambda_func_with_complex_operand_allowed",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_unary_lambda_func_without_operand_name_allowed": {
            "name": "test_unary_lambda_func_without_operand_name_allowed",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGoogleStyleGuideChecker.test_unary_lambda_func_with_unknown_operator_allowed": {
            "name": "test_unary_lambda_func_with_unknown_operator_allowed",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "monkeypatch": [
                    "dict[str, typing.Any]",
                    "None",
                    "bool"
                ]
            }
        },
        "TestGoogleStyleGuideChecker.test_binary_lambda_func_with_unknown_operator_allowed": {
            "name": "test_binary_lambda_func_with_unknown_operator_allowed",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "operator": [],
                "monkeypatch": [
                    "dict[str, typing.Any]",
                    "None",
                    "bool"
                ]
            }
        },
        "TestGoogleStyleGuideChecker.test_unary_lambda_func": {
            "name": "test_unary_lambda_func",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test_case": [
                    "str"
                ]
            }
        },
        "TestGoogleStyleGuideChecker.test_binary_lambda_func": {
            "name": "test_binary_lambda_func",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test_case": [
                    "str"
                ]
            }
        },
        "TestGoogleStyleGuideChecker.test_allowed_binary_operation": {
            "name": "test_allowed_binary_operation",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expression": [
                    "str",
                    "typing.TextIO",
                    "list[int]",
                    "None"
                ]
            }
        },
        "TestGoogleStyleGuideChecker.test_class_def_blank_line": {
            "name": "test_class_def_blank_line",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shopify_python-master/tests/shopify_python/test_package.py": {
        "test_version": {
            "name": "test_version",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shopify_python-master/tests/shopify_python/test_packaging.py": {
        "package_source_root": {
            "name": "package_source_root",
            "location": 13,
            "return": [
                "bytes"
            ],
            "arguments": {
                "tmpdir": [
                    "str",
                    "bytes"
                ]
            }
        },
        "git_package_root": {
            "name": "git_package_root",
            "location": 35,
            "return": [
                "float",
                "str"
            ],
            "arguments": {
                "package_source_root": [
                    "float",
                    "str"
                ]
            }
        },
        "revision_file_contents": {
            "name": "revision_file_contents",
            "location": 44,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "package_root_with_revision_file": {
            "name": "package_root_with_revision_file",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "package_source_root": [
                    "str"
                ],
                "revision_file_contents": [
                    "str"
                ]
            }
        },
        "package_installed": {
            "name": "package_installed",
            "location": 57,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "develop_mode": [
                    "bool",
                    "typing.Type",
                    "str",
                    "None",
                    "dict[int, bool]"
                ]
            }
        },
        "call_get_package_revision": {
            "name": "call_get_package_revision",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "test_git_package": {
            "name": "test_git_package",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "develop_mode": [
                    "dict[str, typing.Sequence[str]]"
                ],
                "git_package_root": [
                    "str",
                    "typing.IO",
                    "int"
                ]
            }
        },
        "test_with_revision_file": {
            "name": "test_with_revision_file",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "develop_mode": [
                    "int",
                    "list[str]"
                ],
                "package_root_with_revision_file": [
                    "int",
                    "list[str]"
                ],
                "revision_file_contents": []
            }
        },
        "test_without_revision_info": {
            "name": "test_without_revision_info",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "develop_mode": [],
                "package_source_root": []
            }
        },
        "test_uninstalled_package": {
            "name": "test_uninstalled_package",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shopify_python-master/tests/shopify_python/test_shopify_styleguide.py": {
        "TestShopifyStyleGuideChecker.test_disable_name_only": {
            "name": "test_disable_name_only",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shopify_python-master/tests/shopify_python/__init__.py": {}
}
{
    "signalform-tools-master/setup.py": {},
    "signalform-tools-master/signalform_tools/preflight.py": {
        "get_sfx_token": {
            "name": "get_sfx_token",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "read_conf": {
            "name": "read_conf",
            "location": 37,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "filename": []
            }
        },
        "extract_program_text": {
            "name": "extract_program_text",
            "location": 45,
            "return": [
                "list[]"
            ],
            "arguments": {
                "filename": []
            }
        },
        "send_to_sfx": {
            "name": "send_to_sfx",
            "location": 66,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "program_text": [],
                "start": [],
                "stop": []
            }
        },
        "extract_events": {
            "name": "extract_events",
            "location": 80,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "text": []
            }
        },
        "display_events": {
            "name": "display_events",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "text": []
            }
        },
        "parse_sfx_now": {
            "name": "parse_sfx_now",
            "location": 102,
            "return": [
                "int"
            ],
            "arguments": {
                "input_time": []
            }
        },
        "parse_sfx_relative_time": {
            "name": "parse_sfx_relative_time",
            "location": 111,
            "return": [
                "int"
            ],
            "arguments": {
                "input_time": []
            }
        },
        "parse_timestamp": {
            "name": "parse_timestamp",
            "location": 126,
            "return": [
                "int"
            ],
            "arguments": {
                "input_time": []
            }
        },
        "parse_date": {
            "name": "parse_date",
            "location": 141,
            "return": [
                "int"
            ],
            "arguments": {
                "input_time": []
            }
        },
        "extract_timestamp": {
            "name": "extract_timestamp",
            "location": 148,
            "return": [],
            "arguments": {
                "input_time": []
            }
        },
        "interpret_interval": {
            "name": "interpret_interval",
            "location": 165,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "args": []
            }
        },
        "preflight": {
            "name": "preflight",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [],
                "start": [],
                "stop": [],
                "label": []
            }
        },
        "preflight_signalform": {
            "name": "preflight_signalform",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "signalform-tools-master/signalform_tools/show.py": {
        "show": {
            "name": "show",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "resource": []
            }
        },
        "parse_resources": {
            "name": "parse_resources",
            "location": 32,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "parse_state": {
            "name": "parse_state",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "show_signalform": {
            "name": "show_signalform",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "signalform-tools-master/signalform_tools/signalform.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "signalform-tools-master/signalform_tools/utils.py": {
        "download_tfstate": {
            "name": "download_tfstate",
            "location": 11,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "extract_s3_path": {
            "name": "extract_s3_path",
            "location": 51,
            "return": [
                "None",
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "d": [
                    "str"
                ]
            }
        }
    },
    "signalform-tools-master/signalform_tools/validate.py": {
        "parse": {
            "name": "parse",
            "location": 31,
            "return": [
                "list[]"
            ],
            "arguments": {
                "line": [
                    "list[str]",
                    "str",
                    "typing.Iterator"
                ],
                "rules": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "validate": {
            "name": "validate",
            "location": 37,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "resource": [
                    "int",
                    "dict[, ]",
                    "str"
                ],
                "rules": [
                    "str"
                ]
            }
        },
        "parse_type": {
            "name": "parse_type",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "line": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "register_parsing_rule": {
            "name": "register_parsing_rule",
            "location": 304,
            "return": [],
            "arguments": {}
        },
        "register_validation_rule": {
            "name": "register_validation_rule",
            "location": 314,
            "return": [],
            "arguments": {}
        },
        "get_kv_config": {
            "name": "get_kv_config",
            "location": 326,
            "return": [
                "tuple[str]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "parse_name": {
            "name": "parse_name",
            "location": 335,
            "return": [
                "tuple[typing.Text]",
                "None"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "parse_program_text": {
            "name": "parse_program_text",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "validate_parentheses": {
            "name": "validate_parentheses",
            "location": 352,
            "return": [
                "typing.Text",
                "None"
            ],
            "arguments": {
                "resource": [
                    "int",
                    "typing.Sequence[int]",
                    "list[list[str]]"
                ]
            }
        },
        "parse_max_delay": {
            "name": "parse_max_delay",
            "location": 369,
            "return": [
                "tuple[int]",
                "None"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "validate_max_delay": {
            "name": "validate_max_delay",
            "location": 378,
            "return": [
                "typing.Text",
                "None"
            ],
            "arguments": {
                "resource": [
                    "int",
                    "str"
                ]
            }
        },
        "parse_detect_label": {
            "name": "parse_detect_label",
            "location": 388,
            "return": [
                "None"
            ],
            "arguments": {
                "line": [
                    "str",
                    "bytes"
                ]
            }
        },
        "parse_runbook_url": {
            "name": "parse_runbook_url",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "validate_detect_labels": {
            "name": "validate_detect_labels",
            "location": 404,
            "return": [
                "typing.Text",
                "None"
            ],
            "arguments": {
                "resource": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "validate_runbook_url": {
            "name": "validate_runbook_url",
            "location": 415,
            "return": [
                "typing.Text",
                "None"
            ],
            "arguments": {
                "resource": [
                    "list[]",
                    "bytes",
                    "str",
                    "list[list[str]]"
                ]
            }
        },
        "compact_heredoc": {
            "name": "compact_heredoc",
            "location": 438,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "strip_comments": {
            "name": "strip_comments",
            "location": 482,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        },
        "clean_conf": {
            "name": "clean_conf",
            "location": 497,
            "return": [
                "list[bytes]",
                "frozenset",
                "list[str]"
            ],
            "arguments": {
                "tf_conf": [
                    "str",
                    "list[int]"
                ]
            }
        },
        "parse_resources": {
            "name": "parse_resources",
            "location": 507,
            "return": [
                "list[]"
            ],
            "arguments": {
                "tf_conf": [
                    "str",
                    "list[int]"
                ],
                "available_resources": [
                    "list[str]"
                ]
            }
        },
        "validate_config": {
            "name": "validate_config",
            "location": 522,
            "return": [
                "int"
            ],
            "arguments": {
                "tf_conf": [
                    "str",
                    "bool",
                    "float"
                ],
                "available_resources": [
                    "str",
                    "bool",
                    "float"
                ]
            }
        },
        "validate_file": {
            "name": "validate_file",
            "location": 534,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ],
                "available_resources": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        },
        "list_filenames": {
            "name": "list_filenames",
            "location": 539,
            "return": [
                "list[]"
            ],
            "arguments": {
                "directory": [
                    "str"
                ]
            }
        },
        "validate_signalform": {
            "name": "validate_signalform",
            "location": 548,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "Resource.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "bool"
                ],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "Resource.from_config": {
            "name": "from_config",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "bool",
                    "typing.Type",
                    "list[dict[, ]]",
                    "str"
                ]
            }
        },
        "Resource.register_parsing_rule": {
            "name": "register_parsing_rule",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "complex",
                    "bytes",
                    "str",
                    "int",
                    "None"
                ],
                "rule": [
                    "complex",
                    "bytes",
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "Resource.get_parsing_rules": {
            "name": "get_parsing_rules",
            "location": 65,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "Resource.register_validation_rule": {
            "name": "register_validation_rule",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "complex",
                    "bytes",
                    "str",
                    "int",
                    "None"
                ],
                "rule": [
                    "complex",
                    "bytes",
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "Resource.get_validation_rules": {
            "name": "get_validation_rules",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resource.parse": {
            "name": "parse",
            "location": 76,
            "return": [],
            "arguments": {
                "cls": [
                    "list[]",
                    "str",
                    "list[str]"
                ],
                "line": [
                    "str",
                    "int",
                    "list[str]"
                ]
            }
        },
        "Resource.parse_config": {
            "name": "parse_config",
            "location": 80,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cls": [],
                "config": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Resource.validate": {
            "name": "validate",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SignalFlowResource.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "None"
                ],
                "name": [
                    "str",
                    "None"
                ],
                "program_text": [
                    "str",
                    "int",
                    "dict[str, str]",
                    "None"
                ],
                "max_delay": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "SignalFlowResource.from_config": {
            "name": "from_config",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "bool",
                    "typing.Type",
                    "list[dict[, ]]",
                    "str"
                ]
            }
        },
        "SignalFlowResource.get_parsing_rules": {
            "name": "get_parsing_rules",
            "location": 101,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "SignalFlowResource.get_validation_rules": {
            "name": "get_validation_rules",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SignalFlowResource.parse": {
            "name": "parse",
            "location": 108,
            "return": [],
            "arguments": {
                "cls": [],
                "line": [
                    "str"
                ]
            }
        },
        "SignalFlowResource.validate": {
            "name": "validate",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Detector.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "float",
                    "None"
                ],
                "program_text": [
                    "str",
                    "float",
                    "None"
                ],
                "max_delay": [
                    "None",
                    "str",
                    "float"
                ],
                "detect_labels": [
                    "None",
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "list[tuple[typing.Union[str,typing.Any]]]",
                    "list[str]"
                ],
                "runbook_urls": [
                    "None",
                    "str"
                ]
            }
        },
        "Detector.from_config": {
            "name": "from_config",
            "location": 132,
            "return": [
                "Detector"
            ],
            "arguments": {
                "cls": [],
                "config": [
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "Detector.get_parsing_rules": {
            "name": "get_parsing_rules",
            "location": 149,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "Detector.get_validation_rules": {
            "name": "get_validation_rules",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Detector.parse": {
            "name": "parse",
            "location": 156,
            "return": [],
            "arguments": {
                "cls": [],
                "line": [
                    "str"
                ]
            }
        },
        "Detector.validate": {
            "name": "validate",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Chart.__init__": {
            "name": "__init__",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "program_text": [
                    "str"
                ],
                "max_delay": [
                    "None",
                    "str"
                ]
            }
        },
        "Chart.from_config": {
            "name": "from_config",
            "location": 171,
            "return": [
                "Chart"
            ],
            "arguments": {
                "cls": [],
                "config": [
                    "int",
                    "dict[str, str]",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "Chart.get_parsing_rules": {
            "name": "get_parsing_rules",
            "location": 179,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "Chart.get_validation_rules": {
            "name": "get_validation_rules",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Chart.parse": {
            "name": "parse",
            "location": 186,
            "return": [],
            "arguments": {
                "cls": [],
                "line": [
                    "str"
                ]
            }
        },
        "Chart.validate": {
            "name": "validate",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextNote.__init__": {
            "name": "__init__",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ]
            }
        },
        "TextNote.from_config": {
            "name": "from_config",
            "location": 201,
            "return": [
                "TextNote"
            ],
            "arguments": {
                "cls": [],
                "config": [
                    "int",
                    "dict[str, str]",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "TextNote.get_parsing_rules": {
            "name": "get_parsing_rules",
            "location": 209,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "TextNote.get_validation_rules": {
            "name": "get_validation_rules",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextNote.parse": {
            "name": "parse",
            "location": 216,
            "return": [],
            "arguments": {
                "cls": [],
                "line": [
                    "str"
                ]
            }
        },
        "TextNote.validate": {
            "name": "validate",
            "location": 219,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dashboard.__init__": {
            "name": "__init__",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ]
            }
        },
        "Dashboard.from_config": {
            "name": "from_config",
            "location": 231,
            "return": [
                "Dashboard"
            ],
            "arguments": {
                "cls": [],
                "config": [
                    "int",
                    "dict[str, str]",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "Dashboard.get_parsing_rules": {
            "name": "get_parsing_rules",
            "location": 239,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "Dashboard.get_validation_rules": {
            "name": "get_validation_rules",
            "location": 242,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dashboard.parse": {
            "name": "parse",
            "location": 246,
            "return": [],
            "arguments": {
                "cls": [],
                "line": [
                    "str"
                ]
            }
        },
        "Dashboard.validate": {
            "name": "validate",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DashboardGroup.__init__": {
            "name": "__init__",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ]
            }
        },
        "DashboardGroup.from_config": {
            "name": "from_config",
            "location": 261,
            "return": [
                "DashboardGroup"
            ],
            "arguments": {
                "cls": [],
                "config": [
                    "int",
                    "dict[str, str]",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "DashboardGroup.get_parsing_rules": {
            "name": "get_parsing_rules",
            "location": 269,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "str",
                    "None",
                    "typing.Type",
                    "list[str]"
                ]
            }
        },
        "DashboardGroup.get_validation_rules": {
            "name": "get_validation_rules",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DashboardGroup.parse": {
            "name": "parse",
            "location": 276,
            "return": [],
            "arguments": {
                "cls": [],
                "line": [
                    "str"
                ]
            }
        },
        "DashboardGroup.validate": {
            "name": "validate",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "register_parsing_rule.decorator": {
            "name": "decorator",
            "location": 306,
            "return": [],
            "arguments": {
                "rule": []
            }
        },
        "register_validation_rule.decorator": {
            "name": "decorator",
            "location": 316,
            "return": [],
            "arguments": {
                "rule": []
            }
        },
        "validate_parentheses.count": {
            "name": "count",
            "location": 356,
            "return": [
                "int"
            ],
            "arguments": {
                "char": []
            }
        },
        "compact_heredoc.find_end": {
            "name": "find_end",
            "location": 445,
            "return": [],
            "arguments": {
                "eof": [],
                "start": []
            }
        },
        "compact_heredoc.heredoc_where": {
            "name": "heredoc_where",
            "location": 454,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "compact_heredoc.compact": {
            "name": "compact",
            "location": 466,
            "return": [],
            "arguments": {
                "compacted": [],
                "indexed_line": []
            }
        }
    },
    "signalform-tools-master/signalform_tools/__about__.py": {},
    "signalform-tools-master/signalform_tools/__init__.py": {},
    "signalform-tools-master/tests/preflight_test.py": {
        "test_foo": {
            "name": "test_foo",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
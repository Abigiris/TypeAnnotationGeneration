{
    "simetuc-master/setup.py": {},
    "simetuc-master/simetuc/commandline.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 72,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "_setup_logging": {
            "name": "_setup_logging",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "console_level": [
                    "bool"
                ],
                "only_console": [
                    "bool"
                ]
            }
        },
        "_stop_logging": {
            "name": "_stop_logging",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "command_plot": {
            "name": "command_plot",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "command_simulation": {
            "name": "command_simulation",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "ext_args": [
                    "None",
                    "list[str]",
                    "str",
                    "typing.Any",
                    "typing.OrderedDict"
                ]
            }
        }
    },
    "simetuc-master/simetuc/lattice.py": {
        "_check_lattice_settings": {
            "name": "_check_lattice_settings",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "cte": [
                    "typing.Sequence[str]",
                    "str"
                ]
            }
        },
        "_create_lattice": {
            "name": "_create_lattice",
            "location": 82,
            "return": [],
            "arguments": {
                "spacegroup": [
                    "list[float]",
                    "list[str]",
                    "list[int]",
                    "int",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "typing.Sequence[str]",
                    "None"
                ],
                "cell_par": [
                    "list[float]",
                    "list[str]",
                    "list[int]",
                    "int",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "typing.Sequence[str]",
                    "None"
                ],
                "num_uc": [
                    "list[float]",
                    "list[str]",
                    "list[int]",
                    "int",
                    "str",
                    "list[dict[str, typing.Any]]",
                    "typing.Sequence[str]",
                    "None"
                ],
                "sites_pos": [],
                "sites_occ": []
            }
        },
        "_create_lattice_cif": {
            "name": "_create_lattice_cif",
            "location": 98,
            "return": [],
            "arguments": {
                "cif_file": [
                    "str",
                    "bytes",
                    "typing.TextIO"
                ],
                "num_uc": [
                    "int",
                    "None"
                ],
                "ion_sites": [
                    "dict[, ]",
                    "str",
                    "bytes"
                ]
            }
        },
        "_make_spherical": {
            "name": "_make_spherical",
            "location": 112,
            "return": [],
            "arguments": {
                "atoms": [],
                "radius": [
                    "float",
                    "int",
                    "list[str]",
                    "str"
                ]
            }
        },
        "_impurify_lattice": {
            "name": "_impurify_lattice",
            "location": 129,
            "return": [],
            "arguments": {
                "atoms": [],
                "S_conc": [],
                "A_conc": []
            }
        },
        "_impurify_lattice_cif": {
            "name": "_impurify_lattice_cif",
            "location": 171,
            "return": [],
            "arguments": {
                "atoms": [],
                "S_conc": [],
                "A_conc": [],
                "ion_sites": []
            }
        },
        "_calculate_distances": {
            "name": "_calculate_distances",
            "location": 231,
            "return": [],
            "arguments": {
                "atoms": [],
                "min_im_conv": [
                    "bool"
                ],
                "no_console": [
                    "bool"
                ]
            }
        },
        "create_ground_states": {
            "name": "create_ground_states",
            "location": 259,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "ion_type": [
                    "str",
                    "typing.Type",
                    "bool"
                ],
                "lattice_info": []
            }
        },
        "create_interaction_matrices": {
            "name": "create_interaction_matrices",
            "location": 301,
            "return": [],
            "arguments": {
                "ion_type": [
                    "int",
                    "str",
                    "None",
                    "list[str]"
                ],
                "dist_array": [
                    "str",
                    "bytes",
                    "list[int]"
                ],
                "index_S_i": [
                    "list[int]",
                    "list[list[int]]",
                    "list[P]",
                    "int",
                    "list[]",
                    "bytes",
                    "list[dict[str, typing.Any]]"
                ],
                "index_A_j": [
                    "list[str]",
                    "list[typing.Optional[C]]",
                    "list[P]",
                    "typing.Callable[T, bool]",
                    "list[E]"
                ],
                "lattice_info": [
                    "list[str]"
                ]
            }
        },
        "make_full_path": {
            "name": "make_full_path",
            "location": 377,
            "return": [
                "str"
            ],
            "arguments": {
                "folder_path": [
                    "str",
                    "bool",
                    "None",
                    "list[str]"
                ],
                "num_uc": [],
                "S_conc": [
                    "float",
                    "int"
                ],
                "A_conc": [
                    "float",
                    "int"
                ],
                "radius": [
                    "None",
                    "float",
                    "int",
                    "list[int]",
                    "str"
                ]
            }
        },
        "generate": {
            "name": "generate",
            "location": 390,
            "return": [],
            "arguments": {
                "cte": [
                    "list[float]"
                ],
                "min_im_conv": [
                    "bool"
                ],
                "full_path": [
                    "None",
                    "str",
                    "typing.IO"
                ],
                "no_save": [
                    "bool"
                ]
            }
        }
    },
    "simetuc-master/simetuc/odesolver.py": {
        "_rate_eq": {
            "name": "_rate_eq",
            "location": 33,
            "return": [],
            "arguments": {
                "t": [
                    "bool",
                    "None"
                ],
                "y": [
                    "list[]",
                    "bytes"
                ],
                "decay_matrix": [],
                "UC_matrix": [],
                "N_indices": [
                    "list[]"
                ],
                "coop_ET_matrix": [],
                "coop_N_indices": [
                    "tuple[int]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "_jac_rate_eq": {
            "name": "_jac_rate_eq",
            "location": 46,
            "return": [],
            "arguments": {
                "t": [
                    "float",
                    "typing.Type",
                    "str"
                ],
                "y": [
                    "set[]",
                    "typing.Callable[, ]",
                    "int"
                ],
                "decay_matrix": [],
                "UC_matrix": [
                    "float"
                ],
                "jac_indices": [],
                "coop_ET_matrix": [
                    "str",
                    "None",
                    "int",
                    "float"
                ],
                "coop_jac_indices": []
            }
        },
        "_rate_eq_pulse": {
            "name": "_rate_eq_pulse",
            "location": 65,
            "return": [],
            "arguments": {
                "t": [],
                "y": [],
                "abs_matrix": [],
                "decay_matrix": [],
                "UC_matrix": [],
                "N_indices": [],
                "coop_ET_matrix": [],
                "coop_N_indices": []
            }
        },
        "_jac_rate_eq_pulse": {
            "name": "_jac_rate_eq_pulse",
            "location": 74,
            "return": [],
            "arguments": {
                "t": [],
                "y": [],
                "abs_matrix": [],
                "decay_matrix": [],
                "UC_matrix": [],
                "jac_indices": [],
                "coop_ET_matrix": [],
                "coop_jac_indices": []
            }
        },
        "_solve_ode": {
            "name": "_solve_ode",
            "location": 85,
            "return": [],
            "arguments": {
                "t_arr": [],
                "fun": [
                    "str",
                    "int",
                    "list[str]"
                ],
                "fargs": [
                    "tuple[]",
                    "int"
                ],
                "jfun": [
                    "str",
                    "int",
                    "list[str]"
                ],
                "jargs": [
                    "tuple[]",
                    "str",
                    "bool",
                    "list[str]",
                    "None"
                ],
                "initial_population": [],
                "rtol": [
                    "float"
                ],
                "atol": [
                    "float"
                ],
                "nsteps": [
                    "int"
                ],
                "method": [
                    "typing.Text"
                ],
                "quiet": [
                    "bool"
                ]
            }
        },
        "solve_pulse": {
            "name": "solve_pulse",
            "location": 178,
            "return": [],
            "arguments": {
                "t_pulse": [
                    "float",
                    "int"
                ],
                "initial_pop": [
                    "float",
                    "int"
                ],
                "abs_matrix": [
                    "float",
                    "int"
                ],
                "decay_matrix": [
                    "float",
                    "int"
                ],
                "UC_matrix": [
                    "float",
                    "int"
                ],
                "N_indices": [
                    "float",
                    "int"
                ],
                "jac_indices": [
                    "float",
                    "int"
                ],
                "coop_ET_matrix": [
                    "float",
                    "int"
                ],
                "coop_N_indices": [
                    "float",
                    "int"
                ],
                "coop_jac_indices": [
                    "float",
                    "int"
                ],
                "nsteps": [
                    "int"
                ],
                "rtol": [
                    "float"
                ],
                "atol": [
                    "float"
                ],
                "quiet": [
                    "bool"
                ],
                "method": [
                    "typing.Text"
                ]
            }
        },
        "solve_relax": {
            "name": "solve_relax",
            "location": 196,
            "return": [],
            "arguments": {
                "t_sol": [
                    "bool",
                    "float"
                ],
                "initial_pop": [
                    "bool",
                    "float"
                ],
                "decay_matrix": [
                    "bool",
                    "float"
                ],
                "UC_matrix": [
                    "bool",
                    "float"
                ],
                "N_indices": [
                    "bool",
                    "float"
                ],
                "jac_indices": [
                    "bool",
                    "float"
                ],
                "coop_ET_matrix": [
                    "bool",
                    "float"
                ],
                "coop_N_indices": [
                    "bool",
                    "float"
                ],
                "coop_jac_indices": [
                    "bool",
                    "float"
                ],
                "nsteps": [
                    "int"
                ],
                "rtol": [
                    "float"
                ],
                "atol": [
                    "float"
                ],
                "quiet": [
                    "bool"
                ]
            }
        }
    },
    "simetuc-master/simetuc/optimize.py": {
        "optim_fun": {
            "name": "optim_fun",
            "location": 79,
            "return": [],
            "arguments": {
                "function": [
                    "typing.Callable[, ]",
                    "int"
                ],
                "params": [
                    "typing.Type"
                ],
                "sim": [
                    "dict[, ]"
                ]
            }
        },
        "optim_fun_dynamics": {
            "name": "optim_fun_dynamics",
            "location": 109,
            "return": [],
            "arguments": {
                "params": [
                    "int",
                    "typing.Callable[, ]"
                ],
                "sim": [
                    "str",
                    "int",
                    "float"
                ],
                "average": [
                    "bool"
                ],
                "N_samples": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "optim_fun_dynamics_conc": {
            "name": "optim_fun_dynamics_conc",
            "location": 119,
            "return": [],
            "arguments": {
                "params": [
                    "int",
                    "typing.Callable[, ]"
                ],
                "sim": [
                    "bool",
                    "typing.Mapping"
                ],
                "average": [
                    "bool"
                ],
                "N_samples": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "setup_optim": {
            "name": "setup_optim",
            "location": 136,
            "return": [
                "tuple[typing.Union[dict[tuple[typing.Union[str,str]], tuple[typing.Union[str,str]]],str,dict[, ],dict[typing.Any, str],dict[str, typing.Any],Parameters]]"
            ],
            "arguments": {
                "cte": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "dict[str, typing.Union[str,None]]"
                ]
            }
        },
        "optimize": {
            "name": "optimize",
            "location": 182,
            "return": [
                "OptimSolution"
            ],
            "arguments": {
                "function": [
                    "bool",
                    "typing.Callable[, ]",
                    "None",
                    "str"
                ],
                "cte": [],
                "average": [
                    "bool"
                ],
                "material_text": [
                    "typing.Text"
                ],
                "N_samples": [
                    "None",
                    "bool",
                    "typing.Callable[, ]",
                    "str"
                ],
                "full_path": [
                    "None",
                    "str",
                    "bool",
                    "set[str]"
                ]
            }
        },
        "optimize_dynamics": {
            "name": "optimize_dynamics",
            "location": 260,
            "return": [],
            "arguments": {
                "cte": [
                    "str",
                    "int"
                ],
                "average": [
                    "bool"
                ],
                "full_path": [
                    "None",
                    "bool",
                    "str",
                    "list[str]"
                ],
                "N_samples": [
                    "None",
                    "bool",
                    "str",
                    "list[str]"
                ]
            }
        },
        "optimize_concentrations": {
            "name": "optimize_concentrations",
            "location": 269,
            "return": [],
            "arguments": {
                "cte": [
                    "str",
                    "int",
                    "list[str]"
                ],
                "average": [
                    "bool"
                ],
                "full_path": [
                    "None",
                    "str",
                    "bool",
                    "dict[, ]",
                    "typing.Type"
                ],
                "N_samples": [
                    "None",
                    "str",
                    "bool",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        },
        "OptimSolution.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "list[str]",
                    "list[float]",
                    "str",
                    "bool",
                    "dict[, ]",
                    "typing.Sequence['cirq.Qid']"
                ],
                "cte": [
                    "str",
                    "dict[int, dict[, ]]"
                ],
                "optim_progress": [
                    "int",
                    "str",
                    "float"
                ],
                "total_time": [
                    "float",
                    "int"
                ]
            }
        },
        "OptimSolution.plot": {
            "name": "plot",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OptimSolution.save": {
            "name": "save",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OptimSolution.save_txt": {
            "name": "save_txt",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_path": [
                    "None",
                    "str"
                ],
                "mode": [
                    "typing.Text"
                ],
                "cmd": [
                    "typing.Text"
                ]
            }
        },
        "optimize.callback_fun": {
            "name": "callback_fun",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "params": [],
                "iter_num": [],
                "resid": [],
                "sim": [],
                "average": [
                    "bool"
                ],
                "N_samples": [
                    "None"
                ]
            }
        }
    },
    "simetuc-master/simetuc/plotter.py": {
        "plot_avg_decay_data": {
            "name": "plot_avg_decay_data",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "t_sol": [],
                "list_sim_data": [],
                "list_exp_data": [
                    "None"
                ],
                "state_labels": [
                    "None"
                ],
                "concentration": [
                    "None"
                ],
                "atol": [
                    "float"
                ],
                "colors": [
                    "typing.Text"
                ],
                "fig": [
                    "None"
                ],
                "title": [
                    "typing.Text"
                ]
            }
        },
        "plot_state_decay_data": {
            "name": "plot_state_decay_data",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "t_sol": [],
                "sim_data_array": [],
                "state_label": [
                    "None"
                ],
                "atol": []
            }
        },
        "plot_power_dependence": {
            "name": "plot_power_dependence",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "sim_data_arr": [],
                "power_dens_arr": [],
                "state_labels": []
            }
        },
        "plot_concentration_dependence": {
            "name": "plot_concentration_dependence",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "sim_data_arr": [],
                "conc_arr": [],
                "state_labels": [],
                "ion_label": [
                    "None"
                ]
            }
        },
        "plot_lattice": {
            "name": "plot_lattice",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "doped_lattice": [],
                "ion_type": []
            }
        },
        "plot_lattice.orthogonal_proj": {
            "name": "orthogonal_proj",
            "location": 294,
            "return": [],
            "arguments": {
                "zfront": [],
                "zback": []
            }
        }
    },
    "simetuc-master/simetuc/precalculate.py": {
        "_load_lattice": {
            "name": "_load_lattice",
            "location": 39,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "bool"
                ]
            }
        },
        "_create_absorption_matrix": {
            "name": "_create_absorption_matrix",
            "location": 51,
            "return": [
                "str",
                "tuple[typing.Union[str,str]]"
            ],
            "arguments": {
                "abs_sensitizer": [
                    "list[int]",
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "abs_activator": [
                    "list[int]",
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "index_S_i": [
                    "list[int]",
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "index_A_j": []
            }
        },
        "_create_total_absorption_matrix": {
            "name": "_create_total_absorption_matrix",
            "location": 79,
            "return": [],
            "arguments": {
                "sensitizer_states": [],
                "activator_states": [],
                "num_energy_states": [
                    "int"
                ],
                "excitations_dict": [
                    "dict[, ]"
                ],
                "index_S_i": [
                    "list[int]",
                    "bytes",
                    "list[str]"
                ],
                "index_A_j": [
                    "list[int]",
                    "bytes",
                    "list[str]"
                ]
            }
        },
        "_create_branching_ratios": {
            "name": "_create_branching_ratios",
            "location": 130,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "sensitizer_states": [
                    "float"
                ],
                "activator_states": [
                    "float"
                ],
                "decay_dict": [
                    "bytes"
                ]
            }
        },
        "_create_decay_vectors": {
            "name": "_create_decay_vectors",
            "location": 161,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "sensitizer_states": [
                    "int",
                    "typing.Iterable[typing.Any]",
                    "typing.Callable[, ]"
                ],
                "activator_states": [
                    "int",
                    "typing.Iterable[typing.Any]",
                    "typing.Callable[, ]"
                ],
                "decay_dict": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "_create_decay_matrix": {
            "name": "_create_decay_matrix",
            "location": 184,
            "return": [
                "str",
                "int",
                "list[]",
                "dict[str, typing.Union[float,None]]"
            ],
            "arguments": {
                "sensitizer_states": [
                    "int"
                ],
                "activator_states": [
                    "int"
                ],
                "decay_dict": [
                    "int",
                    "list[int]",
                    "dict[, ]",
                    "list[tuple[typing.Union[int,int]]]",
                    "None",
                    "str"
                ],
                "index_S_i": [
                    "int",
                    "list[int]",
                    "dict[, ]",
                    "list[tuple[typing.Union[int,int]]]",
                    "None",
                    "str"
                ],
                "index_A_j": []
            }
        },
        "_create_ET_matrices": {
            "name": "_create_ET_matrices",
            "location": 235,
            "return": [],
            "arguments": {
                "index_S_i": [
                    "list[int]",
                    "int",
                    "float"
                ],
                "index_A_j": [
                    "list[int]",
                    "int",
                    "float",
                    "str",
                    "None"
                ],
                "dict_ET": [
                    "dict[, ]",
                    "dict[str, set[str]]",
                    "dict[int, int]"
                ],
                "indices_S_k": [
                    "list[numpy.array]",
                    "list[numpy.ndarray]",
                    "list[str]"
                ],
                "indices_S_l": [
                    "list[numpy.array]",
                    "list[numpy.ndarray]",
                    "list[str]"
                ],
                "indices_A_k": [
                    "list[numpy.array]",
                    "list[numpy.ndarray]",
                    "list[str]"
                ],
                "indices_A_l": [
                    "list[numpy.array]",
                    "list[numpy.ndarray]",
                    "list[str]"
                ],
                "dists_S_k": [
                    "list[numpy.array]",
                    "str",
                    "bytes"
                ],
                "dists_S_l": [
                    "list[numpy.array]",
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "bytes"
                ],
                "dists_A_k": [
                    "list[numpy.array]",
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "bytes"
                ],
                "dists_A_l": [
                    "list[numpy.array]",
                    "str",
                    "bytes"
                ],
                "sensitizer_states": [
                    "int",
                    "tuple[typing.Union[int,int]]"
                ],
                "activator_states": [
                    "int",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "_create_coop_ET_matrices": {
            "name": "_create_coop_ET_matrices",
            "location": 427,
            "return": [],
            "arguments": {
                "index_S_i": [
                    "list[int]",
                    "int",
                    "bytes",
                    "float"
                ],
                "index_A_j": [
                    "list[int]",
                    "float",
                    "dict[str, str]",
                    "bool",
                    "set[]"
                ],
                "dict_ET": [
                    "dict[, ]"
                ],
                "indices_S_k": [
                    "list[numpy.array]",
                    "bool",
                    "None"
                ],
                "indices_S_l": [
                    "list[numpy.array]",
                    "bool",
                    "None"
                ],
                "indices_A_k": [
                    "list[numpy.array]",
                    "list[str]",
                    "list[]",
                    "list[typing.Union[int,str]]"
                ],
                "indices_A_l": [
                    "list[numpy.array]",
                    "bool",
                    "None"
                ],
                "dists_S_k": [
                    "float",
                    "int"
                ],
                "dists_S_l": [
                    "list[numpy.array]",
                    "bool",
                    "None"
                ],
                "dists_A_k": [
                    "float",
                    "int",
                    "None"
                ],
                "dists_A_l": [
                    "list[numpy.array]",
                    "bool",
                    "None"
                ],
                "sensitizer_states": [
                    "int"
                ],
                "activator_states": [
                    "int"
                ],
                "d_max_coop": []
            }
        },
        "_calculate_jac_matrices": {
            "name": "_calculate_jac_matrices",
            "location": 603,
            "return": [],
            "arguments": {
                "N_indices": []
            }
        },
        "_calculate_coop_jac_matrices": {
            "name": "_calculate_coop_jac_matrices",
            "location": 626,
            "return": [],
            "arguments": {
                "coop_N_indices": [
                    "list[]"
                ]
            }
        },
        "get_lifetimes": {
            "name": "get_lifetimes",
            "location": 702,
            "return": [
                "list[float]"
            ],
            "arguments": {
                "cte": [
                    "str",
                    "bool"
                ]
            }
        },
        "setup_microscopic_eqs": {
            "name": "setup_microscopic_eqs",
            "location": 713,
            "return": [],
            "arguments": {
                "cte": [],
                "gen_lattice": [
                    "bool"
                ],
                "full_path": [
                    "None",
                    "set[int]",
                    "str",
                    "bool"
                ]
            }
        },
        "setup_average_eqs": {
            "name": "setup_average_eqs",
            "location": 884,
            "return": [],
            "arguments": {
                "cte": [
                    "int",
                    "None",
                    "str"
                ],
                "gen_lattice": [
                    "bool"
                ],
                "full_path": [
                    "None",
                    "bool",
                    "str",
                    "typing.Iterator"
                ]
            }
        },
        "_create_absorption_matrix.get_block": {
            "name": "get_block",
            "location": 64,
            "return": [],
            "arguments": {
                "num": []
            }
        },
        "_create_decay_matrix.get_block": {
            "name": "get_block",
            "location": 217,
            "return": [],
            "arguments": {
                "num": []
            }
        },
        "_create_ET_matrices.add_ET_process": {
            "name": "add_ET_process",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "index_ion": [],
                "indices_ions": [],
                "dist_ions": [],
                "strength": [],
                "mult": [],
                "ii_state": [],
                "fi_state": [],
                "if_state": [],
                "ff_state": []
            }
        },
        "_create_coop_ET_matrices.get_all_processes": {
            "name": "get_all_processes",
            "location": 457,
            "return": [],
            "arguments": {
                "indices_this": [],
                "indices_others": [],
                "dists_others": [],
                "d_max_coop": [],
                "interaction_estimate": []
            }
        },
        "_create_coop_ET_matrices.get_i_k_ions": {
            "name": "get_i_k_ions",
            "location": 485,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "proc_i": [],
                "proc_k": [],
                "index_S_i": []
            }
        },
        "_create_coop_ET_matrices.calculate_coop_strength": {
            "name": "calculate_coop_strength",
            "location": 500,
            "return": [
                "int"
            ],
            "arguments": {
                "processes_arr": [],
                "mult": []
            }
        },
        "_calculate_coop_jac_matrices.get_col_values": {
            "name": "get_col_values",
            "location": 648,
            "return": [],
            "arguments": {
                "num_interactions": [],
                "coop_N_indices": []
            }
        },
        "_calculate_coop_jac_matrices.get_y_values": {
            "name": "get_y_values",
            "location": 664,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "num_interactions": [],
                "coop_N_indices": []
            }
        }
    },
    "simetuc-master/simetuc/settings.py": {
        "_parse_lattice": {
            "name": "_parse_lattice",
            "location": 28,
            "return": [],
            "arguments": {
                "parsed_settings": [
                    "str"
                ]
            }
        },
        "_parse_excitations": {
            "name": "_parse_excitations",
            "location": 47,
            "return": [],
            "arguments": {
                "dict_states": [],
                "dict_excitations": [
                    "dict[str, set[str]]",
                    "dict[str, int]"
                ]
            }
        },
        "_parse_decay_rates": {
            "name": "_parse_decay_rates",
            "location": 140,
            "return": [
                "dict[typing.Text, set[DecayTransition]]"
            ],
            "arguments": {
                "dict_states": [],
                "parsed_settings": [
                    "str"
                ]
            }
        },
        "_parse_branching_ratios": {
            "name": "_parse_branching_ratios",
            "location": 188,
            "return": [
                "tuple[set[DecayTransition]]"
            ],
            "arguments": {
                "parsed_settings": [
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "_parse_ET": {
            "name": "_parse_ET",
            "location": 225,
            "return": [],
            "arguments": {
                "parsed_settings": []
            }
        },
        "_parse_optimization": {
            "name": "_parse_optimization",
            "location": 274,
            "return": [
                "dict[typing.Text, typing.Union[list[],typing.Text]]"
            ],
            "arguments": {
                "settings": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "_match_branching_ratio": {
            "name": "_match_branching_ratio",
            "location": 302,
            "return": [],
            "arguments": {
                "settings": [
                    "str",
                    "int"
                ],
                "process": [
                    "str"
                ]
            }
        },
        "_parse_optim_params": {
            "name": "_parse_optim_params",
            "location": 313,
            "return": [
                "list[]"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "dict[str, typing.Any]",
                    "bytes"
                ],
                "dict_optim": [
                    "list[]"
                ]
            }
        },
        "_parse_simulation_params": {
            "name": "_parse_simulation_params",
            "location": 334,
            "return": [
                "str",
                "int",
                "dict[str, typing.Union[typing.Any,None,int]]"
            ],
            "arguments": {
                "settings": [
                    "dict[, ]"
                ]
            }
        },
        "_parse_power_dependence": {
            "name": "_parse_power_dependence",
            "location": 362,
            "return": [
                "list[]"
            ],
            "arguments": {
                "user_list": [
                    "str"
                ]
            }
        },
        "_parse_conc_dependence": {
            "name": "_parse_conc_dependence",
            "location": 372,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "conc_dep_d": [],
                "N_uc": [
                    "int",
                    "list[int]",
                    "list[]",
                    "list[dict[, ]]",
                    "bytes"
                ]
            }
        },
        "load_file": {
            "name": "load_file",
            "location": 405,
            "return": [
                "Settings"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "_get_ion_and_state_labels": {
            "name": "_get_ion_and_state_labels",
            "location": 488,
            "return": [],
            "arguments": {
                "string": [
                    "str",
                    "int"
                ]
            }
        },
        "_get_state_index": {
            "name": "_get_state_index",
            "location": 496,
            "return": [
                "int"
            ],
            "arguments": {
                "list_labels": [
                    "list[str]",
                    "list[dict[str, typing.Any]]",
                    "str"
                ],
                "state_label": [],
                "section": [
                    "typing.Text"
                ],
                "process": [
                    "None",
                    "int",
                    "str",
                    "tuple[typing.Union[int,int]]"
                ],
                "num": [
                    "None",
                    "str",
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ]
            }
        },
        "_get_ion_index": {
            "name": "_get_ion_index",
            "location": 514,
            "return": [
                "int"
            ],
            "arguments": {
                "list_ion_labels": [
                    "list[str]",
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "list[dict[str, typing.Any]]"
                ],
                "ion_label": [],
                "section": [
                    "typing.Text"
                ],
                "process": [
                    "None",
                    "int",
                    "str"
                ],
                "num": [
                    "None",
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "_get_branching_ratio_indices": {
            "name": "_get_branching_ratio_indices",
            "location": 531,
            "return": [
                "tuple[typing.Union[list[str],dict[, ],list[],str,float,int,dict[str, str],list[int],tuple[]]]"
            ],
            "arguments": {
                "process": [
                    "str"
                ],
                "label": []
            }
        },
        "load": {
            "name": "load",
            "location": 540,
            "return": [
                "str",
                "list[str]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "load_from_text": {
            "name": "load_from_text",
            "location": 547,
            "return": [],
            "arguments": {
                "text_data": [
                    "str"
                ]
            }
        }
    },
    "simetuc-master/simetuc/settings_config.py": {
        "f_float.__new__": {
            "name": "__new__",
            "location": 15,
            "return": [
                "float"
            ],
            "arguments": {
                "mcs": [
                    "int",
                    "str"
                ],
                "x": [
                    "str"
                ]
            }
        }
    },
    "simetuc-master/simetuc/simulations.py": {
        "Solution.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t_sol": [],
                "y_sol": [],
                "index_S_i": [],
                "index_A_j": [],
                "cte": [],
                "average": [
                    "bool"
                ]
            }
        },
        "Solution.__bool__": {
            "name": "__bool__",
            "location": 73,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Solution.__eq__": {
            "name": "__eq__",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Solution.__ne__": {
            "name": "__ne__",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Solution.__repr__": {
            "name": "__repr__",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Solution._calculate_avg_populations": {
            "name": "_calculate_avg_populations",
            "location": 100,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Solution._get_ion_state_labels": {
            "name": "_get_ion_state_labels",
            "location": 130,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Solution.errors": {
            "name": "errors",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solution.state_labels": {
            "name": "state_labels",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solution.list_avg_data": {
            "name": "list_avg_data",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solution.power_dens": {
            "name": "power_dens",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solution.concentration": {
            "name": "concentration",
            "location": 167,
            "return": [
                "Conc"
            ],
            "arguments": {
                "self": []
            }
        },
        "Solution._plot_avg": {
            "name": "_plot_avg",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Solution._plot_state": {
            "name": "_plot_state",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "Solution.plot": {
            "name": "plot",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "None"
                ]
            }
        },
        "Solution.save": {
            "name": "save",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_path": [
                    "None"
                ]
            }
        },
        "Solution.save_txt": {
            "name": "save_txt",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_path": [
                    "None"
                ],
                "mode": [
                    "typing.Text"
                ],
                "cmd": [
                    "typing.Text"
                ]
            }
        },
        "Solution.load": {
            "name": "load",
            "location": 267,
            "return": [],
            "arguments": {
                "cls": [],
                "full_path": []
            }
        },
        "SteadyStateSolution.__init__": {
            "name": "__init__",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t_sol": [],
                "y_sol": [],
                "index_S_i": [],
                "index_A_j": [],
                "cte": [],
                "average": [
                    "bool"
                ]
            }
        },
        "SteadyStateSolution._calculate_final_populations": {
            "name": "_calculate_final_populations",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SteadyStateSolution.steady_state_populations": {
            "name": "steady_state_populations",
            "location": 315,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SteadyStateSolution.log_populations": {
            "name": "log_populations",
            "location": 320,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.__init__": {
            "name": "__init__",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t_sol": [],
                "y_sol": [],
                "index_S_i": [],
                "index_A_j": [],
                "cte": [],
                "average": [
                    "bool"
                ]
            }
        },
        "DynamicsSolution._load_exp_data": {
            "name": "_load_exp_data",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [],
                "lattice_name": [],
                "filter_window": [
                    "int"
                ]
            }
        },
        "DynamicsSolution._get_background": {
            "name": "_get_background",
            "location": 425,
            "return": [
                "int"
            ],
            "arguments": {
                "exp_data": [],
                "sim_data": [],
                "offset_points": [
                    "int"
                ]
            }
        },
        "DynamicsSolution._correct_background": {
            "name": "_correct_background",
            "location": 451,
            "return": [],
            "arguments": {
                "exp_data": [],
                "sim_data": [],
                "offset_points": [
                    "int"
                ]
            }
        },
        "DynamicsSolution._interpolate_sim_data": {
            "name": "_interpolate_sim_data",
            "location": 462,
            "return": [],
            "arguments": {
                "exp_data": [],
                "sim_data": [],
                "t_sol": [],
                "t_interp": [
                    "None"
                ]
            }
        },
        "DynamicsSolution._bin_sim_data": {
            "name": "_bin_sim_data",
            "location": 483,
            "return": [],
            "arguments": {
                "exp_data": [],
                "sim_data": []
            }
        },
        "DynamicsSolution._calc_errors": {
            "name": "_calc_errors",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution._load_decay_data": {
            "name": "_load_decay_data",
            "location": 529,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution._plot_avg": {
            "name": "_plot_avg",
            "location": 550,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.calculate_steady_state": {
            "name": "calculate_steady_state",
            "location": 579,
            "return": [
                "SteadyStateSolution"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.log_errors": {
            "name": "log_errors",
            "location": 593,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.errors": {
            "name": "errors",
            "location": 604,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.total_error": {
            "name": "total_error",
            "location": 611,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.list_interp_data": {
            "name": "list_interp_data",
            "location": 621,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.list_avg_data_ofs": {
            "name": "list_avg_data_ofs",
            "location": 629,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.list_binned_data": {
            "name": "list_binned_data",
            "location": 637,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DynamicsSolution.list_exp_data": {
            "name": "list_exp_data",
            "location": 657,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SolutionList.__init__": {
            "name": "__init__",
            "location": 667,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SolutionList.__bool__": {
            "name": "__bool__",
            "location": 679,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SolutionList.__eq__": {
            "name": "__eq__",
            "location": 683,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SolutionList.__iter__": {
            "name": "__iter__",
            "location": 691,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SolutionList.__len__": {
            "name": "__len__",
            "location": 695,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SolutionList.__getitem__": {
            "name": "__getitem__",
            "location": 699,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "SolutionList.__repr__": {
            "name": "__repr__",
            "location": 703,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SolutionList.add_solutions": {
            "name": "add_solutions",
            "location": 712,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sol_list": []
            }
        },
        "SolutionList.save": {
            "name": "save",
            "location": 718,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_path": [
                    "None"
                ]
            }
        },
        "SolutionList.load": {
            "name": "load",
            "location": 741,
            "return": [],
            "arguments": {
                "cls": [],
                "full_path": []
            }
        },
        "SolutionList.save_txt": {
            "name": "save_txt",
            "location": 772,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_path": [
                    "None"
                ],
                "mode": [
                    "typing.Text"
                ],
                "cmd": [
                    "typing.Text"
                ]
            }
        },
        "SolutionList.plot": {
            "name": "plot",
            "location": 784,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PowerDependenceSolution.__init__": {
            "name": "__init__",
            "location": 792,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PowerDependenceSolution.__repr__": {
            "name": "__repr__",
            "location": 800,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PowerDependenceSolution.plot": {
            "name": "plot",
            "location": 809,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PowerDependenceSolution.save_txt": {
            "name": "save_txt",
            "location": 831,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_path": [
                    "None"
                ],
                "mode": [
                    "typing.Text"
                ],
                "cmd": [
                    "typing.Text"
                ]
            }
        },
        "ConcentrationDependenceSolution.__init__": {
            "name": "__init__",
            "location": 862,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dynamics": [
                    "bool"
                ]
            }
        },
        "ConcentrationDependenceSolution.__repr__": {
            "name": "__repr__",
            "location": 877,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcentrationDependenceSolution.save_txt": {
            "name": "save_txt",
            "location": 885,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "full_path": [
                    "None"
                ],
                "mode": [
                    "typing.Text"
                ],
                "cmd": [
                    "typing.Text"
                ]
            }
        },
        "ConcentrationDependenceSolution.log_errors": {
            "name": "log_errors",
            "location": 909,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcentrationDependenceSolution.errors": {
            "name": "errors",
            "location": 920,
            "return": [
                "list[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcentrationDependenceSolution.total_error": {
            "name": "total_error",
            "location": 931,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcentrationDependenceSolution._plot_dynamics": {
            "name": "_plot_dynamics",
            "location": 939,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcentrationDependenceSolution._plot_steady": {
            "name": "_plot_steady",
            "location": 978,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcentrationDependenceSolution.plot": {
            "name": "plot",
            "location": 1023,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Simulations.__init__": {
            "name": "__init__",
            "location": 1048,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cte": [],
                "full_path": [
                    "None"
                ]
            }
        },
        "Simulations.__bool__": {
            "name": "__bool__",
            "location": 1053,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Simulations.__eq__": {
            "name": "__eq__",
            "location": 1057,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Simulations.__ne__": {
            "name": "__ne__",
            "location": 1063,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Simulations.__repr__": {
            "name": "__repr__",
            "location": 1069,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Simulations._get_t_pulse": {
            "name": "_get_t_pulse",
            "location": 1078,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Simulations._get_t_simulation": {
            "name": "_get_t_simulation",
            "location": 1092,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Simulations.simulate_dynamics": {
            "name": "simulate_dynamics",
            "location": 1096,
            "return": [
                "DynamicsSolution"
            ],
            "arguments": {
                "self": [],
                "average": [
                    "bool"
                ]
            }
        },
        "Simulations.simulate_avg_dynamics": {
            "name": "simulate_avg_dynamics",
            "location": 1178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Simulations.simulate_steady_state": {
            "name": "simulate_steady_state",
            "location": 1184,
            "return": [],
            "arguments": {
                "self": [],
                "average": [
                    "bool"
                ]
            }
        },
        "Simulations.simulate_CW_steady_state": {
            "name": "simulate_CW_steady_state",
            "location": 1195,
            "return": [
                "SteadyStateSolution"
            ],
            "arguments": {
                "self": [],
                "average": [
                    "bool"
                ]
            }
        },
        "Simulations.simulate_avg_steady_state": {
            "name": "simulate_avg_steady_state",
            "location": 1259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Simulations.simulate_pulsed_steady_state": {
            "name": "simulate_pulsed_steady_state",
            "location": 1265,
            "return": [],
            "arguments": {
                "self": [],
                "average": [
                    "bool"
                ]
            }
        },
        "Simulations.simulate_avg_pulsed_steady_state": {
            "name": "simulate_avg_pulsed_steady_state",
            "location": 1271,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Simulations.simulate_power_dependence": {
            "name": "simulate_power_dependence",
            "location": 1277,
            "return": [
                "PowerDependenceSolution"
            ],
            "arguments": {
                "self": [],
                "power_dens_list": [],
                "average": [
                    "bool"
                ]
            }
        },
        "Simulations.simulate_concentration_dependence": {
            "name": "simulate_concentration_dependence",
            "location": 1318,
            "return": [
                "ConcentrationDependenceSolution"
            ],
            "arguments": {
                "self": [],
                "concentrations": [],
                "N_uc_list": [
                    "None"
                ],
                "dynamics": [
                    "bool"
                ],
                "average": [
                    "bool"
                ]
            }
        },
        "Simulations.sample_simulation": {
            "name": "sample_simulation",
            "location": 1387,
            "return": [
                "ConcentrationDependenceSolution",
                "DynamicsSolution"
            ],
            "arguments": {
                "self": [],
                "simulation_fun": [],
                "N_samples": []
            }
        },
        "DynamicsSolution.list_binned_data.bin_time": {
            "name": "bin_time",
            "location": 642,
            "return": [],
            "arguments": {
                "expdata": []
            }
        }
    },
    "simetuc-master/simetuc/util.py": {
        "temp_config_filename": {
            "name": "temp_config_filename",
            "location": 25,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "data": []
            }
        },
        "temp_bin_filename": {
            "name": "temp_bin_filename",
            "location": 38,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "log_exceptions_warnings": {
            "name": "log_exceptions_warnings",
            "location": 295,
            "return": [],
            "arguments": {
                "ignore_warns": []
            }
        },
        "disable_console_handler": {
            "name": "disable_console_handler",
            "location": 341,
            "return": [
                "typing.Generator[None]",
                "None"
            ],
            "arguments": {
                "logger_name": [],
                "level": []
            }
        },
        "disable_loggers": {
            "name": "disable_loggers",
            "location": 354,
            "return": [
                "typing.Generator[None]",
                "None"
            ],
            "arguments": {
                "logger_name_lst": [],
                "level": []
            }
        },
        "exp_to_10": {
            "name": "exp_to_10",
            "location": 371,
            "return": [
                "str"
            ],
            "arguments": {
                "float_number": []
            }
        },
        "save_file_full_name": {
            "name": "save_file_full_name",
            "location": 394,
            "return": [],
            "arguments": {
                "lattice": [],
                "prefix": [
                    "typing.Text"
                ]
            }
        },
        "cached_property.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "name": [
                    "None"
                ]
            }
        },
        "cached_property.__get__": {
            "name": "__get__",
            "location": 62,
            "return": [
                "cached_property"
            ],
            "arguments": {
                "self": [],
                "inst": [],
                "cls": []
            }
        },
        "Transition.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ion": [],
                "state_i": [],
                "state_f": [],
                "label_ion": [
                    "typing.Text"
                ],
                "label_i": [
                    "typing.Text"
                ],
                "label_f": [
                    "typing.Text"
                ]
            }
        },
        "Transition.__repr__": {
            "name": "__repr__",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Transition.__eq__": {
            "name": "__eq__",
            "location": 112,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Transition.__ne__": {
            "name": "__ne__",
            "location": 121,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Transition.__hash__": {
            "name": "__hash__",
            "location": 125,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecayTransition.__init__": {
            "name": "__init__",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ion": [],
                "state_i": [],
                "state_f": [],
                "decay_rate": [
                    "None"
                ],
                "branching_ratio": [
                    "None"
                ],
                "label_ion": [
                    "typing.Text"
                ],
                "label_i": [
                    "typing.Text"
                ],
                "label_f": [
                    "typing.Text"
                ]
            }
        },
        "DecayTransition.__repr__": {
            "name": "__repr__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DecayTransition.__eq__": {
            "name": "__eq__",
            "location": 156,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DecayTransition.__ne__": {
            "name": "__ne__",
            "location": 173,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DecayTransition.__hash__": {
            "name": "__hash__",
            "location": 177,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DecayTransition.value": {
            "name": "value",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Excitation.__init__": {
            "name": "__init__",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ion": [],
                "state_i": [],
                "state_f": [],
                "active": [],
                "degeneracy": [],
                "pump_rate": [],
                "power_dens": [],
                "t_pulse": [
                    "None"
                ],
                "label_ion": [
                    "typing.Text"
                ],
                "label_i": [
                    "typing.Text"
                ],
                "label_f": [
                    "typing.Text"
                ]
            }
        },
        "Excitation.__repr__": {
            "name": "__repr__",
            "location": 216,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Excitation.__eq__": {
            "name": "__eq__",
            "location": 221,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Excitation.__ne__": {
            "name": "__ne__",
            "location": 230,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EneryTransferProcess.__init__": {
            "name": "__init__",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transitions": [],
                "mult": [],
                "strength": [],
                "strength_avg": [
                    "None"
                ],
                "name": [
                    "typing.Text"
                ]
            }
        },
        "EneryTransferProcess.__repr__": {
            "name": "__repr__",
            "location": 252,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EneryTransferProcess.__eq__": {
            "name": "__eq__",
            "location": 260,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EneryTransferProcess.__ne__": {
            "name": "__ne__",
            "location": 269,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EneryTransferProcess.strength_avg": {
            "name": "strength_avg",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EneryTransferProcess.value": {
            "name": "value",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "log_exceptions_warnings.decorator": {
            "name": "decorator",
            "location": 299,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "Blacklist.__init__": {
            "name": "__init__",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level": []
            }
        },
        "Blacklist.filter": {
            "name": "filter",
            "location": 335,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "log_exceptions_warnings.decorator.wrapper": {
            "name": "wrapper",
            "location": 301,
            "return": [],
            "arguments": {}
        }
    },
    "simetuc-master/simetuc/__init__.py": {},
    "simetuc-master/simetuc/test/conftest.py": {
        "setup_cte": {
            "name": "setup_cte",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "setup_cte_settings": {
            "name": "setup_cte_settings",
            "location": 275,
            "return": [
                "int",
                "dict[, ]",
                "list[int]",
                "list[list[int]]",
                "str"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ]
            }
        },
        "setup_cte_sim": {
            "name": "setup_cte_sim",
            "location": 289,
            "return": [],
            "arguments": {
                "setup_cte": []
            }
        }
    },
    "simetuc-master/simetuc/test/test_benchmark/no_test_benchmark.py": {
        "setup_cte": {
            "name": "setup_cte",
            "location": 20,
            "return": [
                "dict[typing.Text, typing.Union[dict[typing.Text, list[tuple[typing.Union[int,float]]]],dict[typing.Text, dict[typing.Text, typing.Union[bool,list[float],list[int],list[typing.Text],float]]],dict[typing.Text, typing.Union[float,int,list[float],typing.Text,list[tuple[float]]]],bool,dict[typing.Text, typing.Union[typing.Text,int,list[typing.Text]]]]]"
            ],
            "arguments": {}
        },
        "setup_benchmark": {
            "name": "setup_benchmark",
            "location": 127,
            "return": [
                "tuple[typing.Union[tuple[tuple[]],dict[typing.Text, typing.Union[typing.Text,float,int]]]]"
            ],
            "arguments": {
                "setup_cte": [
                    "str",
                    "int"
                ]
            }
        },
        "test_benchmark_ode_solve_large": {
            "name": "test_benchmark_ode_solve_large",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_benchmark": [
                    "str"
                ],
                "benchmark": [
                    "str"
                ]
            }
        }
    },
    "simetuc-master/simetuc/test/test_commandline/test_commandline.py": {
        "no_logging": {
            "name": "no_logging",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_cli_help": {
            "name": "test_cli_help",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "no_logging": [
                    "typing.Callable[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "test_cli_version": {
            "name": "test_cli_version",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "no_logging": [
                    "list[]",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_cli_verbose_quiet": {
            "name": "test_cli_verbose_quiet",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "no_logging": [
                    "typing.BinaryIO",
                    "None",
                    "typing.Sequence[typing.Sequence[str]]",
                    "typing.Sequence[str]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "test_cli_main_options": {
            "name": "test_cli_main_options",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "option": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "mocker": [],
                "no_logging": [
                    "str"
                ]
            }
        },
        "test_cli_conc_dep_dyn": {
            "name": "test_cli_conc_dep_dyn",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "no_logging": [
                    "typing.BinaryIO",
                    "None",
                    "typing.Sequence[typing.Sequence[str]]",
                    "typing.Sequence[str]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "test_cli_plot_dyn": {
            "name": "test_cli_plot_dyn",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "no_logging": [
                    "typing.BinaryIO",
                    "None",
                    "typing.Sequence[typing.Sequence[str]]",
                    "typing.Sequence[str]",
                    "str",
                    "list[str]"
                ]
            }
        },
        "test_cli_no_save": {
            "name": "test_cli_no_save",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "no_logging": [
                    "str",
                    "bool",
                    "list[int]",
                    "None",
                    "bytes"
                ]
            }
        },
        "test_cli_optim_options": {
            "name": "test_cli_optim_options",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "no_logging": [
                    "bool",
                    "str",
                    "typing.Container",
                    "list[str]",
                    "None"
                ],
                "option": [
                    "str",
                    "None",
                    "bytes"
                ]
            }
        },
        "test_N_samples": {
            "name": "test_N_samples",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "option": [
                    "str",
                    "bool"
                ],
                "N_samples": [
                    "str",
                    "bool"
                ],
                "mocker": [],
                "no_logging": [
                    "int",
                    "None",
                    "float"
                ]
            }
        }
    },
    "simetuc-master/simetuc/test/test_lattice/test_lattice.py": {
        "idfn": {
            "name": "idfn",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "params": []
            }
        },
        "test_cte_ok": {
            "name": "test_cte_ok",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [],
                "params": [
                    "str",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "test_cte_wrong": {
            "name": "test_cte_wrong",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ],
                "params": [
                    "str",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "idfn_cell": {
            "name": "idfn_cell",
            "location": 173,
            "return": [
                "str"
            ],
            "arguments": {
                "cell_params": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "test_unit_cell": {
            "name": "test_unit_cell",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str",
                    "float"
                ],
                "cell_params": [
                    "str",
                    "float"
                ]
            }
        },
        "idfn_sites": {
            "name": "idfn_sites",
            "location": 200,
            "return": [
                "str"
            ],
            "arguments": {
                "sites": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "test_sites": {
            "name": "test_sites",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ],
                "sites": [
                    "str"
                ]
            }
        },
        "test_single_atom": {
            "name": "test_single_atom",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ],
                "concs": [
                    "str"
                ]
            }
        }
    },
    "simetuc-master/simetuc/test/test_optimize/test_optimize.py": {
        "idfn_param": {
            "name": "idfn_param",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "param": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "idfn_avg": {
            "name": "idfn_avg",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "param": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "idfn_proc": {
            "name": "idfn_proc",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "param": []
            }
        },
        "test_optim": {
            "name": "test_optim",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "list[str]",
                    "str"
                ],
                "mocker": [
                    "list[str]"
                ],
                "method": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "function": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "average": [
                    "float"
                ],
                "processes": [
                    "list[]",
                    "bytes",
                    "list[str]",
                    "list[int]"
                ],
                "excitations": [
                    "bool",
                    "str",
                    "list[str]"
                ],
                "N_samples": [
                    "float"
                ]
            }
        },
        "test_optim_no_dict_params": {
            "name": "test_optim_no_dict_params",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [],
                "mocker": []
            }
        },
        "test_optim_wrong_method": {
            "name": "test_optim_wrong_method",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [],
                "mocker": []
            }
        },
        "test_optim_fun": {
            "name": "test_optim_fun",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "bool"
                ],
                "mocker": [],
                "excitations": [
                    "str",
                    "float"
                ]
            }
        },
        "test_optim_save_txt": {
            "name": "test_optim_save_txt",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [],
                "mocker": []
            }
        },
        "test_optim.mocked_optim_fun": {
            "name": "mocked_optim_fun",
            "location": 46,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "function": [],
                "params": [],
                "sim": []
            }
        },
        "test_optim_no_dict_params.mocked_optim_fun": {
            "name": "mocked_optim_fun",
            "location": 71,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "function": [],
                "params": [],
                "sim": []
            }
        },
        "test_optim_wrong_method.mocked_optim_fun": {
            "name": "mocked_optim_fun",
            "location": 92,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "function": [],
                "params": [],
                "sim": []
            }
        },
        "test_optim_save_txt.mocked_optim_fun": {
            "name": "mocked_optim_fun",
            "location": 139,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "function": [],
                "params": [],
                "sim": []
            }
        }
    },
    "simetuc-master/simetuc/test/test_settings/test_settings.py": {
        "setup_cte_full_S": {
            "name": "setup_cte_full_S",
            "location": 24,
            "return": [],
            "arguments": {
                "setup_cte": [
                    "dict[str, typing.Any]",
                    "Exception"
                ]
            }
        },
        "test_standard_config": {
            "name": "test_standard_config",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_settings": []
            }
        },
        "test_non_existing_file": {
            "name": "test_non_existing_file",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_file": {
            "name": "test_empty_file",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_yaml_error_config": {
            "name": "test_yaml_error_config",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "bad_yaml_data": [
                    "str",
                    "dict[, ]",
                    "typing.TextIO",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_not_dict_config": {
            "name": "test_not_dict_config",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_version_config": {
            "name": "test_version_config",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "idfn": {
            "name": "idfn",
            "location": 172,
            "return": [
                "str"
            ],
            "arguments": {
                "sections_data": [
                    "bytes"
                ]
            }
        },
        "test_sections_config": {
            "name": "test_sections_config",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "sections_data": [
                    "str",
                    "tuple[typing.Union[str,dict[, ]]]",
                    "dict[, ]",
                    "typing.TextIO"
                ]
            }
        },
        "test_extra_sections_warning_config": {
            "name": "test_extra_sections_warning_config",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lattice_config": {
            "name": "test_lattice_config",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "lattice_values": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_lattice_config_ok_occs": {
            "name": "test_lattice_config_ok_occs",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {
                "lattice_values": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_lattice_dmax": {
            "name": "test_lattice_dmax",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lattice_radius": {
            "name": "test_lattice_radius",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_states_config": {
            "name": "test_empty_states_config",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_states_no_states_labels": {
            "name": "test_states_no_states_labels",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_states_no_list": {
            "name": "test_states_no_list",
            "location": 413,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_states_empty_list": {
            "name": "test_states_empty_list",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_states_fractions": {
            "name": "test_states_fractions",
            "location": 438,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_excitations_config1": {
            "name": "test_excitations_config1",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_excitations_config2": {
            "name": "test_excitations_config2",
            "location": 496,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_excitations_config3": {
            "name": "test_excitations_config3",
            "location": 505,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_excitations_config4": {
            "name": "test_excitations_config4",
            "location": 521,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_excitations_config5": {
            "name": "test_excitations_config5",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_excitations_config7": {
            "name": "test_excitations_config7",
            "location": 552,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_excitations_parse_excitations": {
            "name": "test_excitations_parse_excitations",
            "location": 567,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_abs_config_wrong_ions_labels": {
            "name": "test_abs_config_wrong_ions_labels",
            "location": 588,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_abs_config_wrong_ion_label": {
            "name": "test_abs_config_wrong_ion_label",
            "location": 604,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_abs_config_ok": {
            "name": "test_abs_config_ok",
            "location": 620,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_abs_config_ok_ESA": {
            "name": "test_abs_config_ok_ESA",
            "location": 633,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_abs_config6": {
            "name": "test_abs_config6",
            "location": 646,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_abs_config7": {
            "name": "test_abs_config7",
            "location": 662,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_abs_config8": {
            "name": "test_abs_config8",
            "location": 678,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_decay_ok": {
            "name": "test_decay_ok",
            "location": 728,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_not_all_states_decay": {
            "name": "test_not_all_states_decay",
            "location": 747,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_decay_missing_A_state": {
            "name": "test_decay_missing_A_state",
            "location": 777,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_decay_missing_S_state": {
            "name": "test_decay_missing_S_state",
            "location": 795,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_decay_config5": {
            "name": "test_decay_config5",
            "location": 815,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_branch_config_ok": {
            "name": "test_branch_config_ok",
            "location": 899,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_branch_config_wrong_label": {
            "name": "test_branch_config_wrong_label",
            "location": 915,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_branch_config_value_above_1": {
            "name": "test_branch_config_value_above_1",
            "location": 933,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_config_wrong_ion_label": {
            "name": "test_ET_config_wrong_ion_label",
            "location": 952,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_config_wrong_state_label": {
            "name": "test_ET_config_wrong_state_label",
            "location": 965,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_config_wrong_multipolarity": {
            "name": "test_ET_config_wrong_multipolarity",
            "location": 978,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_config_wrong_initial_final_ion_label": {
            "name": "test_ET_config_wrong_initial_final_ion_label",
            "location": 991,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_config_duplicate_ET_labels": {
            "name": "test_ET_config_duplicate_ET_labels",
            "location": 1004,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_config_missing_strength": {
            "name": "test_ET_config_missing_strength",
            "location": 1021,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_config_missing_ETlabel": {
            "name": "test_ET_config_missing_ETlabel",
            "location": 1033,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_ok": {
            "name": "test_ET_ok",
            "location": 1044,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_coop_ok": {
            "name": "test_ET_coop_ok",
            "location": 1055,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optim_wrong_proc": {
            "name": "test_optim_wrong_proc",
            "location": 1283,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optim_wrong_proc_2": {
            "name": "test_optim_wrong_proc_2",
            "location": 1294,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optim_wrong_B_proc": {
            "name": "test_optim_wrong_B_proc",
            "location": 1305,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optim_wrong_B_proc_label": {
            "name": "test_optim_wrong_B_proc_label",
            "location": 1316,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optim_ok_proc": {
            "name": "test_optim_ok_proc",
            "location": 1329,
            "return": [
                "None"
            ],
            "arguments": {
                "data_proc": [
                    "str",
                    "bytes"
                ]
            }
        },
        "test_optim_method": {
            "name": "test_optim_method",
            "location": 1340,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optim_excitations": {
            "name": "test_optim_excitations",
            "location": 1349,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optim_wrong_excitations": {
            "name": "test_optim_wrong_excitations",
            "location": 1357,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sim_params_config1": {
            "name": "test_sim_params_config1",
            "location": 1375,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pow_dep_config1": {
            "name": "test_pow_dep_config1",
            "location": 1387,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pow_dep_config2": {
            "name": "test_pow_dep_config2",
            "location": 1396,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pow_dep_config3": {
            "name": "test_pow_dep_config3",
            "location": 1403,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pow_dep_config4": {
            "name": "test_pow_dep_config4",
            "location": 1413,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_conc_dep_config1": {
            "name": "test_conc_dep_config1",
            "location": 1423,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_conc_dep_config2": {
            "name": "test_conc_dep_config2",
            "location": 1436,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_conc_dep_config3": {
            "name": "test_conc_dep_config3",
            "location": 1443,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_conc_dep_config4": {
            "name": "test_conc_dep_config4",
            "location": 1454,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_extra_value": {
            "name": "test_extra_value",
            "location": 1466,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "simetuc-master/simetuc/test/test_setup/test_setup.py": {
        "test_lattice_1A": {
            "name": "test_lattice_1A",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "typing.Sequence[numpy.ndarray]"
                ]
            }
        },
        "test_lattice_1A_ESA": {
            "name": "test_lattice_1A_ESA",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": []
            }
        },
        "test_lattice_1A_two_color": {
            "name": "test_lattice_1A_two_color",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ]
            }
        },
        "test_lattice_2A": {
            "name": "test_lattice_2A",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "typing.Sequence[numpy.ndarray]"
                ]
            }
        },
        "test_lattice_1S": {
            "name": "test_lattice_1S",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "typing.Sequence[numpy.ndarray]"
                ]
            }
        },
        "test_lattice_2S": {
            "name": "test_lattice_2S",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "typing.Sequence[numpy.ndarray]"
                ]
            }
        },
        "test_lattice_1S_1A": {
            "name": "test_lattice_1S_1A",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "dict[str, typing.Sequence[typing.Any]]"
                ]
            }
        },
        "test_lattice_2S_2A": {
            "name": "test_lattice_2S_2A",
            "location": 443,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "dict[str, typing.Sequence[typing.Any]]"
                ]
            }
        },
        "idfn": {
            "name": "idfn",
            "location": 603,
            "return": [
                "str"
            ],
            "arguments": {
                "params": []
            }
        },
        "test_random_lattice": {
            "name": "test_random_lattice",
            "location": 622,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ],
                "params": [
                    "str"
                ],
                "absorption": [
                    "str",
                    "typing.Mapping"
                ],
                "problem": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "test_random_wrong_lattice": {
            "name": "test_random_wrong_lattice",
            "location": 761,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ],
                "params": [
                    "str"
                ],
                "absorption": [
                    "str",
                    "typing.Mapping"
                ],
                "problem": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "test_get_lifetimes": {
            "name": "test_get_lifetimes",
            "location": 793,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "str"
                ]
            }
        },
        "test_wrong_number_states": {
            "name": "test_wrong_number_states",
            "location": 812,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": []
            }
        },
        "test_radius": {
            "name": "test_radius",
            "location": 833,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte": [
                    "tuple[typing.Union[float,float,float,float,float]]"
                ],
                "mocker": []
            }
        }
    },
    "simetuc-master/simetuc/test/test_simulations/test_simulations.py": {
        "test_sim": {
            "name": "test_sim",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "str"
                ]
            }
        },
        "test_sim_dyn": {
            "name": "test_sim_dyn",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_sim_dyn_errors": {
            "name": "test_sim_dyn_errors",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_change_cte": {
            "name": "test_change_cte",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "str",
                    "float"
                ]
            }
        },
        "test_sim_dyn_2S_2A": {
            "name": "test_sim_dyn_2S_2A",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "bool"
                ]
            }
        },
        "test_sim_dyn_wrong_state_plot": {
            "name": "test_sim_dyn_wrong_state_plot",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_sim_average_dyn": {
            "name": "test_sim_average_dyn",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_sim_dyn_diff": {
            "name": "test_sim_dyn_diff",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_sim_dyn_save_hdf5": {
            "name": "test_sim_dyn_save_hdf5",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_dyn_save_txt": {
            "name": "test_sim_dyn_save_txt",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "bool",
                    "dict[str, typing.Sequence[str]]"
                ]
            }
        },
        "test_sim_no_file_hdf5": {
            "name": "test_sim_no_file_hdf5",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sim_dyn_no_t_pulse": {
            "name": "test_sim_dyn_no_t_pulse",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_sim_steady1": {
            "name": "test_sim_steady1",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "str"
                ]
            }
        },
        "test_sim_steady2": {
            "name": "test_sim_steady2",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_sim_no_plot": {
            "name": "test_sim_no_plot",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": []
            }
        },
        "test_sim_power_dep": {
            "name": "test_sim_power_dep",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "typing.Mapping",
                    "list[str]"
                ],
                "mocker": [],
                "average": [
                    "list[numpy.ndarray]",
                    "Exception",
                    "None",
                    "int"
                ],
                "excitation_name": [
                    "str"
                ]
            }
        },
        "test_sim_power_dep_save_txt": {
            "name": "test_sim_power_dep_save_txt",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "bool",
                    "dict[str, typing.Sequence[str]]"
                ],
                "mocker": []
            }
        },
        "test_sim_power_dep_empty_list": {
            "name": "test_sim_power_dep_empty_list",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "bool",
                    "dict[str, typing.Sequence[str]]"
                ]
            }
        },
        "test_sim_power_dep_no_plot": {
            "name": "test_sim_power_dep_no_plot",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_power_dep_correct_power_dens": {
            "name": "test_sim_power_dep_correct_power_dens",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_power_dep_ESA": {
            "name": "test_sim_power_dep_ESA",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sim_conc_dep_steady": {
            "name": "test_sim_conc_dep_steady",
            "location": 410,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_conc_dep_dyn": {
            "name": "test_sim_conc_dep_dyn",
            "location": 434,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_conc_dep_save_txt": {
            "name": "test_sim_conc_dep_save_txt",
            "location": 460,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "bool",
                    "dict[str, typing.Sequence[str]]"
                ],
                "mocker": []
            }
        },
        "test_sim_conc_dep_list": {
            "name": "test_sim_conc_dep_list",
            "location": 470,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_conc_dep_only_A": {
            "name": "test_sim_conc_dep_only_A",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_conc_dep_only_S": {
            "name": "test_sim_conc_dep_only_S",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_conc_dep_empty_conc": {
            "name": "test_sim_conc_dep_empty_conc",
            "location": 521,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "bool",
                    "dict[str, typing.Sequence[str]]"
                ]
            }
        },
        "test_sim_conc_dep_no_plot": {
            "name": "test_sim_conc_dep_no_plot",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [],
                "mocker": []
            }
        },
        "test_sim_conc_dep_no_file": {
            "name": "test_sim_conc_dep_no_file",
            "location": 560,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sim_sample_dynamics": {
            "name": "test_sim_sample_dynamics",
            "location": 567,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "list[dict[str, typing.Any]]"
                ],
                "mocker": [],
                "N_samples": [
                    "int",
                    "list[numpy.ndarray]",
                    "float"
                ]
            }
        },
        "test_sim_sample_conc_dynamics": {
            "name": "test_sim_sample_conc_dynamics",
            "location": 585,
            "return": [
                "None"
            ],
            "arguments": {
                "setup_cte_sim": [
                    "list[dict[str, typing.Any]]"
                ],
                "mocker": [],
                "N_samples": [
                    "list[numpy.ndarray]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "simetuc-master/simetuc/test/test_util/test_util.py": {
        "test_transition": {
            "name": "test_transition",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_decay_transition": {
            "name": "test_decay_transition",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_exc_transition": {
            "name": "test_exc_transition",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ET_process": {
            "name": "test_ET_process",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_log_exceptions_warnings_nothing": {
            "name": "test_log_exceptions_warnings_nothing",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_log_exceptions_warnings_warning": {
            "name": "test_log_exceptions_warnings_warning",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "str"
                ]
            }
        },
        "test_log_exceptions_warnings_exception": {
            "name": "test_log_exceptions_warnings_exception",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [
                    "str"
                ]
            }
        },
        "test_log_exceptions_warnings_nothing.raise_nothing": {
            "name": "raise_nothing",
            "location": 110,
            "return": [
                "str"
            ],
            "arguments": {
                "arg1": [],
                "arg2": [
                    "int"
                ]
            }
        },
        "test_log_exceptions_warnings_warning.raise_warning": {
            "name": "raise_warning",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "arg1": [],
                "arg2": [
                    "int"
                ]
            }
        },
        "test_log_exceptions_warnings_exception.raise_exception": {
            "name": "raise_exception",
            "location": 133,
            "return": [
                "float"
            ],
            "arguments": {
                "arg1": [],
                "arg2": [
                    "int"
                ]
            }
        }
    }
}
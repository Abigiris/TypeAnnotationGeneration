{
    "slackbridge-master/slackbridge/bots.py": {
        "IRCBot.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sc": [],
                "nickname": [],
                "nickserv_pw": []
            }
        },
        "IRCBot.post_to_slack": {
            "name": "post_to_slack",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "channel": [],
                "message": [],
                "unparsed_nick": [
                    "bool"
                ]
            }
        },
        "LoopHandler.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "delay": []
            }
        },
        "LoopHandler.start_loop": {
            "name": "start_loop",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoopHandler.handle_loop_error": {
            "name": "handle_loop_error",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "err": [],
                "loop_handler": []
            }
        },
        "BridgeBot.__init__": {
            "name": "__init__",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sc": [],
                "bridge_nick": [],
                "nickserv_pw": [],
                "slack_uid": []
            }
        },
        "BridgeBot.rtm_connect": {
            "name": "rtm_connect",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BridgeBot.signedOn": {
            "name": "signedOn",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BridgeBot.privmsg": {
            "name": "privmsg",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "channel": [],
                "message": []
            }
        },
        "BridgeBot.action": {
            "name": "action",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "channel": [],
                "message": []
            }
        },
        "BridgeBot.check_slack_rtm": {
            "name": "check_slack_rtm",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BridgeBot.empty_queue": {
            "name": "empty_queue",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BridgeBot.topicUpdated": {
            "name": "topicUpdated",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "channel": [],
                "new_topic": []
            }
        },
        "BridgeBot.irc_330": {
            "name": "irc_330",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prefix": [],
                "params": []
            }
        },
        "BridgeBot.irc_RPL_ENDOFWHOIS": {
            "name": "irc_RPL_ENDOFWHOIS",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prefix": [],
                "params": []
            }
        },
        "BridgeBot.userRenamed": {
            "name": "userRenamed",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "newname": []
            }
        },
        "BridgeBot.userLeft": {
            "name": "userLeft",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "channel": []
            }
        },
        "BridgeBot.userQuit": {
            "name": "userQuit",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "quitMessage": []
            }
        },
        "BridgeBot.userKicked": {
            "name": "userKicked",
            "location": 225,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "channel": [],
                "kicker": [],
                "message": []
            }
        },
        "BridgeBot.deauthenticate": {
            "name": "deauthenticate",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "BridgeBot.authenticate": {
            "name": "authenticate",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "BridgeBot.verify_auth": {
            "name": "verify_auth",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "current_nickname": [],
                "authenticated_name": []
            }
        },
        "BridgeBot.end_whois": {
            "name": "end_whois",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "UserBot.__init__": {
            "name": "__init__",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sc": [],
                "nickname": [],
                "realname": [],
                "user_id": [],
                "joined_channels": [],
                "target_group": [],
                "nickserv_pw": []
            }
        },
        "UserBot.log": {
            "name": "log",
            "location": 286,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "message": []
            }
        },
        "UserBot.signedOn": {
            "name": "signedOn",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserBot.nickserv_auth": {
            "name": "nickserv_auth",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserBot.privmsg": {
            "name": "privmsg",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "channel": [],
                "message": []
            }
        },
        "UserBot.setNick": {
            "name": "setNick",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nickname": []
            }
        },
        "UserBot.nickChanged": {
            "name": "nickChanged",
            "location": 345,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nick": []
            }
        },
        "UserBot.joined": {
            "name": "joined",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel_name": []
            }
        },
        "UserBot.left": {
            "name": "left",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel_name": []
            }
        },
        "UserBot.post_to_irc": {
            "name": "post_to_irc",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "channel": [],
                "message": []
            }
        }
    },
    "slackbridge-master/slackbridge/factories.py": {
        "BotFactory.clientConnectionLost": {
            "name": "clientConnectionLost",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connector": [
                    "str",
                    "dict[, ]",
                    "bool"
                ],
                "reason": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "BotFactory.clientConnectionFailed": {
            "name": "clientConnectionFailed",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connector": [
                    "str",
                    "dict[, ]",
                    "bool"
                ],
                "reason": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "BridgeBotFactory.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "slack_client": [
                    "float",
                    "typing.Callable[, ]"
                ],
                "bridge_nick": [
                    "bool",
                    "str",
                    "tuple[typing.Union[str,str,str]]"
                ],
                "nickserv_pw": [
                    "bool",
                    "str",
                    "tuple[typing.Union[str,str,str]]"
                ],
                "slack_uid": [
                    "int",
                    "str"
                ],
                "channels": [
                    "list[dict[str, typing.Any]]"
                ],
                "users": [
                    "list[dict[str, typing.Any]]",
                    "str"
                ]
            }
        },
        "BridgeBotFactory.buildProtocol": {
            "name": "buildProtocol",
            "location": 61,
            "return": [
                "BridgeBot"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "bool",
                    "list[]"
                ]
            }
        },
        "BridgeBotFactory.add_user_bot": {
            "name": "add_user_bot",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_bot": [
                    "bool"
                ]
            }
        },
        "BridgeBotFactory.instantiate_bot": {
            "name": "instantiate_bot",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "UserBotFactory.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "slack_client": [
                    "typing.Callable[, ]"
                ],
                "bridge_bot_factory": [
                    "str",
                    "float"
                ],
                "slack_user": [
                    "str"
                ],
                "target_group": [
                    "str",
                    "int",
                    "None"
                ],
                "nickserv_pw": [
                    "str",
                    "float"
                ]
            }
        },
        "UserBotFactory.buildProtocol": {
            "name": "buildProtocol",
            "location": 110,
            "return": [
                "UserBot"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "bool",
                    "list[]"
                ]
            }
        }
    },
    "slackbridge-master/slackbridge/main.py": {
        "main": {
            "name": "main",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "slackbridge-master/slackbridge/messages.py": {
        "SlackMessage.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_message": [],
                "bridge_bot": [
                    "int",
                    "float"
                ]
            }
        },
        "SlackMessage.resolve": {
            "name": "resolve",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlackMessage.is_bot_user": {
            "name": "is_bot_user",
            "location": 153,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlackMessage._change_presence": {
            "name": "_change_presence",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_bot": []
            }
        },
        "SlackMessage._irc_me_action": {
            "name": "_irc_me_action",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel_name": [
                    "str"
                ],
                "user_bot": [
                    "str",
                    "None"
                ],
                "action": [
                    "str",
                    "None"
                ]
            }
        },
        "SlackMessage._post_to_fluffy": {
            "name": "_post_to_fluffy",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel_name": [
                    "str",
                    "int",
                    "typing.Mapping"
                ],
                "user_bot": [
                    "str",
                    "int",
                    "typing.Mapping"
                ],
                "file_data": []
            }
        },
        "SlackMessage._post_to_irc": {
            "name": "_post_to_irc",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel_name": [
                    "str"
                ],
                "user_bot": [
                    "str",
                    "int"
                ]
            }
        },
        "SlackMessage._post_pm_to_irc": {
            "name": "_post_pm_to_irc",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "irc_recipient": [
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "user_bot": [
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        },
        "SlackMessage.__lt__": {
            "name": "__lt__",
            "location": 270,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "tuple[typing.Union[int,int,int]]",
                    "typing.Any"
                ]
            }
        },
        "SlackMessage.__eq__": {
            "name": "__eq__",
            "location": 275,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "tuple[typing.Union[int,int,int]]",
                    "typing.Any"
                ]
            }
        },
        "IRCUser.__init__": {
            "name": "__init__",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "authenticated": [
                    "bool"
                ]
            }
        },
        "IRCUser.add_message": {
            "name": "add_message",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "float",
                    "int"
                ]
            }
        }
    },
    "slackbridge-master/slackbridge/utils.py": {
        "user_to_gravatar": {
            "name": "user_to_gravatar",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "user": []
            }
        },
        "strip_nick": {
            "name": "strip_nick",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "nick": [
                    "str",
                    "list[T]",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "nick_from_irc_user": {
            "name": "nick_from_irc_user",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "irc_user": [
                    "str"
                ]
            }
        },
        "format_irc_message": {
            "name": "format_irc_message",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "text": [
                    "str"
                ],
                "users": [
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "typing.Any"
                ],
                "bots": [
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "typing.Any"
                ],
                "channels": [
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "typing.Any"
                ]
            }
        },
        "format_slack_message": {
            "name": "format_slack_message",
            "location": 140,
            "return": [],
            "arguments": {
                "text": [
                    "str",
                    "Exception",
                    "None"
                ],
                "users": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ]
            }
        },
        "slack_api": {
            "name": "slack_api",
            "location": 172,
            "return": [],
            "arguments": {
                "slack_client": []
            }
        },
        "format_irc_message.chan_replace": {
            "name": "chan_replace",
            "location": 84,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "match": []
            }
        },
        "format_irc_message.user_replace": {
            "name": "user_replace",
            "location": 93,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "match": []
            }
        },
        "format_irc_message.var_replace": {
            "name": "var_replace",
            "location": 111,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "match": []
            }
        },
        "format_slack_message.nick_replace": {
            "name": "nick_replace",
            "location": 151,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "match": []
            }
        }
    },
    "slackbridge-master/slackbridge/__init__.py": {}
}
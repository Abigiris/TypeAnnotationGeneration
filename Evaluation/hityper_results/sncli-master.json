{
    "sncli-master/setup.py": {},
    "sncli-master/docs/conf.py": {},
    "sncli-master/simplenote_cli/clipboard.py": {
        "Clipboard.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Clipboard.get_copy_command": {
            "name": "get_copy_command",
            "location": 10,
            "return": [
                "list[typing.Text]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Clipboard.copy": {
            "name": "copy",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "custom_file": [
                    "None",
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "Config.get_config": {
            "name": "get_config",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Config.get_config_descr": {
            "name": "get_config_descr",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Config.get_keybind": {
            "name": "get_keybind",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Config.get_keybind_use": {
            "name": "get_keybind_use",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Config.get_keybind_descr": {
            "name": "get_keybind_descr",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Config.get_color": {
            "name": "get_color",
            "location": 305,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Config.get_color_descr": {
            "name": "get_color_descr",
            "location": 308,
            "return": [],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/notes_db.py": {
        "NotesDB.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[str, str]",
                    "dict[, ]"
                ],
                "log": [
                    "str"
                ],
                "update_view": [
                    "typing.Callable[, ]",
                    "dict[str, list[typing.Any]]",
                    "dict[, ]"
                ]
            }
        },
        "NotesDB.filtered_notes_sort": {
            "name": "filtered_notes_sort",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filtered_notes": [
                    "list[str]"
                ],
                "sort_mode": [
                    "typing.Text"
                ]
            }
        },
        "NotesDB.filter_notes": {
            "name": "filter_notes",
            "location": 92,
            "return": [
                "tuple[typing.Union[int,typing.DefaultDict,float,dict[str, typing.Any],str,typing.Pattern,list[list[typing.Any]],None]]"
            ],
            "arguments": {
                "self": [],
                "search_string": [
                    "None",
                    "int",
                    "list[str]",
                    "float",
                    "str"
                ],
                "search_mode": [
                    "typing.Text"
                ],
                "sort_mode": [
                    "typing.Text"
                ]
            }
        },
        "NotesDB._helper_gstyle_tagmatch": {
            "name": "_helper_gstyle_tagmatch",
            "location": 116,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "tag_pats": [],
                "note": [
                    "dict[str, typing.Any]",
                    "dict[str, int]"
                ]
            }
        },
        "NotesDB._helper_gstyle_wordmatch": {
            "name": "_helper_gstyle_wordmatch",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "word_pats": [],
                "content": [
                    "str"
                ]
            }
        },
        "NotesDB.filter_notes_gstyle": {
            "name": "filter_notes_gstyle",
            "location": 165,
            "return": [
                "tuple[typing.Union[list[KeyValueObject],int]]",
                "tuple[typing.Union[list[KeyValueObject],str,int]]"
            ],
            "arguments": {
                "self": [],
                "search_string": [
                    "None",
                    "str",
                    "typing.Iterator",
                    "int"
                ]
            }
        },
        "NotesDB.filter_notes_regex": {
            "name": "filter_notes_regex",
            "location": 239,
            "return": [
                "tuple[typing.Union[list[KeyValueObject],None,str,int]]"
            ],
            "arguments": {
                "self": [],
                "search_string": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "NotesDB.import_note": {
            "name": "import_note",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "note": []
            }
        },
        "NotesDB.create_note": {
            "name": "create_note",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "content": [
                    "str",
                    "bytes",
                    "bool",
                    "list[str]"
                ],
                "markdown": [
                    "bool"
                ]
            }
        },
        "NotesDB.get_note": {
            "name": "get_note",
            "location": 356,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "typing.Type",
                    "dict[str, str]",
                    "int",
                    "typing.Callable[K, VT]",
                    "None",
                    "tuple[]"
                ]
            }
        },
        "NotesDB.get_note_systemtags": {
            "name": "get_note_systemtags",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "NotesDB.get_note_tags": {
            "name": "get_note_tags",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "NotesDB.get_note_content": {
            "name": "get_note_content",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "NotesDB.flag_what_changed": {
            "name": "flag_what_changed",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note": [],
                "what_changed": [
                    "dict[, ]",
                    "int",
                    "str"
                ]
            }
        },
        "NotesDB.set_note_deleted": {
            "name": "set_note_deleted",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "int",
                    "float",
                    "str"
                ],
                "deleted": [
                    "int",
                    "str",
                    "None",
                    "float"
                ]
            }
        },
        "NotesDB.set_note_content": {
            "name": "set_note_content",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "typing.Type",
                    "dict[str, str]",
                    "int",
                    "typing.Callable[K, VT]",
                    "None"
                ],
                "content": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "NotesDB.set_note_tags": {
            "name": "set_note_tags",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "dict[, ]",
                    "typing.Callable[, ]",
                    "None",
                    "typing.Sequence[typing.MutableMapping]",
                    "typing.Sequence[str]"
                ],
                "tags": [
                    "str",
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "NotesDB.set_note_pinned": {
            "name": "set_note_pinned",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "bytes"
                ],
                "pinned": [
                    "int",
                    "dict[str, str]"
                ]
            }
        },
        "NotesDB.set_note_markdown": {
            "name": "set_note_markdown",
            "location": 416,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "bytes"
                ],
                "markdown": [
                    "int",
                    "dict[str, str]"
                ]
            }
        },
        "NotesDB.helper_key_to_fname": {
            "name": "helper_key_to_fname",
            "location": 431,
            "return": [],
            "arguments": {
                "self": [],
                "k": [
                    "str"
                ]
            }
        },
        "NotesDB.helper_save_note": {
            "name": "helper_save_note",
            "location": 434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "k": [
                    "bytes",
                    "str",
                    "None",
                    "tuple[typing.Union[str,list[str]]]",
                    "int"
                ],
                "note": [
                    "str"
                ]
            }
        },
        "NotesDB.sync_notes": {
            "name": "sync_notes",
            "location": 442,
            "return": [],
            "arguments": {
                "self": [],
                "server_sync": [
                    "bool"
                ],
                "full_sync": [
                    "bool"
                ]
            }
        },
        "NotesDB.get_note_version": {
            "name": "get_note_version",
            "location": 654,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes"
                ],
                "version": [
                    "str",
                    "bytes"
                ]
            }
        },
        "NotesDB.get_note_status": {
            "name": "get_note_status",
            "location": 658,
            "return": [
                "KeyValueObject"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bool"
                ]
            }
        },
        "NotesDB.verify_all_saved": {
            "name": "verify_all_saved",
            "location": 675,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "NotesDB.sync_now": {
            "name": "sync_now",
            "location": 686,
            "return": [
                "str",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "do_server_sync": [
                    "bool"
                ]
            }
        },
        "NotesDB.sync_worker": {
            "name": "sync_worker",
            "location": 694,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "do_server_sync": [
                    "float",
                    "int",
                    "typing.Iterable[T]"
                ]
            }
        },
        "NotesDB.sync_worker_go": {
            "name": "sync_worker_go",
            "location": 704,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sncli-master/simplenote_cli/simplenote.py": {
        "Simplenote.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str",
                    "int"
                ],
                "password": [
                    "str",
                    "int"
                ]
            }
        },
        "Simplenote.authenticate": {
            "name": "authenticate",
            "location": 77,
            "return": [
                "Api"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "Simplenote.get_note": {
            "name": "get_note",
            "location": 94,
            "return": [
                "tuple[typing.Optional[int]]",
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "noteid": [
                    "str",
                    "int"
                ],
                "version": [
                    "None",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "Simplenote.update_note": {
            "name": "update_note",
            "location": 125,
            "return": [
                "tuple[typing.Optional[int]]",
                "tuple[typing.Union[Exception,int]]",
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "note": [
                    "str"
                ]
            }
        },
        "Simplenote.add_note": {
            "name": "add_note",
            "location": 175,
            "return": [
                "tuple[typing.Union[typing.Text,int]]"
            ],
            "arguments": {
                "self": [],
                "note": [
                    "list[]",
                    "int",
                    "str",
                    "list[str]",
                    "float",
                    "None",
                    "set[]"
                ]
            }
        },
        "Simplenote._convert_index_to_note": {
            "name": "_convert_index_to_note",
            "location": 200,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Type",
                    "bool",
                    "list[dict[, ]]"
                ],
                "entry": [
                    "str"
                ]
            }
        },
        "Simplenote.get_note_list": {
            "name": "get_note_list",
            "location": 210,
            "return": [
                "tuple[typing.Union[list[],int]]"
            ],
            "arguments": {
                "self": [],
                "since": [
                    "None",
                    "typing.Callable[, ]",
                    "str",
                    "int",
                    "dict[str, str]",
                    "dict[, ]",
                    "list[str]"
                ],
                "tags": []
            }
        },
        "Simplenote.trash_note": {
            "name": "trash_note",
            "location": 273,
            "return": [
                "tuple[typing.Union[dict[, ],list[],typing.KeysView,dict[int, typing.Any],dict[str, set[int]],int]]"
            ],
            "arguments": {
                "self": [],
                "note_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Simplenote.delete_note": {
            "name": "delete_note",
            "location": 295,
            "return": [
                "tuple[typing.Union[str,int,dict[int, str],list[]]]",
                "tuple[typing.Union[Exception,int]]",
                "tuple[typing.Union[dict[, ],int]]"
            ],
            "arguments": {
                "self": [],
                "note_id": [
                    "int",
                    "set[str]",
                    "dict[, ]"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/sncli.py": {
        "SIGINT_handler": {
            "name": "SIGINT_handler",
            "location": 1287,
            "return": [],
            "arguments": {
                "signum": [],
                "frame": []
            }
        },
        "usage": {
            "name": "usage",
            "location": 1293,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 1329,
            "return": [],
            "arguments": {
                "argv": []
            }
        },
        "sncli.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "do_server_sync": [],
                "verbose": [],
                "config_file": []
            }
        },
        "sncli.sync_notes": {
            "name": "sync_notes",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.get_editor": {
            "name": "get_editor",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.get_pager": {
            "name": "get_pager",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.get_diff": {
            "name": "get_diff",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.exec_cmd_on_note": {
            "name": "exec_cmd_on_note",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "note": [],
                "cmd": [],
                "raw": [],
                "delete_tempfile": []
            }
        },
        "sncli.exec_diff_on_note": {
            "name": "exec_diff_on_note",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "note": [],
                "old_note": []
            }
        },
        "sncli.gui_header_clear": {
            "name": "gui_header_clear",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_header_set": {
            "name": "gui_header_set",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "sncli.gui_header_get": {
            "name": "gui_header_get",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_header_focus": {
            "name": "gui_header_focus",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_footer_log_clear": {
            "name": "gui_footer_log_clear",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_footer_log_set": {
            "name": "gui_footer_log_set",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "pl": []
            }
        },
        "sncli.gui_footer_log_get": {
            "name": "gui_footer_log_get",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_footer_input_clear": {
            "name": "gui_footer_input_clear",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_footer_input_set": {
            "name": "gui_footer_input_set",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "ui": []
            }
        },
        "sncli.gui_footer_input_get": {
            "name": "gui_footer_input_get",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_footer_focus_input": {
            "name": "gui_footer_focus_input",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_body_clear": {
            "name": "gui_body_clear",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_body_set": {
            "name": "gui_body_set",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "sncli.gui_body_get": {
            "name": "gui_body_get",
            "location": 238,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_body_focus": {
            "name": "gui_body_focus",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.log_timeout": {
            "name": "log_timeout",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "loop": [],
                "arg": []
            }
        },
        "sncli.log": {
            "name": "log",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "sncli.gui_update_view": {
            "name": "gui_update_view",
            "location": 297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_update_status_bar": {
            "name": "gui_update_status_bar",
            "location": 315,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_switch_frame_body": {
            "name": "gui_switch_frame_body",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "new_view": [],
                "save_current_view": []
            }
        },
        "sncli.trash_note_callback": {
            "name": "trash_note_callback",
            "location": 334,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "yes": []
            }
        },
        "sncli.restore_note_callback": {
            "name": "restore_note_callback",
            "location": 348,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "yes": []
            }
        },
        "sncli.gui_yes_no_input": {
            "name": "gui_yes_no_input",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "yes_no": []
            }
        },
        "sncli.gui_search_input": {
            "name": "gui_search_input",
            "location": 369,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "search_string": []
            }
        },
        "sncli.gui_version_input": {
            "name": "gui_version_input",
            "location": 381,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "version": []
            }
        },
        "sncli.gui_tags_input": {
            "name": "gui_tags_input",
            "location": 395,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "tags": []
            }
        },
        "sncli.gui_pipe_input": {
            "name": "gui_pipe_input",
            "location": 415,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "cmd": []
            }
        },
        "sncli.gui_frame_keypress": {
            "name": "gui_frame_keypress",
            "location": 437,
            "return": [],
            "arguments": {
                "self": [],
                "size": [],
                "key": []
            }
        },
        "sncli.gui_init_view": {
            "name": "gui_init_view",
            "location": 921,
            "return": [],
            "arguments": {
                "self": [],
                "loop": [],
                "view_note": []
            }
        },
        "sncli.gui_clear": {
            "name": "gui_clear",
            "location": 931,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_reset": {
            "name": "gui_reset",
            "location": 935,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui_stop": {
            "name": "gui_stop",
            "location": 939,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "sncli.gui": {
            "name": "gui",
            "location": 952,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "sncli.cli_list_notes": {
            "name": "cli_list_notes",
            "location": 1069,
            "return": [],
            "arguments": {
                "self": [],
                "regex": [],
                "search_string": []
            }
        },
        "sncli.cli_note_dump": {
            "name": "cli_note_dump",
            "location": 1082,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "sncli.cli_dump_notes": {
            "name": "cli_dump_notes",
            "location": 1111,
            "return": [],
            "arguments": {
                "self": [],
                "regex": [],
                "search_string": []
            }
        },
        "sncli.cli_note_create": {
            "name": "cli_note_create",
            "location": 1121,
            "return": [],
            "arguments": {
                "self": [],
                "from_stdin": [],
                "title": []
            }
        },
        "sncli.cli_note_import": {
            "name": "cli_note_import",
            "location": 1136,
            "return": [],
            "arguments": {
                "self": [],
                "from_stdin": []
            }
        },
        "sncli.cli_note_export": {
            "name": "cli_note_export",
            "location": 1156,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "sncli.cli_export_notes": {
            "name": "cli_export_notes",
            "location": 1165,
            "return": [],
            "arguments": {
                "self": [],
                "regex": [],
                "search_string": []
            }
        },
        "sncli.cli_note_edit": {
            "name": "cli_note_edit",
            "location": 1176,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "sncli.cli_note_trash": {
            "name": "cli_note_trash",
            "location": 1197,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "trash": []
            }
        },
        "sncli.cli_note_pin": {
            "name": "cli_note_pin",
            "location": 1207,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "pin": []
            }
        },
        "sncli.cli_note_markdown": {
            "name": "cli_note_markdown",
            "location": 1217,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "markdown": []
            }
        },
        "sncli.cli_note_tags_get": {
            "name": "cli_note_tags_get",
            "location": 1227,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "sncli.cli_note_tags_set": {
            "name": "cli_note_tags_set",
            "location": 1237,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "tags": []
            }
        },
        "sncli.cli_note_tags_add": {
            "name": "cli_note_tags_add",
            "location": 1247,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "new_tags": []
            }
        },
        "sncli.cli_note_tags_rm": {
            "name": "cli_note_tags_rm",
            "location": 1269,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "rm_tags": []
            }
        },
        "main.sncli_start": {
            "name": "sncli_start",
            "location": 1367,
            "return": [],
            "arguments": {
                "sync": [],
                "verbose": [],
                "config": []
            }
        }
    },
    "sncli-master/simplenote_cli/temp.py": {
        "tempfile_create": {
            "name": "tempfile_create",
            "location": 7,
            "return": [],
            "arguments": {
                "note": [
                    "list[str]",
                    "list[dict[, ]]",
                    "list[dict[str, typing.Any]]",
                    "list[]"
                ],
                "raw": [
                    "bool"
                ],
                "tempdir": [
                    "None",
                    "typing.Iterable[str]",
                    "str"
                ],
                "ext_override": [
                    "None",
                    "str",
                    "int",
                    "dict[str, str]",
                    "list[str]",
                    "typing.Iterator"
                ]
            }
        },
        "_get_tempfile_prefix": {
            "name": "_get_tempfile_prefix",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "tempfile_delete": {
            "name": "tempfile_delete",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "tf": []
            }
        },
        "tempfile_name": {
            "name": "tempfile_name",
            "location": 38,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "tf": [
                    "str",
                    "None"
                ]
            }
        },
        "tempfile_content": {
            "name": "tempfile_content",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "tf": [
                    "str"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/user_input.py": {
        "UserInput.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "bytes",
                    "int",
                    "str",
                    "typing.Mapping",
                    "list[]"
                ],
                "caption": [
                    "bool",
                    "str"
                ],
                "edit_text": [
                    "bool",
                    "str"
                ],
                "callback_func": [
                    "int",
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "list[str]"
                ],
                "args": []
            }
        },
        "UserInput.keypress": {
            "name": "keypress",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "str"
                ],
                "key": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/utils.py": {
        "generate_random_key": {
            "name": "generate_random_key",
            "location": 15,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "get_note_tags": {
            "name": "get_note_tags",
            "location": 22,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "note": [
                    "str"
                ]
            }
        },
        "get_note_flags": {
            "name": "get_note_flags",
            "location": 38,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "note": [
                    "str",
                    "tuple[int]",
                    "list[int]"
                ]
            }
        },
        "get_note_lines": {
            "name": "get_note_lines",
            "location": 50,
            "return": [],
            "arguments": {
                "note": []
            }
        },
        "get_note_title": {
            "name": "get_note_title",
            "location": 54,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "note": []
            }
        },
        "get_note_title_file": {
            "name": "get_note_title_file",
            "location": 61,
            "return": [
                "typing.Text",
                "str"
            ],
            "arguments": {
                "note": [
                    "dict[, ]"
                ]
            }
        },
        "human_date": {
            "name": "human_date",
            "location": 84,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "timestamp": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "note_published": {
            "name": "note_published",
            "location": 112,
            "return": [
                "int"
            ],
            "arguments": {
                "n": []
            }
        },
        "note_pinned": {
            "name": "note_pinned",
            "location": 118,
            "return": [
                "int"
            ],
            "arguments": {
                "n": []
            }
        },
        "note_markdown": {
            "name": "note_markdown",
            "location": 124,
            "return": [
                "int"
            ],
            "arguments": {
                "n": []
            }
        },
        "sanitise_tags": {
            "name": "sanitise_tags",
            "location": 131,
            "return": [
                "list[]"
            ],
            "arguments": {
                "tags": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "sort_by_title_pinned": {
            "name": "sort_by_title_pinned",
            "location": 153,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "a": [
                    "typing.Callable[None, bool]",
                    "int"
                ]
            }
        },
        "sort_notes_by_tags": {
            "name": "sort_notes_by_tags",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "notes": [
                    "list[str]"
                ],
                "pinned_ontop": [
                    "bool"
                ]
            }
        },
        "sort_by_modify_date_pinned": {
            "name": "sort_by_modify_date_pinned",
            "location": 161,
            "return": [
                "float"
            ],
            "arguments": {
                "a": [
                    "typing.Sequence[int]",
                    "int",
                    "None"
                ]
            }
        },
        "build_regex_search": {
            "name": "build_regex_search",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "search_string": [
                    "str"
                ]
            }
        },
        "sanitise_dates": {
            "name": "sanitise_dates",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "note": [
                    "list[int]",
                    "list[str]",
                    "str"
                ]
            }
        },
        "KeyValueObject.__init__": {
            "name": "__init__",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "sncli-master/simplenote_cli/view_help.py": {
        "ViewHelp.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "ViewHelp.get_status_bar": {
            "name": "get_status_bar",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewHelp.create_kb_help_lines": {
            "name": "create_kb_help_lines",
            "location": 46,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "header": [
                    "str"
                ],
                "use": [
                    "str",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "ViewHelp.create_config_help_lines": {
            "name": "create_config_help_lines",
            "location": 74,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewHelp.create_color_help_lines": {
            "name": "create_color_help_lines",
            "location": 101,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewHelp.keypress": {
            "name": "keypress",
            "location": 126,
            "return": [
                "str",
                "int",
                "None",
                "typing.Hashable"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "str",
                    "int",
                    "None",
                    "typing.Hashable"
                ],
                "key": [
                    "str",
                    "int",
                    "None",
                    "typing.Hashable"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/view_log.py": {
        "ViewLog.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "ViewLog.update_log": {
            "name": "update_log",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewLog.get_status_bar": {
            "name": "get_status_bar",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewLog.keypress": {
            "name": "keypress",
            "location": 48,
            "return": [
                "str",
                "int",
                "None",
                "typing.Hashable"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "str",
                    "int",
                    "None",
                    "typing.Hashable"
                ],
                "key": [
                    "str",
                    "int",
                    "None",
                    "typing.Hashable"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/view_note.py": {
        "ViewNote.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "args": []
            }
        },
        "ViewNote.get_note_content_as_list": {
            "name": "get_note_content_as_list",
            "location": 28,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewNote.update_note_view": {
            "name": "update_note_view",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "None",
                    "str",
                    "bytes",
                    "int"
                ],
                "version": []
            }
        },
        "ViewNote.lines_after_current_position": {
            "name": "lines_after_current_position",
            "location": 82,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewNote.lines_before_current_position": {
            "name": "lines_before_current_position",
            "location": 86,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewNote.search_note_view_next": {
            "name": "search_note_view_next",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search_string": [
                    "None",
                    "str",
                    "int",
                    "list[]",
                    "typing.Final",
                    "dict[, ]"
                ],
                "search_mode": [
                    "None",
                    "str",
                    "int",
                    "typing.Iterable[str]"
                ]
            }
        },
        "ViewNote.search_note_view_prev": {
            "name": "search_note_view_prev",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search_string": [
                    "None",
                    "str",
                    "int",
                    "list[]",
                    "typing.Final",
                    "dict[, ]"
                ],
                "search_mode": [
                    "None",
                    "str",
                    "int",
                    "typing.Iterable[str]"
                ]
            }
        },
        "ViewNote.search_note_range": {
            "name": "search_note_range",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note_range": [
                    "list[str]",
                    "list[]"
                ]
            }
        },
        "ViewNote.is_match": {
            "name": "is_match",
            "location": 116,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "term": [
                    "str",
                    "None"
                ],
                "full_text": [
                    "str"
                ]
            }
        },
        "ViewNote.get_status_bar": {
            "name": "get_status_bar",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewNote.copy_note_text": {
            "name": "copy_note_text",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewNote.keypress": {
            "name": "keypress",
            "location": 205,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "str",
                    "int",
                    "None",
                    "typing.Hashable"
                ],
                "key": [
                    "str"
                ]
            }
        }
    },
    "sncli-master/simplenote_cli/view_titles.py": {
        "ViewTitles.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[str, typing.Any]"
                ],
                "args": []
            }
        },
        "ViewTitles.update_note_list": {
            "name": "update_note_list",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search_string": [
                    "int",
                    "None",
                    "str",
                    "list[str]"
                ],
                "search_mode": [
                    "typing.Text"
                ],
                "sort_mode": [
                    "typing.Text"
                ]
            }
        },
        "ViewTitles.sort_note_list": {
            "name": "sort_note_list",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sort_mode": [
                    "list[str]",
                    "bytes",
                    "int",
                    "list[]",
                    "typing.Sequence[T]",
                    "list[int]"
                ]
            }
        },
        "ViewTitles.format_title": {
            "name": "format_title",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "note": [
                    "list[tuple[typing.Union[int,str]]]",
                    "str"
                ]
            }
        },
        "ViewTitles.get_note_title": {
            "name": "get_note_title",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "note": [
                    "str",
                    "int"
                ]
            }
        },
        "ViewTitles.get_note_titles": {
            "name": "get_note_titles",
            "location": 140,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ViewTitles.get_status_bar": {
            "name": "get_status_bar",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTitles.update_note_title": {
            "name": "update_note_title",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "None",
                    "str",
                    "int",
                    "typing.Callable[T, T]"
                ]
            }
        },
        "ViewTitles.focus_note": {
            "name": "focus_note",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "ViewTitles.keypress": {
            "name": "keypress",
            "location": 190,
            "return": [
                "str",
                "int",
                "None",
                "typing.Hashable"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "str",
                    "int",
                    "None",
                    "typing.Hashable"
                ],
                "key": [
                    "str",
                    "int",
                    "None",
                    "typing.Hashable"
                ]
            }
        },
        "ViewTitles.format_title.recursive_format": {
            "name": "recursive_format",
            "location": 68,
            "return": [
                "None",
                "list[typing.Optional[tuple[typing.Union[int,typing.Text]]]]"
            ],
            "arguments": {
                "title_format": []
            }
        }
    },
    "sncli-master/simplenote_cli/__init__.py": {}
}
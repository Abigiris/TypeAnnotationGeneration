{
    "snowball-trading-master/app.py": {
        "stocks": {
            "name": "stocks",
            "location": 23,
            "return": [],
            "arguments": {
                "status": [
                    "None"
                ],
                "alt": [
                    "None"
                ]
            }
        },
        "stocks_new_filter": {
            "name": "stocks_new_filter",
            "location": 73,
            "return": [],
            "arguments": {}
        },
        "stocks_save_filter": {
            "name": "stocks_save_filter",
            "location": 84,
            "return": [],
            "arguments": {
                "filter_id": []
            }
        },
        "stocks_remove_filter": {
            "name": "stocks_remove_filter",
            "location": 94,
            "return": [],
            "arguments": {
                "filter_id": []
            }
        },
        "stocks_add_filter_option": {
            "name": "stocks_add_filter_option",
            "location": 100,
            "return": [],
            "arguments": {
                "filter_id": []
            }
        },
        "stocks_remove_filter_option": {
            "name": "stocks_remove_filter_option",
            "location": 126,
            "return": [],
            "arguments": {
                "filter_id": [],
                "filter_option_id": []
            }
        },
        "stocks_add_rank_option": {
            "name": "stocks_add_rank_option",
            "location": 136,
            "return": [],
            "arguments": {
                "filter_id": []
            }
        },
        "stocks_remove_rank_option": {
            "name": "stocks_remove_rank_option",
            "location": 152,
            "return": [],
            "arguments": {
                "filter_id": []
            }
        },
        "stocks_fill_snowball_stats": {
            "name": "stocks_fill_snowball_stats",
            "location": 166,
            "return": [],
            "arguments": {}
        },
        "stock": {
            "name": "stock",
            "location": 172,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_records": {
            "name": "stock_records",
            "location": 179,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_refresh": {
            "name": "stock_refresh",
            "location": 189,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_expected_rate_by_price": {
            "name": "stock_expected_rate_by_price",
            "location": 195,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_my_price": {
            "name": "stock_my_price",
            "location": 205,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_adjusted_future_roe": {
            "name": "stock_adjusted_future_roe",
            "location": 214,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_adjusted_future_pbr": {
            "name": "stock_adjusted_future_pbr",
            "location": 223,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_clear_adjusted_future_pbr": {
            "name": "stock_clear_adjusted_future_pbr",
            "location": 232,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_update_note": {
            "name": "stock_update_note",
            "location": 240,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_clear_adjusted_future_roe": {
            "name": "stock_clear_adjusted_future_roe",
            "location": 249,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "stock_status": {
            "name": "stock_status",
            "location": 257,
            "return": [],
            "arguments": {
                "code": [],
                "status": [],
                "on": []
            }
        },
        "add_stock": {
            "name": "add_stock",
            "location": 269,
            "return": [],
            "arguments": {}
        },
        "remove_stock": {
            "name": "remove_stock",
            "location": 278,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "etfs": {
            "name": "etfs",
            "location": 284,
            "return": [],
            "arguments": {
                "etf_type": [
                    "typing.Text"
                ]
            }
        }
    },
    "snowball-trading-master/core_sample.py": {
        "basic": {
            "name": "basic",
            "location": 10,
            "return": [
                "tuple[float]"
            ],
            "arguments": {
                "code": [
                    "str"
                ]
            }
        },
        "bps": {
            "name": "bps",
            "location": 21,
            "return": [
                "int"
            ],
            "arguments": {
                "code": [
                    "str"
                ]
            }
        },
        "snowball": {
            "name": "snowball",
            "location": 31,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "future_bps": {
            "name": "future_bps",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "bps": [],
                "future_roe": [
                    "int"
                ],
                "future": [
                    "int"
                ]
            }
        },
        "expected_rate": {
            "name": "expected_rate",
            "location": 46,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "future_bps": [
                    "int"
                ],
                "price": [
                    "int"
                ],
                "future": [
                    "int"
                ]
            }
        },
        "invest_price": {
            "name": "invest_price",
            "location": 50,
            "return": [
                "int"
            ],
            "arguments": {
                "future_bps": [
                    "bool"
                ],
                "target_rate": [
                    "int"
                ],
                "future": [
                    "int"
                ]
            }
        }
    },
    "snowball-trading-master/db.py": {
        "make_filter_option_func": {
            "name": "make_filter_option_func",
            "location": 647,
            "return": [],
            "arguments": {
                "filter_option": []
            }
        },
        "update_rank_by": {
            "name": "update_rank_by",
            "location": 656,
            "return": [
                "None"
            ],
            "arguments": {
                "stocks": [],
                "key": [],
                "rank_key": [],
                "reverse": []
            }
        },
        "update_ranks": {
            "name": "update_ranks",
            "location": 667,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "all_stocks": {
            "name": "all_stocks",
            "location": 689,
            "return": [
                "list[Stock]"
            ],
            "arguments": {
                "order_by": [
                    "typing.Text"
                ],
                "ordering": [
                    "typing.Text"
                ],
                "find": [
                    "None"
                ],
                "filter_by_expected_rate": [
                    "bool"
                ],
                "filter_bad": [
                    "bool"
                ],
                "filter_options": [
                    "list[]"
                ],
                "rank_options": [
                    "list[]"
                ]
            }
        },
        "stock_by_code": {
            "name": "stock_by_code",
            "location": 716,
            "return": [
                "Stock"
            ],
            "arguments": {
                "code": []
            }
        },
        "save_stock": {
            "name": "save_stock",
            "location": 720,
            "return": [],
            "arguments": {
                "stock": []
            }
        },
        "unset_keys": {
            "name": "unset_keys",
            "location": 730,
            "return": [
                "None"
            ],
            "arguments": {
                "keys_to_unsets": []
            }
        },
        "all_filters": {
            "name": "all_filters",
            "location": 735,
            "return": [
                "list[Filter]"
            ],
            "arguments": {}
        },
        "filter_by_id": {
            "name": "filter_by_id",
            "location": 740,
            "return": [
                "Filter"
            ],
            "arguments": {
                "filter_id": []
            }
        },
        "save_filter": {
            "name": "save_filter",
            "location": 744,
            "return": [],
            "arguments": {
                "filter": []
            }
        },
        "remove_filter": {
            "name": "remove_filter",
            "location": 752,
            "return": [
                "None"
            ],
            "arguments": {
                "filter_id": []
            }
        },
        "remove_stock": {
            "name": "remove_stock",
            "location": 756,
            "return": [
                "None"
            ],
            "arguments": {
                "code": []
            }
        },
        "save_prices": {
            "name": "save_prices",
            "location": 760,
            "return": [
                "None"
            ],
            "arguments": {
                "prices": []
            }
        },
        "get_latest_price": {
            "name": "get_latest_price",
            "location": 764,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "get_prices": {
            "name": "get_prices",
            "location": 768,
            "return": [
                "list[]"
            ],
            "arguments": {
                "code": []
            }
        },
        "save_etf": {
            "name": "save_etf",
            "location": 772,
            "return": [],
            "arguments": {
                "etf": []
            }
        },
        "etf_by_code": {
            "name": "etf_by_code",
            "location": 782,
            "return": [
                "ETF"
            ],
            "arguments": {
                "code": []
            }
        },
        "all_etf": {
            "name": "all_etf",
            "location": 786,
            "return": [
                "list[ETF]"
            ],
            "arguments": {
                "order_by": [
                    "typing.Text"
                ],
                "ordering": [
                    "typing.Text"
                ],
                "etf_type": [
                    "typing.Text"
                ]
            }
        },
        "Filter.filter_options": {
            "name": "filter_options",
            "location": 91,
            "return": [
                "list[FilterOption]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Filter.dict_filter_options": {
            "name": "dict_filter_options",
            "location": 100,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Filter.rank_options": {
            "name": "rank_options",
            "location": 104,
            "return": [
                "list[RankOption]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ETF.object_id": {
            "name": "object_id",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ETF.tags": {
            "name": "tags",
            "location": 118,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.__hash__": {
            "name": "__hash__",
            "location": 123,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.object_id": {
            "name": "object_id",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.is_starred": {
            "name": "is_starred",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.is_owned": {
            "name": "is_owned",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.current_price": {
            "name": "current_price",
            "location": 139,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.price_arrow": {
            "name": "price_arrow",
            "location": 143,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.price_color": {
            "name": "price_color",
            "location": 150,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.price_sign": {
            "name": "price_sign",
            "location": 157,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.pbr": {
            "name": "pbr",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.per": {
            "name": "per",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.financial_statements_url": {
            "name": "financial_statements_url",
            "location": 169,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.roes": {
            "name": "roes",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.pbrs": {
            "name": "pbrs",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.pers": {
            "name": "pers",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.epss": {
            "name": "epss",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.countable_roes": {
            "name": "countable_roes",
            "location": 189,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.countable_last_four_years_roes_count": {
            "name": "countable_last_four_years_roes_count",
            "location": 193,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.low_pbr": {
            "name": "low_pbr",
            "location": 197,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.high_pbr": {
            "name": "high_pbr",
            "location": 204,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.mid_pbr": {
            "name": "mid_pbr",
            "location": 211,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.adjusted_eps": {
            "name": "adjusted_eps",
            "location": 215,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.mid_roe": {
            "name": "mid_roe",
            "location": 222,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.eps_growth": {
            "name": "eps_growth",
            "location": 227,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.dividend_rate": {
            "name": "dividend_rate",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.beta": {
            "name": "beta",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.foreigner_weight": {
            "name": "foreigner_weight",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.floating_rate": {
            "name": "floating_rate",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.has_note": {
            "name": "has_note",
            "location": 251,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.latest_fscore": {
            "name": "latest_fscore",
            "location": 255,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.fscores": {
            "name": "fscores",
            "location": 264,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.mean_per": {
            "name": "mean_per",
            "location": 269,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.dividend_tax_adjust": {
            "name": "dividend_tax_adjust",
            "location": 274,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.last_four_years_roe": {
            "name": "last_four_years_roe",
            "location": 278,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.four_years_roe": {
            "name": "four_years_roe",
            "location": 281,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "year": []
            }
        },
        "Stock.calculated_roe_count": {
            "name": "calculated_roe_count",
            "location": 285,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.calculable_pbr_count": {
            "name": "calculable_pbr_count",
            "location": 289,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.mean_roe": {
            "name": "mean_roe",
            "location": 293,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.future_roe": {
            "name": "future_roe",
            "location": 297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.expected_rate": {
            "name": "expected_rate",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.invest_price": {
            "name": "invest_price",
            "location": 305,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.expected_rate_by_current_pbr": {
            "name": "expected_rate_by_current_pbr",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.expected_rate_by_low_pbr": {
            "name": "expected_rate_by_low_pbr",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.expected_rate_by_mid_pbr": {
            "name": "expected_rate_by_mid_pbr",
            "location": 318,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.expected_rate_by_adjusted_future_pbr": {
            "name": "expected_rate_by_adjusted_future_pbr",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.intrinsic_value": {
            "name": "intrinsic_value",
            "location": 326,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.intrinsic_discount_rate": {
            "name": "intrinsic_discount_rate",
            "location": 330,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.peg_current_per": {
            "name": "peg_current_per",
            "location": 334,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.peg_mean_per": {
            "name": "peg_mean_per",
            "location": 338,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.roe_max_diff": {
            "name": "roe_max_diff",
            "location": 342,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.last_four_years_roe_max_diff": {
            "name": "last_four_years_roe_max_diff",
            "location": 347,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.QROEs": {
            "name": "QROEs",
            "location": 354,
            "return": [
                "list[tuple[Quarter]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.QBPSs": {
            "name": "QBPSs",
            "location": 358,
            "return": [
                "list[tuple[Quarter]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.QROEs_QBPSs": {
            "name": "QROEs_QBPSs",
            "location": 362,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.calculable": {
            "name": "calculable",
            "location": 366,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.future_bps": {
            "name": "future_bps",
            "location": 370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.BPSs": {
            "name": "BPSs",
            "location": 374,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.DEPTs": {
            "name": "DEPTs",
            "location": 378,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.CFOs": {
            "name": "CFOs",
            "location": 382,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.CFIs": {
            "name": "CFIs",
            "location": 386,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.CFFs": {
            "name": "CFFs",
            "location": 390,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.FCFs": {
            "name": "FCFs",
            "location": 394,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.FCF_surplus_years": {
            "name": "FCF_surplus_years",
            "location": 398,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.is_five_years_record_low": {
            "name": "is_five_years_record_low",
            "location": 402,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.has_consensus": {
            "name": "has_consensus",
            "location": 406,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.consensus_roes": {
            "name": "consensus_roes",
            "location": 410,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.mean_consensus_roe": {
            "name": "mean_consensus_roe",
            "location": 414,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.is_positive_consensus_roe": {
            "name": "is_positive_consensus_roe",
            "location": 418,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.TAs": {
            "name": "TAs",
            "location": 424,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.rank_last_year_gpa": {
            "name": "rank_last_year_gpa",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.rank_pbr": {
            "name": "rank_pbr",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.is_closing_month_march": {
            "name": "is_closing_month_march",
            "location": 436,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.current_assets": {
            "name": "current_assets",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.current_liability": {
            "name": "current_liability",
            "location": 444,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.total_liability": {
            "name": "total_liability",
            "location": 448,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.current_ratio": {
            "name": "current_ratio",
            "location": 452,
            "return": [
                "list[tuple[int]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.current_ratio_last_year": {
            "name": "current_ratio_last_year",
            "location": 456,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.NCAV": {
            "name": "NCAV",
            "location": 463,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.NCAV_ratio": {
            "name": "NCAV_ratio",
            "location": 471,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.calc_gpa": {
            "name": "calc_gpa",
            "location": 474,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gp": []
            }
        },
        "Stock.GPAs": {
            "name": "GPAs",
            "location": 486,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.GPA_stat": {
            "name": "GPA_stat",
            "location": 490,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.last_year_gpa": {
            "name": "last_year_gpa",
            "location": 494,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.last_year_pcr": {
            "name": "last_year_pcr",
            "location": 501,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.last_year_psr": {
            "name": "last_year_psr",
            "location": 508,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.agg_rank": {
            "name": "agg_rank",
            "location": 515,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.use_fnguide": {
            "name": "use_fnguide",
            "location": 519,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.month1": {
            "name": "month1",
            "location": 523,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.month3": {
            "name": "month3",
            "location": 527,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.month6": {
            "name": "month6",
            "location": 531,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.month12": {
            "name": "month12",
            "location": 535,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.relative_earning_rate": {
            "name": "relative_earning_rate",
            "location": 539,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stock.sales_cost_ratio": {
            "name": "sales_cost_ratio",
            "location": 543,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.SGA_ratio": {
            "name": "SGA_ratio",
            "location": 547,
            "return": [
                "list[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.mean_ROIC": {
            "name": "mean_ROIC",
            "location": 551,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.value_by_year": {
            "name": "value_by_year",
            "location": 555,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "year": []
            }
        },
        "Stock.total_asset_turnover_by": {
            "name": "total_asset_turnover_by",
            "location": 558,
            "return": [],
            "arguments": {
                "self": [],
                "year": []
            }
        },
        "Stock.net_working_capital_by": {
            "name": "net_working_capital_by",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "year": []
            }
        },
        "Stock.expected_rate_by_price": {
            "name": "expected_rate_by_price",
            "location": 564,
            "return": [],
            "arguments": {
                "self": [],
                "price": []
            }
        },
        "Stock.calc_future_bps": {
            "name": "calc_future_bps",
            "location": 567,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "future": []
            }
        },
        "Stock.calc_future_price_low_pbr": {
            "name": "calc_future_price_low_pbr",
            "location": 575,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "future": []
            }
        },
        "Stock.calc_future_price_high_pbr": {
            "name": "calc_future_price_high_pbr",
            "location": 578,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "future": []
            }
        },
        "Stock.calc_future_price_current_pbr": {
            "name": "calc_future_price_current_pbr",
            "location": 581,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "future": []
            }
        },
        "Stock.calc_future_price_low_current_mid_pbr": {
            "name": "calc_future_price_low_current_mid_pbr",
            "location": 584,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "future": []
            }
        },
        "Stock.calc_future_price_adjusted_future_pbr": {
            "name": "calc_future_price_adjusted_future_pbr",
            "location": 587,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "future": []
            }
        },
        "Stock.calc_expected_rate": {
            "name": "calc_expected_rate",
            "location": 590,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "self": [],
                "calc_bps": [],
                "future": [],
                "price": [
                    "None"
                ]
            }
        },
        "Stock.ten_year_prices": {
            "name": "ten_year_prices",
            "location": 598,
            "return": [
                "list[]",
                "list[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stock.fscore": {
            "name": "fscore",
            "location": 608,
            "return": [
                "FScore"
            ],
            "arguments": {
                "self": [],
                "year": []
            }
        },
        "Stock.year_stat": {
            "name": "year_stat",
            "location": 627,
            "return": [
                "list[tuple[int]]",
                "list[tuple[]]"
            ],
            "arguments": {
                "self": [],
                "stat": [],
                "exclude_future": [
                    "bool"
                ]
            }
        },
        "Stock.__str__": {
            "name": "__str__",
            "location": 643,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "make_filter_option_func.filter_option_func": {
            "name": "filter_option_func",
            "location": 648,
            "return": [
                "bool"
            ],
            "arguments": {
                "s": []
            }
        }
    },
    "snowball-trading-master/etftag.py": {
        "ETFTag.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str",
                    "Exception",
                    "None",
                    "typing.Callable[, ]",
                    "int",
                    "dict[str, str]"
                ],
                "etfs": [
                    "list[]"
                ]
            }
        },
        "ETFTag.month1": {
            "name": "month1",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ETFTag.month3": {
            "name": "month3",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ETFTag.month6": {
            "name": "month6",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ETFTag.month12": {
            "name": "month12",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "snowball-trading-master/historical.py": {
        "parse_date": {
            "name": "parse_date",
            "location": 30,
            "return": [],
            "arguments": {
                "date_str": [
                    "str"
                ]
            }
        },
        "load_kakao_json": {
            "name": "load_kakao_json",
            "location": 34,
            "return": [
                "None",
                "str",
                "tuple[typing.Union[typing.Any,typing.Any,None]]"
            ],
            "arguments": {
                "code": [
                    "str",
                    "dict[str, str]",
                    "typing.Mapping",
                    "None"
                ],
                "date": []
            }
        },
        "parse_day_candles": {
            "name": "parse_day_candles",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "code": [
                    "str",
                    "bool"
                ],
                "date": []
            }
        },
        "make_record": {
            "name": "make_record",
            "location": 64,
            "return": [
                "Record"
            ],
            "arguments": {
                "date": [],
                "price": [
                    "None"
                ],
                "bps": [
                    "None"
                ],
                "stock": []
            }
        },
        "build_records": {
            "name": "build_records",
            "location": 78,
            "return": [
                "None",
                "list[]"
            ],
            "arguments": {
                "stock": []
            }
        },
        "make_year_stat": {
            "name": "make_year_stat",
            "location": 96,
            "return": [
                "YearStat"
            ],
            "arguments": {
                "year": [
                    "int"
                ],
                "records": [
                    "str"
                ]
            }
        },
        "records_by_year": {
            "name": "records_by_year",
            "location": 108,
            "return": [
                "list[tuple[list[]]]"
            ],
            "arguments": {
                "stock": [
                    "str",
                    "list[str]",
                    "typing.Any",
                    "None",
                    "tuple[str]"
                ]
            }
        },
        "simulate": {
            "name": "simulate",
            "location": 116,
            "return": [
                "list[Event]"
            ],
            "arguments": {
                "by_year": [
                    "str"
                ]
            }
        }
    },
    "snowball-trading-master/scrapper.py": {
        "fill_company": {
            "name": "fill_company",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "typing.Text"
                ]
            }
        },
        "parse_snowball_stocks": {
            "name": "parse_snowball_stocks",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "filter_bad": [
                    "bool"
                ],
                "only_starred_owned": [
                    "bool"
                ]
            }
        },
        "tree_from_url": {
            "name": "tree_from_url",
            "location": 61,
            "return": [],
            "arguments": {
                "url": [],
                "decode": [
                    "None"
                ]
            }
        },
        "parse_basic": {
            "name": "parse_basic",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": []
            }
        },
        "quarter_from": {
            "name": "quarter_from",
            "location": 117,
            "return": [
                "None",
                "Quarter"
            ],
            "arguments": {
                "text": []
            }
        },
        "parse_quarterly": {
            "name": "parse_quarterly",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "code": []
            }
        },
        "parse_naver_company": {
            "name": "parse_naver_company",
            "location": 158,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": []
            }
        },
        "parse_snowball": {
            "name": "parse_snowball",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "code": []
            }
        },
        "parse_json": {
            "name": "parse_json",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "code": []
            }
        },
        "parse_etf": {
            "name": "parse_etf",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {
                "code": [],
                "tag": [],
                "etf_type": []
            }
        },
        "parse_etfs": {
            "name": "parse_etfs",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "parse_line": {
            "name": "parse_line",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {
                "line": [],
                "etf_type": []
            }
        },
        "parse_fnguide": {
            "name": "parse_fnguide",
            "location": 393,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": []
            }
        },
        "row_values_table": {
            "name": "row_values_table",
            "location": 474,
            "return": [
                "list[]"
            ],
            "arguments": {
                "table": [],
                "row_headers": [],
                "key": []
            }
        },
        "parse_fnguide_financial_table": {
            "name": "parse_fnguide_financial_table",
            "location": 482,
            "return": [
                "dict[, ]",
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "tree": []
            }
        },
        "parse_fnguide_profit_table": {
            "name": "parse_fnguide_profit_table",
            "location": 516,
            "return": [
                "dict[, ]",
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "tree": []
            }
        },
        "parse_fnguide_financial_statements": {
            "name": "parse_fnguide_financial_statements",
            "location": 546,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": []
            }
        },
        "parse_fnguide_financial_ratio": {
            "name": "parse_fnguide_financial_ratio",
            "location": 558,
            "return": [
                "bool"
            ],
            "arguments": {
                "code": []
            }
        }
    },
    "snowball-trading-master/script.py": {},
    "snowball-trading-master/setup.py": {},
    "snowball-trading-master/test.py": {
        "StockTest.test_dict_to_stock": {
            "name": "test_dict_to_stock",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockTest.test_dividend_tax_adjust": {
            "name": "test_dividend_tax_adjust",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_roe_year_stat_empty": {
            "name": "test_roe_year_stat_empty",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_roe_year_stat_should_have_last_year_index": {
            "name": "test_roe_year_stat_should_have_last_year_index",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_roe_year_stat": {
            "name": "test_roe_year_stat",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_countable_roe": {
            "name": "test_countable_roe",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_last_four_years_roe": {
            "name": "test_last_four_years_roe",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_mean_roe": {
            "name": "test_mean_roe",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_calculated_roe_count": {
            "name": "test_calculated_roe_count",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_future_roe": {
            "name": "test_future_roe",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_calc_future_bps": {
            "name": "test_calc_future_bps",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_expected_rate": {
            "name": "test_expected_rate",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_invest_price": {
            "name": "test_invest_price",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_calculable_pbr_count": {
            "name": "test_calculable_pbr_count",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_expected_rate_by_current_pbr": {
            "name": "test_expected_rate_by_current_pbr",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_expected_rate_by_low_pbr": {
            "name": "test_expected_rate_by_low_pbr",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_expected_rate_by_mid_pbr": {
            "name": "test_expected_rate_by_mid_pbr",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_adjusted_eps": {
            "name": "test_adjusted_eps",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_intrinsic_value": {
            "name": "test_intrinsic_value",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_intrinsic_discount_rate": {
            "name": "test_intrinsic_discount_rate",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_eps_growth": {
            "name": "test_eps_growth",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_peg_current_per": {
            "name": "test_peg_current_per",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_peg_mean_per": {
            "name": "test_peg_mean_per",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_fscore": {
            "name": "test_fscore",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_roe_max_diff": {
            "name": "test_roe_max_diff",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StockYearStatTest.test_quarter_roes": {
            "name": "test_quarter_roes",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "snowball-trading-master/utils.py": {
        "mean_or_zero": {
            "name": "mean_or_zero",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {
                "iter": [
                    "tuple[typing.Union[list[int],list[int]]]",
                    "int",
                    "list[list[str]]",
                    "str",
                    "None"
                ]
            }
        },
        "parse_float": {
            "name": "parse_float",
            "location": 11,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "str": [
                    "str",
                    "None",
                    "bytes"
                ]
            }
        },
        "parse_int": {
            "name": "parse_int",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "str": [
                    "str",
                    "int"
                ]
            }
        },
        "attr_or_key_getter": {
            "name": "attr_or_key_getter",
            "location": 25,
            "return": [],
            "arguments": {
                "name": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ],
                "obj": [
                    "dict[str, typing.Any]"
                ],
                "default_value": [
                    "int"
                ]
            }
        },
        "first_or_none": {
            "name": "first_or_none",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "iter": []
            }
        },
        "float_or_none": {
            "name": "float_or_none",
            "location": 39,
            "return": [
                "None",
                "float"
            ],
            "arguments": {
                "x": []
            }
        }
    }
}
{
    "spam-filter-master/run.py": {},
    "spam-filter-master/app/routes.py": {
        "classify_spam": {
            "name": "classify_spam",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "add_training_data": {
            "name": "add_training_data",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "check_health": {
            "name": "check_health",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "_create_response": {
            "name": "_create_response",
            "location": 36,
            "return": [],
            "arguments": {
                "result": [],
                "status": []
            }
        },
        "_create_ok_response": {
            "name": "_create_ok_response",
            "location": 46,
            "return": [],
            "arguments": {}
        }
    },
    "spam-filter-master/app/__init__.py": {
        "add_request_id": {
            "name": "add_request_id",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "add_request_id_to_response": {
            "name": "add_request_id_to_response",
            "location": 41,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "handle_request_error": {
            "name": "handle_request_error",
            "location": 54,
            "return": [],
            "arguments": {
                "error": []
            }
        }
    },
    "spam-filter-master/app/config/logging.py": {},
    "spam-filter-master/app/config/util.py": {
        "getenv": {
            "name": "getenv",
            "location": 10,
            "return": [],
            "arguments": {
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "get_database_uri": {
            "name": "get_database_uri",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "spam-filter-master/app/config/__init__.py": {},
    "spam-filter-master/app/controllers/classification.py": {
        "is_spam": {
            "name": "is_spam",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "_get_spam_body": {
            "name": "_get_spam_body",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "_get_model_type": {
            "name": "_get_model_type",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "_log_request": {
            "name": "_log_request",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "res": [
                    "str",
                    "dict[, ]",
                    "typing.Mapping",
                    "int"
                ]
            }
        }
    },
    "spam-filter-master/app/controllers/errors.py": {
        "RequestError.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "float"
                ]
            }
        },
        "RequestError.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestError.asdict": {
            "name": "asdict",
            "location": 26,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RequestError.status": {
            "name": "status",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BadRequestError.status": {
            "name": "status",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConflictError.status": {
            "name": "status",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotFoundError.status": {
            "name": "status",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InternalServerError.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "typing.Text"
                ]
            }
        },
        "NotImplementedError.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NotImplementedError.status": {
            "name": "status",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "spam-filter-master/app/controllers/health_check.py": {
        "check_health": {
            "name": "check_health",
            "location": 18,
            "return": [
                "tuple[typing.Union[dict[typing.Text, typing.Union[str,dict[str, dict[int, int]],dict[str, dict[str, typing.Any]],bytes,dict[int, int],typing.Type,list[str],list[typing.Pattern],frozenset,dict[str, str],int,None,list[int]]],int,str,dict[int, str]]]"
            ],
            "arguments": {}
        },
        "_check_model_status": {
            "name": "_check_model_status",
            "location": 35,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {}
        },
        "_check_db_status": {
            "name": "_check_db_status",
            "location": 46,
            "return": [
                "tuple[typing.Union[typing.Text,bool]]"
            ],
            "arguments": {}
        },
        "_determine_overall_status": {
            "name": "_determine_overall_status",
            "location": 60,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {}
        }
    },
    "spam-filter-master/app/controllers/status.py": {},
    "spam-filter-master/app/controllers/training_data.py": {
        "add_training_data": {
            "name": "add_training_data",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_parse_training_data": {
            "name": "_parse_training_data",
            "location": 24,
            "return": [
                "TrainingData"
            ],
            "arguments": {
                "body": [
                    "str"
                ]
            }
        },
        "_parse_spam_label": {
            "name": "_parse_spam_label",
            "location": 35,
            "return": [],
            "arguments": {
                "label": [
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "spam-filter-master/app/controllers/util.py": {
        "get_param": {
            "name": "get_param",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "param_name": [
                    "str"
                ]
            }
        },
        "get_optional_param": {
            "name": "get_optional_param",
            "location": 23,
            "return": [
                "list[str]",
                "bool",
                "str"
            ],
            "arguments": {
                "param_name": [
                    "str"
                ],
                "default": [
                    "list[str]",
                    "bool",
                    "str"
                ]
            }
        },
        "get_json_body": {
            "name": "get_json_body",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "is_string": {
            "name": "is_string",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "bytes",
                    "None",
                    "dict[, ]"
                ]
            }
        }
    },
    "spam-filter-master/app/controllers/__init__.py": {},
    "spam-filter-master/app/models/classifier.py": {
        "Classifier.__repr__": {
            "name": "__repr__",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "spam-filter-master/app/models/spam.py": {
        "format_text": {
            "name": "format_text",
            "location": 96,
            "return": [],
            "arguments": {
                "original": [
                    "str",
                    "bytes"
                ]
            }
        },
        "SpamLabel.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainingData.__repr__": {
            "name": "__repr__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpamCandidate.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "int"
                ],
                "label": [
                    "None",
                    "int",
                    "str",
                    "typing.Sequence[dict[str, str]]",
                    "dict[tuple[typing.Union[str,str]], int]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "SpamCandidate.todict": {
            "name": "todict",
            "location": 46,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpamCandidate.fromdict": {
            "name": "fromdict",
            "location": 50,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Callable[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "raw": [
                    "str"
                ]
            }
        },
        "SpamResult.todict": {
            "name": "todict",
            "location": 59,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ResultSample.from_candidate": {
            "name": "from_candidate",
            "location": 74,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "candidate": [
                    "str",
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ResultSample.from_result": {
            "name": "from_result",
            "location": 78,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "res": [
                    "str"
                ],
                "text": [
                    "str"
                ]
            }
        },
        "ResultSample.__repr__": {
            "name": "__repr__",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "spam-filter-master/app/models/__init__.py": {},
    "spam-filter-master/app/repository/model_repo.py": {
        "ModelRepo.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "svm_model": [
                    "str"
                ],
                "nb_model": [
                    "str"
                ]
            }
        },
        "ModelRepo.get_spam_classifier": {
            "name": "get_spam_classifier",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "type": []
            }
        },
        "ModelRepo.save_classifier": {
            "name": "save_classifier",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "classifier": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "ModelRepo.__classifier_exists": {
            "name": "__classifier_exists",
            "location": 41,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "classifier": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "spam-filter-master/app/repository/sample_repo.py": {
        "SampleRepo.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SampleRepo.save": {
            "name": "save",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "res": [
                    "bool",
                    "str",
                    "bytes"
                ],
                "text": [
                    "bool",
                    "str",
                    "bytes"
                ]
            }
        },
        "SampleRepo._should_sample": {
            "name": "_should_sample",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "spam-filter-master/app/repository/training_data_repo.py": {
        "TrainingDataRepo.save": {
            "name": "save",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "training_data": [
                    "dict[str, float]",
                    "tuple[typing.Union[str,dict[, ],int,typing.Any]]",
                    "list[lunch_buddies.models.polls.Poll]"
                ]
            }
        },
        "TrainingDataRepo.get_all": {
            "name": "get_all",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "spam-filter-master/app/repository/__init__.py": {},
    "spam-filter-master/app/service/classification_service.py": {
        "ClassifcationService.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model_repo": [
                    "str",
                    "typing.Sequence[dict[str, str]]",
                    "int"
                ]
            }
        },
        "ClassifcationService.classify": {
            "name": "classify",
            "location": 21,
            "return": [
                "SpamResult"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool",
                    "typing.Callable[, ]"
                ],
                "model_type": []
            }
        },
        "ClassifcationService.has_model": {
            "name": "has_model",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassifcationService._to_many_cashtags": {
            "name": "_to_many_cashtags",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ClassifcationService._get_model_repo": {
            "name": "_get_model_repo",
            "location": 58,
            "return": [
                "ModelRepo"
            ],
            "arguments": {
                "self": [],
                "model_repo": [
                    "int",
                    "dict[, ]",
                    "str",
                    "None",
                    "typing.MutableMapping",
                    "list[dict[, ]]"
                ]
            }
        }
    },
    "spam-filter-master/app/service/training_service.py": {
        "format_text": {
            "name": "format_text",
            "location": 155,
            "return": [],
            "arguments": {
                "original": [
                    "str",
                    "bytes"
                ]
            }
        },
        "dummy_pipeline": {
            "name": "dummy_pipeline",
            "location": 164,
            "return": [
                "Pipeline"
            ],
            "arguments": {}
        },
        "TrainingService.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sample_repo": [
                    "str",
                    "bool"
                ]
            }
        },
        "TrainingService.train_model": {
            "name": "train_model",
            "location": 33,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "TrainingService.__init_svm_model": {
            "name": "__init_svm_model",
            "location": 46,
            "return": [
                "Pipeline"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainingService.__init_naive_bayes_model": {
            "name": "__init_naive_bayes_model",
            "location": 57,
            "return": [
                "Pipeline"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainingService.__init_logistic_regression_model": {
            "name": "__init_logistic_regression_model",
            "location": 68,
            "return": [
                "Pipeline"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainingService.__init_model": {
            "name": "__init_model",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "dict[, ]",
                    "typing.Type"
                ]
            }
        },
        "TrainingService.__create_metadata": {
            "name": "__create_metadata",
            "location": 89,
            "return": [
                "Classifier"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str",
                    "int",
                    "None",
                    "list[int]"
                ],
                "type": [
                    "str",
                    "int",
                    "None",
                    "list[int]"
                ],
                "training_data": [
                    "str",
                    "int",
                    "None",
                    "list[int]"
                ],
                "test_data": [
                    "str",
                    "int",
                    "None",
                    "list[int]"
                ]
            }
        },
        "TrainingService.__check_model_accuracy": {
            "name": "__check_model_accuracy",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "model": [
                    "typing.Any",
                    "None",
                    "dict[, ]"
                ],
                "test_data": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TrainingService.__get_and_split_data": {
            "name": "__get_and_split_data",
            "location": 114,
            "return": [
                "tuple[typing.Union[dict[str, list[typing.Any]],typing.DefaultDict,typing.ChainMap,list[tuple[typing.Union[str,str,str,str]]],list[],dict[str, tuple[typing.Union[typing.Any,typing.Any,typing.Any,int]]],dict[, ],list[str]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainingService.__samples_to_datalist": {
            "name": "__samples_to_datalist",
            "location": 127,
            "return": [
                "DataList"
            ],
            "arguments": {
                "self": [],
                "training_data": [
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "TrainingService.__calc_model_hash": {
            "name": "__calc_model_hash",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "typing.Sequence[str]",
                    "int",
                    "list[typing.Any]"
                ],
                "training_data": [
                    "str",
                    "typing.Callable[..., T]",
                    "set[str]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "spam-filter-master/app/service/__init__.py": {
        "__setup_classification_svc": {
            "name": "__setup_classification_svc",
            "location": 10,
            "return": [
                "ClassifcationService"
            ],
            "arguments": {}
        },
        "__setup_model_repo": {
            "name": "__setup_model_repo",
            "location": 18,
            "return": [
                "ModelRepo"
            ],
            "arguments": {}
        }
    },
    "spam-filter-master/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [],
                "revision": [],
                "directives": []
            }
        }
    },
    "spam-filter-master/migrations/versions/80b647f2fe93_inital_tables.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "data_upgrades": {
            "name": "data_upgrades",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "spam-filter-master/migrations/versions/86dfc99a7189_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "spam-filter-master/migrations/versions/ab2c390515e8_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "squad-3-ad-data-science-master/setup.py": {},
    "squad-3-ad-data-science-master/analysis/natural_filter_algorithm.py": {
        "sector_filtering": {
            "name": "sector_filtering",
            "location": 155,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "portfolio": []
            }
        },
        "custom_apk": {
            "name": "custom_apk",
            "location": 236,
            "return": [
                "float"
            ],
            "arguments": {
                "market_list": [],
                "test_list": [],
                "k": []
            }
        }
    },
    "squad-3-ad-data-science-master/docs/source/conf.py": {
        "convert": {
            "name": "convert",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "word": [
                    "str",
                    "list[dict[, ]]"
                ]
            }
        }
    },
    "squad-3-ad-data-science-master/squad_3_ad_data_science/config.py": {},
    "squad-3-ad-data-science-master/squad_3_ad_data_science/exceptions.py": {},
    "squad-3-ad-data-science-master/squad_3_ad_data_science/feature_engineering.py": {
        "pipeline_data": {
            "name": "pipeline_data",
            "location": 13,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "input_data": []
            }
        },
        "manual_ordinal_encoder": {
            "name": "manual_ordinal_encoder",
            "location": 98,
            "return": [
                "dict[, ]",
                "dict[str, list[typing.Any]]"
            ],
            "arguments": {
                "input_data": [
                    "dict[, ]",
                    "dict[str, list[typing.Any]]"
                ]
            }
        },
        "create_sp_labels": {
            "name": "create_sp_labels",
            "location": 127,
            "return": [],
            "arguments": {
                "input_data": [
                    "int",
                    "bytearray"
                ]
            }
        },
        "impute_as_config": {
            "name": "impute_as_config",
            "location": 150,
            "return": [
                "dict[, ]",
                "str",
                "typing.Mapping"
            ],
            "arguments": {
                "input_data": [
                    "dict[, ]",
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "select_features": {
            "name": "select_features",
            "location": 196,
            "return": [
                "list[]",
                "dict[int, typing.Any]",
                "dict[str, int]",
                "dict[str, dict[str, typing.Any]]",
                "str",
                "int",
                "list[tuple[typing.Union[typing.Any,typing.Any]]]"
            ],
            "arguments": {
                "input_data": [
                    "bytes",
                    "bool"
                ]
            }
        }
    },
    "squad-3-ad-data-science-master/squad_3_ad_data_science/main.py": {
        "features": {
            "name": "features",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "train": {
            "name": "train",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "metadata": {
            "name": "metadata",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "predict": {
            "name": "predict",
            "location": 230,
            "return": [],
            "arguments": {
                "input_data": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "str",
                    "int"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 315,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cli": {
            "name": "cli",
            "location": 325,
            "return": [],
            "arguments": {}
        }
    },
    "squad-3-ad-data-science-master/squad_3_ad_data_science/model_training.py": {
        "create_mini_batch_kmeans": {
            "name": "create_mini_batch_kmeans",
            "location": 7,
            "return": [
                "tuple[typing.Union[MiniBatchKMeans,list[],dict[str, list[float]],dict[str, int],dict[, ]]]",
                "MiniBatchKMeans"
            ],
            "arguments": {
                "input_data": [
                    "str",
                    "typing.Callable[str, bool]",
                    "int"
                ],
                "return_labels": [
                    "bool"
                ]
            }
        }
    },
    "squad-3-ad-data-science-master/squad_3_ad_data_science/recomendations.py": {
        "make_recomendation": {
            "name": "make_recomendation",
            "location": 8,
            "return": [
                "list[]"
            ],
            "arguments": {
                "market_list": [],
                "user_ids": [
                    "int",
                    "list[]"
                ],
                "use_clusters": [
                    "bool"
                ],
                "use_sp_labels": [
                    "bool"
                ]
            }
        }
    },
    "squad-3-ad-data-science-master/squad_3_ad_data_science/validation.py": {
        "custom_apk": {
            "name": "custom_apk",
            "location": 1,
            "return": [
                "float"
            ],
            "arguments": {
                "market_list": [],
                "test_list": [],
                "k": [
                    "int"
                ]
            }
        }
    },
    "squad-3-ad-data-science-master/squad_3_ad_data_science/__init__.py": {},
    "squad-3-ad-data-science-master/tests/conftest.py": {
        "fixture_test_data": {
            "name": "fixture_test_data",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "squad-3-ad-data-science-master/tests/test_feature_engineering.py": {
        "test_data": {
            "name": "test_data",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "fixture_test_data": [
                    "int",
                    "float",
                    "str",
                    "list[dict[str, str]]",
                    "Exception",
                    "None"
                ]
            }
        },
        "test_pipeline_data": {
            "name": "test_pipeline_data",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "fixture_test_data": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "test_feature_selection": {
            "name": "test_feature_selection",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "fixture_test_data": [
                    "list[list[int]]",
                    "Exception",
                    "None",
                    "dict[, ]"
                ]
            }
        }
    },
    "squad-3-ad-data-science-master/tests/test_model_training.py": {
        "test_model_creation": {
            "name": "test_model_creation",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "fixture_test_data": [
                    "Exception",
                    "None",
                    "dict[, ]",
                    "list[list[int]]"
                ]
            }
        }
    },
    "squad-3-ad-data-science-master/tests/__init__.py": {}
}
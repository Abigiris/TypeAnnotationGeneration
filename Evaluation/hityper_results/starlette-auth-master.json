{
    "starlette-auth-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 10,
            "return": [],
            "arguments": {
                "package": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_package_data": {
            "name": "get_package_data",
            "location": 18,
            "return": [
                "dict[str, list[]]"
            ],
            "arguments": {
                "package": [
                    "str"
                ]
            }
        },
        "get_long_description": {
            "name": "get_long_description",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "get_packages": {
            "name": "get_packages",
            "location": 40,
            "return": [
                "list[]"
            ],
            "arguments": {
                "package": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "starlette-auth-master/starlette_auth/backends.py": {
        "ModelAuthBackend.get_user": {
            "name": "get_user",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "conn": [
                    "str",
                    "dict[, ]",
                    "typing.Mapping"
                ]
            }
        }
    },
    "starlette-auth-master/starlette_auth/config.py": {},
    "starlette-auth-master/starlette_auth/endpoints.py": {
        "PasswordResetConfirm.get_user": {
            "name": "get_user",
            "location": 140,
            "return": [
                "dict[int, typing.Any]",
                "dict[, ]",
                "None",
                "dict[str, str]",
                "dict[typing.Any, dict[str, typing.Any]]",
                "typing.KeysView",
                "typing.Type"
            ],
            "arguments": {
                "self": [],
                "uidb64": [
                    "bytes",
                    "str",
                    "int",
                    "bytearray",
                    "list[int]"
                ]
            }
        },
        "PasswordResetConfirm.check_token": {
            "name": "check_token",
            "location": 148,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "bool",
                    "None",
                    "typing.Callable[dict[, ], None]"
                ],
                "uidb64": [
                    "bool",
                    "typing.Callable[, ]",
                    "str",
                    "None"
                ],
                "token": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        }
    },
    "starlette-auth-master/starlette_auth/exceptions.py": {},
    "starlette-auth-master/starlette_auth/forms.py": {},
    "starlette-auth-master/starlette_auth/main.py": {},
    "starlette-auth-master/starlette_auth/middleware.py": {
        "SessionMiddleware.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [
                    "str",
                    "None",
                    "int"
                ],
                "secret_key": [
                    "str",
                    "typing.TextIO"
                ],
                "session_cookie": [
                    "typing.Text"
                ],
                "max_age": [
                    "int"
                ],
                "same_site": [
                    "typing.Text"
                ],
                "https_only": [
                    "bool"
                ],
                "cookie_path": [
                    "typing.Text"
                ]
            }
        }
    },
    "starlette-auth-master/starlette_auth/tables.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.is_authenticated": {
            "name": "is_authenticated",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.display_name": {
            "name": "display_name",
            "location": 35,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.set_password": {
            "name": "set_password",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ]
            }
        },
        "User.check_password": {
            "name": "check_password",
            "location": 46,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str"
                ]
            }
        },
        "Scope.__str__": {
            "name": "__str__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "starlette-auth-master/starlette_auth/tokens.py": {
        "PasswordResetTokenGenerator.make_token": {
            "name": "make_token",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "dict[str, typing.Any]",
                    "None"
                ]
            }
        },
        "PasswordResetTokenGenerator.check_token": {
            "name": "check_token",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "None",
                    "bool",
                    "bytes"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "PasswordResetTokenGenerator._make_token_with_timestamp": {
            "name": "_make_token_with_timestamp",
            "location": 47,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "timestamp": [
                    "dict[, ]",
                    "str",
                    "bool"
                ]
            }
        },
        "PasswordResetTokenGenerator._make_hash_value": {
            "name": "_make_hash_value",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "user": [
                    "dict[str, typing.Any]",
                    "None",
                    "dict[, ]"
                ],
                "timestamp": [
                    "int",
                    "None",
                    "str",
                    "typing.Any"
                ]
            }
        },
        "PasswordResetTokenGenerator._num_seconds": {
            "name": "_num_seconds",
            "location": 83,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "dt": [
                    "int",
                    "str"
                ]
            }
        },
        "PasswordResetTokenGenerator._now": {
            "name": "_now",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "starlette-auth-master/starlette_auth/__init__.py": {},
    "starlette-auth-master/starlette_auth/utils/crypto.py": {
        "salted_hmac": {
            "name": "salted_hmac",
            "location": 6,
            "return": [],
            "arguments": {
                "key_salt": [
                    "str"
                ],
                "value": [
                    "str"
                ],
                "secret": [
                    "str"
                ]
            }
        },
        "constant_time_compare": {
            "name": "constant_time_compare",
            "location": 29,
            "return": [],
            "arguments": {
                "val1": [],
                "val2": []
            }
        }
    },
    "starlette-auth-master/starlette_auth/utils/http.py": {
        "base36_to_int": {
            "name": "base36_to_int",
            "location": 5,
            "return": [
                "int"
            ],
            "arguments": {
                "s": []
            }
        },
        "int_to_base36": {
            "name": "int_to_base36",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "i": [
                    "int"
                ]
            }
        },
        "urlsafe_base64_decode": {
            "name": "urlsafe_base64_decode",
            "location": 32,
            "return": [],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "urlsafe_base64_encode": {
            "name": "urlsafe_base64_encode",
            "location": 44,
            "return": [],
            "arguments": {
                "s": [
                    "bytes",
                    "str",
                    "typing.AnyStr"
                ]
            }
        }
    },
    "starlette-auth-master/starlette_auth/utils/__init__.py": {},
    "starlette-auth-master/tests/conftest.py": {
        "database": {
            "name": "database",
            "location": 34,
            "return": [
                "Database"
            ],
            "arguments": {}
        },
        "session": {
            "name": "session",
            "location": 47,
            "return": [
                "typing.Generator[Session]"
            ],
            "arguments": {}
        },
        "user": {
            "name": "user",
            "location": 55,
            "return": [
                "User"
            ],
            "arguments": {}
        },
        "client": {
            "name": "client",
            "location": 64,
            "return": [
                "typing.Generator[TestClient]"
            ],
            "arguments": {}
        },
        "client.home": {
            "name": "home",
            "location": 66,
            "return": [
                "JSONResponse"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "starlette-auth-master/tests/test_backend.py": {
        "homepage": {
            "name": "homepage",
            "location": 27,
            "return": [
                "JSONResponse"
            ],
            "arguments": {
                "request": [
                    "dict[, ]"
                ]
            }
        },
        "test_authenticated": {
            "name": "test_authenticated",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_not_active": {
            "name": "test_not_active",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_user": {
            "name": "test_no_user",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "AuthenticatedBackend.get_user": {
            "name": "get_user",
            "location": 13,
            "return": [
                "User"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "str",
                    "bool"
                ]
            }
        },
        "InactiveBackend.get_user": {
            "name": "get_user",
            "location": 18,
            "return": [
                "User"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "str",
                    "bool"
                ]
            }
        },
        "NoUserBackend.get_user": {
            "name": "get_user",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "starlette-auth-master/tests/test_config.py": {
        "test_defaults": {
            "name": "test_defaults",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "starlette-auth-master/tests/test_scopes.py": {
        "test_fields": {
            "name": "test_fields",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_model_data": {
            "name": "test_model_data",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_str": {
            "name": "test_str",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "starlette-auth-master/tests/test_tokens.py": {
        "test_make_token": {
            "name": "test_make_token",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "float"
                ]
            }
        },
        "test_10265": {
            "name": "test_10265",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "typing.Callable[List,bool, None]",
                    "float"
                ]
            }
        },
        "test_timeout": {
            "name": "test_timeout",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "test_check_token_with_nonexistent_token_and_user": {
            "name": "test_check_token_with_nonexistent_token_and_user",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "test_timeout.Mocked.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "now": []
            }
        },
        "test_timeout.Mocked._now": {
            "name": "_now",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "starlette-auth-master/tests/test_user.py": {
        "test_fields": {
            "name": "test_fields",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_relationships": {
            "name": "test_relationships",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_model_data": {
            "name": "test_model_data",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_name": {
            "name": "test_display_name",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_str": {
            "name": "test_str",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_password": {
            "name": "test_password",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "starlette-auth-master/tests/__init__.py": {},
    "starlette-auth-master/tests/endpoints/test_change_password.py": {
        "test_get": {
            "name": "test_get",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        },
        "test_get_requires_login": {
            "name": "test_get_requires_login",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_can_change_password": {
            "name": "test_can_change_password",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        },
        "test_invalid": {
            "name": "test_invalid",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "dict[, ]",
                    "str",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "client": [],
                "user": [
                    "list[str]",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "starlette-auth-master/tests/endpoints/test_login.py": {
        "test_get": {
            "name": "test_get",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_can_login": {
            "name": "test_can_login",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        },
        "test_user_last_login_set": {
            "name": "test_user_last_login_set",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        },
        "test_invalid_credentials": {
            "name": "test_invalid_credentials",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "dict[, ]",
                    "str",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "client": [],
                "user": [
                    "list[str]",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "starlette-auth-master/tests/endpoints/test_logout.py": {
        "test_logout": {
            "name": "test_logout",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        }
    },
    "starlette-auth-master/tests/endpoints/test_password_reset.py": {
        "test_get": {
            "name": "test_get",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_post_redirects": {
            "name": "test_post_redirects",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "monkeypatch": [
                    "int",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "test_email_not_sent_if_user_is_not_active": {
            "name": "test_email_not_sent_if_user_is_not_active",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [],
                "monkeypatch": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "test_txt_email_sent_if_user_exists": {
            "name": "test_txt_email_sent_if_user_exists",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [
                    "dict[, ]",
                    "float"
                ],
                "monkeypatch": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "test_html_email_sent_if_template_is_defined": {
            "name": "test_html_email_sent_if_template_is_defined",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [
                    "dict[, ]",
                    "float",
                    "dict[str, str]"
                ],
                "monkeypatch": [
                    "bool",
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "test_invalid_data": {
            "name": "test_invalid_data",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "dict[, ]",
                    "list[str]"
                ],
                "client": [],
                "user": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_post_redirects.fake_send": {
            "name": "fake_send",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "test_email_not_sent_if_user_is_not_active.fake_send": {
            "name": "fake_send",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "test_txt_email_sent_if_user_exists.fake_send": {
            "name": "fake_send",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "test_html_email_sent_if_template_is_defined.fake_send": {
            "name": "fake_send",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        }
    },
    "starlette-auth-master/tests/endpoints/test_password_reset_complete.py": {
        "test_get": {
            "name": "test_get",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "starlette-auth-master/tests/endpoints/test_password_reset_confirm.py": {
        "test_get_200": {
            "name": "test_get_200",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [
                    "int"
                ]
            }
        },
        "test_get_invalid_token": {
            "name": "test_get_invalid_token",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [
                    "int"
                ]
            }
        },
        "test_get_invalid_uid": {
            "name": "test_get_invalid_uid",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [
                    "str"
                ]
            }
        },
        "test_get_user_not_active": {
            "name": "test_get_user_not_active",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        },
        "test_get_user_url_is_invalid_by_logging_in": {
            "name": "test_get_user_url_is_invalid_by_logging_in",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        },
        "test_post": {
            "name": "test_post",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [
                    "int",
                    "str"
                ]
            }
        },
        "test_post_changed_password": {
            "name": "test_post_changed_password",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        },
        "test_post_url_is_one_time_use": {
            "name": "test_post_url_is_one_time_use",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": [
                    "int"
                ]
            }
        },
        "test_invalid": {
            "name": "test_invalid",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "str",
                    "dict[, ]"
                ],
                "client": [],
                "user": [
                    "int",
                    "str",
                    "list[dict[str, typing.Any]]"
                ]
            }
        }
    },
    "starlette-auth-master/tests/endpoints/test_password_reset_done.py": {
        "test_get": {
            "name": "test_get",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "starlette-auth-master/tests/endpoints/test_scopes.py": {
        "unauthed": {
            "name": "unauthed",
            "location": 8,
            "return": [
                "JSONResponse"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "authed": {
            "name": "authed",
            "location": 13,
            "return": [
                "JSONResponse"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "read": {
            "name": "read",
            "location": 18,
            "return": [
                "JSONResponse"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "write": {
            "name": "write",
            "location": 23,
            "return": [
                "JSONResponse"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        },
        "test_scoped_endpoints": {
            "name": "test_scoped_endpoints",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "user": []
            }
        }
    },
    "starlette-auth-master/tests/endpoints/__init__.py": {},
    "starlette-auth-master/tests/forms/test_change_password.py": {
        "test_valid": {
            "name": "test_valid",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid": {
            "name": "test_invalid",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool",
                    "dict[str, str]"
                ]
            }
        },
        "test_passwords_dont_match": {
            "name": "test_passwords_dont_match",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "starlette-auth-master/tests/forms/test_login.py": {
        "test_valid": {
            "name": "test_valid",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid": {
            "name": "test_invalid",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "starlette-auth-master/tests/forms/test_password_reset.py": {
        "test_valid": {
            "name": "test_valid",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid": {
            "name": "test_invalid",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        }
    },
    "starlette-auth-master/tests/forms/test_password_reset_confirm.py": {
        "test_valid": {
            "name": "test_valid",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid": {
            "name": "test_invalid",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "test_data": [
                    "int",
                    "typing.Any",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "test_passwords_dont_match": {
            "name": "test_passwords_dont_match",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "starlette-auth-master/tests/forms/__init__.py": {}
}
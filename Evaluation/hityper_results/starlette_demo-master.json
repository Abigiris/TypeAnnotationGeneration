{
    "starlette_demo-master/{{cookiecutter.app_name}}/gunicorn.py": {},
    "starlette_demo-master/{{cookiecutter.app_name}}/manage.py": {
        "app_life": {
            "name": "app_life",
            "location": 22,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cmd": {
            "name": "cmd",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "shell": {
            "name": "shell",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "port": [
                    "int",
                    "float"
                ]
            }
        },
        "create_tables": {
            "name": "create_tables",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/settings.py": {},
    "starlette_demo-master/{{cookiecutter.app_name}}/app/endpoints.py": {
        "Health.get": {
            "name": "get",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "req": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/exceptions.py": {},
    "starlette_demo-master/{{cookiecutter.app_name}}/app/exception_handlers.py": {
        "Handler.handle": {
            "name": "handle",
            "location": 13,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "exc": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "Handler.error_response": {
            "name": "error_response",
            "location": 17,
            "return": [
                "JSONResponse"
            ],
            "arguments": {
                "exc": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[str, typing.Union[int,str]]"
                ]
            }
        },
        "NotFoundHandler.handle": {
            "name": "handle",
            "location": 27,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "req": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "exc": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "ValidationErrorHandler.handle": {
            "name": "handle",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "req": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "exc": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "InvalidHandler.handle": {
            "name": "handle",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "req": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ],
                "exc": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/models.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.validate_all": {
            "name": "validate_all",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Base.get_validate_errors": {
            "name": "get_validate_errors",
            "location": 38,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cat.get_validate_errors": {
            "name": "get_validate_errors",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/routes.py": {},
    "starlette_demo-master/{{cookiecutter.app_name}}/app/utils.py": {
        "get_sign": {
            "name": "get_sign",
            "location": 12,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]",
                    "list[str]",
                    "str",
                    "list[]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "parse_integer": {
            "name": "parse_integer",
            "location": 29,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "num": [
                    "int",
                    "str",
                    "None",
                    "bytes"
                ]
            }
        },
        "parse_id": {
            "name": "parse_id",
            "location": 39,
            "return": [],
            "arguments": {
                "_id": [
                    "str"
                ]
            }
        },
        "parse_paginate": {
            "name": "parse_paginate",
            "location": 51,
            "return": [
                "tuple[typing.Union[dict[str, str],dict[, ],dict[str, int],dict[str, tuple[typing.Union[typing.Any,typing.Any,typing.Any]]],dict[str, tuple[typing.Union[int,int]]]]]"
            ],
            "arguments": {
                "req": [
                    "int",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "list[list[int]]"
                ]
            }
        },
        "JSONResponse.render": {
            "name": "render",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 29,
            "return": [
                "Starlette"
            ],
            "arguments": {}
        },
        "Starlette.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/extensions/base.py": {
        "Extension.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Extension.init_app": {
            "name": "init_app",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "Extension.startup": {
            "name": "startup",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Extension.shutdown": {
            "name": "shutdown",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/extensions/cache.py": {
        "CacheExtension.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CacheExtension.cached": {
            "name": "cached",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "None",
                    "str",
                    "float",
                    "int"
                ],
                "ttl": [
                    "int"
                ]
            }
        },
        "CacheExtension.cached.decorator": {
            "name": "decorator",
            "location": 24,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/extensions/database.py": {
        "PostgresExtension.numbsers": {
            "name": "numbsers",
            "location": 24,
            "return": [
                "typing.Generator[int]"
            ],
            "arguments": {}
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/extensions/redis.py": {
        "RedisExtension.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/extensions/__init__.py": {},
    "starlette_demo-master/{{cookiecutter.app_name}}/app/middleware/sentry.py": {
        "SentryMiddleware.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/app/middleware/__init__.py": {},
    "starlette_demo-master/{{cookiecutter.app_name}}/tests/conftest.py": {
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "event_loop": {
            "name": "event_loop",
            "location": 14,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "client": {
            "name": "client",
            "location": 28,
            "return": [
                "typing.Generator[TestClient]"
            ],
            "arguments": {
                "app": [
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/tests/test_api.py": {
        "test_schema": {
            "name": "test_schema",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "test_health": {
            "name": "test_health",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cat": {
            "name": "test_cat",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "db": [],
                "cache": []
            }
        }
    },
    "starlette_demo-master/{{cookiecutter.app_name}}/tests/__init__.py": {}
}
{
    "svg3d-master/example.py": {
        "get_octahedron_faces": {
            "name": "get_octahedron_faces",
            "location": 4,
            "return": [
                "float"
            ],
            "arguments": {}
        },
        "generate_svg": {
            "name": "generate_svg",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "int",
                    "str",
                    "typing.Mapping",
                    "None"
                ]
            }
        }
    },
    "svg3d-master/svg3d.py": {
        "Viewport.from_aspect": {
            "name": "from_aspect",
            "location": 20,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "aspect_ratio": []
            }
        },
        "Viewport.from_string": {
            "name": "from_string",
            "location": 24,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "typing.Mapping",
                    "None"
                ],
                "string_to_parse": [
                    "str"
                ]
            }
        },
        "Scene.add_mesh": {
            "name": "add_mesh",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mesh": [
                    "float",
                    "int"
                ]
            }
        },
        "Engine.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "views": [
                    "int",
                    "float"
                ],
                "precision": [
                    "int"
                ]
            }
        },
        "Engine.render": {
            "name": "render",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "int"
                ],
                "size": [
                    "tuple[int]"
                ],
                "viewBox": [
                    "typing.Text"
                ]
            }
        },
        "Engine.render_to_drawing": {
            "name": "render_to_drawing",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": []
            }
        },
        "Engine._create_group": {
            "name": "_create_group",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "drawing": [],
                "projection": [
                    "bool",
                    "float"
                ],
                "viewport": [
                    "float",
                    "str",
                    "int",
                    "None"
                ],
                "mesh": [
                    "int",
                    "str",
                    "float",
                    "typing.Sequence['cirq.Qid']"
                ]
            }
        },
        "Engine._sort_back_to_front": {
            "name": "_sort_back_to_front",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "faces": [
                    "str"
                ]
            }
        }
    },
    "svg3d-master/extras/octasphere.py": {
        "octasphere": {
            "name": "octasphere",
            "location": 13,
            "return": [],
            "arguments": {
                "ndivisions": [
                    "int"
                ],
                "radius": [
                    "int"
                ],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "add_connectors": {
            "name": "add_connectors",
            "location": 99,
            "return": [
                "list[]"
            ],
            "arguments": {
                "ndivisions": [
                    "int",
                    "float"
                ],
                "radius": [
                    "int",
                    "float"
                ],
                "width": [
                    "int",
                    "float",
                    "list[list[float]]"
                ],
                "height": [
                    "int",
                    "float",
                    "list[list[float]]"
                ],
                "depth": [
                    "int",
                    "float",
                    "list[list[float]]"
                ]
            }
        },
        "compute_geodesic": {
            "name": "compute_geodesic",
            "location": 201,
            "return": [
                "int"
            ],
            "arguments": {
                "dst": [],
                "index": [
                    "int",
                    "list[]"
                ],
                "point_a": [
                    "float",
                    "int",
                    "str"
                ],
                "point_b": [
                    "float",
                    "int",
                    "str"
                ],
                "num_segments": [
                    "int"
                ]
            }
        },
        "get_boundary_indices": {
            "name": "get_boundary_indices",
            "location": 220,
            "return": [],
            "arguments": {
                "ndivisions": [
                    "bool"
                ]
            }
        },
        "add_connectors.connect": {
            "name": "connect",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        }
    },
    "svg3d-master/extras/parent_folder.py": {},
    "svg3d-master/extras/platonic.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_octahedron_pair": {
            "name": "create_octahedron_pair",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "None"
                ]
            }
        },
        "subdivide": {
            "name": "subdivide",
            "location": 89,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "verts": [],
                "faces": []
            }
        },
        "hexahedron": {
            "name": "hexahedron",
            "location": 112,
            "return": [],
            "arguments": {}
        },
        "octahedron": {
            "name": "octahedron",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "icosahedron": {
            "name": "icosahedron",
            "location": 158,
            "return": [
                "tuple[typing.Union[list[tuple[float]],list[tuple[int]]]]"
            ],
            "arguments": {}
        },
        "create_octahedron_pair.backface_shader": {
            "name": "backface_shader",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "create_octahedron_pair.frontface_shader": {
            "name": "frontface_shader",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "create_octahedron_pair.backface_shader2": {
            "name": "backface_shader2",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "create_octahedron_pair.frontface_shader2": {
            "name": "frontface_shader2",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        }
    },
    "svg3d-master/extras/test.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "apply_turbo_colormap": {
            "name": "apply_turbo_colormap",
            "location": 24,
            "return": [
                "float"
            ],
            "arguments": {
                "x": [
                    "int"
                ]
            }
        },
        "create_surface_plot": {
            "name": "create_surface_plot",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_overlapping_triangles": {
            "name": "generate_overlapping_triangles",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_octahedra": {
            "name": "generate_octahedra",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "rgb": {
            "name": "rgb",
            "location": 197,
            "return": [],
            "arguments": {
                "r": [
                    "int",
                    "list[int]"
                ],
                "g": [
                    "int",
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "float"
                ],
                "b": [
                    "int",
                    "str"
                ]
            }
        },
        "cube": {
            "name": "cube",
            "location": 204,
            "return": [],
            "arguments": {}
        },
        "octahedron": {
            "name": "octahedron",
            "location": 217,
            "return": [],
            "arguments": {}
        },
        "icosahedron": {
            "name": "icosahedron",
            "location": 238,
            "return": [
                "tuple[typing.Union[list[tuple[float]],list[tuple[int]]]]"
            ],
            "arguments": {}
        },
        "subdivide": {
            "name": "subdivide",
            "location": 279,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "verts": [],
                "faces": []
            }
        },
        "parametric_surface": {
            "name": "parametric_surface",
            "location": 302,
            "return": [],
            "arguments": {
                "slices": [
                    "int"
                ],
                "stacks": [
                    "int"
                ],
                "func": [
                    "typing.Callable[..., None]",
                    "float",
                    "set[str]"
                ]
            }
        },
        "sphere": {
            "name": "sphere",
            "location": 323,
            "return": [
                "tuple[typing.Union[list[str],list[int],list[list[float]],int,float,typing.Type,typing.Pattern,dict[str, typing.Any],list[list[typing.Any]],dict[tuple[typing.Union[str,str]], str],list[list[bool]]]]"
            ],
            "arguments": {
                "u": [
                    "int"
                ],
                "v": [
                    "float",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "list[]"
                ]
            }
        },
        "klein": {
            "name": "klein",
            "location": 330,
            "return": [
                "tuple[typing.Union[typing.Type,int,float]]"
            ],
            "arguments": {
                "u": [
                    "float",
                    "int",
                    "typing.Iterable[T]"
                ],
                "v": [
                    "float"
                ]
            }
        },
        "mobius_tube": {
            "name": "mobius_tube",
            "location": 342,
            "return": [
                "tuple[float]"
            ],
            "arguments": {
                "u": [
                    "float"
                ],
                "v": [
                    "int",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "create_simple_shapes": {
            "name": "create_simple_shapes",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_complex_shapes": {
            "name": "create_complex_shapes",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_surface_plot.shader": {
            "name": "shader",
            "location": 67,
            "return": [],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "create_simple_shapes.shader": {
            "name": "shader",
            "location": 399,
            "return": [],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "create_complex_shapes.shader": {
            "name": "shader",
            "location": 560,
            "return": [],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "create_complex_shapes.backface_shader": {
            "name": "backface_shader",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "create_complex_shapes.frontface_shader": {
            "name": "frontface_shader",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        }
    },
    "svg3d-master/extras/test_octasphere.py": {
        "rgb": {
            "name": "rgb",
            "location": 23,
            "return": [],
            "arguments": {
                "r": [
                    "int",
                    "list[int]"
                ],
                "g": [
                    "int",
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "float"
                ],
                "b": [
                    "int",
                    "str"
                ]
            }
        },
        "rotate_faces": {
            "name": "rotate_faces",
            "location": 29,
            "return": [],
            "arguments": {
                "faces": [
                    "str"
                ]
            }
        },
        "translate_faces": {
            "name": "translate_faces",
            "location": 37,
            "return": [],
            "arguments": {
                "faces": [
                    "float",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "str"
                ],
                "offset": [
                    "float",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "str"
                ]
            }
        },
        "merge_faces": {
            "name": "merge_faces",
            "location": 40,
            "return": [],
            "arguments": {
                "faces0": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "faces1": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "make_octaspheres": {
            "name": "make_octaspheres",
            "location": 47,
            "return": [
                "list[]"
            ],
            "arguments": {
                "ndivisions": [
                    "int",
                    "float"
                ],
                "radius": [
                    "int",
                    "float"
                ],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "tile": {
            "name": "tile",
            "location": 120,
            "return": [],
            "arguments": {}
        },
        "rounded_cube": {
            "name": "rounded_cube",
            "location": 146,
            "return": [],
            "arguments": {}
        },
        "capsule": {
            "name": "capsule",
            "location": 172,
            "return": [],
            "arguments": {}
        },
        "make_octaspheres.frontface_shader": {
            "name": "frontface_shader",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "tile.frontface_shader": {
            "name": "frontface_shader",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "rounded_cube.frontface_shader": {
            "name": "frontface_shader",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        },
        "capsule.frontface_shader": {
            "name": "frontface_shader",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "face_index": [],
                "winding": []
            }
        }
    }
}
{
    "tedi-master/setup.py": {},
    "tedi-master/tedi/asset.py": {
        "Asset.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ],
                "source": [
                    "str",
                    "bool",
                    "dict[str, str]"
                ]
            }
        },
        "Asset.__repr__": {
            "name": "__repr__",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Asset.acquire": {
            "name": "acquire",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "target_dir": [
                    "bool",
                    "str"
                ]
            }
        }
    },
    "tedi-master/tedi/assetset.py": {
        "Assetset.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "assets": [
                    "int",
                    "float"
                ]
            }
        },
        "Assetset.from_config": {
            "name": "from_config",
            "location": 20,
            "return": [],
            "arguments": {
                "cls": [
                    "bool",
                    "typing.Type",
                    "dict[str, typing.Any]"
                ],
                "config": [
                    "list[]"
                ],
                "facts": [
                    "Factset"
                ]
            }
        },
        "Assetset.__repr__": {
            "name": "__repr__",
            "location": 47,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Assetset.acquire": {
            "name": "acquire",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tedi-master/tedi/cli.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "render": {
            "name": "render",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "fact": [
                    "tuple[str]",
                    "bool",
                    "str",
                    "float"
                ]
            }
        },
        "clean": {
            "name": "clean",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "clean_assets": [
                    "bool",
                    "tuple[str]",
                    "str",
                    "None",
                    "float"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "clean_assets": [
                    "bool",
                    "str",
                    "tuple[str]",
                    "typing.Mapping"
                ],
                "asset_set": [
                    "bool",
                    "str",
                    "tuple[str]",
                    "typing.Mapping"
                ],
                "fact": [
                    "tuple[str]",
                    "bool",
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "acquire": {
            "name": "acquire",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "asset_set": [
                    "str",
                    "tuple[str]",
                    "int",
                    "None",
                    "list[int]"
                ],
                "fact": [
                    "tuple[str]",
                    "str",
                    "list[str]",
                    "int",
                    "None",
                    "list[int]",
                    "float"
                ]
            }
        },
        "set_flag": {
            "name": "set_flag",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "flag": [
                    "str",
                    "list[str]",
                    "bool"
                ],
                "value": [
                    "str",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "get_flag": {
            "name": "get_flag",
            "location": 74,
            "return": [],
            "arguments": {
                "flag": [
                    "str",
                    "typing.Callable[, ]",
                    "dict[str, str]",
                    "typing.IO"
                ],
                "default": [
                    "None",
                    "str",
                    "typing.Callable[, ]",
                    "dict[str, str]",
                    "typing.IO"
                ]
            }
        },
        "set_fact_flags": {
            "name": "set_fact_flags",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "flag_args": [
                    "tuple[str]",
                    "list[str]",
                    "list[]"
                ]
            }
        }
    },
    "tedi-master/tedi/commands.py": {
        "render": {
            "name": "render",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "clean": {
            "name": "clean",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "build": {
            "name": "build",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "acquire": {
            "name": "acquire",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tedi-master/tedi/factset.py": {
        "Factset.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Factset.__repr__": {
            "name": "__repr__",
            "location": 46,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Factset.__getitem__": {
            "name": "__getitem__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "None",
                    "tuple[]",
                    "dict[str, str]",
                    "int",
                    "typing.Callable[KT, VT]",
                    "typing.Type"
                ]
            }
        },
        "Factset.__setitem__": {
            "name": "__setitem__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "dict[, ]",
                    "None",
                    "bytes"
                ],
                "value": [
                    "str",
                    "None",
                    "int",
                    "typing.Iterable[str]"
                ]
            }
        },
        "Factset.__delitem__": {
            "name": "__delitem__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "None",
                    "tuple[]",
                    "dict[str, str]",
                    "int",
                    "typing.Callable[KT, VT]",
                    "typing.Type"
                ]
            }
        },
        "Factset.__iter__": {
            "name": "__iter__",
            "location": 74,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Factset.__contains__": {
            "name": "__contains__",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int"
                ]
            }
        },
        "Factset.get": {
            "name": "get",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "int",
                    "None"
                ],
                "default": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "Factset.to_dict": {
            "name": "to_dict",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Factset.update": {
            "name": "update",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Factset.copy": {
            "name": "copy",
            "location": 92,
            "return": [
                "Factset"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tedi-master/tedi/fileset.py": {
        "Fileset.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "top_dir": []
            }
        },
        "Fileset.__repr__": {
            "name": "__repr__",
            "location": 24,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fileset.__iter__": {
            "name": "__iter__",
            "location": 27,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fileset.__len__": {
            "name": "__len__",
            "location": 32,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fileset.__contains__": {
            "name": "__contains__",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "tedi-master/tedi/image.py": {
        "Image.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_name": [
                    "str",
                    "None",
                    "typing.Sequence[str]"
                ],
                "facts": [
                    "Factset"
                ],
                "image_aliases": [
                    "list[]"
                ],
                "path": []
            }
        },
        "Image.from_config": {
            "name": "from_config",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "typing.Sequence[str]"
                ],
                "name": [
                    "str",
                    "None"
                ],
                "config": [],
                "facts": [
                    "Factset"
                ]
            }
        },
        "Image.__repr__": {
            "name": "__repr__",
            "location": 65,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.render": {
            "name": "render",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.link_assets": {
            "name": "link_assets",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.build": {
            "name": "build",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tedi-master/tedi/jinja_renderer.py": {
        "JinjaRenderer.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "facts": [
                    "int",
                    "float"
                ]
            }
        },
        "JinjaRenderer.render": {
            "name": "render",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "template_file": [
                    "str"
                ]
            }
        },
        "JinjaRenderer.render_string": {
            "name": "render_string",
            "location": 17,
            "return": [
                "typing.Pattern",
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "template_string": [
                    "str",
                    "bytes",
                    "bool"
                ]
            }
        }
    },
    "tedi-master/tedi/logging.py": {
        "getLogger": {
            "name": "getLogger",
            "location": 43,
            "return": [],
            "arguments": {
                "name": [
                    "None",
                    "str"
                ]
            }
        },
        "warn_once": {
            "name": "warn_once",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "logger": [],
                "message": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "tedi-master/tedi/paths.py": {
        "Paths.tedi_path": {
            "name": "tedi_path",
            "location": 6,
            "return": [
                "Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "Paths.assets_path": {
            "name": "assets_path",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Paths.build_path": {
            "name": "build_path",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Paths.template_path": {
            "name": "template_path",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tedi-master/tedi/process.py": {
        "fail": {
            "name": "fail",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "exit_code": [
                    "int"
                ]
            }
        }
    },
    "tedi-master/tedi/project.py": {
        "Project.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Project.__repr__": {
            "name": "__repr__",
            "location": 55,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.render": {
            "name": "render",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.build": {
            "name": "build",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.acquire_assets": {
            "name": "acquire_assets",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tedi-master/tedi/__init__.py": {},
    "tedi-master/tedi/tests/paths.py": {},
    "tedi-master/tedi/tests/test_asset.py": {
        "test_fail_exits": {
            "name": "test_fail_exits",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tedi-master/tedi/tests/test_assetset.py": {
        "assetset": {
            "name": "assetset",
            "location": 13,
            "return": [
                "Assetset"
            ],
            "arguments": {}
        },
        "test_acquire_downloads_files": {
            "name": "test_acquire_downloads_files",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "assetset": []
            }
        }
    },
    "tedi-master/tedi/tests/test_builder.py": {
        "image": {
            "name": "image",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "image_exists": {
            "name": "image_exists",
            "location": 36,
            "return": [],
            "arguments": {
                "name": [],
                "tag": []
            }
        },
        "test_render_creates_the_target_dir": {
            "name": "test_render_creates_the_target_dir",
            "location": 46,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "test_render_copies_normal_files": {
            "name": "test_render_copies_normal_files",
            "location": 52,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "test_render_links_files_from_the_assets_dir": {
            "name": "test_render_links_files_from_the_assets_dir",
            "location": 57,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "test_render_renders_jinja2_templates": {
            "name": "test_render_renders_jinja2_templates",
            "location": 68,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "test_build_creates_a_docker_image": {
            "name": "test_build_creates_a_docker_image",
            "location": 76,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "test_names_image_with_all_aliases": {
            "name": "test_names_image_with_all_aliases",
            "location": 82,
            "return": [],
            "arguments": {
                "image": []
            }
        },
        "test_from_config_updates_facts_from_the_config": {
            "name": "test_from_config_updates_facts_from_the_config",
            "location": 89,
            "return": [],
            "arguments": {}
        },
        "test_images_have_independant_factsets": {
            "name": "test_images_have_independant_factsets",
            "location": 104,
            "return": [],
            "arguments": {}
        }
    },
    "tedi-master/tedi/tests/test_cli.py": {
        "project_runner": {
            "name": "project_runner",
            "location": 14,
            "return": [
                "typing.Generator[CliRunner]"
            ],
            "arguments": {
                "fixture": [
                    "typing.Text"
                ]
            }
        },
        "in_file": {
            "name": "in_file",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "string": [
                    "str",
                    "None"
                ],
                "test_file": [
                    "typing.Text"
                ]
            }
        },
        "assert_command_cleans_path": {
            "name": "assert_command_cleans_path",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "runner": [
                    "str"
                ],
                "path": [],
                "command": [
                    "str"
                ]
            }
        },
        "command_acquires_asset": {
            "name": "command_acquires_asset",
            "location": 43,
            "return": [],
            "arguments": {
                "runner": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "command": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "filename": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_render_command_has_valid_help_text": {
            "name": "test_render_command_has_valid_help_text",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_command_removes_rendered_files": {
            "name": "test_clean_command_removes_rendered_files",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_render_command_cleans_build_path": {
            "name": "test_render_command_cleans_build_path",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_render_command_accepts_facts_as_cli_flags": {
            "name": "test_render_command_accepts_facts_as_cli_flags",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_build_command_accepts_facts_as_cli_flags": {
            "name": "test_build_command_accepts_facts_as_cli_flags",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean_command_removes_assets_with_clean_assets_flag": {
            "name": "test_clean_command_removes_assets_with_clean_assets_flag",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_build_command_removes_assets_with_clean_assets_flag": {
            "name": "test_build_command_removes_assets_with_clean_assets_flag",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_acquire_command_acquires_default_assets": {
            "name": "test_acquire_command_acquires_default_assets",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_acquire_command_does_not_acquire_non_default_assets": {
            "name": "test_acquire_command_does_not_acquire_non_default_assets",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_acquire_command_acquires_assets_specified_by_asset_set_flag": {
            "name": "test_acquire_command_acquires_assets_specified_by_asset_set_flag",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_set_flag_assigns_facts_in_config": {
            "name": "test_set_flag_assigns_facts_in_config",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_flag_return_cli_flags": {
            "name": "test_get_flag_return_cli_flags",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_flag_can_return_a_default": {
            "name": "test_get_flag_can_return_a_default",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_set_fact_flags_assigns_facts_in_config": {
            "name": "test_set_fact_flags_assigns_facts_in_config",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tedi-master/tedi/tests/test_factset.py": {
        "facts": {
            "name": "facts",
            "location": 8,
            "return": [
                "Factset"
            ],
            "arguments": {}
        },
        "test_can_test_membership": {
            "name": "test_can_test_membership",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_can_set_facts_like_a_dictionary": {
            "name": "test_can_set_facts_like_a_dictionary",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_can_set_facts_via_contructor_keywords": {
            "name": "test_can_set_facts_via_contructor_keywords",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_can_delete_facts": {
            "name": "test_can_delete_facts",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_setting_a_fact_to_none_deletes_it": {
            "name": "test_setting_a_fact_to_none_deletes_it",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_setting_a_new_key_to_none_does_nothing": {
            "name": "test_setting_a_new_key_to_none_does_nothing",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_setting_non_string_facts_is_an_error": {
            "name": "test_setting_non_string_facts_is_an_error",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_using_non_string_keys_is_an_error": {
            "name": "test_using_non_string_keys_is_an_error",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_to_dict_returns_a_dictionary": {
            "name": "test_to_dict_returns_a_dictionary",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": [
                    "dict[str, typing.Any]",
                    "bool"
                ]
            }
        },
        "test_update_updates_facts_from_a_dict": {
            "name": "test_update_updates_facts_from_a_dict",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_update_updates_facts_from_keywords": {
            "name": "test_update_updates_facts_from_keywords",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_get_returns_none_on_missing_key": {
            "name": "test_get_returns_none_on_missing_key",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_get_returns_default_on_missing_key_when_asked": {
            "name": "test_get_returns_default_on_missing_key_when_asked",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": [
                    "str"
                ]
            }
        },
        "test_copy_returns_an_independant_factset": {
            "name": "test_copy_returns_an_independant_factset",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "facts": []
            }
        },
        "test_it_can_glean_facts_from_special_environment_variables": {
            "name": "test_it_can_glean_facts_from_special_environment_variables",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_maps_standard_environment_variable_to_facts": {
            "name": "test_it_maps_standard_environment_variable_to_facts",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tedi-master/tedi/tests/test_fileset.py": {
        "fileset": {
            "name": "fileset",
            "location": 7,
            "return": [
                "Fileset"
            ],
            "arguments": {}
        },
        "test_top_dir_is_a_path": {
            "name": "test_top_dir_is_a_path",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "fileset": [
                    "str",
                    "None"
                ]
            }
        },
        "test_repr_is_valid_python": {
            "name": "test_repr_is_valid_python",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "fileset": []
            }
        },
        "test_fileset_is_a_set_of_paths": {
            "name": "test_fileset_is_a_set_of_paths",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "fileset": []
            }
        },
        "test_fileset_files_are_relative_to_top_dir": {
            "name": "test_fileset_files_are_relative_to_top_dir",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "fileset": [
                    "str"
                ]
            }
        },
        "test_fileset_contains_subdirectories": {
            "name": "test_fileset_contains_subdirectories",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "fileset": [
                    "str"
                ]
            }
        }
    },
    "tedi-master/tedi/tests/test_jinja_renderer.py": {
        "renderer": {
            "name": "renderer",
            "location": 8,
            "return": [
                "JinjaRenderer"
            ],
            "arguments": {}
        },
        "template": {
            "name": "template",
            "location": 14,
            "return": [
                "Path"
            ],
            "arguments": {}
        },
        "test_facts_is_a_factset": {
            "name": "test_facts_is_a_factset",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "renderer": []
            }
        },
        "test_render_expands_facts_in_the_template": {
            "name": "test_render_expands_facts_in_the_template",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "renderer": [],
                "template": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "test_render_string_expands_facts_in_the_string": {
            "name": "test_render_string_expands_facts_in_the_string",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "renderer": [],
                "template": [
                    "str",
                    "bool",
                    "dict[str, object]",
                    "set[int]"
                ]
            }
        }
    },
    "tedi-master/tedi/tests/test_project.py": {
        "get_project": {
            "name": "get_project",
            "location": 9,
            "return": [
                "Project"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "project": {
            "name": "project",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_path_is_a_path": {
            "name": "test_path_is_a_path",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "project": [
                    "dict[str, P]"
                ]
            }
        },
        "test_render_calls_render_on_each_image": {
            "name": "test_render_calls_render_on_each_image",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "project": []
            }
        },
        "test_build_calls_build_on_each_image": {
            "name": "test_build_calls_build_on_each_image",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "project": []
            }
        },
        "test_projects_have_a_dictionary_of_asset_sets": {
            "name": "test_projects_have_a_dictionary_of_asset_sets",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "project": []
            }
        },
        "test_projects_expand_facts_in_assets": {
            "name": "test_projects_expand_facts_in_assets",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "project": [
                    "bytes"
                ]
            }
        },
        "test_projects_have_a_factset": {
            "name": "test_projects_have_a_factset",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "project": [
                    "bytes"
                ]
            }
        },
        "test_projects_can_declare_project_level_facts": {
            "name": "test_projects_can_declare_project_level_facts",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "project": []
            }
        }
    },
    "tedi-master/tedi/tests/__init__.py": {}
}
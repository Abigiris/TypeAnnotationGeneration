{
    "terrawrap-master/setup.py": {
        "get_long_description": {
            "name": "get_long_description",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "get_version": {
            "name": "get_version",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "get_requirements": {
            "name": "get_requirements",
            "location": 35,
            "return": [
                "list[]"
            ],
            "arguments": {}
        }
    },
    "terrawrap-master/terrawrap/exceptions.py": {},
    "terrawrap-master/terrawrap/version.py": {},
    "terrawrap-master/terrawrap/__init__.py": {},
    "terrawrap-master/terrawrap/models/graph.py": {
        "ApplyGraph.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "bytes",
                    "int",
                    "float"
                ],
                "graph": [
                    "str",
                    "bytes",
                    "int",
                    "float"
                ],
                "post_graph": [
                    "int",
                    "str"
                ],
                "prefix": [
                    "str",
                    "bytes",
                    "int",
                    "float"
                ]
            }
        },
        "ApplyGraph.execute_graph": {
            "name": "execute_graph",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_parallel": [
                    "int"
                ],
                "debug": [
                    "bool"
                ],
                "print_only_changes": [
                    "bool"
                ]
            }
        },
        "ApplyGraph.recursive_executor": {
            "name": "recursive_executor",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "executor": [
                    "int",
                    "float",
                    "list[int]",
                    "None"
                ],
                "successors": [
                    "list[str]",
                    "str"
                ],
                "num_parallel": [
                    "int",
                    "float",
                    "list[float]"
                ],
                "debug": [
                    "int",
                    "float",
                    "list[int]",
                    "None"
                ],
                "print_only_changes": [
                    "int"
                ]
            }
        },
        "ApplyGraph.execute_post_graph": {
            "name": "execute_post_graph",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_parallel": [
                    "int"
                ],
                "debug": [
                    "bool"
                ],
                "print_only_changes": [
                    "bool"
                ]
            }
        },
        "ApplyGraph._can_be_applied": {
            "name": "_can_be_applied",
            "location": 161,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "entry": [
                    "str",
                    "int"
                ]
            }
        },
        "ApplyGraph._get_or_create_entry": {
            "name": "_get_or_create_entry",
            "location": 185,
            "return": [
                "NoOpGraphEntry",
                "GraphEntry",
                "int"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/models/graph_entry.py": {
        "Entry.execute": {
            "name": "execute",
            "location": 22,
            "return": [
                "tuple[typing.Union[int,list[]]]"
            ],
            "arguments": {
                "self": [],
                "operation": [
                    "bool",
                    "Exception",
                    "str"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "NoOpGraphEntry.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "bool",
                    "list[str]",
                    "tuple[typing.Union[str,str]]"
                ],
                "variables": [
                    "str",
                    "bool"
                ]
            }
        },
        "NoOpGraphEntry.execute": {
            "name": "execute",
            "location": 34,
            "return": [
                "tuple[typing.Union[int,list[]]]"
            ],
            "arguments": {
                "self": [],
                "operation": [
                    "str",
                    "int",
                    "list[object]",
                    "bytes"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "GraphEntry.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "bool",
                    "None"
                ],
                "variables": [
                    "str",
                    "bool"
                ]
            }
        },
        "GraphEntry.execute": {
            "name": "execute",
            "location": 56,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "self": [],
                "operation": [
                    "str"
                ],
                "debug": [
                    "bool"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/models/pipeline.py": {
        "Pipeline.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "None",
                    "dict[, ]"
                ],
                "pipeline_path": [
                    "str"
                ]
            }
        },
        "Pipeline.execute": {
            "name": "execute",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_parallel": [
                    "int"
                ],
                "debug": [
                    "bool"
                ],
                "print_only_changes": [
                    "bool"
                ]
            }
        },
        "Pipeline._execute_entries": {
            "name": "_execute_entries",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entries": [
                    "str"
                ],
                "executor": [
                    "int",
                    "None",
                    "str",
                    "bytes",
                    "typing.Callable[, ]"
                ],
                "command": [
                    "None",
                    "str",
                    "list[str]"
                ],
                "debug": [
                    "bool"
                ],
                "print_only_changes": [
                    "bool"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/models/pipeline_entry.py": {
        "PipelineEntry.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "variables": [
                    "str",
                    "bool"
                ]
            }
        },
        "PipelineEntry.execute": {
            "name": "execute",
            "location": 29,
            "return": [
                "tuple[bool]",
                "tuple[int]"
            ],
            "arguments": {
                "self": [],
                "operation": [
                    "str",
                    "dict[str, str]",
                    "bool"
                ],
                "debug": [
                    "bool"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/models/wrapper_config.py": {
        "env_var_deserializer": {
            "name": "env_var_deserializer",
            "location": 66,
            "return": [
                "SSMEnvVarConfig",
                "TextEnvVarConfig",
                "UnsetEnvVarConfig"
            ],
            "arguments": {
                "obj_dict": [
                    "str"
                ],
                "cls": [
                    "bool",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "AbstractEnvVarConfig.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "SSMEnvVarConfig.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "int"
                ]
            }
        },
        "TextEnvVarConfig.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "float",
                    "str",
                    "int"
                ]
            }
        },
        "UnsetEnvVarConfig.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "S3BackendConfig.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bucket": [
                    "None",
                    "str"
                ],
                "region": [
                    "None",
                    "str"
                ],
                "dynamodb_table": [
                    "None",
                    "bool",
                    "str"
                ],
                "role_arn": [
                    "None",
                    "str"
                ]
            }
        },
        "GCSBackendConfig.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bucket": [
                    "None",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "BackendsConfig.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s3": [
                    "None",
                    "int",
                    "bytes",
                    "dict[, ]"
                ],
                "gcs": [
                    "None",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "WrapperConfig.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "configure_backend": [
                    "bool"
                ],
                "pipeline_check": [
                    "bool"
                ],
                "backend_check": [
                    "bool"
                ],
                "plan_check": [
                    "bool"
                ],
                "envvars": [
                    "None",
                    "int",
                    "float"
                ],
                "backends": [
                    "None",
                    "int",
                    "float"
                ],
                "depends_on": [
                    "None",
                    "int",
                    "float"
                ],
                "config": [
                    "bool"
                ],
                "audit_api_url": [
                    "None",
                    "str",
                    "typing.Generator[typing.Union[str,None,None]]",
                    "bool"
                ],
                "apply_automatically": [
                    "bool"
                ],
                "plugins": [
                    "None",
                    "int",
                    "float"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/models/__init__.py": {},
    "terrawrap-master/terrawrap/utils/cli.py": {
        "execute_command": {
            "name": "execute_command",
            "location": 53,
            "return": [
                "tuple[typing.Union[int,list[]]]"
            ],
            "arguments": {
                "args": []
            }
        },
        "_execute_command": {
            "name": "_execute_command",
            "location": 147,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "args": [],
                "print_output": [
                    "str",
                    "float",
                    "list[float]"
                ],
                "capture_stderr": [
                    "str",
                    "typing.Type"
                ],
                "print_command": [
                    "bool"
                ]
            }
        },
        "_get_retriable_errors": {
            "name": "_get_retriable_errors",
            "location": 201,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "out": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "_post_audit_info": {
            "name": "_post_audit_info",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "audit_api_url": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "start_time": [
                    "str"
                ],
                "exit_code": [
                    "None",
                    "str",
                    "int"
                ],
                "stdout": [
                    "None",
                    "str"
                ],
                "update": [
                    "bool"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/collection_utils.py": {
        "update": {
            "name": "update",
            "location": 5,
            "return": [],
            "arguments": {
                "dict1": [],
                "dict2": [
                    "dict[, ]",
                    "dict[str, str]",
                    "dict[str, bytes]"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/config.py": {
        "find_variable_files": {
            "name": "find_variable_files",
            "location": 30,
            "return": [
                "list[]"
            ],
            "arguments": {
                "path": []
            }
        },
        "find_wrapper_config_files": {
            "name": "find_wrapper_config_files",
            "location": 52,
            "return": [
                "list[]"
            ],
            "arguments": {
                "path": []
            }
        },
        "parse_wrapper_configs": {
            "name": "parse_wrapper_configs",
            "location": 74,
            "return": [],
            "arguments": {
                "wrapper_config_files": []
            }
        },
        "is_config_directory": {
            "name": "is_config_directory",
            "location": 97,
            "return": [
                "bool"
            ],
            "arguments": {
                "directory": []
            }
        },
        "create_wrapper_config_obj": {
            "name": "create_wrapper_config_obj",
            "location": 110,
            "return": [],
            "arguments": {
                "config_dir": [],
                "wrapper_file": [
                    "None"
                ]
            }
        },
        "walk_and_graph_directory": {
            "name": "walk_and_graph_directory",
            "location": 138,
            "return": [
                "tuple[list[]]"
            ],
            "arguments": {
                "starting_dir": [],
                "config_dict": []
            }
        },
        "walk_without_graph_directory": {
            "name": "walk_without_graph_directory",
            "location": 172,
            "return": [
                "list[]"
            ],
            "arguments": {
                "starting_dir": []
            }
        },
        "graph_wrapper_dependencies": {
            "name": "graph_wrapper_dependencies",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "config_dir": [],
                "config_dict": [],
                "graph": [],
                "visited": []
            }
        },
        "resolve_envvars": {
            "name": "resolve_envvars",
            "location": 265,
            "return": [
                "dict[, typing.Union[str,None]]"
            ],
            "arguments": {
                "envvar_configs": []
            }
        },
        "calc_backend_config": {
            "name": "calc_backend_config",
            "location": 284,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "path": [],
                "variables": [],
                "wrapper_config": [],
                "existing_backend_config": []
            }
        },
        "parse_variable_files": {
            "name": "parse_variable_files",
            "location": 334,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "variable_files": []
            }
        },
        "parse_backend_config_for_dir": {
            "name": "parse_backend_config_for_dir",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {
                "dir_path": []
            }
        },
        "_parse_backend_config_for_file": {
            "name": "_parse_backend_config_for_file",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": []
            }
        }
    },
    "terrawrap-master/terrawrap/utils/dynamodb.py": {
        "DynamoDB.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "region": [
                    "str",
                    "list[str]"
                ],
                "client": [
                    "None",
                    "str",
                    "list[str]"
                ]
            }
        },
        "DynamoDB.upsert_item": {
            "name": "upsert_item",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "table_name": [
                    "str",
                    "None",
                    "int",
                    "dict[str, str]"
                ],
                "primary_key_name": [
                    "str",
                    "int",
                    "None",
                    "list[str]"
                ],
                "primary_key_value": [
                    "str",
                    "int",
                    "None",
                    "list[str]"
                ],
                "attribute_name": [
                    "str",
                    "bool"
                ],
                "attribute_value": [
                    "bool",
                    "str",
                    "None",
                    "list[int]",
                    "dict[, ]"
                ]
            }
        },
        "DynamoDB.delete_item": {
            "name": "delete_item",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "table_name": [
                    "str"
                ],
                "primary_key_name": [
                    "str",
                    "int"
                ],
                "primary_key_value": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/git_utils.py": {
        "get_git_changed_files": {
            "name": "get_git_changed_files",
            "location": 8,
            "return": [
                "set[]"
            ],
            "arguments": {
                "path": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "get_git_root": {
            "name": "get_git_root",
            "location": 25,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "path": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/graph.py": {
        "has_cycle": {
            "name": "has_cycle",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "graph": [
                    "str",
                    "int"
                ]
            }
        },
        "find_source_nodes": {
            "name": "find_source_nodes",
            "location": 32,
            "return": [
                "list[]"
            ],
            "arguments": {
                "graph": []
            }
        },
        "successors": {
            "name": "successors",
            "location": 48,
            "return": [
                "tuple[typing.Union[dict[, ],bool,dict[str, typing.Any],list[]]]"
            ],
            "arguments": {
                "depth": [
                    "dict[, ]",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "node": [
                    "dict[, ]",
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "graph": []
            }
        },
        "generate_dependencies": {
            "name": "generate_dependencies",
            "location": 60,
            "return": [
                "list[list[typing.Union[str,list[]]]]"
            ],
            "arguments": {
                "nodes": [
                    "list[int]"
                ],
                "graph": [
                    "list[int]",
                    "list[]",
                    "int"
                ]
            }
        },
        "generate_helper": {
            "name": "generate_helper",
            "location": 80,
            "return": [
                "list[typing.Union[str,list[typing.Any]]]",
                "list[]",
                "list[str]",
                "list[list[typing.Any]]"
            ],
            "arguments": {
                "nodes": [
                    "list[str]",
                    "str",
                    "list[pathlib.Path]"
                ],
                "graph": [
                    "int",
                    "typing.Iterable[typing.Union[typing.Any,int]]",
                    "str",
                    "None"
                ],
                "depth": [
                    "int"
                ],
                "path": [
                    "list[]",
                    "list[str]",
                    "list[list[typing.Any]]"
                ]
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "dependencies": [
                    "str"
                ]
            }
        },
        "find_symlink_directories": {
            "name": "find_symlink_directories",
            "location": 113,
            "return": [
                "list[Path]"
            ],
            "arguments": {
                "graph": [
                    "list[str]",
                    "list[object]",
                    "list[]",
                    "str"
                ]
            }
        },
        "connect_symlinks": {
            "name": "connect_symlinks",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [],
                "symlink_dict": []
            }
        }
    },
    "terrawrap-master/terrawrap/utils/module.py": {
        "get_module_usage_graph": {
            "name": "get_module_usage_graph",
            "location": 10,
            "return": [
                "DiGraph"
            ],
            "arguments": {
                "root_directory": [
                    "str",
                    "list[]"
                ]
            }
        },
        "_get_modules_for_file": {
            "name": "_get_modules_for_file",
            "location": 46,
            "return": [
                "tuple[typing.Union[str,set[]]]"
            ],
            "arguments": {
                "directory": [
                    "str"
                ],
                "file_name": [
                    "str"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/path.py": {
        "get_absolute_path": {
            "name": "get_absolute_path",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "root_dir": [
                    "None",
                    "str"
                ]
            }
        },
        "get_symlinks": {
            "name": "get_symlinks",
            "location": 29,
            "return": [],
            "arguments": {
                "directory": [
                    "str",
                    "bool"
                ]
            }
        },
        "get_file_graph": {
            "name": "get_file_graph",
            "location": 48,
            "return": [
                "DiGraph"
            ],
            "arguments": {
                "directory": [
                    "str",
                    "int",
                    "list[]",
                    "list[str]"
                ]
            }
        },
        "calc_repo_path": {
            "name": "calc_repo_path",
            "location": 92,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/plugin_download.py": {
        "PluginDownload.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s3_client": []
            }
        },
        "PluginDownload.download_plugins": {
            "name": "download_plugins",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "plugin_paths": [
                    "dict[str, str]",
                    "dict[, ]",
                    "dict[str, dict[str, typing.Any]]"
                ]
            }
        },
        "PluginDownload._download_file": {
            "name": "_download_file",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "list[str]"
                ],
                "file_path": [
                    "str"
                ]
            }
        },
        "PluginDownload._get_file_content": {
            "name": "_get_file_content",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "etag": [
                    "str"
                ]
            }
        },
        "PluginDownload._get_http_content": {
            "name": "_get_http_content",
            "location": 108,
            "return": [
                "None",
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "dict[, ]",
                    "None"
                ],
                "etag": [
                    "str",
                    "None",
                    "typing.Iterable[str]",
                    "bytes"
                ]
            }
        },
        "PluginDownload._get_s3_content": {
            "name": "_get_s3_content",
            "location": 127,
            "return": [
                "tuple[]",
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "etag": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/tf_variables.py": {
        "get_auto_vars": {
            "name": "get_auto_vars",
            "location": 14,
            "return": [],
            "arguments": {
                "root_directory": [
                    "str",
                    "typing.IO",
                    "bool"
                ]
            }
        },
        "_make_hashable": {
            "name": "_make_hashable",
            "location": 36,
            "return": [
                "tuple[]",
                "str",
                "list[str]",
                "list[T]",
                "list[]",
                "dict[, ]",
                "Token"
            ],
            "arguments": {
                "input_value": [
                    "list[]",
                    "list[str]",
                    "list[T]",
                    "dict[, ]"
                ]
            }
        },
        "get_nondefault_variables_for_file": {
            "name": "get_nondefault_variables_for_file",
            "location": 46,
            "return": [
                "set[]"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "get_source_for_variable": {
            "name": "get_source_for_variable",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "usage_directory": [
                    "str",
                    "typing.Type"
                ],
                "var_name": [
                    "str",
                    "typing.Type"
                ],
                "vars_map": []
            }
        },
        "get_auto_var_usage_graph": {
            "name": "get_auto_var_usage_graph",
            "location": 90,
            "return": [
                "DiGraph"
            ],
            "arguments": {
                "root_directory": [
                    "str",
                    "bytes"
                ]
            }
        },
        "_collect_variable_usages": {
            "name": "_collect_variable_usages",
            "location": 129,
            "return": [
                "tuple[typing.Union[str,tuple[typing.Union[int,int]],set[]]]"
            ],
            "arguments": {
                "current_dir": [
                    "str",
                    "tuple[typing.Union[int,int]]"
                ],
                "file": [
                    "str",
                    "None"
                ],
                "auto_vars": [
                    "tuple[]",
                    "dict[str, typing.Any]",
                    "str",
                    "None",
                    "dict[str, str]"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/version.py": {
        "version_check": {
            "name": "version_check",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "current_version": [
                    "str"
                ]
            }
        },
        "get_latest_version": {
            "name": "get_latest_version",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "current_version": [
                    "str",
                    "bool",
                    "typing.Iterable[str]"
                ]
            }
        }
    },
    "terrawrap-master/terrawrap/utils/__init__.py": {},
    "terrawrap-master/test/__init__.py": {},
    "terrawrap-master/test/helpers/__init__.py": {},
    "terrawrap-master/test/unit/test_apply_graph.py": {
        "TestApplyGraph.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestApplyGraph.test_execute": {
            "name": "test_execute",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "graph_entry_class": [
                    "None",
                    "typing.Callable[, ]"
                ]
            }
        },
        "TestApplyGraph.test_execute._get_graph_entry": {
            "name": "_get_graph_entry",
            "location": 25,
            "return": [
                "MagicMock"
            ],
            "arguments": {
                "path": [],
                "variables": []
            }
        }
    },
    "terrawrap-master/test/unit/test_cli.py": {
        "TestCli.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.tearDown": {
            "name": "tearDown",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_execute_command": {
            "name": "test_execute_command",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCli.test_execute_command_retry": {
            "name": "test_execute_command_retry",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open": [],
                "mock_network_error": []
            }
        },
        "TestCli.test_execute_command_max_retry": {
            "name": "test_execute_command_max_retry",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_open": [],
                "mock_network_error": []
            }
        },
        "TestCli.test_post_audit_info_statuses": {
            "name": "test_post_audit_info_statuses",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_post": [
                    "str"
                ],
                "mock_getuser_func": []
            }
        }
    },
    "terrawrap-master/test/unit/test_config.py": {
        "TestConfig.setUp": {
            "name": "setUp",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_graph_wrapper_dependencies": {
            "name": "test_graph_wrapper_dependencies",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_walk_and_graph_directory": {
            "name": "test_walk_and_graph_directory",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_walk_without_graph_directory": {
            "name": "test_walk_without_graph_directory",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.wont_apply_automatically_in_parrallel": {
            "name": "wont_apply_automatically_in_parrallel",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_calc_backend_config": {
            "name": "test_calc_backend_config",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_calc_backend_config_wrapper_config": {
            "name": "test_calc_backend_config_wrapper_config",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_calc_backend_config_with_role_arn": {
            "name": "test_calc_backend_config_with_role_arn",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_find_wrapper_configs": {
            "name": "test_find_wrapper_configs",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_parse_wrapper_config": {
            "name": "test_parse_wrapper_config",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_resolve_envvars_from_wrapper_config": {
            "name": "test_resolve_envvars_from_wrapper_config",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_ssm_cache": []
            }
        }
    },
    "terrawrap-master/test/unit/test_git.py": {
        "TestGit.test_get_git_changed_files": {
            "name": "test_get_git_changed_files",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": [
                    "str"
                ]
            }
        }
    },
    "terrawrap-master/test/unit/test_graph.py": {
        "TestConfig.setUp": {
            "name": "setUp",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_find_source_nodes": {
            "name": "test_find_source_nodes",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.has_no_cycle": {
            "name": "has_no_cycle",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_has_source_cycle": {
            "name": "test_has_source_cycle",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_has_non_source_cycle": {
            "name": "test_has_non_source_cycle",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_successors": {
            "name": "test_successors",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_generate_dependencies": {
            "name": "test_generate_dependencies",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_visualizer": {
            "name": "test_visualizer",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_symlinks": {
            "name": "test_symlinks",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_connect_symlinks": {
            "name": "test_connect_symlinks",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "terrawrap-master/test/unit/test_graph_entry.py": {
        "TestGraphEntry.test_execute": {
            "name": "test_execute",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": [
                    "bool"
                ]
            }
        },
        "TestGraphEntry.test_execute_fail": {
            "name": "test_execute_fail",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": [
                    "bool"
                ]
            }
        },
        "TestGraphEntry.test_execute_apply_changes": {
            "name": "test_execute_apply_changes",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": [
                    "bool"
                ]
            }
        },
        "TestGraphEntry.test_execute_apply_no_changes": {
            "name": "test_execute_apply_no_changes",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": []
            }
        }
    },
    "terrawrap-master/test/unit/test_module.py": {
        "TestModule.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModule.tearDown": {
            "name": "tearDown",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestModule.test_get_module_usage_graph": {
            "name": "test_get_module_usage_graph",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "terrawrap-master/test/unit/test_path.py": {
        "TestPath.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPath.tearDown": {
            "name": "tearDown",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPath.test_get_file_graph": {
            "name": "test_get_file_graph",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "terrawrap-master/test/unit/test_pipeline.py": {
        "TestPipeline.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPipeline.tearDown": {
            "name": "tearDown",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPipeline.test_execute": {
            "name": "test_execute",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pipeline_entry_class": [
                    "str",
                    "list[tuple[typing.Union[str,typing.Callable[, ]]]]",
                    "bool"
                ]
            }
        }
    },
    "terrawrap-master/test/unit/test_pipeline_entry.py": {
        "TestPipelineEntry.test_execute": {
            "name": "test_execute",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": [
                    "bool"
                ]
            }
        },
        "TestPipelineEntry.test_execute_fail": {
            "name": "test_execute_fail",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": [
                    "bool"
                ]
            }
        },
        "TestPipelineEntry.test_execute_apply_changes": {
            "name": "test_execute_apply_changes",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": [
                    "bool"
                ]
            }
        },
        "TestPipelineEntry.test_execute_apply_no_changes": {
            "name": "test_execute_apply_no_changes",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exec_command": []
            }
        }
    },
    "terrawrap-master/test/unit/test_plugin_download.py": {
        "TestPluginDownload.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPluginDownload.test_file_download": {
            "name": "test_file_download",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_requests": [],
                "open_mock": []
            }
        },
        "TestPluginDownload.test_file_download_with_etag": {
            "name": "test_file_download_with_etag",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_requests": [],
                "open_mock": []
            }
        },
        "TestPluginDownload.test_file_download_cached": {
            "name": "test_file_download_cached",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_requests": [],
                "open_mock": []
            }
        },
        "TestPluginDownload.test_download_plugins": {
            "name": "test_download_plugins",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPluginDownload.test_download_plugins_platform_missing": {
            "name": "test_download_plugins_platform_missing",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPluginDownload.test_download_from_s3": {
            "name": "test_download_from_s3",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "open_mock": []
            }
        },
        "TestPluginDownload.test_download_from_s3_cached": {
            "name": "test_download_from_s3_cached",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "open_mock": []
            }
        },
        "TestPluginDownload.test_download_plugins_platform_missing._download_mock_side_effect": {
            "name": "_download_mock_side_effect",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [],
                "_": []
            }
        }
    },
    "terrawrap-master/test/unit/test_tf_variables.py": {
        "TestTerraformVariables.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTerraformVariables.tearDown": {
            "name": "tearDown",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTerraformVariables.test_get_auto_vars": {
            "name": "test_get_auto_vars",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTerraformVariables.test_get_variables_for_file": {
            "name": "test_get_variables_for_file",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTerraformVariables.test_get_source_for_variable": {
            "name": "test_get_source_for_variable",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTerraformVariables.test_get_auto_var_usages": {
            "name": "test_get_auto_var_usages",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "terrawrap-master/test/unit/test_version.py": {
        "TestVersion.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVersion.test_version_check_older": {
            "name": "test_version_check_older",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_latest_version": []
            }
        },
        "TestVersion.test_version_check_newer": {
            "name": "test_version_check_newer",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_latest_version": []
            }
        },
        "TestVersion.test_version_check_equal": {
            "name": "test_version_check_equal",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_latest_version": []
            }
        },
        "TestVersion.test_version_check_handles_exception": {
            "name": "test_version_check_handles_exception",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get_latest_version": [
                    "str"
                ]
            }
        },
        "TestVersion.test_get_latest_version_happy": {
            "name": "test_get_latest_version_happy",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        }
    },
    "terrawrap-master/test/unit/__init__.py": {}
}
{
    "timetable-server-master/manage.py": {},
    "timetable-server-master/api/apps.py": {},
    "timetable-server-master/api/urls.py": {
        "version_urls": {
            "name": "version_urls",
            "location": 27,
            "return": [],
            "arguments": {
                "version": [
                    "dict[, ]",
                    "dict[str, dict[str, str]]",
                    "dict[str, int]",
                    "dict[str, str]"
                ]
            }
        }
    },
    "timetable-server-master/api/__init__.py": {},
    "timetable-server-master/api/migrations/__init__.py": {},
    "timetable-server-master/common/decorators.py": {
        "required_params": {
            "name": "required_params",
            "location": 8,
            "return": [],
            "arguments": {
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "login_not_required": {
            "name": "login_not_required",
            "location": 28,
            "return": [],
            "arguments": {
                "view_func": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "required_params.wrapper": {
            "name": "wrapper",
            "location": 12,
            "return": [
                "Response"
            ],
            "arguments": {}
        },
        "login_not_required.wrapped_view": {
            "name": "wrapped_view",
            "location": 29,
            "return": [],
            "arguments": {}
        }
    },
    "timetable-server-master/common/factories.py": {},
    "timetable-server-master/common/middleware.py": {
        "LoginRequiredMiddleware.process_view": {
            "name": "process_view",
            "location": 13,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool",
                    "typing.Callable[, ]"
                ],
                "callback": [
                    "str",
                    "bytes"
                ],
                "callback_args": [
                    "list[str]",
                    "dict[str, typing.Any]",
                    "int",
                    "typing.Counter"
                ],
                "callback_kwargs": [
                    "list[str]",
                    "dict[str, typing.Any]",
                    "int",
                    "typing.Counter"
                ]
            }
        },
        "HeaderSessionMiddleware.process_request": {
            "name": "process_request",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]",
                    "tuple[int]"
                ]
            }
        },
        "HeaderSessionMiddleware.process_response": {
            "name": "process_response",
            "location": 30,
            "return": [
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, typing.Any]"
                ],
                "response": [
                    "dict[str, typing.Any]"
                ]
            }
        },
        "UpdateLastActivityMiddleware.process_request": {
            "name": "process_request",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ]
            }
        }
    },
    "timetable-server-master/common/mixins.py": {
        "LoginNotRequiredMixin.as_view": {
            "name": "as_view",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": [
                    "int",
                    "typing.Type",
                    "str",
                    "typing.Callable[None, None]"
                ]
            }
        },
        "SyncMixin.sync": {
            "name": "sync",
            "location": 24,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool"
                ],
                "already_handled": [
                    "str"
                ],
                "timestamp": [
                    "float",
                    "int"
                ]
            }
        },
        "SyncMixin.meta": {
            "name": "meta",
            "location": 40,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, typing.Any]",
                    "None",
                    "int"
                ]
            }
        },
        "SyncMixin._get_meta_result": {
            "name": "_get_meta_result",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "ids": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "timetable-server-master/common/models.py": {
        "QuerySet.bulk_update": {
            "name": "bulk_update",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "objs": [
                    "bytes"
                ],
                "fields": [
                    "int",
                    "str",
                    "dict[, ]"
                ],
                "batch_size": [
                    "None",
                    "int",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "CommonModel.get_ids_for_sync": {
            "name": "get_ids_for_sync",
            "location": 33,
            "return": [
                "dict[typing.Text, typing.Union[set[typing.Text],list[]]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "typing.Match",
                    "list[str]"
                ],
                "queryset": [
                    "str",
                    "typing.Match",
                    "list[str]"
                ],
                "date_time": [
                    "str",
                    "typing.Match",
                    "list[str]"
                ]
            }
        },
        "CommonModel.safe_delete": {
            "name": "safe_delete",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/common/permissions.py": {
        "CsrfExemptSessionAuthentication.enforce_csrf": {
            "name": "enforce_csrf",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "bool"
                ]
            }
        }
    },
    "timetable-server-master/common/pusher.py": {
        "Pusher.fcm": {
            "name": "fcm",
            "location": 13,
            "return": [
                "FCMNotification"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pusher.send_notification": {
            "name": "send_notification",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "bool"
                ],
                "user_objects": [
                    "bool",
                    "dict[str, str]",
                    "list[str]",
                    "None"
                ],
                "ids": [
                    "int",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "message_title": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "timetable-server-master/common/tests.py": {
        "BaseAPITestCase.setUpClass": {
            "name": "setUpClass",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "BaseAPITestCase.setUp": {
            "name": "setUp",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseAPITestCase.reverse": {
            "name": "reverse",
            "location": 42,
            "return": [],
            "arguments": {
                "cls": [],
                "view_name": [],
                "args": [
                    "None"
                ],
                "kwargs": [
                    "None"
                ],
                "request": [
                    "None"
                ],
                "format": [
                    "None"
                ]
            }
        },
        "BaseAPITestCase.reverse_with_query_params": {
            "name": "reverse_with_query_params",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "view_name": [],
                "query_name": []
            }
        },
        "BaseAPITestCase.compare_sync": {
            "name": "compare_sync",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "updated_ids": [],
                "deleted_ids": []
            }
        },
        "BaseAPITestCase.init_sync": {
            "name": "init_sync",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "updated_ids": [],
                "deleted_ids": []
            }
        },
        "BaseAPITestCase.init_meta": {
            "name": "init_meta",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "queryset": []
            }
        }
    },
    "timetable-server-master/common/utils.py": {
        "custom_exception_handler": {
            "name": "custom_exception_handler",
            "location": 7,
            "return": [],
            "arguments": {
                "exc": [
                    "dict[str, typing.Any]",
                    "bool",
                    "dict[, ]"
                ],
                "context": [
                    "Exception",
                    "dict[, ]"
                ]
            }
        },
        "TypeWeek.all": {
            "name": "all",
            "location": 26,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "TypeWeek.get_by_value": {
            "name": "get_by_value",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "value": []
            }
        }
    },
    "timetable-server-master/common/views.py": {
        "home_page": {
            "name": "home_page",
            "location": 7,
            "return": [],
            "arguments": {
                "request": [
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "timetable-server-master/timetable/jsonenv.py": {
        "JsonEnv.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "env_file_path": [
                    "str"
                ]
            }
        },
        "JsonEnv.__getitem__": {
            "name": "__getitem__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "item": [
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "JsonEnv.get": {
            "name": "get",
            "location": 13,
            "return": [
                "None",
                "str"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Type"
                ],
                "default": [
                    "None",
                    "str"
                ]
            }
        },
        "JsonEnv._fail_if_variable_undefined": {
            "name": "_fail_if_variable_undefined",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "timetable-server-master/timetable/settings.py": {},
    "timetable-server-master/timetable/urls.py": {},
    "timetable-server-master/timetable/wsgi.py": {},
    "timetable-server-master/timetable/__init__.py": {},
    "timetable-server-master/university/admin.py": {},
    "timetable-server-master/university/apps.py": {
        "UniversityConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/factories.py": {
        "FacultyFactory.create_default": {
            "name": "create_default",
            "location": 21,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "OccupationFactory.create_math_occupation": {
            "name": "create_math_occupation",
            "location": 34,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "OccupationFactory.create_fundamental_occupation": {
            "name": "create_fundamental_occupation",
            "location": 41,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "OccupationFactory.create_default": {
            "name": "create_default",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "GroupFactory.create_5_group": {
            "name": "create_5_group",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "GroupFactory.create_6_group": {
            "name": "create_6_group",
            "location": 66,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "GroupFactory.create_default": {
            "name": "create_default",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SubgroupFactory.create_subgroups": {
            "name": "create_subgroups",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SubgroupFactory.create_default": {
            "name": "create_default",
            "location": 94,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "timetable-server-master/university/mixins.py": {
        "UniversityInfoMixin.info": {
            "name": "info",
            "location": 12,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int"
                ]
            }
        }
    },
    "timetable-server-master/university/models.py": {
        "FantasticFourModel.content_type": {
            "name": "content_type",
            "location": 21,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Faculty.__str__": {
            "name": "__str__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Occupation.__str__": {
            "name": "__str__",
            "location": 43,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Group.__str__": {
            "name": "__str__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Subgroup.__str__": {
            "name": "__str__",
            "location": 67,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Subscription.__str__": {
            "name": "__str__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timetable.__str__": {
            "name": "__str__",
            "location": 96,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timetable.get_faculty": {
            "name": "get_faculty",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClassTime.__str__": {
            "name": "__str__",
            "location": 115,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Lecturer.__str__": {
            "name": "__str__",
            "location": 127,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Class.__str__": {
            "name": "__str__",
            "location": 173,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "UniversityInfo.__str__": {
            "name": "__str__",
            "location": 188,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/serializers.py": {
        "SubscriptionSerializer.to_representation": {
            "name": "to_representation",
            "location": 36,
            "return": [
                "dict[typing.Union[str,typing.Text], str]"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "int",
                    "str",
                    "list[str]"
                ]
            }
        },
        "SubscriptionSerializer.create": {
            "name": "create",
            "location": 43,
            "return": [
                "str",
                "dict[, ]",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "validated_data": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "ClassTimeSerializer.to_representation": {
            "name": "to_representation",
            "location": 83,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "bool",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "timetable-server-master/university/signals.py": {
        "get_users_for_notification": {
            "name": "get_users_for_notification",
            "location": 11,
            "return": [
                "int",
                "dict[str, typing.Union[typing.Any,typing.Any,typing.Any,typing.Any,typing.Any,typing.Any,typing.Any]]",
                "list[]",
                "dict[str, typing.Union[bool,str]]",
                "typing.Type",
                "tuple[typing.Union[str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str,str]]"
            ],
            "arguments": {
                "model": [
                    "int",
                    "str",
                    "list[int]"
                ],
                "ids": [
                    "int",
                    "str",
                    "list[int]"
                ]
            }
        },
        "on_single_changes": {
            "name": "on_single_changes",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [
                    "bool",
                    "dict[str, typing.Any]"
                ],
                "instance": [
                    "tuple[]",
                    "bool"
                ]
            }
        }
    },
    "timetable-server-master/university/views.py": {
        "UniversityAPIView.diff_basename": {
            "name": "diff_basename",
            "location": 49,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ],
                "timestamp": [
                    "None",
                    "dict[str, str]",
                    "str",
                    "int"
                ]
            }
        },
        "SubscriptionAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubscriptionAPIView.perform_destroy": {
            "name": "perform_destroy",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "SubscriptionAPIView.update": {
            "name": "update",
            "location": 116,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "int"
                ]
            }
        },
        "TimetableAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClassAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LecturerAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClassTimeAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UniversityInfoAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/__init__.py": {},
    "timetable-server-master/university/migrations/0001_initial.py": {},
    "timetable-server-master/university/migrations/0002_auto_20190916_1235.py": {},
    "timetable-server-master/university/migrations/0003_auto_20190917_1331.py": {},
    "timetable-server-master/university/migrations/0004_auto_20190917_1515.py": {},
    "timetable-server-master/university/migrations/0005_auto_20190924_1150.py": {},
    "timetable-server-master/university/migrations/0006_auto_20190925_1554.py": {},
    "timetable-server-master/university/migrations/0007_auto_20191015_1221.py": {},
    "timetable-server-master/university/migrations/0008_auto_20191021_1232.py": {},
    "timetable-server-master/university/migrations/0009_auto_20191026_2133.py": {},
    "timetable-server-master/university/migrations/0010_auto_20191029_2030.py": {},
    "timetable-server-master/university/migrations/0011_auto_20191101_1007.py": {},
    "timetable-server-master/university/migrations/0012_auto_20191104_0526.py": {},
    "timetable-server-master/university/migrations/__init__.py": {},
    "timetable-server-master/university/tests/test_class.py": {
        "RestAPIClass.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIClass.test_list": {
            "name": "test_list",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIClass.test_list_without_subscription": {
            "name": "test_list_without_subscription",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIClass.test_sync": {
            "name": "test_sync",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIClass.test_meta": {
            "name": "test_meta",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/tests/test_class_times.py": {
        "RestAPIClassTimes.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIClassTimes.test_get_class_times": {
            "name": "test_get_class_times",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIClassTimes.test_sync": {
            "name": "test_sync",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIClassTimes.test_meta": {
            "name": "test_meta",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/tests/test_lecturer.py": {
        "RestAPILecturer.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPILecturer.test_get_lecturer": {
            "name": "test_get_lecturer",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPILecturer.test_sync": {
            "name": "test_sync",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPILecturer.test_meta": {
            "name": "test_meta",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/tests/test_subscription.py": {
        "RestAPISubscription.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_create_subscription": {
            "name": "test_create_subscription",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_create_subscription_which_exists": {
            "name": "test_create_subscription_which_exists",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_create_subscription_with_not_existing_subgroup": {
            "name": "test_create_subscription_with_not_existing_subgroup",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_get_all_subscriptions": {
            "name": "test_get_all_subscriptions",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_get_subscription_by_id": {
            "name": "test_get_subscription_by_id",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_get_subscriptions_which_not_belong_to_user": {
            "name": "test_get_subscriptions_which_not_belong_to_user",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_sync": {
            "name": "test_sync",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPISubscription.test_meta": {
            "name": "test_meta",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/tests/test_timetable.py": {
        "RestAPITimetable.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPITimetable.test_list": {
            "name": "test_list",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPITimetable.test_sync": {
            "name": "test_sync",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPITimetable.test_meta": {
            "name": "test_meta",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/tests/test_university.py": {
        "RestAPIUniversity.test_get_all_faculties": {
            "name": "test_get_all_faculties",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUniversity.test_get_occupations_by_faculty_id": {
            "name": "test_get_occupations_by_faculty_id",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUniversity.test_get_groups_by_occupation_id": {
            "name": "test_get_groups_by_occupation_id",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUniversity.test_get_subgroups_by_group_id": {
            "name": "test_get_subgroups_by_group_id",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUniversity.test_diff": {
            "name": "test_diff",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/university/tests/__init__.py": {},
    "timetable-server-master/users/admin.py": {
        "UserAdmin.get_actions": {
            "name": "get_actions",
            "location": 46,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "str"
                ]
            }
        },
        "UserAdmin.get_fieldsets": {
            "name": "get_fieldsets",
            "location": 51,
            "return": [
                "str",
                "list[typing.Union[typing.Any,typing.Any]]",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [
                    "None",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "timetable-server-master/users/apps.py": {},
    "timetable-server-master/users/factories.py": {},
    "timetable-server-master/users/forms.py": {
        "AuthenticationForm.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "None"
                ]
            }
        },
        "AuthenticationForm.confirm_login_allowed": {
            "name": "confirm_login_allowed",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "AuthenticationForm.clean": {
            "name": "clean",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/users/models.py": {
        "UserManager.create_user": {
            "name": "create_user",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": [
                    "None"
                ]
            }
        },
        "UserManager.create_staff": {
            "name": "create_staff",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": [
                    "None"
                ]
            }
        },
        "UserManager.create_superuser": {
            "name": "create_superuser",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": []
            }
        },
        "UserManager._create_user": {
            "name": "_create_user",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "email": [],
                "password": []
            }
        },
        "User.get_full_name": {
            "name": "get_full_name",
            "location": 60,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.set_device": {
            "name": "set_device",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "Device.__str__": {
            "name": "__str__",
            "location": 98,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Device.remove_invalid_tokens": {
            "name": "remove_invalid_tokens",
            "location": 102,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "timetable-server-master/users/serializers.py": {
        "UserSerializer.validate_password": {
            "name": "validate_password",
            "location": 16,
            "return": [
                "str",
                "None",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "UserSerializer.create": {
            "name": "create",
            "location": 20,
            "return": [
                "str",
                "dict[str, typing.Union[int,str]]",
                "dict[str, str]",
                "list[str]",
                "dict[str, bool]"
            ],
            "arguments": {
                "self": [],
                "validated_data": [
                    "str"
                ]
            }
        },
        "DeviceSerializer.to_representation": {
            "name": "to_representation",
            "location": 30,
            "return": [
                "dict[typing.Union[str,typing.Text], str]"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "str",
                    "None",
                    "typing.Mapping",
                    "dict[str, typing.Any]",
                    "bytes"
                ]
            }
        }
    },
    "timetable-server-master/users/tests.py": {
        "RestAPIUser.setUpClass": {
            "name": "setUpClass",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "RestAPIUser.test_create_user_with_correct_data": {
            "name": "test_create_user_with_correct_data",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_create_user_with_wrong_pass": {
            "name": "test_create_user_with_wrong_pass",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_create_user_with_wrong_email": {
            "name": "test_create_user_with_wrong_email",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_create_user_with_exist_email": {
            "name": "test_create_user_with_exist_email",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_create_user_with_no_data": {
            "name": "test_create_user_with_no_data",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_login": {
            "name": "test_login",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_login_with_wrong_data": {
            "name": "test_login_with_wrong_data",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_change_user_info": {
            "name": "test_change_user_info",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_user_logout": {
            "name": "test_user_logout",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_device": {
            "name": "test_device",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestAPIUser.test_update_device": {
            "name": "test_update_device",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timetable-server-master/users/views.py": {
        "UserAPIView.registration": {
            "name": "registration",
            "location": 22,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserAPIView.login": {
            "name": "login",
            "location": 31,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserAPIView.user_info": {
            "name": "user_info",
            "location": 49,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ]
            }
        },
        "UserAPIView.logout": {
            "name": "logout",
            "location": 58,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "UserAPIView.device": {
            "name": "device",
            "location": 64,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Exception",
                    "str"
                ],
                "token": [
                    "str",
                    "list[]"
                ],
                "platform": [
                    "str",
                    "list[]"
                ]
            }
        }
    },
    "timetable-server-master/users/__init__.py": {},
    "timetable-server-master/users/migrations/0001_initial.py": {},
    "timetable-server-master/users/migrations/0002_device.py": {},
    "timetable-server-master/users/migrations/0003_auto_20191023_1208.py": {},
    "timetable-server-master/users/migrations/0004_auto_20191026_2133.py": {},
    "timetable-server-master/users/migrations/0005_user_last_activity.py": {},
    "timetable-server-master/users/migrations/0006_device_version.py": {
        "set_api_version": {
            "name": "set_api_version",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema": [
                    "str",
                    "bool",
                    "typing.Iterable[str]"
                ]
            }
        }
    },
    "timetable-server-master/users/migrations/__init__.py": {}
}
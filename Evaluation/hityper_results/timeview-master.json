{
    "timeview-master/setup.py": {},
    "timeview-master/docs/source/conf.py": {},
    "timeview-master/example/api_gui.py": {},
    "timeview-master/example/api_processing.py": {},
    "timeview-master/tests/func/conftest.py": {
        "speech_wav_path": {
            "name": "speech_wav_path",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "speech_lab_path": {
            "name": "speech_lab_path",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "cough_edf_path": {
            "name": "cough_edf_path",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "viewerWithExample": {
            "name": "viewerWithExample",
            "location": 37,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "timeview_qtbot": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "app": {
            "name": "app",
            "location": 47,
            "return": [
                "typing.Generator[TimeView]"
            ],
            "arguments": {}
        },
        "timeview_qtbot": {
            "name": "timeview_qtbot",
            "location": 56,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "app": [
                    "str"
                ],
                "qtbot": [
                    "str"
                ]
            }
        }
    },
    "timeview-master/tests/func/testBasicGUI.py": {
        "testViewer": {
            "name": "testViewer",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "timeview_qtbot": [
                    "str",
                    "float"
                ]
            }
        },
        "testMakeSpectrogram": {
            "name": "testMakeSpectrogram",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "viewerWithExample": [],
                "timeview_qtbot": [
                    "bool"
                ]
            }
        },
        "testMakeWaveform": {
            "name": "testMakeWaveform",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "viewerWithExample": [
                    "str",
                    "typing.Mapping"
                ],
                "timeview_qtbot": []
            }
        },
        "testMakeWaveform.check_view": {
            "name": "check_view",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "timeview-master/tests/func/__init__.py": {},
    "timeview-master/tests/func/processors/__init__.py": {},
    "timeview-master/tests/unit/testProcessors.py": {
        "TestProcessors.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProcessors.test_PeakTracker": {
            "name": "test_PeakTracker",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProcessors.test_F0Analyzer": {
            "name": "test_F0Analyzer",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timeview-master/timeview/api.py": {},
    "timeview-master/timeview/__init__.py": {},
    "timeview-master/timeview/__main__.py": {
        "parse": {
            "name": "parse",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "timeview-master/timeview/__version__.py": {},
    "timeview-master/timeview/dsp/dsp.py": {
        "segment": {
            "name": "segment",
            "location": 67,
            "return": [],
            "arguments": {
                "x": [],
                "nsize": [],
                "nrate": []
            }
        },
        "frame": {
            "name": "frame",
            "location": 81,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_size": [],
                "frame_rate": []
            }
        },
        "frame_centered": {
            "name": "frame_centered",
            "location": 112,
            "return": [],
            "arguments": {
                "signal": [],
                "time": [],
                "frame_size": []
            }
        },
        "ola": {
            "name": "ola",
            "location": 146,
            "return": [],
            "arguments": {
                "frame": [],
                "fs": [],
                "duration": [],
                "frame_size": [],
                "frame_rate": []
            }
        },
        "spectral_subtract": {
            "name": "spectral_subtract",
            "location": 157,
            "return": [],
            "arguments": {
                "inp": [],
                "frame_rate": [],
                "silence_percentage": []
            }
        },
        "spectrogram": {
            "name": "spectrogram",
            "location": 177,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_size": [],
                "frame_rate": [],
                "window": [],
                "NFFT": [],
                "normalized": []
            }
        },
        "spectrogram_centered": {
            "name": "spectrogram_centered",
            "location": 202,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_size": [],
                "time": [],
                "window": [],
                "NFFT": [],
                "normalized": []
            }
        },
        "correlate_fft": {
            "name": "correlate_fft",
            "location": 232,
            "return": [],
            "arguments": {
                "X": []
            }
        },
        "correlogram": {
            "name": "correlogram",
            "location": 245,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_size": [],
                "frame_rate": [],
                "normalize": []
            }
        },
        "nextpow2": {
            "name": "nextpow2",
            "location": 270,
            "return": [],
            "arguments": {
                "i": []
            }
        }
    },
    "timeview-master/timeview/dsp/processing.py": {
        "get_processor_classes": {
            "name": "get_processor_classes",
            "location": 89,
            "return": [
                "dict[, ]"
            ],
            "arguments": {}
        },
        "DefaultProgressTracker.update": {
            "name": "update",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "int",
                    "float",
                    "list[float]",
                    "typing.Sequence[float]"
                ]
            }
        },
        "Processor.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Processor.set_data": {
            "name": "set_data",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Processor.get_parameters": {
            "name": "get_parameters",
            "location": 61,
            "return": [
                "dict[, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Processor.set_parameters": {
            "name": "set_parameters",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parameters": [
                    "dict[str, str]",
                    "dict[, ]",
                    "dict[typing.Hashable, typing.Any]"
                ]
            }
        },
        "Processor.process": {
            "name": "process",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None",
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "Processor.del_data": {
            "name": "del_data",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "get_processor_classes.all_subclasses": {
            "name": "all_subclasses",
            "location": 90,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "Filter.__init__": {
            "name": "__init__",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Filter.process": {
            "name": "process",
            "location": 138,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "ZeroPhaseFilter.process": {
            "name": "process",
            "location": 165,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "EnergyEstimator.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnergyEstimator.process": {
            "name": "process",
            "location": 198,
            "return": [
                "tuple[typing.Union[str,int]]"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "SpectralDiscontinuityEstimator.__init__": {
            "name": "__init__",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpectralDiscontinuityEstimator.process": {
            "name": "process",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "NoiseReducer.__init__": {
            "name": "__init__",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoiseReducer.process": {
            "name": "process",
            "location": 309,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "ActivityDetector.__init__": {
            "name": "__init__",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ActivityDetector.process": {
            "name": "process",
            "location": 340,
            "return": [
                "tuple[typing.Union[bool,str,list[int]]]"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "F0Analyzer.__init__": {
            "name": "__init__",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "F0Analyzer.set_parameters": {
            "name": "set_parameters",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parameter": [
                    "dict[str, str]",
                    "str",
                    "int"
                ]
            }
        },
        "F0Analyzer.process": {
            "name": "process",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "PeakTracker.__init__": {
            "name": "__init__",
            "location": 497,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PeakTracker.get_parameters": {
            "name": "get_parameters",
            "location": 508,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PeakTracker.set_parameters": {
            "name": "set_parameters",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parameter": [
                    "dict[str, str]",
                    "str",
                    "int"
                ]
            }
        },
        "PeakTracker.process": {
            "name": "process",
            "location": 519,
            "return": [
                "tuple[typing.Union[list[str],str,int,dict[str, str]]]"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None"
                ]
            }
        },
        "PeakTrackerActiveOnly.process": {
            "name": "process",
            "location": 562,
            "return": [
                "tuple[typing.Union[str,float,tuple[],dict[, ],list[],list[str]]]"
            ],
            "arguments": {
                "self": [],
                "progressTracker": [
                    "None",
                    "int",
                    "float",
                    "typing.Iterable[typing.Optional[typing.Any]]"
                ]
            }
        }
    },
    "timeview-master/timeview/dsp/tracking.py": {
        "convert_dtype": {
            "name": "convert_dtype",
            "location": 34,
            "return": [],
            "arguments": {
                "source": [],
                "target_dtype": []
            }
        },
        "get_track_classes": {
            "name": "get_track_classes",
            "location": 204,
            "return": [],
            "arguments": {}
        },
        "Track.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Track.get_time": {
            "name": "get_time",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_time": {
            "name": "set_time",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Track.get_value": {
            "name": "get_value",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_value": {
            "name": "set_value",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Track.get_fs": {
            "name": "get_fs",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_fs": {
            "name": "set_fs",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "Track.get_duration": {
            "name": "get_duration",
            "location": 135,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_duration": {
            "name": "set_duration",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Track.__eq__": {
            "name": "__eq__",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Track.__ne__": {
            "name": "__ne__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Track.__len__": {
            "name": "__len__",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.__str__": {
            "name": "__str__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.__add__": {
            "name": "__add__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Track.read": {
            "name": "read",
            "location": 161,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "Track.write": {
            "name": "write",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Track.resample": {
            "name": "resample",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Track.select": {
            "name": "select",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Track.insert": {
            "name": "insert",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "t": []
            }
        },
        "Track.remove": {
            "name": "remove",
            "location": 192,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Track.copy": {
            "name": "copy",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Track.cut": {
            "name": "cut",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "get_track_classes.all_subclasses": {
            "name": "all_subclasses",
            "location": 205,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "Event.__init__": {
            "name": "__init__",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "Event.get_time": {
            "name": "get_time",
            "location": 237,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.set_time": {
            "name": "set_time",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Event.get_value": {
            "name": "get_value",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.set_value": {
            "name": "set_value",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Event.get_duration": {
            "name": "get_duration",
            "location": 261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.set_duration": {
            "name": "set_duration",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Event.__len__": {
            "name": "__len__",
            "location": 275,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.__str__": {
            "name": "__str__",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.__add__": {
            "name": "__add__",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Event.__eq__": {
            "name": "__eq__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Event.__ne__": {
            "name": "__ne__",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Event.crossfade": {
            "name": "crossfade",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "length": []
            }
        },
        "Event.resample": {
            "name": "resample",
            "location": 317,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Event.select": {
            "name": "select",
            "location": 350,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Event.read": {
            "name": "read",
            "location": 362,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "duration": []
            }
        },
        "Event.read_pml": {
            "name": "read_pml",
            "location": 380,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": []
            }
        },
        "Event.read_pm": {
            "name": "read_pm",
            "location": 404,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "_duration": []
            }
        },
        "Event.write": {
            "name": "write",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Event.write_pml": {
            "name": "write_pml",
            "location": 443,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Event.get": {
            "name": "get",
            "location": 460,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Event.draw_pg": {
            "name": "draw_pg",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.time_warp": {
            "name": "time_warp",
            "location": 469,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "Y": []
            }
        },
        "Event.insert": {
            "name": "insert",
            "location": 487,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "t": []
            }
        },
        "Wave.__init__": {
            "name": "__init__",
            "location": 501,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "fs": [],
                "duration": [],
                "offset": [],
                "path": []
            }
        },
        "Wave.get_offset": {
            "name": "get_offset",
            "location": 523,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_offset": {
            "name": "set_offset",
            "location": 526,
            "return": [],
            "arguments": {
                "self": [],
                "offset": []
            }
        },
        "Wave.get_time": {
            "name": "get_time",
            "location": 532,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_time": {
            "name": "set_time",
            "location": 539,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Wave.get_value": {
            "name": "get_value",
            "location": 544,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_value": {
            "name": "set_value",
            "location": 547,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Wave.get_duration": {
            "name": "get_duration",
            "location": 556,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_duration": {
            "name": "set_duration",
            "location": 559,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Wave.get_dtype": {
            "name": "get_dtype",
            "location": 575,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.get_bitdepth": {
            "name": "get_bitdepth",
            "location": 582,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.__eq__": {
            "name": "__eq__",
            "location": 595,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Wave.__ne__": {
            "name": "__ne__",
            "location": 606,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Wave.__str__": {
            "name": "__str__",
            "location": 609,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.__len__": {
            "name": "__len__",
            "location": 621,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.__add__": {
            "name": "__add__",
            "location": 624,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Wave.resample": {
            "name": "resample",
            "location": 631,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Wave.convert_dtype": {
            "name": "convert_dtype",
            "location": 644,
            "return": [],
            "arguments": {
                "self": [],
                "target_dtype": []
            }
        },
        "Wave.select": {
            "name": "select",
            "location": 651,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Wave.read": {
            "name": "read",
            "location": 659,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "Wave.read_wav": {
            "name": "read_wav",
            "location": 667,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "channel": [],
                "mmap": []
            }
        },
        "Wave.write": {
            "name": "write",
            "location": 699,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Wave.write_wav": {
            "name": "write_wav",
            "location": 706,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Wave.__getitem__": {
            "name": "__getitem__",
            "location": 713,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Wave.crossfade": {
            "name": "crossfade",
            "location": 753,
            "return": [],
            "arguments": {
                "self": [],
                "wave": [],
                "length": []
            }
        },
        "Wave.time_warp": {
            "name": "time_warp",
            "location": 770,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "TimeValue.__init__": {
            "name": "__init__",
            "location": 783,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "TimeValue.get_time": {
            "name": "get_time",
            "location": 807,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.set_time": {
            "name": "set_time",
            "location": 815,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "TimeValue.get_value": {
            "name": "get_value",
            "location": 828,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.set_value": {
            "name": "set_value",
            "location": 831,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "TimeValue.get_duration": {
            "name": "get_duration",
            "location": 838,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.set_duration": {
            "name": "set_duration",
            "location": 841,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "TimeValue.__eq__": {
            "name": "__eq__",
            "location": 852,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TimeValue.__ne__": {
            "name": "__ne__",
            "location": 867,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TimeValue.__len__": {
            "name": "__len__",
            "location": 870,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.__str__": {
            "name": "__str__",
            "location": 873,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.__add__": {
            "name": "__add__",
            "location": 876,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TimeValue.resample": {
            "name": "resample",
            "location": 894,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TimeValue.select": {
            "name": "select",
            "location": 909,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "TimeValue.read": {
            "name": "read",
            "location": 923,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "track_name": [],
                "fs": [],
                "duration": []
            }
        },
        "TimeValue.read_f0": {
            "name": "read_f0",
            "location": 959,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "frameRate": [],
                "frameSize": [],
                "fs": []
            }
        },
        "TimeValue.read_tmv": {
            "name": "read_tmv",
            "location": 997,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": []
            }
        },
        "TimeValue.read_frm": {
            "name": "read_frm",
            "location": 1006,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": []
            }
        },
        "TimeValue.write": {
            "name": "write",
            "location": 1025,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "track_name": []
            }
        },
        "TimeValue.write_f0": {
            "name": "write_f0",
            "location": 1036,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "frameRate": [],
                "frameSize": [],
                "fs": []
            }
        },
        "TimeValue.write_tmv": {
            "name": "write_tmv",
            "location": 1039,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TimeValue.write_frm": {
            "name": "write_frm",
            "location": 1046,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TimeValue.from_Partition": {
            "name": "from_Partition",
            "location": 1056,
            "return": [],
            "arguments": {
                "cls": [],
                "p": []
            }
        },
        "TimeValue.get_index": {
            "name": "get_index",
            "location": 1075,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "TimeValue._get_value": {
            "name": "_get_value",
            "location": 1093,
            "return": [],
            "arguments": {
                "self": [],
                "t": [],
                "interpolation": []
            }
        },
        "TimeValue.get": {
            "name": "get",
            "location": 1125,
            "return": [],
            "arguments": {
                "self": [],
                "T": [],
                "interpolation": []
            }
        },
        "TimeValue.interp_linear": {
            "name": "interp_linear",
            "location": 1142,
            "return": [],
            "arguments": {
                "self": [],
                "T": []
            }
        },
        "TimeValue.interp_nearest": {
            "name": "interp_nearest",
            "location": 1146,
            "return": [],
            "arguments": {
                "self": [],
                "T": []
            }
        },
        "TimeValue.interpolate": {
            "name": "interpolate",
            "location": 1151,
            "return": [],
            "arguments": {
                "self": [],
                "T": [],
                "kind": []
            }
        },
        "TimeValue.time_warp": {
            "name": "time_warp",
            "location": 1218,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "Y": []
            }
        },
        "TimeValue.interp": {
            "name": "interp",
            "location": 1234,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Label.check": {
            "name": "check",
            "location": 1261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.__init__": {
            "name": "__init__",
            "location": 1291,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "Label.get_time": {
            "name": "get_time",
            "location": 1300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.set_time": {
            "name": "set_time",
            "location": 1305,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Label.get_value": {
            "name": "get_value",
            "location": 1312,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.set_value": {
            "name": "set_value",
            "location": 1317,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Label.get_duration": {
            "name": "get_duration",
            "location": 1324,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.set_duration": {
            "name": "set_duration",
            "location": 1327,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Label.__str__": {
            "name": "__str__",
            "location": 1335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.__add__": {
            "name": "__add__",
            "location": 1354,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Label.__len__": {
            "name": "__len__",
            "location": 1364,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.resample": {
            "name": "resample",
            "location": 1367,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Label.select": {
            "name": "select",
            "location": 1383,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Label.read_lbl": {
            "name": "read_lbl",
            "location": 1406,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "fs": [],
                "encoding": []
            }
        },
        "Label.read": {
            "name": "read",
            "location": 1452,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Partition.check": {
            "name": "check",
            "location": 1459,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.__init__": {
            "name": "__init__",
            "location": 1484,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": [],
                "fs": [],
                "path": []
            }
        },
        "Partition.get_time": {
            "name": "get_time",
            "location": 1491,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.set_time": {
            "name": "set_time",
            "location": 1498,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Partition.get_value": {
            "name": "get_value",
            "location": 1517,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.set_value": {
            "name": "set_value",
            "location": 1520,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Partition.get_duration": {
            "name": "get_duration",
            "location": 1530,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.set_duration": {
            "name": "set_duration",
            "location": 1536,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Partition.__eq__": {
            "name": "__eq__",
            "location": 1551,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Partition.__ne__": {
            "name": "__ne__",
            "location": 1565,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Partition.__len__": {
            "name": "__len__",
            "location": 1568,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.resample": {
            "name": "resample",
            "location": 1579,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Partition.select": {
            "name": "select",
            "location": 1594,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Partition.read": {
            "name": "read",
            "location": 1618,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "track_name": []
            }
        },
        "Partition.read_lab": {
            "name": "read_lab",
            "location": 1644,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "encoding": []
            }
        },
        "Partition.read_partition": {
            "name": "read_partition",
            "location": 1705,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "encoding": []
            }
        },
        "Partition.write": {
            "name": "write",
            "location": 1765,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Partition.write_lab": {
            "name": "write_lab",
            "location": 1773,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "Partition.write_partition": {
            "name": "write_partition",
            "location": 1784,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Partition.from_TimeValue": {
            "name": "from_TimeValue",
            "location": 1794,
            "return": [],
            "arguments": {
                "cls": [],
                "tv": []
            }
        },
        "Partition.__getitem__": {
            "name": "__getitem__",
            "location": 1812,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.__setitem__": {
            "name": "__setitem__",
            "location": 1815,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "value": []
            }
        },
        "Partition.__str__": {
            "name": "__str__",
            "location": 1818,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.__add__": {
            "name": "__add__",
            "location": 1835,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Partition.crossfade": {
            "name": "crossfade",
            "location": 1845,
            "return": [],
            "arguments": {
                "self": [],
                "partition": [],
                "length": []
            }
        },
        "Partition.get": {
            "name": "get",
            "location": 1860,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Partition.append": {
            "name": "append",
            "location": 1867,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": []
            }
        },
        "Partition.insert": {
            "name": "insert",
            "location": 1875,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": []
            }
        },
        "Partition.delete_merge_left": {
            "name": "delete_merge_left",
            "location": 1885,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.delete_merge_right": {
            "name": "delete_merge_right",
            "location": 1894,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.merge_same": {
            "name": "merge_same",
            "location": 1901,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.time_warp": {
            "name": "time_warp",
            "location": 1917,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "Y": []
            }
        },
        "Value.__init__": {
            "name": "__init__",
            "location": 1943,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "Value.__getitem__": {
            "name": "__getitem__",
            "location": 1952,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "Value.__setitem__": {
            "name": "__setitem__",
            "location": 1955,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "v": []
            }
        },
        "Value.__eq__": {
            "name": "__eq__",
            "location": 1958,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Value.__ne__": {
            "name": "__ne__",
            "location": 1968,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Value.__len__": {
            "name": "__len__",
            "location": 1971,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.__str__": {
            "name": "__str__",
            "location": 1974,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.get_duration": {
            "name": "get_duration",
            "location": 1977,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.set_duration": {
            "name": "set_duration",
            "location": 1980,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Value.get_value": {
            "name": "get_value",
            "location": 1986,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.set_value": {
            "name": "set_value",
            "location": 1989,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Value.select": {
            "name": "select",
            "location": 1994,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Value.time_warp": {
            "name": "time_warp",
            "location": 1997,
            "return": [],
            "arguments": {
                "self": [],
                "_x": [],
                "y": []
            }
        },
        "Value.identify_ext": {
            "name": "identify_ext",
            "location": 2001,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "track_name": []
            }
        },
        "Value.read": {
            "name": "read",
            "location": 2020,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "duration": [],
                "track_name": []
            }
        },
        "Value.write": {
            "name": "write",
            "location": 2038,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "track_name": []
            }
        }
    },
    "timeview-master/timeview/dsp/viterbi.py": {
        "search_smooth": {
            "name": "search_smooth",
            "location": 9,
            "return": [],
            "arguments": {
                "ftr": [
                    "str",
                    "tuple[typing.Union[str,int]]",
                    "None"
                ],
                "smooth": [
                    "int",
                    "bytearray",
                    "str"
                ]
            }
        }
    },
    "timeview-master/timeview/dsp/__init__.py": {},
    "timeview-master/timeview/gui/dialogs.py": {
        "RenderDialog.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "display_panel": [],
                "renderer": []
            }
        },
        "RenderDialog.createParameterLayout": {
            "name": "createParameterLayout",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RenderDialog.checkValues": {
            "name": "checkValues",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "processor": []
            }
        },
        "ProcessingDialog.checkCurrentSelections": {
            "name": "checkCurrentSelections",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.createLayout": {
            "name": "createLayout",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.createTrackLayout": {
            "name": "createTrackLayout",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.setData": {
            "name": "setData",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.createParameterLayout": {
            "name": "createParameterLayout",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.preAccept": {
            "name": "preAccept",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.startThread": {
            "name": "startThread",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.update_process_bar": {
            "name": "update_process_bar",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ProcessingDialog.abort": {
            "name": "abort",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessingDialog.processor_finished": {
            "name": "processor_finished",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_tracks": []
            }
        },
        "About.__init__": {
            "name": "__init__",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bug.__init__": {
            "name": "__init__",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [],
                "exc_type": [],
                "exc_value": [],
                "exc_traceback": []
            }
        },
        "Bug.copyToClipboard": {
            "name": "copyToClipboard",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HelpBrowser.__init__": {
            "name": "__init__",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "help_engine": [],
                "parent": [
                    "None"
                ]
            }
        },
        "HelpBrowser.loadResource": {
            "name": "loadResource",
            "location": 311,
            "return": [],
            "arguments": {
                "self": [],
                "typ": [],
                "name": []
            }
        },
        "InfoDialog.__init__": {
            "name": "__init__",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "ProgressTracker.update": {
            "name": "update",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ProcessorThread.__init__": {
            "name": "__init__",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processor": [],
                "callback": [],
                "update_process_bar": []
            }
        },
        "ProcessorThread.__del__": {
            "name": "__del__",
            "location": 350,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessorThread.process": {
            "name": "process",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessorThread.run": {
            "name": "run",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timeview-master/timeview/gui/display_panel.py": {
        "Spacer.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Handle.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "str",
                    "list[str]",
                    "tuple[typing.Type]",
                    "None",
                    "int"
                ],
                "label": [
                    "typing.Text"
                ]
            }
        },
        "Handle.updateLabel": {
            "name": "updateLabel",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableSplitter.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "typing.Type",
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "TableSplitter.eventFilter": {
            "name": "eventFilter",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "event": [
                    "Exception"
                ]
            }
        },
        "TableSplitter.showOrHideChild": {
            "name": "showOrHideChild",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableSplitter.moveFinished": {
            "name": "moveFinished",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableSplitter.setSizes_": {
            "name": "setSizes_",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sizes": [
                    "int",
                    "typing.Iterable[int]"
                ]
            }
        },
        "Frame.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "main_window": [
                    "bool",
                    "typing.Mapping"
                ]
            }
        },
        "Frame.resetStyle": {
            "name": "resetStyle",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Frame.minimumSizeHint": {
            "name": "minimumSizeHint",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Frame.sizeHint": {
            "name": "sizeHint",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Frame.increaseSize": {
            "name": "increaseSize",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "increment": [
                    "int"
                ]
            }
        },
        "Frame.decreaseSize": {
            "name": "decreaseSize",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "increment": [
                    "int"
                ]
            }
        },
        "Frame.updateHeight": {
            "name": "updateHeight",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Frame.eventFilter": {
            "name": "eventFilter",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "event": [
                    "Exception",
                    "set[str]"
                ]
            }
        },
        "Frame.mousePressEvent": {
            "name": "mousePressEvent",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Frame.mouseMoveEvent": {
            "name": "mouseMoveEvent",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Frame.dropEvent": {
            "name": "dropEvent",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Frame.dragEnterEvent": {
            "name": "dragEnterEvent",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Frame.dragLeaveEvent": {
            "name": "dragLeaveEvent",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "DisplayPanel.__init__": {
            "name": "__init__",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "frame": [
                    "int",
                    "float"
                ]
            }
        },
        "DisplayPanel.setButtonEnableStatus": {
            "name": "setButtonEnableStatus",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DisplayPanel.loadPanel": {
            "name": "loadPanel",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "panel": [
                    "list[list[typing.Any]]"
                ]
            }
        },
        "DisplayPanel.setSplitterPosition": {
            "name": "setSplitterPosition",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DisplayPanel.eventFilter": {
            "name": "eventFilter",
            "location": 298,
            "return": [],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "event": [
                    "typing.Mapping",
                    "str"
                ]
            }
        },
        "DisplayPanel.createViewWithTrack": {
            "name": "createViewWithTrack",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "track": [
                    "str",
                    "None",
                    "list[str]",
                    "list[int]"
                ],
                "renderer_name": [
                    "None",
                    "str",
                    "dict[, ]",
                    "typing.Type",
                    "dict[str, typing.Any]",
                    "list[dict[, ]]"
                ]
            }
        },
        "DisplayPanel.removeViewFromChildren": {
            "name": "removeViewFromChildren",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_remove": [
                    "str",
                    "int"
                ]
            }
        },
        "DisplayPanel.delViewFromModel": {
            "name": "delViewFromModel",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_remove": [
                    "int",
                    "float"
                ]
            }
        },
        "DisplayPanel.moveView": {
            "name": "moveView",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_move": [
                    "int",
                    "dict[int, dict[, ]]",
                    "list[int]"
                ],
                "panel_index": [
                    "int",
                    "list[dict[, ]]",
                    "float"
                ]
            }
        },
        "DisplayPanel.linkTrack": {
            "name": "linkTrack",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_link": [
                    "str"
                ],
                "panel_index": [
                    "int",
                    "str"
                ]
            }
        },
        "DisplayPanel.copyView": {
            "name": "copyView",
            "location": 340,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_copy": [
                    "int"
                ],
                "panel_index": [
                    "int",
                    "list[dict[, ]]",
                    "float"
                ]
            }
        },
        "DisplayPanel.finishViewOperation": {
            "name": "finishViewOperation",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view": [
                    "int"
                ],
                "panel_index": [
                    "dict[int, typing.Any]",
                    "str"
                ]
            }
        },
        "DisplayPanel.selectView": {
            "name": "selectView",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view": [
                    "int"
                ]
            }
        },
        "DisplayPanel.determineDestination": {
            "name": "determineDestination",
            "location": 357,
            "return": [],
            "arguments": {
                "self": [],
                "panel_index": [
                    "int"
                ]
            }
        }
    },
    "timeview-master/timeview/gui/extra.py": {
        "Widget.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "typing.Text"
                ],
                "panel_info": [
                    "None",
                    "bool",
                    "str"
                ]
            }
        },
        "Spacer.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timeview-master/timeview/gui/model.py": {
        "View.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "track": [],
                "attached_panel": [],
                "renderer_name": [],
                "show": [],
                "color": []
            }
        },
        "View.__str__": {
            "name": "__str__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "View.set_color": {
            "name": "set_color",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "color": []
            }
        },
        "View.change_panel": {
            "name": "change_panel",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "panel": []
            }
        },
        "View.change_renderer": {
            "name": "change_renderer",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "renderer_name": []
            }
        },
        "View.is_selected": {
            "name": "is_selected",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "View.set_selected": {
            "name": "set_selected",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "Panel.__str__": {
            "name": "__str__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel.new_view": {
            "name": "new_view",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "track": [],
                "renderer_name": [],
                "show": [],
                "color": [],
                "pos": []
            }
        },
        "Panel.remove_view": {
            "name": "remove_view",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "Panel.move_view": {
            "name": "move_view",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "to_index": [],
                "from_index": []
            }
        },
        "Panel.get_selected_view": {
            "name": "get_selected_view",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel.set_selected_view": {
            "name": "set_selected_view",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "selected_view": []
            }
        },
        "Panel.selected_track": {
            "name": "selected_track",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel.is_selected": {
            "name": "is_selected",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel.select_me": {
            "name": "select_me",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Panel.get_max_duration": {
            "name": "get_max_duration",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.__init__": {
            "name": "__init__",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.__str__": {
            "name": "__str__",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.set_selected_panel": {
            "name": "set_selected_panel",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "panel": []
            }
        },
        "Model.new_panel": {
            "name": "new_panel",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "Model.remove_panel": {
            "name": "remove_panel",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "Model.move_panel": {
            "name": "move_panel",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "to_index": [],
                "from_index": []
            }
        },
        "Model.get_groups": {
            "name": "get_groups",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.get_linked_views": {
            "name": "get_linked_views",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "Model.move_view_across_panel": {
            "name": "move_view_across_panel",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "view": [],
                "to_panel": []
            }
        },
        "Model.link_track_across_panel": {
            "name": "link_track_across_panel",
            "location": 208,
            "return": [],
            "arguments": {
                "view": [],
                "to_panel": []
            }
        },
        "Model.copy_view_across_panel": {
            "name": "copy_view_across_panel",
            "location": 220,
            "return": [],
            "arguments": {
                "view": [],
                "to_panel": []
            }
        },
        "Model.get_source_panel": {
            "name": "get_source_panel",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "Model.move_view_within_panel": {
            "name": "move_view_within_panel",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "view": [],
                "position": []
            }
        }
    },
    "timeview-master/timeview/gui/plot_area.py": {
        "DumbPlot.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "display_panel": [
                    "int",
                    "float",
                    "str",
                    "None"
                ]
            }
        },
        "DumbPlot.buildLayout": {
            "name": "buildLayout",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DumbPlot.wheelEvent": {
            "name": "wheelEvent",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "DumbPlot.mouseMoved": {
            "name": "mouseMoved",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "DumbPlot.setCursorReadout": {
            "name": "setCursorReadout",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "enabled": [
                    "int",
                    "str"
                ]
            }
        },
        "DumbPlot.onClick": {
            "name": "onClick",
            "location": 115,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "DumbPlot.rendererChanged": {
            "name": "rendererChanged",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view": [
                    "dict[, ]",
                    "bool"
                ]
            }
        },
        "DumbPlot.addView": {
            "name": "addView",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view": [
                    "bool"
                ],
                "forceRangeReset": [
                    "None",
                    "str",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "list[str]"
                ]
            }
        },
        "DumbPlot.removeView": {
            "name": "removeView",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_remove": []
            }
        },
        "DumbPlot.hideView": {
            "name": "hideView",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_hide": [
                    "bool",
                    "dict[str, typing.Any]",
                    "float",
                    "None",
                    "typing.Callable[..., typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "DumbPlot.showView": {
            "name": "showView",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_to_show": [
                    "str",
                    "typing.Hashable",
                    "dict[, ]"
                ]
            }
        },
        "DumbPlot.changeColor": {
            "name": "changeColor",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "view_object": [
                    "float"
                ]
            }
        },
        "DumbPlot.alignViews": {
            "name": "alignViews",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DumbPlot.updateViews": {
            "name": "updateViews",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DumbPlot.zoomChanged": {
            "name": "zoomChanged",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DumbPlot.selectionChanged": {
            "name": "selectionChanged",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "selected_view": []
            }
        },
        "DumbPlot.updateWidestAxis": {
            "name": "updateWidestAxis",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DumbPlot.selected_view": {
            "name": "selected_view",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DumbPlot.setAxesWidths": {
            "name": "setAxesWidths",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "width": [
                    "int",
                    "float"
                ]
            }
        },
        "DumbPlot.blockViewBoxSignals": {
            "name": "blockViewBoxSignals",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DumbPlot.unblockViewBoxSignals": {
            "name": "unblockViewBoxSignals",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timeview-master/timeview/gui/plot_objects.py": {
        "InfiniteLinePlot.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "timeview-master/timeview/gui/rendering.py": {
        "get_renderer_classes": {
            "name": "get_renderer_classes",
            "location": 853,
            "return": [],
            "arguments": {
                "accepts": []
            }
        },
        "LabelEventFilter.eventFilter": {
            "name": "eventFilter",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "event": []
            }
        },
        "Renderer.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.__str__": {
            "name": "__str__",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.set_track": {
            "name": "set_track",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "track": []
            }
        },
        "Renderer.set_view": {
            "name": "set_view",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "Renderer.set_parameters": {
            "name": "set_parameters",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Renderer.allRendererParameterProcessing": {
            "name": "allRendererParameterProcessing",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Renderer.check_y_limits": {
            "name": "check_y_limits",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.get_parameters": {
            "name": "get_parameters",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.strColor": {
            "name": "strColor",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.setAxisLabel": {
            "name": "setAxisLabel",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.configNewAxis": {
            "name": "configNewAxis",
            "location": 165,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.configNewViewBox": {
            "name": "configNewViewBox",
            "location": 186,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.render": {
            "name": "render",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "plot_area": []
            }
        },
        "Renderer.reload": {
            "name": "reload",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.perRendererParameterProcessing": {
            "name": "perRendererParameterProcessing",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Renderer.generateBlankPlotItems": {
            "name": "generateBlankPlotItems",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.getDefaultYRange": {
            "name": "getDefaultYRange",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.changePen": {
            "name": "changePen",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.setPen": {
            "name": "setPen",
            "location": 223,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Renderer.setLimits": {
            "name": "setLimits",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Waveform.getDefaultYRange": {
            "name": "getDefaultYRange",
            "location": 245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Waveform.reload": {
            "name": "reload",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Waveform.perRendererParameterProcessing": {
            "name": "perRendererParameterProcessing",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Waveform.generateBlankPlotItems": {
            "name": "generateBlankPlotItems",
            "location": 261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Waveform.generatePlotData": {
            "name": "generatePlotData",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.__init__": {
            "name": "__init__",
            "location": 328,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.setAxisLabel": {
            "name": "setAxisLabel",
            "location": 338,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.reload": {
            "name": "reload",
            "location": 341,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.set_track": {
            "name": "set_track",
            "location": 345,
            "return": [],
            "arguments": {
                "self": [],
                "track": []
            }
        },
        "Spectrogram.compute_initial_levels": {
            "name": "compute_initial_levels",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.set_parameters": {
            "name": "set_parameters",
            "location": 372,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Spectrogram.perRendererParameterProcessing": {
            "name": "perRendererParameterProcessing",
            "location": 378,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Spectrogram.getDefaultYRange": {
            "name": "getDefaultYRange",
            "location": 388,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.generateBlankPlotItems": {
            "name": "generateBlankPlotItems",
            "location": 391,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.prepareForDeletion": {
            "name": "prepareForDeletion",
            "location": 403,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.generatePlotData": {
            "name": "generatePlotData",
            "location": 407,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.changePen": {
            "name": "changePen",
            "location": 452,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spectrogram.applyColor": {
            "name": "applyColor",
            "location": 456,
            "return": [],
            "arguments": {
                "self": [],
                "color": []
            }
        },
        "TimeValue.getDefaultYRange": {
            "name": "getDefaultYRange",
            "location": 488,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.reload": {
            "name": "reload",
            "location": 491,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.perRendererParameterProcessing": {
            "name": "perRendererParameterProcessing",
            "location": 494,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "TimeValue.generateBlankPlotItems": {
            "name": "generateBlankPlotItems",
            "location": 502,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.perRendererParameterProcessing": {
            "name": "perRendererParameterProcessing",
            "location": 523,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Partition.getDefaultYRange": {
            "name": "getDefaultYRange",
            "location": 529,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.reload": {
            "name": "reload",
            "location": 532,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.clearViewBox": {
            "name": "clearViewBox",
            "location": 541,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.generateBlankPlotItems": {
            "name": "generateBlankPlotItems",
            "location": 555,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.createSegments": {
            "name": "createSegments",
            "location": 569,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.createLines": {
            "name": "createLines",
            "location": 576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.genName": {
            "name": "genName",
            "location": 590,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Partition.createNames": {
            "name": "createNames",
            "location": 607,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.positionLabels": {
            "name": "positionLabels",
            "location": 615,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.nameChanged": {
            "name": "nameChanged",
            "location": 619,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.select_next": {
            "name": "select_next",
            "location": 627,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Partition.focusNew": {
            "name": "focusNew",
            "location": 634,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.select_previous": {
            "name": "select_previous",
            "location": 637,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Partition.calcPartitionNamePlacement": {
            "name": "calcPartitionNamePlacement",
            "location": 642,
            "return": [],
            "arguments": {
                "self": [],
                "label": [],
                "index": [],
                "emit_signal": []
            }
        },
        "Partition.removeSegment": {
            "name": "removeSegment",
            "location": 653,
            "return": [],
            "arguments": {
                "self": [],
                "line": [],
                "modify_track": []
            }
        },
        "Partition.receivePartitionValuePosition": {
            "name": "receivePartitionValuePosition",
            "location": 680,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "mid_point": []
            }
        },
        "Partition.receiveRemoveSegment": {
            "name": "receiveRemoveSegment",
            "location": 684,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "Partition.receivePartitionPosition": {
            "name": "receivePartitionPosition",
            "location": 688,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.receivePartitionBoundaries": {
            "name": "receivePartitionBoundaries",
            "location": 691,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "x_min": [],
                "x_max": []
            }
        },
        "Partition.receivePartitionValue": {
            "name": "receivePartitionValue",
            "location": 694,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.movePartition": {
            "name": "movePartition",
            "location": 699,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Partition.refreshBounds": {
            "name": "refreshBounds",
            "location": 711,
            "return": [],
            "arguments": {
                "self": [],
                "_": [],
                "xrange": []
            }
        },
        "Partition.updateBounds": {
            "name": "updateBounds",
            "location": 723,
            "return": [],
            "arguments": {
                "self": [],
                "line": [],
                "index": []
            }
        },
        "Partition.calcCushion": {
            "name": "calcCushion",
            "location": 734,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.positionChangeFinished": {
            "name": "positionChangeFinished",
            "location": 741,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Partition.updateAdjacentBounds": {
            "name": "updateAdjacentBounds",
            "location": 746,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.changePen": {
            "name": "changePen",
            "location": 751,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.genLine": {
            "name": "genLine",
            "location": 760,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "movable": []
            }
        },
        "PartitionRO.createLines": {
            "name": "createLines",
            "location": 769,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PartitionRO.createNames": {
            "name": "createNames",
            "location": 777,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PartitionEdit.createLines": {
            "name": "createLines",
            "location": 787,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PartitionEdit.insertSegment": {
            "name": "insertSegment",
            "location": 801,
            "return": [],
            "arguments": {
                "self": [],
                "x_pos": []
            }
        },
        "Event.getDefaultYRange": {
            "name": "getDefaultYRange",
            "location": 838,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.reload": {
            "name": "reload",
            "location": 841,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.perRendererParameterProcessing": {
            "name": "perRendererParameterProcessing",
            "location": 844,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Event.render": {
            "name": "render",
            "location": 848,
            "return": [],
            "arguments": {
                "self": [],
                "plot_area": []
            }
        },
        "get_renderer_classes.all_subclasses": {
            "name": "all_subclasses",
            "location": 856,
            "return": [],
            "arguments": {
                "c": []
            }
        }
    },
    "timeview-master/timeview/gui/viewer.py": {
        "Group.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Group.viewsExcludingSource": {
            "name": "viewsExcludingSource",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "view_to_exclude": []
            }
        },
        "Group.join": {
            "name": "join",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "Group.updatePartitionBoundaries": {
            "name": "updatePartitionBoundaries",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "min_bounds": [],
                "max_bounds": []
            }
        },
        "Group.updatePartitionValuePosition": {
            "name": "updatePartitionValuePosition",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "mid_point": []
            }
        },
        "Group.updatePartitionPosition": {
            "name": "updatePartitionPosition",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Group.removeSegment": {
            "name": "removeSegment",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Group.updatePartitionValue": {
            "name": "updatePartitionValue",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "ScrollArea.__init__": {
            "name": "__init__",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "ScrollArea.dropEvent": {
            "name": "dropEvent",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "ScrollArea.dragLeaveEvent": {
            "name": "dragLeaveEvent",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "ScrollArea.sizeHint": {
            "name": "sizeHint",
            "location": 143,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrollArea.keyPressEvent": {
            "name": "keyPressEvent",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "ScrollAreaWidgetContents.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "ScrollAreaWidgetContents.swapWidgets": {
            "name": "swapWidgets",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "positions": []
            }
        },
        "Viewer.__init__": {
            "name": "__init__",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "application": []
            }
        },
        "Viewer.guiAddPanel": {
            "name": "guiAddPanel",
            "location": 241,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "Viewer.createMenus": {
            "name": "createMenus",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.resetEnabledProcessors": {
            "name": "resetEnabledProcessors",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.toggleCursorReadout": {
            "name": "toggleCursorReadout",
            "location": 473,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.newPartition": {
            "name": "newPartition",
            "location": 477,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.getSelectedDisplayPanel": {
            "name": "getSelectedDisplayPanel",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.getSelectedTrack": {
            "name": "getSelectedTrack",
            "location": 496,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.getSelectedView": {
            "name": "getSelectedView",
            "location": 503,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.viewRange": {
            "name": "viewRange",
            "location": 508,
            "return": [],
            "arguments": {
                "self": [],
                "display_panel": []
            }
        },
        "Viewer.pageRight": {
            "name": "pageRight",
            "location": 523,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.translateBy": {
            "name": "translateBy",
            "location": 527,
            "return": [],
            "arguments": {
                "self": [],
                "delta_x": []
            }
        },
        "Viewer.scaleBy": {
            "name": "scaleBy",
            "location": 543,
            "return": [],
            "arguments": {
                "self": [],
                "mag_x": []
            }
        },
        "Viewer.getSelectedPanel": {
            "name": "getSelectedPanel",
            "location": 565,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.setSelectedPanel": {
            "name": "setSelectedPanel",
            "location": 570,
            "return": [],
            "arguments": {
                "self": [],
                "panel": []
            }
        },
        "Viewer.pageLeft": {
            "name": "pageLeft",
            "location": 576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.shiftRight": {
            "name": "shiftRight",
            "location": 581,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.shiftLeft": {
            "name": "shiftLeft",
            "location": 587,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.goToBeginning": {
            "name": "goToBeginning",
            "location": 600,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.goToEnd": {
            "name": "goToEnd",
            "location": 606,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.zoomFit": {
            "name": "zoomFit",
            "location": 615,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.zoomToMatch": {
            "name": "zoomToMatch",
            "location": 626,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.zoomIn": {
            "name": "zoomIn",
            "location": 643,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.zoomOut": {
            "name": "zoomOut",
            "location": 660,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.increaseSize": {
            "name": "increaseSize",
            "location": 664,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.decreaseSize": {
            "name": "decreaseSize",
            "location": 668,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.showInfoDialog": {
            "name": "showInfoDialog",
            "location": 672,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.showProcessorDialog": {
            "name": "showProcessorDialog",
            "location": 677,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.insert_processed_tracks": {
            "name": "insert_processed_tracks",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "new_tracks": []
            }
        },
        "Viewer.status": {
            "name": "status",
            "location": 687,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "timeout": []
            }
        },
        "Viewer.joinGroup": {
            "name": "joinGroup",
            "location": 690,
            "return": [],
            "arguments": {
                "self": [],
                "view": []
            }
        },
        "Viewer.changeSync": {
            "name": "changeSync",
            "location": 694,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.applySync": {
            "name": "applySync",
            "location": 699,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.synchronize": {
            "name": "synchronize",
            "location": 705,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.desynchronize": {
            "name": "desynchronize",
            "location": 718,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.toggleXAxis": {
            "name": "toggleXAxis",
            "location": 723,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.createNewPanel": {
            "name": "createNewPanel",
            "location": 732,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "Viewer.delItem": {
            "name": "delItem",
            "location": 758,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.viewMoved": {
            "name": "viewMoved",
            "location": 777,
            "return": [],
            "arguments": {
                "self": [],
                "panel_index": []
            }
        },
        "Viewer.addFrame": {
            "name": "addFrame",
            "location": 783,
            "return": [],
            "arguments": {
                "self": [],
                "frame": [],
                "index": []
            }
        },
        "Viewer.removeFrame": {
            "name": "removeFrame",
            "location": 790,
            "return": [],
            "arguments": {
                "self": [],
                "frame_to_remove": []
            }
        },
        "Viewer.updateFrames": {
            "name": "updateFrames",
            "location": 798,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.swapFrames": {
            "name": "swapFrames",
            "location": 804,
            "return": [],
            "arguments": {
                "self": [],
                "positions": []
            }
        },
        "Viewer.determineColumnWidths": {
            "name": "determineColumnWidths",
            "location": 817,
            "return": [],
            "arguments": {
                "self": [],
                "widths": []
            }
        },
        "Viewer.moveUp": {
            "name": "moveUp",
            "location": 831,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.moveDown": {
            "name": "moveDown",
            "location": 838,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.selectNext": {
            "name": "selectNext",
            "location": 845,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.selectPrevious": {
            "name": "selectPrevious",
            "location": 853,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.selectFrame": {
            "name": "selectFrame",
            "location": 861,
            "return": [],
            "arguments": {
                "self": [],
                "frame_to_select": []
            }
        },
        "Viewer.frameToMove": {
            "name": "frameToMove",
            "location": 885,
            "return": [],
            "arguments": {
                "self": [],
                "frame_to_move": []
            }
        },
        "Viewer.whereToInsert": {
            "name": "whereToInsert",
            "location": 889,
            "return": [],
            "arguments": {
                "self": [],
                "insert_here": []
            }
        },
        "Viewer.moveFrame": {
            "name": "moveFrame",
            "location": 896,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.moveToEnd": {
            "name": "moveToEnd",
            "location": 911,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.checkAxesWidths": {
            "name": "checkAxesWidths",
            "location": 917,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.showAbout": {
            "name": "showAbout",
            "location": 931,
            "return": [],
            "arguments": {}
        },
        "Viewer.createHelpWindow": {
            "name": "createHelpWindow",
            "location": 935,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.guiAddView": {
            "name": "guiAddView",
            "location": 967,
            "return": [],
            "arguments": {
                "self": [],
                "file_names": [],
                "renderer": []
            }
        },
        "Viewer.guiSaveView": {
            "name": "guiSaveView",
            "location": 993,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.guiRevertView": {
            "name": "guiRevertView",
            "location": 1013,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.guiDelView": {
            "name": "guiDelView",
            "location": 1036,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.showRenderDialog": {
            "name": "showRenderDialog",
            "location": 1045,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Viewer.setTrackMenuStatus": {
            "name": "setTrackMenuStatus",
            "location": 1055,
            "return": [],
            "arguments": {
                "self": [],
                "enabled": []
            }
        },
        "Viewer.evalTrackMenu": {
            "name": "evalTrackMenu",
            "location": 1064,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeView.__init__": {
            "name": "__init__",
            "location": 1069,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeView._log_handler": {
            "name": "_log_handler",
            "location": 1106,
            "return": [],
            "arguments": {
                "msg_type": [],
                "msg_log_context": [],
                "msg_string": []
            }
        },
        "TimeView._excepthook": {
            "name": "_excepthook",
            "location": 1128,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "exc_traceback": []
            }
        },
        "TimeView.start": {
            "name": "start",
            "location": 1137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeView._exit": {
            "name": "_exit",
            "location": 1141,
            "return": [],
            "arguments": {
                "self": [],
                "status": []
            }
        },
        "TimeView.add_view": {
            "name": "add_view",
            "location": 1148,
            "return": [],
            "arguments": {
                "self": [],
                "track_obj": [],
                "panel_index": [],
                "renderer_name": []
            }
        },
        "TimeView.add_view_from_file": {
            "name": "add_view_from_file",
            "location": 1164,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "panel_index": []
            }
        }
    },
    "timeview-master/timeview/gui/view_table.py": {
        "createQColor": {
            "name": "createQColor",
            "location": 388,
            "return": [],
            "arguments": {
                "rgb": []
            }
        },
        "ShowCheckBox.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTable.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "display_panel": [],
                "col_widths": []
            }
        },
        "ViewTable.colNameToIndex": {
            "name": "colNameToIndex",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ViewTable.loadPanel": {
            "name": "loadPanel",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "panel_obj": []
            }
        },
        "ViewTable.delView": {
            "name": "delView",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "view_to_remove": []
            }
        },
        "ViewTable.selectedView": {
            "name": "selectedView",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTable.selectedRow": {
            "name": "selectedRow",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTable.evalSelection": {
            "name": "evalSelection",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTable.selectRow": {
            "name": "selectRow",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "row": [],
                "bypass": []
            }
        },
        "ViewTable.changeRenderer": {
            "name": "changeRenderer",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTable.indexFromWidget": {
            "name": "indexFromWidget",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "widget": []
            }
        },
        "ViewTable.rowFromWidget": {
            "name": "rowFromWidget",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "widget": []
            }
        },
        "ViewTable.toggleView": {
            "name": "toggleView",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "ViewTable._configureFileLabel": {
            "name": "_configureFileLabel",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "view_object": []
            }
        },
        "ViewTable._configureTrackItem": {
            "name": "_configureTrackItem",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "view_object": []
            }
        },
        "ViewTable._configureComboBox": {
            "name": "_configureComboBox",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "view_object": []
            }
        },
        "ViewTable._configureShowBox": {
            "name": "_configureShowBox",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "view_object": []
            }
        },
        "ViewTable._configureColor": {
            "name": "_configureColor",
            "location": 246,
            "return": [],
            "arguments": {
                "self": [],
                "view_object": []
            }
        },
        "ViewTable.changeColor": {
            "name": "changeColor",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTable.addView": {
            "name": "addView",
            "location": 274,
            "return": [],
            "arguments": {
                "self": [],
                "view_object": [],
                "setColor": []
            }
        },
        "ViewTable.calcColumnWidths": {
            "name": "calcColumnWidths",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewTable.setColumnWidths": {
            "name": "setColumnWidths",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "widths": []
            }
        },
        "ViewTable.viewPopup": {
            "name": "viewPopup",
            "location": 309,
            "return": [],
            "arguments": {
                "self": [],
                "point": []
            }
        }
    },
    "timeview-master/timeview/gui/__init__.py": {},
    "timeview-master/timeview/manager/dataset_manager.py": {
        "TableModel.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str",
                    "list[str]",
                    "None",
                    "int"
                ],
                "parent": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "TableModel.rowCount": {
            "name": "rowCount",
            "location": 51,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "None",
                    "bool",
                    "typing.Callable[, ]"
                ]
            }
        },
        "TableModel.columnCount": {
            "name": "columnCount",
            "location": 54,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "_parent": [
                    "None",
                    "typing.Callable[, ]",
                    "tuple[str]",
                    "bool"
                ]
            }
        },
        "TableModel.headerData": {
            "name": "headerData",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "col": [
                    "tuple[typing.Union[int,int]]",
                    "bool"
                ],
                "orientation": [
                    "str",
                    "int",
                    "float"
                ],
                "role": [
                    "int",
                    "list[tuple[typing.Union[int,int]]]",
                    "str",
                    "list[]",
                    "None",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "TableModel.data": {
            "name": "data",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "q_index": [],
                "role": []
            }
        },
        "TableModel.flags": {
            "name": "flags",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "q_index": [
                    "str",
                    "float",
                    "dict[str, int]",
                    "bool"
                ]
            }
        },
        "TableModel.setData": {
            "name": "setData",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "q_index": [],
                "value": [
                    "bool",
                    "str",
                    "float",
                    "typing.Mapping",
                    "dict[str, str]"
                ],
                "_role": [
                    "bool",
                    "list[dict[, ]]",
                    "str"
                ]
            }
        },
        "TableModel.change_layout": {
            "name": "change_layout",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableModelDataset.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableModelDataset.refresh": {
            "name": "refresh",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableModelFile.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableModelFile.flags": {
            "name": "flags",
            "location": 110,
            "return": [
                "int",
                "str"
            ],
            "arguments": {
                "self": [],
                "q_index": [
                    "str",
                    "float",
                    "dict[str, int]",
                    "bool"
                ]
            }
        },
        "TableModelFile.refresh": {
            "name": "refresh",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ManagerWindow.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "int",
                    "str",
                    "typing.Callable[, ]"
                ],
                "parent": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "ManagerWindow.keyPressEvent": {
            "name": "keyPressEvent",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "ManagerWindow.clicked_dataset": {
            "name": "clicked_dataset",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q_index": []
            }
        },
        "ManagerWindow.double_clicked_file": {
            "name": "double_clicked_file",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "q_index": []
            }
        },
        "ManagerWindow.add_dataset": {
            "name": "add_dataset",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_e": [
                    "bool",
                    "typing.Callable[, ]",
                    "typing.Type",
                    "typing.Iterable[bytes]"
                ]
            }
        },
        "ManagerWindow.del_dataset": {
            "name": "del_dataset",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_e": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "ManagerWindow.add_file": {
            "name": "add_file",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_e": [
                    "bool",
                    "list[dict[str, int]]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "ManagerWindow.del_file": {
            "name": "del_file",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_e": [
                    "bool",
                    "list[dict[str, int]]",
                    "None",
                    "dict[, ]"
                ]
            }
        }
    },
    "timeview-master/timeview/manager/dataset_manager_model.py": {
        "Mixin.__tablename__": {
            "name": "__tablename__",
            "location": 13,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Mixin.__len__": {
            "name": "__len__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mixin.__getitem__": {
            "name": "__getitem__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Mixin.__setitem__": {
            "name": "__setitem__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "value": []
            }
        },
        "Mixin.__repr__": {
            "name": "__repr__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "engine": []
            }
        },
        "Model.add_dataset": {
            "name": "add_dataset",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "dataset": []
            }
        },
        "Model.add_files": {
            "name": "add_files",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "dataset_id": [],
                "files": []
            }
        },
        "Model.del_dataset": {
            "name": "del_dataset",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "dataset_id": []
            }
        },
        "Model.del_file": {
            "name": "del_file",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "file_id": []
            }
        },
        "Model.get_dataset": {
            "name": "get_dataset",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "dataset_id": []
            }
        },
        "Model.get_file": {
            "name": "get_file",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "file_id": [],
                "dataset_id": []
            }
        },
        "TestModel.setUp": {
            "name": "setUp",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestModel.test_allthethings": {
            "name": "test_allthethings",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "timeview-master/timeview/manager/__init__.py": {}
}
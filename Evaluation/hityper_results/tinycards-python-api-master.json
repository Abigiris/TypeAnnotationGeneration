{
    "tinycards-python-api-master/setup.py": {},
    "tinycards-python-api-master/examples/csv_to_deck.py": {
        "csv_to_deck": {
            "name": "csv_to_deck",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "csv_path": [
                    "str"
                ]
            }
        }
    },
    "tinycards-python-api-master/tests/client_test.py": {
        "ClientTest.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTest.tearDown": {
            "name": "tearDown",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTest.test_get_trends_returns_10_decks": {
            "name": "test_get_trends_returns_10_decks",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTest.test_subscribe": {
            "name": "test_subscribe",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTest.test_unsubscribe": {
            "name": "test_unsubscribe",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTest.test_favorite_functionality": {
            "name": "test_favorite_functionality",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTest.test_search": {
            "name": "test_search",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tests/deck_test.py": {
        "DeckTest.test_cards_from_csv": {
            "name": "test_cards_from_csv",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeckTest.test_cards_to_csv": {
            "name": "test_cards_to_csv",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeckTest.test_shareable_link": {
            "name": "test_shareable_link",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tests/image_utils_test.py": {
        "path_to": {
            "name": "path_to",
            "location": 36,
            "return": [],
            "arguments": {
                "filename": [
                    "str",
                    "None"
                ]
            }
        },
        "ImageUtilsTest.test_mime_type_from_bytes": {
            "name": "test_mime_type_from_bytes",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImageUtilsTest.test_mime_type_from_path": {
            "name": "test_mime_type_from_path",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImageUtilsTest.test_get_image": {
            "name": "test_get_image",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tests/integration_test.py": {
        "path_to": {
            "name": "path_to",
            "location": 234,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "TestIntegration._clean_up": {
            "name": "_clean_up",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration.setUp": {
            "name": "setUp",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_create_empty_deck": {
            "name": "_test_create_empty_deck",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_update_deck_without_change": {
            "name": "_test_update_deck_without_change",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_update_deck_title": {
            "name": "_test_update_deck_title",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_add_cards": {
            "name": "_test_add_cards",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_delete_deck": {
            "name": "_test_delete_deck",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_create_shareable_deck": {
            "name": "_test_create_shareable_deck",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_create_advanced_deck": {
            "name": "_test_create_advanced_deck",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._assert_advanced_options_are_set": {
            "name": "_assert_advanced_options_are_set",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "deck": []
            }
        },
        "TestIntegration._test_create_deck_with_cover_from_file": {
            "name": "_test_create_deck_with_cover_from_file",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._test_create_deck_with_cover_from_url": {
            "name": "_test_create_deck_with_cover_from_url",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration._assert_cover_was_updated_with_file": {
            "name": "_assert_cover_was_updated_with_file",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filepath": [],
                "deck_cover_url": []
            }
        },
        "TestIntegration._assert_cover_was_updated_with_url": {
            "name": "_assert_cover_was_updated_with_url",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "deck_cover_url": []
            }
        },
        "TestIntegration._delete_deck": {
            "name": "_delete_deck",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "deck_id": []
            }
        },
        "TestIntegration.test_integration": {
            "name": "test_integration",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntegration.tearDown": {
            "name": "tearDown",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tests/json_conversion_test.py": {
        "JsonConversionTest.test_cards_from_csv": {
            "name": "test_cards_from_csv",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JsonConversionTest.test_cards_to_csv": {
            "name": "test_cards_to_csv",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tests/user_test.py": {
        "UserTest.test_user_constructor_sets_correct_properties": {
            "name": "test_user_constructor_sets_correct_properties",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tinycards/__init__.py": {},
    "tinycards-python-api-master/tinycards/client/cli.py": {
        "_get_api_from_env": {
            "name": "_get_api_from_env",
            "location": 19,
            "return": [
                "tuple[typing.Union[RestApi,int]]"
            ],
            "arguments": {}
        },
        "login": {
            "name": "login",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "identifier": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "logout": {
            "name": "logout",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_list_decks": {
            "name": "_list_decks",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_create_deck": {
            "name": "_create_deck",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "deck_name": [
                    "str"
                ]
            }
        },
        "decks": {
            "name": "decks",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "action": [
                    "str",
                    "bool",
                    "list[typing.Union[int,typing.Any]]",
                    "None"
                ],
                "deck_name": []
            }
        }
    },
    "tinycards-python-api-master/tinycards/client/tinycards.py": {
        "Tinycards.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "None",
                    "str"
                ],
                "password": [
                    "None",
                    "str"
                ],
                "silent": [
                    "bool"
                ]
            }
        },
        "Tinycards.get_user_info": {
            "name": "get_user_info",
            "location": 33,
            "return": [
                "str",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tinycards.get_trends": {
            "name": "get_trends",
            "location": 46,
            "return": [
                "int",
                "list[str]",
                "set[]",
                "set[str]"
            ],
            "arguments": {
                "self": [],
                "types": [
                    "None",
                    "str",
                    "typing.Type"
                ],
                "limit": [
                    "int"
                ],
                "page": [
                    "int"
                ],
                "from_language": [
                    "typing.Text"
                ]
            }
        },
        "Tinycards.subscribe": {
            "name": "subscribe",
            "location": 70,
            "return": [
                "tuple[typing.Union[str,str]]",
                "list[str]",
                "typing.Literal",
                "None",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Tinycards.unsubscribe": {
            "name": "unsubscribe",
            "location": 83,
            "return": [
                "str",
                "int",
                "list[tuple[typing.Union[str,typing.Any]]]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Tinycards.get_decks": {
            "name": "get_decks",
            "location": 98,
            "return": [
                "str",
                "tuple[typing.Union[typing.Any,typing.Any]]",
                "dict[typing.Any, dict[str, str]]",
                "int"
            ],
            "arguments": {
                "self": [],
                "include_cards": [
                    "bool"
                ]
            }
        },
        "Tinycards.get_deck": {
            "name": "get_deck",
            "location": 110,
            "return": [
                "str",
                "typing.Type",
                "None",
                "tuple[typing.Union[typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal]]"
            ],
            "arguments": {
                "self": [],
                "deck_id": [
                    "str",
                    "None"
                ],
                "include_cards": [
                    "bool"
                ]
            }
        },
        "Tinycards.find_deck_by_title": {
            "name": "find_deck_by_title",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "deck_title": [
                    "str"
                ]
            }
        },
        "Tinycards.create_deck": {
            "name": "create_deck",
            "location": 148,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "deck": [
                    "float",
                    "str",
                    "tuple[typing.Union[str,str]]",
                    "bool"
                ]
            }
        },
        "Tinycards.update_deck": {
            "name": "update_deck",
            "location": 162,
            "return": [
                "str",
                "typing.Type",
                "dict[str, typing.Any]"
            ],
            "arguments": {
                "self": [],
                "deck": [
                    "int",
                    "str"
                ]
            }
        },
        "Tinycards.delete_deck": {
            "name": "delete_deck",
            "location": 176,
            "return": [
                "dict[str, typing.Any]",
                "dict[str, dict[str, bool]]",
                "dict[str, int]",
                "dict[int, typing.Any]",
                "dict[, ]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "deck_id": [
                    "str",
                    "int"
                ]
            }
        },
        "Tinycards.get_favorites": {
            "name": "get_favorites",
            "location": 192,
            "return": [
                "int",
                "str",
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "Tinycards.add_favorite": {
            "name": "add_favorite",
            "location": 209,
            "return": [
                "list[]",
                "int"
            ],
            "arguments": {
                "self": [],
                "deck_id": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "Tinycards.remove_favorite": {
            "name": "remove_favorite",
            "location": 223,
            "return": [
                "int",
                "dict[str, str]",
                "str",
                "None"
            ],
            "arguments": {
                "self": [],
                "favorite_id": [
                    "int",
                    "str"
                ]
            }
        },
        "Tinycards.search": {
            "name": "search",
            "location": 240,
            "return": [
                "int",
                "tuple[]",
                "typing.DefaultDict"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "typing.Type",
                    "Exception",
                    "str",
                    "typing.Mapping",
                    "None"
                ],
                "use_fuzzy_search": [
                    "bool"
                ],
                "types": [
                    "None",
                    "typing.Type",
                    "Exception",
                    "str",
                    "typing.Mapping"
                ],
                "limit": [
                    "int"
                ],
                "page": [
                    "int"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/client/__init__.py": {},
    "tinycards-python-api-master/tinycards/model/card.py": {
        "current_timestamp": {
            "name": "current_timestamp",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Card.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "front": [
                    "int",
                    "str",
                    "float"
                ],
                "back": [
                    "int",
                    "str",
                    "float"
                ],
                "card_id": [
                    "None",
                    "int",
                    "str"
                ],
                "creation_timestamp": [
                    "None",
                    "int",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Card.__str__": {
            "name": "__str__",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Card.__repr__": {
            "name": "__repr__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/concept.py": {
        "Concept.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fact": [
                    "str",
                    "int",
                    "dict[, ]",
                    "dict[str, str]"
                ],
                "concept_id": [
                    "None",
                    "str",
                    "int",
                    "float"
                ],
                "creation_timestamp": [
                    "None",
                    "tuple[typing.Union[str,str,str]]",
                    "int",
                    "str",
                    "dict[str, dict[, ]]",
                    "set[int]"
                ],
                "update_timestamp": [
                    "None",
                    "int",
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "Concept.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Concept.__repr__": {
            "name": "__repr__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/deck.py": {
        "Deck.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "int",
                    "list[float]",
                    "str",
                    "None",
                    "list[int]"
                ],
                "description": [
                    "None",
                    "int",
                    "list[float]",
                    "str",
                    "list[int]"
                ],
                "cover": [
                    "None",
                    "int",
                    "list[float]",
                    "str",
                    "list[int]"
                ],
                "deck_id": [
                    "None",
                    "str"
                ],
                "front_language": [
                    "None",
                    "int",
                    "str"
                ],
                "back_language": [
                    "None",
                    "int",
                    "str"
                ],
                "cards": [
                    "None",
                    "int",
                    "list[float]",
                    "str",
                    "list[int]"
                ],
                "private": [
                    "bool"
                ],
                "shareable": [
                    "bool"
                ],
                "slug": [
                    "typing.Text"
                ],
                "compact_id": [
                    "typing.Text"
                ],
                "blacklisted_side_indices": [
                    "None",
                    "int",
                    "list[float]",
                    "str",
                    "list[int]"
                ],
                "blacklisted_question_types": [
                    "None",
                    "str",
                    "bool"
                ],
                "grading_modes": [
                    "None",
                    "bool",
                    "float"
                ],
                "tts_languages": [
                    "None",
                    "int",
                    "list[float]",
                    "str",
                    "list[int]"
                ]
            }
        },
        "Deck.__str__": {
            "name": "__str__",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Deck.__repr__": {
            "name": "__repr__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deck.add_card": {
            "name": "add_card",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "card": []
            }
        },
        "Deck.add_cards_from_csv": {
            "name": "add_cards_from_csv",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "csv_file": [
                    "int",
                    "str",
                    "None",
                    "float"
                ],
                "front_column": [
                    "typing.Text"
                ],
                "back_column": [
                    "typing.Text"
                ]
            }
        },
        "Deck.save_cards_to_csv": {
            "name": "save_cards_to_csv",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "csv_file": [
                    "str"
                ],
                "front_column": [
                    "typing.Text"
                ],
                "back_column": [
                    "typing.Text"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/fact.py": {
        "Fact.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "None",
                    "str",
                    "bool",
                    "typing.Iterable[str]"
                ],
                "fact_id": [
                    "None",
                    "str"
                ],
                "fact_type": [
                    "None",
                    "str",
                    "dict[str, list[typing.Any]]",
                    "list[]",
                    "bool",
                    "list[str]"
                ],
                "image_url": [
                    "None",
                    "str",
                    "list[str]",
                    "tuple[str]"
                ],
                "tts_url": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "Fact.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Fact.__repr__": {
            "name": "__repr__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/favorite.py": {
        "Favorite.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str",
                    "int",
                    "typing.Sequence[str]"
                ],
                "deck": [
                    "int",
                    "str",
                    "float"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/searchable_data.py": {
        "SearchableData.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str",
                    "float"
                ],
                "name": [
                    "str",
                    "bool"
                ],
                "description": [
                    "str",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "list[]"
                ],
                "average_freshness": [
                    "str",
                    "int",
                    "tuple[typing.Union[float,float]]",
                    "list[]"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/side.py": {
        "Side.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "side_id": [
                    "None",
                    "str",
                    "int",
                    "bytes"
                ],
                "concepts": [
                    "None",
                    "int",
                    "str",
                    "bytes",
                    "list[str]",
                    "tuple[]"
                ]
            }
        },
        "Side.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Side.__repr__": {
            "name": "__repr__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/trendable.py": {
        "Trendable.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str",
                    "int"
                ],
                "type_": [
                    "str",
                    "bool",
                    "None"
                ],
                "data": [
                    "str",
                    "dict[, ]",
                    "bool",
                    "dict[str, str]",
                    "None",
                    "bytes"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/trendable_data.py": {
        "TrendableData.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "blacklisted_question_types": [
                    "str",
                    "bool",
                    "typing.Sequence[typing.Any]",
                    "None"
                ],
                "blacklisted_side_indices": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "card_count": [
                    "int",
                    "list[str]"
                ],
                "compact_id": [
                    "int",
                    "str",
                    "None",
                    "set[int]"
                ],
                "cover_image_url": [
                    "str",
                    "list[str]",
                    "int",
                    "None"
                ],
                "created_at": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "deck_groups": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "description": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "enabled": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "favorite_count": [
                    "int",
                    "list[str]"
                ],
                "from_language": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "fullname": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "grading_modes": [
                    "bool",
                    "list[list[int]]",
                    "str",
                    "None",
                    "tuple[typing.Union[float,float]]"
                ],
                "hashes": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "id_": [
                    "str",
                    "bool",
                    "bytes"
                ],
                "image_url": [
                    "str",
                    "bytes",
                    "list[int]",
                    "None"
                ],
                "name": [
                    "str",
                    "bool",
                    "typing.Any",
                    "list[str]"
                ],
                "picture": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "private": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "shareable": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "slug": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "tag_ids": [
                    "str",
                    "None",
                    "typing.Mapping",
                    "int"
                ],
                "tts_languages": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "ui_language": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "updated_at": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ],
                "user_id": [
                    "int",
                    "str",
                    "dict[, ]",
                    "float",
                    "list[int]"
                ],
                "username": [
                    "int",
                    "str",
                    "bytes",
                    "dict[, ]",
                    "None"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/user.py": {
        "User.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "creation_date": [
                    "str",
                    "bool",
                    "None"
                ],
                "email": [
                    "str",
                    "bool",
                    "None"
                ],
                "fullname": [
                    "str",
                    "bool",
                    "None"
                ],
                "user_id": [
                    "str",
                    "list[str]",
                    "None",
                    "bool"
                ],
                "learning_language": [
                    "str",
                    "bool",
                    "None"
                ],
                "picture_url": [
                    "str",
                    "None"
                ],
                "subscribed": [
                    "str",
                    "bool",
                    "None"
                ],
                "subscriber_count": [
                    "bool",
                    "str",
                    "typing.Any",
                    "None"
                ],
                "subscription_count": [
                    "bool",
                    "str",
                    "typing.Any",
                    "None"
                ],
                "ui_language": [
                    "str",
                    "bool",
                    "None"
                ],
                "username": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/model/__init__.py": {},
    "tinycards-python-api-master/tinycards/networking/form_utils.py": {
        "to_multipart_form": {
            "name": "to_multipart_form",
            "location": 19,
            "return": [
                "MultipartEncoder"
            ],
            "arguments": {
                "data": [],
                "boundary": [
                    "None",
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]",
                    "list[str]"
                ]
            }
        },
        "_has_image_file": {
            "name": "_has_image_file",
            "location": 32,
            "return": [
                "bool",
                "str",
                "bytes"
            ],
            "arguments": {
                "data": [
                    "str",
                    "bytes"
                ]
            }
        },
        "_get_image": {
            "name": "_get_image",
            "location": 41,
            "return": [
                "tuple[typing.Union[typing.Text,typing.IO,int,dict[str, list[typing.Any]],tuple[typing.Union[str,str,str,str]]]]",
                "tuple[typing.Union[typing.Text,int,dict[str, list[typing.Any]],tuple[typing.Union[str,str,str,str]]]]"
            ],
            "arguments": {
                "path_or_url": [
                    "str"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/networking/image_utils.py": {
        "get_image": {
            "name": "get_image",
            "location": 6,
            "return": [
                "tuple[BytesIO]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "dict[str, str]",
                    "int"
                ]
            }
        },
        "_mime_type": {
            "name": "_mime_type",
            "location": 22,
            "return": [
                "str",
                "bytes"
            ],
            "arguments": {
                "img": [],
                "headers": [
                    "str",
                    "bytes"
                ],
                "url": [
                    "str",
                    "None",
                    "bool",
                    "list[str]",
                    "tuple[typing.Union[str,None,str,None]]",
                    "set[str]"
                ]
            }
        },
        "mime_type_from_path": {
            "name": "mime_type_from_path",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "img_path": [
                    "str"
                ]
            }
        },
        "mime_type_from_bytes": {
            "name": "mime_type_from_bytes",
            "location": 52,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "img_bytes": [
                    "tuple[typing.Union[int,int]]",
                    "str"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/networking/json_converter.py": {
        "json_to_user": {
            "name": "json_to_user",
            "location": 10,
            "return": [
                "User"
            ],
            "arguments": {
                "json_data": []
            }
        },
        "json_to_fact": {
            "name": "json_to_fact",
            "location": 31,
            "return": [
                "Fact"
            ],
            "arguments": {
                "json_data": []
            }
        },
        "fact_to_json": {
            "name": "fact_to_json",
            "location": 44,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "fact_obj": [
                    "list[str]",
                    "int"
                ]
            }
        },
        "json_to_concept": {
            "name": "json_to_concept",
            "location": 57,
            "return": [
                "Concept"
            ],
            "arguments": {
                "json_data": [
                    "bytes",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "concept_to_json": {
            "name": "concept_to_json",
            "location": 69,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "concept_obj": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "json_to_side": {
            "name": "json_to_side",
            "location": 84,
            "return": [
                "Side"
            ],
            "arguments": {
                "json_data": [
                    "bytes",
                    "list[list[str]]"
                ]
            }
        },
        "side_to_json": {
            "name": "side_to_json",
            "location": 94,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "side_obj": [
                    "bytes",
                    "str"
                ]
            }
        },
        "json_to_card": {
            "name": "json_to_card",
            "location": 106,
            "return": [
                "Card"
            ],
            "arguments": {
                "json_data": [
                    "str",
                    "list[str]",
                    "bytes"
                ]
            }
        },
        "card_to_json": {
            "name": "card_to_json",
            "location": 117,
            "return": [
                "dict[typing.Text, list[]]"
            ],
            "arguments": {
                "card_obj": [
                    "int",
                    "float",
                    "list[]"
                ]
            }
        },
        "json_to_deck": {
            "name": "json_to_deck",
            "location": 137,
            "return": [
                "Deck"
            ],
            "arguments": {
                "json_data": [
                    "str",
                    "bytes"
                ]
            }
        },
        "deck_to_json": {
            "name": "deck_to_json",
            "location": 159,
            "return": [
                "dict[typing.Text, typing.Text]"
            ],
            "arguments": {
                "deck_obj": [
                    "int",
                    "None"
                ],
                "as_json_str": [
                    "bool"
                ]
            }
        },
        "as_obj_or_json_str": {
            "name": "as_obj_or_json_str",
            "location": 196,
            "return": [
                "int",
                "list[list[str]]",
                "float",
                "tuple[typing.Union[str,str]]",
                "list[str]"
            ],
            "arguments": {
                "obj": [
                    "int",
                    "list[list[str]]",
                    "float",
                    "tuple[typing.Union[str,str]]",
                    "list[str]"
                ],
                "as_json_str": [
                    "int",
                    "list[list[str]]",
                    "float",
                    "tuple[typing.Union[str,str]]",
                    "list[str]"
                ]
            }
        },
        "json_to_trendable": {
            "name": "json_to_trendable",
            "location": 202,
            "return": [
                "Trendable"
            ],
            "arguments": {
                "json_data": []
            }
        },
        "trendable_to_json": {
            "name": "trendable_to_json",
            "location": 248,
            "return": [
                "dict[typing.Text, dict[typing.Text, ]]"
            ],
            "arguments": {
                "trendable_obj": [
                    "bool"
                ]
            }
        },
        "json_to_searchable": {
            "name": "json_to_searchable",
            "location": 291,
            "return": [
                "Trendable"
            ],
            "arguments": {
                "json_data": []
            }
        },
        "json_to_favorite": {
            "name": "json_to_favorite",
            "location": 316,
            "return": [
                "Favorite"
            ],
            "arguments": {
                "json_data": [
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "favorite_to_json": {
            "name": "favorite_to_json",
            "location": 324,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "favorite_obj": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/networking/rest_api.py": {
        "_should_retry_login": {
            "name": "_should_retry_login",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "exception": [
                    "bool",
                    "Exception",
                    "dict[str, str]",
                    "dict[str, list[typing.Any]]"
                ]
            }
        },
        "RestApi.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "jwt": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "RestApi.login": {
            "name": "login",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": [
                    "None",
                    "str"
                ],
                "password": [
                    "None",
                    "str",
                    "dict[str, str]"
                ],
                "silent": [
                    "bool"
                ]
            }
        },
        "RestApi.get_user_info": {
            "name": "get_user_info",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "int"
                ]
            }
        },
        "RestApi.get_trends": {
            "name": "get_trends",
            "location": 105,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "types": [
                    "str",
                    "dict[str, typing.Any]"
                ],
                "limit": [
                    "int"
                ],
                "page": [
                    "int"
                ],
                "from_language": [
                    "typing.Text"
                ]
            }
        },
        "RestApi.subscribe": {
            "name": "subscribe",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "int",
                    "typing.Sequence[typing.Optional[str]]"
                ]
            }
        },
        "RestApi.unsubscribe": {
            "name": "unsubscribe",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "int",
                    "typing.Sequence[typing.Optional[str]]"
                ]
            }
        },
        "RestApi.get_decks": {
            "name": "get_decks",
            "location": 178,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int",
                    "None"
                ],
                "no_cards": [
                    "bool"
                ]
            }
        },
        "RestApi.get_deck": {
            "name": "get_deck",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "deck_id": [],
                "user_id": [
                    "int",
                    "str"
                ],
                "include_cards": [
                    "bool"
                ]
            }
        },
        "RestApi.create_deck": {
            "name": "create_deck",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "deck": [
                    "bool",
                    "float"
                ]
            }
        },
        "RestApi.update_deck": {
            "name": "update_deck",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "deck": [
                    "int",
                    "str"
                ],
                "user_id": [
                    "int",
                    "str"
                ]
            }
        },
        "RestApi.delete_deck": {
            "name": "delete_deck",
            "location": 288,
            "return": [],
            "arguments": {
                "self": [],
                "deck_id": [
                    "str"
                ]
            }
        },
        "RestApi.get_favorites": {
            "name": "get_favorites",
            "location": 313,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "int",
                    "list[]"
                ]
            }
        },
        "RestApi.add_favorite": {
            "name": "add_favorite",
            "location": 342,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "list[]"
                ],
                "deck_id": [
                    "int",
                    "str",
                    "tuple[typing.Union[str,None,str]]"
                ]
            }
        },
        "RestApi.remove_favorite": {
            "name": "remove_favorite",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "int",
                    "str"
                ],
                "favorite_id": [
                    "int",
                    "str"
                ]
            }
        },
        "RestApi.search": {
            "name": "search",
            "location": 385,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "typing.Mapping",
                    "list[str]"
                ],
                "use_fuzzy_search": [
                    "bool"
                ],
                "types": [
                    "str",
                    "list[str]"
                ],
                "limit": [
                    "int"
                ],
                "page": [
                    "int"
                ]
            }
        }
    },
    "tinycards-python-api-master/tinycards/networking/__init__.py": {},
    "tinycards-python-api-master/tinycards/networking/error/invalid_response.py": {},
    "tinycards-python-api-master/tinycards/networking/error/__init__.py": {}
}
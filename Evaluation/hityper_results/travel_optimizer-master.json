{
    "travel_optimizer-master/setup.py": {
        "MypyCleanCommand.initialize_options": {
            "name": "initialize_options",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyCleanCommand.finalize_options": {
            "name": "finalize_options",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyCleanCommand.run": {
            "name": "run",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyCommand.initialize_options": {
            "name": "initialize_options",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyCommand.finalize_options": {
            "name": "finalize_options",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MypyCommand.run": {
            "name": "run",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QualityCommand.initialize_options": {
            "name": "initialize_options",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QualityCommand.finalize_options": {
            "name": "finalize_options",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QualityCommand.run": {
            "name": "run",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "travel_optimizer-master/docs/conf.py": {},
    "travel_optimizer-master/tests/test_travel_optimizer.py": {
        "TestTravel_optimizer.setUp": {
            "name": "setUp",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTravel_optimizer.tearDown": {
            "name": "tearDown",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTravel_optimizer.test_000_something": {
            "name": "test_000_something",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTravel_optimizer.test_command_line_interface": {
            "name": "test_command_line_interface",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "travel_optimizer-master/tests/__init__.py": {},
    "travel_optimizer-master/travel_optimizer/cli.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "args": [
                    "None"
                ]
            }
        }
    },
    "travel_optimizer-master/travel_optimizer/travel_optimizer.py": {},
    "travel_optimizer-master/travel_optimizer/__init__.py": {},
    "travel_optimizer-master/types/stubs/setuptools/__init__.py": {
        "setup": {
            "name": "setup",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "find_packages": {
            "name": "find_packages",
            "location": 5,
            "return": [],
            "arguments": {
                "where": [],
                "exclude": [],
                "include": []
            }
        }
    }
}
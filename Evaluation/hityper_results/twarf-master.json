{
    "twarf-master/loadtest.py": {},
    "twarf-master/setup.py": {
        "read": {
            "name": "read",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "find_version": {
            "name": "find_version",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "twarf-master/tests/test_proxy.py": {
        "RequestTest.test_temporary_redirect": {
            "name": "test_temporary_redirect",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProxyTest.test_callback_rules": {
            "name": "test_callback_rules",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twarf-master/tests/test_version.py": {
        "VersionTest.test_version": {
            "name": "test_version",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twarf-master/tests/__init__.py": {},
    "twarf-master/tests/rules/test_flow.py": {},
    "twarf-master/tests/rules/test_http.py": {},
    "twarf-master/tests/rules/test_rules.py": {},
    "twarf-master/tests/rules/test_session.py": {},
    "twarf-master/tests/rules/__init__.py": {},
    "twarf-master/twarf/app.py": {
        "Twarf.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "str",
                    "None"
                ],
                "reactor": [
                    "dict[str, typing.Any]",
                    "int",
                    "str"
                ]
            }
        },
        "Twarf.run": {
            "name": "run",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twarf-master/twarf/proxy.py": {
        "TwarfRequest.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "bool"
                ],
                "queued": []
            }
        },
        "TwarfRequest.process": {
            "name": "process",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TwarfRequest.temporary_redirect": {
            "name": "temporary_redirect",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "float",
                    "typing.Callable[, ]"
                ]
            }
        },
        "TwarfRequest.connectionLost": {
            "name": "connectionLost",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reason": [
                    "str",
                    "bool"
                ]
            }
        },
        "TwarfFactory.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rules": [
                    "int",
                    "float"
                ]
            }
        },
        "TwarfFactory.log": {
            "name": "log",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twarf-master/twarf/version.py": {},
    "twarf-master/twarf/_utils.py": {
        "build_random_string": {
            "name": "build_random_string",
            "location": 6,
            "return": [],
            "arguments": {
                "length": [
                    "int"
                ]
            }
        }
    },
    "twarf-master/twarf/__init__.py": {},
    "twarf-master/twarf/__main__.py": {
        "_logging_cfg": {
            "name": "_logging_cfg",
            "location": 9,
            "return": [
                "dict[typing.Text, typing.Union[int,dict[typing.Text, dict[typing.Text, typing.Union[list[typing.Text],typing.Text,bool]]]]]"
            ],
            "arguments": {
                "verbosity": [
                    "int",
                    "list[list[int]]",
                    "list[str]",
                    "str"
                ]
            }
        },
        "_get_parser": {
            "name": "_get_parser",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_get_parser.ipv4_port_type": {
            "name": "ipv4_port_type",
            "location": 51,
            "return": [
                "int"
            ],
            "arguments": {
                "port": []
            }
        }
    },
    "twarf-master/twarf/rules/auth.py": {
        "twarf_rules": {
            "name": "twarf_rules",
            "location": 50,
            "return": [
                "BasicAuth"
            ],
            "arguments": {
                "reactor": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "BasicAuth.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "int",
                    "float"
                ],
                "fwd": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/challenge.py": {
        "twarf_rules": {
            "name": "twarf_rules",
            "location": 125,
            "return": [
                "If"
            ],
            "arguments": {
                "reactor": [
                    "list[]",
                    "str"
                ]
            }
        },
        "_RedirectChallenge.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "next_challenge": [
                    "bool",
                    "typing.Sequence[typing.Sequence[float]]",
                    "typing.Any",
                    "None",
                    "typing.Callable[str, bool]"
                ],
                "crypto_srv": [
                    "bool",
                    "typing.Sequence[typing.Sequence[float]]",
                    "typing.Any",
                    "None",
                    "typing.Callable[str, bool]"
                ],
                "session_srv": [
                    "bool",
                    "typing.Sequence[typing.Sequence[float]]",
                    "typing.Any",
                    "None",
                    "typing.Callable[str, bool]"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/default.py": {
        "twarf_rules": {
            "name": "twarf_rules",
            "location": 8,
            "return": [
                "Try"
            ],
            "arguments": {
                "reactor": [
                    "bytes",
                    "typing.Iterable[str]",
                    "str"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/flow.py": {
        "If.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test": [
                    "str",
                    "float",
                    "int",
                    "list[str]"
                ],
                "then": [
                    "int",
                    "float",
                    "str"
                ],
                "orelse": [
                    "str",
                    "float",
                    "int",
                    "list[str]"
                ]
            }
        },
        "Try.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": [
                    "int",
                    "float"
                ],
                "fail": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/forward.py": {
        "twarf_rules": {
            "name": "twarf_rules",
            "location": 48,
            "return": [
                "Forward"
            ],
            "arguments": {
                "reactor": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Forward.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reactor": [
                    "int",
                    "str",
                    "None"
                ],
                "host": [
                    "int",
                    "str",
                    "list[str]"
                ],
                "port": [
                    "int"
                ]
            }
        },
        "Throttle.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fwd": [
                    "int",
                    "float"
                ],
                "delay": [
                    "int"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/http.py": {},
    "twarf-master/twarf/rules/list.py": {
        "twarf_rules": {
            "name": "twarf_rules",
            "location": 22,
            "return": [
                "If"
            ],
            "arguments": {
                "reactor": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "IPList.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/logging.py": {
        "twarf_rules": {
            "name": "twarf_rules",
            "location": 24,
            "return": [
                "LogRequest"
            ],
            "arguments": {
                "reactor": [
                    "str",
                    "typing.BinaryIO",
                    "None"
                ]
            }
        },
        "LogRequest.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fwd": [
                    "int",
                    "float"
                ],
                "service": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/session.py": {
        "twarf_rules": {
            "name": "twarf_rules",
            "location": 38,
            "return": [
                "If"
            ],
            "arguments": {
                "reactor": [
                    "str",
                    "float",
                    "None",
                    "bool"
                ]
            }
        },
        "SetCookie.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "list[tuple[typing.Union[int,float]]]",
                    "int",
                    "float",
                    "str"
                ],
                "value": [
                    "float",
                    "str",
                    "int",
                    "typing.Callable[None, bool]"
                ]
            }
        },
        "MatchCookie.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "service": [
                    "list[tuple[typing.Union[int,float]]]",
                    "int",
                    "float",
                    "str"
                ],
                "value": [
                    "float",
                    "str",
                    "int",
                    "typing.Callable[None, bool]"
                ]
            }
        }
    },
    "twarf-master/twarf/rules/__init__.py": {
        "TwarfTest.__invert__": {
            "name": "__invert__",
            "location": 16,
            "return": [
                "Not"
            ],
            "arguments": {
                "self": []
            }
        },
        "TwarfTest.__and__": {
            "name": "__and__",
            "location": 19,
            "return": [
                "And"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "TwarfTest.__or__": {
            "name": "__or__",
            "location": 22,
            "return": [
                "Or"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "TwarfTest.__xor__": {
            "name": "__xor__",
            "location": 25,
            "return": [
                "Xor"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "dict[, ]",
                    "typing.AbstractSet"
                ]
            }
        },
        "Yes.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "float"
                ]
            }
        },
        "And.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "None"
                ],
                "b": [
                    "int",
                    "bytes",
                    "str"
                ]
            }
        },
        "Or.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "None"
                ],
                "b": [
                    "int",
                    "bytes",
                    "str"
                ]
            }
        },
        "Xor.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "int",
                    "None"
                ],
                "b": [
                    "int",
                    "bytes",
                    "str"
                ]
            }
        }
    },
    "twarf-master/twarf/service/auth.py": {
        "AuthSecretHashService.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hash_f": [
                    "typing.Callable[, ]"
                ],
                "hash_list": [
                    "list[str]",
                    "dict[, ]",
                    "list[]",
                    "str",
                    "int"
                ]
            }
        }
    },
    "twarf-master/twarf/service/crypto.py": {
        "CryptoService.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keys": [
                    "str"
                ]
            }
        }
    },
    "twarf-master/twarf/service/list.py": {
        "ListService.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twarf-master/twarf/service/logging.py": {
        "LoggingService.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "str",
                    "list[str]",
                    "tuple[tuple[typing.Union[str,...]]]"
                ],
                "level": []
            }
        }
    },
    "twarf-master/twarf/service/session.py": {
        "SessionService.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
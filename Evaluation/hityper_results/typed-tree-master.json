{
    "typed-tree-master/scripts/app.py": {},
    "typed-tree-master/typedtree/node.py": {
        "Node.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "str",
                    "typing.Callable[, ]",
                    "set[str]",
                    "int",
                    "typing.Sequence[]"
                ],
                "parent": [
                    "None",
                    "bool",
                    "tuple[typing.Type]",
                    "list[str]",
                    "str"
                ],
                "type": [
                    "None",
                    "str",
                    "typing.Callable[, ]",
                    "set[str]",
                    "int",
                    "typing.Sequence[]"
                ],
                "payload": [
                    "None",
                    "str",
                    "typing.Callable[, ]",
                    "set[str]",
                    "int",
                    "typing.Sequence[]"
                ]
            }
        },
        "Node.identifier": {
            "name": "identifier",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.payload": {
            "name": "payload",
            "location": 39,
            "return": [
                "int",
                "str",
                "set[str]",
                "dict[str, list[str]]",
                "float"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Node.children": {
            "name": "children",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.add_child": {
            "name": "add_child",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "edge": [
                    "float",
                    "int"
                ]
            }
        }
    },
    "typed-tree-master/typedtree/traversalmode.py": {},
    "typed-tree-master/typedtree/tree.py": {
        "Tree.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tree.nodes": {
            "name": "nodes",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tree.add_node": {
            "name": "add_node",
            "location": 22,
            "return": [
                "Node"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "str",
                    "None",
                    "typing.Callable[str, str]"
                ],
                "parent_pointer": [
                    "None",
                    "int",
                    "typing.AbstractSet",
                    "typing.Mapping"
                ],
                "node_type": [
                    "None",
                    "typing.Callable[, ]",
                    "typing.Type"
                ],
                "edge_type": [
                    "None",
                    "int",
                    "typing.AbstractSet",
                    "typing.Mapping"
                ],
                "payload": [
                    "None",
                    "typing.Callable[, ]",
                    "typing.Type"
                ]
            }
        },
        "Tree.get_siblings": {
            "name": "get_siblings",
            "location": 41,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "str",
                    "bool"
                ]
            }
        },
        "Tree.display": {
            "name": "display",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "bool",
                    "str",
                    "BaseException",
                    "typing.Hashable"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "Tree.traverse": {
            "name": "traverse",
            "location": 64,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "identifier": [
                    "str"
                ],
                "mode": []
            }
        },
        "Tree.__getitem__": {
            "name": "__getitem__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "None",
                    "tuple[]",
                    "dict[str, str]",
                    "int",
                    "typing.Callable[T, T]",
                    "typing.Type"
                ]
            }
        },
        "Tree.__setitem__": {
            "name": "__setitem__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bool",
                    "bytes"
                ],
                "item": [
                    "str",
                    "bool",
                    "bytes"
                ]
            }
        },
        "Tree.__len__": {
            "name": "__len__",
            "location": 84,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "typed-tree-master/typedtree/version.py": {},
    "typed-tree-master/typedtree/__init__.py": {}
}
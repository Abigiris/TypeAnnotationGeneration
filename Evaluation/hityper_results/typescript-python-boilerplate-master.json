{
    "typescript-python-boilerplate-master/setup.py": {},
    "typescript-python-boilerplate-master/tests/conftest.py": {
        "webapp": {
            "name": "webapp",
            "location": 8,
            "return": [
                "int",
                "list[dict[str, typing.Any]]",
                "str",
                "dict[str, dict[str, int]]",
                "float"
            ],
            "arguments": {}
        }
    },
    "typescript-python-boilerplate-master/tests/test_interoperability.py": {
        "test_validate_jschatevent": {
            "name": "test_validate_jschatevent",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "typescript-python-boilerplate-master/tests/test_logging.py": {
        "test_init_logging_should_set_log_level": {
            "name": "test_init_logging_should_set_log_level",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "typescript-python-boilerplate-master/tests/public/test_views.py": {
        "test_return_html": {
            "name": "test_return_html",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "webapp": []
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/app.py": {
        "App.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "redis": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/constants.py": {},
    "typescript-python-boilerplate-master/typescript_python_boilerplate/exceptions.py": {},
    "typescript-python-boilerplate-master/typescript_python_boilerplate/interoperability.py": {
        "ThrowErrorHandle.end": {
            "name": "end",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/logging.py": {
        "init_logging": {
            "name": "init_logging",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "debug": [],
                "force_tty": [
                    "bool"
                ]
            }
        },
        "NiceColoredFormatter._colored": {
            "name": "_colored",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "color": [],
                "text": []
            }
        },
        "NiceColoredFormatter.formatMessage": {
            "name": "formatMessage",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/template.py": {
        "init_jinja2_template": {
            "name": "init_jinja2_template",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "webapp": []
            }
        },
        "get_jinja_env_from_app": {
            "name": "get_jinja_env_from_app",
            "location": 31,
            "return": [],
            "arguments": {
                "webapp": []
            }
        },
        "templated": {
            "name": "templated",
            "location": 43,
            "return": [],
            "arguments": {
                "template": [],
                "status": [
                    "int"
                ],
                "headers": [
                    "None"
                ]
            }
        },
        "templated.wrapper": {
            "name": "wrapper",
            "location": 56,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/webapp.py": {
        "create_webapp": {
            "name": "create_webapp",
            "location": 15,
            "return": [
                "Sanic"
            ],
            "arguments": {
                "dummy_manifest": [
                    "None"
                ]
            }
        },
        "load_manifest": {
            "name": "load_manifest",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/__init__.py": {},
    "typescript-python-boilerplate-master/typescript_python_boilerplate/__main__.py": {
        "cli": {
            "name": "cli",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "debug": []
            }
        },
        "run": {
            "name": "run",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "host": [],
                "port": [],
                "redis_url": [],
                "servce_static": [
                    "None"
                ]
            }
        },
        "run.inject_manifest": {
            "name": "inject_manifest",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "request": []
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/api/views.py": {
        "api": {
            "name": "api",
            "location": 27,
            "return": [],
            "arguments": {
                "schema": []
            }
        },
        "login": {
            "name": "login",
            "location": 48,
            "return": [
                "dict[typing.Text, str]"
            ],
            "arguments": {
                "request": []
            }
        },
        "api.wrapper": {
            "name": "wrapper",
            "location": 29,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "api.wrapper.wrapped": {
            "name": "wrapped",
            "location": 32,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/api/websocket.py": {
        "make_server_action": {
            "name": "make_server_action",
            "location": 66,
            "return": [],
            "arguments": {
                "action_type": [
                    "str",
                    "None",
                    "int",
                    "bytes",
                    "typing.Type"
                ],
                "payload": [
                    "str",
                    "None",
                    "int",
                    "bytes",
                    "typing.Type"
                ]
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/api/__init__.py": {},
    "typescript-python-boilerplate-master/typescript_python_boilerplate/public/views.py": {
        "page": {
            "name": "page",
            "location": 9,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "request": [
                    "bool"
                ]
            }
        }
    },
    "typescript-python-boilerplate-master/typescript_python_boilerplate/public/__init__.py": {}
}
{
    "uatu-master/setup.py": {},
    "uatu-master/tests/test_diagram.py": {
        "test_file_diagrams": {
            "name": "test_file_diagrams",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_node_diagrams": {
            "name": "test_node_diagrams",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pipeline_diagrams": {
            "name": "test_pipeline_diagrams",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "uatu-master/tests/test_directed_graph.py": {
        "test_initialize": {
            "name": "test_initialize",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "random_graph": [
                    "str"
                ]
            }
        },
        "test_find_path": {
            "name": "test_find_path",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "random_graph": []
            }
        }
    },
    "uatu-master/tests/test_pipeline.py": {
        "test_add_pipeline": {
            "name": "test_add_pipeline",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "uatu-master/tests/utils.py": {
        "random_graph": {
            "name": "random_graph",
            "location": 6,
            "return": [
                "DirectedGraph"
            ],
            "arguments": {}
        }
    },
    "uatu-master/tests/__init__.py": {},
    "uatu-master/uatu/__init__.py": {},
    "uatu-master/uatu/cli/base.py": {
        "cli": {
            "name": "cli",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "init": {
            "name": "init",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "config_file": [
                    "typing.Callable[, ]",
                    "dict[str, str]",
                    "str",
                    "dict[, ]",
                    "None"
                ],
                "database_file": [
                    "str",
                    "None",
                    "bool"
                ],
                "experiment_dir": [
                    "str",
                    "None",
                    "bytes",
                    "bool"
                ],
                "log_file": [
                    "str",
                    "None",
                    "typing.Callable[, ]",
                    "bool",
                    "dict[str, str]"
                ]
            }
        },
        "clean": {
            "name": "clean",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "dir_path": [
                    "str",
                    "bool"
                ]
            }
        },
        "watch": {
            "name": "watch",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str"
                ],
                "files": [
                    "tuple[str]"
                ],
                "message": [
                    "str",
                    "typing.BinaryIO",
                    "typing.TextIO"
                ],
                "amend": [
                    "bool",
                    "tuple[str]",
                    "typing.Sequence[str]",
                    "None"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "script": [
                    "str"
                ],
                "args": [],
                "module": []
            }
        }
    },
    "uatu-master/uatu/cli/diagrams.py": {
        "file_summary": {
            "name": "file_summary",
            "location": 9,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "file_details": {
            "name": "file_details",
            "location": 59,
            "return": [],
            "arguments": {
                "files": []
            }
        },
        "node_summary": {
            "name": "node_summary",
            "location": 75,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "node_details": {
            "name": "node_details",
            "location": 125,
            "return": [],
            "arguments": {
                "nodes": []
            }
        },
        "pipeline_summary": {
            "name": "pipeline_summary",
            "location": 141,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "pipeline": []
            }
        },
        "pipeline_details": {
            "name": "pipeline_details",
            "location": 181,
            "return": [],
            "arguments": {
                "pipelines": []
            }
        }
    },
    "uatu-master/uatu/cli/file.py": {
        "file_cli": {
            "name": "file_cli",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "file_ls": {
            "name": "file_ls",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str"
                ],
                "files": [
                    "str",
                    "bytes",
                    "list[int]"
                ]
            }
        },
        "file_show": {
            "name": "file_show",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "int",
                    "str"
                ],
                "file_ids": [
                    "tuple[str]",
                    "list[str]"
                ]
            }
        },
        "file_delete": {
            "name": "file_delete",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int"
                ],
                "file_ids": [
                    "tuple[str]",
                    "list[str]"
                ],
                "yes": [
                    "tuple[str]",
                    "bool",
                    "list[str]"
                ]
            }
        }
    },
    "uatu-master/uatu/cli/node.py": {
        "node_cli": {
            "name": "node_cli",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "node_ls": {
            "name": "node_ls",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int",
                    "None",
                    "list[str]"
                ],
                "node_ids": [
                    "tuple[str]",
                    "str",
                    "tuple[]"
                ]
            }
        },
        "node_show": {
            "name": "node_show",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int",
                    "None",
                    "list[str]"
                ],
                "node_ids": [
                    "tuple[str]"
                ]
            }
        },
        "node_delete": {
            "name": "node_delete",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "bool",
                    "str",
                    "None"
                ],
                "node_ids": [
                    "tuple[str]"
                ],
                "yes": [
                    "tuple[str]",
                    "bool"
                ]
            }
        }
    },
    "uatu-master/uatu/cli/pipeline.py": {
        "pipeline_cli": {
            "name": "pipeline_cli",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "pipeline_ls": {
            "name": "pipeline_ls",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int",
                    "None"
                ],
                "pipeline_ids": [
                    "tuple[str]",
                    "str"
                ]
            }
        },
        "pipeline_show": {
            "name": "pipeline_show",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "int",
                    "None"
                ],
                "pipeline_ids": [
                    "tuple[str]"
                ]
            }
        }
    },
    "uatu-master/uatu/cli/__init__.py": {},
    "uatu-master/uatu/core/database.py": {
        "initialize_db": {
            "name": "initialize_db",
            "location": 14,
            "return": [
                "typing.Type",
                "dict[str, int]",
                "str"
            ],
            "arguments": {
                "db_file": [
                    "str",
                    "None"
                ]
            }
        },
        "get_file": {
            "name": "get_file",
            "location": 22,
            "return": [
                "list[F]",
                "list[]",
                "dict[, ]",
                "int",
                "list[str]",
                "File"
            ],
            "arguments": {
                "sess": [],
                "file_path": [
                    "None",
                    "str",
                    "bytes"
                ],
                "file_id": [
                    "None",
                    "str",
                    "dict[str, str]",
                    "int",
                    "list[\"Address\"]"
                ],
                "create": [
                    "bool"
                ]
            }
        },
        "delete_file": {
            "name": "delete_file",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "sess": [],
                "file": [
                    "None",
                    "str"
                ],
                "file_path": [
                    "None",
                    "str"
                ],
                "file_id": [
                    "None",
                    "str"
                ]
            }
        },
        "get_all_files": {
            "name": "get_all_files",
            "location": 66,
            "return": [],
            "arguments": {
                "sess": [
                    "set[]",
                    "str",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "add_edge": {
            "name": "add_edge",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "sess": [],
                "predecessor": [
                    "dict[, ]",
                    "dict[str, str]",
                    "None",
                    "set[str]"
                ],
                "successor": [
                    "dict[, ]"
                ]
            }
        },
        "delete_edge": {
            "name": "delete_edge",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "sess": [],
                "predecessor": [
                    "dict[, ]"
                ],
                "successor": [
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ]
            }
        },
        "get_pipeline": {
            "name": "get_pipeline",
            "location": 94,
            "return": [
                "str",
                "dict[, ]",
                "None",
                "tuple[tuple[typing.Union[str,str]]]",
                "list[]",
                "Pipeline"
            ],
            "arguments": {
                "sess": [],
                "pipeline_id": [
                    "None",
                    "str",
                    "int"
                ],
                "file_lists": [],
                "create": [
                    "bool"
                ]
            }
        },
        "delete_pipeline": {
            "name": "delete_pipeline",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "sess": [],
                "pipeline": [
                    "None",
                    "str",
                    "float",
                    "list[typing.Any]",
                    "bool"
                ],
                "pipeline_id": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "get_all_pipelines": {
            "name": "get_all_pipelines",
            "location": 159,
            "return": [],
            "arguments": {
                "sess": [
                    "list[]",
                    "set[str]"
                ]
            }
        },
        "get_node": {
            "name": "get_node",
            "location": 163,
            "return": [
                "None",
                "list[list[typing.Any]]",
                "typing.Iterator",
                "dict[, ]",
                "set[]",
                "int",
                "Record"
            ],
            "arguments": {
                "sess": [],
                "node_id": [
                    "None",
                    "str",
                    "int"
                ],
                "file_path": [
                    "None",
                    "str",
                    "int"
                ],
                "commit_id": [
                    "None",
                    "str",
                    "int",
                    "float"
                ],
                "create": [
                    "bool"
                ]
            }
        },
        "delete_node": {
            "name": "delete_node",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "sess": [],
                "node": [
                    "None",
                    "str",
                    "set[int]",
                    "int"
                ],
                "node_id": [
                    "None",
                    "str",
                    "int",
                    "set[int]"
                ]
            }
        },
        "get_all_nodes": {
            "name": "get_all_nodes",
            "location": 215,
            "return": [],
            "arguments": {
                "sess": [
                    "bool"
                ]
            }
        },
        "get_experiment": {
            "name": "get_experiment",
            "location": 219,
            "return": [
                "Experiment",
                "int",
                "float",
                "list[str]"
            ],
            "arguments": {
                "sess": [],
                "repo": [
                    "None",
                    "str",
                    "typing.TextIO"
                ],
                "experiment_id": [
                    "None",
                    "str",
                    "typing.Sequence[str]",
                    "dict[, ]",
                    "int"
                ],
                "description": [
                    "None",
                    "str",
                    "float",
                    "list[str]",
                    "dict[str, typing.Any]"
                ],
                "file_lists": [],
                "config": [
                    "None",
                    "dict[, ]",
                    "int",
                    "str"
                ],
                "hparams": [
                    "None",
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "metrics": [
                    "None",
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "delete_experiment": {
            "name": "delete_experiment",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "sess": [],
                "experiment": [
                    "None",
                    "str",
                    "int"
                ],
                "expr_id": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "get_all_experiments": {
            "name": "get_all_experiments",
            "location": 311,
            "return": [],
            "arguments": {
                "sess": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "uatu-master/uatu/core/directed_graph.py": {
        "DirectedGraph.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "graph_dict": [
                    "dict[str, typing.Any]",
                    "dict[str, float]",
                    "dict[str, dict[str, typing.Any]]",
                    "dict[str, int]",
                    "dict[, ]"
                ]
            }
        },
        "DirectedGraph.add_node": {
            "name": "add_node",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ]
            }
        },
        "DirectedGraph.add_nodes": {
            "name": "add_nodes",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nodes": []
            }
        },
        "DirectedGraph.delete_node": {
            "name": "delete_node",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str",
                    "dict[, ]",
                    "bytes"
                ]
            }
        },
        "DirectedGraph.delete_nodes": {
            "name": "delete_nodes",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nodes": [
                    "list[]",
                    "str",
                    "list[list[int]]"
                ]
            }
        },
        "DirectedGraph.add_arc": {
            "name": "add_arc",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "int"
                ],
                "end": [
                    "int"
                ],
                "create_nodes": [
                    "bool"
                ]
            }
        },
        "DirectedGraph.delete_arc": {
            "name": "delete_arc",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "int"
                ],
                "end": [
                    "int"
                ]
            }
        },
        "DirectedGraph.delete_arcs": {
            "name": "delete_arcs",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "int",
                    "str",
                    "None",
                    "dict[str, float]"
                ],
                "end": [
                    "int",
                    "str",
                    "None",
                    "dict[str, float]"
                ]
            }
        },
        "DirectedGraph.find_path_util": {
            "name": "find_path_util",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str",
                    "list[str]",
                    "typing.Sequence[str]"
                ],
                "end": [
                    "str",
                    "typing.IO",
                    "None"
                ],
                "visited": [],
                "path": [
                    "list[]",
                    "list[str]"
                ],
                "paths": [
                    "str",
                    "typing.Iterable[str]"
                ]
            }
        },
        "DirectedGraph.find_path": {
            "name": "find_path",
            "location": 77,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "str",
                    "list[str]",
                    "int"
                ],
                "end": [
                    "str",
                    "list[str]",
                    "int"
                ]
            }
        },
        "DirectedGraph.__contains__": {
            "name": "__contains__",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "int"
                ]
            }
        },
        "DirectedGraph.__getitem__": {
            "name": "__getitem__",
            "location": 86,
            "return": [
                "dict[typing.Text, set[]]"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "typing.Sequence[object]",
                    "typing.Any",
                    "None"
                ]
            }
        },
        "DirectedGraph.__len__": {
            "name": "__len__",
            "location": 96,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "uatu-master/uatu/core/git.py": {
        "get_repo": {
            "name": "get_repo",
            "location": 12,
            "return": [],
            "arguments": {
                "repo_dir": [
                    "str"
                ]
            }
        },
        "get_tracked_files": {
            "name": "get_tracked_files",
            "location": 16,
            "return": [],
            "arguments": {
                "repo": [
                    "str",
                    "None"
                ]
            }
        },
        "get_changed_files": {
            "name": "get_changed_files",
            "location": 20,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "repo": [
                    "str",
                    "None",
                    "float"
                ]
            }
        },
        "need_commit": {
            "name": "need_commit",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "repo": [
                    "str"
                ]
            }
        },
        "create_ignore_file": {
            "name": "create_ignore_file",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "repo_dir": [
                    "str"
                ]
            }
        },
        "get_last_commit": {
            "name": "get_last_commit",
            "location": 49,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "repo": [],
                "file_path": [
                    "typing.Text"
                ]
            }
        },
        "add_file": {
            "name": "add_file",
            "location": 59,
            "return": [
                "bool"
            ],
            "arguments": {
                "repo": [
                    "str"
                ],
                "file_path": [
                    "str",
                    "int"
                ],
                "limited_size": [
                    "int"
                ]
            }
        },
        "add_git_ignore": {
            "name": "add_git_ignore",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "ignore_file": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "check_git_initialized": {
            "name": "check_git_initialized",
            "location": 82,
            "return": [
                "bool"
            ],
            "arguments": {
                "repo_dir": [
                    "str"
                ]
            }
        },
        "initialize_git": {
            "name": "initialize_git",
            "location": 96,
            "return": [],
            "arguments": {
                "repo_dir": [
                    "str",
                    "None"
                ]
            }
        }
    },
    "uatu-master/uatu/core/init.py": {
        "check_uatu_initialized": {
            "name": "check_uatu_initialized",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "dir_path": []
            }
        },
        "clean_uatu": {
            "name": "clean_uatu",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "dir_path": []
            }
        },
        "initialize_uatu": {
            "name": "initialize_uatu",
            "location": 41,
            "return": [],
            "arguments": {
                "dir_path": [],
                "user_config": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "get_uatu_config": {
            "name": "get_uatu_config",
            "location": 77,
            "return": [],
            "arguments": {
                "dir_path": []
            }
        }
    },
    "uatu-master/uatu/core/logger.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "uatu-master/uatu/core/orm.py": {
        "File.__repr__": {
            "name": "__repr__",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Record.__repr__": {
            "name": "__repr__",
            "location": 34,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__repr__": {
            "name": "__repr__",
            "location": 50,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Experiment.__repr__": {
            "name": "__repr__",
            "location": 68,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "uatu-master/uatu/core/run.py": {
        "Run.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_files": [
                    "list[]"
                ],
                "output_files": [
                    "list[]"
                ],
                "config": [
                    "None",
                    "int",
                    "str",
                    "typing.TextIO"
                ],
                "hparams": [
                    "None",
                    "str",
                    "list[str]"
                ]
            }
        },
        "Run.save": {
            "name": "save",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "script_path": [
                    "str",
                    "list[str]"
                ],
                "metrics": [
                    "dict[, ]"
                ]
            }
        },
        "Run.__call__": {
            "name": "__call__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "func": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "Run.__call__.monitored_func": {
            "name": "monitored_func",
            "location": 52,
            "return": [],
            "arguments": {}
        }
    },
    "uatu-master/uatu/core/test.py": {
        "main": {
            "name": "main",
            "location": 12,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "config": [
                    "int",
                    "str"
                ],
                "output_file": [
                    "str"
                ]
            }
        }
    },
    "uatu-master/uatu/core/utils.py": {
        "id_generator": {
            "name": "id_generator",
            "location": 6,
            "return": [],
            "arguments": {
                "len": [
                    "int"
                ],
                "salt": [
                    "typing.Text"
                ]
            }
        },
        "get_relative_path": {
            "name": "get_relative_path",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "cwd": []
            }
        },
        "check_file_exists": {
            "name": "check_file_exists",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "uatu-master/uatu/core/__init__.py": {}
}
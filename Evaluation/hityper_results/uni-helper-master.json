{
    "uni-helper-master/notes/organizer.py": {
        "generate_folder_names": {
            "name": "generate_folder_names",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "courses": [],
                "folder": []
            }
        },
        "notes_name_schema": {
            "name": "notes_name_schema",
            "location": 190,
            "return": [
                "str"
            ],
            "arguments": {
                "arg": []
            }
        },
        "main": {
            "name": "main",
            "location": 315,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Bookmark.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": [],
                "dtime": []
            }
        },
        "Bookmark.__repr__": {
            "name": "__repr__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Bookmark.from_node": {
            "name": "from_node",
            "location": 32,
            "return": [],
            "arguments": {
                "cls": [],
                "node": [],
                "height": []
            }
        },
        "Page.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Page.bookmarks": {
            "name": "bookmarks",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Page.drawing": {
            "name": "drawing",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Page.load": {
            "name": "load",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Course.__init__": {
            "name": "__init__",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Course.acronym": {
            "name": "acronym",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Course.folder": {
            "name": "folder",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CoursePdf.__init__": {
            "name": "__init__",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "init_arg": []
            }
        },
        "CoursePdf.exists": {
            "name": "exists",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CoursePdf.last_modified": {
            "name": "last_modified",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CourseNotes.__init__": {
            "name": "__init__",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "pages": []
            }
        },
        "CourseNotes.last_modified_page": {
            "name": "last_modified_page",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CourseNotes.update_pdf": {
            "name": "update_pdf",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CourseNotes.create_pdf": {
            "name": "create_pdf",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CourseNotes.from_note_html": {
            "name": "from_note_html",
            "location": 280,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "Page.load.load_bookmarks": {
            "name": "load_bookmarks",
            "location": 84,
            "return": [
                "list[]"
            ],
            "arguments": {}
        },
        "Page.load.load_svg": {
            "name": "load_svg",
            "location": 90,
            "return": [],
            "arguments": {}
        }
    },
    "uni-helper-master/schedule/api_implementation.py": {
        "get_authenticated_service": {
            "name": "get_authenticated_service",
            "location": 32,
            "return": [],
            "arguments": {
                "api_name": [
                    "str",
                    "dict[str, str]",
                    "list[str]",
                    "int"
                ],
                "api_version": [
                    "str",
                    "dict[str, str]",
                    "list[str]",
                    "int"
                ]
            }
        },
        "get_last_modified": {
            "name": "get_last_modified",
            "location": 140,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "update_courses_colors": {
            "name": "update_courses_colors",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MyCalendarBatchInsert.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "callback": [
                    "None",
                    "str"
                ]
            }
        },
        "MyCalendarBatchInsert.add": {
            "name": "add",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "int",
                    "typing.Iterable[int]"
                ],
                "callback": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "request_id": [
                    "None",
                    "str",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "MyCalendarBatchInsert.execute": {
            "name": "execute",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "uni-helper-master/schedule/courses.py": {
        "get_table_content": {
            "name": "get_table_content",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "MyCourses.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "dict[str, typing.Any]",
                    "None",
                    "typing.Callable[str, bool]",
                    "list[str]"
                ]
            }
        },
        "MyCourses.__repr__": {
            "name": "__repr__",
            "location": 48,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyCourses.name": {
            "name": "name",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "MyCourses.acronym": {
            "name": "acronym",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyCourses.color": {
            "name": "color",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyCourses.get_course_color": {
            "name": "get_course_color",
            "location": 89,
            "return": [],
            "arguments": {
                "cls": [
                    "str"
                ],
                "name": [
                    "str"
                ]
            }
        }
    },
    "uni-helper-master/schedule/download_cal.py": {
        "download_from_portal": {
            "name": "download_from_portal",
            "location": 9,
            "return": [],
            "arguments": {
                "week_start": []
            }
        }
    },
    "uni-helper-master/schedule/importer.py": {
        "log": {
            "name": "log",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "arg": [
                    "float",
                    "int",
                    "None"
                ]
            }
        },
        "parse_ics_file": {
            "name": "parse_ics_file",
            "location": 28,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "parse_ical": {
            "name": "parse_ical",
            "location": 34,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cal": [],
                "weeks_to_filter": [
                    "int",
                    "str"
                ]
            }
        },
        "upload_to_google_calendar": {
            "name": "upload_to_google_calendar",
            "location": 63,
            "return": [],
            "arguments": {
                "events": [
                    "dict[, ]",
                    "list[]"
                ]
            }
        },
        "make_test_content": {
            "name": "make_test_content",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 107,
            "return": [],
            "arguments": {
                "argv": [
                    "list[str]",
                    "str",
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "list[str]",
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "uni-helper-master/schedule/my_event.py": {
        "MyBaseEvent.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "summary": [
                    "str",
                    "None",
                    "tuple[typing.Union[int,int]]",
                    "dict[str, typing.Any]"
                ],
                "location": [
                    "str",
                    "dict[str, typing.Any]",
                    "tuple[typing.Union[int,int]]",
                    "tuple[]"
                ],
                "description": [
                    "str",
                    "None",
                    "tuple[typing.Union[int,int]]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "MyBaseEvent.from_ical_event": {
            "name": "from_ical_event",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "event": [
                    "str",
                    "dict[, ]",
                    "int"
                ]
            }
        },
        "MyBaseEvent.to_gcal_event": {
            "name": "to_gcal_event",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyEvent.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "summary": [
                    "list[str]",
                    "typing.Sequence[str]",
                    "str"
                ],
                "start_time": [
                    "int"
                ],
                "end_time": [
                    "int",
                    "None"
                ],
                "location": [
                    "list[str]",
                    "typing.Sequence[str]",
                    "str"
                ],
                "description": [
                    "list[str]",
                    "typing.Sequence[str]",
                    "str"
                ]
            }
        },
        "MyEvent.__repr__": {
            "name": "__repr__",
            "location": 52,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyEvent.from_ical_event": {
            "name": "from_ical_event",
            "location": 59,
            "return": [],
            "arguments": {
                "cls": [
                    "typing.Container",
                    "str",
                    "typing.Type"
                ],
                "event": []
            }
        },
        "MyEvent.to_gcal_event": {
            "name": "to_gcal_event",
            "location": 101,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, ]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyEvent.event_id": {
            "name": "event_id",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyAllDayEvent.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "summary": [
                    "str",
                    "float",
                    "list[str]",
                    "bool",
                    "None"
                ],
                "start_date": [
                    "None",
                    "str",
                    "int"
                ],
                "end_date": [
                    "str",
                    "None",
                    "int"
                ],
                "location": [
                    "str",
                    "float",
                    "list[str]",
                    "bool",
                    "None"
                ],
                "description": [
                    "str",
                    "float",
                    "list[str]",
                    "bool",
                    "None"
                ]
            }
        },
        "MyAllDayEvent.to_gcal_event": {
            "name": "to_gcal_event",
            "location": 157,
            "return": [
                "dict[typing.Text, typing.Union[typing.Text,dict[typing.Text, ]]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "uni-helper-master/tests/__init__.py": {}
}
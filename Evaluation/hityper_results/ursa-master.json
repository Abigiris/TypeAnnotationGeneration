{
    "ursa-master/setup.py": {},
    "ursa-master/ursa/deptree.py": {
        "label": {
            "name": "label",
            "location": 6,
            "return": [],
            "arguments": {
                "n": [
                    "str",
                    "bytes"
                ]
            }
        },
        "children": {
            "name": "children",
            "location": 9,
            "return": [],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        }
    },
    "ursa-master/ursa/kernel.py": {
        "label": {
            "name": "label",
            "location": 14,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "children": {
            "name": "children",
            "location": 20,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "delex": {
            "name": "delex",
            "location": 26,
            "return": [],
            "arguments": {
                "n": [],
                "leaf": []
            }
        },
        "product": {
            "name": "product",
            "location": 124,
            "return": [],
            "arguments": {
                "xs": []
            }
        },
        "Labeled.label": {
            "name": "label",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Kernel.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "label": [],
                "children": [],
                "alpha": []
            }
        },
        "Kernel.leaf": {
            "name": "leaf",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Kernel.subtrees": {
            "name": "subtrees",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Kernel.preterm": {
            "name": "preterm",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Kernel.production": {
            "name": "production",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Kernel.C": {
            "name": "C",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "n1": [],
                "n2": []
            }
        },
        "Kernel.__call__": {
            "name": "__call__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "t1": [],
                "t2": []
            }
        },
        "Kernel.ftk": {
            "name": "ftk",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "nodes1": [],
                "nodes2": []
            }
        },
        "Kernel.pairwise": {
            "name": "pairwise",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "trees1": [],
                "trees2": [],
                "normalize": [],
                "dtype": []
            }
        },
        "Kernel.nodemap": {
            "name": "nodemap",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        }
    },
    "ursa-master/ursa/partial_kernel.py": {
        "subsequences": {
            "name": "subsequences",
            "location": 4,
            "return": [],
            "arguments": {
                "z": []
            }
        },
        "C": {
            "name": "C",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "n1": [],
                "n2": []
            }
        }
    },
    "ursa-master/ursa/regress.py": {
        "pearson_r_score": {
            "name": "pearson_r_score",
            "location": 8,
            "return": [
                "list[]",
                "typing.Type",
                "dict[, ]",
                "int",
                "tuple[typing.Union[typing.Any,typing.Any]]",
                "str"
            ],
            "arguments": {
                "Y_true": [
                    "dict[, ]",
                    "list[tuple[typing.Union[bool,str]]]",
                    "int",
                    "typing.Type"
                ],
                "Y_pred": [
                    "dict[, ]",
                    "list[tuple[typing.Union[bool,str]]]",
                    "int",
                    "typing.Type"
                ]
            }
        },
        "embed": {
            "name": "embed",
            "location": 44,
            "return": [],
            "arguments": {
                "X": [
                    "float",
                    "int"
                ],
                "ref": [
                    "float",
                    "int"
                ],
                "sim": [
                    "float",
                    "int"
                ],
                "parallel": [
                    "bool"
                ]
            }
        },
        "dataframe": {
            "name": "dataframe",
            "location": 47,
            "return": [],
            "arguments": {
                "report": [
                    "dict[, ]"
                ]
            }
        },
        "Regress.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cv": [
                    "int"
                ],
                "alphas": []
            }
        },
        "Regress.fit": {
            "name": "fit",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "X": [
                    "float"
                ],
                "Y": [
                    "float"
                ]
            }
        },
        "Regress.fit_report": {
            "name": "fit_report",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "X": [
                    "int",
                    "float"
                ],
                "Y": [
                    "int",
                    "float"
                ]
            }
        },
        "Regress.report": {
            "name": "report",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ursa-master/ursa/similarity.py": {
        "stringsim": {
            "name": "stringsim",
            "location": 38,
            "return": [
                "int"
            ],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "cosine_matrix": {
            "name": "cosine_matrix",
            "location": 42,
            "return": [],
            "arguments": {
                "U": [],
                "V": []
            }
        },
        "cosine_matrix_batch": {
            "name": "cosine_matrix_batch",
            "location": 48,
            "return": [],
            "arguments": {
                "U": [],
                "V": []
            }
        },
        "pearson_r": {
            "name": "pearson_r",
            "location": 54,
            "return": [],
            "arguments": {
                "x": [
                    "bool"
                ],
                "y": [
                    "float"
                ],
                "dim": [
                    "int"
                ],
                "eps": [
                    "float"
                ]
            }
        },
        "triu": {
            "name": "triu",
            "location": 63,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "pairwise_concat": {
            "name": "pairwise_concat",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "u": [
                    "int"
                ],
                "v": [
                    "int",
                    "dict[str, tuple[typing.Union[int,int]]]",
                    "tuple[]",
                    "tuple[str]"
                ]
            }
        },
        "LearnedSimilarity.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size_in": [
                    "int"
                ]
            }
        },
        "LearnedSimilarity.forward": {
            "name": "forward",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "u": [
                    "tuple[typing.Union[float,float]]",
                    "float"
                ],
                "v": [
                    "tuple[typing.Union[float,float]]",
                    "float"
                ]
            }
        },
        "WeightedAverage.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size_in": [
                    "int",
                    "bytes"
                ],
                "size": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "WeightedAverage.forward": {
            "name": "forward",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "h": [
                    "str",
                    "bytes",
                    "list[str]"
                ]
            }
        }
    },
    "ursa-master/ursa/test_kernel.py": {
        "test_symmetric": {
            "name": "test_symmetric",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "t1": [
                    "tuple[int]",
                    "typing.Type",
                    "int",
                    "float"
                ],
                "t2": [
                    "tuple[int]",
                    "typing.Type",
                    "int",
                    "float"
                ]
            }
        },
        "test_NP_D_N": {
            "name": "test_NP_D_N",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_self_NP": {
            "name": "test_self_NP",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_alpha": {
            "name": "test_alpha",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "t1": [
                    "tuple[int]",
                    "typing.Type",
                    "int"
                ],
                "t2": [
                    "tuple[int]",
                    "typing.Type",
                    "int"
                ]
            }
        },
        "test_normalize": {
            "name": "test_normalize",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "t1": [
                    "float",
                    "str",
                    "int",
                    "typing.Callable[T, T]",
                    "list[int]"
                ],
                "t2": [
                    "float",
                    "str",
                    "int",
                    "typing.Callable[T, T]",
                    "list[int]"
                ]
            }
        },
        "test_ftk": {
            "name": "test_ftk",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "t1": [
                    "int",
                    "float"
                ],
                "t2": [
                    "int",
                    "float"
                ]
            }
        },
        "test_pairwise_ftk": {
            "name": "test_pairwise_ftk",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "trees": [
                    "str"
                ],
                "normalize": [
                    "str"
                ]
            }
        },
        "test_deptree": {
            "name": "test_deptree",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ursa-master/ursa/test_regress.py": {
        "test_Regress_keys": {
            "name": "test_Regress_keys",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_Regress_mse": {
            "name": "test_Regress_mse",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ursa-master/ursa/test_util.py": {
        "test_triu": {
            "name": "test_triu",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pearson_r_unit": {
            "name": "test_pearson_r_unit",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pearsonr_symmetric": {
            "name": "test_pearsonr_symmetric",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pairwise_diagonal": {
            "name": "test_pairwise_diagonal",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "str"
                ]
            }
        },
        "_test_pairwise_symmetric": {
            "name": "_test_pairwise_symmetric",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "dict[, ]",
                    "bool",
                    "list[tuple[typing.Union[typing.Any,dict[, ]]]]",
                    "bytes"
                ]
            }
        },
        "_test_pairwise_parallel": {
            "name": "_test_pairwise_parallel",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "bool",
                    "bytes",
                    "tuple[typing.Union[int,int,bytearray]]"
                ]
            }
        }
    },
    "ursa-master/ursa/util.py": {
        "triu": {
            "name": "triu",
            "location": 5,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "pearson_r": {
            "name": "pearson_r",
            "location": 10,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "axis": [
                    "int"
                ],
                "eps": [
                    "float"
                ]
            }
        },
        "pairwise": {
            "name": "pairwise",
            "location": 23,
            "return": [],
            "arguments": {
                "f": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "data1": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "data2": [
                    "None",
                    "bytes",
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ],
                "parallel": [
                    "bool"
                ]
            }
        },
        "_pairwise": {
            "name": "_pairwise",
            "location": 29,
            "return": [],
            "arguments": {
                "f": [
                    "bool",
                    "typing.Callable[, ]"
                ],
                "data1": [],
                "data2": [
                    "None",
                    "int"
                ],
                "normalize": [
                    "bool"
                ],
                "dtype": []
            }
        },
        "_pairwise_parallel": {
            "name": "_pairwise_parallel",
            "location": 49,
            "return": [
                "ValueError"
            ],
            "arguments": {
                "f": [
                    "int",
                    "float",
                    "typing.Iterable[]",
                    "None"
                ],
                "data1": [],
                "data2": [
                    "None",
                    "int",
                    "dict[str, list[float]]",
                    "str"
                ],
                "normalize": [
                    "bool"
                ],
                "backend": [
                    "typing.Text"
                ],
                "n_jobs": [
                    "int"
                ],
                "dtype": []
            }
        },
        "compute_value": {
            "name": "compute_value",
            "location": 66,
            "return": [
                "float"
            ],
            "arguments": {
                "f": [
                    "int",
                    "list[\"Outcome\"]",
                    "str",
                    "list[dict[, ]]",
                    "float"
                ],
                "self1": [],
                "self2": [],
                "i": [
                    "int",
                    "float",
                    "None"
                ],
                "j": [
                    "int",
                    "float",
                    "None"
                ],
                "d1": [
                    "int",
                    "list[\"Outcome\"]",
                    "str",
                    "list[dict[, ]]",
                    "float"
                ],
                "d2": [
                    "int",
                    "list[\"Outcome\"]",
                    "str",
                    "list[dict[, ]]",
                    "float"
                ],
                "normalize": [
                    "int",
                    "float",
                    "None"
                ]
            }
        }
    },
    "ursa-master/ursa/__init__.py": {}
}
{
    "vendorize-master/setup.py": {},
    "vendorize-master/tests/fixture_setup.py": {
        "ProcessorBaseTestCase.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessorBaseTestCase.make_processor": {
            "name": "make_processor",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "vendorize-master/tests/test_git.py": {
        "GitTestCase.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitTestCase.test_clone": {
            "name": "test_clone",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_check_call": []
            }
        }
    },
    "vendorize-master/tests/test_processor.py": {
        "ProcessorTestCase.test_target_not_vendorized": {
            "name": "test_target_not_vendorized",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTestCase.test_discover_snapcraft_yaml": {
            "name": "test_discover_snapcraft_yaml",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTestCase.test_no_snapcraft_yaml": {
            "name": "test_no_snapcraft_yaml",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTestCase.test_process_yaml": {
            "name": "test_process_yaml",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTestCase.test_yaml_order": {
            "name": "test_yaml_order",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_check_call": []
            }
        },
        "PartTestCase.test_process_part": {
            "name": "test_process_part",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PartTestCase.test_process_part_unvendored_source": {
            "name": "test_process_part_unvendored_source",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessorTestCase.test_no_snapcraft_yaml.discover_snapcraft_yaml": {
            "name": "discover_snapcraft_yaml",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "vendorize-master/tests/test_python.py": {
        "PythonPartTestCase.setUp": {
            "name": "setUp",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PythonPartTestCase.test_get_packages": {
            "name": "test_get_packages",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PythonPartTestCase.test_process": {
            "name": "test_process",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_listdir": [],
                "mock_isdir": [],
                "mock_unpack": [],
                "mock_download": [],
                "mock_git": []
            }
        }
    },
    "vendorize-master/tests/test_sources.py": {
        "SourcesTestCase.setUp": {
            "name": "setUp",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourcesTestCase.test_fetch": {
            "name": "test_fetch",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vendorize-master/tests/test_static.py": {
        "StaticTestCase.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticTestCase.run_checker": {
            "name": "run_checker",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "str",
                    "bool"
                ]
            }
        },
        "StaticTestCase.test_flake8": {
            "name": "test_flake8",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticTestCase.test_mypy": {
            "name": "test_mypy",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticTestCase.test_codespell": {
            "name": "test_codespell",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vendorize-master/tests/__init__.py": {},
    "vendorize-master/vendorize/cli.py": {
        "validate_repository": {
            "name": "validate_repository",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "tuple[str]"
                ],
                "param": [
                    "str",
                    "tuple[str]"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "validate_host": {
            "name": "validate_host",
            "location": 40,
            "return": [
                "list[str]"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "tuple[str]"
                ],
                "param": [
                    "str",
                    "tuple[str]"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "dry_run": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "debug": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "target_repository": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "project_folder": [
                    "str",
                    "bool",
                    "list[str]"
                ],
                "host": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        }
    },
    "vendorize-master/vendorize/git.py": {
        "Git.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Git.clone": {
            "name": "clone",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str",
                    "None"
                ],
                "folder": [
                    "str",
                    "None"
                ],
                "branch": [
                    "None",
                    "str",
                    "float",
                    "typing.TextIO",
                    "list[]"
                ]
            }
        },
        "Git.prepare_branch": {
            "name": "prepare_branch",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "int",
                    "float",
                    "typing.Callable[, ]"
                ],
                "branch": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "Git.upload_branch": {
            "name": "upload_branch",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "folder": [
                    "str",
                    "None",
                    "int"
                ],
                "branch": [
                    "str",
                    "bool"
                ],
                "target": [
                    "str",
                    "bool"
                ]
            }
        },
        "Git.set_identity": {
            "name": "set_identity",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vendorize-master/vendorize/log.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 23,
            "return": [],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "ColoredLogFormatter.format": {
            "name": "format",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "vendorize-master/vendorize/plugin.py": {
        "PluginError.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Plugin.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processor": [
                    "str",
                    "None"
                ],
                "part": [
                    "str",
                    "None",
                    "bool"
                ],
                "data": [
                    "dict[str, typing.Any]",
                    "str",
                    "list[list[str]]"
                ],
                "source": [
                    "str",
                    "list[list[str]]",
                    "dict[, ]",
                    "Exception",
                    "bytes"
                ],
                "copy": [
                    "bool",
                    "dict[, ]",
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "Plugin.process": {
            "name": "process",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Plugin.debug": {
            "name": "debug",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "tuple[tuple[typing.Union[str,...]]]",
                    "int"
                ]
            }
        }
    },
    "vendorize-master/vendorize/processor.py": {
        "Processor.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Processor.discover_snapcraft_yaml": {
            "name": "discover_snapcraft_yaml",
            "location": 62,
            "return": [
                "typing.Generator[typing.Text]",
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Processor.process_yaml": {
            "name": "process_yaml",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Processor.ordered_yaml_load": {
            "name": "ordered_yaml_load",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [
                    "typing.IO",
                    "str",
                    "typing.TextIO"
                ]
            }
        },
        "Processor.ordered_yaml_dump": {
            "name": "ordered_yaml_dump",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[, ]"
                ],
                "stream": [
                    "bytes",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "Processor.process_part": {
            "name": "process_part",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "part": [
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "dict[, ]"
                ],
                "part_data": [],
                "data": [
                    "dict[, ]"
                ]
            }
        },
        "Processor.process_part_source": {
            "name": "process_part_source",
            "location": 150,
            "return": [
                "tuple[typing.Union[str,list[str]]]"
            ],
            "arguments": {
                "self": [],
                "part": [
                    "str",
                    "typing.Callable[str, str]"
                ],
                "part_data": [
                    "dict[, ]",
                    "list[]",
                    "typing.IO",
                    "bytes"
                ]
            }
        },
        "Processor.load_plugin": {
            "name": "load_plugin",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "plugin": [
                    "str"
                ],
                "data": [],
                "part": [
                    "dict[, ]",
                    "dict[str, dict[str, str]]",
                    "bool"
                ],
                "source": [
                    "dict[, ]",
                    "dict[str, dict[str, str]]",
                    "bool"
                ],
                "copy": [
                    "dict[, ]",
                    "dict[str, dict[str, str]]",
                    "bool"
                ]
            }
        },
        "Processor.die": {
            "name": "die",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Processor.copy_source": {
            "name": "copy_source",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "str"
                ],
                "destination": [
                    "str",
                    "list[tuple[]]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "Processor.prepare_source": {
            "name": "prepare_source",
            "location": 182,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "list[]"
                ],
                "copy": [
                    "str",
                    "Exception",
                    "int",
                    "tuple[typing.Union[str,int]]"
                ]
            }
        },
        "Processor.ordered_yaml_load.construct_mapping": {
            "name": "construct_mapping",
            "location": 106,
            "return": [
                "OrderedDict"
            ],
            "arguments": {
                "loader": [],
                "node": []
            }
        },
        "Processor.ordered_yaml_dump.dict_representer": {
            "name": "dict_representer",
            "location": 119,
            "return": [],
            "arguments": {
                "dumper": [],
                "data": []
            }
        }
    },
    "vendorize-master/vendorize/source.py": {
        "PartSource.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "part_data": [
                    "dict[str, typing.Any]"
                ],
                "project_folder": [
                    "str"
                ],
                "allowed_hosts": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PartSource.guess_type": {
            "name": "guess_type",
            "location": 27,
            "return": [
                "None",
                "str",
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "source_type": [
                    "None",
                    "str"
                ]
            }
        },
        "PartSource.fetch": {
            "name": "fetch",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "destination": [
                    "str",
                    "bool"
                ]
            }
        },
        "PartSource.download": {
            "name": "download",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PartSource.is_url": {
            "name": "is_url",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PartSource.extract": {
            "name": "extract",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "archive": [
                    "str",
                    "bytes"
                ],
                "destination": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "PartSource.filter_members": {
            "name": "filter_members",
            "location": 79,
            "return": [
                "typing.Generator[typing.Union[tarfile.TarInfo,str]]",
                "list[tarfile.TarInfo]",
                "list[str]"
            ],
            "arguments": {
                "self": [],
                "members": [
                    "list[tarfile.TarInfo]",
                    "list[str]"
                ]
            }
        },
        "PartSource.strip_prefix": {
            "name": "strip_prefix",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prefix": [
                    "str",
                    "bool",
                    "list[str]",
                    "typing.Type"
                ],
                "member": []
            }
        },
        "PartSource.strip_slash": {
            "name": "strip_slash",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "prefix": [],
                "name": [
                    "str"
                ]
            }
        }
    },
    "vendorize-master/vendorize/util.py": {
        "chdir": {
            "name": "chdir",
            "location": 7,
            "return": [
                "typing.Generator[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "host_not_vendorized": {
            "name": "host_not_vendorized",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "location": [
                    "int",
                    "str",
                    "None",
                    "list[dict[, ]]"
                ],
                "allowed_hosts": [
                    "list[]",
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "vendorize-master/vendorize/__init__.py": {},
    "vendorize-master/vendorize/__main__.py": {},
    "vendorize-master/vendorize/plugins/go.py": {
        "Go.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vendorize-master/vendorize/plugins/python.py": {
        "Python.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Python.process": {
            "name": "process",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Python.get_packages": {
            "name": "get_packages",
            "location": 22,
            "return": [
                "list[str]",
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Python.download_packages": {
            "name": "download_packages",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "python_packages": [
                    "list[str]",
                    "str"
                ]
            }
        },
        "Python.unpack_archives": {
            "name": "unpack_archives",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Python.prepare_branches": {
            "name": "prepare_branches",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Python.packages_from_setup_py": {
            "name": "packages_from_setup_py",
            "location": 91,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Python.packages_from_setup_py.setup": {
            "name": "setup",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "vendorize-master/vendorize/plugins/__init__.py": {}
}
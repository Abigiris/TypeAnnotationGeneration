{
    "vico-research-master/vico/argument_provider.py": {
        "ArgumentProvider.get": {
            "name": "get",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/config.py": {
        "now": {
            "name": "now",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "Config.__repr__": {
            "name": "__repr__",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.hyper_parameters": {
            "name": "hyper_parameters",
            "location": 42,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/console_arguments.py": {
        "_get": {
            "name": "_get",
            "location": 15,
            "return": [
                "Config"
            ],
            "arguments": {
                "_": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "LogLevelAction.__call__": {
            "name": "__call__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "str",
                    "None"
                ],
                "namespace": [
                    "bool",
                    "str",
                    "typing.Callable[, ]",
                    "None"
                ],
                "values": [
                    "str",
                    "int",
                    "typing.Type",
                    "tuple[]"
                ],
                "option_string": [
                    "None",
                    "str"
                ]
            }
        }
    },
    "vico-research-master/vico/cross_validation_split.py": {
        "CrossValidationSplit.train_documents": {
            "name": "train_documents",
            "location": 19,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.test_documents": {
            "name": "test_documents",
            "location": 27,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.split": {
            "name": "split",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.__len__": {
            "name": "__len__",
            "location": 38,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.documents": {
            "name": "documents",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.__next__": {
            "name": "__next__",
            "location": 47,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.__iter__": {
            "name": "__iter__",
            "location": 56,
            "return": [
                "CrossValidationSplit"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrossValidationSplit.skip": {
            "name": "skip",
            "location": 65,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "LeaveOneLanguageOut.split": {
            "name": "split",
            "location": 71,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/database.py": {
        "DocumentDatabase.save_documents": {
            "name": "save_documents",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "dict[, ]",
                    "str",
                    "tuple[tuple[typing.Union[str,...]]]"
                ],
                "overwrite": [
                    "bool"
                ]
            }
        },
        "DocumentDatabase.load_documents": {
            "name": "load_documents",
            "location": 70,
            "return": [
                "list[HTMLDocument]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentDatabase.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/data_set_reader.py": {
        "parse_list": {
            "name": "parse_list",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "l": [
                    "typing.Iterable[list[T]]",
                    "bool",
                    "typing.Iterable[T]"
                ]
            }
        },
        "DataSetReader.read_documents": {
            "name": "read_documents",
            "location": 17,
            "return": [
                "list[typing.Union[int,list[int],str]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/evaluator.py": {
        "Evaluator.evaluate": {
            "name": "evaluate",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tasks": [
                    "list[str]",
                    "list[T]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "vico-research-master/vico/experiment.py": {
        "Experiment.run": {
            "name": "run",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/fasttext.py": {
        "FastVector.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vector_file": [
                    "typing.Text"
                ],
                "transform": [
                    "None",
                    "str",
                    "list[str]",
                    "bool"
                ]
            }
        },
        "FastVector.apply_transform": {
            "name": "apply_transform",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transform": [
                    "int",
                    "typing.Type"
                ]
            }
        },
        "FastVector.export": {
            "name": "export",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "outpath": [
                    "str"
                ]
            }
        },
        "FastVector.translate_nearest_neighbour": {
            "name": "translate_nearest_neighbour",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "source_vector": [
                    "str",
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "FastVector.translate_inverted_softmax": {
            "name": "translate_inverted_softmax",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "source_vector": [
                    "typing.Callable[, ]",
                    "bool",
                    "dict[, ]",
                    "None"
                ],
                "source_space": [],
                "nsamples": [
                    "int"
                ],
                "beta": [
                    "float"
                ],
                "batch_size": [
                    "int"
                ],
                "recalculate": [
                    "bool"
                ]
            }
        },
        "FastVector.get_samples": {
            "name": "get_samples",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "nsamples": [
                    "int",
                    "str"
                ]
            }
        },
        "FastVector.normalised": {
            "name": "normalised",
            "location": 138,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": [
                    "memoryview",
                    "bool",
                    "str"
                ],
                "mat": [
                    "str",
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "int",
                    "list[]"
                ],
                "axis": [
                    "int"
                ],
                "order": [
                    "int"
                ]
            }
        },
        "FastVector.cosine_similarity": {
            "name": "cosine_similarity",
            "location": 146,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "list[tuple[]]"
                ],
                "vec_a": [
                    "str",
                    "int",
                    "list[int]"
                ],
                "vec_b": [
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        },
        "FastVector.__contains__": {
            "name": "__contains__",
            "location": 151,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "typing.Iterable[str]",
                    "int"
                ]
            }
        },
        "FastVector.__getitem__": {
            "name": "__getitem__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "int",
                    "bytes",
                    "str",
                    "list[str]"
                ]
            }
        }
    },
    "vico-research-master/vico/html_document.py": {
        "HTMLDocument.windows": {
            "name": "windows",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLDocument.set_html": {
            "name": "set_html",
            "location": 48,
            "return": [
                "HTMLDocument"
            ],
            "arguments": {
                "self": [],
                "html": [
                    "bool",
                    "float",
                    "str",
                    "None"
                ]
            }
        },
        "HTMLDocument.set_tokens": {
            "name": "set_tokens",
            "location": 53,
            "return": [
                "HTMLDocument"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "str",
                    "typing.Mapping",
                    "None",
                    "float",
                    "list[int]",
                    "int"
                ]
            }
        },
        "HTMLDocument.__repr__": {
            "name": "__repr__",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTMLDocument.__repr__.value_or_none": {
            "name": "value_or_none",
            "location": 59,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "value": []
            }
        },
        "HTMLDocument.__repr__.format_html": {
            "name": "format_html",
            "location": 62,
            "return": [],
            "arguments": {}
        }
    },
    "vico-research-master/vico/model_trainer.py": {
        "ModelTrainer.fit_tasks": {
            "name": "fit_tasks",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "all_data": [
                    "bool"
                ]
            }
        },
        "ModelTrainer.fit_tasks.find_best_epoch": {
            "name": "find_best_epoch",
            "location": 19,
            "return": [],
            "arguments": {
                "ts": []
            }
        },
        "ModelTrainer.fit_tasks.fit_on_all_data": {
            "name": "fit_on_all_data",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "epochs": [],
                "ts": []
            }
        }
    },
    "vico-research-master/vico/pipeline.py": {
        "html_tokenize_document": {
            "name": "html_tokenize_document",
            "location": 11,
            "return": [],
            "arguments": {
                "html": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "language": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "_useless_tags": {
            "name": "_useless_tags",
            "location": 49,
            "return": [
                "tuple[typing.Text]"
            ],
            "arguments": {}
        },
        "window": {
            "name": "window",
            "location": 74,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "iterable": [
                    "int",
                    "str",
                    "None"
                ],
                "left": [
                    "int"
                ],
                "right": [
                    "float"
                ],
                "padding": [
                    "None",
                    "dict[, ]",
                    "bool"
                ],
                "step": [
                    "int"
                ]
            }
        },
        "remove_tags": {
            "name": "remove_tags",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "html": [
                    "str",
                    "int",
                    "float",
                    "list[int]",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "lowercase": {
            "name": "lowercase",
            "location": 113,
            "return": [
                "str"
            ],
            "arguments": {
                "html": [
                    "str"
                ]
            }
        },
        "html_tokenize_document.format_attributes": {
            "name": "format_attributes",
            "location": 14,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "tag": []
            }
        },
        "html_tokenize_document.format_tag": {
            "name": "format_tag",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "tag": []
            }
        },
        "html_tokenize_document.format_endtag": {
            "name": "format_endtag",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "tag": []
            }
        },
        "html_tokenize_document.tokenize": {
            "name": "tokenize",
            "location": 27,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "html_tokenize_document.tokenize_element": {
            "name": "tokenize_element",
            "location": 32,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "element": []
            }
        },
        "EANPipeline.out_of_vocab_index": {
            "name": "out_of_vocab_index",
            "location": 123,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "EANPipeline.tokenize": {
            "name": "tokenize",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "html": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ],
                "language": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "EANPipeline.preprocess": {
            "name": "preprocess",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "html": [
                    "str",
                    "float",
                    "typing.Type"
                ]
            }
        },
        "EANPipeline.tokens2indices": {
            "name": "tokens2indices",
            "location": 133,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "str"
                ]
            }
        },
        "EANPipeline.create_windows": {
            "name": "create_windows",
            "location": 138,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "indices": [
                    "dict[str, typing.Any]",
                    "BaseException"
                ]
            }
        },
        "EANPipeline.__call__": {
            "name": "__call__",
            "location": 148,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "html": [
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ],
                "language": [
                    "typing.Text"
                ]
            }
        },
        "EANPipeline.load": {
            "name": "load",
            "location": 158,
            "return": [
                "EANPipeline"
            ],
            "arguments": {
                "hdf5_path": [
                    "str",
                    "list[str]",
                    "None"
                ],
                "indices_path": [
                    "str"
                ]
            }
        }
    },
    "vico-research-master/vico/preprocess.py": {
        "_useless_tags": {
            "name": "_useless_tags",
            "location": 17,
            "return": [
                "List"
            ],
            "arguments": {}
        },
        "remove_tags": {
            "name": "remove_tags",
            "location": 44,
            "return": [],
            "arguments": {
                "doc": []
            }
        },
        "remove_useless_tags": {
            "name": "remove_useless_tags",
            "location": 54,
            "return": [],
            "arguments": {
                "docs": [
                    "str",
                    "int",
                    "tuple[str]"
                ]
            }
        },
        "html_tokenize_document": {
            "name": "html_tokenize_document",
            "location": 60,
            "return": [],
            "arguments": {
                "doc": []
            }
        },
        "html_tokenize": {
            "name": "html_tokenize",
            "location": 99,
            "return": [],
            "arguments": {
                "docs": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "simple_tokenize": {
            "name": "simple_tokenize",
            "location": 105,
            "return": [],
            "arguments": {
                "docs": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "lowercase": {
            "name": "lowercase",
            "location": 112,
            "return": [
                "list[]"
            ],
            "arguments": {
                "docs": [
                    "bytes",
                    "list[list[]]"
                ]
            }
        },
        "maxlen": {
            "name": "maxlen",
            "location": 117,
            "return": [],
            "arguments": {
                "documents": [
                    "list[tuple[typing.Union[int,int]]]",
                    "str"
                ]
            }
        },
        "pipeline": {
            "name": "pipeline",
            "location": 121,
            "return": [],
            "arguments": {
                "docs": [
                    "int",
                    "str",
                    "typing.Sequence[str]",
                    "bytes"
                ]
            }
        },
        "html_tokenize_document.format_attributes": {
            "name": "format_attributes",
            "location": 63,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "tag": []
            }
        },
        "html_tokenize_document.format_tag": {
            "name": "format_tag",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "tag": []
            }
        },
        "html_tokenize_document.format_endtag": {
            "name": "format_endtag",
            "location": 73,
            "return": [
                "str"
            ],
            "arguments": {
                "tag": []
            }
        },
        "html_tokenize_document.tokenize": {
            "name": "tokenize",
            "location": 76,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "text": []
            }
        },
        "html_tokenize_document.tokenize_element": {
            "name": "tokenize_element",
            "location": 81,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "element": []
            }
        },
        "simple_tokenize.tokenize": {
            "name": "tokenize",
            "location": 106,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "doc": []
            }
        }
    },
    "vico-research-master/vico/shared_layers.py": {
        "SharedLayers.__call__": {
            "name": "__call__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "input_layer": [
                    "typing.Callable[, ]",
                    "int",
                    "float"
                ]
            }
        },
        "SharedLayersBuilder.build": {
            "name": "build",
            "location": 33,
            "return": [
                "SharedLayers"
            ],
            "arguments": {
                "self": []
            }
        },
        "SharedLayersBuilder.get_embedding_layer": {
            "name": "get_embedding_layer",
            "location": 42,
            "return": [
                "Embedding"
            ],
            "arguments": {
                "self": []
            }
        },
        "SharedLayersBuilder.get_convolutional_layers": {
            "name": "get_convolutional_layers",
            "location": 63,
            "return": [
                "tuple[Conv1D]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/summarize.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "rmse": {
            "name": "rmse",
            "location": 16,
            "return": [],
            "arguments": {
                "losses": []
            }
        },
        "run": {
            "name": "run",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "vico-research-master/vico/types.py": {},
    "vico-research-master/vico/vocabulary.py": {
        "Vocabulary.embedding": {
            "name": "embedding",
            "location": 24,
            "return": [
                "int",
                "float",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary._read_embedding": {
            "name": "_read_embedding",
            "location": 34,
            "return": [
                "int",
                "float",
                "dict[tuple[typing.Union[str,str]], int]",
                "typing.Final"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.indices": {
            "name": "indices",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.unique_tokens": {
            "name": "unique_tokens",
            "location": 59,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.languages": {
            "name": "languages",
            "location": 63,
            "return": [
                "set[]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.__len__": {
            "name": "__len__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.make_batch": {
            "name": "make_batch",
            "location": 71,
            "return": [
                "tuple[typing.Union[str,list[],float,list[list[typing.Any]],set[str],list[int]]]"
            ],
            "arguments": {
                "self": [],
                "batch": [
                    "str",
                    "bytearray"
                ],
                "labeller": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "Vocabulary.padding_index": {
            "name": "padding_index",
            "location": 94,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.out_of_vocab_index": {
            "name": "out_of_vocab_index",
            "location": 98,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.size": {
            "name": "size",
            "location": 102,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.make_batch.index": {
            "name": "index",
            "location": 76,
            "return": [],
            "arguments": {
                "token": []
            }
        },
        "Vocabulary.make_batch.tokens2indices": {
            "name": "tokens2indices",
            "location": 79,
            "return": [
                "list[]"
            ],
            "arguments": {
                "doc": []
            }
        }
    },
    "vico-research-master/vico/__init__.py": {
        "configure_root_logger": {
            "name": "configure_root_logger",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "c": [
                    "int",
                    "str",
                    "list[str]",
                    "float",
                    "typing.Sequence[typing.Any]"
                ]
            }
        },
        "immutable_array": {
            "name": "immutable_array",
            "location": 26,
            "return": [
                "list[int]",
                "list[]",
                "list[list[int]]",
                "float",
                "int"
            ],
            "arguments": {
                "a": [
                    "str"
                ]
            }
        }
    },
    "vico-research-master/vico/crawl/amazon.py": {
        "AmazonSpider.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AmazonSpider.get_links": {
            "name": "get_links",
            "location": 10,
            "return": [
                "typing.Generator[Link]"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "vico-research-master/vico/crawl/amazon_meta.py": {
        "AmazonDownloadSpider.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "labels_file": [
                    "typing.Text"
                ],
                "output_folder": [
                    "typing.Text"
                ]
            }
        },
        "AmazonDownloadSpider.parse": {
            "name": "parse",
            "location": 24,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "list[dict[, ]]",
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "AmazonDownloadSpider.save": {
            "name": "save",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "dict[, ]"
                ]
            }
        },
        "AmazonDownloadSpider._parse_labels": {
            "name": "_parse_labels",
            "location": 38,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "AmazonDownloadSpider.create_urls": {
            "name": "create_urls",
            "location": 44,
            "return": [
                "typing.Generator[typing.Text]"
            ],
            "arguments": {
                "self": [],
                "asin": [
                    "str",
                    "float",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "AmazonDownloadSpider._read_start_urls": {
            "name": "_read_start_urls",
            "location": 51,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "labels_file": [
                    "bool",
                    "typing.Callable[, ]",
                    "typing.IO",
                    "bytes"
                ]
            }
        },
        "AmazonDownloadSpider.get_language": {
            "name": "get_language",
            "location": 59,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "int",
                    "None"
                ]
            }
        },
        "AmazonDownloadSpider.get_asin": {
            "name": "get_asin",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        }
    },
    "vico-research-master/vico/crawl/download_spider.py": {
        "DownloadSpider.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "domain": [
                    "str"
                ],
                "labels_file": [
                    "typing.Text"
                ],
                "output_folder": [
                    "typing.Text"
                ],
                "language": [
                    "typing.Text"
                ]
            }
        },
        "DownloadSpider._parse_start_urls": {
            "name": "_parse_start_urls",
            "location": 37,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "labels_csv": [
                    "set[str]",
                    "str",
                    "list[str]",
                    "bool",
                    "list[]"
                ]
            }
        },
        "DownloadSpider.parse": {
            "name": "parse",
            "location": 42,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "dict[, ]"
                ]
            }
        },
        "DownloadSpider.get_links": {
            "name": "get_links",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "dict[, ]",
                    "dict[str, typing.Union[str,int]]"
                ]
            }
        },
        "DownloadSpider.save": {
            "name": "save",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "typing.Iterator",
                    "dict[, ]"
                ]
            }
        },
        "DownloadSpider.format_file_name": {
            "name": "format_file_name",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "DownloadSpider.exists": {
            "name": "exists",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "vico-research-master/vico/crawl/parfumdreams.py": {
        "ParfumdreamsSpider.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParfumdreamsSpider.get_links": {
            "name": "get_links",
            "location": 10,
            "return": [
                "typing.Generator[Link]"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "vico-research-master/vico/crawl/__init__.py": {},
    "vico-research-master/vico/scripts/count_amazon_labels.py": {
        "_parse_labels": {
            "name": "_parse_labels",
            "location": 12,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_category": {
            "name": "get_category",
            "location": 19,
            "return": [
                "list[tuple[typing.Union[tuple[],int]]]"
            ],
            "arguments": {
                "file": [
                    "dict[str, typing.Any]",
                    "list[str]",
                    "dict[, ]",
                    "set[]",
                    "list[]",
                    "tuple[]",
                    "list[dict[str, str]]"
                ]
            }
        },
        "count_categories": {
            "name": "count_categories",
            "location": 30,
            "return": [
                "tuple[bool]"
            ],
            "arguments": {
                "mapped_value": [
                    "tuple[typing.Union[int,int]]",
                    "float"
                ]
            }
        },
        "count": {
            "name": "count",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 51,
            "return": [],
            "arguments": {}
        }
    },
    "vico-research-master/vico/scripts/create_bio_labels.py": {},
    "vico-research-master/vico/scripts/create_ean_bio_labels.py": {},
    "vico-research-master/vico/scripts/download.py": {
        "format_file_name": {
            "name": "format_file_name",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool"
                ]
            }
        },
        "download_all": {
            "name": "download_all",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "label_path": [
                    "str"
                ],
                "output_folder": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "download": {
            "name": "download",
            "location": 28,
            "return": [
                "str",
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "typing.Iterable[bytes]",
                    "int",
                    "typing.Callable[, ]",
                    "bytes"
                ],
                "output_folder": [
                    "str"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 41,
            "return": [],
            "arguments": {}
        }
    },
    "vico-research-master/vico/scripts/download_amazon_pages.py": {
        "parse": {
            "name": "parse",
            "location": 14,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "create_urls": {
            "name": "create_urls",
            "location": 21,
            "return": [
                "typing.Generator[tuple[typing.Union[typing.Text,typing.Text,typing.Text,typing.Text,typing.Text,typing.Text]]]"
            ],
            "arguments": {
                "asin": [
                    "str",
                    "float",
                    "int",
                    "dict[, ]"
                ]
            }
        },
        "download": {
            "name": "download",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "dict[, ]",
                    "bytes"
                ],
                "output_path": [
                    "str"
                ]
            }
        },
        "create_output_path": {
            "name": "create_output_path",
            "location": 45,
            "return": [],
            "arguments": {
                "asin": [
                    "str",
                    "int",
                    "list[int]",
                    "None"
                ],
                "folder": [
                    "str"
                ],
                "domain": [
                    "str"
                ]
            }
        },
        "process": {
            "name": "process",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "json": [
                    "str"
                ],
                "folder": [
                    "typing.TextIO",
                    "str",
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "folder": [
                    "str",
                    "bytes",
                    "dict[str, typing.Any]",
                    "None",
                    "list[]"
                ],
                "gzip_path": [
                    "str",
                    "list[]",
                    "int",
                    "None"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 64,
            "return": [],
            "arguments": {}
        }
    },
    "vico-research-master/vico/scripts/html_retro_fitter.py": {
        "is_tag": {
            "name": "is_tag",
            "location": 34,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        }
    },
    "vico-research-master/vico/scripts/long2wide.py": {
        "read_as_utf_8": {
            "name": "read_as_utf_8",
            "location": 7,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "pivot": {
            "name": "pivot",
            "location": 19,
            "return": [],
            "arguments": {
                "dataframe": [
                    "str",
                    "list[str]",
                    "typing.Callable[str, T]"
                ]
            }
        },
        "output_path": {
            "name": "output_path",
            "location": 27,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 43,
            "return": [],
            "arguments": {}
        }
    },
    "vico-research-master/vico/scripts/make_windows.py": {
        "make_windows": {
            "name": "make_windows",
            "location": 23,
            "return": [
                "tuple[list[list[int]]]"
            ],
            "arguments": {
                "sample": [
                    "list[]",
                    "int",
                    "str",
                    "list[str]"
                ],
                "window_size": [
                    "int"
                ]
            }
        },
        "is_tag": {
            "name": "is_tag",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "remove_html": {
            "name": "remove_html",
            "location": 72,
            "return": [
                "typing.Callable[, ]",
                "collections.abc.Coroutine"
            ],
            "arguments": {
                "sample": [
                    "typing.Callable[, ]",
                    "collections.abc.Coroutine"
                ]
            }
        },
        "make_windows.encode": {
            "name": "encode",
            "location": 24,
            "return": [
                "float"
            ],
            "arguments": {
                "bio": []
            }
        }
    },
    "vico-research-master/vico/scripts/map_reduce.py": {
        "SimpleMapReduce.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "map_func": [
                    "int"
                ],
                "reduce_func": [
                    "int"
                ],
                "num_workers": [
                    "None",
                    "int"
                ]
            }
        },
        "SimpleMapReduce.partition": {
            "name": "partition",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "mapped_values": []
            }
        },
        "SimpleMapReduce.__call__": {
            "name": "__call__",
            "location": 41,
            "return": [
                "dict[str, typing.Any]",
                "str",
                "tuple[]",
                "tuple[typing.Union[str,str]]",
                "float"
            ],
            "arguments": {
                "self": [],
                "inputs": [
                    "str",
                    "dict[str, typing.Any]",
                    "bool"
                ],
                "chunksize": [
                    "int"
                ]
            }
        }
    },
    "vico-research-master/vico/scripts/preprocess.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "database_path": [
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        }
    },
    "vico-research-master/vico/scripts/read_documents.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "vendor": {
            "name": "vendor",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str",
                    "float",
                    "list[tuple[typing.Union[int,int]]]"
                ]
            }
        },
        "language": {
            "name": "language",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "html": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "read_documents": {
            "name": "read_documents",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "label_path": [
                    "bool",
                    "str",
                    "typing.TextIO",
                    "typing.BinaryIO",
                    "None"
                ],
                "page_folder": [
                    "str",
                    "list[str]"
                ],
                "database_path": [
                    "str"
                ]
            }
        },
        "read_documents.get": {
            "name": "get",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "value": [],
                "convert": [
                    "str"
                ]
            }
        }
    },
    "vico-research-master/vico/scripts/transform_embedding.py": {
        "is_tag": {
            "name": "is_tag",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        }
    },
    "vico-research-master/vico/tasks/brand_task.py": {
        "format_brand": {
            "name": "format_brand",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "brand": [
                    "str"
                ]
            }
        },
        "BrandTask.label": {
            "name": "label",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "typing.Callable[str, bool]",
                    "list[object]",
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "BrandTask.scoring_function": {
            "name": "scoring_function",
            "location": 21,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "BrandTask.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shared_layers": [
                    "str",
                    "None"
                ],
                "all_data": [
                    "bool"
                ]
            }
        },
        "BrandTask.is_best_score": {
            "name": "is_best_score",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "f1": [
                    "str",
                    "typing.Type"
                ]
            }
        },
        "BrandTask.filter_documents": {
            "name": "filter_documents",
            "location": 31,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "documents": []
            }
        },
        "BrandTask.name": {
            "name": "name",
            "location": 37,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "BrandTask._score": {
            "name": "_score",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "windows": [
                    "int",
                    "float",
                    "None",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "labels": [
                    "list[str]"
                ]
            }
        }
    },
    "vico-research-master/vico/tasks/classification_task.py": {
        "ClassificationTask.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shared_layers": [
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "all_data": [
                    "bool"
                ]
            }
        },
        "ClassificationTask.name": {
            "name": "name",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassificationTask.scoring_function": {
            "name": "scoring_function",
            "location": 30,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassificationTask.filter_documents": {
            "name": "filter_documents",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "bool",
                    "list[]"
                ]
            }
        },
        "ClassificationTask.label": {
            "name": "label",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "ClassificationTask.encode_labels": {
            "name": "encode_labels",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "documents": [
                    "list[tuple[typing.Union[str,float,int,float]]]"
                ]
            }
        },
        "ClassificationTask.compile_model": {
            "name": "compile_model",
            "location": 48,
            "return": [
                "Model"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/tasks/ean_task.py": {
        "EANTask.name": {
            "name": "name",
            "location": 13,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "EANTask.label": {
            "name": "label",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "typing.Callable[str, bool]",
                    "list[object]",
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "EANTask.filter_documents": {
            "name": "filter_documents",
            "location": 19,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "documents": []
            }
        },
        "EANTask._score": {
            "name": "_score",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "windows": [
                    "int",
                    "float",
                    "None",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "labels": [
                    "list[str]"
                ]
            }
        },
        "EANTask.scoring_function": {
            "name": "scoring_function",
            "location": 31,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "EANTask.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shared_layers": [
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "all_data": [
                    "bool"
                ]
            }
        },
        "EANTask.is_best_score": {
            "name": "is_best_score",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "f1": [
                    "str",
                    "typing.Type"
                ]
            }
        }
    },
    "vico-research-master/vico/tasks/language_task.py": {
        "LanguageTask.label": {
            "name": "label",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "typing.Callable[str, bool]",
                    "list[object]",
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "LanguageTask.filter_documents": {
            "name": "filter_documents",
            "location": 9,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "list[]"
                ]
            }
        },
        "LanguageTask.name": {
            "name": "name",
            "location": 14,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/tasks/price_task.py": {
        "PriceTask.scoring_function": {
            "name": "scoring_function",
            "location": 11,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PriceTask.filter_documents": {
            "name": "filter_documents",
            "location": 14,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "documents": []
            }
        },
        "PriceTask.name": {
            "name": "name",
            "location": 18,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "PriceTask.label": {
            "name": "label",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "typing.Callable[str, bool]",
                    "list[object]",
                    "str",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "PriceTask.encode_labels": {
            "name": "encode_labels",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "documents": [
                    "list[tuple[typing.Union[str,float,int,float]]]"
                ]
            }
        },
        "PriceTask.compile_model": {
            "name": "compile_model",
            "location": 27,
            "return": [
                "Model"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/tasks/sequence_classification_task.py": {
        "SequenceClassificationTask.stack": {
            "name": "stack",
            "location": 16,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "SequenceClassificationTask.name": {
            "name": "name",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceClassificationTask.label": {
            "name": "label",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "SequenceClassificationTask.scoring_function": {
            "name": "scoring_function",
            "location": 35,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceClassificationTask.filter_documents": {
            "name": "filter_documents",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "bool",
                    "list[]"
                ]
            }
        },
        "SequenceClassificationTask.compile_model": {
            "name": "compile_model",
            "location": 42,
            "return": [
                "Model"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceClassificationTask.encode_labels": {
            "name": "encode_labels",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "SequenceClassificationTask.fit": {
            "name": "fit",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceClassificationTask.train_score": {
            "name": "train_score",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SequenceClassificationTask.early_stopping_score": {
            "name": "early_stopping_score",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SequenceClassificationTask._score": {
            "name": "_score",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "windows": [
                    "bool",
                    "float"
                ],
                "labels": [
                    "bool",
                    "float"
                ]
            }
        },
        "SequenceClassificationTask.test_score": {
            "name": "test_score",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SequenceClassificationTask.fit_early_stopping": {
            "name": "fit_early_stopping",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/tasks/task.py": {
        "split": {
            "name": "split",
            "location": 21,
            "return": [
                "tuple[list[str]]"
            ],
            "arguments": {
                "documents": [
                    "typing.Callable[T, bool]",
                    "str",
                    "list[tuple[]]",
                    "bool"
                ]
            }
        },
        "Task.save": {
            "name": "save",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.name": {
            "name": "name",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.scoring_function": {
            "name": "scoring_function",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.input_length": {
            "name": "input_length",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shared_layers": [
                    "str",
                    "dict[, ]",
                    "int"
                ],
                "all_data": [
                    "bool"
                ]
            }
        },
        "Task.filter_documents": {
            "name": "filter_documents",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "bool",
                    "list[]"
                ]
            }
        },
        "Task.compile_model": {
            "name": "compile_model",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.encode_labels": {
            "name": "encode_labels",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Task.label": {
            "name": "label",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "Task.is_best_score": {
            "name": "is_best_score",
            "location": 95,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "metric": [
                    "str",
                    "int"
                ]
            }
        },
        "Task.recompile": {
            "name": "recompile",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.fit_early_stopping": {
            "name": "fit_early_stopping",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.update_epoch": {
            "name": "update_epoch",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.fit": {
            "name": "fit",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.train_score": {
            "name": "train_score",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task._score": {
            "name": "_score",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "tuple[]",
                    "dict[, ]"
                ]
            }
        },
        "Task.test_score": {
            "name": "test_score",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.early_stopping_score": {
            "name": "early_stopping_score",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/tasks/vendor_task.py": {
        "VendorTask.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shared_layers": [
                    "str",
                    "bool",
                    "typing.Type"
                ],
                "all_data": [
                    "bool"
                ]
            }
        },
        "VendorTask.label": {
            "name": "label",
            "location": 18,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "VendorTask.stack": {
            "name": "stack",
            "location": 21,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "VendorTask.filter_documents": {
            "name": "filter_documents",
            "location": 30,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "list[]"
                ]
            }
        },
        "VendorTask.name": {
            "name": "name",
            "location": 35,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "VendorTask.compile_model": {
            "name": "compile_model",
            "location": 38,
            "return": [
                "Model"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vico-research-master/vico/tasks/__init__.py": {
        "TaskBuilder.build": {
            "name": "build",
            "location": 22,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "all_data": [
                    "bool"
                ]
            }
        },
        "TaskBuilder.build.task_factory": {
            "name": "task_factory",
            "location": 25,
            "return": [],
            "arguments": {
                "target": []
            }
        }
    }
}
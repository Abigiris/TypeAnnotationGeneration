{
    "video_store_service-master/test_post.py": {},
    "video_store_service-master/wsgi.py": {},
    "video_store_service-master/video_store_service/apiclient.py": {
        "get_auth_string": {
            "name": "get_auth_string",
            "location": 14,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "credentials": [
                    "str"
                ]
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ixapi_config": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "Client.getURL": {
            "name": "getURL",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "rel": [
                    "str"
                ]
            }
        },
        "Client.get_auth_header": {
            "name": "get_auth_header",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "company_id": [
                    "None",
                    "str",
                    "int",
                    "list[int]"
                ]
            }
        },
        "Client.get_webaccess_connection": {
            "name": "get_webaccess_connection",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "camera_config": []
            }
        }
    },
    "video_store_service-master/video_store_service/config_util.py": {
        "get_user_choice": {
            "name": "get_user_choice",
            "location": 13,
            "return": [],
            "arguments": {
                "response": [
                    "list[]"
                ]
            }
        },
        "run_configuration_utility": {
            "name": "run_configuration_utility",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "client": []
            }
        }
    },
    "video_store_service-master/video_store_service/record.py": {
        "data_streamer_thread": {
            "name": "data_streamer_thread",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "ffmpeg": [],
                "request": []
            }
        },
        "get_ffmpeg_command": {
            "name": "get_ffmpeg_command",
            "location": 44,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "file_name": [
                    "str",
                    "list[str]"
                ],
                "video_config": [
                    "dict[str, typing.Any]",
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        },
        "run_ffmpeg_and_record": {
            "name": "run_ffmpeg_and_record",
            "location": 80,
            "return": [
                "tuple[typing.Union[bool,typing.Text]]"
            ],
            "arguments": {
                "cmd": [
                    "str",
                    "bytes",
                    "list[str]",
                    "int"
                ],
                "duration": [
                    "int"
                ],
                "access": [
                    "int",
                    "str"
                ]
            }
        },
        "FFMPEGRecorder.__init__": {
            "name": "__init__",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[, ]"
                ],
                "client": [
                    "str",
                    "int",
                    "dict[str, typing.Any]",
                    "list[]"
                ]
            }
        },
        "FFMPEGRecorder.record": {
            "name": "record",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "file_name": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "FFMPEGRecorder.do_test_run": {
            "name": "do_test_run",
            "location": 155,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "video_store_service-master/video_store_service/__init__.py": {},
    "video_store_service-master/video_store_service/__main__.py": {
        "load_config": {
            "name": "load_config",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "record_thread": {
            "name": "record_thread",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "ffmpeg_recorder": [],
                "q": [
                    "dict[, ]"
                ]
            }
        },
        "get_name": {
            "name": "get_name",
            "location": 56,
            "return": [
                "None",
                "str",
                "list[str]",
                "set[str]",
                "dict[str, str]",
                "int",
                "dict[, ]"
            ],
            "arguments": {
                "hook": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 82,
            "return": [
                "Flask"
            ],
            "arguments": {}
        },
        "create_app.webhook": {
            "name": "webhook",
            "location": 102,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "wallet-backend-master/etc/gunicorn_conf_dev.py": {},
    "wallet-backend-master/etc/gunicorn_conf_prod.py": {},
    "wallet-backend-master/migrations/env.py": {
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online.process_revision_directives": {
            "name": "process_revision_directives",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "context": [],
                "revision": [],
                "directives": []
            }
        }
    },
    "wallet-backend-master/migrations/versions/2019-07-26_ad10578438b5_.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wallet-backend-master/tests/conftest.py": {
        "app": {
            "name": "app",
            "location": 27,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {}
        },
        "client": {
            "name": "client",
            "location": 42,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "db": {
            "name": "db",
            "location": 47,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "app": []
            }
        },
        "db_session": {
            "name": "db_session",
            "location": 62,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "db": [
                    "str"
                ]
            }
        },
        "config_env_vars_setup": {
            "name": "config_env_vars_setup",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "config_class": {
            "name": "config_class",
            "location": 126,
            "return": [
                "TestConfig"
            ],
            "arguments": {}
        }
    },
    "wallet-backend-master/tests/test_base.py": {
        "TestConfigFetch.test_string": {
            "name": "test_string",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "bool",
                    "str",
                    "dict[, ]",
                    "list[str]"
                ]
            }
        },
        "TestConfigFetch.test_string_tuple": {
            "name": "test_string_tuple",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "dict[, ]",
                    "list[dict[str, typing.Any]]",
                    "str",
                    "None",
                    "list[]"
                ]
            }
        },
        "TestConfigFetch.test_int": {
            "name": "test_int",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "bool",
                    "typing.Callable[float, float]"
                ]
            }
        },
        "TestConfigFetch.test_int_tuple": {
            "name": "test_int_tuple",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestConfigFetch.test_float": {
            "name": "test_float",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "dict[, ]",
                    "typing.Callable[, ]",
                    "str",
                    "bool"
                ]
            }
        },
        "TestConfigFetch.test_float_tuple": {
            "name": "test_float_tuple",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "TestConfigFetch.test_boolean": {
            "name": "test_boolean",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "dict[, ]",
                    "None",
                    "str"
                ]
            }
        },
        "TestConfigFetch.test_alternate_config_key": {
            "name": "test_alternate_config_key",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "bool",
                    "str",
                    "list[str]"
                ]
            }
        },
        "TestConfigFetch.test_default_values": {
            "name": "test_default_values",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": []
            }
        },
        "TestConfigFetch.test_unexpected_tuple_value_type": {
            "name": "test_unexpected_tuple_value_type",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "None"
                ]
            }
        },
        "TestConfigFetch.test_repr": {
            "name": "test_repr",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_class": [
                    "dict[str, typing.Any]",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "TestFlaskBase.test_config": {
            "name": "test_config",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFlaskBase.test_client": {
            "name": "test_client",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        }
    },
    "wallet-backend-master/tests/__init__.py": {},
    "wallet-backend-master/tests/test_endpoints/conftest.py": {
        "user_view_init_data": {
            "name": "user_view_init_data",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "db_session": []
            }
        }
    },
    "wallet-backend-master/tests/test_endpoints/test_user.py": {
        "TestUserView.test_valid_user": {
            "name": "test_valid_user",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "db_session": []
            }
        },
        "TestUserView.test_valid_user_with_amount": {
            "name": "test_valid_user_with_amount",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "db_session": []
            }
        },
        "TestUserView.test_invalid_request_data": {
            "name": "test_invalid_request_data",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "db_session": [
                    "list[]",
                    "dict[, ]"
                ]
            }
        },
        "TestUserView.test_duplicate_user": {
            "name": "test_duplicate_user",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "db_session": []
            }
        },
        "TestUserBalanceView.test_existing_user": {
            "name": "test_existing_user",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestUserBalanceView.test_inexistent_user": {
            "name": "test_inexistent_user",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestUserTransferView.test_valid_transfer": {
            "name": "test_valid_transfer",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestUserTransferView.test_invalid_request_data": {
            "name": "test_invalid_request_data",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestUserTransferView.test_not_enough_funds": {
            "name": "test_not_enough_funds",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestUserTransferView.test_inexistent_sender": {
            "name": "test_inexistent_sender",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        },
        "TestUserTransferView.test_inexistent_recipient": {
            "name": "test_inexistent_recipient",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": []
            }
        }
    },
    "wallet-backend-master/tests/test_endpoints/__init__.py": {},
    "wallet-backend-master/wallet_api/config.py": {
        "PSQLClientConfig.connection_url": {
            "name": "connection_url",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "test": [
                    "bool"
                ]
            }
        }
    },
    "wallet-backend-master/wallet_api/manage.py": {
        "make_shell_context": {
            "name": "make_shell_context",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "create_db": {
            "name": "create_db",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wallet-backend-master/wallet_api/models.py": {
        "use_identity": {
            "name": "use_identity",
            "location": 83,
            "return": [],
            "arguments": {
                "element": [
                    "int",
                    "float"
                ],
                "compiler": []
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 42,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransactionLog.__repr__": {
            "name": "__repr__",
            "location": 69,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wallet-backend-master/wallet_api/routes.py": {
        "handle_base_exceptions": {
            "name": "handle_base_exceptions",
            "location": 29,
            "return": [
                "int",
                "dict[str, str]",
                "dict[, ]"
            ],
            "arguments": {
                "e": [
                    "Exception",
                    "bool"
                ]
            }
        }
    },
    "wallet-backend-master/wallet_api/wsgi.py": {},
    "wallet-backend-master/wallet_api/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 15,
            "return": [
                "Flask"
            ],
            "arguments": {
                "test": [
                    "bool"
                ]
            }
        },
        "db_isolation_level": {
            "name": "db_isolation_level",
            "location": 57,
            "return": [],
            "arguments": {
                "level": []
            }
        },
        "db_isolation_level.decorator": {
            "name": "decorator",
            "location": 66,
            "return": [],
            "arguments": {
                "view": []
            }
        },
        "db_isolation_level.decorator.view_wrapper": {
            "name": "view_wrapper",
            "location": 68,
            "return": [],
            "arguments": {}
        }
    },
    "wallet-backend-master/wallet_api/common/configfetch.py": {
        "get_attributes": {
            "name": "get_attributes",
            "location": 179,
            "return": [
                "dict[str, ]"
            ],
            "arguments": {
                "obj": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Value.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "default_value": [
                    "None",
                    "bool",
                    "typing.Mapping",
                    "dict[, ]",
                    "str"
                ],
                "prefix": [
                    "None",
                    "int",
                    "typing.Callable[, ]",
                    "float"
                ],
                "alternate_key": [
                    "None",
                    "bool",
                    "bytes",
                    "list[str]",
                    "str"
                ]
            }
        },
        "Value.get_value_from_env": {
            "name": "get_value_from_env",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "TupleValue.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "default_value": [
                    "None",
                    "float",
                    "int",
                    "typing.Callable[, ]",
                    "list[]"
                ],
                "prefix": [
                    "None",
                    "float",
                    "int",
                    "typing.Callable[, ]",
                    "list[]"
                ],
                "alternate_key": [
                    "None",
                    "float",
                    "int",
                    "typing.Callable[, ]",
                    "list[]"
                ],
                "separator": [
                    "typing.Text"
                ]
            }
        },
        "TupleValue.get_value_from_env": {
            "name": "get_value_from_env",
            "location": 72,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Exception",
                    "str"
                ]
            }
        },
        "BooleanValue.get_value_from_env": {
            "name": "get_value_from_env",
            "location": 118,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Exception",
                    "str"
                ]
            }
        },
        "IntValue.get_value_from_env": {
            "name": "get_value_from_env",
            "location": 148,
            "return": [
                "self_@__type"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Exception",
                    "str"
                ]
            }
        },
        "ConfigurationBase.__new__": {
            "name": "__new__",
            "location": 199,
            "return": [],
            "arguments": {
                "cls": [
                    "str",
                    "Exception",
                    "int",
                    "typing.Type",
                    "list[str]"
                ],
                "name": [
                    "str",
                    "Exception",
                    "int",
                    "typing.Type",
                    "list[str]"
                ],
                "bases": [
                    "str"
                ],
                "attrs": [
                    "str",
                    "bool",
                    "None"
                ]
            }
        },
        "ConfigurationBase.__repr__": {
            "name": "__repr__",
            "location": 220,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wallet-backend-master/wallet_api/common/exception.py": {
        "BaseApiException.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "None",
                    "int",
                    "str"
                ],
                "status_code": [
                    "None",
                    "int"
                ]
            }
        },
        "BaseApiException.to_dict": {
            "name": "to_dict",
            "location": 27,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wallet-backend-master/wallet_api/common/serializers.py": {
        "decimal_places": {
            "name": "decimal_places",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        }
    },
    "wallet-backend-master/wallet_api/common/__init__.py": {},
    "wallet-backend-master/wallet_api/resources/health.py": {
        "HealthLive.get": {
            "name": "get",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wallet-backend-master/wallet_api/resources/user.py": {
        "UserResource.post": {
            "name": "post",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserBalance.get": {
            "name": "get",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "str",
                    "None"
                ]
            }
        },
        "UserTransfer.post": {
            "name": "post",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "user_id": [
                    "int"
                ]
            }
        }
    },
    "wallet-backend-master/wallet_api/resources/__init__.py": {}
}
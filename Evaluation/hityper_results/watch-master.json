{
    "watch-master/setup.py": {},
    "watch-master/src/tlwatch/auction_backend.py": {
        "get_latest_block_number": {
            "name": "get_latest_block_number",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "base_url": [
                    "str",
                    "None"
                ]
            }
        },
        "watch_auction_backend": {
            "name": "watch_auction_backend",
            "location": 27,
            "return": [
                "list[dict[typing.Text, typing.Union[str,dict[str, dict[str, typing.Any]],set[str],bool,dict[str, str]]]]"
            ],
            "arguments": {
                "base_url": [
                    "str"
                ]
            }
        },
        "auction_backend": {
            "name": "auction_backend",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "list[str]"
                ],
                "riemann_port": [
                    "str",
                    "list[str]"
                ],
                "base_url": [
                    "str",
                    "int",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/cli.py": {
        "report_version": {
            "name": "report_version",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "handle_signal": {
            "name": "handle_signal",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "signum": [
                    "list[]",
                    "str",
                    "bytes",
                    "int"
                ],
                "frame": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "cli": {
            "name": "cli",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": [],
                "version": [
                    "bool",
                    "list[]"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/etherscan.py": {
        "eth_blockNumber": {
            "name": "eth_blockNumber",
            "location": 20,
            "return": [],
            "arguments": {
                "chain": [
                    "str"
                ]
            }
        },
        "watch_etherscan": {
            "name": "watch_etherscan",
            "location": 30,
            "return": [
                "list[dict[typing.Text, typing.Union[str,int]]]"
            ],
            "arguments": {
                "chain": [
                    "str",
                    "typing.Type",
                    "dict[str, str]"
                ]
            }
        },
        "etherscan": {
            "name": "etherscan",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "bytes"
                ],
                "riemann_port": [
                    "str",
                    "bytes"
                ],
                "chain": [
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/jsonrpc.py": {
        "json_rpc_call": {
            "name": "json_rpc_call",
            "location": 14,
            "return": [],
            "arguments": {
                "url": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "method": [
                    "str",
                    "bytes",
                    "list[str]"
                ],
                "params": [
                    "None",
                    "str"
                ]
            }
        },
        "get_blockNumber": {
            "name": "get_blockNumber",
            "location": 25,
            "return": [],
            "arguments": {
                "url": [
                    "str",
                    "float",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "get_peerCount": {
            "name": "get_peerCount",
            "location": 30,
            "return": [],
            "arguments": {
                "url": [
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "float"
                ]
            }
        },
        "get_syncing": {
            "name": "get_syncing",
            "location": 35,
            "return": [
                "str",
                "dict[, ]",
                "dict[str, typing.Union[dict[, ],typing.Any,typing.Any]]",
                "list[str]"
            ],
            "arguments": {
                "url": [
                    "str",
                    "bool",
                    "typing.Callable[, ]",
                    "float"
                ]
            }
        },
        "watch_jsonrpc": {
            "name": "watch_jsonrpc",
            "location": 40,
            "return": [
                "list[dict[typing.Text, typing.Union[typing.Text,dict[, ],typing.MutableMapping,int,dict[typing.Text, ]]]]",
                "list[dict[typing.Text, typing.Union[typing.Text,dict[, ],typing.MutableMapping,dict[typing.Text, ]]]]"
            ],
            "arguments": {
                "url": [],
                "event_host": [
                    "dict[, ]",
                    "typing.MutableMapping"
                ]
            }
        },
        "jsonrpc": {
            "name": "jsonrpc",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "bool"
                ],
                "riemann_port": [
                    "str",
                    "bool"
                ],
                "url": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "event_host_dwim": [
                    "bool",
                    "str",
                    "dict[, ]"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/psql.py": {
        "connect": {
            "name": "connect",
            "location": 13,
            "return": [],
            "arguments": {
                "dsn": [
                    "str",
                    "bytearray"
                ]
            }
        },
        "build_event_from_row": {
            "name": "build_event_from_row",
            "location": 17,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {
                "row": []
            }
        },
        "watch_psql": {
            "name": "watch_psql",
            "location": 27,
            "return": [
                "list[dict[typing.Text, typing.Union[str,int]]]"
            ],
            "arguments": {
                "query": [
                    "str"
                ]
            }
        },
        "psql": {
            "name": "psql",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "bytes"
                ],
                "riemann_port": [
                    "str",
                    "bytes"
                ],
                "sqlquery": [
                    "str",
                    "bytes"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/relay.py": {
        "watch_relay": {
            "name": "watch_relay",
            "location": 12,
            "return": [
                "list[dict[typing.Text, typing.Union[typing.Text,int]]]"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "relay": {
            "name": "relay",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "riemann_host": [
                    "str"
                ],
                "riemann_port": [
                    "str"
                ],
                "url": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/util.py": {
        "get_version": {
            "name": "get_version",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "decode_hex_encoded_number": {
            "name": "decode_hex_encoded_number",
            "location": 13,
            "return": [
                "int"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "watch_report_loop": {
            "name": "watch_report_loop",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "get_riemann_client": [
                    "int",
                    "str"
                ],
                "watch": [
                    "bool",
                    "str",
                    "typing.Callable[[], bool]",
                    "None",
                    "list[]"
                ],
                "sleep_time": [
                    "bool",
                    "str",
                    "typing.Callable[[], bool]",
                    "None",
                    "list[]"
                ]
            }
        }
    },
    "watch-master/src/tlwatch/website.py": {
        "get_url_source_as_text": {
            "name": "get_url_source_as_text",
            "location": 21,
            "return": [],
            "arguments": {
                "url": [
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "calculate_website_source_hash": {
            "name": "calculate_website_source_hash",
            "location": 28,
            "return": [],
            "arguments": {
                "url": [
                    "str",
                    "None"
                ]
            }
        },
        "watch_website": {
            "name": "watch_website",
            "location": 60,
            "return": [
                "list[dict[typing.Text, typing.Union[typing.Text,int]]]"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "original_hash": [
                    "str",
                    "None",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "int"
                ]
            }
        },
        "get_website_hash": {
            "name": "get_website_hash",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "website": {
            "name": "website",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "riemann_host": [
                    "str",
                    "None"
                ],
                "riemann_port": [
                    "str",
                    "None"
                ],
                "url": [
                    "str",
                    "int",
                    "list[int]",
                    "None"
                ],
                "original_hash": [
                    "str",
                    "int",
                    "list[int]",
                    "None"
                ]
            }
        },
        "calculate_website_source_hash.add_source": {
            "name": "add_source",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "src": []
            }
        }
    },
    "watch-master/src/tlwatch/__init__.py": {}
}
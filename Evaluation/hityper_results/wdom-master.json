{
    "wdom-master/dodo.py": {
        "task_cleanup": {
            "name": "task_cleanup",
            "location": 17,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_flake8": {
            "name": "task_flake8",
            "location": 24,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_mypy": {
            "name": "task_mypy",
            "location": 31,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_pydocstyle": {
            "name": "task_pydocstyle",
            "location": 38,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_docs": {
            "name": "task_docs",
            "location": 45,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_check": {
            "name": "task_check",
            "location": 52,
            "return": [
                "dict[typing.Text, typing.Union[None,list[typing.Text]]]"
            ],
            "arguments": {}
        },
        "task_test_fast": {
            "name": "task_test_fast",
            "location": 60,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_test_slow": {
            "name": "task_test_slow",
            "location": 68,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_test_server": {
            "name": "task_test_server",
            "location": 76,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_test_browser_local": {
            "name": "task_test_browser_local",
            "location": 84,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_test_browser_remote": {
            "name": "task_test_browser_remote",
            "location": 92,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_test_browser_server": {
            "name": "task_test_browser_server",
            "location": 100,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_test_pyppeteer": {
            "name": "task_test_pyppeteer",
            "location": 107,
            "return": [
                "dict[typing.Text, list[typing.Text]]"
            ],
            "arguments": {}
        },
        "task_test": {
            "name": "task_test",
            "location": 115,
            "return": [
                "dict[typing.Text, typing.Union[None,list[typing.Text]]]"
            ],
            "arguments": {}
        }
    },
    "wdom-master/setup.py": {},
    "wdom-master/docs/conf.py": {},
    "wdom-master/docs/server.py": {
        "cmd": {
            "name": "cmd",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "docs": {
            "name": "docs",
            "location": 25,
            "return": [],
            "arguments": {
                "p": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "wdom-master/docs/guide/samples/dom1.py": {},
    "wdom-master/docs/guide/samples/dom2.py": {},
    "wdom-master/docs/guide/samples/dom3.py": {
        "rev_text": {
            "name": "rev_text",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [
                    "dict[, ]",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "wdom-master/docs/guide/samples/dom4.py": {
        "update": {
            "name": "update",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [
                    "bool",
                    "dict[, ]"
                ]
            }
        }
    },
    "wdom-master/docs/guide/samples/new1.py": {},
    "wdom-master/docs/guide/samples/new2.py": {
        "MyElement.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyElement.update": {
            "name": "update",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "wdom-master/docs/guide/samples/new3.py": {},
    "wdom-master/docs/guide/samples/static1.py": {},
    "wdom-master/docs/guide/samples/static2.py": {},
    "wdom-master/docs/guide/samples/static3.py": {},
    "wdom-master/docs/guide/samples/wdom1.py": {
        "MyElement.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyElement.update": {
            "name": "update",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "wdom-master/docs/guide/samples/wdom2.py": {
        "MyElement.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyElement.update": {
            "name": "update",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "wdom-master/docs/guide/samples/wdom3.py": {
        "MyElement.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyElement.update": {
            "name": "update",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "wdom-master/docs/guide/samples/wdom4.py": {},
    "wdom-master/docs/guide/samples/wdom5.py": {},
    "wdom-master/docs/guide/samples/wdom6.py": {
        "MyButton2.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/docs/guide/samples/wdom7.py": {},
    "wdom-master/profile/parser.py": {},
    "wdom-master/tests/base.py": {
        "TestCase.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCase.tearDown": {
            "name": "tearDown",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCase.assertIsTrue": {
            "name": "assertIsTrue",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bl": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "TestCase.assertIsFalse": {
            "name": "assertIsFalse",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bl": [
                    "bool",
                    "float",
                    "str",
                    "None"
                ]
            }
        }
    },
    "wdom-master/tests/test_css.py": {
        "TestCSSProperties.test_normalize": {
            "name": "test_normalize",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "js": [],
                "css": []
            }
        },
        "TestCSSStyleDeclaration.setUp": {
            "name": "setUp",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleDeclaration.test_init": {
            "name": "test_init",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleDeclaration.test_set_get_remove": {
            "name": "test_set_get_remove",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleDeclaration.test_property_access": {
            "name": "test_property_access",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleDeclaration.test_property_access_dash": {
            "name": "test_property_access_dash",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleDeclaration.test_property_access_dash_two": {
            "name": "test_property_access_dash_two",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleDeclaration.test_float": {
            "name": "test_float",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSParseDecl.test_parse_style_order": {
            "name": "test_parse_style_order",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input": [
                    "str",
                    "typing.Mapping"
                ],
                "css": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "TestCSSParseDecl.test_parse_style_unordered": {
            "name": "test_parse_style_unordered",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input": [
                    "str"
                ]
            }
        },
        "TestCSSStyleRule.setUp": {
            "name": "setUp",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleRule.test_blank": {
            "name": "test_blank",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleRule.test_init": {
            "name": "test_init",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSStyleRule.test_overwrite_style": {
            "name": "test_overwrite_style",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSRuleList.setUp": {
            "name": "setUp",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSRuleList.test_blank": {
            "name": "test_blank",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSRuleList.test_append": {
            "name": "test_append",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCSSRuleList.test_append2": {
            "name": "test_append2",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParseRules.test_parse_style_rules": {
            "name": "test_parse_style_rules",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input": [
                    "dict[str, typing.Any]"
                ],
                "rule": [
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "wdom-master/tests/test_document.py": {
        "TestGetElement.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetElement.test_get_element_by_id": {
            "name": "test_get_element_by_id",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetElement.test_get_element_by_wdom_id": {
            "name": "test_get_element_by_wdom_id",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetElement.test_get_element_by_wdom_id_doc": {
            "name": "test_get_element_by_wdom_id_doc",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetElement.test_get_element_by_wdom_id_win": {
            "name": "test_get_element_by_wdom_id_win",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.setUp": {
            "name": "setUp",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_doctype": {
            "name": "test_doctype",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_html": {
            "name": "test_html",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_head": {
            "name": "test_head",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_body": {
            "name": "test_body",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_charset": {
            "name": "test_charset",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_title": {
            "name": "test_title",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_create_documentfragment": {
            "name": "test_create_documentfragment",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_create_textnode": {
            "name": "test_create_textnode",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_create_comment": {
            "name": "test_create_comment",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_create_attr": {
            "name": "test_create_attr",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_create_event": {
            "name": "test_create_event",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_add_eventlistener": {
            "name": "test_add_eventlistener",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_query_selector": {
            "name": "test_query_selector",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocument.test_query_selector_all": {
            "name": "test_query_selector_all",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.setUp": {
            "name": "setUp",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_blankpage": {
            "name": "test_blankpage",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_get_element_by_id": {
            "name": "test_get_element_by_id",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_add_jsfile": {
            "name": "test_add_jsfile",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_add_cssfile": {
            "name": "test_add_cssfile",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_add_header_link": {
            "name": "test_add_header_link",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_add_header_script": {
            "name": "test_add_header_script",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_title": {
            "name": "test_title",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_charset": {
            "name": "test_charset",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_set_body": {
            "name": "test_set_body",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_set_body_string": {
            "name": "test_set_body_string",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_set_body_error": {
            "name": "test_set_body_error",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_create_element": {
            "name": "test_create_element",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_create_element_unknown": {
            "name": "test_create_element_unknown",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_create_element_defclass": {
            "name": "test_create_element_defclass",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_create_element_defclass_unknown": {
            "name": "test_create_element_defclass_unknown",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_create_custom_element": {
            "name": "test_create_custom_element",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_create_custom_element_tag": {
            "name": "test_create_custom_element_tag",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_custom_tag_theme_tag": {
            "name": "test_custom_tag_theme_tag",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_custom_tag_theme_default": {
            "name": "test_custom_tag_theme_default",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_custom_tag_theme": {
            "name": "test_custom_tag_theme",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_tempdir": {
            "name": "test_tempdir",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_add_eventlistener": {
            "name": "test_add_eventlistener",
            "location": 366,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomDocument.test_wdom_id": {
            "name": "test_wdom_id",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.setUp": {
            "name": "setUp",
            "location": 386,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_set_new_document": {
            "name": "test_set_new_document",
            "location": 390,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_autoreload": {
            "name": "test_document_autoreload",
            "location": 399,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_reload_wait": {
            "name": "test_document_reload_wait",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_no_reload_wait_no_reload": {
            "name": "test_document_no_reload_wait_no_reload",
            "location": 411,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_log_level_str": {
            "name": "test_document_log_level_str",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_log_level_int": {
            "name": "test_document_log_level_int",
            "location": 422,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_log_prefix": {
            "name": "test_document_log_prefix",
            "location": 427,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_log_console": {
            "name": "test_document_log_console",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentOptions.test_document_ws_url": {
            "name": "test_document_ws_url",
            "location": 437,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_element.py": {
        "TestDOMTokenList.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add": {
            "name": "test_add",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_remove": {
            "name": "test_remove",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_toggle": {
            "name": "test_toggle",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_item": {
            "name": "test_item",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_contains": {
            "name": "test_contains",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add_multi": {
            "name": "test_add_multi",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add_multi_string": {
            "name": "test_add_multi_string",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add_multi_list": {
            "name": "test_add_multi_list",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add_multi_mixed": {
            "name": "test_add_multi_mixed",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_remove_multi": {
            "name": "test_remove_multi",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add_none": {
            "name": "test_add_none",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add_blank": {
            "name": "test_add_blank",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_add_invlalid": {
            "name": "test_add_invlalid",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDOMTokenList.test_iter": {
            "name": "test_iter",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAttr.setUp": {
            "name": "setUp",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAttr.test_name": {
            "name": "test_name",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAttr.test_value": {
            "name": "test_value",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAttr.test_html": {
            "name": "test_html",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAttr.test_escape": {
            "name": "test_escape",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAttr.test_boolean_attr": {
            "name": "test_boolean_attr",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAttr.test_isid": {
            "name": "test_isid",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNamedNodeMap.setUp": {
            "name": "setUp",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNamedNodeMap.test_addremove": {
            "name": "test_addremove",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNamedNodeMap.test_item": {
            "name": "test_item",
            "location": 221,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.setUp": {
            "name": "setUp",
            "location": 228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.check_noattr": {
            "name": "check_noattr",
            "location": 234,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "TestElementMeta.check_hasattr": {
            "name": "check_hasattr",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "TestElementMeta.test_special_attr_str": {
            "name": "test_special_attr_str",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.test_special_attr_str_setter": {
            "name": "test_special_attr_str_setter",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.test_special_attr_str_setattr": {
            "name": "test_special_attr_str_setattr",
            "location": 262,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.test_special_attr_bool": {
            "name": "test_special_attr_bool",
            "location": 276,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.test_special_attr_bool_setter": {
            "name": "test_special_attr_bool_setter",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.test_special_attr_bool_setattr": {
            "name": "test_special_attr_bool_setattr",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.test_special_attr_bool_setattr_empty": {
            "name": "test_special_attr_bool_setattr_empty",
            "location": 305,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementMeta.test_special_attr_bool_setattr_false": {
            "name": "test_special_attr_bool_setattr_false",
            "location": 317,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.setUp": {
            "name": "setUp",
            "location": 331,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_get_elements_by_attr1": {
            "name": "test_get_elements_by_attr1",
            "location": 340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_get_elements_by_attr2": {
            "name": "test_get_elements_by_attr2",
            "location": 347,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_get_elements_by_tagname1": {
            "name": "test_get_elements_by_tagname1",
            "location": 354,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_get_elements_by_tagname2": {
            "name": "test_get_elements_by_tagname2",
            "location": 361,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_get_elements_by_classname1": {
            "name": "test_get_elements_by_classname1",
            "location": 368,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_get_elements_by_classname2": {
            "name": "test_get_elements_by_classname2",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_get_elements_by_classname3": {
            "name": "test_get_elements_by_classname3",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_query_selector": {
            "name": "test_query_selector",
            "location": 395,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetElements.test_query_selector_all": {
            "name": "test_query_selector_all",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.setUp": {
            "name": "setUp",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.tearDown": {
            "name": "tearDown",
            "location": 413,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_constructor": {
            "name": "test_constructor",
            "location": 419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_init_parent": {
            "name": "test_init_parent",
            "location": 428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_init_attrs": {
            "name": "test_init_attrs",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_attrs": {
            "name": "test_attrs",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_id": {
            "name": "test_id",
            "location": 459,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_class_list_str": {
            "name": "test_class_list_str",
            "location": 468,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_class_list_list": {
            "name": "test_class_list_list",
            "location": 483,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_class_name": {
            "name": "test_class_name",
            "location": 489,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_start_tag": {
            "name": "test_start_tag",
            "location": 505,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_inner_html": {
            "name": "test_inner_html",
            "location": 517,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_inner_html_nest": {
            "name": "test_inner_html_nest",
            "location": 527,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_parse_html_text": {
            "name": "test_parse_html_text",
            "location": 537,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_insert_adjacent_html": {
            "name": "test_insert_adjacent_html",
            "location": 550,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_end_tag": {
            "name": "test_end_tag",
            "location": 565,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_html": {
            "name": "test_html",
            "location": 568,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_append_string": {
            "name": "test_append_string",
            "location": 571,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_get_elements_by_tagname": {
            "name": "test_get_elements_by_tagname",
            "location": 576,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_get_elements_by_tagname_nest": {
            "name": "test_get_elements_by_tagname_nest",
            "location": 586,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_get_elements_by_tagname_self": {
            "name": "test_get_elements_by_tagname_self",
            "location": 596,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_get_elements_by_classname": {
            "name": "test_get_elements_by_classname",
            "location": 600,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_get_elements_by_classname_multi1": {
            "name": "test_get_elements_by_classname_multi1",
            "location": 610,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_get_elements_by_classname_multi2": {
            "name": "test_get_elements_by_classname_multi2",
            "location": 619,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_get_elements_by_classname_nest": {
            "name": "test_get_elements_by_classname_nest",
            "location": 633,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_clone_shallow_child": {
            "name": "test_clone_shallow_child",
            "location": 643,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_clone_shallow_attr": {
            "name": "test_clone_shallow_attr",
            "location": 652,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_clone_deep_child": {
            "name": "test_clone_deep_child",
            "location": 666,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_clone_deep_attr": {
            "name": "test_clone_deep_attr",
            "location": 680,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_clone_style": {
            "name": "test_clone_style",
            "location": 701,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_init_class": {
            "name": "test_init_class",
            "location": 706,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_init_class_multi_str": {
            "name": "test_init_class_multi_str",
            "location": 717,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_init_class_multi_list": {
            "name": "test_init_class_multi_list",
            "location": 725,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_init_class_multi_mixed": {
            "name": "test_init_class_multi_mixed",
            "location": 733,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_reference": {
            "name": "test_reference",
            "location": 742,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_reference_with_id": {
            "name": "test_reference_with_id",
            "location": 752,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_reference_add_id": {
            "name": "test_reference_add_id",
            "location": 764,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_reference_del_id": {
            "name": "test_reference_del_id",
            "location": 786,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_is_attr": {
            "name": "test_is_attr",
            "location": 795,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_custom_tag": {
            "name": "test_custom_tag",
            "location": 812,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_custom_tag_registered": {
            "name": "test_custom_tag_registered",
            "location": 819,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_custom_tag_is": {
            "name": "test_custom_tag_is",
            "location": 824,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_custom_tag_is_registered": {
            "name": "test_custom_tag_is_registered",
            "location": 832,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_invalid_define_args": {
            "name": "test_invalid_define_args",
            "location": 837,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_query_selector": {
            "name": "test_query_selector",
            "location": 841,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElement.test_query_selector_all": {
            "name": "test_query_selector_all",
            "location": 845,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.setUp": {
            "name": "setUp",
            "location": 851,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_attrs_bool": {
            "name": "test_attrs_bool",
            "location": 854,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_empty_tag": {
            "name": "test_empty_tag",
            "location": 881,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_draggable": {
            "name": "test_draggable",
            "location": 885,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_hidden": {
            "name": "test_hidden",
            "location": 894,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_title": {
            "name": "test_title",
            "location": 899,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_type": {
            "name": "test_type",
            "location": 904,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_init_attrs": {
            "name": "test_init_attrs",
            "location": 909,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_style_empty": {
            "name": "test_style_empty",
            "location": 916,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_style_invalid_type": {
            "name": "test_style_invalid_type",
            "location": 924,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_init_style_init": {
            "name": "test_init_style_init",
            "location": 930,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_style_setter": {
            "name": "test_style_setter",
            "location": 936,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_style_remove": {
            "name": "test_style_remove",
            "location": 948,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_style_clone": {
            "name": "test_style_clone",
            "location": 957,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_style_new": {
            "name": "test_style_new",
            "location": 966,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_style_copy": {
            "name": "test_style_copy",
            "location": 980,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_attr_clone": {
            "name": "test_attr_clone",
            "location": 990,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_attr_clone_deep": {
            "name": "test_attr_clone_deep",
            "location": 1001,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHTMLElement.test_inner_html": {
            "name": "test_inner_html",
            "location": 1012,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSelectElement.setUp": {
            "name": "setUp",
            "location": 1024,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSelectElement.test_options": {
            "name": "test_options",
            "location": 1030,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSelectElement.test_selected": {
            "name": "test_selected",
            "location": 1040,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_event.py": {
        "TestDataTransfer.test_empty": {
            "name": "test_empty",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataTransfer.test_set_clear_data": {
            "name": "test_set_clear_data",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataTransfer.test_normalize": {
            "name": "test_normalize",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.setUp": {
            "name": "setUp",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.test_event": {
            "name": "test_event",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.test_craete_event": {
            "name": "test_craete_event",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDragEvent.setUp": {
            "name": "setUp",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDragEvent.tearDown": {
            "name": "tearDown",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDragEvent.test_init": {
            "name": "test_init",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDragEvent.test_start_drop_end": {
            "name": "test_start_drop_end",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDragEvent.test_different_id": {
            "name": "test_different_id",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreateEventMsg.setUp": {
            "name": "setUp",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreateEventMsg.test_event_from_msg": {
            "name": "test_event_from_msg",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreateEventMsg.test_event_from_msg_proto": {
            "name": "test_event_from_msg_proto",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreateEventMsg.test_event_from_msg_notarget": {
            "name": "test_event_from_msg_notarget",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventListener.setUp": {
            "name": "setUp",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventListener.test_func": {
            "name": "test_func",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventTarget.setUp": {
            "name": "setUp",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventTarget.test_event_dispatch": {
            "name": "test_event_dispatch",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventTarget.test_event_dispatch_empty": {
            "name": "test_event_dispatch_empty",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventTarget.test_event_dispatch_multi": {
            "name": "test_event_dispatch_multi",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventTarget.test_defferent_event_dispatch": {
            "name": "test_defferent_event_dispatch",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventTarget.test_remove_event": {
            "name": "test_remove_event",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventTarget.test_remove_event_multi": {
            "name": "test_remove_event_multi",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_imports.py": {
        "TestImportModules.test_import": {
            "name": "test_import",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_": [
                    "str"
                ],
                "import_": [
                    "str"
                ]
            }
        },
        "TestImportModules.test_wdom_import": {
            "name": "test_wdom_import",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_node.py": {
        "is_equal_nodes": {
            "name": "is_equal_nodes",
            "location": 273,
            "return": [],
            "arguments": {
                "p": [],
                "nodes2": []
            }
        },
        "TestNode.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_attributes": {
            "name": "test_attributes",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_parent": {
            "name": "test_parent",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_parent_init": {
            "name": "test_parent_init",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_addremove_child": {
            "name": "test_addremove_child",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_empty": {
            "name": "test_empty",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_insert_before": {
            "name": "test_insert_before",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_insert_first": {
            "name": "test_insert_first",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_replace_child": {
            "name": "test_replace_child",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_first_last_child": {
            "name": "test_first_last_child",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_siblings": {
            "name": "test_siblings",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode._test_shallow_copy": {
            "name": "_test_shallow_copy",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "clone": []
            }
        },
        "TestNode.test_copy": {
            "name": "test_copy",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_clone_node_sharrow": {
            "name": "test_clone_node_sharrow",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode._test_deep_copy": {
            "name": "_test_deep_copy",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "clone": []
            }
        },
        "TestNode.test_deepcopy": {
            "name": "test_deepcopy",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_clone_node_deep": {
            "name": "test_clone_node_deep",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_owner_document": {
            "name": "test_owner_document",
            "location": 190,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_text_content": {
            "name": "test_text_content",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNode.test_index": {
            "name": "test_index",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodeList.setUp": {
            "name": "setUp",
            "location": 221,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodeList.test_length": {
            "name": "test_length",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodeList.test_index_access": {
            "name": "test_index_access",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodeList.test_item": {
            "name": "test_item",
            "location": 236,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodeList.test_contains": {
            "name": "test_contains",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodeList.test_iteration": {
            "name": "test_iteration",
            "location": 247,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodeList.test_index": {
            "name": "test_index",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.setUp": {
            "name": "setUp",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_children": {
            "name": "test_children",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_append": {
            "name": "test_append",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_append_multi": {
            "name": "test_append_multi",
            "location": 327,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_append_text": {
            "name": "test_append_text",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_append_mixed_text_node": {
            "name": "test_append_mixed_text_node",
            "location": 359,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_prepend": {
            "name": "test_prepend",
            "location": 370,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_prepend_multi": {
            "name": "test_prepend_multi",
            "location": 378,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_prepend_text": {
            "name": "test_prepend_text",
            "location": 384,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParentNode.test_prepend_mixed_text_node": {
            "name": "test_prepend_mixed_text_node",
            "location": 398,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonDocumentTypeChildNode.setUp": {
            "name": "setUp",
            "location": 409,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonDocumentTypeChildNode.test_element": {
            "name": "test_element",
            "location": 416,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonDocumentTypeChildNode.test_element2": {
            "name": "test_element2",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.setUp": {
            "name": "setUp",
            "location": 434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_after": {
            "name": "test_after",
            "location": 442,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_after_text": {
            "name": "test_after_text",
            "location": 449,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_after_multi": {
            "name": "test_after_multi",
            "location": 460,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_arter_mixed_text_node": {
            "name": "test_arter_mixed_text_node",
            "location": 468,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_before": {
            "name": "test_before",
            "location": 472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_before_text": {
            "name": "test_before_text",
            "location": 479,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_before_multi": {
            "name": "test_before_multi",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_before_mixed": {
            "name": "test_before_mixed",
            "location": 491,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_replace": {
            "name": "test_replace",
            "location": 496,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_replace_multi": {
            "name": "test_replace_multi",
            "location": 500,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_replace_text": {
            "name": "test_replace_text",
            "location": 504,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestChildNode.test_remove": {
            "name": "test_remove",
            "location": 508,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.setUp": {
            "name": "setUp",
            "location": 514,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.test_textcontent": {
            "name": "test_textcontent",
            "location": 518,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.test_length": {
            "name": "test_length",
            "location": 523,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.test_append_data": {
            "name": "test_append_data",
            "location": 526,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.test_insert_data": {
            "name": "test_insert_data",
            "location": 530,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.test_delete_data": {
            "name": "test_delete_data",
            "location": 534,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.test_replace_data": {
            "name": "test_replace_data",
            "location": 538,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCharacterData.test_invalid_methods": {
            "name": "test_invalid_methods",
            "location": 542,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestText.setUp": {
            "name": "setUp",
            "location": 557,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestText.test_nodename": {
            "name": "test_nodename",
            "location": 562,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestText.test_html_escape": {
            "name": "test_html_escape",
            "location": 565,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestText.test_appned": {
            "name": "test_appned",
            "location": 580,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRawHtml.setUp": {
            "name": "setUp",
            "location": 597,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRawHtml.test_rawhtml_content": {
            "name": "test_rawhtml_content",
            "location": 600,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComment.setUp": {
            "name": "setUp",
            "location": 606,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComment.test_node_type": {
            "name": "test_node_type",
            "location": 610,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComment.test_length": {
            "name": "test_length",
            "location": 614,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComment.test_html": {
            "name": "test_html",
            "location": 617,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComment.test_append_comment": {
            "name": "test_append_comment",
            "location": 620,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentType.setUp": {
            "name": "setUp",
            "location": 628,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentType.test_nodename": {
            "name": "test_nodename",
            "location": 632,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentType.test_parent": {
            "name": "test_parent",
            "location": 636,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentType.test_html": {
            "name": "test_html",
            "location": 640,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.setUp": {
            "name": "setUp",
            "location": 645,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.test_nodename": {
            "name": "test_nodename",
            "location": 652,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.test_children": {
            "name": "test_children",
            "location": 655,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.test_append_to_element": {
            "name": "test_append_to_element",
            "location": 661,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.test_insert_to_element": {
            "name": "test_insert_to_element",
            "location": 679,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.test_child": {
            "name": "test_child",
            "location": 702,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.test_clone_node_sharrow": {
            "name": "test_clone_node_sharrow",
            "location": 710,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDocumentFragment.test_clone_node_deep": {
            "name": "test_clone_node_deep",
            "location": 719,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_options.py": {
        "reset_options": {
            "name": "reset_options",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestOptions.tearDown": {
            "name": "tearDown",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOptions.test_default_loglevel": {
            "name": "test_default_loglevel",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOptions.test_loglevel": {
            "name": "test_loglevel",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level_name": [
                    "str"
                ],
                "level": [
                    "str"
                ]
            }
        },
        "TestOptions.test_debug_without_logging": {
            "name": "test_debug_without_logging",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOptions.test_debug_with_logging": {
            "name": "test_debug_with_logging",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOptions.test_unknown_args": {
            "name": "test_unknown_args",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestThemeOption.setUp": {
            "name": "setUp",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestThemeOption.tearDown": {
            "name": "tearDown",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestThemeOption.test_no_theme": {
            "name": "test_no_theme",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestThemeOption.test_bs": {
            "name": "test_bs",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestThemeOption.test_unknown_theme": {
            "name": "test_unknown_theme",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_parser.py": {
        "TestFragmentParser.setUp": {
            "name": "setUp",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_empty": {
            "name": "test_empty",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_single_tag": {
            "name": "test_single_tag",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_multi_tag_para": {
            "name": "test_multi_tag_para",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_multi_tag_nest": {
            "name": "test_multi_tag_nest",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_multi_tag_para_nest": {
            "name": "test_multi_tag_para_nest",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_empty_tag": {
            "name": "test_empty_tag",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_empty_tag_only": {
            "name": "test_empty_tag_only",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_empty_tag_para": {
            "name": "test_empty_tag_para",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_empty_tag_text": {
            "name": "test_empty_tag_text",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_comment": {
            "name": "test_comment",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_parse_func": {
            "name": "test_parse_func",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_parse_script": {
            "name": "test_parse_script",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_parse_style": {
            "name": "test_parse_style",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_parsed_class1": {
            "name": "test_parsed_class1",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFragmentParser.test_parsed_class_unknown": {
            "name": "test_parsed_class_unknown",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_tag.py": {
        "TestTag.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_name": {
            "name": "test_name",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_tag_string": {
            "name": "test_tag_string",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_attr_init": {
            "name": "test_attr_init",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_attr_addremove": {
            "name": "test_attr_addremove",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_attr_multi": {
            "name": "test_attr_multi",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_attr_overwrite": {
            "name": "test_attr_overwrite",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_child_addremove": {
            "name": "test_child_addremove",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_child_exception": {
            "name": "test_child_exception",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_first_last_child": {
            "name": "test_first_last_child",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_child_deep": {
            "name": "test_child_deep",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_child_nodes": {
            "name": "test_child_nodes",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_child_replace": {
            "name": "test_child_replace",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_text_addremove": {
            "name": "test_text_addremove",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_textcontent": {
            "name": "test_textcontent",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_textcontent_child": {
            "name": "test_textcontent_child",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_closing_tag": {
            "name": "test_closing_tag",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag._test_shallow_copy": {
            "name": "_test_shallow_copy",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "clone": []
            }
        },
        "TestTag.test_copy": {
            "name": "test_copy",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_clone_node_sharrow": {
            "name": "test_clone_node_sharrow",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag._test_deep_copy": {
            "name": "_test_deep_copy",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "clone": []
            }
        },
        "TestTag.test_deepcopy": {
            "name": "test_deepcopy",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_clone_node_deep": {
            "name": "test_clone_node_deep",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_clone_style": {
            "name": "test_clone_style",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_siblings": {
            "name": "test_siblings",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_get_elements_by_tagname": {
            "name": "test_get_elements_by_tagname",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_custom_tag": {
            "name": "test_custom_tag",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_custom_tag_registered": {
            "name": "test_custom_tag_registered",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_custom_tag_is": {
            "name": "test_custom_tag_is",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_custom_tag_is_registered": {
            "name": "test_custom_tag_is_registered",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_custom_tag_define_by_class": {
            "name": "test_custom_tag_define_by_class",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_custom_tag_define_by_class_is": {
            "name": "test_custom_tag_define_by_class_is",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNestedTag.setUp": {
            "name": "setUp",
            "location": 345,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNestedTag.test_tag": {
            "name": "test_tag",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNestedTag.test_creation": {
            "name": "test_creation",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNestedTag.test_child_node": {
            "name": "test_child_node",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNestedTag.test_addremove_child": {
            "name": "test_addremove_child",
            "location": 388,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNestedTag.test_insert": {
            "name": "test_insert",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNestedTag.test_inner_content": {
            "name": "test_inner_content",
            "location": 437,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassList.setUp": {
            "name": "setUp",
            "location": 456,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassList.test_addremove": {
            "name": "test_addremove",
            "location": 459,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTagBase.setUp": {
            "name": "setUp",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTagBase.test_type_class": {
            "name": "test_type_class",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTagBase.test_type_init": {
            "name": "test_type_init",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTagBase.test_type_attr": {
            "name": "test_type_attr",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTagBase.test_type_setter": {
            "name": "test_type_setter",
            "location": 503,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRawHtmlNode.setUp": {
            "name": "setUp",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRawHtmlNode.test_raw_html": {
            "name": "test_raw_html",
            "location": 523,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_testing.py": {
        "TestInitialize.test_initialize": {
            "name": "test_initialize",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_themes.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestThemesImport.test_import_all": {
            "name": "test_import_all",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "theme": []
            }
        },
        "TestThemesImport.test_extended_is": {
            "name": "test_extended_is",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "theme": []
            }
        }
    },
    "wdom-master/tests/test_web_node.py": {
        "TestWdomElement.setUp": {
            "name": "setUp",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.tearDown": {
            "name": "tearDown",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_id": {
            "name": "test_id",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_noid": {
            "name": "test_noid",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_id_init": {
            "name": "test_id_init",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_connected": {
            "name": "test_connected",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_parent": {
            "name": "test_parent",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_addremove_child": {
            "name": "test_addremove_child",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_append_text": {
            "name": "test_append_text",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_addremove_attr": {
            "name": "test_addremove_attr",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_attr_subscription": {
            "name": "test_attr_subscription",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_style": {
            "name": "test_style",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_style_init": {
            "name": "test_style_init",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_set_text_content": {
            "name": "test_set_text_content",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_set_inner_html": {
            "name": "test_set_inner_html",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_shallow_copy": {
            "name": "test_shallow_copy",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_deep_copy": {
            "name": "test_deep_copy",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_click": {
            "name": "test_click",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_hidden": {
            "name": "test_hidden",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_clone_node_sharrow_hidden": {
            "name": "test_clone_node_sharrow_hidden",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_clone_node_deep_hidden": {
            "name": "test_clone_node_deep_hidden",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.setUp": {
            "name": "setUp",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.tearDown": {
            "name": "tearDown",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_class_addremove": {
            "name": "test_class_addremove",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_class_in_init": {
            "name": "test_class_in_init",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_class_addremove_multi": {
            "name": "test_class_addremove_multi",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_class_addremove_multi_string": {
            "name": "test_class_addremove_multi_string",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_class_getset": {
            "name": "test_class_getset",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_class_remove_error": {
            "name": "test_class_remove_error",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_clone_node_sharrow_class": {
            "name": "test_clone_node_sharrow_class",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_clone_node_deep_class": {
            "name": "test_clone_node_deep_class",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_class_of_class": {
            "name": "test_class_of_class",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_classes_multiclass": {
            "name": "test_classes_multiclass",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_classes_inherit_class": {
            "name": "test_classes_inherit_class",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_classes_notinherit_class": {
            "name": "test_classes_notinherit_class",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElementClass.test_classes_inherit_diamond": {
            "name": "test_classes_inherit_diamond",
            "location": 434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventMessage.setUp": {
            "name": "setUp",
            "location": 451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventMessage.tearDown": {
            "name": "tearDown",
            "location": 462,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventMessage.test_handle_event": {
            "name": "test_handle_event",
            "location": 465,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventMessage.test_remove_event": {
            "name": "test_remove_event",
            "location": 470,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEventMessage.test_remove_multi_event": {
            "name": "test_remove_multi_event",
            "location": 476,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuery.setUp": {
            "name": "setUp",
            "location": 489,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuery.tearDown": {
            "name": "tearDown",
            "location": 501,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuery.test_query": {
            "name": "test_query",
            "location": 504,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_window.py": {
        "TestWindow.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWindow.tearDown": {
            "name": "tearDown",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWindow.test_custom_elements_registory": {
            "name": "test_custom_elements_registory",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWindow.test_document": {
            "name": "test_document",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWindow.test_wdom_id": {
            "name": "test_wdom_id",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWindow.test_add_eventlistener": {
            "name": "test_add_eventlistener",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWindow.test_add_event_handler_doc": {
            "name": "test_add_event_handler_doc",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/__init__.py": {},
    "wdom-master/tests/server/base.py": {
        "HTTPTestCase.start": {
            "name": "start",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPTestCase.tearDown": {
            "name": "tearDown",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/server/test_server.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestServerBase.setUp": {
            "name": "setUp",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServerBase.tearDown": {
            "name": "tearDown",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOpenBrowser.test_open_browser": {
            "name": "test_open_browser",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOpenBrowserFreePort.test_open_browser_free_port": {
            "name": "test_open_browser_free_port",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMainHandlerBlank.setUp": {
            "name": "setUp",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMainHandler.setUp": {
            "name": "setUp",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStaticFileHandler.setUp": {
            "name": "setUp",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddStaticPath.setUp": {
            "name": "setUp",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRootWSHandler.setUp": {
            "name": "setUp",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/server/__init__.py": {},
    "wdom-master/tests/test_pyppeteer/base.py": {
        "PyppeteerTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Callable[..., T]",
                    "typing.Type"
                ]
            }
        },
        "PyppeteerTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str"
                ]
            }
        },
        "PyppeteerTestCase.setUp": {
            "name": "setUp",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PyppeteerTestCase.tearDown": {
            "name": "tearDown",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PyppeteerTestCase.get_elements": {
            "name": "get_elements",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_pyppeteer/test_examples.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestDataBinding.get_elements": {
            "name": "get_elements",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGlobalEvent.get_elements": {
            "name": "get_elements",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRevText.get_elements": {
            "name": "get_elements",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestTimer.get_elements": {
            "name": "get_elements",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_pyppeteer/test_node.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestWdomElement.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.get_elements": {
            "name": "get_elements",
            "location": 24,
            "return": [
                "WdomElement"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.get_elements": {
            "name": "get_elements",
            "location": 402,
            "return": [
                "WdomElement"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_pyppeteer/test_tag.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTag.get_elements": {
            "name": "get_elements",
            "location": 20,
            "return": [
                "Root"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_connection": {
            "name": "test_connection",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.get_elements": {
            "name": "get_elements",
            "location": 109,
            "return": [
                "str",
                "dict[str, str]",
                "tuple[typing.Union[str,str,str,str,str,str]]",
                "list[str]",
                "typing.Generator[typing.Union[typing.Any,None,None]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_select": {
            "name": "test_select",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_select_multi": {
            "name": "test_select_multi",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.get_elements": {
            "name": "get_elements",
            "location": 250,
            "return": [
                "dict[str, int]",
                "dict[str, list[str]]",
                "int",
                "float",
                "dict[typing.Any, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.click": {
            "name": "click",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": [
                    "dict[, ]",
                    "list[]",
                    "float",
                    "int"
                ]
            }
        },
        "TestInput.test_textinput.input_handler": {
            "name": "input_handler",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "e": []
            }
        }
    },
    "wdom-master/tests/test_pyppeteer/__init__.py": {},
    "wdom-master/tests/test_selenium/base.py": {
        "_get_chromedriver_path": {
            "name": "_get_chromedriver_path",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_chrome_options": {
            "name": "get_chrome_options",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "start_webdriver": {
            "name": "start_webdriver",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "close_webdriver": {
            "name": "close_webdriver",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_webdriver": {
            "name": "get_webdriver",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_clear": {
            "name": "_clear",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "start_remote_browser": {
            "name": "start_remote_browser",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "close_remote_browser": {
            "name": "close_remote_browser",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_remote_browser": {
            "name": "get_remote_browser",
            "location": 146,
            "return": [
                "None",
                "str"
            ],
            "arguments": {}
        },
        "wait_for": {
            "name": "wait_for",
            "location": 236,
            "return": [],
            "arguments": {}
        },
        "_get_properties": {
            "name": "_get_properties",
            "location": 253,
            "return": [
                "set[]"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "start_remote_browser.start_browser": {
            "name": "start_browser",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BrowserController.__init__": {
            "name": "__init__",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": [
                    "int",
                    "float"
                ]
            }
        },
        "BrowserController.set_element_by_id": {
            "name": "set_element_by_id",
            "location": 176,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str"
                ]
            }
        },
        "BrowserController.quit": {
            "name": "quit",
            "location": 189,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "BrowserController.close": {
            "name": "close",
            "location": 194,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "BrowserController._execute_method": {
            "name": "_execute_method",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "Exception",
                    "typing.Callable[, ]",
                    "typing.Type"
                ],
                "args": []
            }
        },
        "BrowserController.run": {
            "name": "run",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Controller.__getattr__": {
            "name": "__getattr__",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [
                    "bool",
                    "str"
                ]
            }
        },
        "RemoteBrowserTestCase.start": {
            "name": "start",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoteBrowserTestCase.tearDown": {
            "name": "tearDown",
            "location": 341,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoteBrowserTestCase.port": {
            "name": "port",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoteBrowserTestCase.wait": {
            "name": "wait",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "None",
                    "int",
                    "list[]",
                    "set[]",
                    "list[dict[str, typing.Any]]",
                    "dict[, ]"
                ],
                "times": [
                    "int"
                ]
            }
        },
        "RemoteBrowserTestCase.wait_until": {
            "name": "wait_until",
            "location": 366,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "typing.Callable[[], typing.Any]",
                    "int",
                    "list[tuple[typing.Union[int,str]]]",
                    "bytes",
                    "str"
                ],
                "timeout": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "RemoteBrowserTestCase._set_element": {
            "name": "_set_element",
            "location": 382,
            "return": [
                "str",
                "typing.Pattern",
                "tuple[typing.Union[typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal,typing.Literal]]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "list[]",
                    "bytes",
                    "int",
                    "str"
                ]
            }
        },
        "RemoteBrowserTestCase.set_element": {
            "name": "set_element",
            "location": 389,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "node": [
                    "str"
                ],
                "timeout": [
                    "None",
                    "typing.Callable[, ]",
                    "typing.Type",
                    "str",
                    "typing.MutableSet",
                    "collections.abc.AsyncIterable",
                    "typing.Iterable[typing.Any]"
                ]
            }
        },
        "WebDriverTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 417,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "list[str]",
                    "dict[str, typing.Any]",
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "WebDriverTestCase.tearDownClass": {
            "name": "tearDownClass",
            "location": 421,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "typing.Type",
                    "typing.Callable[, ]"
                ]
            }
        },
        "WebDriverTestCase.start": {
            "name": "start",
            "location": 424,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebDriverTestCase.tearDown": {
            "name": "tearDown",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebDriverTestCase.wait": {
            "name": "wait",
            "location": 452,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "None",
                    "int",
                    "list[]",
                    "set[]",
                    "list[dict[str, typing.Any]]",
                    "dict[, ]"
                ],
                "times": [
                    "int"
                ]
            }
        },
        "WebDriverTestCase.wait_until": {
            "name": "wait_until",
            "location": 458,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [
                    "typing.Callable[[], typing.Any]",
                    "int",
                    "list[tuple[typing.Union[int,str]]]",
                    "bytes",
                    "str"
                ],
                "timeout": [
                    "None",
                    "int",
                    "float"
                ]
            }
        },
        "WebDriverTestCase.send_keys": {
            "name": "send_keys",
            "location": 474,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [],
                "keys": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "Controller.__getattr__.wrapper": {
            "name": "wrapper",
            "location": 271,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "WebDriverTestCase.start.start_server": {
            "name": "start_server",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {
                "port": []
            }
        }
    },
    "wdom-master/tests/test_selenium/test_examples.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SimpleTestCase.setUp": {
            "name": "setUp",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleTestCase.test_page": {
            "name": "test_page",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataBinding.setUp": {
            "name": "setUp",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataBinding.test_app": {
            "name": "test_app",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDragDrop.setUp": {
            "name": "setUp",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDragDrop.test_app": {
            "name": "test_app",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGlobalEvent.setUp": {
            "name": "setUp",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGlobalEvent.test_keypress": {
            "name": "test_keypress",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRevText.setUp": {
            "name": "setUp",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRevText.test_app": {
            "name": "test_app",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTimer.setUp": {
            "name": "setUp",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTimer.test_timer": {
            "name": "test_timer",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTimer.test_timer.test_timer": {
            "name": "test_timer",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wdom-master/tests/test_selenium/test_example_module.py": {
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BaseTestCase.setUp": {
            "name": "setUp",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseTestCase.tearDown": {
            "name": "tearDown",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestReverseText.test_revtext": {
            "name": "test_revtext",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDataBinding.test_revtext": {
            "name": "test_revtext",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTimer.test_timer": {
            "name": "test_timer",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTimer.test_timer.test_timer": {
            "name": "test_timer",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wdom-master/tests/test_selenium/test_node.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ElementTestCase.setUp": {
            "name": "setUp",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementTestCase.get_elements": {
            "name": "get_elements",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.get_elements": {
            "name": "get_elements",
            "location": 45,
            "return": [
                "WdomElement"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_connection": {
            "name": "test_connection",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_text_content": {
            "name": "test_text_content",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_attr": {
            "name": "test_attr",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_addremove_child": {
            "name": "test_addremove_child",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_insert_child": {
            "name": "test_insert_child",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_add_df": {
            "name": "test_add_df",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_insert_df": {
            "name": "test_insert_df",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_replace_child": {
            "name": "test_replace_child",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_append": {
            "name": "test_append",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_prepend": {
            "name": "test_prepend",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_prepend_append_text": {
            "name": "test_prepend_append_text",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_after": {
            "name": "test_after",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_before": {
            "name": "test_before",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_after_before_text": {
            "name": "test_after_before_text",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_inner_html": {
            "name": "test_inner_html",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_shortcut_attr": {
            "name": "test_shortcut_attr",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_style": {
            "name": "test_style",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_classlist": {
            "name": "test_classlist",
            "location": 356,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_click": {
            "name": "test_click",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_exec": {
            "name": "test_exec",
            "location": 416,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWdomElement.test_exec_error": {
            "name": "test_exec_error",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.get_elements": {
            "name": "get_elements",
            "location": 440,
            "return": [
                "WdomElement"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.test_click": {
            "name": "test_click",
            "location": 461,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.test_input": {
            "name": "test_input",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_selenium/test_server.py": {
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestAutoReload.setUpClass": {
            "name": "setUpClass",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "int"
                ]
            }
        },
        "TestAutoReload.tearDownClass": {
            "name": "tearDownClass",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "set[str]",
                    "typing.IO",
                    "list[str]",
                    "tuple[typing.Union[int,int]]"
                ]
            }
        },
        "TestAutoReload.setUp": {
            "name": "setUp",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload.tearDown": {
            "name": "tearDown",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload._base_args": {
            "name": "_base_args",
            "location": 98,
            "return": [
                "list[typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload.wait": {
            "name": "wait",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": [
                    "None",
                    "tuple[typing.Union[int,int]]",
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "TestAutoReload.wait_short": {
            "name": "wait_short",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "t": [
                    "None",
                    "float",
                    "tuple[typing.Union[float,float]]",
                    "str",
                    "bool",
                    "list[bool]"
                ]
            }
        },
        "TestAutoReload.get_element_by_id": {
            "name": "get_element_by_id",
            "location": 110,
            "return": [
                "str",
                "dict[str, typing.Any]",
                "set[str]",
                "dict[typing.Any, typing.Union[int,str]]",
                "dict[typing.Any, float]",
                "dict[, ]",
                "list[str]",
                "dict[str, int]"
            ],
            "arguments": {
                "self": [],
                "_id": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "TestAutoReload.check_reload": {
            "name": "check_reload",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "TestAutoReload.test_autoreload": {
            "name": "test_autoreload",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload.test_autoreload_debug": {
            "name": "test_autoreload_debug",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload.check_css_reload": {
            "name": "check_css_reload",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "TestAutoReload.test_autoreload_css": {
            "name": "test_autoreload_css",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload.check_css_noreload": {
            "name": "check_css_noreload",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "TestAutoReload.test_autoreload_exclude_css": {
            "name": "test_autoreload_exclude_css",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload.test_autoreload_exclude_dir": {
            "name": "test_autoreload_exclude_dir",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAutoReload.test_autoreload_nowatch": {
            "name": "test_autoreload_nowatch",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/tests/test_selenium/test_tag.py": {
        "setUpModule": {
            "name": "setUpModule",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "tearDownModule": {
            "name": "tearDownModule",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestTag.setUp": {
            "name": "setUp",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_connection": {
            "name": "test_connection",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_node_text": {
            "name": "test_node_text",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_node_attr": {
            "name": "test_node_attr",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_node_class": {
            "name": "test_node_class",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_addremove_child": {
            "name": "test_addremove_child",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_replace_child": {
            "name": "test_replace_child",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTag.test_showhide": {
            "name": "test_showhide",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.setUp": {
            "name": "setUp",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_textinput": {
            "name": "test_textinput",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_textarea": {
            "name": "test_textarea",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_checkbox": {
            "name": "test_checkbox",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_checkbox_label": {
            "name": "test_checkbox_label",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_radios": {
            "name": "test_radios",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_radios_label": {
            "name": "test_radios_label",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSelect.setUp": {
            "name": "setUp",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSelect.test_select": {
            "name": "test_select",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSelect.test_multi_select": {
            "name": "test_multi_select",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.setUp": {
            "name": "setUp",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.click": {
            "name": "click",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": [
                    "dict[, ]",
                    "list[]",
                    "float",
                    "int"
                ]
            }
        },
        "TestEvent.test_click": {
            "name": "test_click",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.test_document_click": {
            "name": "test_document_click",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEvent.test_window_click": {
            "name": "test_window_click",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInput.test_textinput.input_handler": {
            "name": "input_handler",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "e": []
            }
        }
    },
    "wdom-master/tests/test_selenium/__init__.py": {},
    "wdom-master/wdom/css.py": {
        "_lower_dash": {
            "name": "_lower_dash",
            "location": 19,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "_normalize_css_property": {
            "name": "_normalize_css_property",
            "location": 23,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "prop": [
                    "str",
                    "list[int]",
                    "list[str]",
                    "bytes",
                    "bool"
                ]
            }
        },
        "parse_style_decl": {
            "name": "parse_style_decl",
            "location": 155,
            "return": [
                "CSSStyleDeclaration"
            ],
            "arguments": {
                "style": [
                    "str",
                    "bytes",
                    "dict[str, int]"
                ],
                "owner": [
                    "None",
                    "str",
                    "bytes",
                    "dict[str, int]"
                ]
            }
        },
        "parse_style_rules": {
            "name": "parse_style_rules",
            "location": 208,
            "return": [
                "CSSRuleList"
            ],
            "arguments": {
                "styles": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "CSSStyleDeclaration.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "style": [
                    "None",
                    "str",
                    "list[]",
                    "int",
                    "typing.Callable[, ]"
                ],
                "parent": [
                    "None",
                    "typing.Iterable[str]",
                    "typing.Callable[, ]",
                    "str",
                    "typing.Type"
                ],
                "owner": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        },
        "CSSStyleDeclaration._update_web": {
            "name": "_update_web",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSSStyleDeclaration._parse_str": {
            "name": "_parse_str",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "style": [
                    "str"
                ]
            }
        },
        "CSSStyleDeclaration.cssText": {
            "name": "cssText",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSSStyleDeclaration.length": {
            "name": "length",
            "location": 90,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSSStyleDeclaration.parentRule": {
            "name": "parentRule",
            "location": 100,
            "return": [
                "typing.Callable[, ]",
                "int",
                "typing.Type",
                "dict[, ]",
                "list[]"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "CSSStyleDeclaration.getPropertyValue": {
            "name": "getPropertyValue",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "prop": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "CSSStyleDeclaration.removeProperty": {
            "name": "removeProperty",
            "location": 110,
            "return": [
                "None",
                "dict[, ]",
                "list[typing.Optional[str]]",
                "int",
                "dict[int, int]",
                "list[tuple[typing.Union[typing.Any,typing.Any]]]",
                "str"
            ],
            "arguments": {
                "self": [],
                "prop": [
                    "dict[str, bool]",
                    "int",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "CSSStyleDeclaration.setProperty": {
            "name": "setProperty",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prop": [
                    "str",
                    "int",
                    "list[str]",
                    "float",
                    "typing.Callable[object, typing.Any]"
                ],
                "value": [
                    "str",
                    "int",
                    "list[str]",
                    "float",
                    "typing.Callable[object, typing.Any]"
                ],
                "priority": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "CSSStyleDeclaration.__getitem__": {
            "name": "__getitem__",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [
                    "str",
                    "list[]"
                ]
            }
        },
        "CSSStyleDeclaration.__setitem__": {
            "name": "__setitem__",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "str",
                    "dict[, ]",
                    "None",
                    "dict[str, str]"
                ],
                "value": [
                    "str",
                    "dict[, ]",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "CSSStyleDeclaration.__delitem__": {
            "name": "__delitem__",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "str",
                    "list[]"
                ]
            }
        },
        "CSSStyleDeclaration.__getattr__": {
            "name": "__getattr__",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [
                    "str",
                    "bytes"
                ]
            }
        },
        "CSSStyleDeclaration.__setattr__": {
            "name": "__setattr__",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "str"
                ],
                "value": [
                    "str",
                    "bool",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "CSSStyleDeclaration.__delattr__": {
            "name": "__delattr__",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": [
                    "str"
                ]
            }
        },
        "CSSStyleRule.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "selector": [
                    "typing.Text"
                ],
                "style": [
                    "None",
                    "float",
                    "bool",
                    "str"
                ]
            }
        },
        "CSSStyleRule.cssText": {
            "name": "cssText",
            "location": 178,
            "return": [
                "str",
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSSRuleList.__init__": {
            "name": "__init__",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSSRuleList.length": {
            "name": "length",
            "location": 194,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CSSRuleList.item": {
            "name": "item",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "index": [
                    "float",
                    "dict[, ]"
                ]
            }
        },
        "CSSRuleList.cssText": {
            "name": "cssText",
            "location": 203,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/document.py": {
        "getElementById": {
            "name": "getElementById",
            "location": 31,
            "return": [
                "set[str]",
                "dict[str, str]",
                "str",
                "None",
                "list[str]"
            ],
            "arguments": {
                "id": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "getElementByWdomId": {
            "name": "getElementByWdomId",
            "location": 37,
            "return": [
                "None",
                "str",
                "float"
            ],
            "arguments": {
                "id": [
                    "str",
                    "int",
                    "Exception"
                ]
            }
        },
        "_cleanup": {
            "name": "_cleanup",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "create_element": {
            "name": "create_element",
            "location": 55,
            "return": [],
            "arguments": {
                "tag": [
                    "str",
                    "typing.Any",
                    "None",
                    "dict[str, typing.Any]"
                ],
                "name": [
                    "None",
                    "str"
                ],
                "base": [
                    "None",
                    "str",
                    "bool"
                ],
                "attr": [
                    "None",
                    "tuple[typing.Union[list[str],typing.Any,None,typing.Any,None]]",
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Mapping"
                ]
            }
        },
        "_find_tag": {
            "name": "_find_tag",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "elm": [
                    "str",
                    "list[int]",
                    "list[str]",
                    "set[str]"
                ],
                "tag": [
                    "str"
                ]
            }
        },
        "get_new_document": {
            "name": "get_new_document",
            "location": 352,
            "return": [],
            "arguments": {
                "include_wdom_js": [
                    "bool"
                ],
                "include_skeleton": [
                    "bool"
                ],
                "include_normalizecss": [
                    "bool"
                ],
                "autoreload": [
                    "None",
                    "str",
                    "float",
                    "bool"
                ],
                "reload_wait": [
                    "None",
                    "str",
                    "float",
                    "bool"
                ],
                "log_level": [
                    "None",
                    "str"
                ],
                "log_prefix": [
                    "None",
                    "str",
                    "bool",
                    "list[str]"
                ],
                "log_console": [
                    "bool"
                ],
                "ws_url": [
                    "None",
                    "str"
                ],
                "message_wait": [
                    "None",
                    "str"
                ],
                "document_factory": [
                    "WdomDocument"
                ]
            }
        },
        "get_document": {
            "name": "get_document",
            "location": 421,
            "return": [],
            "arguments": {}
        },
        "set_document": {
            "name": "set_document",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "new_document": [
                    "float",
                    "str",
                    "bool"
                ]
            }
        },
        "set_app": {
            "name": "set_app",
            "location": 438,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "int",
                    "dict[, ]",
                    "str"
                ]
            }
        },
        "Document.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.defaultView": {
            "name": "defaultView",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Document.doctype": {
            "name": "doctype",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Document.documentElement": {
            "name": "documentElement",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Document.head": {
            "name": "head",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Document._find_charset_node": {
            "name": "_find_charset_node",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.characterSet": {
            "name": "characterSet",
            "location": 149,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "charset": []
            }
        },
        "Document.body": {
            "name": "body",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Document.title": {
            "name": "title",
            "location": 168,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": [],
                "new_title": []
            }
        },
        "Document.getElementsBy": {
            "name": "getElementsBy",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "cond": [
                    "str",
                    "dict[, ]",
                    "None",
                    "set[]"
                ]
            }
        },
        "Document.getElementsByTagName": {
            "name": "getElementsByTagName",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [
                    "list[str]",
                    "str",
                    "bool"
                ]
            }
        },
        "Document.getElementsByClassName": {
            "name": "getElementsByClassName",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "class_name": [
                    "str"
                ]
            }
        },
        "Document.getElementById": {
            "name": "getElementById",
            "location": 185,
            "return": [
                "int",
                "float",
                "list[tuple[int]]",
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "Document.createDocumentFragment": {
            "name": "createDocumentFragment",
            "location": 195,
            "return": [
                "DocumentFragment"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.createTextNode": {
            "name": "createTextNode",
            "location": 199,
            "return": [
                "Text"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool"
                ]
            }
        },
        "Document.createComment": {
            "name": "createComment",
            "location": 203,
            "return": [
                "Comment"
            ],
            "arguments": {
                "self": [],
                "comment": [
                    "bool",
                    "float"
                ]
            }
        },
        "Document.createElement": {
            "name": "createElement",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [
                    "str",
                    "bool",
                    "list[T]"
                ]
            }
        },
        "Document.createEvent": {
            "name": "createEvent",
            "location": 211,
            "return": [
                "Event"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str"
                ]
            }
        },
        "Document.createAttribute": {
            "name": "createAttribute",
            "location": 215,
            "return": [
                "Attr"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Document.querySelector": {
            "name": "querySelector",
            "location": 219,
            "return": [],
            "arguments": {
                "self": [],
                "selectors": [
                    "str",
                    "int",
                    "None",
                    "tuple[]",
                    "list[str]"
                ]
            }
        },
        "Document.querySelectorAll": {
            "name": "querySelectorAll",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "selectors": [
                    "str"
                ]
            }
        },
        "WdomDocument.wdom_id": {
            "name": "wdom_id",
            "location": 232,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomDocument.connected": {
            "name": "connected",
            "location": 236,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomDocument.tempdir": {
            "name": "tempdir",
            "location": 240,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomDocument.__init__": {
            "name": "__init__",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomDocument._set_autoreload": {
            "name": "_set_autoreload",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomDocument.getElementByWdomId": {
            "name": "getElementByWdomId",
            "location": 297,
            "return": [
                "str",
                "dict[str, typing.Any]",
                "tuple[typing.Type]",
                "int",
                "list[]",
                "dict[str, typing.Union[int,str]]",
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "str",
                    "int"
                ]
            }
        },
        "WdomDocument.add_jsfile": {
            "name": "add_jsfile",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str",
                    "list[str]",
                    "int"
                ]
            }
        },
        "WdomDocument.add_jsfile_head": {
            "name": "add_jsfile_head",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str",
                    "list[str]",
                    "int"
                ]
            }
        },
        "WdomDocument.add_cssfile": {
            "name": "add_cssfile",
            "location": 315,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str",
                    "float",
                    "int"
                ]
            }
        },
        "WdomDocument.add_header": {
            "name": "add_header",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "header": [
                    "str",
                    "dict[, ]",
                    "dict[str, str]",
                    "typing.Hashable",
                    "None"
                ]
            }
        },
        "WdomDocument.register_theme": {
            "name": "register_theme",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "theme": [
                    "str",
                    "typing.Callable[, ]",
                    "typing.Type"
                ]
            }
        },
        "WdomDocument.build": {
            "name": "build",
            "location": 346,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/element.py": {
        "_string_properties": {
            "name": "_string_properties",
            "location": 332,
            "return": [],
            "arguments": {
                "attr": []
            }
        },
        "_boolean_properties": {
            "name": "_boolean_properties",
            "location": 345,
            "return": [],
            "arguments": {
                "attr": []
            }
        },
        "getElementsBy": {
            "name": "getElementsBy",
            "location": 375,
            "return": [],
            "arguments": {
                "start_node": [],
                "cond": []
            }
        },
        "getElementsByTagName": {
            "name": "getElementsByTagName",
            "location": 396,
            "return": [],
            "arguments": {
                "start_node": [],
                "tag": []
            }
        },
        "getElementsByClassName": {
            "name": "getElementsByClassName",
            "location": 402,
            "return": [],
            "arguments": {
                "start_node": [],
                "class_name": []
            }
        },
        "querySelector": {
            "name": "querySelector",
            "location": 412,
            "return": [],
            "arguments": {
                "start_node": [],
                "selectors": []
            }
        },
        "querySelectorAll": {
            "name": "querySelectorAll",
            "location": 420,
            "return": [],
            "arguments": {
                "start_node": [],
                "selectors": []
            }
        },
        "DOMTokenList.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "owner": []
            }
        },
        "DOMTokenList.__len__": {
            "name": "__len__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DOMTokenList.__contains__": {
            "name": "__contains__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "DOMTokenList.__iter__": {
            "name": "__iter__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DOMTokenList._validate_token": {
            "name": "_validate_token",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "DOMTokenList._append": {
            "name": "_append",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "DOMTokenList.__getitem__": {
            "name": "__getitem__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "DOMTokenList.__setitem__": {
            "name": "__setitem__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "s": [],
                "item": []
            }
        },
        "DOMTokenList.__delitem__": {
            "name": "__delitem__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "DOMTokenList.length": {
            "name": "length",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DOMTokenList.add": {
            "name": "add",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DOMTokenList.remove": {
            "name": "remove",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DOMTokenList.toggle": {
            "name": "toggle",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "DOMTokenList.item": {
            "name": "item",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "DOMTokenList.insert": {
            "name": "insert",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "item": []
            }
        },
        "DOMTokenList.contains": {
            "name": "contains",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "DOMTokenList.toString": {
            "name": "toString",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Attr.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": [],
                "owner": []
            }
        },
        "Attr.html": {
            "name": "html",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Attr.name": {
            "name": "name",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Attr.value": {
            "name": "value",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Attr.isId": {
            "name": "isId",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DraggableAttr.html": {
            "name": "html",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedNodeMap.__init__": {
            "name": "__init__",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "owner": []
            }
        },
        "NamedNodeMap.__len__": {
            "name": "__len__",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedNodeMap.__contains__": {
            "name": "__contains__",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "NamedNodeMap.__getitem__": {
            "name": "__getitem__",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "NamedNodeMap.__setitem__": {
            "name": "__setitem__",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [],
                "item": []
            }
        },
        "NamedNodeMap.__delitem__": {
            "name": "__delitem__",
            "location": 246,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "NamedNodeMap.__iter__": {
            "name": "__iter__",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedNodeMap.length": {
            "name": "length",
            "location": 254,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NamedNodeMap.getNamedItem": {
            "name": "getNamedItem",
            "location": 258,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "NamedNodeMap.setNamedItem": {
            "name": "setNamedItem",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "NamedNodeMap.removeNamedItem": {
            "name": "removeNamedItem",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "NamedNodeMap.item": {
            "name": "item",
            "location": 288,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "NamedNodeMap.toString": {
            "name": "toString",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementParser.__init__": {
            "name": "__init__",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLElementParser.__init__": {
            "name": "__init__",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_string_properties.getter": {
            "name": "getter",
            "location": 333,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_string_properties.setter": {
            "name": "setter",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "_string_properties.deleter": {
            "name": "deleter",
            "location": 339,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_boolean_properties.getter": {
            "name": "getter",
            "location": 346,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_boolean_properties.setter": {
            "name": "setter",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "_boolean_properties.deleter": {
            "name": "deleter",
            "location": 355,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementMeta.__new__": {
            "name": "__new__",
            "location": 364,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "bases": [],
                "namespace": []
            }
        },
        "Element.__init__": {
            "name": "__init__",
            "location": 441,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "parent": [],
                "_registered": []
            }
        },
        "Element._clone_node": {
            "name": "_clone_node",
            "location": 464,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element._get_attrs_by_string": {
            "name": "_get_attrs_by_string",
            "location": 471,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.start_tag": {
            "name": "start_tag",
            "location": 480,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.end_tag": {
            "name": "end_tag",
            "location": 489,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element._parse_html": {
            "name": "_parse_html",
            "location": 493,
            "return": [],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "Element._get_inner_html": {
            "name": "_get_inner_html",
            "location": 498,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element._set_inner_html": {
            "name": "_set_inner_html",
            "location": 501,
            "return": [],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "Element.innerHTML": {
            "name": "innerHTML",
            "location": 511,
            "return": [],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "Element.html": {
            "name": "html",
            "location": 519,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.insertAdjacentHTML": {
            "name": "insertAdjacentHTML",
            "location": 523,
            "return": [],
            "arguments": {
                "self": [],
                "position": [],
                "html": []
            }
        },
        "Element.outerHTML": {
            "name": "outerHTML",
            "location": 546,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.nodeName": {
            "name": "nodeName",
            "location": 554,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.tagName": {
            "name": "tagName",
            "location": 559,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.localName": {
            "name": "localName",
            "location": 564,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.className": {
            "name": "className",
            "location": 574,
            "return": [],
            "arguments": {
                "self": [],
                "new_class": []
            }
        },
        "Element.getAttribute": {
            "name": "getAttribute",
            "location": 579,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Element.getAttributeNode": {
            "name": "getAttributeNode",
            "location": 593,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Element.hasAttribute": {
            "name": "hasAttribute",
            "location": 600,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Element.hasAttributes": {
            "name": "hasAttributes",
            "location": 606,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element._set_attribute_class": {
            "name": "_set_attribute_class",
            "location": 610,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Element._change_id": {
            "name": "_change_id",
            "location": 621,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Element._set_attribute": {
            "name": "_set_attribute",
            "location": 633,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [],
                "value": []
            }
        },
        "Element.setAttribute": {
            "name": "setAttribute",
            "location": 646,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [],
                "value": []
            }
        },
        "Element.setAttributeNode": {
            "name": "setAttributeNode",
            "location": 650,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Element._remove_attribute": {
            "name": "_remove_attribute",
            "location": 654,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Element.removeAttribute": {
            "name": "removeAttribute",
            "location": 664,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Element.removeAttributeNode": {
            "name": "removeAttributeNode",
            "location": 668,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Element.getElementsBy": {
            "name": "getElementsBy",
            "location": 672,
            "return": [],
            "arguments": {
                "self": [],
                "cond": []
            }
        },
        "Element.getElementsByTagName": {
            "name": "getElementsByTagName",
            "location": 676,
            "return": [],
            "arguments": {
                "self": [],
                "tag": []
            }
        },
        "Element.getElementsByClassName": {
            "name": "getElementsByClassName",
            "location": 680,
            "return": [],
            "arguments": {
                "self": [],
                "class_name": []
            }
        },
        "Element.querySelector": {
            "name": "querySelector",
            "location": 684,
            "return": [],
            "arguments": {
                "self": [],
                "selectors": []
            }
        },
        "Element.querySelectorAll": {
            "name": "querySelectorAll",
            "location": 688,
            "return": [],
            "arguments": {
                "self": [],
                "selectors": []
            }
        },
        "HTMLElement.__init__": {
            "name": "__init__",
            "location": 703,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLElement._get_attrs_by_string": {
            "name": "_get_attrs_by_string",
            "location": 707,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLElement._clone_node": {
            "name": "_clone_node",
            "location": 714,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLElement.end_tag": {
            "name": "end_tag",
            "location": 720,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLElement.style": {
            "name": "style",
            "location": 735,
            "return": [],
            "arguments": {
                "self": [],
                "style": []
            }
        },
        "HTMLElement.draggable": {
            "name": "draggable",
            "location": 766,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "HTMLElement.getAttribute": {
            "name": "getAttribute",
            "location": 776,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "HTMLElement._set_attribute": {
            "name": "_set_attribute",
            "location": 785,
            "return": [],
            "arguments": {
                "self": [],
                "attr": [],
                "value": []
            }
        },
        "HTMLElement._remove_attribute": {
            "name": "_remove_attribute",
            "location": 791,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "FormControlMixin.__init__": {
            "name": "__init__",
            "location": 801,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormControlMixin.form": {
            "name": "form",
            "location": 818,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLInputElement.on_event_pre": {
            "name": "on_event_pre",
            "location": 859,
            "return": [],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "HTMLInputElement.defaultChecked": {
            "name": "defaultChecked",
            "location": 881,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "HTMLInputElement.defaultValue": {
            "name": "defaultValue",
            "location": 895,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "HTMLInputElement._is_same_group": {
            "name": "_is_same_group",
            "location": 899,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "HTMLInputElement._find_root": {
            "name": "_find_root",
            "location": 906,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLInputElement._find_grouped_nodes": {
            "name": "_find_grouped_nodes",
            "location": 915,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLLabelElement.htmlFor": {
            "name": "htmlFor",
            "location": 929,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "HTMLLabelElement.control": {
            "name": "control",
            "location": 933,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLSelectElement.__init__": {
            "name": "__init__",
            "location": 975,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLSelectElement.on_event_pre": {
            "name": "on_event_pre",
            "location": 979,
            "return": [],
            "arguments": {
                "self": [],
                "e": []
            }
        },
        "HTMLSelectElement.length": {
            "name": "length",
            "location": 995,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLSelectElement.options": {
            "name": "options",
            "location": 1000,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLSelectElement.selectedOptions": {
            "name": "selectedOptions",
            "location": 1005,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTMLTextAreaElement.on_event_pre": {
            "name": "on_event_pre",
            "location": 1025,
            "return": [],
            "arguments": {
                "self": [],
                "e": []
            }
        }
    },
    "wdom-master/wdom/event.py": {
        "normalize_type": {
            "name": "normalize_type",
            "location": 31,
            "return": [
                "typing.Text",
                "str",
                "typing.Type",
                "typing.Callable[, ]",
                "list[typing.Type]"
            ],
            "arguments": {
                "type": [
                    "str",
                    "typing.Type",
                    "typing.Callable[, ]",
                    "list[typing.Type]"
                ]
            }
        },
        "create_event": {
            "name": "create_event",
            "location": 236,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "_wrap_coro_func": {
            "name": "_wrap_coro_func",
            "location": 253,
            "return": [],
            "arguments": {
                "coro": [
                    "int",
                    "typing.Optional[]",
                    "str",
                    "None"
                ]
            }
        },
        "DataTransfer.length": {
            "name": "length",
            "location": 55,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataTransfer.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [
                    "typing.Text"
                ]
            }
        },
        "DataTransfer.getData": {
            "name": "getData",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "typing.Mapping"
                ]
            }
        },
        "DataTransfer.setData": {
            "name": "setData",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "dict[, ]",
                    "bool",
                    "bytes",
                    "typing.Type"
                ],
                "data": [
                    "str",
                    "typing.Sequence[str]",
                    "dict[, ]",
                    "set[str]",
                    "typing.Pattern",
                    "set[]"
                ]
            }
        },
        "DataTransfer.clearData": {
            "name": "clearData",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "typing.Text"
                ]
            }
        },
        "Event.currentTarget": {
            "name": "currentTarget",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.target": {
            "name": "target",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str"
                ],
                "init": [
                    "None",
                    "str",
                    "bool",
                    "dict[str, typing.Any]",
                    "typing.Mapping",
                    "typing.Sequence[]"
                ]
            }
        },
        "Event.stopPrapagation": {
            "name": "stopPrapagation",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MouseEvent.__init__": {
            "name": "__init__",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "None"
                ],
                "init": [
                    "None",
                    "str",
                    "bool",
                    "dict[, ]"
                ]
            }
        },
        "DragEvent.__init__": {
            "name": "__init__",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "None"
                ],
                "init": [
                    "None",
                    "str"
                ]
            }
        },
        "KeyboardEvent.__init__": {
            "name": "__init__",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "None"
                ],
                "init": [
                    "None",
                    "str"
                ]
            }
        },
        "InputEvent.__init__": {
            "name": "__init__",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "str",
                    "None"
                ],
                "init": [
                    "None",
                    "str",
                    "int",
                    "typing.Any"
                ]
            }
        },
        "_wrap_coro_func.wrapper": {
            "name": "wrapper",
            "location": 255,
            "return": [],
            "arguments": {
                "e": []
            }
        },
        "EventListener.__init__": {
            "name": "__init__",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listener": [
                    "str",
                    "typing.Mapping",
                    "typing.Iterable[str]"
                ]
            }
        },
        "EventListener.__call__": {
            "name": "__call__",
            "location": 282,
            "return": [],
            "arguments": {
                "self": [],
                "event": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "EventTarget.ownerDocument": {
            "name": "ownerDocument",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventTarget.__init__": {
            "name": "__init__",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventTarget._add_event_listener": {
            "name": "_add_event_listener",
            "location": 308,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "typing.Callable[, ]",
                    "typing.IO"
                ],
                "listener": [
                    "str",
                    "typing.Callable[, ]",
                    "typing.IO"
                ]
            }
        },
        "EventTarget.addEventListener": {
            "name": "addEventListener",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[, ]"
                ],
                "listener": [
                    "dict[, ]"
                ]
            }
        },
        "EventTarget._remove_event_listener": {
            "name": "_remove_event_listener",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str"
                ],
                "listener": [
                    "float",
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "EventTarget.removeEventListener": {
            "name": "removeEventListener",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[, ]"
                ],
                "listener": [
                    "dict[, ]"
                ]
            }
        },
        "EventTarget.on_event_pre": {
            "name": "on_event_pre",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "bool",
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "EventTarget._dispatch_event": {
            "name": "_dispatch_event",
            "location": 353,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[, ]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "EventTarget.dispatchEvent": {
            "name": "dispatchEvent",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "WebEventTarget.wdom_id": {
            "name": "wdom_id",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebEventTarget.connected": {
            "name": "connected",
            "location": 374,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebEventTarget.__init__": {
            "name": "__init__",
            "location": 378,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebEventTarget.on_response": {
            "name": "on_response",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [
                    "dict[str, typing.Any]",
                    "dict[, ]"
                ]
            }
        },
        "WebEventTarget.js_exec": {
            "name": "js_exec",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "str",
                    "bool",
                    "tuple[typing.Union[dict[str, typing.Any],typing.Any]]"
                ]
            }
        },
        "WebEventTarget.js_query": {
            "name": "js_query",
            "location": 401,
            "return": [
                "Future"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "tuple[]",
                    "None"
                ]
            }
        },
        "WebEventTarget.ws_send": {
            "name": "ws_send",
            "location": 416,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "WebEventTarget._add_event_listener_web": {
            "name": "_add_event_listener_web",
            "location": 430,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "int",
                    "str",
                    "dict[, ]"
                ]
            }
        },
        "WebEventTarget.addEventListener": {
            "name": "addEventListener",
            "location": 433,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]"
                ],
                "listener": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "WebEventTarget._remove_event_listener_web": {
            "name": "_remove_event_listener_web",
            "location": 439,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "typing.Callable[, ]",
                    "bytes"
                ]
            }
        },
        "WebEventTarget.removeEventListener": {
            "name": "removeEventListener",
            "location": 443,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str",
                    "dict[, ]"
                ],
                "listener": []
            }
        },
        "WebEventTarget._on_mount": {
            "name": "_on_mount",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "e": [
                    "bool",
                    "dict[str, typing.Any]"
                ]
            }
        }
    },
    "wdom-master/wdom/node.py": {
        "_ensure_node": {
            "name": "_ensure_node",
            "location": 373,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "_to_node_list": {
            "name": "_to_node_list",
            "location": 386,
            "return": [],
            "arguments": {
                "nodes": []
            }
        },
        "Node.connected": {
            "name": "connected",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "Node.__bool__": {
            "name": "__bool__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.__len__": {
            "name": "__len__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.__contains__": {
            "name": "__contains__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Node.length": {
            "name": "length",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.parentNode": {
            "name": "parentNode",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.childNodes": {
            "name": "childNodes",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.firstChild": {
            "name": "firstChild",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.lastChild": {
            "name": "lastChild",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.previousSibling": {
            "name": "previousSibling",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.nextSibling": {
            "name": "nextSibling",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.ownerDocument": {
            "name": "ownerDocument",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node._append_document_fragment": {
            "name": "_append_document_fragment",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node._append_element": {
            "name": "_append_element",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node._append_child": {
            "name": "_append_child",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node.appendChild": {
            "name": "appendChild",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node.index": {
            "name": "index",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node._insert_document_fragment_before": {
            "name": "_insert_document_fragment_before",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "ref_node": []
            }
        },
        "Node._insert_element_before": {
            "name": "_insert_element_before",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "ref_node": []
            }
        },
        "Node._insert_before": {
            "name": "_insert_before",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "ref_node": []
            }
        },
        "Node.insertBefore": {
            "name": "insertBefore",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "ref_node": []
            }
        },
        "Node.hasChildNodes": {
            "name": "hasChildNodes",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node._remove_child": {
            "name": "_remove_child",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node.removeChild": {
            "name": "removeChild",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Node._replace_child": {
            "name": "_replace_child",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "new_child": [],
                "old_child": []
            }
        },
        "Node.replaceChild": {
            "name": "replaceChild",
            "location": 250,
            "return": [],
            "arguments": {
                "self": [],
                "new_child": [],
                "old_child": []
            }
        },
        "Node.hasAttributes": {
            "name": "hasAttributes",
            "location": 255,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node._clone_node": {
            "name": "_clone_node",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node._clone_node_deep": {
            "name": "_clone_node_deep",
            "location": 263,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.cloneNode": {
            "name": "cloneNode",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "deep": []
            }
        },
        "Node.__deepcopy__": {
            "name": "__deepcopy__",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "memo": []
            }
        },
        "Node._empty": {
            "name": "_empty",
            "location": 284,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.empty": {
            "name": "empty",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node._get_text_content": {
            "name": "_get_text_content",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node._set_text_content": {
            "name": "_set_text_content",
            "location": 298,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Node.textContent": {
            "name": "textContent",
            "location": 313,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "NodeList.__init__": {
            "name": "__init__",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "nodes": []
            }
        },
        "NodeList.__getitem__": {
            "name": "__getitem__",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "NodeList.__len__": {
            "name": "__len__",
            "location": 329,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NodeList.__contains__": {
            "name": "__contains__",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "NodeList.__iter__": {
            "name": "__iter__",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NodeList.length": {
            "name": "length",
            "location": 340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NodeList.item": {
            "name": "item",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "NodeList.index": {
            "name": "index",
            "location": 354,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "HTMLCollection.namedItem": {
            "name": "namedItem",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ParentNode.children": {
            "name": "children",
            "location": 402,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParentNode.firstElementChild": {
            "name": "firstElementChild",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParentNode.lastElementChild": {
            "name": "lastElementChild",
            "location": 422,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParentNode.prepend": {
            "name": "prepend",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ParentNode.append": {
            "name": "append",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NonDocumentTypeChildNode.previousElementSibling": {
            "name": "previousElementSibling",
            "location": 450,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NonDocumentTypeChildNode.nextElementSibling": {
            "name": "nextElementSibling",
            "location": 465,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChildNode.before": {
            "name": "before",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChildNode.after": {
            "name": "after",
            "location": 496,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChildNode.replaceWith": {
            "name": "replaceWith",
            "location": 509,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChildNode._remove": {
            "name": "_remove",
            "location": 518,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChildNode.remove": {
            "name": "remove",
            "location": 522,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData.__init__": {
            "name": "__init__",
            "location": 538,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "parent": []
            }
        },
        "CharacterData._clone_node": {
            "name": "_clone_node",
            "location": 542,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData.html": {
            "name": "html",
            "location": 547,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData._get_text_content": {
            "name": "_get_text_content",
            "location": 551,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData._set_text_content": {
            "name": "_set_text_content",
            "location": 554,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "CharacterData.__len__": {
            "name": "__len__",
            "location": 557,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData.length": {
            "name": "length",
            "location": 561,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData._append_data": {
            "name": "_append_data",
            "location": 565,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "CharacterData.appendData": {
            "name": "appendData",
            "location": 568,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "CharacterData._insert_data": {
            "name": "_insert_data",
            "location": 572,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "string": []
            }
        },
        "CharacterData.insertData": {
            "name": "insertData",
            "location": 575,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "string": []
            }
        },
        "CharacterData._delete_data": {
            "name": "_delete_data",
            "location": 579,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "count": []
            }
        },
        "CharacterData.deleteData": {
            "name": "deleteData",
            "location": 582,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "count": []
            }
        },
        "CharacterData._replace_data": {
            "name": "_replace_data",
            "location": 586,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "count": [],
                "string": []
            }
        },
        "CharacterData.replaceData": {
            "name": "replaceData",
            "location": 590,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "count": [],
                "string": []
            }
        },
        "CharacterData.childNodes": {
            "name": "childNodes",
            "location": 595,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData.appendChild": {
            "name": "appendChild",
            "location": 603,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "CharacterData.insertBefore": {
            "name": "insertBefore",
            "location": 607,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "ref_node": []
            }
        },
        "CharacterData.hasChildNodes": {
            "name": "hasChildNodes",
            "location": 611,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CharacterData.removeChild": {
            "name": "removeChild",
            "location": 615,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "CharacterData.replaceChild": {
            "name": "replaceChild",
            "location": 619,
            "return": [],
            "arguments": {
                "self": [],
                "new_child": [],
                "old_child": []
            }
        },
        "CharacterData.hasAttributes": {
            "name": "hasAttributes",
            "location": 623,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Text.html": {
            "name": "html",
            "location": 635,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RawHtml.html": {
            "name": "html",
            "location": 649,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Comment.html": {
            "name": "html",
            "location": 661,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DocumentType._clone_node": {
            "name": "_clone_node",
            "location": 674,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DocumentType.nodeName": {
            "name": "nodeName",
            "location": 679,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DocumentType.__init__": {
            "name": "__init__",
            "location": 683,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "parent": []
            }
        },
        "DocumentType.name": {
            "name": "name",
            "location": 694,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "DocumentType.html": {
            "name": "html",
            "location": 698,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DocumentFragment.html": {
            "name": "html",
            "location": 714,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/options.py": {
        "level_to_int": {
            "name": "level_to_int",
            "location": 97,
            "return": [
                "int"
            ],
            "arguments": {
                "level": [
                    "str",
                    "int",
                    "Exception"
                ]
            }
        },
        "set_loglevel": {
            "name": "set_loglevel",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "level": [
                    "None",
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "parse_command_line": {
            "name": "parse_command_line",
            "location": 133,
            "return": [
                "Namespace"
            ],
            "arguments": {}
        }
    },
    "wdom-master/wdom/parser.py": {
        "parse_html": {
            "name": "parse_html",
            "location": 68,
            "return": [],
            "arguments": {
                "html": [
                    "str"
                ],
                "parser": [
                    "None",
                    "str"
                ]
            }
        },
        "FragmentParser.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FragmentParser.handle_starttag": {
            "name": "handle_starttag",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str",
                    "typing.Callable[A, typing.Any]",
                    "list[str]",
                    "dict[, ]",
                    "list[]",
                    "bool"
                ],
                "attr": [
                    "typing.MutableMapping",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "FragmentParser.handle_endtag": {
            "name": "handle_endtag",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "FragmentParser.handle_data": {
            "name": "handle_data",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "FragmentParser.handle_comment": {
            "name": "handle_comment",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "comment": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "wdom-master/wdom/tag.py": {
        "NewTagClass": {
            "name": "NewTagClass",
            "location": 170,
            "return": [],
            "arguments": {
                "class_name": [],
                "tag": [],
                "bases": []
            }
        },
        "Tag.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag._clone_node": {
            "name": "_clone_node",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tag.type": {
            "name": "type",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "NestedTag.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedTag.appendChild": {
            "name": "appendChild",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "NestedTag.insertBefore": {
            "name": "insertBefore",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "child": [],
                "ref_node": []
            }
        },
        "NestedTag.removeChild": {
            "name": "removeChild",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "NestedTag.replaceChild": {
            "name": "replaceChild",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "new_child": [],
                "old_child": []
            }
        },
        "NestedTag.childNodes": {
            "name": "childNodes",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedTag.empty": {
            "name": "empty",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedTag.textContent": {
            "name": "textContent",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "NestedTag.html": {
            "name": "html",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedTag.innerHTML": {
            "name": "innerHTML",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "Input.__init__": {
            "name": "__init__",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Textarea.value": {
            "name": "value",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Script.__init__": {
            "name": "__init__",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RawHtmlNode.__init__": {
            "name": "__init__",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/util.py": {
        "install_asyncio": {
            "name": "install_asyncio",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "suppress_logging": {
            "name": "suppress_logging",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "reset": {
            "name": "reset",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wdom-master/wdom/web_node.py": {
        "remove_wdom_id": {
            "name": "remove_wdom_id",
            "location": 27,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "WdomElementParser.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElementMeta.__prepare__": {
            "name": "__prepare__",
            "location": 44,
            "return": [
                "dict[typing.Text, bool]"
            ],
            "arguments": {
                "metacls": [],
                "name": [],
                "bases": []
            }
        },
        "WdomElement.wdom_id": {
            "name": "wdom_id",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.rimo_id": {
            "name": "rimo_id",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.connected": {
            "name": "connected",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement._clone_node": {
            "name": "_clone_node",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomElement._get_attrs_by_string": {
            "name": "_get_attrs_by_string",
            "location": 111,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement._set_attribute": {
            "name": "_set_attribute",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": [],
                "value": []
            }
        },
        "WdomElement.__getitem__": {
            "name": "__getitem__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "WdomElement.__setitem__": {
            "name": "__setitem__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": [],
                "val": []
            }
        },
        "WdomElement.__delitem__": {
            "name": "__delitem__",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "WdomElement.get_class_list": {
            "name": "get_class_list",
            "location": 137,
            "return": [
                "DOMTokenList"
            ],
            "arguments": {
                "cls": []
            }
        },
        "WdomElement.getAttribute": {
            "name": "getAttribute",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "WdomElement.addClass": {
            "name": "addClass",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.hasClass": {
            "name": "hasClass",
            "location": 160,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "class_": []
            }
        },
        "WdomElement.hasClasses": {
            "name": "hasClasses",
            "location": 164,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.removeClass": {
            "name": "removeClass",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement._remove_web": {
            "name": "_remove_web",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.remove": {
            "name": "remove",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement._empty_web": {
            "name": "_empty_web",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.empty": {
            "name": "empty",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement._get_child_html": {
            "name": "_get_child_html",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "WdomElement._append_child_web": {
            "name": "_append_child_web",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "WdomElement.appendChild": {
            "name": "appendChild",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "WdomElement._insert_before_web": {
            "name": "_insert_before_web",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "child": [],
                "ref_node": []
            }
        },
        "WdomElement.insertBefore": {
            "name": "insertBefore",
            "location": 240,
            "return": [],
            "arguments": {
                "self": [],
                "child": [],
                "ref_node": []
            }
        },
        "WdomElement._remove_child_web": {
            "name": "_remove_child_web",
            "location": 251,
            "return": [
                "WdomElement"
            ],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "WdomElement.removeChild": {
            "name": "removeChild",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "WdomElement._replace_child_web": {
            "name": "_replace_child_web",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_child": [],
                "old_child": []
            }
        },
        "WdomElement.replaceChild": {
            "name": "replaceChild",
            "location": 279,
            "return": [],
            "arguments": {
                "self": [],
                "new_child": [],
                "old_child": []
            }
        },
        "WdomElement._set_text_content_web": {
            "name": "_set_text_content_web",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "WdomElement.textContent": {
            "name": "textContent",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "WdomElement._set_inner_html_web": {
            "name": "_set_inner_html_web",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "WdomElement.innerHTML": {
            "name": "innerHTML",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "WdomElement.html_noid": {
            "name": "html_noid",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.click": {
            "name": "click",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.exec": {
            "name": "exec",
            "location": 331,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "script": []
            }
        },
        "WdomElement.scroll": {
            "name": "scroll",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "WdomElement.scrollTo": {
            "name": "scrollTo",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "WdomElement.scrollBy": {
            "name": "scrollBy",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "WdomElement.scrollX": {
            "name": "scrollX",
            "location": 345,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.scrollY": {
            "name": "scrollY",
            "location": 348,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.show": {
            "name": "show",
            "location": 351,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WdomElement.hide": {
            "name": "hide",
            "location": 355,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/window.py": {
        "CustomElementsRegistry._upgrage_to_tag_class": {
            "name": "_upgrage_to_tag_class",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elm": [
                    "typing.Callable[, ]",
                    "str",
                    "bool"
                ]
            }
        },
        "CustomElementsRegistry._upgrade_by_tag": {
            "name": "_upgrade_by_tag",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ],
                "constructor": [
                    "typing.Type",
                    "str",
                    "tuple[typing.Union[str,int]]",
                    "set[]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "CustomElementsRegistry._upgrade_by_is": {
            "name": "_upgrade_by_is",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "None"
                ],
                "constructor": [
                    "typing.Type",
                    "str",
                    "tuple[typing.Union[str,int]]",
                    "dict[str, typing.Any]"
                ],
                "extends": [
                    "str",
                    "None"
                ]
            }
        },
        "CustomElementsRegistry._define": {
            "name": "_define",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "constructor": [
                    "str"
                ],
                "options": [
                    "str",
                    "bytes"
                ]
            }
        },
        "CustomElementsRegistry._define_orig": {
            "name": "_define_orig",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "constructor": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "options": [
                    "None",
                    "str",
                    "list[str]"
                ]
            }
        },
        "CustomElementsRegistry._define_class": {
            "name": "_define_class",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "constructor": [
                    "bool",
                    "str",
                    "None"
                ]
            }
        },
        "CustomElementsRegistry.define": {
            "name": "define",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomElementsRegistry._define_default": {
            "name": "_define_default",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomElementsRegistry.reset": {
            "name": "reset",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Window.document": {
            "name": "document",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Window.ownerDocument": {
            "name": "ownerDocument",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Window.customElements": {
            "name": "customElements",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Window.wdom_id": {
            "name": "wdom_id",
            "location": 118,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "self": []
            }
        },
        "Window.connected": {
            "name": "connected",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Window.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "wdom-master/wdom/__init__.py": {},
    "wdom-master/wdom/examples/data_binding.py": {
        "sample_app": {
            "name": "sample_app",
            "location": 24,
            "return": [
                "App"
            ],
            "arguments": {}
        },
        "App.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "App.update": {
            "name": "update",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[, ]",
                    "list[]",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "wdom-master/wdom/examples/drag.py": {
        "dragstart": {
            "name": "dragstart",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "e": [
                    "str",
                    "typing.Callable[str, None]",
                    "list[str]",
                    "typing.IO"
                ]
            }
        },
        "drop": {
            "name": "drop",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "e": [
                    "dict[str, typing.Any]",
                    "str"
                ]
            }
        },
        "sample_app": {
            "name": "sample_app",
            "location": 53,
            "return": [
                "App"
            ],
            "arguments": {}
        },
        "App.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "App.update": {
            "name": "update",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[, ]",
                    "list[]",
                    "typing.Callable[, ]"
                ]
            }
        }
    },
    "wdom-master/wdom/examples/global_events.py": {
        "sample_page": {
            "name": "sample_page",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "sample_page.add_letter_doc": {
            "name": "add_letter_doc",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "e": []
            }
        },
        "sample_page.add_letter_win": {
            "name": "add_letter_win",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "e": []
            }
        },
        "sample_page.input_handler": {
            "name": "input_handler",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "e": []
            }
        }
    },
    "wdom-master/wdom/examples/markdown_simple.py": {
        "sample_page": {
            "name": "sample_page",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "HighlighterRenderer.blockcode": {
            "name": "blockcode",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "lang": [
                    "str",
                    "None"
                ]
            }
        },
        "Editor.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Editor.render": {
            "name": "render",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict[, ]",
                    "dict[str, typing.Any]",
                    "str",
                    "bool"
                ]
            }
        },
        "Editor.set_style": {
            "name": "set_style",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "style": [
                    "str",
                    "bytearray",
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "wdom-master/wdom/examples/rev_text.py": {
        "rev_text": {
            "name": "rev_text",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "sample_app": {
            "name": "sample_app",
            "location": 13,
            "return": [
                "str",
                "int",
                "list[]",
                "typing.Any",
                "dict[str, int]",
                "list[str]"
            ],
            "arguments": {}
        }
    },
    "wdom-master/wdom/examples/theming.py": {
        "_get_theme_name": {
            "name": "_get_theme_name",
            "location": 9,
            "return": [
                "typing.Text",
                "dict[, ]",
                "list[str]",
                "dict[str, str]",
                "dict[int, str]"
            ],
            "arguments": {
                "theme": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "sample_app": {
            "name": "sample_app",
            "location": 20,
            "return": [],
            "arguments": {
                "theme": []
            }
        },
        "sample_page": {
            "name": "sample_page",
            "location": 213,
            "return": [
                "str",
                "int",
                "list[typing.Any]",
                "None"
            ],
            "arguments": {
                "theme": []
            }
        },
        "main": {
            "name": "main",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wdom-master/wdom/examples/timer.py": {
        "sample_app": {
            "name": "sample_app",
            "location": 50,
            "return": [
                "Timer"
            ],
            "arguments": {}
        },
        "Timer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timer.stop": {
            "name": "stop",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str"
                ]
            }
        },
        "Timer.start": {
            "name": "start",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str"
                ]
            }
        },
        "Timer.reset": {
            "name": "reset",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "str"
                ]
            }
        },
        "Timer._timer_loop": {
            "name": "_timer_loop",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timer.set": {
            "name": "set",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str",
                    "bool"
                ]
            }
        },
        "Timer.update": {
            "name": "update",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/examples/todo.py": {
        "sample_page": {
            "name": "sample_page",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "Item.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "sample_page.new_item": {
            "name": "new_item",
            "location": 31,
            "return": [
                "Item"
            ],
            "arguments": {
                "event": [
                    "None"
                ]
            }
        }
    },
    "wdom-master/wdom/examples/__init__.py": {},
    "wdom-master/wdom/server/base.py": {
        "_compile_exclude_patterns": {
            "name": "_compile_exclude_patterns",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_is_exclude": {
            "name": "_is_exclude",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "name": [
                    "str",
                    "int",
                    "typing.Callable[Any,Any, None]",
                    "None"
                ]
            }
        },
        "_add_watch_path": {
            "name": "_add_watch_path",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "watch_dir": {
            "name": "watch_dir",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "open_browser": {
            "name": "open_browser",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "browser": [
                    "None",
                    "str",
                    "bytes",
                    "bool"
                ]
            }
        }
    },
    "wdom-master/wdom/server/handler.py": {
        "log_handler": {
            "name": "log_handler",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "level": [
                    "typing.Callable[, ]",
                    "str"
                ],
                "message": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "create_event_from_msg": {
            "name": "create_event_from_msg",
            "location": 28,
            "return": [],
            "arguments": {
                "msg": [
                    "int",
                    "str"
                ]
            }
        },
        "event_handler": {
            "name": "event_handler",
            "location": 49,
            "return": [
                "int",
                "bytes",
                "str"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "response_handler": {
            "name": "response_handler",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "on_websocket_message": {
            "name": "on_websocket_message",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "message": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "wdom-master/wdom/server/_tornado.py": {
        "is_connected": {
            "name": "is_connected",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "get_app": {
            "name": "get_app",
            "location": 162,
            "return": [
                "Application"
            ],
            "arguments": {}
        },
        "set_application": {
            "name": "set_application",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "str",
                    "bool"
                ]
            }
        },
        "start_server": {
            "name": "start_server",
            "location": 173,
            "return": [],
            "arguments": {
                "app": [
                    "None"
                ],
                "port": [
                    "None",
                    "bool"
                ],
                "address": [
                    "None"
                ]
            }
        },
        "stop_server": {
            "name": "stop_server",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "server": []
            }
        },
        "MainHandler.get": {
            "name": "get",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WSHandler.open": {
            "name": "open",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WSHandler.on_message": {
            "name": "on_message",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "WSHandler.on_close": {
            "name": "on_close",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticFileHandlerNoCache.set_extra_headers": {
            "name": "set_extra_headers",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str",
                    "list[tuple[typing.Union[object,object]]]",
                    "bool"
                ]
            }
        },
        "Application.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.log_request": {
            "name": "log_request",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": []
            }
        },
        "Application.add_static_path": {
            "name": "add_static_path",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prefix": [
                    "str"
                ],
                "path": [
                    "str",
                    "typing.IO",
                    "None"
                ]
            }
        },
        "Application.add_favicon_path": {
            "name": "add_favicon_path",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "wdom-master/wdom/server/__init__.py": {
        "is_connected": {
            "name": "is_connected",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "push_message": {
            "name": "push_message",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "dict[, ]",
                    "str",
                    "int"
                ]
            }
        },
        "send_message": {
            "name": "send_message",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "add_static_path": {
            "name": "add_static_path",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "prefix": [
                    "str",
                    "list[]"
                ],
                "path": [
                    "str",
                    "int",
                    "dict[, ]",
                    "None"
                ],
                "no_watch": [
                    "bool"
                ]
            }
        },
        "get_app": {
            "name": "get_app",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "start_server": {
            "name": "start_server",
            "location": 77,
            "return": [],
            "arguments": {
                "address": [
                    "None",
                    "int",
                    "str"
                ],
                "port": [
                    "None",
                    "int",
                    "str"
                ],
                "check_time": [
                    "int"
                ]
            }
        },
        "stop_server": {
            "name": "stop_server",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "server": [
                    "None",
                    "str",
                    "int"
                ]
            }
        },
        "start": {
            "name": "start",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wdom-master/wdom/themes/bagpakk.py": {},
    "wdom-master/wdom/themes/baseguide.py": {},
    "wdom-master/wdom/themes/bijou.py": {},
    "wdom-master/wdom/themes/blaze.py": {},
    "wdom-master/wdom/themes/bootstrap3.py": {},
    "wdom-master/wdom/themes/bootstrap4.py": {},
    "wdom-master/wdom/themes/bulma.py": {
        "Select.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/themes/concise.py": {
        "Col.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/themes/default.py": {},
    "wdom-master/wdom/themes/foundation.py": {},
    "wdom-master/wdom/themes/furtive.py": {},
    "wdom-master/wdom/themes/groundwork.py": {},
    "wdom-master/wdom/themes/ink.py": {},
    "wdom-master/wdom/themes/kathamo.py": {
        "Button.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/themes/kube.py": {
        "TypedButton.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Col.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/themes/mdl.py": {},
    "wdom-master/wdom/themes/milligram.py": {},
    "wdom-master/wdom/themes/mui.py": {},
    "wdom-master/wdom/themes/papier.py": {},
    "wdom-master/wdom/themes/picnic.py": {},
    "wdom-master/wdom/themes/pure.py": {},
    "wdom-master/wdom/themes/schema.py": {},
    "wdom-master/wdom/themes/semantic.py": {},
    "wdom-master/wdom/themes/siimple.py": {},
    "wdom-master/wdom/themes/skeleton.py": {},
    "wdom-master/wdom/themes/skyblue.py": {},
    "wdom-master/wdom/themes/spark.py": {
        "Form.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wdom-master/wdom/themes/spectre.py": {},
    "wdom-master/wdom/themes/vital.py": {},
    "wdom-master/wdom/themes/__init__.py": {}
}
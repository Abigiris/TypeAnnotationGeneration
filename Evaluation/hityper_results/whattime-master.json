{
    "whattime-master/setup.py": {},
    "whattime-master/docs/conf.py": {},
    "whattime-master/examples/get_started.py": {},
    "whattime-master/examples/using_certain_descriptors_only.py": {},
    "whattime-master/src/whattime/base.py": {
        "InfoBase.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": []
            }
        },
        "InfoBase.__mapping__": {
            "name": "__mapping__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InfoBase.types": {
            "name": "types",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocationBasedInfoBase.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": [
                    "str",
                    "None",
                    "int",
                    "float"
                ],
                "hemisphere": [
                    "int",
                    "str",
                    "float",
                    "tuple[str]"
                ]
            }
        },
        "LocationBasedInfoBase.__inverse_mapping__": {
            "name": "__inverse_mapping__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocationBasedInfoBase.types": {
            "name": "types",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whattime-master/src/whattime/day.py": {
        "day_time_info": {
            "name": "day_time_info",
            "location": 80,
            "return": [
                "DayTimeInfo"
            ],
            "arguments": {
                "date": [
                    "bool",
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "DayTimeInfo.__mapping__": {
            "name": "__mapping__",
            "location": 11,
            "return": [
                "dict[tuple[int], ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.__inverse_mapping__": {
            "name": "__inverse_mapping__",
            "location": 22,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.types": {
            "name": "types",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.is_morning": {
            "name": "is_morning",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.is_midmorning": {
            "name": "is_midmorning",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.is_noon": {
            "name": "is_noon",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.is_afternoon": {
            "name": "is_afternoon",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.is_evening": {
            "name": "is_evening",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo.is_night": {
            "name": "is_night",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DayTimeInfo._is_in_daytime": {
            "name": "_is_in_daytime",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "time_type": [
                    "int",
                    "typing.Type",
                    "str"
                ]
            }
        }
    },
    "whattime-master/src/whattime/season.py": {
        "season_info": {
            "name": "season_info",
            "location": 77,
            "return": [
                "SeasonInfo"
            ],
            "arguments": {
                "date": [
                    "int",
                    "tuple[typing.Union[str,str]]"
                ],
                "hemisphere": [
                    "int",
                    "tuple[typing.Union[str,str]]"
                ]
            }
        },
        "SeasonInfo.__mapping__": {
            "name": "__mapping__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeasonInfo.__inverse_mapping__": {
            "name": "__inverse_mapping__",
            "location": 31,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeasonInfo.types": {
            "name": "types",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeasonInfo.is_spring": {
            "name": "is_spring",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeasonInfo.is_summer": {
            "name": "is_summer",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeasonInfo.is_autumn": {
            "name": "is_autumn",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeasonInfo.is_winter": {
            "name": "is_winter",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeasonInfo._is_in_season": {
            "name": "_is_in_season",
            "location": 73,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "time_type": [
                    "str",
                    "typing.Iterable[typing.Hashable]"
                ]
            }
        }
    },
    "whattime-master/src/whattime/type.py": {},
    "whattime-master/src/whattime/utils.py": {
        "whattime": {
            "name": "whattime",
            "location": 37,
            "return": [
                "TimeInfo"
            ],
            "arguments": {
                "date": [
                    "str",
                    "None",
                    "bool"
                ],
                "hemisphere": [
                    "str",
                    "None",
                    "bool"
                ]
            }
        },
        "week_info": {
            "name": "week_info",
            "location": 41,
            "return": [
                "WeekInfo"
            ],
            "arguments": {
                "date": [
                    "str",
                    "bool",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "day_time_info": {
            "name": "day_time_info",
            "location": 45,
            "return": [
                "DayTimeInfo"
            ],
            "arguments": {
                "date": [
                    "bool",
                    "dict[, ]",
                    "dict[str, str]"
                ]
            }
        },
        "season_info": {
            "name": "season_info",
            "location": 49,
            "return": [
                "SeasonInfo"
            ],
            "arguments": {
                "date": [
                    "int",
                    "tuple[typing.Union[str,str]]"
                ],
                "hemisphere": [
                    "int",
                    "tuple[typing.Union[str,str]]"
                ]
            }
        },
        "TimeInfo.__mapping__": {
            "name": "__mapping__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeInfo.types": {
            "name": "types",
            "location": 24,
            "return": [
                "str",
                "typing.Iterable[dict[str, typing.Any]]",
                "typing.Type"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeInfo._base_kwargs": {
            "name": "_base_kwargs",
            "location": 32,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "self": [],
                "cls": [
                    "dict[str, typing.Any]",
                    "list[]",
                    "dict[, ]",
                    "tuple[]"
                ]
            }
        }
    },
    "whattime-master/src/whattime/week.py": {
        "week_info": {
            "name": "week_info",
            "location": 92,
            "return": [
                "WeekInfo"
            ],
            "arguments": {
                "date": [
                    "str",
                    "bool",
                    "None",
                    "dict[str, str]"
                ]
            }
        },
        "WeekInfo.__mapping__": {
            "name": "__mapping__",
            "location": 10,
            "return": [
                "dict[typing.Text, ]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.types": {
            "name": "types",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_weekend": {
            "name": "is_weekend",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_weekday": {
            "name": "is_weekday",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_monday": {
            "name": "is_monday",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_tuesday": {
            "name": "is_tuesday",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_wednesday": {
            "name": "is_wednesday",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_thursday": {
            "name": "is_thursday",
            "location": 69,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_friday": {
            "name": "is_friday",
            "location": 74,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_saturday": {
            "name": "is_saturday",
            "location": 80,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WeekInfo.is_sunday": {
            "name": "is_sunday",
            "location": 86,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "whattime-master/src/whattime/__init__.py": {},
    "whattime-master/tests/conftest.py": {
        "now": {
            "name": "now",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "today_noon": {
            "name": "today_noon",
            "location": 18,
            "return": [],
            "arguments": {
                "now": []
            }
        },
        "monday": {
            "name": "monday",
            "location": 23,
            "return": [],
            "arguments": {
                "today_noon": []
            }
        },
        "southern_winter_monday": {
            "name": "southern_winter_monday",
            "location": 28,
            "return": [],
            "arguments": {
                "today_noon": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "day": {
            "name": "day",
            "location": 33,
            "return": [],
            "arguments": {
                "monday": [
                    "str"
                ]
            }
        },
        "week": {
            "name": "week",
            "location": 42,
            "return": [],
            "arguments": {
                "monday": []
            }
        },
        "months": {
            "name": "months",
            "location": 51,
            "return": [],
            "arguments": {
                "now": []
            }
        }
    },
    "whattime-master/tests/test_day.py": {
        "test_time_type_state_is_morning": {
            "name": "test_time_type_state_is_morning",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "day": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "dict[, ]",
                    "dict[typing.Any, int]"
                ]
            }
        },
        "test_time_type_state_is_midmorning": {
            "name": "test_time_type_state_is_midmorning",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "day": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "dict[, ]",
                    "dict[typing.Any, int]"
                ]
            }
        },
        "test_time_type_state_is_noon": {
            "name": "test_time_type_state_is_noon",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "day": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "dict[, ]",
                    "dict[typing.Any, int]"
                ]
            }
        },
        "test_time_type_state_is_afternoon": {
            "name": "test_time_type_state_is_afternoon",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "day": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "dict[, ]",
                    "dict[typing.Any, int]"
                ]
            }
        },
        "test_time_type_state_is_evening": {
            "name": "test_time_type_state_is_evening",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "day": [
                    "typing.Callable[, ]",
                    "dict[str, typing.Any]",
                    "bool",
                    "dict[, ]",
                    "dict[typing.Any, int]"
                ]
            }
        },
        "test_time_type_state_is_night": {
            "name": "test_time_type_state_is_night",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "day": [
                    "str",
                    "dict[str, typing.Any]",
                    "typing.Deque",
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "test_time_type_state_types": {
            "name": "test_time_type_state_types",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "day": [
                    "dict[, ]",
                    "set[str]"
                ]
            }
        }
    },
    "whattime-master/tests/test_season.py": {
        "test_is_spring_for_northern_hemisphere": {
            "name": "test_is_spring_for_northern_hemisphere",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "months": []
            }
        },
        "test_is_spring_for_southern_hemisphere": {
            "name": "test_is_spring_for_southern_hemisphere",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "months": []
            }
        },
        "test_is_summer_for_northern_hemisphere": {
            "name": "test_is_summer_for_northern_hemisphere",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "months": []
            }
        },
        "test_is_summer_for_southern_hemisphere": {
            "name": "test_is_summer_for_southern_hemisphere",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "months": [
                    "dict[, ]"
                ]
            }
        },
        "test_is_autumn_for_northern_hemisphere": {
            "name": "test_is_autumn_for_northern_hemisphere",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "months": []
            }
        },
        "test_is_autumn_for_southern_hemisphere": {
            "name": "test_is_autumn_for_southern_hemisphere",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "months": []
            }
        },
        "test_is_winter_for_northern_hemisphere": {
            "name": "test_is_winter_for_northern_hemisphere",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "months": [
                    "dict[, ]"
                ]
            }
        },
        "test_is_winter_for_southern_hemisphere": {
            "name": "test_is_winter_for_southern_hemisphere",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "months": []
            }
        }
    },
    "whattime-master/tests/test_time_info.py": {
        "test_time_info": {
            "name": "test_time_info",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "southern_winter_monday": [
                    "str"
                ]
            }
        }
    },
    "whattime-master/tests/test_week.py": {
        "test_time_type_state_is_weekday": {
            "name": "test_time_type_state_is_weekday",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "week": []
            }
        },
        "test_time_type_state_is_weekend": {
            "name": "test_time_type_state_is_weekend",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "week": [
                    "dict[, ]",
                    "list[typing.Any]",
                    "None"
                ]
            }
        },
        "test_time_type_state_certain_day": {
            "name": "test_time_type_state_certain_day",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "week": [
                    "str",
                    "None",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "test_time_type_state_types": {
            "name": "test_time_type_state_types",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "week": [
                    "typing.Type"
                ]
            }
        }
    }
}
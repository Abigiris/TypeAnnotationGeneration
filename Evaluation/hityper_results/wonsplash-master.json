{
    "wonsplash-master/manage.py": {},
    "wonsplash-master/config/urls.py": {},
    "wonsplash-master/config/wsgi.py": {},
    "wonsplash-master/config/__init__.py": {},
    "wonsplash-master/config/settings/base.py": {},
    "wonsplash-master/config/settings/local.py": {},
    "wonsplash-master/config/settings/production.py": {},
    "wonsplash-master/config/settings/test.py": {},
    "wonsplash-master/config/settings/__init__.py": {},
    "wonsplash-master/wonsplash/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": [
                    "str",
                    "None",
                    "list[str]"
                ],
                "tmpdir": [
                    "str",
                    "None",
                    "list[str]"
                ]
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [
                "UserFactory"
            ],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [
                "RequestFactory"
            ],
            "arguments": {}
        }
    },
    "wonsplash-master/wonsplash/views.py": {
        "ReactAppView.get": {
            "name": "get",
            "location": 9,
            "return": [
                "HttpResponse"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict[str, str]",
                    "dict[, ]"
                ]
            }
        }
    },
    "wonsplash-master/wonsplash/__init__.py": {},
    "wonsplash-master/wonsplash/collects/admin.py": {},
    "wonsplash-master/wonsplash/collects/apps.py": {},
    "wonsplash-master/wonsplash/collects/models.py": {
        "Image.__str__": {
            "name": "__str__",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.natural_time": {
            "name": "natural_time",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.like_count": {
            "name": "like_count",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Like.natural_time": {
            "name": "natural_time",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wonsplash-master/wonsplash/collects/serializers.py": {
        "ImageSerializer.get_is_liked": {
            "name": "get_is_liked",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "list[dict[str, typing.Any]]",
                    "dict[str, typing.Any]",
                    "dict[, ]",
                    "bool"
                ]
            }
        }
    },
    "wonsplash-master/wonsplash/collects/tests.py": {},
    "wonsplash-master/wonsplash/collects/urls.py": {},
    "wonsplash-master/wonsplash/collects/views.py": {
        "Feed.get": {
            "name": "get",
            "location": 12,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "MyFollowCollects.found_user": {
            "name": "found_user",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "MyFollowCollects.get": {
            "name": "get",
            "location": 40,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "Like.found_image": {
            "name": "found_image",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_id": []
            }
        },
        "Like.post": {
            "name": "post",
            "location": 67,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UnLike.found_image": {
            "name": "found_image",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_id": []
            }
        },
        "UnLike.delete": {
            "name": "delete",
            "location": 95,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "Search.get": {
            "name": "get",
            "location": 113,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "Post.post": {
            "name": "post",
            "location": 133,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "Detail.found_image": {
            "name": "found_image",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_id": []
            }
        },
        "Detail.get": {
            "name": "get",
            "location": 158,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "Detail.delete": {
            "name": "delete",
            "location": 170,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "image_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "Feed.get.get_key": {
            "name": "get_key",
            "location": 17,
            "return": [],
            "arguments": {
                "image": []
            }
        }
    },
    "wonsplash-master/wonsplash/collects/__init__.py": {},
    "wonsplash-master/wonsplash/collects/migrations/0001_initial.py": {},
    "wonsplash-master/wonsplash/collects/migrations/0002_auto_20190810_1243.py": {},
    "wonsplash-master/wonsplash/collects/migrations/0003_auto_20190810_1525.py": {},
    "wonsplash-master/wonsplash/collects/migrations/0004_auto_20190810_1717.py": {},
    "wonsplash-master/wonsplash/collects/migrations/0005_auto_20190810_1733.py": {},
    "wonsplash-master/wonsplash/collects/migrations/__init__.py": {},
    "wonsplash-master/wonsplash/contrib/__init__.py": {},
    "wonsplash-master/wonsplash/contrib/sites/__init__.py": {},
    "wonsplash-master/wonsplash/contrib/sites/migrations/0001_initial.py": {},
    "wonsplash-master/wonsplash/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "wonsplash-master/wonsplash/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "None"
                ]
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": [
                    "int",
                    "str",
                    "None"
                ]
            }
        }
    },
    "wonsplash-master/wonsplash/contrib/sites/migrations/__init__.py": {},
    "wonsplash-master/wonsplash/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ]
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "request": [
                    "dict[, ]"
                ],
                "sociallogin": [
                    "dict[, ]"
                ]
            }
        }
    },
    "wonsplash-master/wonsplash/users/admin.py": {},
    "wonsplash-master/wonsplash/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wonsplash-master/wonsplash/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wonsplash-master/wonsplash/users/models.py": {
        "User.post_count": {
            "name": "post_count",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.following_count": {
            "name": "following_count",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.followers_count": {
            "name": "followers_count",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "wonsplash-master/wonsplash/users/serializers.py": {
        "UserProfileSerializer.get_is_following": {
            "name": "get_is_following",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "bytes"
                ]
            }
        },
        "UserProfileSerializer.get_is_self": {
            "name": "get_is_self",
            "location": 39,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "wonsplash-master/wonsplash/users/urls.py": {},
    "wonsplash-master/wonsplash/users/views.py": {
        "Profile.get_user": {
            "name": "get_user",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "Profile.get": {
            "name": "get",
            "location": 21,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "Profile.put": {
            "name": "put",
            "location": 33,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": [
                    "None"
                ]
            }
        },
        "MyLikes.get": {
            "name": "get",
            "location": 57,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": [
                    "None"
                ]
            }
        },
        "Following.found_user": {
            "name": "found_user",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_id": []
            }
        },
        "Following.post": {
            "name": "post",
            "location": 82,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": [
                    "None"
                ]
            }
        },
        "UnFollowing.found_user": {
            "name": "found_user",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_id": []
            }
        },
        "UnFollowing.post": {
            "name": "post",
            "location": 111,
            "return": [
                "Response"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": [
                    "None"
                ]
            }
        }
    },
    "wonsplash-master/wonsplash/users/__init__.py": {},
    "wonsplash-master/wonsplash/users/migrations/0001_initial.py": {},
    "wonsplash-master/wonsplash/users/migrations/0002_auto_20190810_1152.py": {},
    "wonsplash-master/wonsplash/users/migrations/0003_auto_20190810_1717.py": {},
    "wonsplash-master/wonsplash/users/migrations/0004_auto_20190823_1548.py": {},
    "wonsplash-master/wonsplash/users/migrations/__init__.py": {},
    "wonsplash-master/wonsplash/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "create": [
                    "int",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ],
                "extracted": [
                    "int",
                    "str",
                    "typing.Callable[typing.Any, T]"
                ]
            }
        }
    },
    "wonsplash-master/wonsplash/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "wonsplash-master/wonsplash/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "wonsplash-master/wonsplash/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "test_update": {
            "name": "test_update",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "wonsplash-master/wonsplash/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str"
                ],
                "request_factory": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "int"
                ],
                "request_factory": []
            }
        }
    },
    "wonsplash-master/wonsplash/users/tests/__init__.py": {}
}
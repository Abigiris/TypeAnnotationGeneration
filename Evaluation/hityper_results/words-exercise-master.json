{
    "words-exercise-master/wordcounter.py": {
        "_invert_counts": {
            "name": "_invert_counts",
            "location": 17,
            "return": [
                "dict[typing.Union[tuple[typing.Union[str,object]],tuple[typing.Union[str,dict[str, int]]]], ]"
            ],
            "arguments": {
                "counts": [
                    "dict[str, object]",
                    "dict[str, dict[str, int]]",
                    "dict[str, str]"
                ]
            }
        },
        "top_words": {
            "name": "top_words",
            "location": 26,
            "return": [],
            "arguments": {
                "streams_or_paths": [
                    "str",
                    "int",
                    "None"
                ],
                "encoding": [
                    "str",
                    "bool",
                    "list[int]"
                ],
                "n": [
                    "int"
                ],
                "ascii_only": [
                    "str",
                    "bool",
                    "list[int]"
                ],
                "nodes": [
                    "typing.Iterable[dispy.NodeAllocate]",
                    "str",
                    "bool",
                    "None"
                ]
            }
        }
    },
    "words-exercise-master/test/test_counter.py": {
        "_count_words": {
            "name": "_count_words",
            "location": 20,
            "return": [],
            "arguments": {
                "words_string": [
                    "str",
                    "bytes"
                ]
            }
        },
        "WordCounterTest.test_nonempty": {
            "name": "test_nonempty",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WordCounterTest.test_empty": {
            "name": "test_empty",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WordCounterTest.test_wordless": {
            "name": "test_wordless",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "words-exercise-master/test/test_tokenizer.py": {
        "_unicode_tokenizer": {
            "name": "_unicode_tokenizer",
            "location": 32,
            "return": [
                "WordTokenizer"
            ],
            "arguments": {
                "string": []
            }
        },
        "TokenizerTest.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TokenizerTest.test_ascii": {
            "name": "test_ascii",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TokenizerTest.test_unicode": {
            "name": "test_unicode",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EmptyTokenizerTest.test_empty": {
            "name": "test_empty",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EmptyTokenizerTest.test_wordless": {
            "name": "test_wordless",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "words-exercise-master/test/__init__.py": {},
    "words-exercise-master/wordcounter/dispy_counter.py": {
        "_computation": {
            "name": "_computation",
            "location": 17,
            "return": [],
            "arguments": {
                "path": [
                    "str",
                    "list[dict[, ]]",
                    "list[]"
                ],
                "counter": []
            }
        },
        "_dispy_create_cluster": {
            "name": "_dispy_create_cluster",
            "location": 22,
            "return": [],
            "arguments": {
                "status_cb": [
                    "typing.Iterable[dispy.NodeAllocate]",
                    "str",
                    "None"
                ],
                "nodes": [
                    "typing.Iterable[dispy.NodeAllocate]",
                    "str",
                    "None"
                ]
            }
        },
        "dispy_count_words": {
            "name": "dispy_count_words",
            "location": 35,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "paths": [
                    "str"
                ],
                "counter": [
                    "str",
                    "None",
                    "bytes"
                ],
                "nodes": [
                    "typing.Iterable[dispy.NodeAllocate]",
                    "str",
                    "None",
                    "int",
                    "typing.BinaryIO"
                ]
            }
        },
        "dispy_count_words.status_cb": {
            "name": "status_cb",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "status": [],
                "_node": [],
                "_job": []
            }
        }
    },
    "words-exercise-master/wordcounter/word_counter.py": {
        "merge_counts": {
            "name": "merge_counts",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "totals": [
                    "dict[, ]",
                    "dict[str, str]"
                ],
                "new_counts": [
                    "dict[str, int]"
                ]
            }
        },
        "count_words": {
            "name": "count_words",
            "location": 59,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "streams_or_paths": [
                    "list[]",
                    "str"
                ],
                "counter": []
            }
        },
        "WordCounter.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "encoding": [],
                "ascii_only": []
            }
        },
        "WordCounter._words": {
            "name": "_words",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "stream": [
                    "typing.IO",
                    "int",
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "WordCounter.count_words": {
            "name": "count_words",
            "location": 38,
            "return": [
                "dict[str, ]"
            ],
            "arguments": {
                "self": [],
                "stream_or_path": [
                    "typing.IO"
                ]
            }
        }
    },
    "words-exercise-master/wordcounter/word_tokenizer.py": {
        "is_ascii_alnum": {
            "name": "is_ascii_alnum",
            "location": 10,
            "return": [],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "WordTokenizer.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "int",
                    "dict[str, typing.Any]",
                    "float",
                    "typing.Callable[, ]"
                ],
                "word_test": []
            }
        },
        "WordTokenizer._chars": {
            "name": "_chars",
            "location": 34,
            "return": [
                "None",
                "typing.Generator[typing.Union[str,tuple[typing.Union[str,int]],list[typing.Pattern],dict[, ],list[]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "WordTokenizer.__iter__": {
            "name": "__iter__",
            "location": 44,
            "return": [
                "typing.Generator[typing.Text]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "words-exercise-master/wordcounter/__init__.py": {}
}
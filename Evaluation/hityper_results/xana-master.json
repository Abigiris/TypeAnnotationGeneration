{
    "xana-master/Log.py": {},
    "xana-master/xana.py": {},
    "xana-master/app/protocols.py": {
        "ssh.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hostname": [
                    "str",
                    "int"
                ],
                "port": [
                    "str",
                    "bool"
                ],
                "username": [
                    "str",
                    "int"
                ],
                "password": [
                    "str",
                    "int"
                ]
            }
        },
        "ssh._add_ssh_parameters": {
            "name": "_add_ssh_parameters",
            "location": 24,
            "return": [
                "tuple[typing.Union[str,int,list[]]]"
            ],
            "arguments": {
                "hostname": [
                    "str",
                    "int",
                    "list[]"
                ],
                "port": [
                    "str",
                    "int",
                    "list[]"
                ],
                "username": [
                    "str",
                    "int",
                    "list[]"
                ],
                "password": [
                    "str",
                    "int",
                    "list[]"
                ]
            }
        },
        "ssh._connect": {
            "name": "_connect",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ssh._disconnect": {
            "name": "_disconnect",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ssh.instruct": {
            "name": "instruct",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "bytes"
                ]
            }
        },
        "ssh.sftp": {
            "name": "sftp",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "telnet.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str",
                    "int"
                ],
                "port": [
                    "str",
                    "int"
                ],
                "login_string": [
                    "str",
                    "int"
                ],
                "password_string": [
                    "str",
                    "int"
                ],
                "prompt": [
                    "str",
                    "int",
                    "float"
                ],
                "username": [
                    "str",
                    "int",
                    "float"
                ],
                "password": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "telnet._add_telnet_parameters": {
            "name": "_add_telnet_parameters",
            "location": 93,
            "return": [
                "tuple[typing.Union[str,int]]"
            ],
            "arguments": {
                "host": [
                    "str",
                    "int"
                ],
                "port": [
                    "str",
                    "int"
                ],
                "login_string": [
                    "str",
                    "int"
                ],
                "password_string": [
                    "str",
                    "int"
                ],
                "prompt": [
                    "str",
                    "int"
                ],
                "username": [
                    "str",
                    "int"
                ],
                "password": [
                    "str",
                    "int"
                ]
            }
        },
        "telnet._do_login": {
            "name": "_do_login",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._do_password": {
            "name": "_do_password",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._do_open_connection": {
            "name": "_do_open_connection",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._do_close_connection": {
            "name": "_do_close_connection",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._connect": {
            "name": "_connect",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet.instruct": {
            "name": "instruct",
            "location": 131,
            "return": [
                "list[]",
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str"
                ]
            }
        }
    },
    "xana-master/app/__init__.py": {
        "data_type_validator": {
            "name": "data_type_validator",
            "location": 5,
            "return": [],
            "arguments": {
                "func": [
                    "bool",
                    "set[]",
                    "list[]",
                    "None",
                    "list[dict[str, typing.Any]]"
                ]
            }
        },
        "data_type_validator.wrapper": {
            "name": "wrapper",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "xana-master/app/config/devices.py": {
        "Structure.get_directory_structure": {
            "name": "get_directory_structure",
            "location": 16,
            "return": [
                "dict[, ]"
            ],
            "arguments": {
                "confdir": [
                    "str",
                    "float",
                    "typing.Callable[str, bool]",
                    "None"
                ]
            }
        },
        "Structure.get_file_list": {
            "name": "get_file_list",
            "location": 32,
            "return": [
                "list[typing.Union[str,list[str]]]"
            ],
            "arguments": {
                "confdir": [
                    "str",
                    "int"
                ]
            }
        },
        "Structure.get_ini_files": {
            "name": "get_ini_files",
            "location": 44,
            "return": [
                "list[]"
            ],
            "arguments": {
                "confdir": [
                    "str",
                    "typing.Sequence[]",
                    "typing.IO",
                    "int"
                ]
            }
        },
        "Structure.get_xml_files": {
            "name": "get_xml_files",
            "location": 52,
            "return": [
                "list[]"
            ],
            "arguments": {
                "confdir": [
                    "str",
                    "list[str]"
                ]
            }
        },
        "Structure.get_yaml_files": {
            "name": "get_yaml_files",
            "location": 60,
            "return": [
                "list[]"
            ],
            "arguments": {
                "confdir": [
                    "str",
                    "typing.Sequence[]",
                    "typing.IO",
                    "int"
                ]
            }
        },
        "Structure.get_json_files": {
            "name": "get_json_files",
            "location": 68,
            "return": [
                "list[]"
            ],
            "arguments": {
                "confdir": [
                    "str",
                    "typing.Sequence[]",
                    "typing.IO",
                    "int"
                ]
            }
        },
        "Parser.get_all_config": {
            "name": "get_all_config",
            "location": 79,
            "return": [
                "list[]"
            ],
            "arguments": {
                "confdir": [
                    "str"
                ]
            }
        },
        "Parser.read_json": {
            "name": "read_json",
            "location": 95,
            "return": [],
            "arguments": {
                "cfile": [
                    "str"
                ]
            }
        },
        "Parser.read_yaml": {
            "name": "read_yaml",
            "location": 107,
            "return": [
                "list[]"
            ],
            "arguments": {
                "cfile": [
                    "str"
                ]
            }
        },
        "Parser.read_ini": {
            "name": "read_ini",
            "location": 120,
            "return": [
                "list[dict[typing.Text, dict[str, str]]]"
            ],
            "arguments": {
                "cfile": [
                    "str",
                    "list[str]",
                    "bytes"
                ]
            }
        },
        "Parser.read_xml": {
            "name": "read_xml",
            "location": 138,
            "return": [
                "list[dict[, dict[typing.Text, ]]]"
            ],
            "arguments": {
                "cfile": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "xana-master/app/xaninos/mikrotik/handler.py": {
        "get_config": {
            "name": "get_config",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "hostname": [
                    "str",
                    "int"
                ],
                "port": [
                    "str",
                    "int"
                ],
                "username": [
                    "str",
                    "int"
                ],
                "password": [
                    "str",
                    "int"
                ],
                "localpath": [
                    "str"
                ]
            }
        },
        "_check_transfer": {
            "name": "_check_transfer",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "got": [
                    "str",
                    "int",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "should": [
                    "str",
                    "int",
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "_tag": {
            "name": "_tag",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "set_config": {
            "name": "set_config",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "hostname": [
                    "str"
                ],
                "port": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ],
                "localpath": [
                    "str",
                    "bytes",
                    "None",
                    "dict[, ]"
                ],
                "remotepath": [
                    "str",
                    "bytes",
                    "None",
                    "dict[, ]"
                ]
            }
        },
        "save_config": {
            "name": "save_config",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_all_config_test.py": {
        "get_all_config_test": {
            "name": "get_all_config_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_file_list_test.py": {
        "extract_file_list_test": {
            "name": "extract_file_list_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_ini_files_test.py": {
        "extract_ini_files_test": {
            "name": "extract_ini_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_json_files_test.py": {
        "extract_json_files_test": {
            "name": "extract_json_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_structure_test.py": {
        "structure_walk_test": {
            "name": "structure_walk_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_xml_files_test.py": {
        "extract_xml_files_test": {
            "name": "extract_xml_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_yaml_files_test.py": {
        "extract_yaml_files_test": {
            "name": "extract_yaml_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/mikrotik_unique_filename_tag_test.py": {
        "get_test": {
            "name": "get_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_ini_test.py": {
        "read_ini_test": {
            "name": "read_ini_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_json_test.py": {
        "read_json_test": {
            "name": "read_json_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_xml_test.py": {
        "read_xml_test": {
            "name": "read_xml_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_yaml_test.py": {
        "read_yaml_test": {
            "name": "read_yaml_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/ssh_parameters_test.py": {
        "ssh_parameters_test": {
            "name": "ssh_parameters_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/telnet_parameters_test.py": {
        "telnet_parameters_test": {
            "name": "telnet_parameters_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/__init__.py": {}
}
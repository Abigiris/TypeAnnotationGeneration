{
    "xlsx_from_json-master/setup.py": {},
    "xlsx_from_json-master/tests/test_api.py": {
        "json_data_with_start_row_and_multiple_cells": {
            "name": "json_data_with_start_row_and_multiple_cells",
            "location": 11,
            "return": [
                "dict[typing.Text, typing.Union[list[dict[typing.Text, list[dict[typing.Text, typing.Union[typing.Text,int]]]]],int]]"
            ],
            "arguments": {}
        },
        "test_sheet_has_values": {
            "name": "test_sheet_has_values",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cell_column_equals_to_start_column": {
            "name": "test_cell_column_equals_to_start_column",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cell_has_font": {
            "name": "test_cell_has_font",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cell_has_font_bold_from_default_style": {
            "name": "test_cell_has_font_bold_from_default_style",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cell_has_border": {
            "name": "test_cell_has_border",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cell_has_alignment": {
            "name": "test_cell_has_alignment",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cell_has_fill": {
            "name": "test_cell_has_fill",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sized_cell_is_rendered_as_merged_cells_and_style_set": {
            "name": "test_sized_cell_is_rendered_as_merged_cells_and_style_set",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sheet_fill_starts_with_start_row": {
            "name": "test_sheet_fill_starts_with_start_row",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "json_data_with_start_row_and_multiple_cells": [
                    "str"
                ]
            }
        },
        "test_sheet_has_two_rows": {
            "name": "test_sheet_has_two_rows",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "json_data_with_start_row_and_multiple_cells": [
                    "str"
                ]
            }
        },
        "test_sheet_has_two_columns": {
            "name": "test_sheet_has_two_columns",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "json_data_with_start_row_and_multiple_cells": [
                    "str"
                ]
            }
        },
        "test_empty_row_render": {
            "name": "test_empty_row_render",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_row_and_column_shift": {
            "name": "test_row_and_column_shift",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rows_and_columns_shift_for_cell": {
            "name": "test_rows_and_columns_shift_for_cell",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rows_and_columns_shift_for_cell_with_height_ignore": {
            "name": "test_rows_and_columns_shift_for_cell_with_height_ignore",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_row_and_column_sizing": {
            "name": "test_row_and_column_sizing",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_float_formatting": {
            "name": "test_float_formatting",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xlsx_from_json-master/tests/__init__.py": {},
    "xlsx_from_json-master/xlsx_from_json/api.py": {
        "xlsx_from_json": {
            "name": "xlsx_from_json",
            "location": 14,
            "return": [
                "Workbook"
            ],
            "arguments": {
                "json_data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "RowFiller.fill": {
            "name": "fill",
            "location": 43,
            "return": [
                "typing.Generator[typing.Union[list[],list[int]]]"
            ],
            "arguments": {
                "self": [],
                "rows_data": [
                    "list[dict[, ]]",
                    "dict[, ]",
                    "list[str]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "RowFiller._fill_row": {
            "name": "_fill_row",
            "location": 59,
            "return": [
                "typing.Generator[typing.Union[str,tuple[typing.Union[typing.Literal,typing.Literal]],list[tuple[typing.Union[int,int]]],dict[str, str]]]"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "str",
                    "int"
                ],
                "column": [
                    "int"
                ],
                "cells_data": [
                    "list[dict[, ]]"
                ]
            }
        },
        "RowFiller._create_cell": {
            "name": "_create_cell",
            "location": 68,
            "return": [
                "CellWithSize"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "bool",
                    "list[str]"
                ],
                "column": [
                    "int",
                    "float"
                ],
                "cell_data": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "Adjuster.adjust_columns": {
            "name": "adjust_columns",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "columns": [
                    "str",
                    "list[typing.Optional[C]]",
                    "list[str]",
                    "list[dict[, ]]"
                ]
            }
        },
        "Adjuster.adjust_rows": {
            "name": "adjust_rows",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rows": [
                    "typing.Iterable[dict[, ]]",
                    "typing.Iterable[int]",
                    "int"
                ],
                "row_positions": [
                    "typing.Iterable[dict[, ]]",
                    "typing.Iterable[int]",
                    "int"
                ]
            }
        }
    },
    "xlsx_from_json-master/xlsx_from_json/models.py": {
        "Style.from_json": {
            "name": "from_json",
            "location": 16,
            "return": [],
            "arguments": {
                "cls": [
                    "int",
                    "float",
                    "str"
                ],
                "style_json": [
                    "dict[, ]",
                    "dict[str, typing.Any]"
                ],
                "default_style": [
                    "None",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "xlsx_from_json-master/xlsx_from_json/utils.py": {
        "str_cell_range": {
            "name": "str_cell_range",
            "location": 10,
            "return": [
                "typing.Text"
            ],
            "arguments": {
                "start_column": [
                    "int",
                    "None"
                ],
                "start_row": [
                    "int"
                ],
                "end_column": [
                    "set[int]"
                ],
                "end_row": [
                    "int"
                ]
            }
        },
        "style_single_cell": {
            "name": "style_single_cell",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "cell": [
                    "list[str]",
                    "dict[, ]",
                    "int"
                ],
                "style": [
                    "int",
                    "dict[str, str]"
                ]
            }
        },
        "style_and_merge_cell_range": {
            "name": "style_and_merge_cell_range",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "ws": [],
                "cell_range": [],
                "style": [
                    "str",
                    "int",
                    "None"
                ]
            }
        }
    },
    "xlsx_from_json-master/xlsx_from_json/__init__.py": {}
}
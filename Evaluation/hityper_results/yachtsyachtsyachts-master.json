{
    "yachtsyachtsyachts-master/scripts/scrape_all.py": {},
    "yachtsyachtsyachts-master/tests/test_scrapes.py": {
        "wrapper": {
            "name": "wrapper",
            "location": 26,
            "return": [],
            "arguments": {
                "name": [],
                "Scraper": []
            }
        },
        "wrapper.test": {
            "name": "test",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/app.py": {
        "before_request": {
            "name": "before_request",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "teardown_request": {
            "name": "teardown_request",
            "location": 62,
            "return": [
                "list[str]",
                "int",
                "list[]"
            ],
            "arguments": {
                "r": [
                    "list[str]",
                    "int",
                    "list[]"
                ]
            }
        },
        "domain_name": {
            "name": "domain_name",
            "location": 94,
            "return": [],
            "arguments": {
                "s": [
                    "str",
                    "int"
                ]
            }
        },
        "get_exchange_rate": {
            "name": "get_exchange_rate",
            "location": 100,
            "return": [
                "int",
                "str",
                "list[]"
            ],
            "arguments": {
                "currency1": [
                    "typing.Iterable[int]",
                    "str",
                    "float"
                ],
                "currency2": [
                    "typing.Iterable[int]",
                    "str",
                    "float"
                ]
            }
        },
        "search_task": {
            "name": "search_task",
            "location": 110,
            "return": [
                "list[]"
            ],
            "arguments": {
                "scraper_name": [
                    "str"
                ],
                "manufacturer": [
                    "str",
                    "set[str]",
                    "int",
                    "bytes"
                ],
                "length": [
                    "str",
                    "int",
                    "bytes"
                ]
            }
        },
        "search_all": {
            "name": "search_all",
            "location": 152,
            "return": [
                "list[dict[typing.Text, typing.Union[typing.Text,int,list[],None,tuple[typing.Union[str,typing.Callable[, ]]],dict[, ]]]]"
            ],
            "arguments": {
                "manufacturer": [
                    "str",
                    "typing.Callable[, ]"
                ],
                "length": [
                    "str",
                    "typing.Callable[, ]"
                ]
            }
        },
        "get_some_site_results": {
            "name": "get_some_site_results",
            "location": 220,
            "return": [
                "tuple[list[str]]"
            ],
            "arguments": {
                "task_ids": [
                    "str"
                ],
                "min_wait": [
                    "int"
                ],
                "max_wait": [
                    "int"
                ]
            }
        },
        "home": {
            "name": "home",
            "location": 247,
            "return": [],
            "arguments": {}
        },
        "error": {
            "name": "error",
            "location": 253,
            "return": [
                "float"
            ],
            "arguments": {}
        },
        "search": {
            "name": "search",
            "location": 258,
            "return": [],
            "arguments": {}
        },
        "search_results": {
            "name": "search_results",
            "location": 269,
            "return": [],
            "arguments": {}
        },
        "search_raw": {
            "name": "search_raw",
            "location": 276,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "clear_cache": {
            "name": "clear_cache",
            "location": 284,
            "return": [
                "typing.Text"
            ],
            "arguments": {}
        },
        "Celery.on_configure": {
            "name": "on_configure",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchTaskWrapper.__init__": {
            "name": "__init__",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task": [
                    "str",
                    "dict[str, typing.Any]",
                    "tuple[typing.Union[int,int]]",
                    "typing.Mapping"
                ]
            }
        },
        "SearchTaskWrapper.__iter__": {
            "name": "__iter__",
            "location": 201,
            "return": [
                "typing.Generator[tuple[typing.Text]]",
                "typing.Generator[tuple[typing.Union[typing.Text,int]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchTaskWrapper.status": {
            "name": "status",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTaskWrapper.ready": {
            "name": "ready",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTaskWrapper.update_results": {
            "name": "update_results",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/data_access_layer.py": {
        "DataAccessLayer.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connection_str": [
                    "None",
                    "str",
                    "bool",
                    "list[str]"
                ]
            }
        },
        "DataAccessLayer.connect": {
            "name": "connect",
            "location": 14,
            "return": [
                "dict[str, typing.Union[typing.Any,typing.Any]]",
                "dict[, ]",
                "dict[str, int]",
                "dict[str, str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataAccessLayer.erase_database": {
            "name": "erase_database",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/model.py": {
        "DictMixin.__iter__": {
            "name": "__iter__",
            "location": 14,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DictMixin._asdict": {
            "name": "_asdict",
            "location": 18,
            "return": [
                "OrderedDict"
            ],
            "arguments": {
                "self": []
            }
        },
        "DictMixin.to_dict": {
            "name": "to_dict",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/apollo_duck.py": {
        "ApolloDuckScraper.search": {
            "name": "search",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "manufacturer": [],
                "length": [
                    "None",
                    "int",
                    "str"
                ]
            }
        },
        "ApolloDuckScraper.google_search": {
            "name": "google_search",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "manufacturer": [
                    "int",
                    "str",
                    "None",
                    "bytes",
                    "list[int]",
                    "list[str]"
                ],
                "length": [
                    "int",
                    "str",
                    "None",
                    "bytes",
                    "list[int]",
                    "list[str]"
                ]
            }
        },
        "ApolloDuckScraper._parse_result": {
            "name": "_parse_result",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/base_scraper.py": {
        "BaseScraper.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseScraper.search": {
            "name": "search",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "manufacturer": [],
                "length": []
            }
        },
        "BaseScraper._result_post_processing": {
            "name": "_result_post_processing",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "result": []
            }
        },
        "BaseScraper._make_image_hash": {
            "name": "_make_image_hash",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "image_url": []
            }
        },
        "BaseScraper.parse_search_results": {
            "name": "parse_search_results",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "html": []
            }
        },
        "BaseScraper.search_and_parse": {
            "name": "search_and_parse",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseScraper.clean_whitespace": {
            "name": "clean_whitespace",
            "location": 78,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "BaseScraper.base_url": {
            "name": "base_url",
            "location": 82,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseScraper.domain": {
            "name": "domain",
            "location": 87,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseScraper.process_url": {
            "name": "process_url",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "BaseScraper.parse_price": {
            "name": "parse_price",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "price_str": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/boats.py": {
        "BoatsScraper._parse_result": {
            "name": "_parse_result",
            "location": 16,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "bytes",
                    "str"
                ]
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/boat_shed.py": {
        "BoatShedScraper.search": {
            "name": "search",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "manufacturer": [
                    "None",
                    "str",
                    "dict[, ]",
                    "typing.Callable[, ]",
                    "int"
                ],
                "length": [
                    "None",
                    "int",
                    "str",
                    "tuple[typing.Union[int,int]]",
                    "float"
                ]
            }
        },
        "BoatShedScraper._parse_result": {
            "name": "_parse_result",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "r": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/co32.py": {
        "CO32Scraper.search_and_parse": {
            "name": "search_and_parse",
            "location": 10,
            "return": [
                "list[]"
            ],
            "arguments": {
                "self": [],
                "manufacturer": [
                    "str"
                ],
                "length": [
                    "str"
                ]
            }
        },
        "CO32Scraper._parse_result": {
            "name": "_parse_result",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "r": [
                    "str"
                ]
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/sailboat_listings.py": {
        "SailBoatListingsScraper._parse_result": {
            "name": "_parse_result",
            "location": 16,
            "return": [
                "None",
                "dict[typing.Union[typing.Text,list[str]], typing.Union[None,str,dict[typing.Union[typing.Text,list[str]], typing.Union[None,str]]]]"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/scan_boat.py": {
        "ScanBoat._parse_result": {
            "name": "_parse_result",
            "location": 15,
            "return": [
                "dict[typing.Text, typing.Union[int,str]]"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "str",
                    "typing.Iterable[str]",
                    "float"
                ]
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/the_yacht_market.py": {
        "TheYachtMarketScraper._parse_result": {
            "name": "_parse_result",
            "location": 14,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "str"
                ]
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/yacht_world.py": {
        "YachtWorldScraper._parse_result": {
            "name": "_parse_result",
            "location": 17,
            "return": [
                "dict[typing.Text, int]"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "str"
                ]
            }
        }
    },
    "yachtsyachtsyachts-master/yyy/scrapers/__init__.py": {
        "_find_scraper": {
            "name": "_find_scraper",
            "location": 16,
            "return": [
                "tuple[]"
            ],
            "arguments": {
                "module": [
                    "str",
                    "dict[str, typing.Any]"
                ]
            }
        }
    }
}
{
    "yacron-master/setup.py": {},
    "yacron-master/tests/test_config.py": {
        "test_mergedicts": {
            "name": "test_mergedicts",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mergedicts_nested": {
            "name": "test_mergedicts_nested",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mergedicts_right_none": {
            "name": "test_mergedicts_right_none",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mergedicts_lists": {
            "name": "test_mergedicts_lists",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_simple_config1": {
            "name": "test_simple_config1",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_config_default_report": {
            "name": "test_config_default_report",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_config_default_report_override": {
            "name": "test_config_default_report_override",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_config1": {
            "name": "test_empty_config1",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_environ_file": {
            "name": "test_environ_file",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_environ_file": {
            "name": "test_invalid_environ_file",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_config_include": {
            "name": "test_config_include",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "yacron-master/tests/test_cron.py": {
        "fixed_current_time": {
            "name": "fixed_current_time",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "str",
                    "list[]",
                    "dict[, ]",
                    "typing.OrderedDict",
                    "typing.Mapping"
                ]
            }
        },
        "tracing_running_job": {
            "name": "tracing_running_job",
            "location": 32,
            "return": [
                "typing.Generator[]"
            ],
            "arguments": {
                "monkeypatch": [
                    "str",
                    "dict[str, typing.Callable[, ]]",
                    "float"
                ]
            }
        },
        "test_simple_config_file": {
            "name": "test_simple_config_file",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "tracing_running_job": []
            }
        },
        "test_naturaltime": {
            "name": "test_naturaltime",
            "location": 475,
            "return": [
                "None"
            ],
            "arguments": {
                "value_in": [
                    "bool",
                    "dict[str, typing.Any]",
                    "str",
                    "dict[, ]",
                    "None"
                ],
                "out": [
                    "int",
                    "str",
                    "list[int]",
                    "typing.Callable[T, bool]",
                    "list[str]"
                ]
            }
        },
        "test_job_should_run": {
            "name": "test_job_should_run",
            "location": 570,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "bool",
                    "dict[, ]",
                    "list[dict[str, typing.Any]]",
                    "dict[str, typing.Any]",
                    "None"
                ],
                "schedule": [
                    "typing.Sequence[int]",
                    "str"
                ],
                "timezone": [
                    "typing.Sequence[int]",
                    "str"
                ],
                "utc": [
                    "typing.Sequence[int]",
                    "str"
                ],
                "now": [
                    "bool"
                ],
                "reboot": [
                    "bool",
                    "str"
                ],
                "result": [
                    "bool",
                    "str"
                ]
            }
        },
        "fixed_current_time.get_now": {
            "name": "get_now",
            "location": 19,
            "return": [],
            "arguments": {
                "timezone": []
            }
        },
        "TracingRunningJob.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict[, ]"
                ],
                "retry_state": [
                    "dict[, ]"
                ]
            }
        },
        "test_concurrency_policy.get_now": {
            "name": "get_now",
            "location": 299,
            "return": [],
            "arguments": {
                "timezone": []
            }
        },
        "test_concurrency_and_backoff.get_now": {
            "name": "get_now",
            "location": 402,
            "return": [],
            "arguments": {
                "timezone": []
            }
        },
        "test_concurrency_and_backoff.get_reltime": {
            "name": "get_reltime",
            "location": 413,
            "return": [],
            "arguments": {
                "ts": []
            }
        },
        "test_job_should_run.get_now": {
            "name": "get_now",
            "location": 573,
            "return": [],
            "arguments": {
                "timezone": []
            }
        }
    },
    "yacron-master/tests/test_job.py": {
        "test_report_mail.init": {
            "name": "init",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_report_sentry.make_transport": {
            "name": "make_transport",
            "location": 383,
            "return": [],
            "arguments": {}
        },
        "test_report_sentry.FakeSentryTransport.__init__": {
            "name": "__init__",
            "location": 369,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_report_sentry.FakeSentryTransport.capture_event": {
            "name": "capture_event",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "event_opt": []
            }
        },
        "test_report_sentry.FakeSentryTransport.kill": {
            "name": "kill",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_report_sentry.FakeSentryTransport.flush": {
            "name": "flush",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_statsd.run.UDPServerProtocol.connection_made": {
            "name": "connection_made",
            "location": 657,
            "return": [],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "test_statsd.run.UDPServerProtocol.datagram_received": {
            "name": "datagram_received",
            "location": 660,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "addr": []
            }
        },
        "test_statsd.run.UDPServerProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 665,
            "return": [],
            "arguments": {}
        }
    },
    "yacron-master/tests/test_main.py": {
        "exit": {
            "name": "exit",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "num": [
                    "str",
                    "float",
                    "bytes",
                    "None"
                ]
            }
        },
        "test_good_config": {
            "name": "test_good_config",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_broken_config": {
            "name": "test_broken_config",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "test_missing_config": {
            "name": "test_missing_config",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": [
                    "typing.Callable[, ]"
                ]
            }
        },
        "FakeCron.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_arg": [
                    "dict[str, typing.Any]",
                    "None",
                    "list[dict[str, typing.Any]]",
                    "typing.Callable[, ]"
                ]
            }
        },
        "FakeCron.signal_shutdown": {
            "name": "signal_shutdown",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "yacron-master/tests/__init__.py": {},
    "yacron-master/yacron/config.py": {
        "mergedicts": {
            "name": "mergedicts",
            "location": 245,
            "return": [
                "typing.Generator[tuple[]]"
            ],
            "arguments": {
                "dict1": [
                    "dict[, ]"
                ],
                "dict2": []
            }
        },
        "parse_environment_file": {
            "name": "parse_environment_file",
            "location": 366,
            "return": [
                "dict[str, str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "parse_config_string": {
            "name": "parse_config_string",
            "location": 400,
            "return": [
                "tuple[typing.Union[list[typing.Union[str,JobConfig]],WebConfig,None,str,int,JobDefaults]]"
            ],
            "arguments": {
                "data": [
                    "str",
                    "bool"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "parse_config_file": {
            "name": "parse_config_file",
            "location": 430,
            "return": [],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "parse_config": {
            "name": "parse_config",
            "location": 438,
            "return": [
                "tuple[typing.Union[list[],None,dict[str, str],dict[, ],dict[str, None],dict[bytes, bytes],dict[str, typing.Union[str,None]],str,int]]"
            ],
            "arguments": {
                "config_arg": [
                    "str",
                    "int",
                    "dict[str, typing.Any]"
                ]
            }
        },
        "JobConfig.__init__": {
            "name": "__init__",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        }
    },
    "yacron-master/yacron/cron.py": {
        "naturaltime": {
            "name": "naturaltime",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "seconds": [],
                "future": [
                    "bool"
                ]
            }
        },
        "get_now": {
            "name": "get_now",
            "location": 42,
            "return": [],
            "arguments": {
                "timezone": [
                    "None",
                    "int",
                    "float",
                    "str"
                ]
            }
        },
        "next_sleep_interval": {
            "name": "next_sleep_interval",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "web_site_from_url": {
            "name": "web_site_from_url",
            "location": 52,
            "return": [],
            "arguments": {
                "runner": [
                    "str",
                    "dict[, ]",
                    "None"
                ],
                "url": [
                    "str"
                ]
            }
        },
        "Cron.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_arg": [
                    "None",
                    "bool"
                ]
            }
        },
        "Cron.signal_shutdown": {
            "name": "signal_shutdown",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cron.update_config": {
            "name": "update_config",
            "location": 138,
            "return": [
                "None",
                "dict[typing.Any, dict[typing.Any, typing.Any]]",
                "dict[, ]",
                "dict[str, typing.Union[int,str,typing.Any]]",
                "dict[typing.Any, str]",
                "dict[typing.Any, dict[str, dict[, ]]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cron.job_should_run": {
            "name": "job_should_run",
            "location": 252,
            "return": [
                "bool"
            ],
            "arguments": {
                "startup": [
                    "bool",
                    "bytes",
                    "dict[, ]",
                    "str",
                    "dict[str, typing.Any]"
                ],
                "job": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "yacron-master/yacron/job.py": {
        "fixup_pyinstaller_env": {
            "name": "fixup_pyinstaller_env",
            "location": 29,
            "return": [],
            "arguments": {
                "env": []
            }
        },
        "StreamReader.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "job_name": [],
                "stream_name": [],
                "stream": [],
                "stream_prefix": [],
                "save_limit": []
            }
        },
        "JobRetryState.__init__": {
            "name": "__init__",
            "location": 305,
            "return": [],
            "arguments": {
                "self": [],
                "initial_delay": [],
                "multiplier": [],
                "max_delay": []
            }
        },
        "JobRetryState.next_delay": {
            "name": "next_delay",
            "location": 315,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunningJob.__init__": {
            "name": "__init__",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "retry_state": []
            }
        },
        "RunningJob._demote": {
            "name": "_demote",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunningJob.failed": {
            "name": "failed",
            "location": 493,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunningJob.fail_reason": {
            "name": "fail_reason",
            "location": 497,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunningJob.template_vars": {
            "name": "template_vars",
            "location": 568,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "yacron-master/yacron/statsd.py": {
        "StatsdClientProtocol.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "int",
                    "float"
                ],
                "loop": [
                    "int",
                    "float"
                ]
            }
        },
        "StatsdClientProtocol.connection_made": {
            "name": "connection_made",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": [
                    "bytes",
                    "str",
                    "typing.Callable[bytes, bytes]"
                ]
            }
        },
        "StatsdClientProtocol.datagram_received": {
            "name": "datagram_received",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ],
                "addr": [
                    "int",
                    "bytes",
                    "dict[, ]"
                ]
            }
        },
        "StatsdClientProtocol.error_received": {
            "name": "error_received",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "str",
                    "Exception"
                ]
            }
        },
        "StatsdClientProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": [
                    "int",
                    "str",
                    "typing.Iterable['Context']"
                ]
            }
        },
        "StatsdJobMetricWriter.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "int",
                    "float"
                ],
                "port": [
                    "int",
                    "float"
                ],
                "prefix": [
                    "int",
                    "float"
                ],
                "job": [
                    "int",
                    "float"
                ]
            }
        }
    },
    "yacron-master/yacron/__init__.py": {},
    "yacron-master/yacron/__main__.py": {
        "main_loop": {
            "name": "main_loop",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "loop": [
                    "str",
                    "bool",
                    "float",
                    "list[str]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
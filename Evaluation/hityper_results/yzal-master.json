{
    "yzal-master/setup.py": {
        "read": {
            "name": "read",
            "location": 5,
            "return": [],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        }
    },
    "yzal-master/docs/conf.py": {},
    "yzal-master/tests/conftest.py": {
        "simple_function": {
            "name": "simple_function",
            "location": 6,
            "return": [],
            "arguments": {
                "mocker": []
            }
        },
        "thunk": {
            "name": "thunk",
            "location": 13,
            "return": [],
            "arguments": {
                "mocker": [
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        },
        "not_thunk": {
            "name": "not_thunk",
            "location": 20,
            "return": [],
            "arguments": {
                "mocker": [
                    "typing.Callable[, ]",
                    "str"
                ]
            }
        }
    },
    "yzal-master/tests/test_integration.py": {
        "test_lazy": {
            "name": "test_lazy",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_lazy.add": {
            "name": "add",
            "location": 8,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "yzal-master/tests/test_lazy.py": {
        "test_lazy": {
            "name": "test_lazy",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_lazy.add": {
            "name": "add",
            "location": 9,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "yzal-master/tests/test_strict.py": {
        "test_strict": {
            "name": "test_strict",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "thunk": [
                    "int"
                ]
            }
        },
        "test_strict_no_error": {
            "name": "test_strict_no_error",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "not_thunk": []
            }
        },
        "test_strict_error": {
            "name": "test_strict_error",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "not_thunk": []
            }
        }
    },
    "yzal-master/tests/test_thunk.py": {
        "test_thunk": {
            "name": "test_thunk",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "simple_function": [
                    "bool",
                    "typing.Callable[, ]",
                    "typing.Sequence[str]"
                ]
            }
        },
        "test_internal_strict": {
            "name": "test_internal_strict",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "simple_function": [
                    "typing.Callable[, ]",
                    "bool"
                ]
            }
        },
        "test_strict": {
            "name": "test_strict",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "simple_function": [
                    "bool",
                    "typing.Callable[, ]",
                    "typing.Sequence[str]"
                ]
            }
        }
    },
    "yzal-master/yzal/__init__.py": {
        "lazy": {
            "name": "lazy",
            "location": 38,
            "return": [],
            "arguments": {
                "wrapped": [
                    "int",
                    "str",
                    "typing.Iterable[C]"
                ]
            }
        },
        "strict": {
            "name": "strict",
            "location": 82,
            "return": [
                "list[str]",
                "typing.Match"
            ],
            "arguments": {
                "thunk": [
                    "list[str]",
                    "typing.Match"
                ],
                "require": [
                    "bool"
                ]
            }
        },
        "Thunk.__strict__": {
            "name": "__strict__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "lazy.wrapper": {
            "name": "wrapper",
            "location": 75,
            "return": [
                "Thunk"
            ],
            "arguments": {}
        },
        "lazy.wrapper.thunk": {
            "name": "thunk",
            "location": 76,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "zm-py-master/setup.py": {},
    "zm-py-master/tests/test_ptz.py": {
        "test_control_type_from_move": {
            "name": "test_control_type_from_move",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "source": [
                    "str"
                ],
                "want": [
                    "str"
                ]
            }
        },
        "test_control_type_from_move_wrong_move": {
            "name": "test_control_type_from_move_wrong_move",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "source": [
                    "str",
                    "None",
                    "int"
                ],
                "want": [
                    "dict[, ]"
                ]
            }
        }
    },
    "zm-py-master/tests/test_zm.py": {
        "TestZoneMinder.test_build_server_url_no_trailing_slash": {
            "name": "test_build_server_url_no_trailing_slash",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestZoneMinder.test_build_server_url_with_trailing_slash_path": {
            "name": "test_build_server_url_with_trailing_slash_path",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestZoneMinder.test_build_server_url_with_trailing_slash_host": {
            "name": "test_build_server_url_with_trailing_slash_host",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestZoneMinder.test_build_server_url_with_both_trailing_slash": {
            "name": "test_build_server_url_with_both_trailing_slash",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestZoneMinder.test_get_zms_url_no_trailing_slash": {
            "name": "test_get_zms_url_no_trailing_slash",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestZoneMinder.test_get_zms_url_with_leading_slash_zms_path": {
            "name": "test_get_zms_url_with_leading_slash_zms_path",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestZoneMinder.test_get_url_with_auth_username_special": {
            "name": "test_get_url_with_auth_username_special",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestZoneMinder.test_get_url_with_auth_password_special": {
            "name": "test_get_url_with_auth_password_special",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "zm-py-master/tests/__init__.py": {},
    "zm-py-master/zoneminder/exceptions.py": {
        "ZoneminderError.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "None",
                    "bool",
                    "float"
                ]
            }
        },
        "ZoneminderError.__str__": {
            "name": "__str__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "zm-py-master/zoneminder/monitor.py": {
        "ControlType.from_move": {
            "name": "from_move",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": [
                    "int",
                    "dict[str, typing.Any]"
                ],
                "move": [
                    "dict[, ]",
                    "dict[str, str]",
                    "dict[str, dict[str, typing.Any]]",
                    "int",
                    "str"
                ]
            }
        },
        "TimePeriod.period": {
            "name": "period",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimePeriod.title": {
            "name": "title",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimePeriod.get_time_period": {
            "name": "get_time_period",
            "location": 69,
            "return": [],
            "arguments": {
                "value": [
                    "int",
                    "str",
                    "typing.Hashable",
                    "float"
                ]
            }
        },
        "Monitor.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [
                    "bool",
                    "dict[, ]",
                    "str",
                    "None",
                    "dict[str, str]"
                ],
                "raw_result": [
                    "list[str]",
                    "list[int]",
                    "list[]",
                    "str",
                    "list[list[str]]"
                ]
            }
        },
        "Monitor.__repr__": {
            "name": "__repr__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Monitor.__str__": {
            "name": "__str__",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Monitor.id": {
            "name": "id",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Monitor.name": {
            "name": "name",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Monitor.update_monitor": {
            "name": "update_monitor",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Monitor.function": {
            "name": "function",
            "location": 134,
            "return": [
                "MonitorState"
            ],
            "arguments": {
                "self": [],
                "new_function": []
            }
        },
        "Monitor.controllable": {
            "name": "controllable",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Monitor.mjpeg_image_url": {
            "name": "mjpeg_image_url",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Monitor.still_image_url": {
            "name": "still_image_url",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Monitor.is_recording": {
            "name": "is_recording",
            "location": 154,
            "return": [
                "None",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Monitor.is_available": {
            "name": "is_available",
            "location": 172,
            "return": [
                "bool",
                "dict[str, str]",
                "typing.Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Monitor.get_events": {
            "name": "get_events",
            "location": 188,
            "return": [
                "int",
                "None"
            ],
            "arguments": {
                "self": [],
                "time_period": [
                    "str",
                    "typing.Match",
                    "list[]"
                ],
                "include_archived": [
                    "bool"
                ]
            }
        },
        "Monitor._build_image_url": {
            "name": "_build_image_url",
            "location": 216,
            "return": [],
            "arguments": {
                "self": [],
                "monitor": [
                    "str",
                    "bytes"
                ],
                "mode": [
                    "int",
                    "str",
                    "bytes"
                ]
            }
        },
        "Monitor.ptz_control_command": {
            "name": "ptz_control_command",
            "location": 229,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "direction": [
                    "str",
                    "typing.Sequence[str]",
                    "typing.Sequence[list[typing.Any]]",
                    "None"
                ],
                "token": [
                    "str",
                    "typing.Sequence[str]",
                    "typing.Sequence[list[typing.Any]]",
                    "None"
                ],
                "base_url": [
                    "str"
                ]
            }
        }
    },
    "zm-py-master/zoneminder/run_state.py": {
        "RunState.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [
                    "bool",
                    "str",
                    "None"
                ],
                "raw_state": [
                    "str"
                ]
            }
        },
        "RunState.id": {
            "name": "id",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunState.name": {
            "name": "name",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RunState.active": {
            "name": "active",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "RunState.activate": {
            "name": "activate",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "zm-py-master/zoneminder/zm.py": {
        "ZoneMinder.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "server_host": [],
                "username": [],
                "password": [],
                "server_path": [],
                "zms_path": [],
                "verify_ssl": []
            }
        },
        "ZoneMinder.login": {
            "name": "login",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder._legacy_auth": {
            "name": "_legacy_auth",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder.get_state": {
            "name": "get_state",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "api_url": []
            }
        },
        "ZoneMinder.change_state": {
            "name": "change_state",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "api_url": [],
                "post_data": []
            }
        },
        "ZoneMinder._zm_request": {
            "name": "_zm_request",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "api_url": [],
                "data": [],
                "timeout": []
            }
        },
        "ZoneMinder.get_monitors": {
            "name": "get_monitors",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder.get_run_states": {
            "name": "get_run_states",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder.get_active_state": {
            "name": "get_active_state",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder.set_active_state": {
            "name": "set_active_state",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "state_name": []
            }
        },
        "ZoneMinder.get_zms_url": {
            "name": "get_zms_url",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder.get_url_with_auth": {
            "name": "get_url_with_auth",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "ZoneMinder.is_available": {
            "name": "is_available",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder.verify_ssl": {
            "name": "verify_ssl",
            "location": 219,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ZoneMinder._build_zms_url": {
            "name": "_build_zms_url",
            "location": 224,
            "return": [],
            "arguments": {
                "server_host": [],
                "zms_path": []
            }
        },
        "ZoneMinder._build_server_url": {
            "name": "_build_server_url",
            "location": 229,
            "return": [],
            "arguments": {
                "server_host": [],
                "server_path": []
            }
        },
        "ZoneMinder.move_monitor": {
            "name": "move_monitor",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "monitor": [],
                "direction": []
            }
        }
    },
    "zm-py-master/zoneminder/__init__.py": {}
}
{
    "Amazon-Order-History-master/scraping/cli.py": {
        "Cli.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.emptyline": {
            "name": "emptyline",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.default": {
            "name": "default",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Cli.preloop": {
            "name": "preloop",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.postloop": {
            "name": "postloop",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.postcmd": {
            "name": "postcmd",
            "location": 80,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "stop": [
                    "_T0@@"
                ],
                "line": []
            }
        },
        "Cli.completedefault": {
            "name": "completedefault",
            "location": 86,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.do_scrape": {
            "name": "do_scrape",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Cli.complete_scrape": {
            "name": "complete_scrape",
            "location": 114,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "text": [],
                "line": [],
                "begidx": [],
                "endidx": []
            }
        },
        "Cli.help_scrape": {
            "name": "help_scrape",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cli.do_dash": {
            "name": "do_dash",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Cli.help_dash": {
            "name": "help_dash",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Cli.do_exit": {
            "name": "do_exit",
            "location": 162,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "Cli._scrape_check_args": {
            "name": "_scrape_check_args",
            "location": 170,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Cli._arg_int_parsable": {
            "name": "_arg_int_parsable",
            "location": 205,
            "return": [
                "bool"
            ],
            "arguments": {
                "args": [],
                "arg_key": []
            }
        },
        "Cli._are_all_req_args_given": {
            "name": "_are_all_req_args_given",
            "location": 222,
            "return": [
                "bool"
            ],
            "arguments": {
                "accepted_args": [],
                "received_args": []
            }
        },
        "Cli._check_args_value_count": {
            "name": "_check_args_value_count",
            "location": 240,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "accepted_args": [],
                "received_args": []
            }
        },
        "Cli._are_all_rec_args_accepted": {
            "name": "_are_all_rec_args_accepted",
            "location": 277,
            "return": [
                "bool"
            ],
            "arguments": {
                "accepted_args": [],
                "received_args": []
            }
        },
        "Cli._get_args": {
            "name": "_get_args",
            "location": 294,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "line": []
            }
        },
        "Cli._print_progress_bar": {
            "name": "_print_progress_bar",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "iteration": [],
                "total": [],
                "prefix": [],
                "suffix": [],
                "decimals": [],
                "length": [],
                "fill": []
            }
        },
        "Cli.cmdloop": {
            "name": "cmdloop",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intro": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/CustomExceptions.py": {},
    "Amazon-Order-History-master/scraping/dash_app.py": {
        "main": {
            "name": "main",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_server": {
            "name": "run_server",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "head": {
            "name": "head",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "general_information": {
            "name": "general_information",
            "location": 97,
            "return": [
                "Any"
            ],
            "arguments": {
                "evaluated": []
            }
        },
        "gen_bar": {
            "name": "gen_bar",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": [],
                "name": []
            }
        },
        "gen_scatter": {
            "name": "gen_scatter",
            "location": 137,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": [],
                "name": []
            }
        },
        "gen_stacked_totals_graph": {
            "name": "gen_stacked_totals_graph",
            "location": 141,
            "return": [
                "Any"
            ],
            "arguments": {
                "evaluated": []
            }
        },
        "gen_scatter_by_month_graph": {
            "name": "gen_scatter_by_month_graph",
            "location": 173,
            "return": [
                "Any"
            ],
            "arguments": {
                "evaluated": []
            }
        },
        "gen_one_bar_graph": {
            "name": "gen_one_bar_graph",
            "location": 195,
            "return": [
                "Any"
            ],
            "arguments": {
                "evaluated": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/data.py": {
        "Item.to_dict": {
            "name": "to_dict",
            "location": 25,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Item.from_dict": {
            "name": "from_dict",
            "location": 30,
            "return": [
                "Item"
            ],
            "arguments": {
                "item_dict": []
            }
        },
        "Order.is_equal": {
            "name": "is_equal",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "order": []
            }
        },
        "Order.to_dict": {
            "name": "to_dict",
            "location": 49,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Order.from_dict": {
            "name": "from_dict",
            "location": 57,
            "return": [
                "Order"
            ],
            "arguments": {
                "order_dict": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/evaluation.py": {
        "Evaluation.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "orders": []
            }
        },
        "Evaluation.get_most_expensive_order": {
            "name": "get_most_expensive_order",
            "location": 19,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.get_orders_with_most_items": {
            "name": "get_orders_with_most_items",
            "location": 24,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.get_order_count": {
            "name": "get_order_count",
            "location": 28,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.get_item_count": {
            "name": "get_item_count",
            "location": 31,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.get_total": {
            "name": "get_total",
            "location": 34,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.get_audible_total": {
            "name": "get_audible_total",
            "location": 38,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.get_instant_video_total": {
            "name": "get_instant_video_total",
            "location": 42,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.order_contains_audible_items": {
            "name": "order_contains_audible_items",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "order": []
            }
        },
        "Evaluation.order_contains_instant_video_items": {
            "name": "order_contains_instant_video_items",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "order": []
            }
        },
        "Evaluation.order_contains_balance_item": {
            "name": "order_contains_balance_item",
            "location": 61,
            "return": [
                "bool"
            ],
            "arguments": {
                "order": []
            }
        },
        "Evaluation.total_by_year": {
            "name": "total_by_year",
            "location": 67,
            "return": [
                "Dict[(Any, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.audible_total_by_year": {
            "name": "audible_total_by_year",
            "location": 76,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.instant_video_total_per_year": {
            "name": "instant_video_total_per_year",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.added_balance_per_year": {
            "name": "added_balance_per_year",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.__total_by_year": {
            "name": "__total_by_year",
            "location": 89,
            "return": [],
            "arguments": {
                "orders": []
            }
        },
        "Evaluation.uncategorized_totals_per_year": {
            "name": "uncategorized_totals_per_year",
            "location": 98,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.prime_member_fee_by_year": {
            "name": "prime_member_fee_by_year",
            "location": 116,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {}
        },
        "Evaluation.totals_by_month": {
            "name": "totals_by_month",
            "location": 120,
            "return": [
                "Dict[(datetime.date, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.trend_by_month": {
            "name": "trend_by_month",
            "location": 130,
            "return": [
                "Dict[(datetime.date, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Evaluation.total_by_level_1_category": {
            "name": "total_by_level_1_category",
            "location": 145,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/file_handler.py": {
        "remove_file": {
            "name": "remove_file",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "file_name": []
            }
        },
        "load_orders": {
            "name": "load_orders",
            "location": 30,
            "return": [
                "List[scraping.data.Order]"
            ],
            "arguments": {
                "file_name": []
            }
        },
        "load_password": {
            "name": "load_password",
            "location": 43,
            "return": [
                "str"
            ],
            "arguments": {
                "file_name": []
            }
        },
        "save_file": {
            "name": "save_file",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "file_name": [],
                "data": []
            }
        },
        "read_json_file": {
            "name": "read_json_file",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "file_name": []
            }
        },
        "to_file_path": {
            "name": "to_file_path",
            "location": 73,
            "return": [
                "str"
            ],
            "arguments": {
                "file_name": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/scraper.py": {
        "Scraper.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": [],
                "password": [],
                "headless": [],
                "start": [],
                "end": [],
                "extensive": [],
                "progress_observer_callback": []
            }
        },
        "Scraper._notify_progress_observers": {
            "name": "_notify_progress_observers",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "progress": []
            }
        },
        "Scraper._setup_scraping": {
            "name": "_setup_scraping",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._navigate_to_orders_page": {
            "name": "_navigate_to_orders_page",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._complete_sign_in_form": {
            "name": "_complete_sign_in_form",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._signed_in_successful": {
            "name": "_signed_in_successful",
            "location": 121,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._skip_adding_phone_number": {
            "name": "_skip_adding_phone_number",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._is_custom_date_range": {
            "name": "_is_custom_date_range",
            "location": 134,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._are_orders_for_year_available": {
            "name": "_are_orders_for_year_available",
            "location": 142,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._is_next_page_available": {
            "name": "_is_next_page_available",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._is_digital_order": {
            "name": "_is_digital_order",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "order_id": []
            }
        },
        "Scraper._is_paging_menu_available": {
            "name": "_is_paging_menu_available",
            "location": 168,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._get_orders": {
            "name": "_get_orders",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._get_order_info": {
            "name": "_get_order_info",
            "location": 194,
            "return": [
                "Tuple[(Any, Any, datetime.date)]"
            ],
            "arguments": {
                "self": [],
                "order_info_element": []
            }
        },
        "Scraper._scrape_complete": {
            "name": "_scrape_complete",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._scrape_partial": {
            "name": "_scrape_partial",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._scrape_orders": {
            "name": "_scrape_orders",
            "location": 241,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._scrape_page_for_orders": {
            "name": "_scrape_page_for_orders",
            "location": 284,
            "return": [
                "List[scraping.data.Order]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._get_item_seller": {
            "name": "_get_item_seller",
            "location": 316,
            "return": [
                "Any"
            ],
            "arguments": {
                "item_element": []
            }
        },
        "Scraper._get_item_title": {
            "name": "_get_item_title",
            "location": 329,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "item_element": []
            }
        },
        "Scraper._get_item_price": {
            "name": "_get_item_price",
            "location": 345,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item_element": [],
                "item_index": [],
                "order_element": []
            }
        },
        "Scraper._get_item_price_through_details_page": {
            "name": "_get_item_price_through_details_page",
            "location": 360,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "order_element": [],
                "item_index": []
            }
        },
        "Scraper._get_item_categories": {
            "name": "_get_item_categories",
            "location": 389,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item_link": []
            }
        },
        "Scraper._get_item_categories_from_normal": {
            "name": "_get_item_categories_from_normal",
            "location": 416,
            "return": [
                "Dict[(int, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._get_item_categories_from_video": {
            "name": "_get_item_categories_from_video",
            "location": 430,
            "return": [
                "Dict[(int, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scraper._price_str_to_float": {
            "name": "_price_str_to_float",
            "location": 446,
            "return": [
                "float"
            ],
            "arguments": {
                "price_str": []
            }
        },
        "Scraper._get_progress": {
            "name": "_get_progress",
            "location": 454,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "current_date": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/spinner.py": {
        "Spinner.spinning_cursor": {
            "name": "spinning_cursor",
            "location": 17,
            "return": [
                "Generator[(str, Any, Any)]"
            ],
            "arguments": {}
        },
        "Spinner.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "delay": []
            }
        },
        "Spinner.spinner_task": {
            "name": "spinner_task",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Spinner.__enter__": {
            "name": "__enter__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Spinner.__exit__": {
            "name": "__exit__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exception": [
                    "None"
                ],
                "value": [
                    "Optional[BaseException]"
                ],
                "tb": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/utils.py": {
        "is_int_parsable": {
            "name": "is_int_parsable",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "int_str": []
            }
        },
        "str_to_date": {
            "name": "str_to_date",
            "location": 59,
            "return": [
                "datetime.date"
            ],
            "arguments": {
                "date_str": []
            }
        },
        "serialize_date": {
            "name": "serialize_date",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj": []
            }
        },
        "wait_for_element_by_class_name": {
            "name": "wait_for_element_by_class_name",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "browser": [],
                "class_name": [],
                "timeout": []
            }
        },
        "wait_for_element_by_id": {
            "name": "wait_for_element_by_id",
            "location": 90,
            "return": [
                "bool"
            ],
            "arguments": {
                "browser": [],
                "element_id": [],
                "timeout": []
            }
        },
        "sort_dict_by_key": {
            "name": "sort_dict_by_key",
            "location": 104,
            "return": [
                "collections.OrderedDict"
            ],
            "arguments": {
                "dic": []
            }
        },
        "open_webbrowser": {
            "name": "open_webbrowser",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "url": []
            }
        }
    },
    "Amazon-Order-History-master/scraping/__init__.py": {},
    "Amazon-Order-History-master/scraping/__main__.py": {
        "main": {
            "name": "main",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "cli": {
            "name": "cli",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "dash": {
            "name": "dash",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "scrape": {
            "name": "scrape",
            "location": 48,
            "return": [],
            "arguments": {
                "email": [],
                "password": [],
                "headless": [],
                "start": [],
                "end": [],
                "extensive": []
            }
        },
        "setup_logger": {
            "name": "setup_logger",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "CtCI-master/ch1/q1_test.py": {
        "is_unique_a": {
            "name": "is_unique_a",
            "location": 5,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "is_unique_b": {
            "name": "is_unique_b",
            "location": 57,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "TestIsUniqueA.test_empty_string": {
            "name": "test_empty_string",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueA.test_blank_space_string": {
            "name": "test_blank_space_string",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueA.test_two_blank_spaces_string": {
            "name": "test_two_blank_spaces_string",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueA.test_unique_string": {
            "name": "test_unique_string",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueA.test_not_unique_string": {
            "name": "test_not_unique_string",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueB.test_empty_string": {
            "name": "test_empty_string",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueB.test_blank_space_string": {
            "name": "test_blank_space_string",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueB.test_two_blank_spaces_string": {
            "name": "test_two_blank_spaces_string",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueB.test_unique_string": {
            "name": "test_unique_string",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIsUniqueB.test_not_unique_string": {
            "name": "test_not_unique_string",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch1/q2_test.py": {
        "check_permutation": {
            "name": "check_permutation",
            "location": 5,
            "return": [],
            "arguments": {
                "s1": [],
                "s2": []
            }
        },
        "TestCheckPermutation.test_empty_strings": {
            "name": "test_empty_strings",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCheckPermutation.test_blank_strings": {
            "name": "test_blank_strings",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCheckPermutation.test_different_strings": {
            "name": "test_different_strings",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCheckPermutation.test_caps": {
            "name": "test_caps",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCheckPermutation.test_permutation": {
            "name": "test_permutation",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch1/q3_test.py": {
        "URLify": {
            "name": "URLify",
            "location": 5,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "TestURLify.test_empty_string": {
            "name": "test_empty_string",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestURLify.test_blank_string": {
            "name": "test_blank_string",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestURLify.test_regular_string": {
            "name": "test_regular_string",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestURLify.test_leading_trailing_spaces": {
            "name": "test_leading_trailing_spaces",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestURLify.test_multiple_non_trailing_spaces": {
            "name": "test_multiple_non_trailing_spaces",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch1/q4_test.py": {
        "palindrome_permutation": {
            "name": "palindrome_permutation",
            "location": 5,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "TestPalindromePermutation.test_empty_string": {
            "name": "test_empty_string",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPalindromePermutation.test_blank_string": {
            "name": "test_blank_string",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPalindromePermutation.test_two_blank_spaces_string": {
            "name": "test_two_blank_spaces_string",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPalindromePermutation.test_racecar": {
            "name": "test_racecar",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPalindromePermutation.test_not_palindrome": {
            "name": "test_not_palindrome",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch1/q5_test.py": {
        "one_away": {
            "name": "one_away",
            "location": 5,
            "return": [],
            "arguments": {
                "s1": [],
                "s2": []
            }
        },
        "one_away_helper": {
            "name": "one_away_helper",
            "location": 33,
            "return": [],
            "arguments": {
                "shorter_str": [],
                "longer_str": []
            }
        },
        "TestOneAway.test_empty_strs": {
            "name": "test_empty_strs",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestOneAway.test_different_lengths_one_away": {
            "name": "test_different_lengths_one_away",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestOneAway.test_different_lengths_two_away": {
            "name": "test_different_lengths_two_away",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestOneAway.test_same_lengths_one_away": {
            "name": "test_same_lengths_one_away",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestOneAway.test_same_lengths_two_away": {
            "name": "test_same_lengths_two_away",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch1/q6_test.py": {
        "string_compression": {
            "name": "string_compression",
            "location": 6,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "TestStringCompression.test_compress_long_str": {
            "name": "test_compress_long_str",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringCompression.test_return_original_str": {
            "name": "test_return_original_str",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringCompression.test_uppercase_return_orignal_str": {
            "name": "test_uppercase_return_orignal_str",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringCompression.test_uppercase_compress_long_str": {
            "name": "test_uppercase_compress_long_str",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringCompression.test_mixed_upper_lower_compress_long_str": {
            "name": "test_mixed_upper_lower_compress_long_str",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch1/q9_test.py": {
        "string_rotation": {
            "name": "string_rotation",
            "location": 5,
            "return": [],
            "arguments": {
                "s1": [],
                "s2": []
            }
        },
        "TestStringRotation.test_is_rotation": {
            "name": "test_is_rotation",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringRotation.test_is_not_rotation": {
            "name": "test_is_not_rotation",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringRotation.test_is_rotation_2": {
            "name": "test_is_rotation_2",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringRotation.test_is_not_rotation_2": {
            "name": "test_is_not_rotation_2",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStringRotation.test_is_rotation_numbers": {
            "name": "test_is_rotation_numbers",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch2/q1_test.py": {
        "remove_dups": {
            "name": "remove_dups",
            "location": 6,
            "return": [],
            "arguments": {
                "head": []
            }
        },
        "TestRemoveDups.test_simple_linked_list": {
            "name": "test_simple_linked_list",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveDups.test_no_duplicates": {
            "name": "test_no_duplicates",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveDups.test_many_duplicates": {
            "name": "test_many_duplicates",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveDups.test_only_head": {
            "name": "test_only_head",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRemoveDups.test_duplicate_at_end": {
            "name": "test_duplicate_at_end",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch2/q2_test.py": {
        "kth_to_last": {
            "name": "kth_to_last",
            "location": 8,
            "return": [],
            "arguments": {
                "head": [],
                "k": []
            }
        },
        "TestKthToLast.linked_list_five": {
            "name": "linked_list_five",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestKthToLast.linked_list_seven": {
            "name": "linked_list_seven",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestKthToLast.test_five_long_small_k": {
            "name": "test_five_long_small_k",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "linked_list_five": []
            }
        },
        "TestKthToLast.test_five_medium_k": {
            "name": "test_five_medium_k",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "linked_list_five": []
            }
        },
        "TestKthToLast.test_five_large_k": {
            "name": "test_five_large_k",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "linked_list_five": []
            }
        },
        "TestKthToLast.test_seven_small_k": {
            "name": "test_seven_small_k",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "linked_list_seven": []
            }
        },
        "TestKthToLast.test_seven_large_k": {
            "name": "test_seven_large_k",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "linked_list_seven": []
            }
        }
    },
    "CtCI-master/ch2/q3_test.py": {
        "delete_middle_node": {
            "name": "delete_middle_node",
            "location": 9,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "TestDeleteMiddleNode.head": {
            "name": "head",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeleteMiddleNode.test_remove_34_from_linked_list": {
            "name": "test_remove_34_from_linked_list",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "head": []
            }
        },
        "TestDeleteMiddleNode.test_remove_why_from_linked_list": {
            "name": "test_remove_why_from_linked_list",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "head": []
            }
        },
        "TestDeleteMiddleNode.test_remove_true_from_linked_list": {
            "name": "test_remove_true_from_linked_list",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "head": []
            }
        },
        "TestDeleteMiddleNode.test_remove_hello_from_linked_list": {
            "name": "test_remove_hello_from_linked_list",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "head": []
            }
        }
    },
    "CtCI-master/ch2/q4_test.py": {
        "partition": {
            "name": "partition",
            "location": 9,
            "return": [],
            "arguments": {
                "head": [],
                "p_val": []
            }
        },
        "TestPartition.head": {
            "name": "head",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPartition.test_simple": {
            "name": "test_simple",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "head": []
            }
        },
        "TestPartition.test_simple_2": {
            "name": "test_simple_2",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "head": []
            }
        }
    },
    "CtCI-master/ch2/q5_test.py": {
        "sum_lists": {
            "name": "sum_lists",
            "location": 9,
            "return": [],
            "arguments": {
                "head_1": [],
                "head_2": []
            }
        },
        "sum_lists_reverse": {
            "name": "sum_lists_reverse",
            "location": 51,
            "return": [],
            "arguments": {
                "head_1": [],
                "head_2": []
            }
        },
        "sum_lists_reverse._sum_lists_reverse_helper": {
            "name": "_sum_lists_reverse_helper",
            "location": 60,
            "return": [],
            "arguments": {
                "head": []
            }
        },
        "TestSumLists.create_lists": {
            "name": "create_lists",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSumLists.test_sum_lists_with_fixture": {
            "name": "test_sum_lists_with_fixture",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "create_lists": []
            }
        },
        "TestSumLists.test_sum_lists": {
            "name": "test_sum_lists",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSumLists.test_sum_lists_reversed": {
            "name": "test_sum_lists_reversed",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSumLists.create_lists._create_lists": {
            "name": "_create_lists",
            "location": 86,
            "return": [],
            "arguments": {
                "start_1": [],
                "hop_1": [],
                "max_1": [],
                "start_2": [],
                "hop_2": [],
                "max_2": []
            }
        }
    },
    "CtCI-master/ch2/q6_test.py": {
        "palindrome": {
            "name": "palindrome",
            "location": 8,
            "return": [],
            "arguments": {
                "head": []
            }
        },
        "TestPalindrome.test_palindrome_1": {
            "name": "test_palindrome_1",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPalindrome.test_palindrome_2": {
            "name": "test_palindrome_2",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch2/q7_test.py": {
        "intersection": {
            "name": "intersection",
            "location": 8,
            "return": [],
            "arguments": {
                "head_1": [],
                "head_2": []
            }
        },
        "TestIntersection.test_simple_case_pass": {
            "name": "test_simple_case_pass",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIntersection.test_simple_case_fail": {
            "name": "test_simple_case_fail",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch2/q8_test.py": {
        "loop_detection": {
            "name": "loop_detection",
            "location": 8,
            "return": [],
            "arguments": {
                "head": []
            }
        },
        "TestLoopDetection.test_simple_case_loop": {
            "name": "test_simple_case_loop",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLoopDetection.test_simple_case_no_loop": {
            "name": "test_simple_case_no_loop",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "CtCI-master/ch2/utils.py": {
        "Node.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "nex": []
            }
        },
        "LinkedList.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "head": []
            }
        },
        "LinkedList.append": {
            "name": "append",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "CtCI-master/ch8/q1_test.py": {
        "stairs": {
            "name": "stairs",
            "location": 5,
            "return": [],
            "arguments": {
                "n": []
            }
        }
    }
}
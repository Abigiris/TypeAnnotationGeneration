{
    "EZ-master/backend/scripts/gitpush.py": {
        "build": {
            "name": "build",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "branch": [],
                "force": []
            }
        },
        "main": {
            "name": "main",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "EZ-master/backend/scripts/jacoco_coverage.py": {
        "run": {
            "name": "run",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "pom_file": [],
                "jacoco_file": []
            }
        },
        "fetch_coverage_info": {
            "name": "fetch_coverage_info",
            "location": 50,
            "return": [
                "List[Union[(str, _T1)]]"
            ],
            "arguments": {
                "parser": [],
                "coverage_type": [
                    "_T1@@"
                ]
            }
        },
        "is_coverage_greater_than_min": {
            "name": "is_coverage_greater_than_min",
            "location": 63,
            "return": [
                "Tuple[(bool, Union[(float, int)])]"
            ],
            "arguments": {
                "coverage_map": [],
                "coverage_type": [],
                "expected_coverage": []
            }
        },
        "map_coverage_info": {
            "name": "map_coverage_info",
            "location": 82,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "coverage_info_array": []
            }
        },
        "main": {
            "name": "main",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "EZ-master/backend/scripts/pom_xml_parser.py": {
        "run": {
            "name": "run",
            "location": 12,
            "return": [
                "Tuple[(Any, str)]"
            ],
            "arguments": {
                "file": []
            }
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
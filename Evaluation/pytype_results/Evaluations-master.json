{
    "Evaluations-master/app.py": {},
    "Evaluations-master/departments_serializer.py": {
        "serialize_dep_file": {
            "name": "serialize_dep_file",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [],
                "language": []
            }
        }
    },
    "Evaluations-master/src/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "mode": [],
                "static_path": [],
                "templates_path": [],
                "instance_path": []
            }
        },
        "create_app.initialise_database": {
            "name": "initialise_database",
            "location": 131,
            "return": [],
            "arguments": {}
        },
        "create_app.wipe_database": {
            "name": "wipe_database",
            "location": 134,
            "return": [],
            "arguments": {}
        },
        "create_app.test_nlp": {
            "name": "test_nlp",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "create_app.test_sentry": {
            "name": "test_sentry",
            "location": 66,
            "return": [],
            "arguments": {}
        }
    },
    "Evaluations-master/src/api/__init__.py": {
        "register_routes": {
            "name": "register_routes",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/api/resources/survey_resource.py": {
        "SurveyResource.get": {
            "name": "get",
            "location": 13,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "slug": []
            }
        },
        "SurveyResource.post": {
            "name": "post",
            "location": 37,
            "return": [
                "Tuple[(Dict[(str, Union[(str, Dict[(str, Any)])])], int)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Evaluations-master/src/api/resources/__init__.py": {},
    "Evaluations-master/src/api/utils/dump_helpers.py": {
        "get_one_row_by_id": {
            "name": "get_one_row_by_id",
            "location": 11,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "id": [],
                "dataConverter": []
            }
        },
        "get_one_row_by_slug": {
            "name": "get_one_row_by_slug",
            "location": 47,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "slug": [],
                "dataConverter": []
            }
        },
        "get_all_rows": {
            "name": "get_all_rows",
            "location": 90,
            "return": [
                "Tuple[(Union[(list, Dict[(str, Union[(str, Dict[(str, Any)])])])], int)]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "dataConverter": [],
                "filters": []
            }
        },
        "update_one_row_by_id": {
            "name": "update_one_row_by_id",
            "location": 135,
            "return": [
                "Optional[Tuple[(Dict[(str, str)], int)]]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "id": [],
                "updates": []
            }
        },
        "update_one_row_by_slug": {
            "name": "update_one_row_by_slug",
            "location": 144,
            "return": [
                "Optional[Tuple[(Dict[(str, str)], int)]]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "slug": [],
                "updates": []
            }
        },
        "update_selected_rows": {
            "name": "update_selected_rows",
            "location": 159,
            "return": [
                "Optional[Tuple[(Dict[(str, str)], int)]]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "updates": [],
                "filters": []
            }
        },
        "create_one_row": {
            "name": "create_one_row",
            "location": 166,
            "return": [
                "Tuple[(Dict[(str, str)], int)]"
            ],
            "arguments": {
                "session": [],
                "model": []
            }
        },
        "create_multiple_rows": {
            "name": "create_multiple_rows",
            "location": 174,
            "return": [
                "Tuple[(Dict[(str, str)], int)]"
            ],
            "arguments": {
                "session": []
            }
        },
        "delete_one_row_by_id": {
            "name": "delete_one_row_by_id",
            "location": 182,
            "return": [
                "Tuple[(Dict[(str, str)], int)]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "id": []
            }
        },
        "delete_one_row_by_slug": {
            "name": "delete_one_row_by_slug",
            "location": 191,
            "return": [
                "Tuple[(Dict[(str, str)], int)]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "slug": []
            }
        },
        "delete_selected_rows": {
            "name": "delete_selected_rows",
            "location": 205,
            "return": [
                "Tuple[(Dict[(str, str)], int)]"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "filters": []
            }
        }
    },
    "Evaluations-master/src/api/utils/load_helpers.py": {
        "load_object": {
            "name": "load_object",
            "location": 6,
            "return": [
                "Tuple[(Dict[(str, Union[(str, Dict[(str, Any)])])], int)]"
            ],
            "arguments": {
                "schema": [],
                "json": [
                    "dict"
                ]
            }
        }
    },
    "Evaluations-master/src/api/utils/unicode_api.py": {
        "UnicodeApi.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Evaluations-master/src/api/utils/__init__.py": {},
    "Evaluations-master/src/database/__init__.py": {
        "get_db": {
            "name": "get_db",
            "location": 5,
            "return": [
                "sqlalchemy.orm.session.Session"
            ],
            "arguments": {}
        },
        "close_db": {
            "name": "close_db",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "e": []
            }
        },
        "init_app": {
            "name": "init_app",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "init_db": {
            "name": "init_db",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "mode": [
                    "str"
                ]
            }
        },
        "delete_db": {
            "name": "delete_db",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Evaluations-master/src/database/events/events.py": {
        "intercept_before_flush": {
            "name": "intercept_before_flush",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "flush_context": [],
                "instances": []
            }
        },
        "intercept_after_flush": {
            "name": "intercept_after_flush",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "obj": []
            }
        }
    },
    "Evaluations-master/src/database/events/__init__.py": {
        "load_events": {
            "name": "load_events",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ]
            }
        }
    },
    "Evaluations-master/src/database/loaders/load_classification.py": {
        "load_classifications": {
            "name": "load_classifications",
            "location": 1626,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/database/loaders/load_departments.py": {
        "load_departments": {
            "name": "load_departments",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/database/loaders/load_question_types.py": {
        "load_question_types": {
            "name": "load_question_types",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/database/loaders/load_regions.py": {
        "load_regions": {
            "name": "load_regions",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/database/loaders/load_section_types.py": {
        "load_section_types": {
            "name": "load_section_types",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/database/loaders/load_statuses.py": {
        "load_statuses": {
            "name": "load_statuses",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "load_conductedSurveyStatuses": {
            "name": "load_conductedSurveyStatuses",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "load_surveyStatuses": {
            "name": "load_surveyStatuses",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Evaluations-master/src/database/loaders/__init__.py": {},
    "Evaluations-master/src/database/utils/crud.py": {
        "read_row_by_id": {
            "name": "read_row_by_id",
            "location": 11,
            "return": [
                "sqlalchemy.orm.query.Query"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ],
                "model": [
                    "sqlalchemy.orm.decl_api.DeclarativeMeta"
                ],
                "id": [
                    "int"
                ]
            }
        },
        "read_rows": {
            "name": "read_rows",
            "location": 32,
            "return": [
                "sqlalchemy.orm.query.Query"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ],
                "model": [
                    "sqlalchemy.orm.decl_api.DeclarativeMeta"
                ],
                "filters": [
                    "dict"
                ]
            }
        },
        "create_rows": {
            "name": "create_rows",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ]
            }
        },
        "update_row_by_id": {
            "name": "update_row_by_id",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ],
                "model": [
                    "sqlalchemy.orm.decl_api.DeclarativeMeta"
                ],
                "id": [
                    "int"
                ],
                "updates": [
                    "dict"
                ]
            }
        },
        "update_rows": {
            "name": "update_rows",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ],
                "model": [
                    "sqlalchemy.orm.decl_api.DeclarativeMeta"
                ],
                "updates": [
                    "dict"
                ],
                "filters": [
                    "dict"
                ]
            }
        },
        "delete_row_by_id": {
            "name": "delete_row_by_id",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [],
                "model": [],
                "id": []
            }
        },
        "delete_rows": {
            "name": "delete_rows",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ],
                "model": [
                    "sqlalchemy.orm.decl_api.DeclarativeMeta"
                ],
                "filters": [
                    "dict"
                ]
            }
        },
        "execute_sql": {
            "name": "execute_sql",
            "location": 251,
            "return": [
                "sqlalchemy.engine.cursor.LegacyCursorResult"
            ],
            "arguments": {
                "session": [
                    "sqlalchemy.orm.session.Session"
                ],
                "sql": [
                    "str"
                ]
            }
        }
    },
    "Evaluations-master/src/database/utils/datastructures.py": {
        "Stack.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arr": []
            }
        },
        "Stack.push": {
            "name": "push",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "Stack.pop": {
            "name": "pop",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stack.peek": {
            "name": "peek",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stack.get_list": {
            "name": "get_list",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Stack.isEmpty": {
            "name": "isEmpty",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arr": []
            }
        },
        "Queue.enqueue": {
            "name": "enqueue",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "Queue.dequeue": {
            "name": "dequeue",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.peek": {
            "name": "peek",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.get_list": {
            "name": "get_list",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Queue.isEmpty": {
            "name": "isEmpty",
            "location": 86,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Evaluations-master/src/database/utils/parsetree.py": {
        "Expression.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [],
                "module_attribute": [
                    "str"
                ],
                "operator": [
                    "str"
                ],
                "value": []
            }
        },
        "Expression.get_expression": {
            "name": "get_expression",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Operator.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "operator": []
            }
        },
        "Operator.dequeue_child": {
            "name": "dequeue_child",
            "location": 94,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Operator.enqueue_child": {
            "name": "enqueue_child",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "Operator.isEmpty": {
            "name": "isEmpty",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Operator.get_operator": {
            "name": "get_operator",
            "location": 100,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Operator.set_operator": {
            "name": "set_operator",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "operator": []
            }
        },
        "ParseTree.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [],
                "filters": [
                    "List[dict]"
                ]
            }
        },
        "ParseTree.query": {
            "name": "query",
            "location": 228,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        }
    },
    "Evaluations-master/src/database/utils/__init__.py": {},
    "Evaluations-master/src/marshmallow/__init__.py": {
        "init_schemas": {
            "name": "init_schemas",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/marshmallow/dump_schemas/answer_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/base_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/classification_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/conductedSurvey_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/department_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/question_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/regions_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/respondant_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/surveySchemaless_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/survey_schema.py": {},
    "Evaluations-master/src/marshmallow/dump_schemas/__init__.py": {
        "init_dump_schemas": {
            "name": "init_dump_schemas",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/marshmallow/load_schemas/question_loader_schema.py": {
        "QuestionLoaderSchema.validate_schema": {
            "name": "validate_schema",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "QuestionLoaderSchema.load_question": {
            "name": "load_question",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "Evaluations-master/src/marshmallow/load_schemas/section_loader_schema.py": {
        "SectionLoaderSchema.validates_schema": {
            "name": "validates_schema",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SectionLoaderSchema.load_section": {
            "name": "load_section",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "Evaluations-master/src/marshmallow/load_schemas/survey_loader_schema.py": {
        "SurveyLoaderSchema.validate_language_options": {
            "name": "validate_language_options",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "SurveyLoaderSchema.validate_schema": {
            "name": "validate_schema",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SurveyLoaderSchema.make_survey": {
            "name": "make_survey",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "Evaluations-master/src/marshmallow/load_schemas/__init__.py": {
        "init_load_schemas": {
            "name": "init_load_schemas",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Evaluations-master/src/models/answer_model.py": {},
    "Evaluations-master/src/models/base_model.py": {},
    "Evaluations-master/src/models/classification_model.py": {},
    "Evaluations-master/src/models/conductedSurveyStatus_model.py": {},
    "Evaluations-master/src/models/conductedSurvey_model.py": {
        "ConductedSurveyModel.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "ConductedSurveyModel.set_slug": {
            "name": "set_slug",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "ConductedSurveyModel.set_status": {
            "name": "set_status",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "ConductedSurveyModel.set_survey_hash": {
            "name": "set_survey_hash",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "ConductedSurveyModelQuestions.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conductedSurvey": [],
                "question": []
            }
        }
    },
    "Evaluations-master/src/models/departments_model.py": {},
    "Evaluations-master/src/models/questions_model.py": {
        "QuestionModel.set_prefix": {
            "name": "set_prefix",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prefix": []
            }
        },
        "QuestionModel.set_questionKey": {
            "name": "set_questionKey",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionModel.set_item_order": {
            "name": "set_item_order",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "order": [],
                "item": []
            }
        },
        "QuestionModel.set_item_order.create_order_registry": {
            "name": "create_order_registry",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionModel.set_item_order.recount_active": {
            "name": "recount_active",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Evaluations-master/src/models/questionTypes_model.py": {},
    "Evaluations-master/src/models/regions_model.py": {},
    "Evaluations-master/src/models/respondant_model.py": {
        "RespondantModel.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "RespondantModel.set_slug": {
            "name": "set_slug",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "RespondantModel.set_survey_hash": {
            "name": "set_survey_hash",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        }
    },
    "Evaluations-master/src/models/sectionType_model.py": {},
    "Evaluations-master/src/models/section_model.py": {
        "SectionModel.set_order": {
            "name": "set_order",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "order": []
            }
        },
        "SectionModel.set_item_order": {
            "name": "set_item_order",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "order": [],
                "item": []
            }
        },
        "SectionModel.set_item_order.create_order_registry": {
            "name": "create_order_registry",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SectionModel.set_item_order.recount_active": {
            "name": "recount_active",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Evaluations-master/src/models/surveySchemaless_model.py": {},
    "Evaluations-master/src/models/surveyStatus_model.py": {},
    "Evaluations-master/src/models/survey_model.py": {
        "SurveyModel.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "SurveyModel.set_slug": {
            "name": "set_slug",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "SurveyModel.create_conducted_survey": {
            "name": "create_conducted_survey",
            "location": 85,
            "return": [
                "csm.ConductedSurveyModel"
            ],
            "arguments": {
                "self": [],
                "respondant": [],
                "session": []
            }
        },
        "SurveyModel.set_item_order": {
            "name": "set_item_order",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "order": [],
                "item": []
            }
        },
        "SurveyModel.set_introduction_section": {
            "name": "set_introduction_section",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "section": []
            }
        },
        "SurveyModel.recount_active": {
            "name": "recount_active",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SurveyModel.create_order_registry": {
            "name": "create_order_registry",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Evaluations-master/src/models/__init__.py": {
        "init_models": {
            "name": "init_models",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "Evaluations-master/src/utils/slug_generator.py": {
        "generate_slug": {
            "name": "generate_slug",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {
                "suffix": [
                    "str"
                ],
                "model": [],
                "session": []
            }
        }
    },
    "Evaluations-master/src/utils/__init__.py": {},
    "Evaluations-master/src/views/survey_view.py": {
        "index": {
            "name": "index",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "Evaluations-master/src/views/__init__.py": {
        "register_views": {
            "name": "register_views",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    }
}
{
    "FAIRshake-master/run.py": {},
    "FAIRshake-master/app/ioc.py": {
        "model": {
            "name": "model",
            "location": 12,
            "return": [],
            "arguments": {
                "mod": []
            }
        },
        "interface": {
            "name": "interface",
            "location": 18,
            "return": [],
            "arguments": {
                "iface": []
            }
        },
        "implements": {
            "name": "implements",
            "location": 30,
            "return": [],
            "arguments": {
                "iface": []
            }
        },
        "interface.not_constructable": {
            "name": "not_constructable",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "implements.implements_decorator": {
            "name": "implements_decorator",
            "location": 33,
            "return": [],
            "arguments": {
                "impl": []
            }
        }
    },
    "FAIRshake-master/app/types.py": {},
    "FAIRshake-master/app/__init__.py": {},
    "FAIRshake-master/app/entities/Assessment/mock.py": {
        "MockAssessmentAPI.get": {
            "name": "get",
            "location": 9,
            "return": [],
            "arguments": {
                "id": [],
                "user": [],
                "object": [],
                "rubric": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "MockAssessmentAPI.post": {
            "name": "post",
            "location": 45,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/entities/Assessment/FAIRshakeAssessment/api.py": {
        "FAIRshakeAssessment.get": {
            "name": "get",
            "location": 16,
            "return": [],
            "arguments": {
                "id": [],
                "user": [],
                "object": [],
                "rubric": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "FAIRshakeAssessment.post": {
            "name": "post",
            "location": 43,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/entities/Assessment/FAIRshakeAssessment/model.py": {
        "RepositorySQLAlchemyBaseModule.provide_SQLAlchemyBase": {
            "name": "provide_SQLAlchemyBase",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FAIRshake-master/app/entities/FAIRshakeWeb/view.py": {
        "get_project_id": {
            "name": "get_project_id",
            "location": 23,
            "return": [],
            "arguments": {
                "repository": []
            }
        },
        "current_user": {
            "name": "current_user",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "index": {
            "name": "index",
            "location": 43,
            "return": [],
            "arguments": {
                "repository": []
            }
        },
        "projects": {
            "name": "projects",
            "location": 52,
            "return": [],
            "arguments": {
                "repository": []
            }
        },
        "start_project": {
            "name": "start_project",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "chrome_extension": {
            "name": "chrome_extension",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "bookmarklet": {
            "name": "bookmarklet",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "register": {
            "name": "register",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "resources": {
            "name": "resources",
            "location": 83,
            "return": [],
            "arguments": {
                "repository": [],
                "assessment": [],
                "score": [],
                "project": []
            }
        },
        "my_evaluations": {
            "name": "my_evaluations",
            "location": 107,
            "return": [],
            "arguments": {
                "repository": [],
                "assessment": [],
                "score": [],
                "project": []
            }
        },
        "evaluation": {
            "name": "evaluation",
            "location": 134,
            "return": [],
            "arguments": {
                "repository": [],
                "rubric": [],
                "assessment": []
            }
        },
        "evaluated_projects": {
            "name": "evaluated_projects",
            "location": 168,
            "return": [],
            "arguments": {
                "repository": [],
                "assessment": []
            }
        },
        "login": {
            "name": "login",
            "location": 192,
            "return": [],
            "arguments": {}
        },
        "logout": {
            "name": "logout",
            "location": 196,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/app/entities/FAIRshakeWeb/__init__.py": {
        "FAIRshakeWeb.provide_web_app": {
            "name": "provide_web_app",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FAIRshake-master/app/entities/Repository/mock.py": {
        "MockRepositoryAPI.get": {
            "name": "get",
            "location": 9,
            "return": [],
            "arguments": {
                "id": [],
                "tags": [],
                "user": [],
                "name": [],
                "url": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "MockRepositoryAPI.post": {
            "name": "post",
            "location": 97,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/entities/Repository/FAIRshakeRepository/api.py": {
        "FAIRshakeRepository.get": {
            "name": "get",
            "location": 17,
            "return": [],
            "arguments": {
                "id": [],
                "tags": [],
                "user": [],
                "name": [],
                "url": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "FAIRshakeRepository.post": {
            "name": "post",
            "location": 49,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/entities/Repository/FAIRshakeRepository/model.py": {
        "RepositorySQLAlchemyBaseModule.provide_SQLAlchemyBase": {
            "name": "provide_SQLAlchemyBase",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FAIRshake-master/app/entities/Rubric/mock.py": {
        "MockRubricAPI.get": {
            "name": "get",
            "location": 9,
            "return": [],
            "arguments": {
                "id": [],
                "user": [],
                "object": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "MockRubricAPI.post": {
            "name": "post",
            "location": 42,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/entities/Rubric/__init__.py": {},
    "FAIRshake-master/app/entities/Rubric/FAIRshakeRubric/api.py": {
        "FAIRshakeRubric.get": {
            "name": "get",
            "location": 19,
            "return": [],
            "arguments": {
                "id": [],
                "user": [],
                "object": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "FAIRshakeRubric.post": {
            "name": "post",
            "location": 45,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/entities/Rubric/FAIRshakeRubric/model.py": {
        "RepositorySQLAlchemyBaseModule.provide_SQLAlchemyBase": {
            "name": "provide_SQLAlchemyBase",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FAIRshake-master/app/entities/Rubric/FAIRshakeRubric/util.py": {
        "answer_value": {
            "name": "answer_value",
            "location": 2,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "FAIRshake-master/app/entities/Rubric/FAIRshakeRubric/__init__.py": {},
    "FAIRshake-master/app/entities/Runtime/config.py": {
        "ConfigureModule.provide_environment": {
            "name": "provide_environment",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigureModule.provide_cmdline": {
            "name": "provide_cmdline",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigureModule.provide_defaults": {
            "name": "provide_defaults",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigureModule.provide_config": {
            "name": "provide_config",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "environ": [],
                "defaults": []
            }
        }
    },
    "FAIRshake-master/app/entities/Runtime/dump.py": {
        "CommandLineDump.run": {
            "name": "run",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/app/entities/Runtime/flask.py": {
        "ConnexionAppModule.provide_app": {
            "name": "provide_app",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "api": [],
                "api_spec": [],
                "config": [],
                "injector": []
            }
        },
        "FlaskAppModule.provide_flask_app": {
            "name": "provide_flask_app",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "flask_app": [],
                "oidc": [],
                "config": [],
                "injector": []
            }
        }
    },
    "FAIRshake-master/app/entities/Runtime/help.py": {
        "CommandLineHelp.run": {
            "name": "run",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/app/entities/Runtime/runtime.py": {
        "AppModule.provide_app": {
            "name": "provide_app",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "apps": [],
                "config": []
            }
        }
    },
    "FAIRshake-master/app/entities/Runtime/sqlalchemy.py": {
        "SQLAlchemyModule.provide_SQLAlchemyEngine": {
            "name": "provide_SQLAlchemyEngine",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "base": [],
                "config": []
            }
        },
        "SQLAlchemyModule.provide_SQLAlchemy": {
            "name": "provide_SQLAlchemy",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "engine": []
            }
        }
    },
    "FAIRshake-master/app/entities/Score/mock.py": {
        "MockScoreAPI.get": {
            "name": "get",
            "location": 9,
            "return": [],
            "arguments": {
                "object": [],
                "kind": []
            }
        }
    },
    "FAIRshake-master/app/entities/Score/__init__.py": {},
    "FAIRshake-master/app/entities/Score/FAIRshakeInsignia/api.py": {
        "answer_value": {
            "name": "answer_value",
            "location": 14,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "get_or_create": {
            "name": "get_or_create",
            "location": 20,
            "return": [],
            "arguments": {
                "session": [],
                "model": [],
                "defaults": []
            }
        },
        "FAIRshakeInsignia.get": {
            "name": "get",
            "location": 36,
            "return": [],
            "arguments": {
                "object": [],
                "kind": []
            }
        }
    },
    "FAIRshake-master/app/entities/Score/FAIRshakeInsignia/model.py": {
        "ScoreSQLAlchemyBaseModule.provide_SQLAlchemyBase": {
            "name": "provide_SQLAlchemyBase",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "FAIRshake-master/app/entities/Score/FAIRshakeInsignia/util.py": {
        "nearest_sq": {
            "name": "nearest_sq",
            "location": 3,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "linearize": {
            "name": "linearize",
            "location": 7,
            "return": [],
            "arguments": {
                "x1": [],
                "y1": [],
                "x2": [],
                "y2": [],
                "val": []
            }
        },
        "build_insignia_svg": {
            "name": "build_insignia_svg",
            "location": 11,
            "return": [],
            "arguments": {
                "scores": []
            }
        }
    },
    "FAIRshake-master/app/entities/Score/FAIRshakeInsignia/views.py": {
        "register_kind": {
            "name": "register_kind",
            "location": 4,
            "return": [],
            "arguments": {
                "kind": []
            }
        },
        "application_json": {
            "name": "application_json",
            "location": 12,
            "return": [],
            "arguments": {
                "scores": []
            }
        },
        "text_html": {
            "name": "text_html",
            "location": 19,
            "return": [],
            "arguments": {
                "scores": []
            }
        },
        "unknown_kind": {
            "name": "unknown_kind",
            "location": 28,
            "return": [],
            "arguments": {
                "scores": []
            }
        },
        "register_kind.register_kind_decorator": {
            "name": "register_kind_decorator",
            "location": 5,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "FAIRshake-master/app/entities/Score/FAIRshakeInsignia/__init__.py": {},
    "FAIRshake-master/app/interfaces/Assessment.py": {
        "AssessmentAPI.get": {
            "name": "get",
            "location": 95,
            "return": [],
            "arguments": {
                "id": [],
                "user": [],
                "object": [],
                "rubric": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "AssessmentAPI.post": {
            "name": "post",
            "location": 157,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/interfaces/Repository.py": {
        "RepositoryAPI.get": {
            "name": "get",
            "location": 81,
            "return": [],
            "arguments": {
                "id": [],
                "tags": [],
                "user": [],
                "name": [],
                "url": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "RepositoryAPI.post": {
            "name": "post",
            "location": 150,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/interfaces/Rubric.py": {
        "RubricAPI.get": {
            "name": "get",
            "location": 110,
            "return": [],
            "arguments": {
                "id": [],
                "user": [],
                "object": [],
                "timestamp": [],
                "skip": [],
                "limit": []
            }
        },
        "RubricAPI.post": {
            "name": "post",
            "location": 164,
            "return": [],
            "arguments": {
                "body": []
            }
        }
    },
    "FAIRshake-master/app/interfaces/Score.py": {
        "ScoreAPI.get": {
            "name": "get",
            "location": 61,
            "return": [],
            "arguments": {
                "object": [],
                "kind": []
            }
        }
    },
    "FAIRshake-master/app/interfaces/__init__.py": {},
    "FAIRshake-master/app/util/annotations.py": {
        "func_to_annotations": {
            "name": "func_to_annotations",
            "location": 7,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "annotations_to_str": {
            "name": "annotations_to_str",
            "location": 15,
            "return": [],
            "arguments": {
                "annotations": []
            }
        },
        "annotation_subset": {
            "name": "annotation_subset",
            "location": 25,
            "return": [],
            "arguments": {
                "iface": [],
                "impl": []
            }
        }
    },
    "FAIRshake-master/app/util/bind.py": {
        "bind": {
            "name": "bind",
            "location": 1,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "bind.bind_wrapper": {
            "name": "bind_wrapper",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/app/util/command_line_parse.py": {
        "json_with_fallback": {
            "name": "json_with_fallback",
            "location": 11,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "parse": {
            "name": "parse",
            "location": 21,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "FAIRshake-master/app/util/deep_getattr.py": {
        "deep_getattr": {
            "name": "deep_getattr",
            "location": 3,
            "return": [],
            "arguments": {
                "obj": [],
                "attr": []
            }
        }
    },
    "FAIRshake-master/app/util/filter_none_kwargs.py": {
        "filter_none_kwargs": {
            "name": "filter_none_kwargs",
            "location": 1,
            "return": [],
            "arguments": {
                "__": []
            }
        }
    },
    "FAIRshake-master/app/util/first_and_only.py": {
        "first": {
            "name": "first",
            "location": 3,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "first_and_only": {
            "name": "first_and_only",
            "location": 6,
            "return": [],
            "arguments": {
                "iterable": []
            }
        }
    },
    "FAIRshake-master/app/util/generate_spec.py": {
        "yml_to_json": {
            "name": "yml_to_json",
            "location": 9,
            "return": [],
            "arguments": {
                "doc": []
            }
        },
        "json_to_yml": {
            "name": "json_to_yml",
            "location": 25,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "docs_of": {
            "name": "docs_of",
            "location": 30,
            "return": [],
            "arguments": {
                "objs": []
            }
        },
        "generate_spec": {
            "name": "generate_spec",
            "location": 33,
            "return": [],
            "arguments": {
                "obj": [],
                "objs": []
            }
        }
    },
    "FAIRshake-master/app/util/generate_uuid.py": {
        "generate_uuid": {
            "name": "generate_uuid",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/app/util/importer.py": {
        "walk_directory": {
            "name": "walk_directory",
            "location": 5,
            "return": [],
            "arguments": {
                "parent_dir": [],
                "mod_dir": [],
                "package": []
            }
        }
    },
    "FAIRshake-master/app/util/mock_api.py": {
        "MockAPISwagger": {
            "name": "MockAPISwagger",
            "location": 5,
            "return": [],
            "arguments": {
                "api": []
            }
        }
    },
    "FAIRshake-master/app/util/module_resolver.py": {
        "RestyResolverEx.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "default_module_name": [],
                "collection_endpoint_name": []
            }
        },
        "RestyResolverEx.resolve_operation_id": {
            "name": "resolve_operation_id",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "operation": []
            }
        },
        "RestyResolverEx.resolve_operation_id_using_rest_semantics": {
            "name": "resolve_operation_id_using_rest_semantics",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "operation": []
            }
        },
        "ModuleResolver.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "collection_endpoint_name": []
            }
        },
        "ModuleResolver.get_function_from_name": {
            "name": "get_function_from_name",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "function_name": []
            }
        },
        "RestyResolverEx.resolve_operation_id_using_rest_semantics.get_controller_name": {
            "name": "get_controller_name",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "RestyResolverEx.resolve_operation_id_using_rest_semantics.get_function_name": {
            "name": "get_function_name",
            "location": 53,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/app/util/__init__.py": {},
    "FAIRshake-master/tests/test_app.py": {
        "test_app": {
            "name": "test_app",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/tests/__init__.py": {},
    "FAIRshake-master/tests/test_interfaces/test_connexion_flask_injector.py": {
        "test_connexion_inject": {
            "name": "test_connexion_inject",
            "location": 111,
            "return": [],
            "arguments": {}
        },
        "SomeInterface.echo": {
            "name": "echo",
            "location": 15,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "SomeInterfaceImpl.echo": {
            "name": "echo",
            "location": 20,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "TestAPIInterface.get": {
            "name": "get",
            "location": 44,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "TestAPI.get": {
            "name": "get",
            "location": 65,
            "return": [],
            "arguments": {
                "impl": [],
                "a": []
            }
        },
        "ImplModule.provide_some_interface": {
            "name": "provide_some_interface",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImplModule.provide_api": {
            "name": "provide_api",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoodStatusModule.provide_good_status": {
            "name": "provide_good_status",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FlaskInjectorModule.provide_flask_injected": {
            "name": "provide_flask_injected",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "api": [],
                "injector": []
            }
        },
        "FlaskInjectorModule.provide_flask_test_client": {
            "name": "provide_flask_test_client",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "flask_app": []
            }
        }
    },
    "FAIRshake-master/tests/test_util/test_annotations.py": {
        "test_func_to_annotations": {
            "name": "test_func_to_annotations",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_func_partial_annotations": {
            "name": "test_func_partial_annotations",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_annotations_to_str": {
            "name": "test_annotations_to_str",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_annotation_subset": {
            "name": "test_annotation_subset",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "test_func_to_annotations.test_func": {
            "name": "test_func",
            "location": 4,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": []
            }
        },
        "test_func_partial_annotations.test_func": {
            "name": "test_func",
            "location": 15,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": []
            }
        },
        "test_annotation_subset.test_func_iface": {
            "name": "test_func_iface",
            "location": 40,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": []
            }
        },
        "test_annotation_subset.test_func_impl": {
            "name": "test_func_impl",
            "location": 43,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        },
        "test_annotation_subset.test_func_bad_impl": {
            "name": "test_func_bad_impl",
            "location": 46,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        }
    },
    "FAIRshake-master/tests/test_util/test_bind.py": {
        "test_bind": {
            "name": "test_bind",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_bind.test_func": {
            "name": "test_func",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/tests/test_util/test_command_line_parse.py": {
        "test_parse": {
            "name": "test_parse",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/tests/test_util/test_filter_none_kwargs.py": {
        "test_filter_none_kwargs": {
            "name": "test_filter_none_kwargs",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/tests/test_util/test_first_and_only.py": {
        "test_first": {
            "name": "test_first",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_first_and_only": {
            "name": "test_first_and_only",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/tests/test_util/test_generate_spec.py": {
        "test_generate_spec": {
            "name": "test_generate_spec",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_generate_spec.T.k": {
            "name": "k",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_generate_spec.T.l.j": {
            "name": "j",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/tests/test_util/test_importer.py": {
        "test_walk_directory": {
            "name": "test_walk_directory",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "FAIRshake-master/tests/test_util/test_module_resolver.py": {
        "test_module_resolver": {
            "name": "test_module_resolver",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "TestAPI.get": {
            "name": "get",
            "location": 22,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "TestAPI.test.post": {
            "name": "post",
            "location": 41,
            "return": [],
            "arguments": {
                "a": []
            }
        }
    },
    "FAIRshake-master/tests/test_util/__init__.py": {},
    "FAIRshake-master/tests/test_util/test_importer/a.py": {},
    "FAIRshake-master/tests/test_util/test_importer/b.py": {},
    "FAIRshake-master/tests/test_util/test_importer/__init__.py": {}
}
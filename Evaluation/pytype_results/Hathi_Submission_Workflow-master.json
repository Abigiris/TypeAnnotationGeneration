{
    "cx_setup.py": {
        "get_project_metadata": {
            "name": "get_project_metadata",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "create_msi_tablename": {
            "name": "create_msi_tablename",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "python_name": [],
                "fullname": []
            }
        },
        "get_tests": {
            "name": "get_tests",
            "location": 31,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "setup.py": {
        "BuildPyCommand.run": {
            "name": "run",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "docs/source/conf.py": {
        "get_project_metadata": {
            "name": "get_project_metadata",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "gui_tests/test_object_browser.py": {
        "main": {
            "name": "main",
            "location": 36,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "HathiFilesWizard.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "HathiFilesWizard.initializePage": {
            "name": "initializePage",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p_int": []
            }
        }
    },
    "gui_tests/test_qc.py": {
        "hello_world": {
            "name": "hello_world",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "main": {
            "name": "main",
            "location": 66,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "RootPageSpy.nextId": {
            "name": "nextId",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HathiSelectDestinationWizard.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "HathiSelectDestinationWizard.initializePage": {
            "name": "initializePage",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p_int": []
            }
        },
        "HathiSelectDestinationWizard.build_package": {
            "name": "build_package",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        }
    },
    "gui_tests/test_select_destination.py": {
        "hello_world": {
            "name": "hello_world",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "main": {
            "name": "main",
            "location": 36,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "RootPageSpy.nextId": {
            "name": "nextId",
            "location": 14,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HathiSelectDestinationWizard.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "HathiSelectDestinationWizard.initializePage": {
            "name": "initializePage",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p_int": []
            }
        }
    },
    "gui_tests/test_select_root.py": {
        "hello_world": {
            "name": "hello_world",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "main": {
            "name": "main",
            "location": 42,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "RootPageSpy.nextId": {
            "name": "nextId",
            "location": 14,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HathiRootSelectWizard.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "HathiRootSelectWizard.initializePage": {
            "name": "initializePage",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p_int": []
            }
        }
    },
    "gui_tests/test_select_update_checksums.py": {
        "hello_world": {
            "name": "hello_world",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "main": {
            "name": "main",
            "location": 64,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "RootPageSpy.nextId": {
            "name": "nextId",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HathiSelectDestinationWizard.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "HathiSelectDestinationWizard.initializePage": {
            "name": "initializePage",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p_int": []
            }
        },
        "HathiSelectDestinationWizard.build_package": {
            "name": "build_package",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        }
    },
    "gui_tests/test_select_validate.py": {
        "hello_world": {
            "name": "hello_world",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "main": {
            "name": "main",
            "location": 64,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "RootPageSpy.nextId": {
            "name": "nextId",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "HathiSelectDestinationWizard.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "HathiSelectDestinationWizard.initializePage": {
            "name": "initializePage",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p_int": []
            }
        },
        "HathiSelectDestinationWizard.build_package": {
            "name": "build_package",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        }
    },
    "hsw/cli.py": {
        "main": {
            "name": "main",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "hsw/collection.py": {
        "AbsPackageComponent.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "AbsPackageComponent.add_to_parent": {
            "name": "add_to_parent",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "child": []
            }
        },
        "AbsPackageComponent.__len__": {
            "name": "__len__",
            "location": 19,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsPackageComponent.__getitem__": {
            "name": "__getitem__",
            "location": 22,
            "return": [
                "Type[AbsPackageComponent]"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AbsPackageComponent.__iter__": {
            "name": "__iter__",
            "location": 25,
            "return": [
                "listiterator[Type[AbsPackageComponent]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsPackageComponent.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsPackageComponent.children": {
            "name": "children",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbsPackageComponent._gen_combined_metadata": {
            "name": "_gen_combined_metadata",
            "location": 36,
            "return": [
                "ChainMap[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsPackageComponent.init_local_metadata": {
            "name": "init_local_metadata",
            "location": 44,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "Package.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "parent": []
            }
        },
        "Package.children": {
            "name": "children",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PackageObject.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "Optional[Package]"
                ]
            }
        },
        "PackageObject.children": {
            "name": "children",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Item.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "Optional[PackageObject]"
                ]
            }
        },
        "Item.children": {
            "name": "children",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Instantiation.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "category": [],
                "parent": [
                    "Optional[Item]"
                ]
            }
        },
        "Instantiation.children": {
            "name": "children",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Instantiation.add_to_parent": {
            "name": "add_to_parent",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "child": []
            }
        }
    },
    "hsw/collection_builder.py": {
        "_build_ds_instance": {
            "name": "_build_ds_instance",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "item": [],
                "name": [],
                "path": []
            }
        },
        "_build_ds_items": {
            "name": "_build_ds_items",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "package": [],
                "path": []
            }
        },
        "_build_ds_object": {
            "name": "_build_ds_object",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "parent_collection": [],
                "path": []
            }
        },
        "build_ds_collection": {
            "name": "build_ds_collection",
            "location": 36,
            "return": [
                "collection.Package"
            ],
            "arguments": {
                "root": []
            }
        },
        "build_bb_instance": {
            "name": "build_bb_instance",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "new_item": [],
                "path": [],
                "name": []
            }
        },
        "build_bb_package": {
            "name": "build_bb_package",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "new_package": [],
                "path": []
            }
        },
        "build_bb_collection": {
            "name": "build_bb_collection",
            "location": 62,
            "return": [
                "collection.Package"
            ],
            "arguments": {
                "root": []
            }
        }
    },
    "hsw/gui.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "hsw/packages.py": {
        "Package.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Package.__len__": {
            "name": "__len__",
            "location": 11,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.__contains__": {
            "name": "__contains__",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Package.__iter__": {
            "name": "__iter__",
            "location": 21,
            "return": [
                "listiterator[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Packages.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "Packages.__len__": {
            "name": "__len__",
            "location": 31,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Packages.__getitem__": {
            "name": "__getitem__",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Packages.__iter__": {
            "name": "__iter__",
            "location": 37,
            "return": [
                "Iterator[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Packages.add_package": {
            "name": "add_package",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Packages._build_package": {
            "name": "_build_package",
            "location": 46,
            "return": [
                "Package"
            ],
            "arguments": {
                "path": []
            }
        }
    },
    "hsw/package_builder.py": {
        "AbsPackageBuilder.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "AbsPackageBuilder.add_items": {
            "name": "add_items",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "package": [
                    "hsw.packages.Package"
                ]
            }
        },
        "AbsPackageBuilder.set_default_metadata": {
            "name": "set_default_metadata",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "package": [
                    "hsw.packages.Package"
                ]
            }
        },
        "AbsPackageBuilder.build": {
            "name": "build",
            "location": 23,
            "return": [
                "hsw.packages.Package"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageBuilder.set_default_metadata": {
            "name": "set_default_metadata",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "package": [
                    "hsw.packages.Package"
                ]
            }
        },
        "PackageBuilder.add_items": {
            "name": "add_items",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package": [
                    "hsw.packages.Package"
                ]
            }
        },
        "PackageBuilder.build": {
            "name": "build",
            "location": 40,
            "return": [
                "hsw.packages.Package"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageBuilder.get_package_name": {
            "name": "get_package_name",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        }
    },
    "hsw/package_list.py": {
        "PackagesList.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "PackagesList.__len__": {
            "name": "__len__",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagesList.__iter__": {
            "name": "__iter__",
            "location": 12,
            "return": [
                "listiterator[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackagesList.add_package": {
            "name": "add_package",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "PackagesList.__getitem__": {
            "name": "__getitem__",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "PackagesList._build_package": {
            "name": "_build_package",
            "location": 27,
            "return": [
                "hsw.packages.Package"
            ],
            "arguments": {
                "path": []
            }
        }
    },
    "hsw/workflow.py": {
        "AbsWorkflow.build_collection": {
            "name": "build_collection",
            "location": 21,
            "return": [
                "collection.Package"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "AbsWorkflow.prep": {
            "name": "prep",
            "location": 25,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "AbsWorkflow.update_checksums": {
            "name": "update_checksums",
            "location": 29,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "AbsWorkflow.validate": {
            "name": "validate",
            "location": 33,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "AbsWorkflow.zip": {
            "name": "zip",
            "location": 44,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": [],
                "destination": []
            }
        },
        "AbsWorkflow.qc": {
            "name": "qc",
            "location": 54,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "BrittleBooksWorkflow.build_collection": {
            "name": "build_collection",
            "location": 59,
            "return": [
                "collection.Package"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "BrittleBooksWorkflow.validate": {
            "name": "validate",
            "location": 63,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "BrittleBooksWorkflow.update_checksums": {
            "name": "update_checksums",
            "location": 73,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "DSWorkflow.build_collection": {
            "name": "build_collection",
            "location": 91,
            "return": [
                "collection.Package"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "DSWorkflow.prep": {
            "name": "prep",
            "location": 95,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "DSWorkflow.qc": {
            "name": "qc",
            "location": 110,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "package": []
            }
        },
        "Workflow.__init__": {
            "name": "__init__",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workflow": [
                    "AbsWorkflow"
                ]
            }
        },
        "Workflow.build_package": {
            "name": "build_package",
            "location": 164,
            "return": [
                "collection.Package"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "Workflow.prep": {
            "name": "prep",
            "location": 167,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "Workflow.validate": {
            "name": "validate",
            "location": 170,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "Workflow.zip": {
            "name": "zip",
            "location": 173,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "self": [],
                "package": [],
                "destination": []
            }
        },
        "Workflow.update_checksums": {
            "name": "update_checksums",
            "location": 176,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "Workflow.qc": {
            "name": "qc",
            "location": 179,
            "return": [
                "List[Callable]"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "AbsWorkflow.validate.create_task": {
            "name": "create_task",
            "location": 37,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "AbsWorkflow.zip.zip_creater": {
            "name": "zip_creater",
            "location": 47,
            "return": [],
            "arguments": {
                "path": [],
                "output": []
            }
        },
        "BrittleBooksWorkflow.validate.create_task": {
            "name": "create_task",
            "location": 66,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "BrittleBooksWorkflow.update_checksums.create_task": {
            "name": "create_task",
            "location": 78,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "DSWorkflow.prep.package_generator": {
            "name": "package_generator",
            "location": 98,
            "return": [],
            "arguments": {
                "path": [],
                "title_page": []
            }
        },
        "DSWorkflow.qc.qc_package": {
            "name": "qc_package",
            "location": 122,
            "return": [],
            "arguments": {
                "path": [],
                "validation_profile": []
            }
        }
    },
    "hsw/__init__.py": {},
    "hsw/__main__.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "hsw/ui/message_logger.py": {
        "AbsObserver.update": {
            "name": "update",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AbsSubject.attach": {
            "name": "attach",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "observer": [
                    "AbsObserver"
                ]
            }
        },
        "AbsSubject.detach": {
            "name": "detach",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "observer": [
                    "AbsObserver"
                ]
            }
        },
        "AbsSubject.notify": {
            "name": "notify",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Logger.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Logger.log": {
            "name": "log",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Logger.clean": {
            "name": "clean",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentWriter.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocumentWriter.update": {
            "name": "update",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "hsw/ui/packages_model.py": {
        "NameAdapter.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NameAdapter.__len__": {
            "name": "__len__",
            "location": 17,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "NameAdapter.add": {
            "name": "add",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "column_header": [],
                "data_entry": []
            }
        },
        "NameAdapter.get_column_header": {
            "name": "get_column_header",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data_entry": []
            }
        },
        "NameAdapter.get_data_entry": {
            "name": "get_data_entry",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "column_header": []
            }
        },
        "PackageModel.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packages": [
                    "hsw.package_list.PackagesList"
                ]
            }
        },
        "PackageModel.setup_name_lookup": {
            "name": "setup_name_lookup",
            "location": 53,
            "return": [
                "NameAdapter"
            ],
            "arguments": {}
        },
        "PackageModel.rowCount": {
            "name": "rowCount",
            "location": 59,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "PackageModel.columnCount": {
            "name": "columnCount",
            "location": 62,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "PackageModel.headerData": {
            "name": "headerData",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "orientation": [],
                "role": []
            }
        },
        "PackageModel.setData": {
            "name": "setData",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "data": [],
                "role": []
            }
        },
        "PackageModel.data": {
            "name": "data",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "role": []
            }
        },
        "PackageModel._get_data": {
            "name": "_get_data",
            "location": 95,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "int"
                ],
                "field": [
                    "str"
                ]
            }
        },
        "PackageModel.flags": {
            "name": "flags",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "PackageModel2.__init__": {
            "name": "__init__",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packages": []
            }
        },
        "PackageModel2.setup_name_lookup": {
            "name": "setup_name_lookup",
            "location": 123,
            "return": [
                "NameAdapter"
            ],
            "arguments": {}
        },
        "PackageModel2.rowCount": {
            "name": "rowCount",
            "location": 130,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "PackageModel2.columnCount": {
            "name": "columnCount",
            "location": 133,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "PackageModel2.headerData": {
            "name": "headerData",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "orientation": [],
                "role": []
            }
        },
        "PackageModel2.setData": {
            "name": "setData",
            "location": 144,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "data": [],
                "role": []
            }
        },
        "PackageModel2.data": {
            "name": "data",
            "location": 151,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "role": []
            }
        },
        "PackageModel2._get_data": {
            "name": "_get_data",
            "location": 166,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "row": [
                    "int"
                ],
                "field": [
                    "str"
                ]
            }
        },
        "PackageModel2.flags": {
            "name": "flags",
            "location": 174,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        }
    },
    "hsw/ui/package_browser.py": {
        "PackageBrowser.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packages": [
                    "hsw.package_list.PackagesList"
                ]
            }
        }
    },
    "hsw/ui/package_files_delegate.py": {
        "FileSelectionDelegate2.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "FileSelectionDelegate2.createEditor": {
            "name": "createEditor",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "QStyleOptionViewItem": [],
                "QModelIndex": []
            }
        },
        "FileSelectionDelegate2.setEditorData": {
            "name": "setEditorData",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "editor": [],
                "index": []
            }
        },
        "FileSelectionDelegate2.get_files": {
            "name": "get_files",
            "location": 34,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "path": []
            }
        }
    },
    "hsw/ui/processing.py": {
        "ProcessProgress.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "ProcessProgress.total_tasks": {
            "name": "total_tasks",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessProgress.current_task_index": {
            "name": "current_task_index",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessProgress.process_next_task": {
            "name": "process_next_task",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessProgress.process": {
            "name": "process",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessProgress._update_message": {
            "name": "_update_message",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "DummyProgress.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "DummyProgress.total_tasks": {
            "name": "total_tasks",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DummyProgress.process_next_task": {
            "name": "process_next_task",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyProgress.current_task_index": {
            "name": "current_task_index",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListCallableProgress.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "tasks": [],
                "task_name": [],
                "logger": []
            }
        },
        "ListCallableProgress.total_tasks": {
            "name": "total_tasks",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListCallableProgress.current_task_index": {
            "name": "current_task_index",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListCallableProgress.process_next_task": {
            "name": "process_next_task",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListProgress.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "items": [
                    "list"
                ],
                "logger": []
            }
        },
        "ListProgress.total_tasks": {
            "name": "total_tasks",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListProgress.current_task_index": {
            "name": "current_task_index",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ListProgress.process_next_task": {
            "name": "process_next_task",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListProgress2.process_next_task": {
            "name": "process_next_task",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hsw/ui/wizard.py": {
        "HathiWizard.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "hsw/ui/wizard_steps.py": {
        "LocatingPackagesDialog.worker": {
            "name": "worker",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "finished_callback": [
                    "Callable"
                ],
                "reporter_callback": [
                    "Callable"
                ]
            }
        },
        "LocatingPackagesDialog.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package_builder": [],
                "root": []
            }
        },
        "LocatingPackagesDialog.all_done": {
            "name": "all_done",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocatingPackagesDialog.close": {
            "name": "close",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocatingPackagesDialog.exec_": {
            "name": "exec_",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QtHathiWizardPage.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "QtHathiWizardPage.initializePage": {
            "name": "initializePage",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QtHathiWizardPage.update_title": {
            "name": "update_title",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "value": [
                    "QtHathiWizardPage"
                ]
            }
        },
        "QtHathiWizardPage.add_information_card": {
            "name": "add_information_card",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "value": [
                    "QtHathiWizardPage"
                ]
            }
        },
        "HathiWizardProcess.process": {
            "name": "process",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HathiWizardProcess.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "SelectRoot.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "SelectRoot.browser_folder": {
            "name": "browser_folder",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectRoot.isComplete": {
            "name": "isComplete",
            "location": 157,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectRoot.validatePage": {
            "name": "validatePage",
            "location": 164,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectRoot.build_package": {
            "name": "build_package",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "SelectRoot.cleanupPage": {
            "name": "cleanupPage",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectRoot.nextId": {
            "name": "nextId",
            "location": 201,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectDestination.__init__": {
            "name": "__init__",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "SelectDestination.browser_folder": {
            "name": "browser_folder",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectDestination.isComplete": {
            "name": "isComplete",
            "location": 239,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectDestination.cleanupPage": {
            "name": "cleanupPage",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectDestination.validatePage": {
            "name": "validatePage",
            "location": 250,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "QualityControl.process": {
            "name": "process",
            "location": 271,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "QualityControl._create_report": {
            "name": "_create_report",
            "location": 292,
            "return": [
                "str"
            ],
            "arguments": {
                "results": []
            }
        },
        "PackageBrowser2.__init__": {
            "name": "__init__",
            "location": 320,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "PackageBrowser2.initializePage": {
            "name": "initializePage",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageBrowser2.load_model2": {
            "name": "load_model2",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "packages": []
            }
        },
        "PackageBrowser2.isComplete": {
            "name": "isComplete",
            "location": 348,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageBrowser2.validatePage": {
            "name": "validatePage",
            "location": 353,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageBrowser2.nextId": {
            "name": "nextId",
            "location": 360,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UpdateChecksums.process": {
            "name": "process",
            "location": 367,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Prep.process": {
            "name": "process",
            "location": 390,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Prep.nextId": {
            "name": "nextId",
            "location": 409,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "EndPage.isCommitPage": {
            "name": "isCommitPage",
            "location": 417,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Validate.process": {
            "name": "process",
            "location": 424,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Validate.build_report": {
            "name": "build_report",
            "location": 447,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "results": []
            }
        },
        "Zip.process": {
            "name": "process",
            "location": 481,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "WorkflowSelection.__init__": {
            "name": "__init__",
            "location": 508,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "WorkflowSelection.updated": {
            "name": "updated",
            "location": 531,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "selection": []
            }
        },
        "WorkflowSelection.validatePage": {
            "name": "validatePage",
            "location": 535,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WorkflowSelection.cleanupPage": {
            "name": "cleanupPage",
            "location": 541,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hsw/ui/__init__.py": {},
    "tests/test_collection.py": {
        "test_collection_instance": {
            "name": "test_collection_instance",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_collection_metadata": {
            "name": "test_collection_metadata",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_collection_with_path": {
            "name": "test_collection_with_path",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_package_instance": {
            "name": "test_package_instance",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_collection_with_package": {
            "name": "test_collection_with_package",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_collection_with_package_transitive_metadata": {
            "name": "test_collection_with_package_transitive_metadata",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_item_instance": {
            "name": "test_item_instance",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_item_transitive_metadata": {
            "name": "test_item_transitive_metadata",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_instantiation_instance": {
            "name": "test_instantiation_instance",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_instantiation_instance_with_parent": {
            "name": "test_instantiation_instance_with_parent",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_full_package": {
            "name": "test_full_package",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tests/test_collection_builder.py": {
        "ds_collection_root": {
            "name": "ds_collection_root",
            "location": 10,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "bb_collection_root": {
            "name": "bb_collection_root",
            "location": 99,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "test_build_bb_collection": {
            "name": "test_build_bb_collection",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_collection_size": {
            "name": "test_collection_size",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_collection_iter": {
            "name": "test_collection_iter",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_collection_index": {
            "name": "test_collection_index",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_package_size": {
            "name": "test_package_size",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_item_size": {
            "name": "test_item_size",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_item_metadata_name": {
            "name": "test_item_metadata_name",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_object_metadata_name": {
            "name": "test_object_metadata_name",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_item_instance": {
            "name": "test_item_instance",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_bb_collection_strat": {
            "name": "test_bb_collection_strat",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection_root": []
            }
        },
        "test_ds_collection_strategy": {
            "name": "test_ds_collection_strategy",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "ds_collection_root": []
            }
        },
        "test_ds_package_len": {
            "name": "test_ds_package_len",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "ds_collection_root": []
            }
        },
        "test_ds_object_len": {
            "name": "test_ds_object_len",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "ds_collection_root": []
            }
        },
        "test_ds_object_id": {
            "name": "test_ds_object_id",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "ds_collection_root": []
            }
        },
        "test_ds_item_len": {
            "name": "test_ds_item_len",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "ds_collection_root": []
            }
        },
        "test_ds_instantiations": {
            "name": "test_ds_instantiations",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {
                "ds_collection_root": []
            }
        }
    },
    "tests/test_packages.py": {
        "packages_empty": {
            "name": "packages_empty",
            "location": 13,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "test_root": {
            "name": "test_root",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_empty_size": {
            "name": "test_empty_size",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "packages_empty": []
            }
        },
        "test_add_packages": {
            "name": "test_add_packages",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "packages_empty": [
                    "hsw.package_list.PackagesList"
                ]
            }
        },
        "test_alert_dup_added": {
            "name": "test_alert_dup_added",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "packages_empty": [],
                "monkeypatch": []
            }
        },
        "test_alert_dup_added.mockreturn": {
            "name": "mockreturn",
            "location": 46,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "tests/test_packages_model.py": {
        "packages": {
            "name": "packages",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "sample_package": {
            "name": "sample_package",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "sample_package_with_items": {
            "name": "sample_package_with_items",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_package_empty_len": {
            "name": "test_package_empty_len",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "packages": []
            }
        },
        "test_add_package_entry": {
            "name": "test_add_package_entry",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "packages": []
            }
        },
        "test_set_and_retrieve_entry": {
            "name": "test_set_and_retrieve_entry",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "packages": []
            }
        },
        "test_alert_dup_added": {
            "name": "test_alert_dup_added",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "packages": []
            }
        },
        "test_package_size": {
            "name": "test_package_size",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_package": []
            }
        },
        "test_package_with_one_item": {
            "name": "test_package_with_one_item",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_package_with_items": []
            }
        },
        "test_package_with_item_with_metadata": {
            "name": "test_package_with_item_with_metadata",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_package_with_items": []
            }
        }
    },
    "tests/test_package_builder.py": {
        "SamplePackage": {
            "name": "SamplePackage",
            "location": 14,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "test_path": {
            "name": "test_path",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "SamplePackage": []
            }
        },
        "test_files": {
            "name": "test_files",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "SamplePackage": []
            }
        },
        "test_no_path": {
            "name": "test_no_path",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "SamplePackage": []
            }
        }
    },
    "tests/test_ui.py": {
        "test_name_adapter_empty_len": {
            "name": "test_name_adapter_empty_len",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_name_adapter_add": {
            "name": "test_name_adapter_add",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_multiple_mappings_error": {
            "name": "test_multiple_mappings_error",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_name_adapter_get_column_from_data_entry": {
            "name": "test_name_adapter_get_column_from_data_entry",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_name_adapter_get_data_entry_from_column": {
            "name": "test_name_adapter_get_data_entry_from_column",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tests/test_workflow_bb.py": {
        "bb_collection": {
            "name": "bb_collection",
            "location": 8,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "test_full_workflow": {
            "name": "test_full_workflow",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "bb_collection": []
            }
        }
    },
    "tests/test_workflow_ds.py": {
        "ds_collection": {
            "name": "ds_collection",
            "location": 7,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "test_prep": {
            "name": "test_prep",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "ds_collection": []
            }
        }
    },
    "tests/__init__.py": {},
    "windows_build/dlruntime.py": {
        "valid_file": {
            "name": "valid_file",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "file": [],
                "expected_md5": []
            }
        },
        "download_runtime": {
            "name": "download_runtime",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": [],
                "md5": [],
                "destination": []
            }
        },
        "get_download_info": {
            "name": "get_download_info",
            "location": 59,
            "return": [
                "Runtime"
            ],
            "arguments": {
                "version": [
                    "str"
                ],
                "arch": [
                    "Union[(ARCHITECTURES, str)]"
                ]
            }
        },
        "get_arg_parser": {
            "name": "get_arg_parser",
            "location": 69,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "list_types": {
            "name": "list_types",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "install_python": {
            "name": "install_python",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [],
                "destination": []
            }
        },
        "find_path_file": {
            "name": "find_path_file",
            "location": 91,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        },
        "fixup_python_runtime": {
            "name": "fixup_python_runtime",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "main": {
            "name": "main",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "LID-DS-master/setup.py": {},
    "LID-DS-master/algorithms/alarm.py": {
        "Alarm.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": [],
                "correct": []
            }
        },
        "Alarm._determine_dataset": {
            "name": "_determine_dataset",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Alarm._determine_scenario": {
            "name": "_determine_scenario",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Alarm._determine_filepath": {
            "name": "_determine_filepath",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "LID-DS-master/algorithms/alarms.py": {
        "Alarms.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Alarms.add_or_update_alarm": {
            "name": "add_or_update_alarm",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": [],
                "correct": []
            }
        },
        "Alarms.end_alarm": {
            "name": "end_alarm",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Alarms.get_alarms_as_dict": {
            "name": "get_alarms_as_dict",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/building_block.py": {
        "BuildingBlock.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlock.train_on": {
            "name": "train_on",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "BuildingBlock.val_on": {
            "name": "val_on",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "BuildingBlock.fit": {
            "name": "fit",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlock.get_result": {
            "name": "get_result",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "BuildingBlock._calculate": {
            "name": "_calculate",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "BuildingBlock.new_recording": {
            "name": "new_recording",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlock.depends_on": {
            "name": "depends_on",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlock.__str__": {
            "name": "__str__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlock.__repr__": {
            "name": "__repr__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlock.get_id": {
            "name": "get_id",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlock.__arguments": {
            "name": "__arguments",
            "location": 88,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/building_block_id_manager.py": {
        "BuildingBlockIDManager.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlockIDManager.get_id": {
            "name": "get_id",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "feature": []
            }
        }
    },
    "LID-DS-master/algorithms/building_block_manager.py": {
        "BuildingBlockManager.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "final_bb": []
            }
        },
        "BuildingBlockManager.get_final_bb": {
            "name": "get_final_bb",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildingBlockManager.to_dot": {
            "name": "to_dot",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/data_preprocessor.py": {
        "dot_to_str": {
            "name": "dot_to_str",
            "location": 10,
            "return": [],
            "arguments": {
                "dot": []
            }
        },
        "DataPreprocessor.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "data_loader": [],
                "resulting_building_block": []
            }
        },
        "DataPreprocessor.get_graph_dot": {
            "name": "get_graph_dot",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataPreprocessor._train_on_needed": {
            "name": "_train_on_needed",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "bb_gen": []
            }
        },
        "DataPreprocessor._val_on_needed": {
            "name": "_val_on_needed",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "bb_gen": []
            }
        },
        "DataPreprocessor._fit_needed": {
            "name": "_fit_needed",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "bb_gen": []
            }
        },
        "DataPreprocessor._prepare_and_fit_building_blocks": {
            "name": "_prepare_and_fit_building_blocks",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataPreprocessor.new_recording": {
            "name": "new_recording",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/example_main.py": {},
    "LID-DS-master/algorithms/ids.py": {
        "IDS.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "data_loader": [],
                "resulting_building_block": [],
                "plot_switch": [],
                "create_alarms": []
            }
        },
        "IDS.get_config": {
            "name": "get_config",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IDS.determine_threshold": {
            "name": "determine_threshold",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IDS.detect": {
            "name": "detect",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IDS.detect_on_single_recording": {
            "name": "detect_on_single_recording",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "recording": []
            }
        },
        "IDS.draw_plot": {
            "name": "draw_plot",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "IDS._calculate": {
            "name": "_calculate",
            "location": 132,
            "return": [],
            "arguments": {
                "recording_ids_tuple": []
            }
        },
        "IDS.detect_parallel": {
            "name": "detect_parallel",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/ids_ae_main.py": {},
    "LID-DS-master/algorithms/ids_lstm_main.py": {},
    "LID-DS-master/algorithms/ids_mlp_main.py": {},
    "LID-DS-master/algorithms/ids_real_world.py": {},
    "LID-DS-master/algorithms/ids_som_main.py": {},
    "LID-DS-master/algorithms/main_performance_csv.py": {},
    "LID-DS-master/algorithms/performance_measurement.py": {
        "Performance.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "create_alarms": []
            }
        },
        "Performance.set_threshold": {
            "name": "set_threshold",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "threshold": []
            }
        },
        "Performance.set_exploit_time": {
            "name": "set_exploit_time",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "exploit_time": []
            }
        },
        "Performance.analyze_syscall": {
            "name": "analyze_syscall",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": [],
                "anomaly_score": []
            }
        },
        "Performance.add": {
            "name": "add",
            "location": 104,
            "return": [],
            "arguments": {
                "left": [],
                "right": []
            }
        },
        "Performance.new_recording": {
            "name": "new_recording",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "recording": []
            }
        },
        "Performance.__repr__": {
            "name": "__repr__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Performance._cfp_start_exploits": {
            "name": "_cfp_start_exploits",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Performance._cfp_end_exploits": {
            "name": "_cfp_end_exploits",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Performance._cfp_start_normal": {
            "name": "_cfp_start_normal",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Performance._cfp_end_normal": {
            "name": "_cfp_end_normal",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Performance.get_cfp_indices": {
            "name": "get_cfp_indices",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Performance.get_results": {
            "name": "get_results",
            "location": 202,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/persistance.py": {
        "save_to_json": {
            "name": "save_to_json",
            "location": 6,
            "return": [],
            "arguments": {
                "result_dict": [],
                "path": []
            }
        },
        "load_from_json": {
            "name": "load_from_json",
            "location": 49,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "print_as_table": {
            "name": "print_as_table",
            "location": 59,
            "return": [],
            "arguments": {
                "results": [],
                "path": []
            }
        }
    },
    "LID-DS-master/algorithms/score_plot.py": {
        "ScorePlot.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "scenario_path": []
            }
        },
        "ScorePlot.new_recording": {
            "name": "new_recording",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "recording": []
            }
        },
        "ScorePlot.add_to_plot_data": {
            "name": "add_to_plot_data",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "score": [],
                "syscall": [],
                "cfa_indices": []
            }
        },
        "ScorePlot.feed_figure": {
            "name": "feed_figure",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScorePlot.show_plot": {
            "name": "show_plot",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "ScorePlot.save_plot": {
            "name": "save_plot",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "LID-DS-master/algorithms/som_generate_alarms_main.py": {},
    "LID-DS-master/algorithms/stide_generate_alarms_main.py": {},
    "LID-DS-master/algorithms/__init__.py": {},
    "LID-DS-master/algorithms/decision_engines/ae.py": {
        "AEDataset.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "AEDataset.__len__": {
            "name": "__len__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AEDataset.__getitem__": {
            "name": "__getitem__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "AENetwork.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "input_size": [],
                "hidden_size": []
            }
        },
        "AENetwork.forward": {
            "name": "forward",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "AE.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "input_vector": [],
                "hidden_size": [],
                "mode": [],
                "batch_size": []
            }
        },
        "AE.depends_on": {
            "name": "depends_on",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AE.train_on": {
            "name": "train_on",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "AE.val_on": {
            "name": "val_on",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "AE.fit": {
            "name": "fit",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AE._calculate": {
            "name": "_calculate",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "AE.new_recording": {
            "name": "new_recording",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/decision_engines/example_decision_engine.py": {
        "ExampleDecisionEngine.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExampleDecisionEngine.train_on": {
            "name": "train_on",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "input_array": []
            }
        },
        "ExampleDecisionEngine.fit": {
            "name": "fit",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExampleDecisionEngine.predict": {
            "name": "predict",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "input_array": []
            }
        }
    },
    "LID-DS-master/algorithms/decision_engines/lstm.py": {
        "LSTM.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "input_vector": [],
                "distinct_syscalls": [],
                "input_dim": [],
                "epochs": [],
                "hidden_layers": [],
                "hidden_dim": [],
                "batch_size": [],
                "model_path": [],
                "force_train": []
            }
        },
        "LSTM.depends_on": {
            "name": "depends_on",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LSTM._set_model": {
            "name": "_set_model",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "distinct_syscalls": [],
                "device": []
            }
        },
        "LSTM.train_on": {
            "name": "train_on",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "LSTM.val_on": {
            "name": "val_on",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "LSTM._create_train_data": {
            "name": "_create_train_data",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "LSTM.fit": {
            "name": "fit",
            "location": 176,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LSTM._calculate": {
            "name": "_calculate",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "LSTM._accuracy": {
            "name": "_accuracy",
            "location": 285,
            "return": [],
            "arguments": {
                "self": [],
                "outputs": [],
                "labels": []
            }
        },
        "LSTM.new_recording": {
            "name": "new_recording",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Net.__init__": {
            "name": "__init__",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "num_classes": [],
                "input_size": [],
                "hidden_size": [],
                "num_layers": [],
                "device": [],
                "batch_size": []
            }
        },
        "Net.forward": {
            "name": "forward",
            "location": 348,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "hidden": []
            }
        },
        "SyscallFeatureDataSet.__init__": {
            "name": "__init__",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "Y": []
            }
        },
        "SyscallFeatureDataSet.__len__": {
            "name": "__len__",
            "location": 388,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SyscallFeatureDataSet.__getitem__": {
            "name": "__getitem__",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        }
    },
    "LID-DS-master/algorithms/decision_engines/mlp.py": {
        "MLPDataset.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "MLPDataset.__len__": {
            "name": "__len__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MLPDataset.__getitem__": {
            "name": "__getitem__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "MLP.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "input_vector": [],
                "output_label": [],
                "hidden_size": [],
                "hidden_layers": [],
                "batch_size": [],
                "learning_rate": []
            }
        },
        "MLP.train_on": {
            "name": "train_on",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "MLP.val_on": {
            "name": "val_on",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "MLP.fit": {
            "name": "fit",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MLP._calculate": {
            "name": "_calculate",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "MLP.depends_on": {
            "name": "depends_on",
            "location": 244,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MLP.get_net_weights": {
            "name": "get_net_weights",
            "location": 248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Feedforward.__init__": {
            "name": "__init__",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "input_size": [],
                "hidden_size": [],
                "output_size": [],
                "hidden_layers": []
            }
        },
        "Feedforward._get_mlp_sequence": {
            "name": "_get_mlp_sequence",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "hidden_layers": []
            }
        }
    },
    "LID-DS-master/algorithms/decision_engines/scg.py": {
        "SystemCallGraph.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "thread_aware": [],
                "thread_wise_graphs": []
            }
        },
        "SystemCallGraph.depends_on": {
            "name": "depends_on",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemCallGraph.train_on": {
            "name": "train_on",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "SystemCallGraph.fit": {
            "name": "fit",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SystemCallGraph._calculate": {
            "name": "_calculate",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "SystemCallGraph.new_recording": {
            "name": "new_recording",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/decision_engines/som.py": {
        "Som.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "input_vector": [],
                "epochs": [],
                "sigma": [],
                "learning_rate": [],
                "max_size": [],
                "size": []
            }
        },
        "Som.depends_on": {
            "name": "depends_on",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Som._get_or_estimate_som_size": {
            "name": "_get_or_estimate_som_size",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Som.train_on": {
            "name": "train_on",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Som.fit": {
            "name": "fit",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Som._calculate": {
            "name": "_calculate",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Som.show_distance_plot": {
            "name": "show_distance_plot",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Som.calculate_errors": {
            "name": "calculate_errors",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/decision_engines/stide.py": {
        "Stide.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "window_length": []
            }
        },
        "Stide.depends_on": {
            "name": "depends_on",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stide.train_on": {
            "name": "train_on",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Stide.fit": {
            "name": "fit",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stide._calculate": {
            "name": "_calculate",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Stide.new_recording": {
            "name": "new_recording",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/decision_engines/__init__.py": {},
    "LID-DS-master/algorithms/features/__init__.py": {},
    "LID-DS-master/algorithms/features/impl/collect_syscall.py": {
        "CollectSyscall.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "feature_list": []
            }
        },
        "CollectSyscall.depends_on": {
            "name": "depends_on",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollectSyscall._calculate": {
            "name": "_calculate",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "CollectSyscall.new_recording": {
            "name": "new_recording",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/concat.py": {
        "Concat.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "bbs_to_concat": []
            }
        },
        "Concat.depends_on": {
            "name": "depends_on",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Concat._calculate": {
            "name": "_calculate",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/concat_strings.py": {
        "ConcatStrings.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "bb": []
            }
        },
        "ConcatStrings.depends_on": {
            "name": "depends_on",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConcatStrings._calculate": {
            "name": "_calculate",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/data_buffer.py": {
        "DataBuffer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "decode": []
            }
        },
        "DataBuffer._calculate": {
            "name": "_calculate",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "DataBuffer.depends_on": {
            "name": "depends_on",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/dbscan.py": {
        "DBScan.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "bb_to_cluster": [],
                "eps": []
            }
        },
        "DBScan.depends_on": {
            "name": "depends_on",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DBScan.train_on": {
            "name": "train_on",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "DBScan.fit": {
            "name": "fit",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DBScan._calculate": {
            "name": "_calculate",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "DBScan._predict": {
            "name": "_predict",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "db": [],
                "x": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/dgram.py": {
        "Dgram.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "feature_list": [],
                "thread_aware": [],
                "min_length": []
            }
        },
        "Dgram.depends_on": {
            "name": "depends_on",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dgram._calculate": {
            "name": "_calculate",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Dgram._collect_features": {
            "name": "_collect_features",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "deque_of_dicts": []
            }
        },
        "Dgram.new_recording": {
            "name": "new_recording",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/difference.py": {
        "Difference.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "bbs_to_concider": []
            }
        },
        "Difference.depends_on": {
            "name": "depends_on",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Difference.val_on": {
            "name": "val_on",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Difference._calculate": {
            "name": "_calculate",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/entropy.py": {
        "Entropy.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "feature": []
            }
        },
        "Entropy.depends_on": {
            "name": "depends_on",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entropy._calculate": {
            "name": "_calculate",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Entropy._calc_entropy": {
            "name": "_calc_entropy",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "label": [],
                "unit": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/filedescriptor.py": {
        "FileDescriptor.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "FileDescriptor._calculate": {
            "name": "_calculate",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "FileDescriptor._get_fd_part": {
            "name": "_get_fd_part",
            "location": 61,
            "return": [],
            "arguments": {
                "fd": [],
                "mode": []
            }
        },
        "FileDescriptor.depends_on": {
            "name": "depends_on",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/flags.py": {
        "Flags.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Flags._calculate": {
            "name": "_calculate",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Flags.depends_on": {
            "name": "depends_on",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/int_embedding.py": {
        "IntEmbedding.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "building_block": []
            }
        },
        "IntEmbedding.depends_on": {
            "name": "depends_on",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntEmbedding.train_on": {
            "name": "train_on",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "IntEmbedding._calculate": {
            "name": "_calculate",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/maximum.py": {
        "Maximum.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "bbs_to_concider": []
            }
        },
        "Maximum.depends_on": {
            "name": "depends_on",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Maximum._calculate": {
            "name": "_calculate",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/minimum.py": {
        "Minimum.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "bbs_to_concider": []
            }
        },
        "Minimum.depends_on": {
            "name": "depends_on",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Minimum._calculate": {
            "name": "_calculate",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/min_max_scaling.py": {
        "MinMaxScaling.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "bb_to_scale": []
            }
        },
        "MinMaxScaling.depends_on": {
            "name": "depends_on",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MinMaxScaling.train_on": {
            "name": "train_on",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "MinMaxScaling.val_on": {
            "name": "val_on",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "MinMaxScaling.fit": {
            "name": "fit",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MinMaxScaling._calculate": {
            "name": "_calculate",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/mode.py": {
        "Mode.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mode._calculate": {
            "name": "_calculate",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Mode.depends_on": {
            "name": "depends_on",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/ngram.py": {
        "Ngram.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "feature_list": [],
                "thread_aware": [],
                "ngram_length": []
            }
        },
        "Ngram.depends_on": {
            "name": "depends_on",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ngram._calculate": {
            "name": "_calculate",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Ngram._concat": {
            "name": "_concat",
            "location": 75,
            "return": [],
            "arguments": {
                "source_value": [],
                "target_vector": []
            }
        },
        "Ngram.new_recording": {
            "name": "new_recording",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/ngram_minus_one.py": {
        "NgramMinusOne.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "ngram": [],
                "element_size": []
            }
        },
        "NgramMinusOne.depends_on": {
            "name": "depends_on",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NgramMinusOne._calculate": {
            "name": "_calculate",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/one_hot_encoding.py": {
        "OneHotEncoding.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "input": []
            }
        },
        "OneHotEncoding.depends_on": {
            "name": "depends_on",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OneHotEncoding.train_on": {
            "name": "train_on",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "OneHotEncoding.fit": {
            "name": "fit",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OneHotEncoding._calculate": {
            "name": "_calculate",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "OneHotEncoding.get_embedding_size": {
            "name": "get_embedding_size",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/one_minus_x.py": {
        "OneMinusX.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "OneMinusX.depends_on": {
            "name": "depends_on",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OneMinusX._calculate": {
            "name": "_calculate",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/path_evilness.py": {
        "PathEvilness.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "scenario_path": [],
                "path": [],
                "force_retrain": []
            }
        },
        "PathEvilness.depends_on": {
            "name": "depends_on",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PathEvilness.train_on": {
            "name": "train_on",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "PathEvilness._get_valid_fd_or_none": {
            "name": "_get_valid_fd_or_none",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "PathEvilness._fd_preprocessing": {
            "name": "_fd_preprocessing",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "fd": []
            }
        },
        "PathEvilness._build_file_tree": {
            "name": "_build_file_tree",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "path_list": []
            }
        },
        "PathEvilness._calculate": {
            "name": "_calculate",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "PathEvilness.fit": {
            "name": "fit",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PathEvilness._load": {
            "name": "_load",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/path_length.py": {
        "PathLength.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PathLength.depends_on": {
            "name": "depends_on",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PathLength._get_valid_fd_or_none": {
            "name": "_get_valid_fd_or_none",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "PathLength.train_on": {
            "name": "train_on",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "PathLength._calculate": {
            "name": "_calculate",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/positional_encoding.py": {
        "PositionalEncoding.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "number": [],
                "n": []
            }
        },
        "PositionalEncoding.depends_on": {
            "name": "depends_on",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PositionalEncoding._calculate": {
            "name": "_calculate",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "PositionalEncoding._pe": {
            "name": "_pe",
            "location": 34,
            "return": [],
            "arguments": {
                "position": [],
                "dimensions": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/position_in_file.py": {
        "PositionInFile.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PositionInFile._calculate": {
            "name": "_calculate",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "PositionInFile.depends_on": {
            "name": "depends_on",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/processID.py": {
        "ProcessID.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessID._calculate": {
            "name": "_calculate",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "ProcessID.depends_on": {
            "name": "depends_on",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/process_name.py": {
        "ProcessName.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessName._calculate": {
            "name": "_calculate",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "ProcessName.depends_on": {
            "name": "depends_on",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/repetition_remover.py": {
        "RepetitionRemover.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "input": [],
                "thread_aware": []
            }
        },
        "RepetitionRemover.depends_on": {
            "name": "depends_on",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RepetitionRemover._calculate": {
            "name": "_calculate",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "RepetitionRemover.new_recording": {
            "name": "new_recording",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/return_value.py": {
        "ReturnValue.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReturnValue.train_on": {
            "name": "train_on",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "ReturnValue._calculate": {
            "name": "_calculate",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "ReturnValue.depends_on": {
            "name": "depends_on",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/select.py": {
        "Select.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "input_vector": [],
                "start": [],
                "end": [],
                "step": []
            }
        },
        "Select.depends_on": {
            "name": "depends_on",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Select._calculate": {
            "name": "_calculate",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/stream_average.py": {
        "StreamAverage.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "feature": [],
                "thread_aware": [],
                "window_length": []
            }
        },
        "StreamAverage.depends_on": {
            "name": "depends_on",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamAverage._calculate": {
            "name": "_calculate",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/stream_maximum.py": {
        "StreamMaximum.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "feature": [],
                "thread_aware": [],
                "window_length": []
            }
        },
        "StreamMaximum.depends_on": {
            "name": "depends_on",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamMaximum._calculate": {
            "name": "_calculate",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "StreamMaximum.new_recording": {
            "name": "new_recording",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/stream_minimum.py": {
        "StreamMinimum.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "feature": [],
                "thread_aware": [],
                "window_length": []
            }
        },
        "StreamMinimum.depends_on": {
            "name": "depends_on",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamMinimum._calculate": {
            "name": "_calculate",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "StreamMinimum.new_recording": {
            "name": "new_recording",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/stream_product.py": {
        "StreamProduct.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "feature": [],
                "thread_aware": [],
                "window_length": []
            }
        },
        "StreamProduct.depends_on": {
            "name": "depends_on",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamProduct._calculate": {
            "name": "_calculate",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "StreamProduct.new_recording": {
            "name": "new_recording",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/stream_sum.py": {
        "StreamSum.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "feature": [],
                "thread_aware": [],
                "window_length": []
            }
        },
        "StreamSum.depends_on": {
            "name": "depends_on",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamSum._calculate": {
            "name": "_calculate",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "StreamSum.new_recording": {
            "name": "new_recording",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/stream_variance.py": {
        "StreamVariance.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "ngram": []
            }
        },
        "StreamVariance.depends_on": {
            "name": "depends_on",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamVariance._calculate": {
            "name": "_calculate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/sum.py": {
        "Sum.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "bbs_to_concider": []
            }
        },
        "Sum.depends_on": {
            "name": "depends_on",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sum.val_on": {
            "name": "val_on",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Sum._calculate": {
            "name": "_calculate",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/syscalls_in_time_window.py": {
        "SyscallsInTimeWindow.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "window_length_in_s": []
            }
        },
        "SyscallsInTimeWindow.depends_on": {
            "name": "depends_on",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SyscallsInTimeWindow.train_on": {
            "name": "train_on",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "SyscallsInTimeWindow.fit": {
            "name": "fit",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SyscallsInTimeWindow._calculate": {
            "name": "_calculate",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "SyscallsInTimeWindow.new_recording": {
            "name": "new_recording",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/syscall_name.py": {
        "SyscallName.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SyscallName._calculate": {
            "name": "_calculate",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "SyscallName.depends_on": {
            "name": "depends_on",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/syscall_start_end_times.py": {
        "StartEndTimes.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "mode": []
            }
        },
        "StartEndTimes.depends_on": {
            "name": "depends_on",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StartEndTimes._calculate": {
            "name": "_calculate",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "StartEndTimes.new_recording": {
            "name": "new_recording",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/threadID.py": {
        "ThreadID.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThreadID._calculate": {
            "name": "_calculate",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "ThreadID.depends_on": {
            "name": "depends_on",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/thread_change_flag.py": {
        "ThreadChangeFlag.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "ngram": []
            }
        },
        "ThreadChangeFlag.depends_on": {
            "name": "depends_on",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThreadChangeFlag._calculate": {
            "name": "_calculate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "ThreadChangeFlag.new_recording": {
            "name": "new_recording",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/timestamp.py": {
        "Timestamp.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timestamp._calculate": {
            "name": "_calculate",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "Timestamp.depends_on": {
            "name": "depends_on",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/time_delta.py": {
        "TimeDelta.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "thread_aware": []
            }
        },
        "TimeDelta.depends_on": {
            "name": "depends_on",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeDelta.train_on": {
            "name": "train_on",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "TimeDelta.fit": {
            "name": "fit",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeDelta._calculate": {
            "name": "_calculate",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "TimeDelta._calc_delta": {
            "name": "_calc_delta",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "current_time": [],
                "thread_id": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/unknown_flags.py": {
        "UnknownFlags.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnknownFlags.depends_on": {
            "name": "depends_on",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnknownFlags.train_on": {
            "name": "train_on",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "UnknownFlags._calculate": {
            "name": "_calculate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/w2v_embedding.py": {
        "W2VEmbedding.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "word": [],
                "vector_size": [],
                "window_size": [],
                "epochs": [],
                "distinct": [],
                "thread_aware": [],
                "unknown_input_value": []
            }
        },
        "W2VEmbedding.depends_on": {
            "name": "depends_on",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "W2VEmbedding.train_on": {
            "name": "train_on",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        },
        "W2VEmbedding.fit": {
            "name": "fit",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "W2VEmbedding._calculate": {
            "name": "_calculate",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "syscall": []
            }
        }
    },
    "LID-DS-master/algorithms/features/impl/__init__.py": {},
    "LID-DS-master/algorithms/features/impl/test/test_avg.py": {
        "test_avg": {
            "name": "test_avg",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_collect_syscall.py": {
        "test_collect_syscall": {
            "name": "test_collect_syscall",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_concat_string.py": {
        "test_concat_strings": {
            "name": "test_concat_strings",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_data_buffer.py": {
        "test_data_buffer": {
            "name": "test_data_buffer",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_entropy.py": {
        "test_entropy": {
            "name": "test_entropy",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_filedescriptor.py": {
        "test_filedescriptor": {
            "name": "test_filedescriptor",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_int_embedding.py": {
        "test_int_embedding": {
            "name": "test_int_embedding",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_maximum.py": {
        "test_maximum": {
            "name": "test_maximum",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_minimum.py": {
        "test_minimum": {
            "name": "test_minimum",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_multiply.py": {
        "test_multiply": {
            "name": "test_multiply",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_ngram.py": {
        "test_ngram": {
            "name": "test_ngram",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_ngram_minus_one.py": {
        "test_ngram_minus_one": {
            "name": "test_ngram_minus_one",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_path_evilness.py": {
        "helper": {
            "name": "helper",
            "location": 5,
            "return": [],
            "arguments": {
                "syscall": [],
                "path_evil": []
            }
        },
        "test_path_evilness": {
            "name": "test_path_evilness",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_process_id.py": {
        "test_process_id": {
            "name": "test_process_id",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_return_value.py": {
        "test_return_value": {
            "name": "test_return_value",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_select.py": {
        "test_select": {
            "name": "test_select",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_stream_sum.py": {
        "test_stream_sum": {
            "name": "test_stream_sum",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_sum.py": {
        "test_sum": {
            "name": "test_sum",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_syscalls_in_time_window.py": {
        "test_syscalls_in_time_window": {
            "name": "test_syscalls_in_time_window",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_syscall_name.py": {
        "test_syscall_name_extract": {
            "name": "test_syscall_name_extract",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_threadID.py": {
        "test_thread_id": {
            "name": "test_thread_id",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_thread_change_flag.py": {
        "test_thread_change_flag": {
            "name": "test_thread_change_flag",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_time_delta.py": {
        "test_time_delta": {
            "name": "test_time_delta",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_unknown_flag.py": {
        "test_unknown_flag": {
            "name": "test_unknown_flag",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/test_w2v_embedding.py": {
        "test_w2v_embedding": {
            "name": "test_w2v_embedding",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/features/impl/test/__init__.py": {},
    "LID-DS-master/algorithms/test/test_alarms.py": {
        "test_alarms": {
            "name": "test_alarms",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/test/test_persistance.py": {
        "test_persistance": {
            "name": "test_persistance",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/algorithms/util/Singleton.py": {
        "Singleton.__call__": {
            "name": "__call__",
            "location": 7,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "LID-DS-master/algorithms/util/__init__.py": {},
    "LID-DS-master/dataloader/base_data_loader.py": {
        "BaseDataLoader.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "scenario_path": [],
                "direction": []
            }
        },
        "BaseDataLoader.training_data": {
            "name": "training_data",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDataLoader.validation_data": {
            "name": "validation_data",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDataLoader.test_data": {
            "name": "test_data",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDataLoader.extract_recordings": {
            "name": "extract_recordings",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "category": []
            }
        },
        "BaseDataLoader.collect_metadata": {
            "name": "collect_metadata",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/base_recording.py": {
        "BaseRecording.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRecording.syscalls": {
            "name": "syscalls",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRecording.packets": {
            "name": "packets",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRecording.resource_stats": {
            "name": "resource_stats",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRecording.metadata": {
            "name": "metadata",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseRecording.check_recording": {
            "name": "check_recording",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/dataloader_factory.py": {
        "dataloader_factory": {
            "name": "dataloader_factory",
            "location": 10,
            "return": [],
            "arguments": {
                "scenario_path": [],
                "direction": []
            }
        },
        "raise_value_error": {
            "name": "raise_value_error",
            "location": 60,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/dataloader/dataloader_real_world.py": {
        "get_type_of_recording": {
            "name": "get_type_of_recording",
            "location": 25,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "get_file_name": {
            "name": "get_file_name",
            "location": 40,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "convert_all_scap": {
            "name": "convert_all_scap",
            "location": 51,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "DataLoaderRealWorld.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "scenario_path": [],
                "direction": []
            }
        },
        "DataLoaderRealWorld.training_data": {
            "name": "training_data",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoaderRealWorld.validation_data": {
            "name": "validation_data",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoaderRealWorld.test_data": {
            "name": "test_data",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoaderRealWorld.extract_recordings": {
            "name": "extract_recordings",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "recording_type": []
            }
        },
        "DataLoaderRealWorld.collect_metadata": {
            "name": "collect_metadata",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoaderRealWorld.distinct_syscalls_training_data": {
            "name": "distinct_syscalls_training_data",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/data_loader_2019.py": {
        "DataLoader2019.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "scenario_path": [],
                "direction": []
            }
        },
        "DataLoader2019.training_data": {
            "name": "training_data",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoader2019.validation_data": {
            "name": "validation_data",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoader2019.test_data": {
            "name": "test_data",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoader2019.extract_recordings": {
            "name": "extract_recordings",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoader2019.distinct_syscalls_training_data": {
            "name": "distinct_syscalls_training_data",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/data_loader_2021.py": {
        "get_file_name": {
            "name": "get_file_name",
            "location": 27,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "get_type_of_recording": {
            "name": "get_type_of_recording",
            "location": 41,
            "return": [],
            "arguments": {
                "json_dict": []
            }
        },
        "DataLoader2021.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "scenario_path": [],
                "direction": []
            }
        },
        "DataLoader2021.training_data": {
            "name": "training_data",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "recording_type": []
            }
        },
        "DataLoader2021.validation_data": {
            "name": "validation_data",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "recording_type": []
            }
        },
        "DataLoader2021.test_data": {
            "name": "test_data",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "recording_type": []
            }
        },
        "DataLoader2021.extract_recordings": {
            "name": "extract_recordings",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "recording_type": []
            }
        },
        "DataLoader2021.collect_metadata": {
            "name": "collect_metadata",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataLoader2021.distinct_syscalls_training_data": {
            "name": "distinct_syscalls_training_data",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/direction.py": {},
    "LID-DS-master/dataloader/recording_2019.py": {
        "Recording2019.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "recording_data_list": [],
                "base_path": [],
                "direction": []
            }
        },
        "Recording2019.syscalls": {
            "name": "syscalls",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recording2019._collect_metadata": {
            "name": "_collect_metadata",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recording2019.metadata": {
            "name": "metadata",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recording2019._calc_absolute_exploit_time": {
            "name": "_calc_absolute_exploit_time",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/recording_2021.py": {
        "Recording2021.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "name": [],
                "direction": []
            }
        },
        "Recording2021.syscalls": {
            "name": "syscalls",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recording2021.packets": {
            "name": "packets",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recording2021.resource_stats": {
            "name": "resource_stats",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recording2021.metadata": {
            "name": "metadata",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Recording2021.check_recording": {
            "name": "check_recording",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/recording_real_world.py": {
        "RecordingRealWorld.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "path": [],
                "direction": []
            }
        },
        "RecordingRealWorld.syscalls": {
            "name": "syscalls",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RecordingRealWorld.metadata": {
            "name": "metadata",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RecordingRealWorld.check_recording": {
            "name": "check_recording",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/resource_statistic.py": {
        "ResourceStatistic.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "ResourceStatistic.timestamp_unix_in_s": {
            "name": "timestamp_unix_in_s",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceStatistic.timestamp_datetime": {
            "name": "timestamp_datetime",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceStatistic.cpu_usage": {
            "name": "cpu_usage",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceStatistic.memory_usage": {
            "name": "memory_usage",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceStatistic.network_received": {
            "name": "network_received",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceStatistic.network_send": {
            "name": "network_send",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceStatistic.storage_read": {
            "name": "storage_read",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceStatistic.storage_written": {
            "name": "storage_written",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/dataloader/syscall.py": {
        "Syscall.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.timestamp_unix_in_ns": {
            "name": "timestamp_unix_in_ns",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.timestamp_datetime": {
            "name": "timestamp_datetime",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.user_id": {
            "name": "user_id",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.process_id": {
            "name": "process_id",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.process_name": {
            "name": "process_name",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.thread_id": {
            "name": "thread_id",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.name": {
            "name": "name",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.direction": {
            "name": "direction",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.params": {
            "name": "params",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall.param": {
            "name": "param",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "param_name": [],
                "b64decode": []
            }
        }
    },
    "LID-DS-master/dataloader/syscall_2019.py": {
        "Syscall2019.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "recording_path": [],
                "syscall_line": [],
                "line_id": []
            }
        },
        "Syscall2019.timestamp_unix_in_ns": {
            "name": "timestamp_unix_in_ns",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.timestamp_datetime": {
            "name": "timestamp_datetime",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.user_id": {
            "name": "user_id",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.process_id": {
            "name": "process_id",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.process_name": {
            "name": "process_name",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.thread_id": {
            "name": "thread_id",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.name": {
            "name": "name",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.direction": {
            "name": "direction",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.params": {
            "name": "params",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2019.param": {
            "name": "param",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "param_name": []
            }
        }
    },
    "LID-DS-master/dataloader/syscall_2021.py": {
        "Syscall2021.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "recording_path": [],
                "syscall_line": [],
                "line_id": []
            }
        },
        "Syscall2021.timestamp_unix_in_ns": {
            "name": "timestamp_unix_in_ns",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.timestamp_datetime": {
            "name": "timestamp_datetime",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.user_id": {
            "name": "user_id",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.process_id": {
            "name": "process_id",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.process_name": {
            "name": "process_name",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.thread_id": {
            "name": "thread_id",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.name": {
            "name": "name",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.direction": {
            "name": "direction",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.params": {
            "name": "params",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Syscall2021.param": {
            "name": "param",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "param_name": [],
                "b64decode": []
            }
        }
    },
    "LID-DS-master/dataloader/__init__.py": {},
    "LID-DS-master/dataloader/test/test_dataloader_factory.py": {
        "test_dataloader_factory": {
            "name": "test_dataloader_factory",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "create_2019_dummy": {
            "name": "create_2019_dummy",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "create_2021_dummy": {
            "name": "create_2021_dummy",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "create_real_world_dummy": {
            "name": "create_real_world_dummy",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "create_invalid_dummy": {
            "name": "create_invalid_dummy",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "clean_up": {
            "name": "clean_up",
            "location": 80,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/dataloader/test/test_real_world_dataloader.py": {
        "test_real_world_dataloader": {
            "name": "test_real_world_dataloader",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/lid_ds/__init__.py": {},
    "LID-DS-master/lid_ds/analysis/analyze_syscalls.py": {
        "_find_end_of_system_call_event": {
            "name": "_find_end_of_system_call_event",
            "location": 3,
            "return": [],
            "arguments": {
                "event": [],
                "events": []
            }
        }
    },
    "LID-DS-master/lid_ds/analysis/analyze_sysdig_events.py": {
        "thread_events": {
            "name": "thread_events",
            "location": 3,
            "return": [],
            "arguments": {
                "sysdig_events": []
            }
        },
        "thread_events_for_thread_id": {
            "name": "thread_events_for_thread_id",
            "location": 7,
            "return": [],
            "arguments": {
                "sysdig_events": [],
                "thread_id": []
            }
        },
        "_distinct_thread_ids": {
            "name": "_distinct_thread_ids",
            "location": 11,
            "return": [],
            "arguments": {
                "sysdig_events": []
            }
        }
    },
    "LID-DS-master/lid_ds/analysis/main.py": {
        "main": {
            "name": "main",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/lid_ds/analysis/parse_scap.py": {
        "parse_scap": {
            "name": "parse_scap",
            "location": 12,
            "return": [],
            "arguments": {
                "rel_path": []
            }
        },
        "get_syscall_by_syscall": {
            "name": "get_syscall_by_syscall",
            "location": 29,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "handle_line": {
            "name": "handle_line",
            "location": 42,
            "return": [],
            "arguments": {
                "line": []
            }
        }
    },
    "LID-DS-master/lid_ds/analysis/__init__.py": {},
    "LID-DS-master/lid_ds/core/image.py": {
        "Image.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "command": [],
                "init_args": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/scenario.py": {
        "Scenario.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        },
        "Scenario.init_victim": {
            "name": "init_victim",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "Scenario.is_exploit": {
            "name": "is_exploit",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenario.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "victim": [],
                "normal": [],
                "exploit": [],
                "wait_times": [],
                "warmup_time": [],
                "recording_time": [],
                "exploit_start_time": [],
                "exploit_name": [],
                "storage_services": []
            }
        },
        "Scenario._container_init": {
            "name": "_container_init",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenario._warmup": {
            "name": "_warmup",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenario._recording": {
            "name": "_recording",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenario._postprocessing": {
            "name": "_postprocessing",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenario._teardown": {
            "name": "_teardown",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenario.__call__": {
            "name": "__call__",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scenario.__repr__": {
            "name": "__repr__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/__init__.py": {},
    "LID-DS-master/lid_ds/core/collector/collector.py": {
        "CollectorStorageService.store_dict": {
            "name": "store_dict",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "obj": []
            }
        },
        "CollectorError.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Collector.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Collector._calculate_time_value": {
            "name": "_calculate_time_value",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "source": []
            }
        },
        "Collector.set_meta": {
            "name": "set_meta",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "image": [],
                "recording_time": [],
                "is_exploit": [],
                "exploit_name": []
            }
        },
        "Collector.set_container_ready": {
            "name": "set_container_ready",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Collector.set_warmup_end": {
            "name": "set_warmup_end",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Collector.add_container": {
            "name": "add_container",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "role": [],
                "ip": []
            }
        },
        "Collector.set_exploit_time": {
            "name": "set_exploit_time",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": [],
                "source": []
            }
        },
        "Collector.set_recording_time": {
            "name": "set_recording_time",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "start_time": [],
                "end_time": []
            }
        },
        "Collector.attacker_ip": {
            "name": "attacker_ip",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Collector.write": {
            "name": "write",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "storage_services": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/collector/json_file_store.py": {
        "JSONFileStorage.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONFileStorage.store_dict": {
            "name": "store_dict",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "obj": []
            }
        },
        "JSONFileStorage.__del__": {
            "name": "__del__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/collector/mongo_db_store.py": {
        "MongoDBStorage.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "db_name": [],
                "host": [],
                "port": [],
                "username": [],
                "password": []
            }
        },
        "MongoDBStorage.store_dict": {
            "name": "store_dict",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "obj": []
            }
        },
        "MongoDBStorage.__del__": {
            "name": "__del__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/collector/__init__.py": {},
    "LID-DS-master/lid_ds/core/objects/attacker.py": {
        "ScenarioAttacker.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "image": []
            }
        },
        "ScenarioAttacker.start_container": {
            "name": "start_container",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScenarioAttacker.execute_exploit_at_time": {
            "name": "execute_exploit_at_time",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "execution_time": []
            }
        },
        "ScenarioAttacker.teardown": {
            "name": "teardown",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/objects/base.py": {
        "ScenarioContainerBase.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "image": []
            }
        },
        "ScenarioContainerBase.to_stdin": {
            "name": "to_stdin",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/objects/environment.py": {
        "ScenarioEnvironment.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/objects/meta.py": {
        "ScenarioMeta.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "exploit_time": [],
                "warmup_time": [],
                "recording_time": [],
                "exploit_name": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/objects/normal.py": {
        "ScenarioNormal.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "image": [],
                "wait_times": []
            }
        },
        "ScenarioNormal.start_containers": {
            "name": "start_containers",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScenarioNormal.start_simulation": {
            "name": "start_simulation",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScenarioNormal.teardown": {
            "name": "teardown",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScenarioNormal._simulate_container": {
            "name": "_simulate_container",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "wait_times": [],
                "name": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/objects/victim.py": {
        "kill_child": {
            "name": "kill_child",
            "location": 19,
            "return": [],
            "arguments": {
                "child": []
            }
        },
        "ScenarioVictim.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "image": []
            }
        },
        "ScenarioVictim.start_container": {
            "name": "start_container",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "check_if_available": [],
                "init": []
            }
        },
        "ScenarioVictim.record_container": {
            "name": "record_container",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "buffer_size": []
            }
        },
        "ScenarioVictim._sysdig": {
            "name": "_sysdig",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "buffer_size": []
            }
        },
        "ScenarioVictim._tcpdump": {
            "name": "_tcpdump",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScenarioVictim._resource_logger": {
            "name": "_resource_logger",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/core/objects/__init__.py": {},
    "LID-DS-master/lid_ds/data_models/syscall.py": {
        "SysCall.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "start_event": [],
                "stop_event": []
            }
        },
        "SysCall.type": {
            "name": "type",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.process": {
            "name": "process",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.executing_cpu": {
            "name": "executing_cpu",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.thread_id": {
            "name": "thread_id",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.duration": {
            "name": "duration",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.start_timestamp": {
            "name": "start_timestamp",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.end_timestamp": {
            "name": "end_timestamp",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.args": {
            "name": "args",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.res": {
            "name": "res",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall._get_table_rep_row": {
            "name": "_get_table_rep_row",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.__repr__": {
            "name": "__repr__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SysCall.summary": {
            "name": "summary",
            "location": 73,
            "return": [],
            "arguments": {
                "syscalls": []
            }
        }
    },
    "LID-DS-master/lid_ds/data_models/sysdig_event.py": {
        "SysdigEvent.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "sysdig_line": []
            }
        },
        "SysdigEvent.__repr__": {
            "name": "__repr__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/data_models/__init__.py": {},
    "LID-DS-master/lid_ds/export/export.py": {
        "remove_file": {
            "name": "remove_file",
            "location": 30,
            "return": [],
            "arguments": {
                "file_to_remove": []
            }
        },
        "create_subfolder": {
            "name": "create_subfolder",
            "location": 38,
            "return": [],
            "arguments": {
                "folder_to_create": []
            }
        },
        "get_type_of_run": {
            "name": "get_type_of_run",
            "location": 46,
            "return": [],
            "arguments": {
                "json_file_name": []
            }
        },
        "zip_files": {
            "name": "zip_files",
            "location": 74,
            "return": [],
            "arguments": {
                "json_file": []
            }
        },
        "convert_scap_to_sc": {
            "name": "convert_scap_to_sc",
            "location": 96,
            "return": [],
            "arguments": {
                "json_file": []
            }
        },
        "Exporter.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.move_files": {
            "name": "move_files",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "json_file": [],
                "run_type": [],
                "counts_dict": []
            }
        }
    },
    "LID-DS-master/lid_ds/export/zip.py": {
        "zip_files": {
            "name": "zip_files",
            "location": 9,
            "return": [],
            "arguments": {
                "json_file": []
            }
        }
    },
    "LID-DS-master/lid_ds/export/__init__.py": {},
    "LID-DS-master/lid_ds/helpers/names_generator.py": {
        "scenario_name": {
            "name": "scenario_name",
            "location": 58,
            "return": [],
            "arguments": {
                "env": []
            }
        }
    },
    "LID-DS-master/lid_ds/helpers/wait_until.py": {
        "wait_until": {
            "name": "wait_until",
            "location": 8,
            "return": [],
            "arguments": {
                "somepredicate": [],
                "timeout": [],
                "period": []
            }
        }
    },
    "LID-DS-master/lid_ds/helpers/__init__.py": {},
    "LID-DS-master/lid_ds/postprocessing/matcher.py": {
        "PostprocessingMatcher.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "pcap": [],
                "scap": [],
                "ip": []
            }
        },
        "PostprocessingMatcher._get_optimized_time": {
            "name": "_get_optimized_time",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "packet": []
            }
        },
        "PostprocessingMatcher.get_exact_attack_time": {
            "name": "get_exact_attack_time",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "matcher": []
            }
        }
    },
    "LID-DS-master/lid_ds/postprocessing/postprocessing.py": {
        "optimize_attack_time": {
            "name": "optimize_attack_time",
            "location": 12,
            "return": [],
            "arguments": {
                "image": []
            }
        }
    },
    "LID-DS-master/lid_ds/postprocessing/sysdig.py": {
        "PostprocessingSysdig.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "PostprocessingSysdig._start_subprocess": {
            "name": "_start_subprocess",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostprocessingSysdig._is_packet_data_similar": {
            "name": "_is_packet_data_similar",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "packet_data": [],
                "syscall_data": []
            }
        },
        "PostprocessingSysdig._extract_data": {
            "name": "_extract_data",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "PostprocessingSysdig.find_first_matching_syscalls": {
            "name": "find_first_matching_syscalls",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "packet": [],
                "start": []
            }
        }
    },
    "LID-DS-master/lid_ds/postprocessing/tcpdump.py": {
        "TCPPacketMatcher.matches_packet": {
            "name": "matches_packet",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "packet": []
            }
        },
        "TCPPacketPartsMatcher.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "required_parts": [],
                "forbidden_parts": []
            }
        },
        "TCPPacketPartsMatcher._contains_required": {
            "name": "_contains_required",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "payload": []
            }
        },
        "TCPPacketPartsMatcher._not_contains_forbidden": {
            "name": "_not_contains_forbidden",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "payload": []
            }
        },
        "TCPPacketPartsMatcher.matches_packet": {
            "name": "matches_packet",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "packet": []
            }
        },
        "PostprocessingTCP.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "ip": []
            }
        },
        "PostprocessingTCP.find_first": {
            "name": "find_first",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "after": []
            }
        },
        "PostprocessingTCP.find_first_after_matcher": {
            "name": "find_first_after_matcher",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "matcher": []
            }
        },
        "PostprocessingTCP.get_time_for_packet": {
            "name": "get_time_for_packet",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "packet": []
            }
        },
        "PostprocessingTCP._find_by_matcher": {
            "name": "_find_by_matcher",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "matcher": []
            }
        }
    },
    "LID-DS-master/lid_ds/postprocessing/__init__.py": {},
    "LID-DS-master/lid_ds/sim/dockerize.py": {
        "run_image": {
            "name": "run_image",
            "location": 19,
            "return": [],
            "arguments": {
                "image": [],
                "network": [],
                "name": [],
                "port_mapping": [],
                "command": [],
                "volumes": [],
                "privileged": []
            }
        },
        "show_logs": {
            "name": "show_logs",
            "location": 38,
            "return": [],
            "arguments": {
                "container": [],
                "logger": []
            }
        }
    },
    "LID-DS-master/lid_ds/sim/sampler.py": {
        "convert_to_wait_times": {
            "name": "convert_to_wait_times",
            "location": 6,
            "return": [],
            "arguments": {
                "series": [],
                "to_array": []
            }
        },
        "Sampler.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "dataset": []
            }
        },
        "Sampler.random_sampling": {
            "name": "random_sampling",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "length": [],
                "lower": [],
                "upper": []
            }
        },
        "Sampler.timerange_sampling": {
            "name": "timerange_sampling",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "length": []
            }
        },
        "Sampler.ip_sampling": {
            "name": "ip_sampling",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "length": []
            }
        },
        "Sampler.ip_timerange_sampling": {
            "name": "ip_timerange_sampling",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "length": [],
                "min_actions": []
            }
        },
        "Sampler.extraction_sampling": {
            "name": "extraction_sampling",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "length": []
            }
        }
    },
    "LID-DS-master/lid_ds/sim/schedule.py": {
        "uniform_K": {
            "name": "uniform_K",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "uniform_ALPHA": {
            "name": "uniform_ALPHA",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "uniform_THETA": {
            "name": "uniform_THETA",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "gen_schedule_wait_times": {
            "name": "gen_schedule_wait_times",
            "location": 38,
            "return": [],
            "arguments": {
                "total_duration": []
            }
        }
    },
    "LID-DS-master/lid_ds/sim/schedule_constants.py": {},
    "LID-DS-master/lid_ds/sim/__init__.py": {},
    "LID-DS-master/lid_ds/tools/analyze_dataset.py": {
        "load": {
            "name": "load",
            "location": 8,
            "return": [],
            "arguments": {
                "dataset": []
            }
        },
        "absolute": {
            "name": "absolute",
            "location": 15,
            "return": [],
            "arguments": {
                "df": []
            }
        },
        "ip_based": {
            "name": "ip_based",
            "location": 28,
            "return": [],
            "arguments": {
                "df": []
            }
        },
        "time_based": {
            "name": "time_based",
            "location": 45,
            "return": [],
            "arguments": {
                "df": []
            }
        },
        "pretty_format_timedelta": {
            "name": "pretty_format_timedelta",
            "location": 63,
            "return": [],
            "arguments": {
                "td": []
            }
        },
        "create_sampler": {
            "name": "create_sampler",
            "location": 77,
            "return": [],
            "arguments": {
                "dataset": []
            }
        },
        "analyze_dataset": {
            "name": "analyze_dataset",
            "location": 82,
            "return": [],
            "arguments": {
                "dataset": [],
                "runs": [],
                "user": [],
                "length": [],
                "entries_lower": [],
                "entries_upper": []
            }
        },
        "analyze_sampling_method": {
            "name": "analyze_sampling_method",
            "location": 101,
            "return": [],
            "arguments": {
                "runs": [],
                "sampler_func": [],
                "args": []
            }
        }
    },
    "LID-DS-master/lid_ds/tools/extract_apache_logs.py": {
        "parse_log_line": {
            "name": "parse_log_line",
            "location": 26,
            "return": [],
            "arguments": {
                "line": [],
                "v1": []
            }
        },
        "subset_to_df": {
            "name": "subset_to_df",
            "location": 44,
            "return": [],
            "arguments": {
                "subset": [],
                "v1": []
            }
        },
        "load_log_to_hdf": {
            "name": "load_log_to_hdf",
            "location": 51,
            "return": [],
            "arguments": {
                "log_path": [],
                "hdf_path": [],
                "v1": [],
                "limit": [],
                "zeroing": []
            }
        },
        "combine_ips_within_time": {
            "name": "combine_ips_within_time",
            "location": 112,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "combine_following_ips": {
            "name": "combine_following_ips",
            "location": 127,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "LID-DS-master/lid_ds/utils/docker_utils.py": {
        "get_host_port": {
            "name": "get_host_port",
            "location": 9,
            "return": [],
            "arguments": {
                "container": [],
                "port": [],
                "protocol": []
            }
        },
        "get_ip_address": {
            "name": "get_ip_address",
            "location": 14,
            "return": [],
            "arguments": {
                "container": []
            }
        },
        "format_command": {
            "name": "format_command",
            "location": 19,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "calc_cpu_usage": {
            "name": "calc_cpu_usage",
            "location": 29,
            "return": [],
            "arguments": {
                "pre_cpu": [],
                "pre_sys_cpu": [],
                "cpu": [],
                "sys_cpu": []
            }
        },
        "diff_or_none": {
            "name": "diff_or_none",
            "location": 38,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "ResourceLoggingThread.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        },
        "ResourceLoggingThread.stop_it": {
            "name": "stop_it",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResourceLoggingThread.run": {
            "name": "run",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/utils/log.py": {
        "_init_logger": {
            "name": "_init_logger",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "print_logs": {
            "name": "print_logs",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "stop": {
            "name": "stop",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "get_logger": {
            "name": "get_logger",
            "location": 47,
            "return": [],
            "arguments": {
                "name": [],
                "queue": []
            }
        },
        "ContainerLogger.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "queue": []
            }
        },
        "ContainerLogger.info": {
            "name": "info",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "ContainerLogger.debug": {
            "name": "debug",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "LID-DS-master/lid_ds/utils/singleton.py": {
        "Singleton.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "klass": []
            }
        },
        "Singleton.__call__": {
            "name": "__call__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/lid_ds/utils/__init__.py": {},
    "LID-DS-master/lid_ds/vis/syscall_vis.py": {
        "duration_vis": {
            "name": "duration_vis",
            "location": 5,
            "return": [],
            "arguments": {
                "syscalls": []
            }
        }
    },
    "LID-DS-master/lid_ds/vis/__init__.py": {},
    "LID-DS-master/scenarios/check_recordings.py": {
        "check_for_missing_files": {
            "name": "check_for_missing_files",
            "location": 13,
            "return": [],
            "arguments": {
                "path": [],
                "file": [],
                "missing": []
            }
        },
        "check_file_sizes": {
            "name": "check_file_sizes",
            "location": 25,
            "return": [],
            "arguments": {
                "path": [],
                "file": [],
                "small": []
            }
        },
        "check_each_file": {
            "name": "check_each_file",
            "location": 31,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "check_scenario": {
            "name": "check_scenario",
            "location": 62,
            "return": [],
            "arguments": {
                "base": [],
                "scenario": []
            }
        }
    },
    "LID-DS-master/scenarios/Bruteforce_CWE-307/main.py": {
        "Bruteforce_CWE_307.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "Bruteforce_CWE_307.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/Bruteforce_CWE-307/exploit/exploit.py": {},
    "LID-DS-master/scenarios/Bruteforce_CWE-307/normal/client.py": {
        "vprint": {
            "name": "vprint",
            "location": 14,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "heartbeat": {
            "name": "heartbeat",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "https_requests": {
            "name": "https_requests",
            "location": 38,
            "return": [],
            "arguments": {
                "post_user": [],
                "post_password": []
            }
        },
        "do_request": {
            "name": "do_request",
            "location": 51,
            "return": [],
            "arguments": {
                "post_user": [],
                "post_password": []
            }
        },
        "do_POST": {
            "name": "do_POST",
            "location": 62,
            "return": [],
            "arguments": {
                "post_user": [],
                "post_password": []
            }
        },
        "do_GET": {
            "name": "do_GET",
            "location": 87,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/Bruteforce_CWE-307/normal/heartbeat.py": {
        "Heartbeat.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "victim_ip": [],
                "port": [],
                "verbose": []
            }
        },
        "Heartbeat.h2bin": {
            "name": "h2bin",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Heartbeat.int2hex": {
            "name": "int2hex",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Heartbeat.create_hello": {
            "name": "create_hello",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat.create_hb": {
            "name": "create_hb",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat.recvall": {
            "name": "recvall",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "sock": [],
                "count": []
            }
        },
        "Heartbeat.hit_hb": {
            "name": "hit_hb",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Heartbeat.do_heartbeat": {
            "name": "do_heartbeat",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2012-2122/main.py": {
        "get_config_name": {
            "name": "get_config_name",
            "location": 50,
            "return": [],
            "arguments": {
                "speed": [],
                "extract": []
            }
        },
        "CVE_2012_2122.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2012_2122.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2012-2122/exploit/exploit.py": {
        "perform_exploit": {
            "name": "perform_exploit",
            "location": 9,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2012-2122/normal/normal.py": {
        "connect_to_db": {
            "name": "connect_to_db",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "insert": {
            "name": "insert",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "query": {
            "name": "query",
            "location": 40,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CVE-2014-0160/main.py": {
        "CVE_2014_0160.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2014_0160.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2014-0160/exploit/exploit.py": {},
    "LID-DS-master/scenarios/CVE-2014-0160/normal/client.py": {
        "vprint": {
            "name": "vprint",
            "location": 17,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "in_range": {
            "name": "in_range",
            "location": 25,
            "return": [],
            "arguments": {
                "value": [],
                "min_max": []
            }
        },
        "https_requests": {
            "name": "https_requests",
            "location": 29,
            "return": [],
            "arguments": {
                "post_user": [],
                "post_password": []
            }
        },
        "do_post": {
            "name": "do_post",
            "location": 55,
            "return": [],
            "arguments": {
                "post_user": [],
                "post_password": []
            }
        },
        "do_get": {
            "name": "do_get",
            "location": 80,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CVE-2014-0160/normal/heartbeat.py": {
        "Heartbeat.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "victim_ip": [],
                "port": [],
                "verbose": []
            }
        },
        "Heartbeat._h2bin": {
            "name": "_h2bin",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Heartbeat._int2hex": {
            "name": "_int2hex",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Heartbeat._create_hello": {
            "name": "_create_hello",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat._create_hb": {
            "name": "_create_hb",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat._recvall": {
            "name": "_recvall",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "sock": [],
                "count": []
            }
        },
        "Heartbeat._hit_hb": {
            "name": "_hit_hb",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Heartbeat.do_heartbeat": {
            "name": "do_heartbeat",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2017-12635_6/main.py": {
        "CouchDBChain.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CouchDBChain.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2017-12635_6/exploit/exploit.py": {},
    "LID-DS-master/scenarios/CVE-2017-12635_6/exploit/reverse-shell.py": {
        "read_all": {
            "name": "read_all",
            "location": 11,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "open_reverse_listener": {
            "name": "open_reverse_listener",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "get_url": {
            "name": "get_url",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CVE-2017-12635_6/normal/couchdb_min.py": {
        "Request.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "user": [],
                "password": []
            }
        },
        "Request.extend": {
            "name": "extend",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Request.get": {
            "name": "get",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Request.put": {
            "name": "put",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Request.post": {
            "name": "post",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Request.delete": {
            "name": "delete",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Request.head": {
            "name": "head",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Request._join_urls": {
            "name": "_join_urls",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "user": [],
                "password": []
            }
        },
        "Server.create": {
            "name": "create",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Server.get": {
            "name": "get",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Server.info": {
            "name": "info",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Database.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Database.all_ids": {
            "name": "all_ids",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Database.get": {
            "name": "get",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Database.delete": {
            "name": "delete",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Database.save": {
            "name": "save",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "doc": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2017-12635_6/normal/normal.py": {
        "_update_doc_data": {
            "name": "_update_doc_data",
            "location": 8,
            "return": [],
            "arguments": {
                "doc": []
            }
        },
        "connect": {
            "name": "connect",
            "location": 22,
            "return": [],
            "arguments": {
                "admin": []
            }
        },
        "query": {
            "name": "query",
            "location": 27,
            "return": [],
            "arguments": {
                "db": []
            }
        },
        "update_document": {
            "name": "update_document",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "delete_document": {
            "name": "delete_document",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "new_document": {
            "name": "new_document",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "wrong_login": {
            "name": "wrong_login",
            "location": 64,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CVE-2017-12635_6/victim/init.py": {
        "_generate_project": {
            "name": "_generate_project",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "init": {
            "name": "init",
            "location": 26,
            "return": [],
            "arguments": {
                "host": [],
                "logger": [],
                "valid_user": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2017-7529/main.py": {
        "CVE_2017_7529.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2017_7529.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2017-7529/exploit/exploit.py": {
        "Exploit.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Exploit.check": {
            "name": "check",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exploit.hexdump": {
            "name": "hexdump",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Exploit.execute": {
            "name": "execute",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2017-7529/normal/normal.py": {
        "random_browsing": {
            "name": "random_browsing",
            "location": 14,
            "return": [],
            "arguments": {
                "victim_url": [],
                "browser": []
            }
        },
        "follow_link": {
            "name": "follow_link",
            "location": 39,
            "return": [],
            "arguments": {
                "victim_url": [],
                "browser": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2018-3760/main.py": {
        "CVE_2018_3760.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2018_3760.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2018-3760/exploit/exploit.py": {
        "do_exploit": {
            "name": "do_exploit",
            "location": 7,
            "return": [],
            "arguments": {
                "victim_ip": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2018-3760/normal/normal.py": {
        "random_browsing": {
            "name": "random_browsing",
            "location": 16,
            "return": [],
            "arguments": {
                "victim_url": [],
                "browser": []
            }
        },
        "pick_random_link": {
            "name": "pick_random_link",
            "location": 38,
            "return": [],
            "arguments": {
                "victim_url": [],
                "browser": []
            }
        },
        "do_CRUD": {
            "name": "do_CRUD",
            "location": 64,
            "return": [],
            "arguments": {
                "browser": [],
                "link": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2019-5418/main.py": {
        "CVE_2019_5418.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2019_5418.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2019-5418/normal/randomwalk.py": {
        "visitSite": {
            "name": "visitSite",
            "location": 7,
            "return": [],
            "arguments": {
                "site": []
            }
        },
        "randomWalk": {
            "name": "randomWalk",
            "location": 15,
            "return": [],
            "arguments": {
                "sites": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-13942/main.py": {
        "CVE_2020_13942.init_victim": {
            "name": "init_victim",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2020_13942.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-13942/exploit/exploit.py": {
        "do_exploit": {
            "name": "do_exploit",
            "location": 7,
            "return": [],
            "arguments": {
                "victim_ip": [],
                "attack": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-13942/normal/bodies.py": {
        "return_body_for_endpoint": {
            "name": "return_body_for_endpoint",
            "location": 149,
            "return": [],
            "arguments": {
                "endpoint": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-13942/normal/normal.py": {
        "in_range": {
            "name": "in_range",
            "location": 10,
            "return": [],
            "arguments": {
                "value": [],
                "min_max": []
            }
        },
        "http_requests": {
            "name": "http_requests",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "do_post": {
            "name": "do_post",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "do_get": {
            "name": "do_get",
            "location": 55,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CVE-2020-23839/main.py": {
        "CVE_2020_23839.init_victim": {
            "name": "init_victim",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2020_23839.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-23839/exploit/reverse_shell.py": {
        "exec_reverse_shell_command": {
            "name": "exec_reverse_shell_command",
            "location": 8,
            "return": [],
            "arguments": {
                "victim_url": [],
                "command": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-23839/exploit/trick_admin.py": {
        "genXssPayload": {
            "name": "genXssPayload",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "stupid_admin": {
            "name": "stupid_admin",
            "location": 46,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-23839/normal/normal.py": {
        "do_admin_browsing": {
            "name": "do_admin_browsing",
            "location": 14,
            "return": [],
            "arguments": {
                "victim_url": [],
                "browser": []
            }
        },
        "do_user_browsing": {
            "name": "do_user_browsing",
            "location": 56,
            "return": [],
            "arguments": {
                "victim_url": [],
                "browser": []
            }
        },
        "follow_link": {
            "name": "follow_link",
            "location": 86,
            "return": [],
            "arguments": {
                "victim_url": [],
                "browser": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-9484/main.py": {
        "CVE_2020_9484.init_victim": {
            "name": "init_victim",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "CVE_2020_9484.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CVE-2020-9484/exploit/exploit.py": {
        "vprint": {
            "name": "vprint",
            "location": 11,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "read_all": {
            "name": "read_all",
            "location": 19,
            "return": [],
            "arguments": {
                "conn": []
            }
        },
        "upload_file": {
            "name": "upload_file",
            "location": 28,
            "return": [],
            "arguments": {
                "url": [],
                "payload": []
            }
        },
        "exploit": {
            "name": "exploit",
            "location": 50,
            "return": [],
            "arguments": {
                "url": [],
                "payload": []
            }
        },
        "start_listener": {
            "name": "start_listener",
            "location": 61,
            "return": [],
            "arguments": {}
        },
        "create_malicious_binary": {
            "name": "create_malicious_binary",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "create_payload": {
            "name": "create_payload",
            "location": 88,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CVE-2020-9484/normal/normal.py": {
        "vprint": {
            "name": "vprint",
            "location": 11,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "http_requests": {
            "name": "http_requests",
            "location": 19,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "upload_file": {
            "name": "upload_file",
            "location": 40,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "download_file": {
            "name": "download_file",
            "location": 63,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "unique_strings": {
            "name": "unique_strings",
            "location": 88,
            "return": [],
            "arguments": {
                "k": [],
                "ntokens": [],
                "pool": []
            }
        }
    },
    "LID-DS-master/scenarios/CWE-89-SQL-injection/main.py": {
        "SQLInjection.init_victim": {
            "name": "init_victim",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "SQLInjection.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/CWE-89-SQL-injection/exploit/exploit.py": {
        "start_attack": {
            "name": "start_attack",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "log_in": {
            "name": "log_in",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "log_off": {
            "name": "log_off",
            "location": 85,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CWE-89-SQL-injection/normal/normal.py": {
        "generate_random_string": {
            "name": "generate_random_string",
            "location": 17,
            "return": [],
            "arguments": {
                "size": [],
                "chars": []
            }
        },
        "random_browsing": {
            "name": "random_browsing",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "normal_step": {
            "name": "normal_step",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "do_things": {
            "name": "do_things",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "follow_link": {
            "name": "follow_link",
            "location": 103,
            "return": [],
            "arguments": {}
        },
        "log_in": {
            "name": "log_in",
            "location": 126,
            "return": [],
            "arguments": {}
        },
        "log_off": {
            "name": "log_off",
            "location": 148,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/CWE-89-SQL-injection/victim/dvwa_init.py": {},
    "LID-DS-master/scenarios/EPS_CWE-434/main.py": {
        "EPS_CWE_434.init_victim": {
            "name": "init_victim",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "EPS_CWE_434.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/EPS_CWE-434/exploit/exploit.py": {
        "send_file": {
            "name": "send_file",
            "location": 6,
            "return": [],
            "arguments": {
                "file": [],
                "victim": []
            }
        },
        "exploit": {
            "name": "exploit",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/EPS_CWE-434/normal/download_images.py": {
        "prepare_files": {
            "name": "prepare_files",
            "location": 7,
            "return": [],
            "arguments": {
                "url": [],
                "download_path": [],
                "image_number": []
            }
        }
    },
    "LID-DS-master/scenarios/EPS_CWE-434/normal/normal.py": {
        "do_normal": {
            "name": "do_normal",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "send_file": {
            "name": "send_file",
            "location": 20,
            "return": [],
            "arguments": {
                "file": [],
                "victim": []
            }
        }
    },
    "LID-DS-master/scenarios/EPS_CWE-434/victim/ImageConverter.py": {
        "HTTPRequestHandler.do_PUT": {
            "name": "do_PUT",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/scenarios/Juice-Shop/main.py": {
        "Juice.init_victim": {
            "name": "init_victim",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "Juice.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/Juice-Shop/exploit/run_attacker.py": {},
    "LID-DS-master/scenarios/Juice-Shop/exploit/sql_injection_user.py": {
        "NonExistingUser.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "NonExistingUser.run": {
            "name": "run",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/scenarios/Juice-Shop/exploit/userAction.py": {
        "User.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "email": [],
                "password": [],
                "user_number": [],
                "chrome_options": []
            }
        },
        "User.login": {
            "name": "login",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/scenarios/Juice-Shop/normal/userAction.py": {
        "vprint": {
            "name": "vprint",
            "location": 18,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "email": [],
                "password": [],
                "security_question": [],
                "user_number": [],
                "chrome_options": []
            }
        },
        "User.reset": {
            "name": "reset",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.register": {
            "name": "register",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.login": {
            "name": "login",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.logout": {
            "name": "logout",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.change_language": {
            "name": "change_language",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_product_basket_button": {
            "name": "get_product_basket_button",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "product_number": []
            }
        },
        "User.get_product_feedback_field": {
            "name": "get_product_feedback_field",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "product_number": []
            }
        },
        "User.put_products_in_basket": {
            "name": "put_products_in_basket",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "selected_products": []
            }
        },
        "User.leave_feedback": {
            "name": "leave_feedback",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "selected_products": []
            }
        },
        "User.complain": {
            "name": "complain",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "User.go_shopping": {
            "name": "go_shopping",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "max_products": []
            }
        },
        "User.checkout": {
            "name": "checkout",
            "location": 323,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.reload": {
            "name": "reload",
            "location": 538,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.random_action": {
            "name": "random_action",
            "location": 541,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/scenarios/PHP_CWE-434/main.py": {
        "PHP_CWE_434.init_victim": {
            "name": "init_victim",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "PHP_CWE_434.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/PHP_CWE-434/exploit/exploit.py": {
        "file_upload": {
            "name": "file_upload",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/PHP_CWE-434/normal/normal.py": {
        "generate_random_string": {
            "name": "generate_random_string",
            "location": 17,
            "return": [],
            "arguments": {
                "size": [],
                "chars": []
            }
        },
        "random_browsing": {
            "name": "random_browsing",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "normal_step": {
            "name": "normal_step",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "do_things": {
            "name": "do_things",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "follow_link": {
            "name": "follow_link",
            "location": 103,
            "return": [],
            "arguments": {}
        },
        "log_in": {
            "name": "log_in",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "log_off": {
            "name": "log_off",
            "location": 147,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/PHP_CWE-434/victim/dvwa_init.py": {},
    "LID-DS-master/scenarios/ZipSlip/main.py": {
        "ZipSlip.init_victim": {
            "name": "init_victim",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "container": [],
                "logger": []
            }
        },
        "ZipSlip.wait_for_availability": {
            "name": "wait_for_availability",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "container": []
            }
        }
    },
    "LID-DS-master/scenarios/ZipSlip/prepare_zips.py": {
        "prepare_files": {
            "name": "prepare_files",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "LID-DS-master/scenarios/ZipSlip/exploit/exploit.py": {},
    "LID-DS-master/scenarios/ZipSlip/normal/normal.py": {
        "send_file": {
            "name": "send_file",
            "location": 8,
            "return": [],
            "arguments": {
                "file": [],
                "victim": []
            }
        },
        "do_normal": {
            "name": "do_normal",
            "location": 14,
            "return": [],
            "arguments": {
                "file_list": [],
                "victim_ip": [],
                "victim_port": []
            }
        }
    },
    "LID-DS-master/scenarios/ZipSlip/victim/ZipService.py": {
        "HTTPRequestHandler.do_GET": {
            "name": "do_GET",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTTPRequestHandler.do_PUT": {
            "name": "do_PUT",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "LID-DS-master/tools/calc_statistic_resource.py": {
        "save_to_json": {
            "name": "save_to_json",
            "location": 28,
            "return": [],
            "arguments": {
                "results": [],
                "output_path": [],
                "scenario_name": []
            }
        },
        "update_stat_single": {
            "name": "update_stat_single",
            "location": 37,
            "return": [],
            "arguments": {
                "current": [],
                "stat": []
            }
        },
        "update_stat": {
            "name": "update_stat",
            "location": 61,
            "return": [],
            "arguments": {
                "stats_recording": [],
                "resource": []
            }
        },
        "set_default_stat": {
            "name": "set_default_stat",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "calc_stats_for_recording_type": {
            "name": "calc_stats_for_recording_type",
            "location": 140,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        },
        "calc_stats_recording": {
            "name": "calc_stats_recording",
            "location": 170,
            "return": [],
            "arguments": {
                "recordings": []
            }
        },
        "update_list_entry": {
            "name": "update_list_entry",
            "location": 195,
            "return": [],
            "arguments": {
                "current_stat": [],
                "stats": []
            }
        }
    },
    "LID-DS-master/tools/find_empty_recordings.py": {
        "save_to_json": {
            "name": "save_to_json",
            "location": 27,
            "return": [],
            "arguments": {
                "results": [],
                "output_path": []
            }
        },
        "append_to_textile": {
            "name": "append_to_textile",
            "location": 38,
            "return": [],
            "arguments": {
                "output_path": [],
                "line": []
            }
        },
        "find_empty_recordings": {
            "name": "find_empty_recordings",
            "location": 53,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        }
    },
    "LID-DS-master/tools/metadata_stats.py": {
        "save_to_json": {
            "name": "save_to_json",
            "location": 36,
            "return": [],
            "arguments": {
                "results": [],
                "output_path": [],
                "scenario_name": []
            }
        },
        "calc_stats_for_recording_type": {
            "name": "calc_stats_for_recording_type",
            "location": 47,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        },
        "update_values": {
            "name": "update_values",
            "location": 88,
            "return": [],
            "arguments": {
                "current_value": [],
                "stats": []
            }
        },
        "calc_avg": {
            "name": "calc_avg",
            "location": 112,
            "return": [],
            "arguments": {
                "count": [],
                "stats": []
            }
        }
    },
    "LID-DS-master/tools/packets_stats.py": {
        "save_to_json": {
            "name": "save_to_json",
            "location": 49,
            "return": [],
            "arguments": {
                "results": [],
                "output_path": [],
                "scenario_name": []
            }
        },
        "calc_average_from_list": {
            "name": "calc_average_from_list",
            "location": 60,
            "return": [],
            "arguments": {
                "lst": [],
                "count": []
            }
        },
        "calc_stats_for_recording_type": {
            "name": "calc_stats_for_recording_type",
            "location": 78,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        }
    },
    "LID-DS-master/tools/plot_stats.py": {},
    "LID-DS-master/tools/protocol_comparison_plot.py": {},
    "LID-DS-master/tools/remove_relative_timestamp.py": {},
    "LID-DS-master/tools/result_json_to_csv.py": {
        "create_header": {
            "name": "create_header",
            "location": 8,
            "return": [],
            "arguments": {
                "csv_path": [],
                "results": []
            }
        }
    },
    "LID-DS-master/tools/return_value_plot.py": {
        "save_to_json": {
            "name": "save_to_json",
            "location": 27,
            "return": [],
            "arguments": {
                "results": [],
                "scenario_name": []
            }
        },
        "calc_return_value_stats": {
            "name": "calc_return_value_stats",
            "location": 38,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        }
    },
    "LID-DS-master/tools/return_value_statistics.py": {},
    "LID-DS-master/tools/syscall_comparison_plot.py": {},
    "LID-DS-master/tools/syscall_stats.py": {
        "save_to_json": {
            "name": "save_to_json",
            "location": 50,
            "return": [],
            "arguments": {
                "results": [],
                "output_path": [],
                "scenario_name": []
            }
        },
        "calc_average_from_list": {
            "name": "calc_average_from_list",
            "location": 61,
            "return": [],
            "arguments": {
                "lst": [],
                "count": []
            }
        },
        "append_to_textile": {
            "name": "append_to_textile",
            "location": 79,
            "return": [],
            "arguments": {
                "output_path": [],
                "line": []
            }
        },
        "calc_stats_for_recording_type": {
            "name": "calc_stats_for_recording_type",
            "location": 94,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        }
    },
    "LID-DS-master/tools/time_delta.py": {
        "calc_time_deltas": {
            "name": "calc_time_deltas",
            "location": 14,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        },
        "_calc_delta": {
            "name": "_calc_delta",
            "location": 33,
            "return": [],
            "arguments": {
                "current_time": [],
                "syscall": [],
                "last_time": []
            }
        }
    },
    "LID-DS-master/tools/time_delta_values.py": {
        "calc_time_deltas": {
            "name": "calc_time_deltas",
            "location": 13,
            "return": [],
            "arguments": {
                "recording_list": [],
                "max_delta": [],
                "description": []
            }
        },
        "_calc_delta": {
            "name": "_calc_delta",
            "location": 34,
            "return": [],
            "arguments": {
                "current_time": [],
                "syscall": [],
                "last_time": []
            }
        },
        "calc_max_delta": {
            "name": "calc_max_delta",
            "location": 51,
            "return": [],
            "arguments": {
                "recording_list": [],
                "description": []
            }
        }
    },
    "LID-DS-master/tools/__init__.py": {},
    "LID-DS-master/tools/defect_recordings/count_defect_recordings.py": {},
    "LID-DS-master/tools/defect_recordings/remove_defect_recordings.py": {},
    "LID-DS-master/tools/real_world/recording_information.py": {}
}
{
    "MyPy-master/py3/rough_work.py": {},
    "MyPy-master/py3/3_strings_and_collections/01.py": {},
    "MyPy-master/py3/async_task_queue/sharing_messages.py": {},
    "MyPy-master/py3/async_task_queue/simple_pool.py": {
        "run": {
            "name": "run",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/async_task_queue/simple_queue.py": {
        "run": {
            "name": "run",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/async_task_queue/simple_task_queue.py": {
        "process_tasks": {
            "name": "process_tasks",
            "location": 11,
            "return": [],
            "arguments": {
                "task_queue": []
            }
        },
        "add_tasks": {
            "name": "add_tasks",
            "location": 18,
            "return": [],
            "arguments": {
                "task_queue": [],
                "number_of_tasks": []
            }
        },
        "run": {
            "name": "run",
            "location": 27,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/async_task_queue/tasks.py": {
        "save_file": {
            "name": "save_file",
            "location": 15,
            "return": [],
            "arguments": {
                "filename": [],
                "data": []
            }
        },
        "get_word_counts": {
            "name": "get_word_counts",
            "location": 22,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "MyPy-master/py3/beazly/ann.py": {
        "sum2": {
            "name": "sum2",
            "location": 2,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "MyPy-master/py3/beazly/mortgage.py": {},
    "MyPy-master/py3/beazly/nextbus.py": {},
    "MyPy-master/py3/beazly/reading.py": {},
    "MyPy-master/py3/beazly/varargs.py": {
        "foo": {
            "name": "foo",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/classes/001.py": {
        "Employee.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "first_name": [],
                "last_name": []
            }
        },
        "Employee.fullname": {
            "name": "fullname",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Employee.__str__": {
            "name": "__str__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/classes/abc_.py": {
        "Base.foo": {
            "name": "foo",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Base.bar": {
            "name": "bar",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Concrete.foo": {
            "name": "foo",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/classes/car.py": {
        "Car.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "color": [],
                "mileage": []
            }
        }
    },
    "MyPy-master/py3/classes/employee.py": {
        "Employee.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "first": [],
                "last": [],
                "pay": []
            }
        },
        "Employee.__str__": {
            "name": "__str__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/classes/iso6346.py": {
        "create": {
            "name": "create",
            "location": 6,
            "return": [],
            "arguments": {
                "owner_code": [],
                "serial": [],
                "category": []
            }
        },
        "check_digit": {
            "name": "check_digit",
            "location": 31,
            "return": [],
            "arguments": {
                "raw_code": []
            }
        },
        "code": {
            "name": "code",
            "location": 42,
            "return": [],
            "arguments": {
                "char": []
            }
        },
        "letter_code": {
            "name": "letter_code",
            "location": 52,
            "return": [],
            "arguments": {
                "letter": []
            }
        }
    },
    "MyPy-master/py3/classes/mro_chain.py": {
        "SimpleList.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "SimpleList.add": {
            "name": "add",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SimpleList.__getitem__": {
            "name": "__getitem__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "SimpleList.sort": {
            "name": "sort",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleList.__len__": {
            "name": "__len__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleList.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortedList.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "SortedList.add": {
            "name": "add",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SortedList.repr": {
            "name": "repr",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntList.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "IntList._validate": {
            "name": "_validate",
            "location": 41,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "IntList.add": {
            "name": "add",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "MyPy-master/py3/classes/multiple_inheritance.py": {
        "Base.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Base.f": {
            "name": "f",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sub.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sub.f": {
            "name": "f",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/classes/myDict.py": {
        "ConfigDict.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "ConfigDict.write_to_file": {
            "name": "write_to_file",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDict.__setitem__": {
            "name": "__setitem__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "val": []
            }
        },
        "ConfigDict.__getitem__": {
            "name": "__getitem__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ConfigDict.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/classes/myDict2.py": {},
    "MyPy-master/py3/classes/shipping.py": {},
    "MyPy-master/py3/classes/__init__.py": {
        "Car.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "color": [],
                "mileage": []
            }
        }
    },
    "MyPy-master/py3/closures_and_decorators/coroutines.py": {
        "async_is_prime": {
            "name": "async_is_prime",
            "location": 7,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "lucas": {
            "name": "lucas",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "async_search": {
            "name": "async_search",
            "location": 26,
            "return": [],
            "arguments": {
                "iterable": [],
                "predicate": []
            }
        },
        "async_sleep": {
            "name": "async_sleep",
            "location": 34,
            "return": [],
            "arguments": {
                "interval_seconds": []
            }
        },
        "async_repetitive_message": {
            "name": "async_repetitive_message",
            "location": 44,
            "return": [],
            "arguments": {
                "message": [],
                "interval_seconds": []
            }
        },
        "async_print_matches": {
            "name": "async_print_matches",
            "location": 50,
            "return": [],
            "arguments": {
                "iterable": [],
                "async_predicate": []
            }
        },
        "Task.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "routine": []
            }
        },
        "Scheduler.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.add": {
            "name": "add",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "routine": []
            }
        },
        "Scheduler.run_to_completion": {
            "name": "run_to_completion",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/closures_and_decorators/local_vars.py": {
        "raise_to": {
            "name": "raise_to",
            "location": 1,
            "return": [],
            "arguments": {
                "power": []
            }
        },
        "raise_to.raiser": {
            "name": "raiser",
            "location": 4,
            "return": [],
            "arguments": {
                "number": []
            }
        }
    },
    "MyPy-master/py3/context_manager/connection.py": {
        "start_transaction": {
            "name": "start_transaction",
            "location": 43,
            "return": [],
            "arguments": {
                "connection": []
            }
        },
        "Connection.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection._start_transaction": {
            "name": "_start_transaction",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection._commit_transaction": {
            "name": "_commit_transaction",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "xid": []
            }
        },
        "Connection._rollback_transaction": {
            "name": "_rollback_transaction",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "xid": []
            }
        },
        "Transaction.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "Transaction.commit": {
            "name": "commit",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Transaction.rollback": {
            "name": "rollback",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/context_manager/lcm.py": {},
    "MyPy-master/py3/context_manager/lcm2.py": {},
    "MyPy-master/py3/context_manager/transaction.py": {},
    "MyPy-master/py3/cs/basic_recursion.py": {
        "basic_recursion": {
            "name": "basic_recursion",
            "location": 1,
            "return": [],
            "arguments": {
                "max": [],
                "current": []
            }
        }
    },
    "MyPy-master/py3/cs/buble_sort.py": {
        "bubble_sort": {
            "name": "bubble_sort",
            "location": 2,
            "return": [],
            "arguments": {
                "arr": []
            }
        }
    },
    "MyPy-master/py3/cs/factorial.py": {
        "factorial": {
            "name": "factorial",
            "location": 1,
            "return": [],
            "arguments": {
                "n": []
            }
        }
    },
    "MyPy-master/py3/cs/fibonacci.py": {
        "fibonacci": {
            "name": "fibonacci",
            "location": 1,
            "return": [],
            "arguments": {
                "n": []
            }
        }
    },
    "MyPy-master/py3/cs/insertion_sort.py": {
        "divisor": {
            "name": "divisor",
            "location": 1,
            "return": [],
            "arguments": {
                "number": []
            }
        }
    },
    "MyPy-master/py3/cs50/cash.py": {},
    "MyPy-master/py3/data_structures/a_queue.py": {
        "Queue.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.__len__": {
            "name": "__len__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.enqueue": {
            "name": "enqueue",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Queue.dequeue": {
            "name": "dequeue",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.clear": {
            "name": "clear",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.__iter__": {
            "name": "__iter__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/data_structures/dicts.py": {},
    "MyPy-master/py3/data_structures/ordered_dicts.py": {},
    "MyPy-master/py3/decorators/simple_logger.py": {
        "logger": {
            "name": "logger",
            "location": 1,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "my_func": {
            "name": "my_func",
            "location": 10,
            "return": [],
            "arguments": {
                "num1": [],
                "num2": []
            }
        },
        "logger.wrapped": {
            "name": "wrapped",
            "location": 2,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/decorators/simple_timmer.py": {
        "timer": {
            "name": "timer",
            "location": 4,
            "return": [],
            "arguments": {
                "fn": []
            }
        },
        "fib": {
            "name": "fib",
            "location": 13,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "timer.wrapped": {
            "name": "wrapped",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/design_patterns/01interfaces.py": {},
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/currentkpis.py": {
        "CurrentKPIs.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "kpis": []
            }
        },
        "CurrentKPIs.update": {
            "name": "update",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "CurrentKPIs.display": {
            "name": "display",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CurrentKPIs.__exit__": {
            "name": "__exit__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/forecastkpis.py": {
        "ForecastKPIs.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "kpis": []
            }
        },
        "ForecastKPIs.update": {
            "name": "update",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "ForecastKPIs.display": {
            "name": "display",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ForecastKPIs.__exit__": {
            "name": "__exit__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/kpis.py": {
        "KPIs.open_tickets": {
            "name": "open_tickets",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.closed_tickets": {
            "name": "closed_tickets",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.new_tickets": {
            "name": "new_tickets",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.set_kpis": {
            "name": "set_kpis",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "open_tickets": [],
                "closed_tickets": [],
                "new_tickets": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/__init__.py": {},
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/__main__.py": {},
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/observer/observer_abc.py": {
        "AbsObserver.update": {
            "name": "update",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AbsObserver.__enter__": {
            "name": "__enter__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbsObserver.__exit__": {
            "name": "__exit__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/observer/subject_abc.py": {
        "AbsSubject.attach": {
            "name": "attach",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "observer": []
            }
        },
        "AbsSubject.detach": {
            "name": "detach",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "observer": []
            }
        },
        "AbsSubject.notify": {
            "name": "notify",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AbsSubject.__enter__": {
            "name": "__enter__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbsSubject.__exit__": {
            "name": "__exit__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Assignment/Solution/observer/__init__.py": {},
    "MyPy-master/py3/design_patterns/Observer/BeforeObserver/kpi_data.py": {},
    "MyPy-master/py3/design_patterns/Observer/BeforeObserver/__init__.py": {},
    "MyPy-master/py3/design_patterns/Observer/BeforeObserver/__main__.py": {},
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/currentkpis.py": {
        "CurrentKPIs.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "kpis": []
            }
        },
        "CurrentKPIs.update": {
            "name": "update",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CurrentKPIs.display": {
            "name": "display",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CurrentKPIs.__exit__": {
            "name": "__exit__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/forecastkpis.py": {
        "ForecastKPIs.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "kpis": []
            }
        },
        "ForecastKPIs.update": {
            "name": "update",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ForecastKPIs.display": {
            "name": "display",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ForecastKPIs.__exit__": {
            "name": "__exit__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/kpis.py": {
        "KPIs.open_tickets": {
            "name": "open_tickets",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.closed_tickets": {
            "name": "closed_tickets",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.new_tickets": {
            "name": "new_tickets",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.set_kpis": {
            "name": "set_kpis",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "open_tickets": [],
                "closed_tickets": [],
                "new_tickets": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/__init__.py": {},
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/__main__.py": {},
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/observer/observer_abc.py": {
        "AbsObserver.update": {
            "name": "update",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AbsObserver.__enter__": {
            "name": "__enter__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbsObserver.__exit__": {
            "name": "__exit__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/observer/subject_abc.py": {
        "AbsSubject.attach": {
            "name": "attach",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "observer": []
            }
        },
        "AbsSubject.detach": {
            "name": "detach",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "observer": []
            }
        },
        "AbsSubject.notify": {
            "name": "notify",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AbsSubject.__enter__": {
            "name": "__enter__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbsSubject.__exit__": {
            "name": "__exit__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/ContextObserver/observer/__init__.py": {},
    "MyPy-master/py3/design_patterns/Observer/Observer/currentkpis.py": {
        "CurrentKPIs.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "kpis": []
            }
        },
        "CurrentKPIs.update": {
            "name": "update",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CurrentKPIs.display": {
            "name": "display",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Observer/forecastkpis.py": {
        "ForecastKPIs.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "kpis": []
            }
        },
        "ForecastKPIs.update": {
            "name": "update",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ForecastKPIs.display": {
            "name": "display",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Observer/kpis.py": {
        "KPIs.open_tickets": {
            "name": "open_tickets",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.closed_tickets": {
            "name": "closed_tickets",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.new_tickets": {
            "name": "new_tickets",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KPIs.set_kpis": {
            "name": "set_kpis",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "open_tickets": [],
                "closed_tickets": [],
                "new_tickets": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Observer/__init__.py": {},
    "MyPy-master/py3/design_patterns/Observer/Observer/__main__.py": {},
    "MyPy-master/py3/design_patterns/Observer/Observer/observer/observer_abc.py": {
        "AbsObserver.update": {
            "name": "update",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Observer/observer/subject_abc.py": {
        "AbsSubject.attach": {
            "name": "attach",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "observer": []
            }
        },
        "AbsSubject.detach": {
            "name": "detach",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "observer": []
            }
        },
        "AbsSubject.notify": {
            "name": "notify",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "MyPy-master/py3/design_patterns/Observer/Observer/observer/__init__.py": {},
    "MyPy-master/py3/design_patterns/stategy/demo1.py": {},
    "MyPy-master/py3/design_patterns/stategy/demo2.py": {
        "AbsStrategy.calculate": {
            "name": "calculate",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "order": []
            }
        },
        "ShippingCost.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "strategy": []
            }
        },
        "ShippingCost.shipping_cost": {
            "name": "shipping_cost",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "order": []
            }
        },
        "FedExStrategy.calculate": {
            "name": "calculate",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "order": []
            }
        },
        "PostStrategy.calculate": {
            "name": "calculate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "order": []
            }
        },
        "UPSStrategy.calculate": {
            "name": "calculate",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "order": []
            }
        }
    },
    "MyPy-master/py3/exceptions/handler.py": {},
    "MyPy-master/py3/files/csvfiles.py": {},
    "MyPy-master/py3/functions/extended_args.py": {
        "hypervolume": {
            "name": "hypervolume",
            "location": 1,
            "return": [],
            "arguments": {
                "length": []
            }
        }
    },
    "MyPy-master/py3/functions/lambdas.py": {},
    "MyPy-master/py3/functions/tempCodeRunnerFile.py": {},
    "MyPy-master/py3/functions/resolver/resolver.py": {
        "Resolver.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolver.__call__": {
            "name": "__call__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "host": []
            }
        },
        "Resolver.clear": {
            "name": "clear",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolver.has_host": {
            "name": "has_host",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "host": []
            }
        }
    },
    "MyPy-master/py3/hackerrank/textwrap.py": {
        "wrap": {
            "name": "wrap",
            "location": 3,
            "return": [],
            "arguments": {
                "string": [],
                "max_width": []
            }
        }
    },
    "MyPy-master/py3/implementing_collections/learn_bisect.py": {},
    "MyPy-master/py3/implementing_collections/sorted_set.py": {
        "SortedSet.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "SortedSet.__contains__": {
            "name": "__contains__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SortedSet.__len__": {
            "name": "__len__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortedSet.__iter__": {
            "name": "__iter__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortedSet.__getitem__": {
            "name": "__getitem__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "SortedSet.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortedSet.__eq__": {
            "name": "__eq__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "rhs": []
            }
        },
        "SortedSet.__ne__": {
            "name": "__ne__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "rhs": []
            }
        },
        "SortedSet.__reversed__": {
            "name": "__reversed__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortedSet.index": {
            "name": "index",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "MyPy-master/py3/implementing_collections/test_sorted_set.py": {
        "TestConstruction.test_empty": {
            "name": "test_empty",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConstruction.test_from_sequence": {
            "name": "test_from_sequence",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConstruction.test_with_duplicated": {
            "name": "test_with_duplicated",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConstruction.test_from_iterable": {
            "name": "test_from_iterable",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConstruction.test_default_empty": {
            "name": "test_default_empty",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContainerProtocol.setUp": {
            "name": "setUp",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContainerProtocol.test_positive_contained": {
            "name": "test_positive_contained",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContainerProtocol.test_negative_contained": {
            "name": "test_negative_contained",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContainerProtocol.test_positive_not_contained": {
            "name": "test_positive_not_contained",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContainerProtocol.test_negative_not_contained": {
            "name": "test_negative_not_contained",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSizedProtocol.test_empty": {
            "name": "test_empty",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSizedProtocol.test_one": {
            "name": "test_one",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSizedProtocol.test_ten": {
            "name": "test_ten",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSizedProtocol.test_with_duplicates": {
            "name": "test_with_duplicates",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIterableProtocol.setUp": {
            "name": "setUp",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIterableProtocol.test_iter": {
            "name": "test_iter",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.setUp": {
            "name": "setUp",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_zero": {
            "name": "test_index_zero",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_four": {
            "name": "test_index_four",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_one_beyond_the_end": {
            "name": "test_index_one_beyond_the_end",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_minus_one": {
            "name": "test_index_minus_one",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_minus_five": {
            "name": "test_index_minus_five",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_one_before_the_beginning": {
            "name": "test_index_one_before_the_beginning",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_slice_from_start": {
            "name": "test_slice_from_start",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_slice_to_end": {
            "name": "test_slice_to_end",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_slice_empty": {
            "name": "test_slice_empty",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_slice_arbitrary": {
            "name": "test_slice_arbitrary",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_slice_full": {
            "name": "test_slice_full",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_reversed": {
            "name": "test_reversed",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_positive": {
            "name": "test_index_positive",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSequenceProtocol.test_index_negative": {
            "name": "test_index_negative",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReprProtocol.test_repr_empty": {
            "name": "test_repr_empty",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReprProtocol.test_repr_some": {
            "name": "test_repr_some",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEqualityProtocol.test_positive_equal": {
            "name": "test_positive_equal",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEqualityProtocol.test_negative_equal": {
            "name": "test_negative_equal",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEqualityProtocol.test_mismatch_type": {
            "name": "test_mismatch_type",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEqualityProtocol.test_identical": {
            "name": "test_identical",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConstruction.test_from_iterable.gen6842": {
            "name": "gen6842",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/iterations/chain.py": {
        "chain": {
            "name": "chain",
            "location": 1,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "MyPy-master/py3/iterations/first_hundred.py": {
        "FirstHundred.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FirstHundred.__next__": {
            "name": "__next__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FirstHundred.__iter__": {
            "name": "__iter__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/iterations/generators.py": {
        "hundred_number": {
            "name": "hundred_number",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/iterations/map_function.py": {
        "Trace.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Trace.__call__": {
            "name": "__call__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "Trace.__call__.wrap": {
            "name": "wrap",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/iterations/mario.py": {},
    "MyPy-master/py3/iterations/practice01.py": {
        "Player.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "year": [],
                "age": []
            }
        },
        "Player.__str__": {
            "name": "__str__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.__repr__": {
            "name": "__repr__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.get_students_from_file": {
            "name": "get_students_from_file",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "Player.create_from_file": {
            "name": "create_from_file",
            "location": 28,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "MyPy-master/py3/iterations/reduce_function.py": {},
    "MyPy-master/py3/iterations/simple.py": {
        "ExampleIterator.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "ExampleIterator.__iter__": {
            "name": "__iter__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExampleIterator.__next__": {
            "name": "__next__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/labs/annotate3rd_test.py": {
        "test_ann3rd": {
            "name": "test_ann3rd",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/annotate_test.py": {
        "test_ann": {
            "name": "test_ann",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/async_ctx_test.py": {
        "test_async.staller.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "test_async.closer.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "test_async.CloseMe.close": {
            "name": "close",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/labs/async_gen_test.py": {},
    "MyPy-master/py3/labs/async_iter_test.py": {},
    "MyPy-master/py3/labs/async_test.py": {
        "test_async_import": {
            "name": "test_async_import",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/context_manager.py": {
        "runner.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "runner.__enter__": {
            "name": "__enter__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "runner.__exit__": {
            "name": "__exit__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "ex": [],
                "val": [],
                "tab": []
            }
        }
    },
    "MyPy-master/py3/labs/cooroutine.py": {},
    "MyPy-master/py3/labs/enum1.py": {
        "Location.choices": {
            "name": "choices",
            "location": 10,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "MyPy-master/py3/labs/enum_test.py": {
        "get_rgb": {
            "name": "get_rgb",
            "location": 15,
            "return": [],
            "arguments": {
                "color": []
            }
        },
        "test_enum": {
            "name": "test_enum",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/exception_test.py": {
        "test_exception": {
            "name": "test_exception",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_exception.raise2": {
            "name": "raise2",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/format_test.py": {
        "test_format": {
            "name": "test_format",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/fstring_test.py": {
        "test_fstring": {
            "name": "test_fstring",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/gen_unpack_test.py": {
        "test_unpack": {
            "name": "test_unpack",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/keyword_test.py": {
        "test_kw": {
            "name": "test_kw",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/mul_test.py": {
        "test_mul": {
            "name": "test_mul",
            "location": 2,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/num_test.py": {
        "test_nums": {
            "name": "test_nums",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/other_test.py": {
        "test_other": {
            "name": "test_other",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "test_other.fn": {
            "name": "fn",
            "location": 13,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "MyPy-master/py3/labs/path_test.py": {
        "test": {
            "name": "test",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/print_test.py": {
        "test_print1": {
            "name": "test_print1",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_print2": {
            "name": "test_print2",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/py3code.py": {
        "force": {
            "name": "force",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "Character.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "speed": [],
                "jump": [],
                "power": []
            }
        },
        "Character.jump": {
            "name": "jump",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Character.speed": {
            "name": "speed",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Character.power": {
            "name": "power",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mario.speed": {
            "name": "speed",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Luigi.speed": {
            "name": "speed",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/labs/py3mt.py": {
        "force": {
            "name": "force",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "Character.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [],
            "arguments": {
                "self": [],
                "speed": [],
                "jump": [],
                "power": []
            }
        },
        "Character.jump": {
            "name": "jump",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Character.speed": {
            "name": "speed",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Character.power": {
            "name": "power",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mario.speed": {
            "name": "speed",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Luigi.speed": {
            "name": "speed",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/labs/py3pa.py": {
        "force": {
            "name": "force",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "Character.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "speed": [],
                "jump": [],
                "power": []
            }
        },
        "Character.jump": {
            "name": "jump",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Character.speed": {
            "name": "speed",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Character.power": {
            "name": "power",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mario.speed": {
            "name": "speed",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Luigi.speed": {
            "name": "speed",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/labs/runpa.py": {
        "test_pa": {
            "name": "test_pa",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/stat_test.py": {
        "test_stat": {
            "name": "test_stat",
            "location": 3,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/super_test.py": {
        "test_mario": {
            "name": "test_mario",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_mario.speed": {
            "name": "speed",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/labs/unicode_test.py": {
        "test_1": {
            "name": "test_1",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "test_2": {
            "name": "test_2",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_3": {
            "name": "test_3",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/unifile_test.py": {
        "test_bytes1": {
            "name": "test_bytes1",
            "location": 3,
            "return": [],
            "arguments": {}
        },
        "test_bytes2": {
            "name": "test_bytes2",
            "location": 12,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_encoding1": {
            "name": "test_encoding1",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_encoding": {
            "name": "test_encoding",
            "location": 34,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "MyPy-master/py3/labs/unpack_test.py": {
        "test_unpack": {
            "name": "test_unpack",
            "location": 2,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/venv_test.py": {
        "test_venv": {
            "name": "test_venv",
            "location": 2,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/labs/__init__.py": {},
    "MyPy-master/py3/learn_celery/task1.py": {
        "add": {
            "name": "add",
            "location": 10,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "MyPy-master/py3/learn_celery/__init__.py": {},
    "MyPy-master/py3/logging/logger.py": {},
    "MyPy-master/py3/messages/consumer.py": {
        "pdf_process_function": {
            "name": "pdf_process_function",
            "location": 5,
            "return": [],
            "arguments": {
                "msg": []
            }
        },
        "callback": {
            "name": "callback",
            "location": 22,
            "return": [],
            "arguments": {
                "ch": [],
                "method": [],
                "properties": [],
                "body": []
            }
        }
    },
    "MyPy-master/py3/messages/publisher.py": {},
    "MyPy-master/py3/mutability/accounts.py": {
        "add_balance": {
            "name": "add_balance",
            "location": 7,
            "return": [],
            "arguments": {
                "amount": [],
                "name": []
            }
        }
    },
    "MyPy-master/py3/object_serialization/json_.py": {},
    "MyPy-master/py3/oop/abstract.py": {
        "GetterSetter.set_val": {
            "name": "set_val",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "input": []
            }
        },
        "GetterSetter.get_val": {
            "name": "get_val",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/oop/employee.py": {
        "Person.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "fullname": []
            }
        }
    },
    "MyPy-master/py3/oop/inheritance.py": {
        "GetSetParent.set_val": {
            "name": "set_val",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "GetSetParent.get_val": {
            "name": "get_val",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GetSetParent.show_doc": {
            "name": "show_doc",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GetSetInt.set_val": {
            "name": "set_val",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "GetSetInt.show_doc": {
            "name": "show_doc",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/oop/logger.py": {
        "WriteFile.write": {
            "name": "write",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "LogFile.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "LogFile.write": {
            "name": "write",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "DelimFile.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "delimeter": []
            }
        },
        "DelimFile.write": {
            "name": "write",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        }
    },
    "MyPy-master/py3/oop/maxsize.py": {
        "MaxSizeList.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "maxsize": []
            }
        },
        "MaxSizeList.push": {
            "name": "push",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "MaxSizeList.get_list": {
            "name": "get_list",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/oop/num.py": {
        "average_marks": {
            "name": "average_marks",
            "location": 7,
            "return": [],
            "arguments": {
                "student": []
            }
        }
    },
    "MyPy-master/py3/phonebook/phonebook.py": {
        "Phonebook.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Phonebook.add": {
            "name": "add",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "number": []
            }
        },
        "Phonebook.lookup": {
            "name": "lookup",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Phonebook.clear": {
            "name": "clear",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/phonebook/test_phonebook.py": {
        "phonebook": {
            "name": "phonebook",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_lookup_entry_by_name": {
            "name": "test_lookup_entry_by_name",
            "location": 15,
            "return": [],
            "arguments": {
                "phonebook": []
            }
        },
        "test_missing_entry_raise_keyerror": {
            "name": "test_missing_entry_raise_keyerror",
            "location": 20,
            "return": [],
            "arguments": {
                "phonebook": []
            }
        }
    },
    "MyPy-master/py3/phonebook/__init__.py": {},
    "MyPy-master/py3/practice/01.py": {},
    "MyPy-master/py3/practice/02odd_even.py": {},
    "MyPy-master/py3/practice/03numbers_less_than.py": {
        "numbers_less_than_5": {
            "name": "numbers_less_than_5",
            "location": 1,
            "return": [],
            "arguments": {
                "numbers": []
            }
        }
    },
    "MyPy-master/py3/practice/04threads.py": {
        "ask_user": {
            "name": "ask_user",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "complex_computation": {
            "name": "complex_computation",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/practice/09.py": {},
    "MyPy-master/py3/practice/another.py": {},
    "MyPy-master/py3/python-beyond-basics/03-beyond-basic-functions/beyond-basic-functions-exercise-files/resolver1/resolver.py": {
        "Resolver.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolver.__call__": {
            "name": "__call__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "host": []
            }
        }
    },
    "MyPy-master/py3/python-beyond-basics/03-beyond-basic-functions/beyond-basic-functions-exercise-files/resolver2/resolver.py": {
        "Resolver.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolver.__call__": {
            "name": "__call__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "host": []
            }
        },
        "Resolver.clear": {
            "name": "clear",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Resolver.has_host": {
            "name": "has_host",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "host": []
            }
        }
    },
    "MyPy-master/py3/python-beyond-basics/05-properties-and-class-methods/properties-and-class-methods-exercise-files/properties-and-class-methods/iso6346.py": {
        "create": {
            "name": "create",
            "location": 6,
            "return": [],
            "arguments": {
                "owner_code": [],
                "serial": [],
                "category": []
            }
        },
        "check_digit": {
            "name": "check_digit",
            "location": 34,
            "return": [],
            "arguments": {
                "raw_code": []
            }
        },
        "code": {
            "name": "code",
            "location": 47,
            "return": [],
            "arguments": {
                "char": []
            }
        },
        "letter_code": {
            "name": "letter_code",
            "location": 59,
            "return": [],
            "arguments": {
                "letter": []
            }
        }
    },
    "MyPy-master/py3/python-beyond-basics/05-properties-and-class-methods/properties-and-class-methods-exercise-files/properties-and-class-methods/shipping.py": {
        "ShippingContainer._make_bic_code": {
            "name": "_make_bic_code",
            "location": 12,
            "return": [],
            "arguments": {
                "owner_code": [],
                "serial": []
            }
        },
        "ShippingContainer._get_next_serial": {
            "name": "_get_next_serial",
            "location": 17,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ShippingContainer.create_empty": {
            "name": "create_empty",
            "location": 23,
            "return": [],
            "arguments": {
                "cls": [],
                "owner_code": [],
                "length_ft": []
            }
        },
        "ShippingContainer.create_with_items": {
            "name": "create_with_items",
            "location": 27,
            "return": [],
            "arguments": {
                "cls": [],
                "owner_code": [],
                "length_ft": [],
                "items": []
            }
        },
        "ShippingContainer.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "owner_code": [],
                "length_ft": [],
                "contents": []
            }
        },
        "ShippingContainer.volume_ft3": {
            "name": "volume_ft3",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RefrigeratedShippingContainer._make_bic_code": {
            "name": "_make_bic_code",
            "location": 47,
            "return": [],
            "arguments": {
                "owner_code": [],
                "serial": []
            }
        },
        "RefrigeratedShippingContainer._c_to_f": {
            "name": "_c_to_f",
            "location": 53,
            "return": [],
            "arguments": {
                "celsius": []
            }
        },
        "RefrigeratedShippingContainer._f_to_c": {
            "name": "_f_to_c",
            "location": 57,
            "return": [],
            "arguments": {
                "fahrenheit": []
            }
        },
        "RefrigeratedShippingContainer.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "owner_code": [],
                "length_ft": [],
                "contents": [],
                "celsius": []
            }
        },
        "RefrigeratedShippingContainer.celsius": {
            "name": "celsius",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RefrigeratedShippingContainer.fahrenheit": {
            "name": "fahrenheit",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RefrigeratedShippingContainer.volume_ft3": {
            "name": "volume_ft3",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeatedRefrigeratedShippingContainer.celsius": {
            "name": "celsius",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/async_fn.py": {
        "mapper": {
            "name": "mapper",
            "location": 1,
            "return": [],
            "arguments": {
                "fn": [],
                "items": []
            }
        },
        "runner": {
            "name": "runner",
            "location": 9,
            "return": [],
            "arguments": {
                "gen": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/async_io.py": {},
    "MyPy-master/py3/python-concurrency/async_scheduler.py": {
        "Task.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "gen": []
            }
        },
        "Scheduler.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.add": {
            "name": "add",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "gen": []
            }
        },
        "Scheduler.run": {
            "name": "run",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/generators.py": {
        "countdown": {
            "name": "countdown",
            "location": 1,
            "return": [],
            "arguments": {
                "count_to": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/processes.py": {
        "ask_user": {
            "name": "ask_user",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "complex_calculation": {
            "name": "complex_calculation",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/queued_threads.py": {
        "increment_manager": {
            "name": "increment_manager",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "printer_manager": {
            "name": "printer_manager",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "increment_counter": {
            "name": "increment_counter",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/threads.py": {
        "ask_user": {
            "name": "ask_user",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "complex_calculation": {
            "name": "complex_calculation",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/threads_example.py": {
        "do_some_work": {
            "name": "do_some_work",
            "location": 4,
            "return": [],
            "arguments": {
                "val": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/thread_pool.py": {
        "task": {
            "name": "task",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "check_page": {
            "name": "check_page",
            "location": 18,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "main": {
            "name": "main",
            "location": 27,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/try_aiohttp.py": {},
    "MyPy-master/py3/python-concurrency/yielding_two_way.py": {
        "get_friend": {
            "name": "get_friend",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "greet": {
            "name": "greet",
            "location": 10,
            "return": [],
            "arguments": {
                "g": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/__init__.py": {},
    "MyPy-master/py3/python-concurrency/02/demos/python-concurrency-getting-started-master/test_thumbnail_maker.py": {
        "test_thumbnail_maker": {
            "name": "test_thumbnail_maker",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/02/demos/python-concurrency-getting-started-master/thumbnail_maker.py": {
        "ThumbnailMakerService.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "home_dir": []
            }
        },
        "ThumbnailMakerService.download_images": {
            "name": "download_images",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        },
        "ThumbnailMakerService.perform_resizing": {
            "name": "perform_resizing",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThumbnailMakerService.make_thumbnails": {
            "name": "make_thumbnails",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/03/demos/python-concurrency-getting-started-4cee6c44abb00c9a16ccde4a69ebbea1a9cd2b4b/test_thumbnail_maker.py": {
        "test_thumbnail_maker": {
            "name": "test_thumbnail_maker",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/03/demos/python-concurrency-getting-started-4cee6c44abb00c9a16ccde4a69ebbea1a9cd2b4b/thumbnail_maker.py": {
        "ThumbnailMakerService.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "home_dir": []
            }
        },
        "ThumbnailMakerService.download_image": {
            "name": "download_image",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThumbnailMakerService.download_images": {
            "name": "download_images",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        },
        "ThumbnailMakerService.perform_resizing": {
            "name": "perform_resizing",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThumbnailMakerService.make_thumbnails": {
            "name": "make_thumbnails",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/04/demos/python-concurrency-getting-started-develop-master/test_thumbnail_maker.py": {
        "test_thumbnail_maker": {
            "name": "test_thumbnail_maker",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/04/demos/python-concurrency-getting-started-develop-master/thumbnail_maker.py": {
        "ThumbnailMakerService.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "home_dir": []
            }
        },
        "ThumbnailMakerService.download_image": {
            "name": "download_image",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "dl_queue": [],
                "dl_size_lock": []
            }
        },
        "ThumbnailMakerService.download_images": {
            "name": "download_images",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        },
        "ThumbnailMakerService.perform_resizing": {
            "name": "perform_resizing",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThumbnailMakerService.make_thumbnails": {
            "name": "make_thumbnails",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        }
    },
    "MyPy-master/py3/python-concurrency/06/__init__.py": {},
    "MyPy-master/py3/python-concurrency/06/demos/python-concurrency-getting-started-develop-asyncio/test_thumbnail_maker.py": {
        "test_thumbnail_maker": {
            "name": "test_thumbnail_maker",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/python-concurrency/06/demos/python-concurrency-getting-started-develop-asyncio/thumbnail_maker.py": {
        "ThumbnailMakerService.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "home_dir": []
            }
        },
        "ThumbnailMakerService.download_images": {
            "name": "download_images",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        },
        "ThumbnailMakerService.perform_resizing": {
            "name": "perform_resizing",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ThumbnailMakerService.make_thumbnails": {
            "name": "make_thumbnails",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "img_url_list": []
            }
        }
    },
    "MyPy-master/py3/py_async/1_threads.py": {
        "ask_user": {
            "name": "ask_user",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "complex_calculation": {
            "name": "complex_calculation",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/py_async/asyncio_learn.py": {},
    "MyPy-master/py3/py_async/async_await.py": {},
    "MyPy-master/py3/py_async/fib.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [],
            "arguments": {
                "n": []
            }
        }
    },
    "MyPy-master/py3/py_async/generators.py": {
        "countdown": {
            "name": "countdown",
            "location": 1,
            "return": [],
            "arguments": {
                "n": []
            }
        }
    },
    "MyPy-master/py3/py_async/queued_threads.py": {
        "increment_manager": {
            "name": "increment_manager",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "printer_manager": {
            "name": "printer_manager",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "increment_counter": {
            "name": "increment_counter",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/py_async/receiving_throught_yield.py": {
        "greet": {
            "name": "greet",
            "location": 23,
            "return": [],
            "arguments": {
                "g": []
            }
        },
        "friend_upper": {
            "name": "friend_upper",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/py_async/threadpool.py": {},
    "MyPy-master/py3/py_collections/alma_mater_default_dict.py": {},
    "MyPy-master/py3/py_collections/collection_counter_get_values.py": {},
    "MyPy-master/py3/py_collections/counter.py": {},
    "MyPy-master/py3/py_collections/namedtuple_init_and_use.py": {},
    "MyPy-master/py3/reader/reader.py": {
        "Reader.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "Reader.close": {
            "name": "close",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reader.read": {
            "name": "read",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/reader/__init__.py": {},
    "MyPy-master/py3/reader/compressed/bzipped.py": {},
    "MyPy-master/py3/reader/compressed/gzipped.py": {},
    "MyPy-master/py3/reader/compressed/__init__.py": {},
    "MyPy-master/py3/recursion/recursive_sum.py": {
        "recursive_sum": {
            "name": "recursive_sum",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/scraping/middle_html.py": {
        "find_item_name": {
            "name": "find_item_name",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/scraping/simple_html.py": {
        "find_title": {
            "name": "find_title",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "find_list_items": {
            "name": "find_list_items",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "find_subtitle": {
            "name": "find_subtitle",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "other_paragraph": {
            "name": "other_paragraph",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/talkpy/closures.py": {
        "outer_func": {
            "name": "outer_func",
            "location": 1,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "outer_func.inner_func": {
            "name": "inner_func",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/talkpy/counting_generators.py": {
        "main": {
            "name": "main",
            "location": 2,
            "return": [],
            "arguments": {}
        },
        "even_numbers": {
            "name": "even_numbers",
            "location": 6,
            "return": [],
            "arguments": {
                "n": []
            }
        }
    },
    "MyPy-master/py3/talkpy/decorators.py": {
        "escaped_unicode": {
            "name": "escaped_unicode",
            "location": 1,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "city": {
            "name": "city",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "escaped_unicode.wrap": {
            "name": "wrap",
            "location": 2,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/talkpy/dictionary.py": {
        "print_items": {
            "name": "print_items",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/talkpy/generators.py": {
        "my_gen": {
            "name": "my_gen",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "rev_str": {
            "name": "rev_str",
            "location": 15,
            "return": [],
            "arguments": {
                "my_str": []
            }
        },
        "pow_three": {
            "name": "pow_three",
            "location": 39,
            "return": [],
            "arguments": {
                "max": []
            }
        },
        "odd_numbers": {
            "name": "odd_numbers",
            "location": 47,
            "return": [],
            "arguments": {
                "max": []
            }
        },
        "map_list": {
            "name": "map_list",
            "location": 54,
            "return": [],
            "arguments": {
                "func": [],
                "items": []
            }
        },
        "foo": {
            "name": "foo",
            "location": 59,
            "return": [],
            "arguments": {
                "title": []
            }
        },
        "html_tag": {
            "name": "html_tag",
            "location": 65,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "PowThree.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "maximum": []
            }
        },
        "PowThree.__iter__": {
            "name": "__iter__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PowThree.__next__": {
            "name": "__next__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "foo.bar": {
            "name": "bar",
            "location": 60,
            "return": [],
            "arguments": {
                "page": []
            }
        },
        "html_tag.inner_text": {
            "name": "inner_text",
            "location": 66,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "MyPy-master/py3/talkpy/generators2.py": {
        "fibonacci": {
            "name": "fibonacci",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "MyPy-master/py3/talkpy/iteration.py": {
        "ShoppingCart.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShoppingCart.add_item": {
            "name": "add_item",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "it": []
            }
        },
        "ShoppingCart.__iter__": {
            "name": "__iter__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CartItem.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "price": []
            }
        }
    },
    "MyPy-master/py3/talkpy/mem_hacking.py": {
        "MutableThing.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        },
        "ImmutableThing.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        }
    },
    "MyPy-master/py3/talkpy/numbers.py": {
        "number": {
            "name": "number",
            "location": 3,
            "return": [],
            "arguments": {
                "i": []
            }
        }
    },
    "MyPy-master/py3/talkpy/practice.py": {
        "numbers": {
            "name": "numbers",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "factorial": {
            "name": "factorial",
            "location": 16,
            "return": [],
            "arguments": {
                "n": []
            }
        }
    },
    "MyPy-master/py3/talkpy/slicing.py": {
        "fib": {
            "name": "fib",
            "location": 1,
            "return": [],
            "arguments": {
                "limit": []
            }
        }
    },
    "MyPy-master/py3/talkpy/string_formating.py": {},
    "MyPy-master/py3/talkpy/truthiness.py": {
        "TestableThing.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "TestableThing.__bool__": {
            "name": "__bool__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MyPy-master/py3/testing/double.py": {
        "doubleit": {
            "name": "doubleit",
            "location": 3,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "MyPy-master/py3/testing/test_double.py": {
        "test_doubleit": {
            "name": "test_doubleit",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "test_doubleit_type": {
            "name": "test_doubleit_type",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    }
}
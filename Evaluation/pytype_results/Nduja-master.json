{
    "Nduja-master/Nduja/__init__.py": {},
    "Nduja-master/Nduja/__main__.py": {
        "search_searchcode": {
            "name": "search_searchcode",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "formatfile": []
            }
        },
        "search_github": {
            "name": "search_github",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "formatfile": [],
                "tokens": []
            }
        },
        "search_twitter": {
            "name": "search_twitter",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "formatfile": [],
                "tokens": []
            }
        },
        "print_help": {
            "name": "print_help",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 57,
            "return": [
                "int"
            ],
            "arguments": {
                "argv": [
                    "List[str]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/.stub/bs4/__init__.py": {
        "BeautifulSoup.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "parser_type": []
            }
        },
        "BeautifulSoup.findAll": {
            "name": "findAll",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "tag": []
            }
        },
        "BeautifulSoup.body": {
            "name": "body",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/.stub/furl/__init__.py": {
        "furl": {
            "name": "furl",
            "location": 3,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "Nduja-master/Nduja/.stub/graph_tool/all.py": {
        "draw": {
            "name": "draw",
            "location": 7,
            "return": [],
            "arguments": {
                "G": []
            }
        },
        "graphviz_draw": {
            "name": "graphviz_draw",
            "location": 8,
            "return": [],
            "arguments": {
                "G": []
            }
        },
        "PropertyMap.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "pmap": [],
                "g": [],
                "key_type": []
            }
        },
        "PropertyMap.__getitem__": {
            "name": "__getitem__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "PropertyMap.__iter__": {
            "name": "__iter__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.__getitem__": {
            "name": "__getitem__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Vertex.__iter__": {
            "name": "__iter__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.all_edges": {
            "name": "all_edges",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.all_neighbors": {
            "name": "all_neighbors",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.in_degree": {
            "name": "in_degree",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "weight": []
            }
        },
        "Vertex.out_degree": {
            "name": "out_degree",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "weight": []
            }
        },
        "Vertex.in_neighbors": {
            "name": "in_neighbors",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.is_valid": {
            "name": "is_valid",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.out_neighbors": {
            "name": "out_neighbors",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Edge.__getitem__": {
            "name": "__getitem__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Edge.__iter__": {
            "name": "__iter__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Edge.source": {
            "name": "source",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Edge.target": {
            "name": "target",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Edge.is_valid": {
            "name": "is_valid",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Graph.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "g": [],
                "directed": [],
                "prune": [],
                "vorder": []
            }
        },
        "Graph.edge": {
            "name": "edge",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "u": [],
                "v": []
            }
        },
        "Graph.new_vertex_property": {
            "name": "new_vertex_property",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Graph.new_edge_property": {
            "name": "new_edge_property",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Graph.add_vertex": {
            "name": "add_vertex",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Graph.add_edge": {
            "name": "add_edge",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "u": [],
                "v": []
            }
        },
        "Graph.copy": {
            "name": "copy",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/.stub/graph_tool/__init__.py": {},
    "Nduja-master/Nduja/.stub/grequests/__init__.py": {
        "get": {
            "name": "get",
            "location": 13,
            "return": [],
            "arguments": {
                "q": []
            }
        },
        "map": {
            "name": "map",
            "location": 15,
            "return": [],
            "arguments": {
                "reqs": [],
                "exception_handler": []
            }
        },
        "imap": {
            "name": "imap",
            "location": 20,
            "return": [],
            "arguments": {
                "reqs": [],
                "exception_handler": []
            }
        }
    },
    "Nduja-master/Nduja/.stub/pause/__init__.py": {
        "until": {
            "name": "until",
            "location": 4,
            "return": [],
            "arguments": {
                "time": []
            }
        }
    },
    "Nduja-master/Nduja/.stub/twython/exceptions.py": {
        "TwythonError.msg": {
            "name": "msg",
            "location": 3,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TwythonRateLimitError.retry_after": {
            "name": "retry_after",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/.stub/twython/__init__.py": {
        "Twython.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        },
        "Twython.search": {
            "name": "search",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Twython.show": {
            "name": "show",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Twython.show_user": {
            "name": "show_user",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/.stub/web3/__init__.py": {
        "Web3.isAddress": {
            "name": "isAddress",
            "location": 5,
            "return": [],
            "arguments": {
                "address": []
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/abs_address_checker.py": {
        "AbsAddressChecker.address_check": {
            "name": "address_check",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "AbsAddressChecker.address_valid": {
            "name": "address_valid",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "AbsAddressChecker.get_status": {
            "name": "get_status",
            "location": 22,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/bch_address_checker.py": {
        "BchAddressChecker.decode_base58": {
            "name": "decode_base58",
            "location": 19,
            "return": [
                "bytes"
            ],
            "arguments": {
                "bc": [
                    "str"
                ],
                "length": [
                    "int"
                ]
            }
        },
        "BchAddressChecker.address_valid": {
            "name": "address_valid",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "bc": [
                    "str"
                ]
            }
        },
        "BchAddressChecker.address_search": {
            "name": "address_search",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "address": [
                    "str"
                ]
            }
        },
        "BchAddressChecker.address_check": {
            "name": "address_check",
            "location": 50,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/btc_address_checker.py": {
        "BtcAddressChecker.decode_base58": {
            "name": "decode_base58",
            "location": 17,
            "return": [
                "bytes"
            ],
            "arguments": {
                "bitcoin_address": [
                    "str"
                ],
                "length": [
                    "int"
                ]
            }
        },
        "BtcAddressChecker.address_valid": {
            "name": "address_valid",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "BtcAddressChecker.address_search": {
            "name": "address_search",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "address": [
                    "str"
                ]
            }
        },
        "BtcAddressChecker.address_check": {
            "name": "address_check",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "BtcAddressChecker.get_status": {
            "name": "get_status",
            "location": 60,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/chainso_address_checker.py": {
        "ChainSoAddressChecker.is_valid_address_url": {
            "name": "is_valid_address_url",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChainSoAddressChecker.get_spent_txs_url": {
            "name": "get_spent_txs_url",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChainSoAddressChecker.get_received_txs_url": {
            "name": "get_received_txs_url",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChainSoAddressChecker.address_search": {
            "name": "address_search",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "ChainSoAddressChecker.address_check": {
            "name": "address_check",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "ChainSoAddressChecker.get_status": {
            "name": "get_status",
            "location": 72,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/doge_address_checker.py": {
        "DogeAddressChecker.is_valid_address_url": {
            "name": "is_valid_address_url",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DogeAddressChecker.get_spent_txs_url": {
            "name": "get_spent_txs_url",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DogeAddressChecker.get_received_txs_url": {
            "name": "get_received_txs_url",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DogeAddressChecker.address_valid": {
            "name": "address_valid",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "DogeAddressChecker.address_check": {
            "name": "address_check",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/eth_address_checker.py": {
        "EthAddressChecker.get_next_token": {
            "name": "get_next_token",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "EthAddressChecker.set_token": {
            "name": "set_token",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "token": [
                    "List[str]"
                ]
            }
        },
        "EthAddressChecker.create_url": {
            "name": "create_url",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "address": [
                    "str"
                ]
            }
        },
        "EthAddressChecker.address_search": {
            "name": "address_search",
            "location": 46,
            "return": [
                "bool"
            ],
            "arguments": {
                "address": [
                    "str"
                ]
            }
        },
        "EthAddressChecker.is_contract": {
            "name": "is_contract",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {
                "address": [
                    "str"
                ]
            }
        },
        "EthAddressChecker.address_valid": {
            "name": "address_valid",
            "location": 93,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "EthAddressChecker.address_check": {
            "name": "address_check",
            "location": 97,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "EthAddressChecker.get_status": {
            "name": "get_status",
            "location": 104,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/ltc_address_checker.py": {
        "LtcAddressChecker.is_valid_address_url": {
            "name": "is_valid_address_url",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LtcAddressChecker.get_spent_txs_url": {
            "name": "get_spent_txs_url",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LtcAddressChecker.get_received_txs_url": {
            "name": "get_received_txs_url",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LtcAddressChecker.address_valid": {
            "name": "address_valid",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "LtcAddressChecker.address_check": {
            "name": "address_check",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/xmr_address_checker.py": {
        "XmrAddressChecker.address_check": {
            "name": "address_check",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "XmrAddressChecker.address_valid": {
            "name": "address_valid",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "XmrAddressChecker.get_status": {
            "name": "get_status",
            "location": 17,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/address_checkers/__init__.py": {},
    "Nduja-master/Nduja/dao/account.py": {
        "Account.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ID": [
                    "str"
                ],
                "host": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "info": [
                    "str"
                ]
            }
        },
        "Account.__str__": {
            "name": "__str__",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/dao/personal_info.py": {
        "PersonalInfo.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "website": [
                    "str"
                ],
                "email": [
                    "str"
                ],
                "json_string": [
                    "str"
                ]
            }
        },
        "PersonalInfo.__str__": {
            "name": "__str__",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/dao/wallet.py": {
        "Wallet.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "add": [
                    "str"
                ],
                "curr": [
                    "str"
                ],
                "f": [
                    "str"
                ],
                "u": [
                    "int"
                ],
                "i": [
                    "int"
                ]
            }
        },
        "Wallet.__key": {
            "name": "__key",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wallet.__hash__": {
            "name": "__hash__",
            "location": 26,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wallet.__eq__": {
            "name": "__eq__",
            "location": 29,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Wallet.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/dao/__init__.py": {},
    "Nduja-master/Nduja/db/db_initializer.py": {
        "DbInitializer.init_db": {
            "name": "init_db",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_name": [
                    "str"
                ],
                "format_file": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/db/db_manager.py": {
        "DbManager.set_config_file": {
            "name": "set_config_file",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "DbManager.set_db_file_name": {
            "name": "set_db_file_name",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "DbManager.get_instance": {
            "name": "get_instance",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "DbManager.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.init_connection": {
            "name": "init_connection",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.close_db": {
            "name": "close_db",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.save_changes": {
            "name": "save_changes",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.insert_wallet": {
            "name": "insert_wallet",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "currency": [
                    "str"
                ],
                "status": [
                    "int"
                ],
                "inferred": [
                    "bool"
                ]
            }
        },
        "DbManager.insert_wallet_with_account": {
            "name": "insert_wallet_with_account",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "currency": [
                    "str"
                ],
                "status": [
                    "int"
                ],
                "account": [
                    "int"
                ],
                "url": [
                    "str"
                ],
                "inferred": [
                    "bool"
                ]
            }
        },
        "DbManager.insert_information": {
            "name": "insert_information",
            "location": 75,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "website": [
                    "str"
                ],
                "email": [
                    "str"
                ],
                "json": [
                    "str"
                ]
            }
        },
        "DbManager.insert_account": {
            "name": "insert_account",
            "location": 91,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "info": [
                    "int"
                ]
            }
        },
        "DbManager.insert_account_no_info": {
            "name": "insert_account_no_info",
            "location": 103,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "username": [
                    "str"
                ]
            }
        },
        "DbManager.insert_account_wallet": {
            "name": "insert_account_wallet",
            "location": 115,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "account": [
                    "int"
                ],
                "wallet": [
                    "str"
                ],
                "url": [
                    "str"
                ]
            }
        },
        "DbManager.find_wallet": {
            "name": "find_wallet",
            "location": 127,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "DbManager.find_account": {
            "name": "find_account",
            "location": 133,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "username": [
                    "str"
                ]
            }
        },
        "DbManager.insert_new_info": {
            "name": "insert_new_info",
            "location": 143,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "currency": [
                    "str"
                ],
                "status": [
                    "int"
                ],
                "name": [
                    "str"
                ],
                "website": [
                    "str"
                ],
                "email": [
                    "str"
                ],
                "json": [
                    "str"
                ],
                "host": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "url": [
                    "str"
                ]
            }
        },
        "DbManager.insert_multiple_addresses": {
            "name": "insert_multiple_addresses",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "acc": [
                    "int"
                ],
                "wallets": [
                    "list"
                ]
            }
        },
        "DbManager.get_all_accounts": {
            "name": "get_all_accounts",
            "location": 159,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.add_info_to_account": {
            "name": "add_info_to_account",
            "location": 170,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "accountId": [
                    "int"
                ],
                "infoId": [
                    "int"
                ]
            }
        },
        "DbManager.get_all_wallets": {
            "name": "get_all_wallets",
            "location": 180,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.get_all_wallets_by_currency": {
            "name": "get_all_wallets_by_currency",
            "location": 191,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "currency": [
                    "str"
                ]
            }
        },
        "DbManager.get_all_known_wallets": {
            "name": "get_all_known_wallets",
            "location": 203,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.get_all_known_wallets_by_currency": {
            "name": "get_all_known_wallets_by_currency",
            "location": 214,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "currency": [
                    "str"
                ]
            }
        },
        "DbManager.get_all_inferred_wallets": {
            "name": "get_all_inferred_wallets",
            "location": 226,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "DbManager.find_accounts_by_wallet": {
            "name": "find_accounts_by_wallet",
            "location": 237,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "wallet": []
            }
        },
        "DbManager.insert_clusters": {
            "name": "insert_clusters",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "clusters": [
                    "Iterable"
                ]
            }
        }
    },
    "Nduja-master/Nduja/db/get_btc_tagged_addresses.py": {
        "main": {
            "name": "main",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "Nduja-master/Nduja/db/MatchAllPattern.py": {
        "insert_wallet": {
            "name": "insert_wallet",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "c": [],
                "address": [
                    "str"
                ],
                "currency": [
                    "str"
                ],
                "status": [
                    "int"
                ],
                "inferred": [
                    "bool"
                ]
            }
        },
        "insert_account_wallet": {
            "name": "insert_account_wallet",
            "location": 35,
            "return": [
                "int"
            ],
            "arguments": {
                "c": [
                    "sqlite3.dbapi2.Cursor"
                ],
                "account": [
                    "int"
                ],
                "wallet": [
                    "str"
                ],
                "url": [
                    "str"
                ]
            }
        },
        "match_all_pattern": {
            "name": "match_all_pattern",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "format_file": [],
                "db_name": [],
                "config_file_path": []
            }
        }
    },
    "Nduja-master/Nduja/db/transfer_data.py": {
        "transfer_data": {
            "name": "transfer_data",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "old_db": [
                    "str"
                ],
                "new_db": [
                    "str"
                ],
                "config_file": [
                    "str"
                ]
            }
        },
        "to_json": {
            "name": "to_json",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "db_path": [
                    "str"
                ]
            }
        },
        "json_to_list_json": {
            "name": "json_to_list_json",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "db_path": [
                    "str"
                ]
            }
        },
        "transfer_data2": {
            "name": "transfer_data2",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "old_db": [
                    "str"
                ],
                "new_db": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/db/__init__.py": {},
    "Nduja-master/Nduja/graph/abs_transaction_retriever.py": {
        "get_epoch": {
            "name": "get_epoch",
            "location": 6,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "AbsTransactionRetriever.get_input_output_addresses": {
            "name": "get_input_output_addresses",
            "location": 16,
            "return": [
                "Tuple[(Dict[(str, int)], Dict[(str, int)], Dict[(str, int)])]"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "timestamp": [
                    "Optional[int]"
                ]
            }
        },
        "AbsTransactionRetriever.get_currency": {
            "name": "get_currency",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/graph/bitcoin_transaction_retriever.py": {
        "BtcTransactionRetriever.get_currency": {
            "name": "get_currency",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BtcTransactionRetriever.get_input_output_addresses": {
            "name": "get_input_output_addresses",
            "location": 94,
            "return": [
                "Tuple[(Dict[(str, int)], Dict[(str, int)], Dict[(str, int)])]"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "timestamp": [
                    "Optional[int]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/graph/chainso_transaction_retriever.py": {
        "ChainSoTransactionRetriever.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "currency": [
                    "str"
                ]
            }
        },
        "ChainSoTransactionRetriever.get_currency": {
            "name": "get_currency",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChainSoTransactionRetriever.manage_response": {
            "name": "manage_response",
            "location": 37,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "query": [
                    "str"
                ],
                "response": [
                    "Optional[requests.models.Response]"
                ]
            }
        },
        "ChainSoTransactionRetriever.retrieve_transaction": {
            "name": "retrieve_transaction",
            "location": 56,
            "return": [
                "Optional[Set[str]]"
            ],
            "arguments": {
                "query": [
                    "str"
                ],
                "timestamp": [
                    "int"
                ]
            }
        },
        "ChainSoTransactionRetriever.get_input_output_addresses": {
            "name": "get_input_output_addresses",
            "location": 75,
            "return": [
                "Tuple[(Dict[(str, int)], Dict[(str, int)], Dict[(str, int)])]"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "timestamp": [
                    "Optional[int]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/graph/cluster.py": {
        "Cluster.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addresses": [
                    "Iterable"
                ],
                "transaction_retriever": [],
                "inferred_addresses": [
                    "Iterable"
                ],
                "ids": [
                    "Iterable[int]"
                ]
            }
        },
        "Cluster.ids": {
            "name": "ids",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cluster.belongsToBlackList": {
            "name": "belongsToBlackList",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cluster.original_addresses": {
            "name": "original_addresses",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cluster.inferred_addresses": {
            "name": "inferred_addresses",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cluster.add_inferred_address": {
            "name": "add_inferred_address",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": []
            }
        },
        "Cluster.merge_original_list": {
            "name": "merge_original_list",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Cluster"
                ]
            }
        },
        "Cluster.merge": {
            "name": "merge",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Cluster"
                ]
            }
        },
        "Cluster.__hash__": {
            "name": "__hash__",
            "location": 57,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cluster.__eq__": {
            "name": "__eq__",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Cluster.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cluster.intersect": {
            "name": "intersect",
            "location": 68,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Cluster"
                ]
            }
        },
        "Cluster.fill_cluster": {
            "name": "fill_cluster",
            "location": 72,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "black_list": [
                    "Cluster"
                ]
            }
        }
    },
    "Nduja-master/Nduja/graph/cluster_graph.py": {
        "ClusterGraph.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cluster_list": [],
                "black_list_cluster": []
            }
        },
        "ClusterGraph.add_vertex": {
            "name": "add_vertex",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "cluster": []
            }
        },
        "ClusterGraph.add_edge": {
            "name": "add_edge",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cluster_from": [],
                "cluster_to": []
            }
        },
        "ClusterGraph.plot": {
            "name": "plot",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "output_file_name": []
            }
        }
    },
    "Nduja-master/Nduja/graph/doge_transaction_retriever.py": {
        "DogeTransactionRetriever.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/graph/etherscan_transaction_retriever.py": {
        "EtherscanTransactionRetriever.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "List[str]"
                ]
            }
        },
        "EtherscanTransactionRetriever.get_currency": {
            "name": "get_currency",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EtherscanTransactionRetriever.build_query": {
            "name": "build_query",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ]
            }
        },
        "EtherscanTransactionRetriever.get_input_output_addresses": {
            "name": "get_input_output_addresses",
            "location": 44,
            "return": [
                "Tuple[(Dict[(str, int)], Dict[(str, int)], Dict[(str, int)])]"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str"
                ],
                "timestamp": [
                    "Optional[int]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/graph/explorer.py": {
        "fill_clusters": {
            "name": "fill_clusters",
            "location": 81,
            "return": [
                "_T0"
            ],
            "arguments": {
                "clusters": [
                    "_T0"
                ],
                "black_list": []
            }
        },
        "explore_output": {
            "name": "explore_output",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "clusters": [
                    "list"
                ],
                "transaction_retriever": []
            }
        },
        "merge_clusters": {
            "name": "merge_clusters",
            "location": 125,
            "return": [
                "set"
            ],
            "arguments": {
                "clusters": [
                    "list"
                ]
            }
        },
        "get_epoch": {
            "name": "get_epoch",
            "location": 180,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "get_retriever_by_currency": {
            "name": "get_retriever_by_currency",
            "location": 184,
            "return": [
                "Any"
            ],
            "arguments": {
                "currency": [
                    "str"
                ]
            }
        },
        "main2": {
            "name": "main2",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [
                    "List[str]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/graph/ltc_transaction_retriever.py": {
        "LtcTransactionRetriever.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/graph/__init__.py": {},
    "Nduja-master/Nduja/result_parser/parsing_results.py": {
        "Parser.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser.parse_string": {
            "name": "parse_string",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str"
                ]
            }
        },
        "Parser.parse_file": {
            "name": "parse_file",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "Parser.parse": {
            "name": "parse",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "results": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Parser.valid_wallets": {
            "name": "valid_wallets",
            "location": 57,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "wallets": [
                    "List[str]"
                ],
                "checker": []
            }
        },
        "Parser.retrieve_checker": {
            "name": "retrieve_checker",
            "location": 66,
            "return": [
                "Any"
            ],
            "arguments": {
                "currency": [
                    "str"
                ]
            }
        },
        "Parser.get_class": {
            "name": "get_class",
            "location": 75,
            "return": [
                "Callable"
            ],
            "arguments": {
                "name": []
            }
        }
    },
    "Nduja-master/Nduja/result_parser/__init__.py": {},
    "Nduja-master/Nduja/user_info_retriever/abs_personal_info_retriever.py": {
        "PersonalInfoRetriever.retrieve_info": {
            "name": "retrieve_info",
            "location": 13,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "accounts": [
                    "list"
                ]
            }
        },
        "PersonalInfoRetriever.retrieve_info_from_account": {
            "name": "retrieve_info_from_account",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "account": []
            }
        }
    },
    "Nduja-master/Nduja/user_info_retriever/bitbucket_info_retriever.py": {
        "BitbucketInfoRetriever.retrieve_info_from_account": {
            "name": "retrieve_info_from_account",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "account": []
            }
        },
        "BitbucketInfoRetriever.format_url": {
            "name": "format_url",
            "location": 20,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "username": [
                    "str"
                ]
            }
        },
        "BitbucketInfoRetriever.parse_result": {
            "name": "parse_result",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "response": [
                    "requests.models.Response"
                ]
            }
        }
    },
    "Nduja-master/Nduja/user_info_retriever/github_info_retriever.py": {
        "GithubInfoRetriever.set_token": {
            "name": "set_token",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "token": []
            }
        },
        "GithubInfoRetriever.get_token": {
            "name": "get_token",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "GithubInfoRetriever.retrieve_info_from_account": {
            "name": "retrieve_info_from_account",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "account": []
            }
        },
        "GithubInfoRetriever.format_url": {
            "name": "format_url",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "username": [
                    "str"
                ]
            }
        },
        "GithubInfoRetriever.parse_result": {
            "name": "parse_result",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "result": [
                    "requests.models.Response"
                ]
            }
        }
    },
    "Nduja-master/Nduja/user_info_retriever/info_retriever.py": {
        "InfoRetriever.set_tokens": {
            "name": "set_tokens",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "tokens": [
                    "dict"
                ]
            }
        },
        "InfoRetriever.retrieve_info_for_account_saved": {
            "name": "retrieve_info_for_account_saved",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/user_info_retriever/other_info_retriever.py": {
        "other_info_retriever": {
            "name": "other_info_retriever",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "db_name": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/user_info_retriever/twitter_info_retriever.py": {
        "TwitterInfoRetriever.get_twython": {
            "name": "get_twython",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "TwitterInfoRetriever.set_token": {
            "name": "set_token",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "tokens": [
                    "dict"
                ]
            }
        },
        "TwitterInfoRetriever.retrieve_info_from_account": {
            "name": "retrieve_info_from_account",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "account": []
            }
        }
    },
    "Nduja-master/Nduja/user_info_retriever/__init__.py": {},
    "Nduja-master/Nduja/utility/async_requests.py": {
        "exception_handler": {
            "name": "exception_handler",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": [],
                "exception": [
                    "Exception"
                ]
            }
        },
        "async_requests": {
            "name": "async_requests",
            "location": 14,
            "return": [
                "List[requests.models.Response]"
            ],
            "arguments": {
                "urls": [
                    "Iterable[str]"
                ],
                "ex_handler": [
                    "Optional[Callable[([Any, Any], requests.models.Response)]]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/utility/github_utility.py": {
        "perform_github_request": {
            "name": "perform_github_request",
            "location": 15,
            "return": [
                "Optional[requests.models.Response]"
            ],
            "arguments": {
                "query": [
                    "str"
                ],
                "token": [
                    "str"
                ],
                "max_retries": [
                    "int"
                ]
            }
        }
    },
    "Nduja-master/Nduja/utility/pattern.py": {
        "match_email": {
            "name": "match_email",
            "location": 44,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "match_personal_website": {
            "name": "match_personal_website",
            "location": 52,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "Pattern.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format_object": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "Pattern.pattern": {
            "name": "pattern",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Pattern.symbol": {
            "name": "symbol",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Pattern.name": {
            "name": "name",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Pattern.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pattern.match": {
            "name": "match",
            "location": 38,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/utility/print_utility.py": {
        "print_json": {
            "name": "print_json",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "dict"
                ]
            }
        },
        "escape_utf8": {
            "name": "escape_utf8",
            "location": 10,
            "return": [
                "bytes"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    },
    "Nduja-master/Nduja/utility/safe_requests.py": {
        "safe_requests_get": {
            "name": "safe_requests_get",
            "location": 10,
            "return": [
                "Optional[requests.models.Response]"
            ],
            "arguments": {
                "query": [
                    "str"
                ],
                "token": [
                    "Optional[str]"
                ],
                "timeout": [
                    "int"
                ],
                "max_retries": [
                    "int"
                ],
                "jsoncheck": [
                    "bool"
                ],
                "jsonerror_pause": [
                    "int"
                ],
                "params": [
                    "Dict[(str, Any)]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/utility/twython_utility.py": {
        "twitter_safe_call": {
            "name": "twitter_safe_call",
            "location": 22,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "twython_function": [
                    "Callable"
                ],
                "max_retry_on_error": [
                    "int"
                ]
            }
        }
    },
    "Nduja-master/Nduja/utility/__init__.py": {},
    "Nduja-master/Nduja/wallet_collectors/abs_wallet_collector.py": {
        "flatten": {
            "name": "flatten",
            "location": 24,
            "return": [
                "List[T]"
            ],
            "arguments": {
                "li": [
                    "List[List[T]]"
                ]
            }
        },
        "AbsWalletCollector.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format_file": [
                    "str"
                ]
            }
        },
        "AbsWalletCollector.patterns": {
            "name": "patterns",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "AbsWalletCollector.request_url": {
            "name": "request_url",
            "location": 49,
            "return": [
                "Optional[requests.models.Response]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "token": [
                    "str"
                ]
            }
        },
        "AbsWalletCollector.collect_raw_result": {
            "name": "collect_raw_result",
            "location": 62,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "queries": [
                    "List[str]"
                ]
            }
        },
        "AbsWalletCollector.construct_queries": {
            "name": "construct_queries",
            "location": 66,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsWalletCollector.extract_content": {
            "name": "extract_content",
            "location": 71,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "list"
                ]
            }
        },
        "AbsWalletCollector.build_answer_json": {
            "name": "build_answer_json",
            "location": 76,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "raw_response": [],
                "content": [
                    "str"
                ],
                "symbol_list": [
                    "List[str]"
                ],
                "wallet_list": [
                    "List[str]"
                ],
                "emails": [
                    "Optional[List[str]]"
                ],
                "websites": [
                    "Optional[List[str]]"
                ]
            }
        },
        "AbsWalletCollector.collect_address": {
            "name": "collect_address",
            "location": 85,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Nduja-master/Nduja/wallet_collectors/github_wallet_collector.py": {
        "GithubWalletCollector.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format_file": [],
                "tokens": []
            }
        },
        "GithubWalletCollector.get_next_token": {
            "name": "get_next_token",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GithubWalletCollector.collect_raw_result": {
            "name": "collect_raw_result",
            "location": 34,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": [],
                "queries": [
                    "List[str]"
                ]
            }
        },
        "GithubWalletCollector.construct_queries": {
            "name": "construct_queries",
            "location": 78,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GithubWalletCollector.extract_content": {
            "name": "extract_content",
            "location": 98,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "responses": []
            }
        },
        "GithubWalletCollector.build_answer_json": {
            "name": "build_answer_json",
            "location": 113,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "item": [],
                "content": [
                    "str"
                ],
                "symbol_list": [
                    "List[str]"
                ],
                "wallet_list": [
                    "List[str]"
                ],
                "emails": [
                    "Optional[List[str]]"
                ],
                "websites": [
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/wallet_collectors/searchcode_wallet_collector.py": {
        "exception_handler": {
            "name": "exception_handler",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [],
                "exception": []
            }
        },
        "SearchcodeWalletCollector.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format_file": []
            }
        },
        "SearchcodeWalletCollector.collect_raw_result": {
            "name": "collect_raw_result",
            "location": 29,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "queries": [
                    "List[str]"
                ]
            }
        },
        "SearchcodeWalletCollector.construct_queries": {
            "name": "construct_queries",
            "location": 44,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchcodeWalletCollector.extract_content_single": {
            "name": "extract_content_single",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "response": []
            }
        },
        "SearchcodeWalletCollector.extract_content": {
            "name": "extract_content",
            "location": 71,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "responses": [
                    "list"
                ]
            }
        },
        "SearchcodeWalletCollector.build_answer_json": {
            "name": "build_answer_json",
            "location": 78,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "item": [],
                "content": [
                    "str"
                ],
                "symbol_list": [
                    "List[str]"
                ],
                "wallet_list": [
                    "List[str]"
                ],
                "emails": [
                    "Optional[List[str]]"
                ],
                "websites": [
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/wallet_collectors/twitter_wallet_collector.py": {
        "TwitterWalletCollector.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format_file": [
                    "str"
                ],
                "tokens_dictionary": [
                    "dict"
                ]
            }
        },
        "TwitterWalletCollector.get_twython": {
            "name": "get_twython",
            "location": 31,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TwitterWalletCollector.inc_api_call_count": {
            "name": "inc_api_call_count",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TwitterWalletCollector.twitter_fetch_all_requests": {
            "name": "twitter_fetch_all_requests",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "TwitterWalletCollector.collect_raw_result": {
            "name": "collect_raw_result",
            "location": 79,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "queries": [
                    "List[str]"
                ]
            }
        },
        "TwitterWalletCollector.construct_queries": {
            "name": "construct_queries",
            "location": 104,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TwitterWalletCollector.extract_content_single": {
            "name": "extract_content_single",
            "location": 129,
            "return": [
                "str"
            ],
            "arguments": {
                "response": []
            }
        },
        "TwitterWalletCollector.extract_content": {
            "name": "extract_content",
            "location": 133,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "responses": []
            }
        },
        "TwitterWalletCollector.build_answer_json": {
            "name": "build_answer_json",
            "location": 140,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "raw_response": [],
                "content": [
                    "str"
                ],
                "symbol_list": [
                    "List[str]"
                ],
                "wallet_list": [
                    "List[str]"
                ],
                "emails": [
                    "Optional[List[str]]"
                ],
                "websites": [
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "Nduja-master/Nduja/wallet_collectors/__init__.py": {}
}
{
    "PythonScripts-master/appscript_test.py": {},
    "PythonScripts-master/asyncrun.py": {},
    "PythonScripts-master/auto_gui.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "record_mouse": {
            "name": "record_mouse",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PythonScripts-master/cloudconvert.py": {
        "Job.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inputfile": []
            }
        },
        "Job.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PythonScripts-master/cloudconvert_client.py": {},
    "PythonScripts-master/database.py": {
        "getdb": {
            "name": "getdb",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "PythonScripts-master/download_sort.py": {
        "display_results": {
            "name": "display_results",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PythonScripts-master/drive_direct_download.py": {},
    "PythonScripts-master/GUI.py": {
        "getInputOutputWindow": {
            "name": "getInputOutputWindow",
            "location": 13,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "titletext": []
            }
        },
        "getInputWindow": {
            "name": "getInputWindow",
            "location": 24,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "titletext": [
                    "str"
                ]
            }
        },
        "getFolderInputWindow": {
            "name": "getFolderInputWindow",
            "location": 34,
            "return": [
                "Tuple[(str, Dict[(str, str)])]"
            ],
            "arguments": {
                "titletext": [
                    "str"
                ],
                "initial_folder": [
                    "str"
                ]
            }
        },
        "getFolderRecursiveWindow": {
            "name": "getFolderRecursiveWindow",
            "location": 44,
            "return": [
                "Tuple[(str, bool)]"
            ],
            "arguments": {
                "title_text": [
                    "str"
                ],
                "initial_folder": [
                    "str"
                ],
                "recuse_text": [
                    "str"
                ]
            }
        },
        "getOutputWindow": {
            "name": "getOutputWindow",
            "location": 58,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "titletext": [
                    "str"
                ],
                "prefill": [
                    "str"
                ]
            }
        },
        "getErrorWindow": {
            "name": "getErrorWindow",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "getPopup": {
            "name": "getPopup",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "rclonewindow": {
            "name": "rclonewindow",
            "location": 76,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {}
        },
        "rcloneoutputwindow": {
            "name": "rcloneoutputwindow",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "contents": [
                    "list"
                ]
            }
        },
        "sortoutputwindow": {
            "name": "sortoutputwindow",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "contents": [
                    "List[str]"
                ]
            }
        },
        "getTextInputWindow": {
            "name": "getTextInputWindow",
            "location": 107,
            "return": [
                "str"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "text": [
                    "str"
                ]
            }
        },
        "getDualTextInputWindow": {
            "name": "getDualTextInputWindow",
            "location": 120,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "field_1": [
                    "str"
                ],
                "field_2": [
                    "str"
                ]
            }
        },
        "getButtonWindow": {
            "name": "getButtonWindow",
            "location": 135,
            "return": [
                "str"
            ],
            "arguments": {
                "title": [
                    "str"
                ],
                "buttons": [
                    "List[str]"
                ]
            }
        }
    },
    "PythonScripts-master/make_binaries.py": {
        "make_bin_windowed": {
            "name": "make_bin_windowed",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "binaryname": [
                    "str"
                ]
            }
        },
        "make_bin": {
            "name": "make_bin",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "binaryname": [
                    "str"
                ]
            }
        }
    },
    "PythonScripts-master/mass_rename.py": {},
    "PythonScripts-master/parse_website.py": {
        "fetch": {
            "name": "fetch",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "session": [
                    "requests.sessions.Session"
                ],
                "url": [
                    "str"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "requests.sessions.Session"
                ],
                "url": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "cleanup_title": {
            "name": "cleanup_title",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "title": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "link": [
                    "Optional[str]"
                ]
            }
        }
    },
    "PythonScripts-master/rclone.py": {
        "decode": {
            "name": "decode",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "input": [
                    "str"
                ]
            }
        },
        "split": {
            "name": "split",
            "location": 19,
            "return": [
                "Tuple[(list, list)]"
            ],
            "arguments": {
                "list": [
                    "list"
                ]
            }
        },
        "RcloneItem.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [],
                "drive": [
                    "str"
                ],
                "path": []
            }
        },
        "RcloneItem.__str__": {
            "name": "__str__",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RcloneFile.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [],
                "drive": [],
                "path": []
            }
        },
        "RcloneFile.__eq__": {
            "name": "__eq__",
            "location": 115,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "RcloneDirectory.__init__": {
            "name": "__init__",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [],
                "drive": [],
                "path": []
            }
        },
        "RcloneDirectory.__repr__": {
            "name": "__repr__",
            "location": 177,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "PythonScripts-master/setup_enviroment.py": {},
    "PythonScripts-master/video_convert.py": {
        "getfiles": {
            "name": "getfiles",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "PythonScripts-master/__init__.py": {}
}
{
    "TALK-TO-ME-master/main.py": {},
    "TALK-TO-ME-master/talk_to_me/bot.py": {
        "Word2Int.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "words": []
            }
        },
        "Word2Int.transform": {
            "name": "transform",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "Word2Int.inverse_transform": {
            "name": "inverse_transform",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "Word2Int.__len__": {
            "name": "__len__",
            "location": 35,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Int2Vec.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Int2Vec.transform": {
            "name": "transform",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "Int2Vec.inverse_transform": {
            "name": "inverse_transform",
            "location": 48,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "vec": []
            }
        },
        "Bot.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exchanges": []
            }
        },
        "Bot.transform": {
            "name": "transform",
            "location": 184,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "prompt_string": []
            }
        },
        "Bot.interact": {
            "name": "interact",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "TALK-TO-ME-master/talk_to_me/bot2.py": {},
    "TALK-TO-ME-master/talk_to_me/exchanges_stats.py": {
        "exchange2words": {
            "name": "exchange2words",
            "location": 18,
            "return": [
                "Tuple[(List[nothing], List[nothing])]"
            ],
            "arguments": {
                "prompt_response": []
            }
        },
        "exchanges_stats": {
            "name": "exchanges_stats",
            "location": 22,
            "return": [
                "list"
            ],
            "arguments": {
                "exchanges_": [],
                "interactive": []
            }
        },
        "get_n_grams": {
            "name": "get_n_grams",
            "location": 89,
            "return": [
                "dict"
            ],
            "arguments": {
                "sentences": [],
                "max_n": []
            }
        },
        "exchanges_stats.gen_sentences": {
            "name": "gen_sentences",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "TALK-TO-ME-master/talk_to_me/fb_data2exchanges.py": {
        "fb_data2exchanges": {
            "name": "fb_data2exchanges",
            "location": 10,
            "return": [
                "list"
            ],
            "arguments": {
                "name": [],
                "input_p": []
            }
        },
        "sort_paths": {
            "name": "sort_paths",
            "location": 33,
            "return": [
                "Tuple[(set, set, set, set, set)]"
            ],
            "arguments": {
                "paths": []
            }
        },
        "normalize_str": {
            "name": "normalize_str",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "string": []
            }
        },
        "message2exchanges": {
            "name": "message2exchanges",
            "location": 92,
            "return": [
                "Generator[(Tuple[(nothing, nothing)], Any, None)]"
            ],
            "arguments": {
                "name": [],
                "obj": []
            }
        },
        "fb_data2exchanges.path2exchanges": {
            "name": "path2exchanges",
            "location": 26,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "TALK-TO-ME-master/talk_to_me/string2words.py": {
        "string2words_helper2": {
            "name": "string2words_helper2",
            "location": 26,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "word": []
            }
        },
        "string2words_helper": {
            "name": "string2words_helper",
            "location": 101,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "string": []
            }
        },
        "string2words": {
            "name": "string2words",
            "location": 114,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "string": []
            }
        },
        "remove_ents": {
            "name": "remove_ents",
            "location": 118,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "words": []
            }
        },
        "words2string": {
            "name": "words2string",
            "location": 134,
            "return": [
                "str"
            ],
            "arguments": {
                "words": []
            }
        }
    },
    "TALK-TO-ME-master/talk_to_me/util.py": {
        "imap": {
            "name": "imap",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "func": [],
                "iterable": []
            }
        },
        "list_f": {
            "name": "list_f",
            "location": 51,
            "return": [
                "Callable[(..., list)]"
            ],
            "arguments": {
                "func": []
            }
        },
        "transpose": {
            "name": "transpose",
            "location": 65,
            "return": [
                "list"
            ],
            "arguments": {
                "lists": []
            }
        },
        "split_include": {
            "name": "split_include",
            "location": 72,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "delim_re": [],
                "string": []
            }
        },
        "merge_dicts": {
            "name": "merge_dicts",
            "location": 89,
            "return": [
                "dict"
            ],
            "arguments": {
                "dcts": []
            }
        },
        "invert": {
            "name": "invert",
            "location": 102,
            "return": [
                "dict"
            ],
            "arguments": {
                "dct": []
            }
        },
        "interactive_loop": {
            "name": "interactive_loop",
            "location": 106,
            "return": [
                "Generator[(str, Any, Any)]"
            ],
            "arguments": {}
        },
        "_intercalate_helper": {
            "name": "_intercalate_helper",
            "location": 118,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "lst": [],
                "sep": []
            }
        },
        "intercalate": {
            "name": "intercalate",
            "location": 124,
            "return": [
                "itertools.islice"
            ],
            "arguments": {
                "lst": [],
                "sep": []
            }
        },
        "iter_replace": {
            "name": "iter_replace",
            "location": 128,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "lst": [],
                "find": [],
                "sub": []
            }
        },
        "reverse": {
            "name": "reverse",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "it": []
            }
        },
        "list_f.func2": {
            "name": "func2",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "split_include.get_breakpoints": {
            "name": "get_breakpoints",
            "location": 73,
            "return": [],
            "arguments": {}
        }
    },
    "TALK-TO-ME-master/talk_to_me/words2vectors.py": {},
    "TALK-TO-ME-master/talk_to_me/__init__.py": {},
    "TALK-TO-ME-master/tests/test_string2words.py": {
        "test_string2words_contraction": {
            "name": "test_string2words_contraction",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string2words_punct_single": {
            "name": "test_string2words_punct_single",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string2words_embedded_punct": {
            "name": "test_string2words_embedded_punct",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string2words_numbers": {
            "name": "test_string2words_numbers",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string2words_brackets": {
            "name": "test_string2words_brackets",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string2words_escape": {
            "name": "test_string2words_escape",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
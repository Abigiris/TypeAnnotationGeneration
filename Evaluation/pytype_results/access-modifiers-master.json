{
    "access-modifiers-master/setup.py": {},
    "access-modifiers-master/access_modifiers/access_modifiers.py": {
        "disable": {
            "name": "disable",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "enable": {
            "name": "enable",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "privatemethod": {
            "name": "privatemethod",
            "location": 30,
            "return": [
                "Union[(Callable, _T0)]"
            ],
            "arguments": {
                "method": [
                    "_T0@@"
                ]
            }
        },
        "protectedmethod": {
            "name": "protectedmethod",
            "location": 58,
            "return": [
                "Union[(Callable, _T0)]"
            ],
            "arguments": {
                "method": [
                    "_T0@@"
                ]
            }
        },
        "privatemethod.private_method_wrapper": {
            "name": "private_method_wrapper",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "protectedmethod.protected_method_wrapper": {
            "name": "protected_method_wrapper",
            "location": 63,
            "return": [],
            "arguments": {}
        }
    },
    "access-modifiers-master/access_modifiers/__init__.py": {},
    "access-modifiers-master/access_modifiers/tests/test_performance.py": {
        "PerformanceTest.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PerformanceTest.test_create_private_method": {
            "name": "test_create_private_method",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PerformanceTest.test_create_protected_method": {
            "name": "test_create_protected_method",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PerformanceTest.test_call_private_method": {
            "name": "test_call_private_method",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PerformanceTest.test_call_protected_method": {
            "name": "test_call_protected_method",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "access-modifiers-master/access_modifiers/tests/test_private.py": {
        "PrivateMethodTests.test_call_private_method_directly": {
            "name": "test_call_private_method_directly",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_directly_without_access_checks": {
            "name": "test_call_private_method_directly_without_access_checks",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_public_method": {
            "name": "test_call_private_method_via_public_method",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_public_method_from_subclass": {
            "name": "test_call_private_method_via_public_method_from_subclass",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_public_method_in_subclass": {
            "name": "test_call_private_method_via_public_method_in_subclass",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_public_method_in_subclass_using_super": {
            "name": "test_call_private_method_via_public_method_in_subclass_using_super",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_list_comprehension": {
            "name": "test_call_private_method_via_list_comprehension",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_nested_lambda": {
            "name": "test_call_private_method_via_nested_lambda",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_from_try_except_block": {
            "name": "test_call_private_method_from_try_except_block",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_override_private_method": {
            "name": "test_override_private_method",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_override_private_method_with_protected_method": {
            "name": "test_override_private_method_with_protected_method",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_private_method": {
            "name": "test_call_private_method_via_private_method",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.test_call_private_method_directly_without_access_checks": {
            "name": "test_call_private_method_directly_without_access_checks",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Class.private_method": {
            "name": "private_method",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Class.private_method_calling_private_method": {
            "name": "private_method_calling_private_method",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Class.public_method": {
            "name": "public_method",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Class.public_method_calling_private_method_via_private_method": {
            "name": "public_method_calling_private_method_via_private_method",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Class.public_method_using_list_comprehension": {
            "name": "public_method_using_list_comprehension",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Class.public_method_using_nested_lambdas": {
            "name": "public_method_using_nested_lambdas",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Class.public_method_using_try_except": {
            "name": "public_method_using_try_except",
            "location": 38,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.Subclass.private_method": {
            "name": "private_method",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.SubclassOverridesWithProtectedMethod.private_method": {
            "name": "private_method",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.Class.private_method": {
            "name": "private_method",
            "location": 145,
            "return": [],
            "arguments": {}
        },
        "StaticPrivateMethodTests.Class.private_method_calling_private_method": {
            "name": "private_method_calling_private_method",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.Class.public_method": {
            "name": "public_method",
            "location": 152,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.Class.public_method_calling_private_method_via_private_method": {
            "name": "public_method_calling_private_method_via_private_method",
            "location": 155,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.Class.public_method_using_list_comprehension": {
            "name": "public_method_using_list_comprehension",
            "location": 159,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.Class.public_method_using_nested_lambdas": {
            "name": "public_method_using_nested_lambdas",
            "location": 162,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.Class.public_method_using_try_except": {
            "name": "public_method_using_try_except",
            "location": 168,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.Subclass.private_method": {
            "name": "private_method",
            "location": 177,
            "return": [],
            "arguments": {}
        },
        "StaticPrivateMethodTests.SubclassOverridesWithProtectedMethod.private_method": {
            "name": "private_method",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_public_method_from_subclass.Subclass.public_method": {
            "name": "public_method",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_public_method_in_subclass.Subclass.public_method": {
            "name": "public_method",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_via_public_method_in_subclass_using_super.Subclass.public_method": {
            "name": "public_method",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrivateMethodTests.test_call_private_method_directly_without_access_checks.Class.private_method": {
            "name": "private_method",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StaticPrivateMethodTests.test_call_private_method_directly_without_access_checks.Class.private_method": {
            "name": "private_method",
            "location": 193,
            "return": [],
            "arguments": {}
        }
    },
    "access-modifiers-master/access_modifiers/tests/test_protected.py": {
        "ProtectedMethodTest.test_protected_method": {
            "name": "test_protected_method",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_directly_without_access_checks": {
            "name": "test_call_protected_method_directly_without_access_checks",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_public_method": {
            "name": "test_call_protected_method_via_public_method",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_protected_method": {
            "name": "test_call_protected_method_via_protected_method",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_public_method_in_subclass": {
            "name": "test_call_protected_method_via_public_method_in_subclass",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_overridden_public_method": {
            "name": "test_call_protected_method_via_overridden_public_method",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_public_method_using_super": {
            "name": "test_call_protected_method_via_public_method_using_super",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_overridden_protected_method_via_overridden_public_method": {
            "name": "test_call_overridden_protected_method_via_overridden_public_method",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_override_protected_method_with_protected_method": {
            "name": "test_override_protected_method_with_protected_method",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_override_protected_method_with_public_method": {
            "name": "test_override_protected_method_with_public_method",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_override_protected_method_with_private_method": {
            "name": "test_override_protected_method_with_private_method",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.Class.protected_method": {
            "name": "protected_method",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.Class.public_method": {
            "name": "public_method",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_protected_method.Subclass.another_protected_method": {
            "name": "another_protected_method",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_protected_method.Subclass.another_public_method": {
            "name": "another_public_method",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_public_method_in_subclass.Subclass.public_method": {
            "name": "public_method",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_overridden_public_method.Subclass.public_method": {
            "name": "public_method",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_via_public_method_using_super.Subclass.public_method": {
            "name": "public_method",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_overridden_protected_method_via_overridden_public_method.Subclass.protected_method": {
            "name": "protected_method",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_overridden_protected_method_via_overridden_public_method.Subclass.public_method": {
            "name": "public_method",
            "location": 95,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_override_protected_method_with_protected_method.Subclass.protected_method": {
            "name": "protected_method",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_override_protected_method_with_public_method.Subclass.protected_method": {
            "name": "protected_method",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_override_protected_method_with_private_method.Subclass.protected_method": {
            "name": "protected_method",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProtectedMethodTest.test_call_protected_method_directly_without_access_checks.Class.protected_method": {
            "name": "protected_method",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "access-modifiers-master/access_modifiers/tests/__init__.py": {},
    "access-modifiers-master/ci/release.py": {
        "parse_arguments": {
            "name": "parse_arguments",
            "location": 11,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
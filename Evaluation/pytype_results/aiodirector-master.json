{
    "aiodirector-master/setup.py": {},
    "aiodirector-master/travis_pypi_setup.py": {
        "load_key": {
            "name": "load_key",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "pubkey": []
            }
        },
        "encrypt": {
            "name": "encrypt",
            "location": 44,
            "return": [
                "bytes"
            ],
            "arguments": {
                "pubkey": [],
                "password": []
            }
        },
        "fetch_public_key": {
            "name": "fetch_public_key",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "repo": []
            }
        },
        "prepend_line": {
            "name": "prepend_line",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [],
                "line": []
            }
        },
        "load_yaml_config": {
            "name": "load_yaml_config",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "filepath": []
            }
        },
        "save_yaml_config": {
            "name": "save_yaml_config",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [],
                "config": []
            }
        },
        "update_travis_deploy_password": {
            "name": "update_travis_deploy_password",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "encrypted_password": []
            }
        },
        "main": {
            "name": "main",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "aiodirector-master/aioapp/app.py": {
        "_raise_graceful_exit": {
            "name": "_raise_graceful_exit",
            "location": 13,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "Component.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "loop": []
            }
        },
        "Application.add": {
            "name": "add",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "comp": [],
                "stop_after": []
            }
        },
        "Application.__getattr__": {
            "name": "__getattr__",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Application.log_err": {
            "name": "log_err",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "err": []
            }
        },
        "Application.log_warn": {
            "name": "log_warn",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "warn": []
            }
        },
        "Application.log_info": {
            "name": "log_info",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "Application.log_debug": {
            "name": "log_debug",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "debug": []
            }
        },
        "Application.setup_logging": {
            "name": "setup_logging",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tracer_driver": [],
                "tracer_addr": [],
                "tracer_name": [],
                "tracer_sample_rate": [],
                "tracer_send_inteval": [],
                "metrics_driver": [],
                "metrics_addr": [],
                "metrics_name": []
            }
        },
        "Application.run": {
            "name": "run",
            "location": 91,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.run_loop": {
            "name": "run_loop",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiodirector-master/aioapp/chat.py": {
        "TelegramHandler.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "TelegramHandler.app": {
            "name": "app",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Telegram.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api_token": [],
                "handler": [],
                "connect_max_attempts": [],
                "connect_retry_delay": [],
                "api_timeout": []
            }
        },
        "Telegram.add_command": {
            "name": "add_command",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "regexp": [],
                "fn": []
            }
        },
        "Telegram.set_default": {
            "name": "set_default",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "Telegram.add_inline": {
            "name": "add_inline",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "regexp": [],
                "fn": []
            }
        },
        "Telegram.add_callback": {
            "name": "add_callback",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "regexp": [],
                "fn": []
            }
        },
        "Telegram._graceful_fn": {
            "name": "_graceful_fn",
            "location": 135,
            "return": [
                "functools.partial"
            ],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "TelegramChat.__init__": {
            "name": "__init__",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chat": [],
                "bot": []
            }
        }
    },
    "aiodirector-master/aioapp/db.py": {
        "PgDb.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dsn": [],
                "pool_min_size": [],
                "pool_max_size": [],
                "pool_max_queries": [],
                "pool_max_inactive_connection_lifetime": [],
                "connect_max_attempts": [],
                "connect_retry_delay": []
            }
        },
        "PgDb.pool": {
            "name": "pool",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PgDb._masked_dsn": {
            "name": "_masked_dsn",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PgDb.connection": {
            "name": "connection",
            "location": 96,
            "return": [
                "ConnectionContextManager"
            ],
            "arguments": {
                "self": [],
                "context_span": []
            }
        },
        "ConnectionContextManager.__init__": {
            "name": "__init__",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": [],
                "context_span": []
            }
        },
        "TransactionContextManager.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context_span": [],
                "conn": [],
                "isolation_level": []
            }
        },
        "TransactionContextManager._begin_query": {
            "name": "_begin_query",
            "location": 149,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Connection.__init__": {
            "name": "__init__",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": [],
                "conn": []
            }
        },
        "Connection.xact": {
            "name": "xact",
            "location": 177,
            "return": [
                "TransactionContextManager"
            ],
            "arguments": {
                "self": [],
                "context_span": [],
                "isolation_level": []
            }
        },
        "PgDb._conn_init._json_encoder": {
            "name": "_json_encoder",
            "location": 50,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "PgDb._conn_init._json_decoder": {
            "name": "_json_decoder",
            "location": 53,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "PgDb._conn_init._jsonb_encoder": {
            "name": "_jsonb_encoder",
            "location": 61,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "PgDb._conn_init._jsonb_decoder": {
            "name": "_jsonb_decoder",
            "location": 64,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "aiodirector-master/aioapp/error.py": {},
    "aiodirector-master/aioapp/http.py": {
        "_annotate_bytes": {
            "name": "_annotate_bytes",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "span": [],
                "data": []
            }
        },
        "Handler.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "server": []
            }
        },
        "Handler.app": {
            "name": "app",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "handler": [],
                "access_log_format": [],
                "access_log": [],
                "shutdown_timeout": []
            }
        },
        "Server.add_route": {
            "name": "add_route",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "uri": [],
                "handler": []
            }
        },
        "Server.set_error_handler": {
            "name": "set_error_handler",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": []
            }
        }
    },
    "aiodirector-master/aioapp/misc.py": {
        "async_call": {
            "name": "async_call",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "loop": [],
                "func": []
            }
        },
        "mask_url_pwd": {
            "name": "mask_url_pwd",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "route": []
            }
        },
        "get_func_params": {
            "name": "get_func_params",
            "location": 56,
            "return": [
                "dict"
            ],
            "arguments": {
                "method": [],
                "called_params": []
            }
        },
        "_json_encoder": {
            "name": "_json_encoder",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj": []
            }
        },
        "json_encode": {
            "name": "json_encode",
            "location": 116,
            "return": [
                "str"
            ],
            "arguments": {
                "data": []
            }
        },
        "parse_dsn": {
            "name": "parse_dsn",
            "location": 120,
            "return": [
                "list"
            ],
            "arguments": {
                "dsn": [],
                "default_port": [],
                "protocol": []
            }
        },
        "rndstr": {
            "name": "rndstr",
            "location": 145,
            "return": [
                "str"
            ],
            "arguments": {
                "size": [],
                "chars": []
            }
        },
        "async_call._call": {
            "name": "_call",
            "location": 30,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "aiodirector-master/aioapp/task.py": {
        "_annotate_bytes": {
            "name": "_annotate_bytes",
            "location": 397,
            "return": [
                "None"
            ],
            "arguments": {
                "span": [],
                "data": []
            }
        },
        "Consumer.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tm": [],
                "url": [],
                "connect_max_attempts": [],
                "connect_retry_delay": [],
                "queue": [],
                "heartbeat": []
            }
        },
        "AbstractHandler.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "AbstractHandler._tasks": {
            "name": "_tasks",
            "location": 71,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TaskManager.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amqp_url": [],
                "concurrency": [],
                "connect_max_attempts": [],
                "connect_retry_delay": [],
                "queue": [],
                "scheduled_queue": [],
                "handler": []
            }
        },
        "TaskManager._masked_url": {
            "name": "_masked_url",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Task.__init__": {
            "name": "__init__",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tm": [],
                "name": [],
                "params": [],
                "attempt": []
            }
        },
        "Task.__str__": {
            "name": "__str__",
            "location": 302,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.load": {
            "name": "load",
            "location": 306,
            "return": [
                "Any"
            ],
            "arguments": {
                "tm": [],
                "body": [],
                "context_span": []
            }
        },
        "Task.decode": {
            "name": "decode",
            "location": 325,
            "return": [
                "Tuple[(Any, Any, int)]"
            ],
            "arguments": {
                "context_span": [],
                "body": []
            }
        },
        "Task.encode": {
            "name": "encode",
            "location": 351,
            "return": [
                "bytes"
            ],
            "arguments": {
                "name": [],
                "params": [],
                "attempt": []
            }
        }
    },
    "aiodirector-master/aioapp/tracer.py": {
        "TracerTransport.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": [],
                "driver": [],
                "addr": [],
                "metrics_diver": [],
                "metrics_addr": [],
                "metrics_name": [],
                "send_inteval": [],
                "loop": []
            }
        }
    },
    "aiodirector-master/aioapp/__init__.py": {},
    "aiodirector-master/docs/conf.py": {},
    "aiodirector-master/examples/full.py": {
        "HttpHandler.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TelegramHandler.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiodirector-master/tests/conftest.py": {
        "event_loop": {
            "name": "event_loop",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "loop": {
            "name": "loop",
            "location": 37,
            "return": [],
            "arguments": {
                "event_loop": []
            }
        },
        "get_free_port": {
            "name": "get_free_port",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "tracer_server": {
            "name": "tracer_server",
            "location": 134,
            "return": [],
            "arguments": {
                "loop": []
            }
        },
        "tracer_server.go.tracer_handle": {
            "name": "tracer_handle",
            "location": 141,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "aiodirector-master/tests/test_app.py": {},
    "aiodirector-master/tests/test_db.py": {
        "_create_span": {
            "name": "_create_span",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "aiodirector-master/tests/test_misc.py": {
        "test_get_func_params_as_method": {
            "name": "test_get_func_params_as_method",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params_as_func": {
            "name": "test_get_func_params_as_func",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params_with_functools": {
            "name": "test_get_func_params_with_functools",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params_with_kwargs": {
            "name": "test_get_func_params_with_kwargs",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params": {
            "name": "test_get_func_params",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params_unexpected_param": {
            "name": "test_get_func_params_unexpected_param",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params_no_arg": {
            "name": "test_get_func_params_no_arg",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params_no_kwarg": {
            "name": "test_get_func_params_no_kwarg",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mask_url_pwd": {
            "name": "test_mask_url_pwd",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_json_encode": {
            "name": "test_json_encode",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rndstr": {
            "name": "test_rndstr",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_dsn": {
            "name": "test_parse_dsn",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_func_params_as_func.a2": {
            "name": "a2",
            "location": 66,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": []
            }
        },
        "test_get_func_params_with_functools.a4": {
            "name": "a4",
            "location": 80,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "e": []
            }
        },
        "test_get_func_params_with_kwargs.a5": {
            "name": "a5",
            "location": 89,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "test_get_func_params.func1": {
            "name": "func1",
            "location": 97,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        },
        "test_get_func_params_unexpected_param.func1": {
            "name": "func1",
            "location": 113,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "test_get_func_params_no_arg.func1": {
            "name": "func1",
            "location": 122,
            "return": [],
            "arguments": {
                "a": []
            }
        },
        "test_get_func_params_no_kwarg.func1": {
            "name": "func1",
            "location": 131,
            "return": [],
            "arguments": {}
        },
        "test_json_encode.uk": {
            "name": "uk",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "test_get_func_params_as_method.A1.func": {
            "name": "func",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        }
    },
    "aiodirector-master/tests/__init__.py": {}
}
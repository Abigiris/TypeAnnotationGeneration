{
    "aiovalidator-master/setup.py": {},
    "aiovalidator-master/aiovalidator/aiovalidator.py": {
        "ValidationError.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": [],
                "issues": []
            }
        },
        "Validator.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Validator.validate_string": {
            "name": "validate_string",
            "location": 249,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        },
        "Validator.validate_integer": {
            "name": "validate_integer",
            "location": 327,
            "return": [
                "Union[(int, _T0)]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        },
        "Validator.validate_float": {
            "name": "validate_float",
            "location": 401,
            "return": [
                "Union[(float, _T0)]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        },
        "Validator.validate_number": {
            "name": "validate_number",
            "location": 465,
            "return": [
                "Union[(float, _T0)]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        },
        "Validator.validate_boolean": {
            "name": "validate_boolean",
            "location": 531,
            "return": [
                "Union[(bool, _T0)]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        },
        "Validator.validate_datetime": {
            "name": "validate_datetime",
            "location": 587,
            "return": [
                "Union[(_datetime.datetime, _T0)]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        }
    },
    "aiovalidator-master/aiovalidator/__init__.py": {},
    "aiovalidator-master/tests/test_aiovalidator.py": {
        "TestValidator.validator": {
            "name": "validator",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestValidator.test_validate_string_type_str": {
            "name": "test_validate_string_type_str",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_type_bool": {
            "name": "test_validate_string_type_bool",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_type_int": {
            "name": "test_validate_string_type_int",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_type_float": {
            "name": "test_validate_string_type_float",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_type_array": {
            "name": "test_validate_string_type_array",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_type_object": {
            "name": "test_validate_string_type_object",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_nullable": {
            "name": "test_validate_string_nullable",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_minlength": {
            "name": "test_validate_string_minlength",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_maxlength": {
            "name": "test_validate_string_maxlength",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_empty": {
            "name": "test_validate_string_empty",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_allowed": {
            "name": "test_validate_string_allowed",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_string_regex": {
            "name": "test_validate_string_regex",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_type_int": {
            "name": "test_validate_integer_type_int",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_type_float": {
            "name": "test_validate_integer_type_float",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_type_str": {
            "name": "test_validate_integer_type_str",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_type_bool": {
            "name": "test_validate_integer_type_bool",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_type_object": {
            "name": "test_validate_integer_type_object",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_type_array": {
            "name": "test_validate_integer_type_array",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_nullable": {
            "name": "test_validate_integer_nullable",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_min": {
            "name": "test_validate_integer_min",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_max": {
            "name": "test_validate_integer_max",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_integer_allowed": {
            "name": "test_validate_integer_allowed",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_type_float": {
            "name": "test_validate_float_type_float",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_type_str": {
            "name": "test_validate_float_type_str",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_type_bool": {
            "name": "test_validate_float_type_bool",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_type_int": {
            "name": "test_validate_float_type_int",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_type_array": {
            "name": "test_validate_float_type_array",
            "location": 307,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_type_object": {
            "name": "test_validate_float_type_object",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_nullable": {
            "name": "test_validate_float_nullable",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_min": {
            "name": "test_validate_float_min",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_max": {
            "name": "test_validate_float_max",
            "location": 347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_float_allowed": {
            "name": "test_validate_float_allowed",
            "location": 356,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_type_float": {
            "name": "test_validate_number_type_float",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_type_int": {
            "name": "test_validate_number_type_int",
            "location": 372,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_type_str": {
            "name": "test_validate_number_type_str",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_type_bool": {
            "name": "test_validate_number_type_bool",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_type_array": {
            "name": "test_validate_number_type_array",
            "location": 413,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_type_object": {
            "name": "test_validate_number_type_object",
            "location": 424,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_nullable": {
            "name": "test_validate_number_nullable",
            "location": 435,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_min": {
            "name": "test_validate_number_min",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_max": {
            "name": "test_validate_number_max",
            "location": 453,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_number_allowed": {
            "name": "test_validate_number_allowed",
            "location": 462,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_type_bool": {
            "name": "test_validate_boolean_type_bool",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_type_str": {
            "name": "test_validate_boolean_type_str",
            "location": 479,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_type_int": {
            "name": "test_validate_boolean_type_int",
            "location": 488,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_type_float": {
            "name": "test_validate_boolean_type_float",
            "location": 497,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_type_array": {
            "name": "test_validate_boolean_type_array",
            "location": 506,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_type_object": {
            "name": "test_validate_boolean_type_object",
            "location": 515,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_nullable": {
            "name": "test_validate_boolean_nullable",
            "location": 524,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        },
        "TestValidator.test_validate_boolean_allowed": {
            "name": "test_validate_boolean_allowed",
            "location": 531,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "validator": []
            }
        }
    },
    "aiovalidator-master/tests/__init__.py": {}
}
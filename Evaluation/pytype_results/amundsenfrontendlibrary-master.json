{
    "amundsenfrontendlibrary-master/setup.py": {
        "is_npm_installed": {
            "name": "is_npm_installed",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "build_js": {
            "name": "build_js",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/config.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/wsgi.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "config_module_class": [],
                "template_folder": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/v0.py": {
        "current_user": {
            "name": "current_user",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/__init__.py": {
        "init_routes": {
            "name": "init_routes",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "index": {
            "name": "index",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        },
        "healthcheck": {
            "name": "healthcheck",
            "location": 16,
            "return": [
                "Tuple[(str, int)]"
            ],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/announcements/v0.py": {
        "get_announcements": {
            "name": "get_announcements",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/announcements/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/api/log/v0.py": {
        "log_generic_action": {
            "name": "log_generic_action",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "log_generic_action._log_generic_action": {
            "name": "_log_generic_action",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/log/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/api/mail/v0.py": {
        "feedback": {
            "name": "feedback",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "_feedback": {
            "name": "_feedback",
            "location": 67,
            "return": [],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/mail/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/api/metadata/v0.py": {
        "_get_table_endpoint": {
            "name": "_get_table_endpoint",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_get_table_key": {
            "name": "_get_table_key",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "args": []
            }
        },
        "popular_tables": {
            "name": "popular_tables",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "get_table_metadata": {
            "name": "get_table_metadata",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "_get_partition_data": {
            "name": "_get_partition_data",
            "location": 117,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "watermarks": []
            }
        },
        "_get_table_metadata": {
            "name": "_get_table_metadata",
            "location": 132,
            "return": [],
            "arguments": {}
        },
        "_update_table_owner": {
            "name": "_update_table_owner",
            "location": 219,
            "return": [],
            "arguments": {}
        },
        "update_table_owner": {
            "name": "update_table_owner",
            "location": 232,
            "return": [],
            "arguments": {}
        },
        "get_last_indexed": {
            "name": "get_last_indexed",
            "location": 246,
            "return": [],
            "arguments": {}
        },
        "get_table_description": {
            "name": "get_table_description",
            "location": 274,
            "return": [],
            "arguments": {}
        },
        "get_column_description": {
            "name": "get_column_description",
            "location": 299,
            "return": [],
            "arguments": {}
        },
        "put_table_description": {
            "name": "put_table_description",
            "location": 326,
            "return": [],
            "arguments": {}
        },
        "put_column_description": {
            "name": "put_column_description",
            "location": 361,
            "return": [],
            "arguments": {}
        },
        "get_tags": {
            "name": "get_tags",
            "location": 398,
            "return": [],
            "arguments": {}
        },
        "update_table_tags": {
            "name": "update_table_tags",
            "location": 428,
            "return": [],
            "arguments": {}
        },
        "get_user": {
            "name": "get_user",
            "location": 466,
            "return": [],
            "arguments": {}
        },
        "popular_tables._map_results": {
            "name": "_map_results",
            "location": 54,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "_get_table_metadata._map_user_object_to_schema": {
            "name": "_map_user_object_to_schema",
            "location": 134,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "put_table_description._log_put_table_description": {
            "name": "_log_put_table_description",
            "location": 329,
            "return": [],
            "arguments": {}
        },
        "put_column_description._log_put_column_description": {
            "name": "_log_put_column_description",
            "location": 364,
            "return": [],
            "arguments": {}
        },
        "update_table_tags._log_update_table_tags": {
            "name": "_log_update_table_tags",
            "location": 431,
            "return": [],
            "arguments": {}
        },
        "get_user._log_get_user": {
            "name": "_log_get_user",
            "location": 469,
            "return": [],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/metadata/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/api/preview/v0.py": {
        "get_table_preview": {
            "name": "get_table_preview",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/preview/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/api/search/v0.py": {
        "_create_error_response": {
            "name": "_create_error_response",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_validate_search_term": {
            "name": "_validate_search_term",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "search_table": {
            "name": "search_table",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "search_user": {
            "name": "search_user",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "_create_url_with_field": {
            "name": "_create_url_with_field",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_search_user": {
            "name": "_search_user",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "_search_table": {
            "name": "_search_table",
            "location": 157,
            "return": [],
            "arguments": {}
        },
        "_search_dashboard": {
            "name": "_search_dashboard",
            "location": 223,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {}
        },
        "_search_user._map_user_result": {
            "name": "_map_user_result",
            "location": 119,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "_search_table._map_table_result": {
            "name": "_map_table_result",
            "location": 167,
            "return": [],
            "arguments": {
                "result": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/search/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/api/utils/request_utils.py": {
        "get_query_param": {
            "name": "get_query_param",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "args": [],
                "param": [],
                "error_msg": []
            }
        },
        "request_metadata": {
            "name": "request_metadata",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "request_search": {
            "name": "request_search",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "request_wrapper": {
            "name": "request_wrapper",
            "location": 64,
            "return": [
                "Any"
            ],
            "arguments": {
                "method": [],
                "url": [],
                "client": [],
                "headers": [],
                "timeout_sec": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/api/utils/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/base/base_announcement_client.py": {
        "BaseAnnouncementClient.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseAnnouncementClient.get_posts": {
            "name": "get_posts",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseAnnouncementClient._get_posts": {
            "name": "_get_posts",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseAnnouncementClient._get_posts._create_error_response": {
            "name": "_create_error_response",
            "location": 25,
            "return": [],
            "arguments": {
                "message": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/base/base_mail_client.py": {
        "BaseMailClient.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "recipients": []
            }
        },
        "BaseMailClient.send_email": {
            "name": "send_email",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sender": [],
                "recipients": [],
                "subject": [],
                "text": [],
                "html": [],
                "optional_data": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/base/base_preview_client.py": {
        "BasePreviewClient.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePreviewClient.get_preview_data": {
            "name": "get_preview_data",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "params": [],
                "optionalHeaders": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/base/base_superset_preview_client.py": {
        "BaseSupersetPreviewClient.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseSupersetPreviewClient.post_to_sql_json": {
            "name": "post_to_sql_json",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseSupersetPreviewClient.get_preview_data": {
            "name": "get_preview_data",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "params": [],
                "optionalHeaders": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/base/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/base/examples/example_superset_preview_client.py": {
        "SupersetPreviewClient.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SupersetPreviewClient.post_to_sql_json": {
            "name": "post_to_sql_json",
            "location": 26,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/base/examples/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/log/action_log.py": {
        "action_logging": {
            "name": "action_logging",
            "location": 18,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": []
            }
        },
        "get_epoch_millisec": {
            "name": "get_epoch_millisec",
            "location": 58,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "_build_metrics": {
            "name": "_build_metrics",
            "location": 62,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "func_name": []
            }
        },
        "action_logging.wrapper": {
            "name": "wrapper",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/log/action_log_callback.py": {
        "register_pre_exec_callback": {
            "name": "register_pre_exec_callback",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "action_log_callback": []
            }
        },
        "register_post_exec_callback": {
            "name": "register_post_exec_callback",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "action_log_callback": []
            }
        },
        "on_pre_execution": {
            "name": "on_pre_execution",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "action_log_params": []
            }
        },
        "on_post_execution": {
            "name": "on_post_execution",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "action_log_params": []
            }
        },
        "logging_action_log": {
            "name": "logging_action_log",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "action_log_params": []
            }
        },
        "register_action_logs": {
            "name": "register_action_logs",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/log/action_log_model.py": {
        "ActionLogParams.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ActionLogParams.__repr__": {
            "name": "__repr__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/log/__init__.py": {},
    "amundsenfrontendlibrary-master/amundsen_application/models/announcements.py": {
        "Post.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": [],
                "title": [],
                "html_content": []
            }
        },
        "Announcements.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "posts": []
            }
        },
        "AnnouncementsSchema.validate_data": {
            "name": "validate_data",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/models/preview_data.py": {
        "ColumnItem.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "column_name": [],
                "column_type": []
            }
        },
        "PreviewData.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "columns": [],
                "data": [],
                "error_text": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/models/user.py": {
        "load_user": {
            "name": "load_user",
            "location": 102,
            "return": [
                "Any"
            ],
            "arguments": {
                "user_data": []
            }
        },
        "dump_user": {
            "name": "dump_user",
            "location": 111,
            "return": [
                "Any"
            ],
            "arguments": {
                "user": []
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "display_name": [],
                "email": [],
                "employee_type": [],
                "first_name": [],
                "full_name": [],
                "github_username": [],
                "is_active": [],
                "last_name": [],
                "manager_fullname": [],
                "profile_url": [],
                "role_name": [],
                "slack_id": [],
                "team_name": [],
                "user_id": []
            }
        },
        "UserSchema._str_no_value": {
            "name": "_str_no_value",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "UserSchema.preprocess_data": {
            "name": "preprocess_data",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "UserSchema.make_user": {
            "name": "make_user",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "UserSchema.validate_user": {
            "name": "validate_user",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "amundsenfrontendlibrary-master/amundsen_application/models/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/unit/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/unit/api/mail/test_v0.py": {
        "MockMailClient.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status_code": [],
                "recipients": []
            }
        },
        "MockMailClient.send_email": {
            "name": "send_email",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sender": [],
                "recipients": [],
                "subject": [],
                "text": [],
                "html": [],
                "optional_data": []
            }
        },
        "MockBadClient.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockBadClient.send_email": {
            "name": "send_email",
            "location": 32,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "sender": [],
                "recipients": [],
                "subject": [],
                "text": [],
                "html": [],
                "optional_data": []
            }
        },
        "MailTest.test_feedback_client_not_implemented": {
            "name": "test_feedback_client_not_implemented",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailTest.test_feedback_client_success": {
            "name": "test_feedback_client_success",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailTest.test_feedback_client_raise_exception": {
            "name": "test_feedback_client_raise_exception",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MailTest.test_feedback_client_propagate_status_code": {
            "name": "test_feedback_client_propagate_status_code",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/api/mail/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/unit/api/metadata/test_v0.py": {
        "MetadataTest.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_popular_tables_success": {
            "name": "test_popular_tables_success",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_popular_tables_propagate_failure": {
            "name": "test_popular_tables_propagate_failure",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_popular_tables_catch_exception": {
            "name": "test_popular_tables_catch_exception",
            "location": 228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_table_metadata_success": {
            "name": "test_get_table_metadata_success",
            "location": 242,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_update_table_owner_success": {
            "name": "test_update_table_owner_success",
            "location": 267,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_last_indexed_success": {
            "name": "test_get_last_indexed_success",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_last_indexed_propagate_failure": {
            "name": "test_get_last_indexed_propagate_failure",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_table_description_success": {
            "name": "test_get_table_description_success",
            "location": 318,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_table_description_propagate_failure": {
            "name": "test_get_table_description_propagate_failure",
            "location": 336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_put_table_description_success": {
            "name": "test_put_table_description_success",
            "location": 353,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_column_description_success": {
            "name": "test_get_column_description_success",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_column_description_propagate_failure": {
            "name": "test_get_column_description_propagate_failure",
            "location": 402,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_put_column_description_success": {
            "name": "test_put_column_description_success",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_tags": {
            "name": "test_get_tags",
            "location": 452,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_update_table_tags_put": {
            "name": "test_update_table_tags_put",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_update_table_tags_delete": {
            "name": "test_update_table_tags_delete",
            "location": 488,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_user_failure": {
            "name": "test_get_user_failure",
            "location": 510,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MetadataTest.test_get_user_success": {
            "name": "test_get_user_success",
            "location": 522,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/api/metadata/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/unit/api/search/test_v0.py": {
        "SearchTest.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTest.test_search_table_fail_if_no_query": {
            "name": "test_search_table_fail_if_no_query",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTest.test_search_table_fail_if_no_page_index": {
            "name": "test_search_table_fail_if_no_page_index",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTest.test_search_table_success": {
            "name": "test_search_table_success",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTest.test_search_table_fail_on_non_200_response": {
            "name": "test_search_table_fail_on_non_200_response",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTest.test_search_table_fail_on_proccessing_bad_response": {
            "name": "test_search_table_fail_on_proccessing_bad_response",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTest.test_search_table_with_field": {
            "name": "test_search_table_with_field",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchTest.test_create_url_with_field": {
            "name": "test_create_url_with_field",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/api/search/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/unit/base/test_announcement_client.py": {
        "MockClient.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "posts": []
            }
        },
        "MockClient.get_posts": {
            "name": "get_posts",
            "location": 20,
            "return": [
                "amundsen_application.models.announcements.Announcements"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockExceptionClient.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockExceptionClient.get_posts": {
            "name": "get_posts",
            "location": 28,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnnouncementClientTest.test_get_posts_raise_exception": {
            "name": "test_get_posts_raise_exception",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnnouncementClientTest.test_get_posts_invalid_posts_no_date": {
            "name": "test_get_posts_invalid_posts_no_date",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnnouncementClientTest.test_get_posts_invalid_posts_no_title": {
            "name": "test_get_posts_invalid_posts_no_title",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnnouncementClientTest.test_get_posts_success": {
            "name": "test_get_posts_success",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/base/test_preview_client.py": {
        "PreviewClientTest.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PreviewClientTest.tearDown": {
            "name": "tearDown",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PreviewClientTest.cover_abtract_methods": {
            "name": "cover_abtract_methods",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/base/test_superset_preview_client.py": {
        "MockClient.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockClient.post_to_sql_json": {
            "name": "post_to_sql_json",
            "location": 80,
            "return": [
                "unittest.mock.Mock"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockBadDataClient.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockBadDataClient.post_to_sql_json": {
            "name": "post_to_sql_json",
            "location": 91,
            "return": [
                "unittest.mock.Mock"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockExceptionClient.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockExceptionClient.post_to_sql_json": {
            "name": "post_to_sql_json",
            "location": 102,
            "return": [
                "unittest.mock.Mock"
            ],
            "arguments": {
                "self": []
            }
        },
        "SupersetPreviewClientTest.test_get_preview_data_raise_exception": {
            "name": "test_get_preview_data_raise_exception",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SupersetPreviewClientTest.test_post_sql_json_incorrect_data_shape": {
            "name": "test_post_sql_json_incorrect_data_shape",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SupersetPreviewClientTest.test_post_sql_json_correct_data_shape": {
            "name": "test_post_sql_json_correct_data_shape",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/base/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/unit/log/test_action_log.py": {
        "fail_action_logger_callback": {
            "name": "fail_action_logger_callback",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "fail_func": {
            "name": "fail_func",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "success_func": {
            "name": "success_func",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "ActionLogTest.test_metrics_build": {
            "name": "test_metrics_build",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ActionLogTest.test_fail_function": {
            "name": "test_fail_function",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ActionLogTest.test_success_function": {
            "name": "test_success_function",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "fail_action_logger_callback.fail_callback": {
            "name": "fail_callback",
            "location": 65,
            "return": [],
            "arguments": {
                "_action_callback": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/log/__init__.py": {},
    "amundsenfrontendlibrary-master/tests/unit/models/test_user.py": {
        "mock_get_profile_url": {
            "name": "mock_get_profile_url",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "app": []
            }
        },
        "UserTest.test_set_user_id_from_email": {
            "name": "test_set_user_id_from_email",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTest.test_set_display_name_from_full_name": {
            "name": "test_set_display_name_from_full_name",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTest.test_set_display_name_from_email": {
            "name": "test_set_display_name_from_email",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTest.test_set_display_name_from_email_if_full_name_empty": {
            "name": "test_set_display_name_from_email_if_full_name_empty",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTest.test_profile_url": {
            "name": "test_profile_url",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTest.test_raise_error_if_no_display_name": {
            "name": "test_raise_error_if_no_display_name",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTest.test_raise_error_if_no_user_id": {
            "name": "test_raise_error_if_no_user_id",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTest.test_str_no_value": {
            "name": "test_str_no_value",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "amundsenfrontendlibrary-master/tests/unit/models/__init__.py": {}
}
{
    "anki-timelapse-master/playground.py": {
        "get_style": {
            "name": "get_style",
            "location": 23,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "level": []
            }
        },
        "Record.add": {
            "name": "add",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "date": [],
                "log": [],
                "note": [],
                "card": []
            }
        },
        "Record.data": {
            "name": "data",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "anki-timelapse-master/anki_timelapse/card.py": {
        "Card.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "deck_id": [],
                "note_id": []
            }
        },
        "Card.id": {
            "name": "id",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Card.deck_id": {
            "name": "deck_id",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Card.note_id": {
            "name": "note_id",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "anki-timelapse-master/anki_timelapse/database.py": {
        "Database.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "collection_path": []
            }
        },
        "Database.__enter__": {
            "name": "__enter__",
            "location": 22,
            "return": [
                "_TDatabase@@Database@@"
            ],
            "arguments": {
                "self": [
                    "_TDatabase@@Database@@"
                ]
            }
        },
        "Database.is_connected": {
            "name": "is_connected",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Database.get_revlogs": {
            "name": "get_revlogs",
            "location": 31,
            "return": [
                "Generator[(anki_timelapse.revlog.Revlog, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "desc": [],
                "start_timestamp": [],
                "end_timestamp": []
            }
        },
        "Database.get_cards": {
            "name": "get_cards",
            "location": 72,
            "return": [
                "Generator[(anki_timelapse.card.Card, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "deck_id": [],
                "card_ids": []
            }
        },
        "Database.get_notes": {
            "name": "get_notes",
            "location": 94,
            "return": [
                "Generator[(anki_timelapse.note.Note, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "note_ids": []
            }
        },
        "Database.get_rows": {
            "name": "get_rows",
            "location": 110,
            "return": [
                "Generator[(Tuple[(anki_timelapse.revlog.Revlog, anki_timelapse.card.Card, anki_timelapse.note.Note)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "from_timestamp": [],
                "end_timestamp": [],
                "deck_id": []
            }
        },
        "Database.__exit__": {
            "name": "__exit__",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "Optional[Type[BaseException]]"
                ],
                "value": [
                    "Optional[BaseException]"
                ],
                "traceback": []
            }
        }
    },
    "anki-timelapse-master/anki_timelapse/note.py": {
        "Note.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "fields": []
            }
        },
        "Note.id": {
            "name": "id",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Note.fields": {
            "name": "fields",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "anki-timelapse-master/anki_timelapse/revlog.py": {
        "Revlog.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "card_id": [],
                "ease": [],
                "type": [],
                "interval_level": []
            }
        },
        "Revlog.id": {
            "name": "id",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Revlog.card_id": {
            "name": "card_id",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Revlog.ease": {
            "name": "ease",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Revlog.type": {
            "name": "type",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Revlog.interval_level": {
            "name": "interval_level",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "anki-timelapse-master/anki_timelapse/__init__.py": {},
    "anki-timelapse-master/anki_timelapse/__main__.py": {},
    "anki-timelapse-master/tests/test_database.py": {
        "db": {
            "name": "db",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "empty_db": {
            "name": "empty_db",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "test_read_revlog_with_empty_database": {
            "name": "test_read_revlog_with_empty_database",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "empty_db": []
            }
        },
        "test_read_revlog": {
            "name": "test_read_revlog",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "db": []
            }
        },
        "test_read_revlog_order": {
            "name": "test_read_revlog_order",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "db": []
            }
        },
        "test_read_revlog_for_a_given_day": {
            "name": "test_read_revlog_for_a_given_day",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "db": []
            }
        },
        "test_get_cards_on_empty": {
            "name": "test_get_cards_on_empty",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "empty_db": []
            }
        },
        "test_get_cards": {
            "name": "test_get_cards",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "db": []
            }
        },
        "test_get_notes_from_empty_database": {
            "name": "test_get_notes_from_empty_database",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "empty_db": []
            }
        },
        "test_get_notes": {
            "name": "test_get_notes",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "db": []
            }
        },
        "setup_db": {
            "name": "setup_db",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "db": [],
                "copy_from": []
            }
        }
    },
    "anki-timelapse-master/tests/test_sample.py": {
        "test_answer": {
            "name": "test_answer",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
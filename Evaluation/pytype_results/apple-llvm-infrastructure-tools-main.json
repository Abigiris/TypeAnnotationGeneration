{
    "apple-llvm-infrastructure-tools-main/setup.py": {
        "CleanCommand.initialize_options": {
            "name": "initialize_options",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CleanCommand.finalize_options": {
            "name": "finalize_options",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CleanCommand.run": {
            "name": "run",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InfoCommand.initialize_options": {
            "name": "initialize_options",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InfoCommand.finalize_options": {
            "name": "finalize_options",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InfoCommand.run": {
            "name": "run",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/docs/conf.py": {},
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/am_config.py": {
        "find_am_configs": {
            "name": "find_am_configs",
            "location": 63,
            "return": [
                "List[AMTargetBranchConfig]"
            ],
            "arguments": {
                "remote": []
            }
        },
        "find_am_config_dict": {
            "name": "find_am_config_dict",
            "location": 74,
            "return": [
                "dict"
            ],
            "arguments": {
                "remote": []
            }
        },
        "read_config_for_branch": {
            "name": "read_config_for_branch",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "branch": [],
                "remote": []
            }
        },
        "AMTargetBranchConfig.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "json": []
            }
        },
        "AMTargetBranchConfig.__repr__": {
            "name": "__repr__",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AMTargetBranchConfig.can_merge_without_testing": {
            "name": "can_merge_without_testing",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/am_status.py": {
        "compute_inflight_commit_count": {
            "name": "compute_inflight_commit_count",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "commits": [],
                "commits_inflight": []
            }
        },
        "print_edge_status": {
            "name": "print_edge_status",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "upstream_branch": [],
                "target_branch": [],
                "inflight_merges": [],
                "list_commits": [],
                "remote": [],
                "graph": [],
                "query_ci_status": []
            }
        },
        "print_zippered_edge_status": {
            "name": "print_zippered_edge_status",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "remote": [],
                "graph": []
            }
        },
        "print_status": {
            "name": "print_status",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "remotes": [],
                "target_branch": [],
                "list_commits": [],
                "query_ci_status": [],
                "graph_format": []
            }
        },
        "print_edge_status.print_commit_status": {
            "name": "print_commit_status",
            "location": 51,
            "return": [],
            "arguments": {
                "commit": [],
                "check_for_merge_conflict": []
            }
        },
        "print_zippered_edge_status.printUnmergedCommits": {
            "name": "printUnmergedCommits",
            "location": 106,
            "return": [],
            "arguments": {
                "commits": [],
                "branch": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/core.py": {
        "has_merge_conflict": {
            "name": "has_merge_conflict",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "commit": [],
                "target_branch": [],
                "remote": []
            }
        },
        "compute_unmerged_commits": {
            "name": "compute_unmerged_commits",
            "location": 51,
            "return": [
                "Optional[List[str]]"
            ],
            "arguments": {
                "remote": [],
                "target_branch": [],
                "upstream_branch": [],
                "format": []
            }
        },
        "find_inflight_merges": {
            "name": "find_inflight_merges",
            "location": 66,
            "return": [
                "Dict[(str, List[str])]"
            ],
            "arguments": {
                "remote": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/graph.py": {
        "compute_edge": {
            "name": "compute_edge",
            "location": 119,
            "return": [
                "Edge"
            ],
            "arguments": {
                "upstream_branch": [],
                "target_branch": [],
                "commits_inflight": [],
                "commits_unmerged": [],
                "remote": [],
                "query_ci_status": []
            }
        },
        "compute_zippered_edges": {
            "name": "compute_zippered_edges",
            "location": 161,
            "return": [
                "Tuple[(Edge, Edge)]"
            ],
            "arguments": {
                "config": [],
                "remote": [],
                "merges": []
            }
        },
        "create_subgraph": {
            "name": "create_subgraph",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [],
                "name": [],
                "nodes": []
            }
        },
        "add_branches": {
            "name": "add_branches",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "graph": [],
                "branches": []
            }
        },
        "create_graph": {
            "name": "create_graph",
            "location": 220,
            "return": [
                "Any"
            ],
            "arguments": {
                "fmt": []
            }
        },
        "Subgraph.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Subgraph.add_node": {
            "name": "add_node",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Subgraph.__getitem__": {
            "name": "__getitem__",
            "location": 53,
            "return": [
                "_TSubgraph@@Subgraph@@"
            ],
            "arguments": {
                "self": [
                    "_TSubgraph@@Subgraph@@"
                ],
                "name": []
            }
        },
        "Subgraph.materialize": {
            "name": "materialize",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "graph": []
            }
        },
        "EdgeStates.get_color": {
            "name": "get_color",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "state": []
            }
        },
        "EdgeStates.get_state": {
            "name": "get_state",
            "location": 86,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "commit_state": []
            }
        },
        "Edge.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "upstream": [],
                "target": []
            }
        },
        "Edge.set_state": {
            "name": "set_state",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "Edge.set_constraint": {
            "name": "set_constraint",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "constraint": []
            }
        },
        "Edge.materialize": {
            "name": "materialize",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "graph": []
            }
        },
        "compute_edge.get_commit_state": {
            "name": "get_commit_state",
            "location": 130,
            "return": [],
            "arguments": {
                "commit": [],
                "check_for_merge_conflict": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/main.py": {
        "am": {
            "name": "am",
            "location": 16,
            "return": [],
            "arguments": {
                "verbose": []
            }
        },
        "status": {
            "name": "status",
            "location": 60,
            "return": [],
            "arguments": {
                "target": [],
                "all_commits": [],
                "remote": [],
                "no_fetch": [],
                "ci_status": [],
                "graph": [],
                "graph_format": []
            }
        },
        "result": {
            "name": "result",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "set": {
            "name": "set",
            "location": 88,
            "return": [],
            "arguments": {
                "merge_id": [],
                "status": []
            }
        },
        "get": {
            "name": "get",
            "location": 99,
            "return": [],
            "arguments": {
                "merge_id": []
            }
        },
        "url": {
            "name": "url",
            "location": 106,
            "return": [],
            "arguments": {}
        },
        "seturl": {
            "name": "seturl",
            "location": 115,
            "return": [],
            "arguments": {
                "merge_id": [],
                "build_url": []
            }
        },
        "geturl": {
            "name": "geturl",
            "location": 123,
            "return": [],
            "arguments": {
                "merge_id": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/oracle.py": {
        "get_credentials": {
            "name": "get_credentials",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "redis_hostname": []
            }
        },
        "get_state": {
            "name": "get_state",
            "location": 36,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "tree_hash": []
            }
        },
        "set_state": {
            "name": "set_state",
            "location": 45,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "tree_hash": [],
                "state": []
            }
        },
        "clear_state": {
            "name": "clear_state",
            "location": 50,
            "return": [
                "int"
            ],
            "arguments": {
                "tree_hash": []
            }
        },
        "get_ci_status": {
            "name": "get_ci_status",
            "location": 55,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "commit_hash": [],
                "target_branch": []
            }
        },
        "set_build_url": {
            "name": "set_build_url",
            "location": 64,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "merge_id": [],
                "url": []
            }
        },
        "get_build_url": {
            "name": "get_build_url",
            "location": 69,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "merge_id": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/zippered_merge.py": {
        "find_next_matching_merge_base": {
            "name": "find_next_matching_merge_base",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "left": [],
                "right": []
            }
        },
        "compute_zippered_merge_commits": {
            "name": "compute_zippered_merge_commits",
            "location": 94,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "left": [],
                "right": [],
                "stop_on_first": []
            }
        },
        "compute_zippered_merges": {
            "name": "compute_zippered_merges",
            "location": 123,
            "return": [
                "Optional[List[list]]"
            ],
            "arguments": {
                "remote": [],
                "target": [],
                "left_upstream": [],
                "right_upstream": [],
                "common_ancestor": [],
                "max_commits": [],
                "stop_on_first": []
            }
        },
        "BranchIterator.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commits": [],
                "merge_base_generator": [],
                "initial_merge_base": []
            }
        },
        "BranchIterator.has_commits": {
            "name": "has_commits",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BranchIterator._get_merge_base": {
            "name": "_get_merge_base",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "BranchIterator.prev_merge_base": {
            "name": "prev_merge_base",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BranchIterator.current_merge_base": {
            "name": "current_merge_base",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BranchIterator.takeCommit": {
            "name": "takeCommit",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BranchIterator.find_matching_merge_base": {
            "name": "find_matching_merge_base",
            "location": 72,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "right": []
            }
        },
        "compute_zippered_merges.emptyIfNoneOrReversed": {
            "name": "emptyIfNoneOrReversed",
            "location": 132,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "compute_zippered_merges.computeMergeBase": {
            "name": "computeMergeBase",
            "location": 149,
            "return": [],
            "arguments": {
                "commit": []
            }
        },
        "compute_zippered_merges.computeInitialMergeBase": {
            "name": "computeInitialMergeBase",
            "location": 152,
            "return": [],
            "arguments": {
                "branch": [],
                "commits": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/am/__init__.py": {},
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/ci/jenkins_ci.py": {
        "_create_jenkins_token_auth": {
            "name": "_create_jenkins_token_auth",
            "location": 78,
            "return": [
                "Tuple[(_T2, Any)]"
            ],
            "arguments": {
                "url": [],
                "domain_key": [],
                "username": [
                    "_T2@@"
                ],
                "password": []
            }
        },
        "_load_jenkins_token_auth": {
            "name": "_load_jenkins_token_auth",
            "location": 107,
            "return": [
                "Optional[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "domain_key": []
            }
        },
        "_get_jenkins_auth": {
            "name": "_get_jenkins_auth",
            "location": 115,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "url": []
            }
        },
        "CIDispatchError.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "status_code": [],
                "error": []
            }
        },
        "CIDispatchError.__repr__": {
            "name": "__repr__",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "JenkinsCIJob.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "json": []
            }
        },
        "JenkinsCIJob.dispatch": {
            "name": "dispatch",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [],
                "auth": [],
                "test_plan_name": []
            }
        },
        "JenkinsCIConfig.__init__": {
            "name": "__init__",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "json": []
            }
        },
        "JenkinsCIConfig.dispatch_with_auth": {
            "name": "dispatch_with_auth",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [],
                "auth": [],
                "test_plan_name": []
            }
        },
        "JenkinsCIConfig.dispatch": {
            "name": "dispatch",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": [],
                "test_plan_name": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/ci/test_plans.py": {
        "TestPlan.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "json": []
            }
        },
        "TestPlan.dispatch": {
            "name": "dispatch",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "TestPlanNotFoundError.__init__": {
            "name": "__init__",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TestPlanDispatcher.dispatch_test_plan_for_pull_request": {
            "name": "dispatch_test_plan_for_pull_request",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "pr_number": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/ci/__init__.py": {},
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/config/__init__.py": {
        "get_config_dir": {
            "name": "get_config_dir",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_or_create_config_dir": {
            "name": "get_or_create_config_dir",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "write_config": {
            "name": "write_config",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": [],
                "contents": []
            }
        },
        "read_config": {
            "name": "read_config",
            "location": 41,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "filename": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/git_tools/push.py": {
        "get_split_directory_for_git_path": {
            "name": "get_split_directory_for_git_path",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "git_path": []
            }
        },
        "split_dir_to_str": {
            "name": "split_dir_to_str",
            "location": 63,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "split_dir": [
                    "_T0@@"
                ]
            }
        },
        "has_existing_remote": {
            "name": "has_existing_remote",
            "location": 105,
            "return": [
                "bool"
            ],
            "arguments": {
                "remote_name": [],
                "remote_url": []
            }
        },
        "isKnownTrackingBranch": {
            "name": "isKnownTrackingBranch",
            "location": 178,
            "return": [
                "bool"
            ],
            "arguments": {
                "remote": [],
                "b": []
            }
        },
        "compute_commit_graph": {
            "name": "compute_commit_graph",
            "location": 235,
            "return": [
                "Optional[CommitGraph]"
            ],
            "arguments": {
                "git_output": []
            }
        },
        "find_base_split_commit": {
            "name": "find_base_split_commit",
            "location": 248,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "split_dir": [],
                "base_commit": []
            }
        },
        "regraft_commit_graph_onto_split_repo": {
            "name": "regraft_commit_graph_onto_split_repo",
            "location": 278,
            "return": [
                "Optional[CommitGraph]"
            ],
            "arguments": {
                "commit_graph": [],
                "split_dir": []
            }
        },
        "merge_commit_graph_with_top_of_branch": {
            "name": "merge_commit_graph_with_top_of_branch",
            "location": 373,
            "return": [
                "Any"
            ],
            "arguments": {
                "commit_graph": [],
                "split_dir": [],
                "destination_branch": [],
                "strategy": []
            }
        },
        "load_push_config": {
            "name": "load_push_config",
            "location": 436,
            "return": [
                "Optional[GitPushConfiguration]"
            ],
            "arguments": {
                "source_ref": [],
                "dest_branch": []
            }
        },
        "fatal": {
            "name": "fatal",
            "location": 449,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "message": []
            }
        },
        "git_apple_llvm_push": {
            "name": "git_apple_llvm_push",
            "location": 474,
            "return": [],
            "arguments": {
                "refspec": [],
                "dry_run": [],
                "verbose": [],
                "merge_strategy": [],
                "push_limit": []
            }
        },
        "GitPushConfiguration.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "branch_to_dest_branch_mapping": [],
                "repo_mapping": []
            }
        },
        "GitPushConfiguration.get_split_repo_branch": {
            "name": "get_split_repo_branch",
            "location": 89,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "dir": [],
                "monorepo_branch": []
            }
        },
        "GitPushConfiguration.can_push_to_split_dir": {
            "name": "can_push_to_split_dir",
            "location": 98,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "dir": []
            }
        },
        "SplitRemote.__init__": {
            "name": "__init__",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "split_dir": [],
                "remote_url": [],
                "destination_branch": []
            }
        },
        "SplitRemote.update_remote": {
            "name": "update_remote",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplitRemote.update_mono_remote": {
            "name": "update_mono_remote",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplitRemote.begin": {
            "name": "begin",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplitRemote.push": {
            "name": "push",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "CommitGraph.__init__": {
            "name": "__init__",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commits": [],
                "roots": []
            }
        },
        "CommitGraph.source_commit_hash": {
            "name": "source_commit_hash",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommitGraph.has_merges": {
            "name": "has_merges",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommitGraph.__get_changed_filenames": {
            "name": "__get_changed_filenames",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommitGraph.compute_changed_files": {
            "name": "compute_changed_files",
            "location": 216,
            "return": [
                "set"
            ],
            "arguments": {
                "self": [],
                "split_dir": []
            }
        },
        "CommitGraph.compute_changed_split_repos": {
            "name": "compute_changed_split_repos",
            "location": 225,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegraftNoSplitRootError.__init__": {
            "name": "__init__",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root_commit_hash": []
            }
        },
        "RegraftMissingSplitRootError.__init__": {
            "name": "__init__",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root_commit_hash": []
            }
        },
        "ImpossibleMergeError.__init__": {
            "name": "__init__",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "operation": [],
                "git_error": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/git_tools/tracked_branch_ref.py": {
        "get_tracked_branch_ref": {
            "name": "get_tracked_branch_ref",
            "location": 17,
            "return": [
                "Optional[TrackedBranchRef]"
            ],
            "arguments": {
                "branch_name": []
            }
        },
        "TrackedBranchRef.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "remote_name": [],
                "remote_url": [],
                "branch_name": [],
                "head_hash": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/git_tools/verify_branch_contents.py": {
        "fatal": {
            "name": "fatal",
            "location": 10,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "message": []
            }
        },
        "verify_swift_branch": {
            "name": "verify_swift_branch",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "branch_name": []
            }
        },
        "verify_branch_contents": {
            "name": "verify_branch_contents",
            "location": 30,
            "return": [],
            "arguments": {
                "branch_name": [],
                "verbose": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/git_tools/__init__.py": {
        "get_dev_null": {
            "name": "get_dev_null",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_git_to_str": {
            "name": "_git_to_str",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "args": []
            }
        },
        "invoke": {
            "name": "invoke",
            "location": 53,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "git": {
            "name": "git",
            "location": 93,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "git_output": {
            "name": "git_output",
            "location": 98,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "get_current_checkout_directory": {
            "name": "get_current_checkout_directory",
            "location": 105,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "read_file_or_none": {
            "name": "read_file_or_none",
            "location": 110,
            "return": [
                "Any"
            ],
            "arguments": {
                "ref_name": [],
                "path": []
            }
        },
        "commit_exists": {
            "name": "commit_exists",
            "location": 115,
            "return": [
                "Any"
            ],
            "arguments": {
                "hash": []
            }
        },
        "GitError.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [],
                "returncode": [],
                "stdout": [],
                "stderr": []
            }
        },
        "GitError.__repr__": {
            "name": "__repr__",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/pr/github_pr_tool.py": {
        "_doesRepoMatchURL": {
            "name": "_doesRepoMatchURL",
            "location": 72,
            "return": [
                "Any"
            ],
            "arguments": {
                "repo": [],
                "url": []
            }
        },
        "_create_access_token": {
            "name": "_create_access_token",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "domain": [],
                "username": [],
                "password": []
            }
        },
        "_load_access_token": {
            "name": "_load_access_token",
            "location": 134,
            "return": [
                "Any"
            ],
            "arguments": {
                "domain": []
            }
        },
        "create_github_pr_tool": {
            "name": "create_github_pr_tool",
            "location": 141,
            "return": [
                "GithubPRTool"
            ],
            "arguments": {
                "domain": [],
                "user": [],
                "repo": []
            }
        },
        "GithubPullRequestInfo.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pr": []
            }
        },
        "GithubPullRequestInfo.number": {
            "name": "number",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequestInfo.state": {
            "name": "state",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequestInfo.title": {
            "name": "title",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequestInfo.body_text": {
            "name": "body_text",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequestInfo.author_username": {
            "name": "author_username",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequestInfo.base_branch": {
            "name": "base_branch",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequestInfo.url": {
            "name": "url",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequest.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pr": []
            }
        },
        "GithubPullRequest.info": {
            "name": "info",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubPullRequest.add_comment": {
            "name": "add_comment",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "GithubPullRequest.test_swift_ci": {
            "name": "test_swift_ci",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GithubPRTool.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gh": [],
                "repo": []
            }
        },
        "GithubPRTool.list": {
            "name": "list",
            "location": 81,
            "return": [
                "builtins.list[GithubPullRequestInfo]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GithubPRTool.get_pr_from_number": {
            "name": "get_pr_from_number",
            "location": 84,
            "return": [
                "Optional[GithubPullRequest]"
            ],
            "arguments": {
                "self": [],
                "pr_number": []
            }
        },
        "GithubPRTool.find_head_repo_owner": {
            "name": "find_head_repo_owner",
            "location": 92,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "GithubPRTool.create_pr": {
            "name": "create_pr",
            "location": 100,
            "return": [
                "GithubPullRequest"
            ],
            "arguments": {
                "self": [],
                "title": [],
                "base_branch": [],
                "head_repo_url": [],
                "head_branch": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/pr/main.py": {
        "pr_tool_type_from_string": {
            "name": "pr_tool_type_from_string",
            "location": 30,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "pr_test_type_from_string": {
            "name": "pr_test_type_from_string",
            "location": 36,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "load_pr_config": {
            "name": "load_pr_config",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "fatal": {
            "name": "fatal",
            "location": 94,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "pr": {
            "name": "pr",
            "location": 101,
            "return": [],
            "arguments": {
                "verbose": []
            }
        },
        "list": {
            "name": "list",
            "location": 125,
            "return": [],
            "arguments": {
                "target": []
            }
        },
        "make_pr_number_ref": {
            "name": "make_pr_number_ref",
            "location": 183,
            "return": [],
            "arguments": {
                "pr": []
            }
        },
        "max_length": {
            "name": "max_length",
            "location": 188,
            "return": [],
            "arguments": {
                "text": [],
                "max_len": []
            }
        },
        "shorten": {
            "name": "shorten",
            "location": 195,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "test": {
            "name": "test",
            "location": 205,
            "return": [],
            "arguments": {
                "pr_ref": [],
                "test": []
            }
        },
        "create": {
            "name": "create",
            "location": 240,
            "return": [],
            "arguments": {
                "title": [],
                "head": [],
                "base": [],
                "dry_run": []
            }
        },
        "PRToolConfiguration.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "domain": [],
                "user": [],
                "repo": [],
                "test_type": []
            }
        },
        "PRToolConfiguration.create_tool": {
            "name": "create_tool",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PRToolConfiguration.create_github_tool": {
            "name": "create_github_tool",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "list._ident": {
            "name": "_ident",
            "location": 127,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "PullRequestNumber.__init__": {
            "name": "__init__",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "pr_number": []
            }
        },
        "PullRequestNumber.__repr__": {
            "name": "__repr__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequestParamType.convert": {
            "name": "convert",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "param": [],
                "ctx": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/pr/pr_tool.py": {
        "PullRequestInfo.number": {
            "name": "number",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequestInfo.state": {
            "name": "state",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequestInfo.title": {
            "name": "title",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequestInfo.body_text": {
            "name": "body_text",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequestInfo.author_username": {
            "name": "author_username",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequestInfo.base_branch": {
            "name": "base_branch",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequestInfo.url": {
            "name": "url",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequest.info": {
            "name": "info",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PullRequest.test_swift_ci": {
            "name": "test_swift_ci",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PullRequest.test_jenkins_test_plans": {
            "name": "test_jenkins_test_plans",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test_plan_name": []
            }
        },
        "PRTool.list": {
            "name": "list",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PRTool.get_pr_from_number": {
            "name": "get_pr_from_number",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pr_number": []
            }
        },
        "PRTool.create_pr": {
            "name": "create_pr",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [],
                "base_branch": [],
                "head_repo_url": [],
                "head_branch": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/git_apple_llvm/pr/__init__.py": {},
    "apple-llvm-infrastructure-tools-main/src/tools/check_for_updates.py": {
        "_current_day": {
            "name": "_current_day",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "reset_update_state": {
            "name": "reset_update_state",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "update_repository": {
            "name": "update_repository",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "InfrastructureToolsGitRepo.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InfrastructureToolsGitRepo.run_git_command": {
            "name": "run_git_command",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "InfrastructureToolsGitRepo.get_remote_name_if_master_checkout": {
            "name": "get_remote_name_if_master_checkout",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/src/tools/__init__.py": {},
    "apple-llvm-infrastructure-tools-main/test/am/test_am_config.py": {
        "am_tool_git_repo": {
            "name": "am_tool_git_repo",
            "location": 16,
            "return": [],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "am_tool_git_repo_clone": {
            "name": "am_tool_git_repo_clone",
            "location": 43,
            "return": [],
            "arguments": {
                "tmp_path_factory": [],
                "am_tool_git_repo": []
            }
        },
        "cd_to_am_tool_repo_clone": {
            "name": "cd_to_am_tool_repo_clone",
            "location": 53,
            "return": [],
            "arguments": {
                "am_tool_git_repo_clone": []
            }
        },
        "test_am_config": {
            "name": "test_am_config",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_am_tool_repo_clone": []
            }
        },
        "test_am_print_status": {
            "name": "test_am_print_status",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_am_tool_repo_clone": [],
                "capfd": []
            }
        },
        "test_am_status": {
            "name": "test_am_status",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_am_tool_repo_clone": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/am/test_am_status.py": {
        "am_tool_git_repo": {
            "name": "am_tool_git_repo",
            "location": 14,
            "return": [],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "am_tool_git_repo_clone": {
            "name": "am_tool_git_repo_clone",
            "location": 36,
            "return": [],
            "arguments": {
                "tmp_path_factory": [],
                "am_tool_git_repo": []
            }
        },
        "cd_to_am_tool_repo_clone": {
            "name": "cd_to_am_tool_repo_clone",
            "location": 46,
            "return": [],
            "arguments": {
                "am_tool_git_repo_clone": []
            }
        },
        "test_am_status_ci_state": {
            "name": "test_am_status_ci_state",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "cd_to_am_tool_repo_clone": []
            }
        },
        "test_am_status_ci_state.fake_redis": {
            "name": "fake_redis",
            "location": 54,
            "return": [],
            "arguments": {
                "arg": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/am/test_merge_conflict.py": {
        "am_tool_git_repo": {
            "name": "am_tool_git_repo",
            "location": 14,
            "return": [],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "am_tool_git_repo_clone": {
            "name": "am_tool_git_repo_clone",
            "location": 42,
            "return": [],
            "arguments": {
                "tmp_path_factory": [],
                "am_tool_git_repo": []
            }
        },
        "cd_to_am_tool_repo_clone": {
            "name": "cd_to_am_tool_repo_clone",
            "location": 52,
            "return": [],
            "arguments": {
                "am_tool_git_repo_clone": []
            }
        },
        "test_am_merge_conflict": {
            "name": "test_am_merge_conflict",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_am_tool_repo_clone": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/am/test_secondary_edge_status.py": {
        "am_tool_git_repo": {
            "name": "am_tool_git_repo",
            "location": 14,
            "return": [],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "am_tool_git_repo_clone": {
            "name": "am_tool_git_repo_clone",
            "location": 65,
            "return": [],
            "arguments": {
                "tmp_path_factory": [],
                "am_tool_git_repo": []
            }
        },
        "cd_to_am_tool_repo_clone": {
            "name": "cd_to_am_tool_repo_clone",
            "location": 75,
            "return": [],
            "arguments": {
                "am_tool_git_repo_clone": []
            }
        },
        "test_am_secondary_edge_status": {
            "name": "test_am_secondary_edge_status",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_am_tool_repo_clone": []
            }
        },
        "test_am_secondary_edge_status_merged": {
            "name": "test_am_secondary_edge_status_merged",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_am_tool_repo_clone": []
            }
        },
        "test_am_secondary_edge_status_blocked": {
            "name": "test_am_secondary_edge_status_blocked",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_am_tool_repo_clone": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/am/test_zippered_merge.py": {
        "br": {
            "name": "br",
            "location": 9,
            "return": [
                "git_apple_llvm.am.zippered_merge.BranchIterator"
            ],
            "arguments": {
                "commits": [],
                "merge_bases": [],
                "initial_merge_base": []
            }
        },
        "test_zippered_merge_alg_no_zipper": {
            "name": "test_zippered_merge_alg_no_zipper",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_zippered_merge_alg": {
            "name": "test_zippered_merge_alg",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "apple-llvm-infrastructure-tools-main/test/auto-updater/test_check_for_updates.py": {
        "init_repo": {
            "name": "init_repo",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_update_checker": {
            "name": "test_update_checker",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/ci/test_jenkins_testplan_dispatch_for_pr.py": {
        "ci_tool_git_repo": {
            "name": "ci_tool_git_repo",
            "location": 19,
            "return": [],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "ci_tool_repo_clone": {
            "name": "ci_tool_repo_clone",
            "location": 72,
            "return": [],
            "arguments": {
                "tmp_path_factory": [],
                "ci_tool_git_repo": []
            }
        },
        "cd_to_pr_tool_repo": {
            "name": "cd_to_pr_tool_repo",
            "location": 82,
            "return": [],
            "arguments": {
                "ci_tool_repo_clone": []
            }
        },
        "config_dir": {
            "name": "config_dir",
            "location": 90,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_pr_tool_list": {
            "name": "test_pr_tool_list",
            "location": 98,
            "return": [],
            "arguments": {
                "config_dir": [],
                "cd_to_pr_tool_repo": [],
                "capfd": []
            }
        },
        "test_pr_tool_list.request_callback": {
            "name": "request_callback",
            "location": 101,
            "return": [],
            "arguments": {
                "request": [],
                "uri": [],
                "response_headers": []
            }
        },
        "test_pr_tool_list.request_callback_err": {
            "name": "request_callback_err",
            "location": 124,
            "return": [],
            "arguments": {
                "request": [],
                "uri": [],
                "response_headers": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/config/test_config.py": {
        "config_dir": {
            "name": "config_dir",
            "location": 11,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_config_file": {
            "name": "test_config_file",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "config_dir": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/conftest.py": {
        "monorepo_test_fixture": {
            "name": "monorepo_test_fixture",
            "location": 77,
            "return": [],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "cd_to_monorepo": {
            "name": "cd_to_monorepo",
            "location": 90,
            "return": [],
            "arguments": {
                "monorepo_test_fixture": []
            }
        },
        "cd_to_monorepo_clone": {
            "name": "cd_to_monorepo_clone",
            "location": 101,
            "return": [],
            "arguments": {
                "monorepo_test_fixture": []
            }
        },
        "monorepo_simple_clang_remote_git_dir": {
            "name": "monorepo_simple_clang_remote_git_dir",
            "location": 113,
            "return": [],
            "arguments": {
                "monorepo_test_fixture": []
            }
        },
        "monorepo_simple_llvm_remote_git_dir": {
            "name": "monorepo_simple_llvm_remote_git_dir",
            "location": 122,
            "return": [],
            "arguments": {
                "monorepo_test_fixture": []
            }
        },
        "monorepo_simple_root_remote_git_dir": {
            "name": "monorepo_simple_root_remote_git_dir",
            "location": 131,
            "return": [],
            "arguments": {
                "monorepo_test_fixture": []
            }
        },
        "MonorepoFixture.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "clone_path": [],
                "clang_split_remote_path": [],
                "llvm_split_remote_path": [],
                "root_split_remote_path": []
            }
        },
        "MonorepoFixture.checkout_internal_master": {
            "name": "checkout_internal_master",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MonorepoFixture.__init__.create_split_remote": {
            "name": "create_split_remote",
            "location": 54,
            "return": [],
            "arguments": {
                "path": [],
                "split_dir": [],
                "branch_name": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/monorepo_test_harness.py": {
        "checkout_and_clean": {
            "name": "checkout_and_clean",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "commit_hash": []
            }
        },
        "start_new_orphan_branch": {
            "name": "start_new_orphan_branch",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "name": []
            }
        },
        "commit_file": {
            "name": "commit_file",
            "location": 26,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "filename": [],
                "text": [],
                "trailers": []
            }
        },
        "create_monorepo": {
            "name": "create_monorepo",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "commits": []
            }
        },
        "create_simple_test_harness": {
            "name": "create_simple_test_harness",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "push_config_json": []
            }
        },
        "CommitBlueprint.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "split_dir": [],
                "split_commit_hash": []
            }
        },
        "BlobCommitBlueprint.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "split_dir": [],
                "filename": [],
                "text": [],
                "split_commit_hash": [],
                "parent": [],
                "is_internal": []
            }
        },
        "BlobCommitBlueprint.monorepo_filename": {
            "name": "monorepo_filename",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MergeCommitBlueprint.__init__": {
            "name": "__init__",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "split_dir": [],
                "split_commit_hash": [],
                "downstream": [],
                "upstream": []
            }
        },
        "SplitRepoBuilder.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "split_dir": []
            }
        },
        "SplitRepoBuilder.commit_file": {
            "name": "commit_file",
            "location": 92,
            "return": [
                "BlobCommitBlueprint"
            ],
            "arguments": {
                "self": [],
                "filename": [],
                "text": [],
                "parent": [],
                "internal": []
            }
        },
        "SplitRepoBuilder.commit_merge": {
            "name": "commit_merge",
            "location": 109,
            "return": [
                "MergeCommitBlueprint"
            ],
            "arguments": {
                "self": [],
                "downstream": [],
                "upstream": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/test_git_tools.py": {
        "test_git_invocation": {
            "name": "test_git_invocation",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/test_merge_commit_graph.py": {
        "split_clang_head_in_monorepo": {
            "name": "split_clang_head_in_monorepo",
            "location": 13,
            "return": [],
            "arguments": {
                "cd_to_monorepo": []
            }
        },
        "merge_strategy": {
            "name": "merge_strategy",
            "location": 23,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "test_fast_forward_commit_graph": {
            "name": "test_fast_forward_commit_graph",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "split_clang_head_in_monorepo": [],
                "merge_strategy": []
            }
        },
        "test_rebase_commit_graph": {
            "name": "test_rebase_commit_graph",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "split_clang_head_in_monorepo": [],
                "merge_strategy": []
            }
        },
        "test_merge_commit_graph": {
            "name": "test_merge_commit_graph",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "split_clang_head_in_monorepo": [],
                "merge_strategy": []
            }
        },
        "test_merge_conflict": {
            "name": "test_merge_conflict",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "split_clang_head_in_monorepo": [],
                "merge_strategy": []
            }
        },
        "test_rebase_commit_graph.doit": {
            "name": "doit",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "test_merge_commit_graph.doit": {
            "name": "doit",
            "location": 85,
            "return": [],
            "arguments": {}
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/test_monorepo_test_harness.py": {
        "test_monorepo_simple_test_harness": {
            "name": "test_monorepo_simple_test_harness",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/test_push.py": {
        "test_push_invalid_source_ref": {
            "name": "test_push_invalid_source_ref",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo": []
            }
        },
        "test_push_invalid_dest_ref": {
            "name": "test_push_invalid_dest_ref",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo": []
            }
        },
        "test_push_invalid_single_ref_name": {
            "name": "test_push_invalid_single_ref_name",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo": []
            }
        },
        "test_push_unsupported_def_ref": {
            "name": "test_push_unsupported_def_ref",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": []
            }
        },
        "test_push_up_to_date": {
            "name": "test_push_up_to_date",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": []
            }
        },
        "test_push_clang_commit": {
            "name": "test_push_clang_commit",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": [],
                "monorepo_simple_clang_remote_git_dir": [],
                "capfd": []
            }
        },
        "test_push_root_commit": {
            "name": "test_push_root_commit",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": [],
                "monorepo_simple_root_remote_git_dir": [],
                "capfd": []
            }
        },
        "test_push_prohibited_split_dir": {
            "name": "test_push_prohibited_split_dir",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": []
            }
        },
        "test_push_many_llvm_commits": {
            "name": "test_push_many_llvm_commits",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": [],
                "monorepo_simple_llvm_remote_git_dir": []
            }
        },
        "test_reject_mapped_commit": {
            "name": "test_reject_mapped_commit",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/test_regraft_commit_graph.py": {
        "test_regraft_commit_graph": {
            "name": "test_regraft_commit_graph",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo": []
            }
        },
        "test_regraft_no_split_root": {
            "name": "test_regraft_no_split_root",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo": []
            }
        },
        "test_regraft_missing_split_root": {
            "name": "test_regraft_missing_split_root",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/git-tools/test_tracked_branch_ref.py": {
        "optional_remote_prefix": {
            "name": "optional_remote_prefix",
            "location": 14,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "test_get_tracked_branch_ref": {
            "name": "test_get_tracked_branch_ref",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": [],
                "monorepo_test_fixture": [],
                "optional_remote_prefix": []
            }
        },
        "test_different_tracked_branch_ref": {
            "name": "test_different_tracked_branch_ref",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": [],
                "monorepo_test_fixture": [],
                "optional_remote_prefix": []
            }
        },
        "test_get_no_tracked_branch_ref": {
            "name": "test_get_no_tracked_branch_ref",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_monorepo_clone": [],
                "optional_remote_prefix": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/pr/github_mock_pr_tool.py": {
        "_convert_pr_state": {
            "name": "_convert_pr_state",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "state": []
            }
        },
        "create_mock_github_pr_tool": {
            "name": "create_mock_github_pr_tool",
            "location": 69,
            "return": [
                "git_apple_llvm.pr.github_pr_tool.GithubPRTool"
            ],
            "arguments": {
                "mock": []
            }
        },
        "_GitHubUser.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "login": []
            }
        },
        "_GitHubBranch.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ref": []
            }
        },
        "_GitHubPullRequest.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pr": []
            }
        },
        "_GitHubPullRequest.create_comment": {
            "name": "create_comment",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": []
            }
        },
        "_GitHubRepo.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prs": []
            }
        },
        "_GitHubRepo.pull_requests": {
            "name": "pull_requests",
            "location": 49,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "_GitHubRepo.pull_request": {
            "name": "pull_request",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "number": []
            }
        },
        "_GitHubRepo.clone_url": {
            "name": "clone_url",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_GitHubRepo.create_pull": {
            "name": "create_pull",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "title": [],
                "base": [],
                "head": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/pr/mock_pr_tool.py": {
        "MockPullRequest.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockPullRequest.info": {
            "name": "info",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockPullRequest.test_swift_ci": {
            "name": "test_swift_ci",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockPRTool.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "default_author": []
            }
        },
        "MockPRTool.create_pull_request": {
            "name": "create_pull_request",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [],
                "text": [],
                "base_branch": [],
                "author": []
            }
        },
        "MockPRTool.list": {
            "name": "list",
            "location": 33,
            "return": [
                "builtins.list[MockPullRequest]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MockPRTool.get_pr_from_number": {
            "name": "get_pr_from_number",
            "location": 36,
            "return": [
                "Optional[MockPullRequest]"
            ],
            "arguments": {
                "self": [],
                "pr_number": []
            }
        },
        "MockPRTool.create_pr": {
            "name": "create_pr",
            "location": 42,
            "return": [
                "MockPullRequest"
            ],
            "arguments": {
                "self": [],
                "title": [],
                "base_branch": [],
                "head_repo_url": [],
                "head_branch": []
            }
        }
    },
    "apple-llvm-infrastructure-tools-main/test/pr/test_pr_tool.py": {
        "pr_tool_type": {
            "name": "pr_tool_type",
            "location": 21,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "create_pr_tool": {
            "name": "create_pr_tool",
            "location": 25,
            "return": [
                "Optional[Union[(git_apple_llvm.pr.github_pr_tool.GithubPRTool, _T0)]]"
            ],
            "arguments": {
                "mock_tool": [
                    "_T0@@"
                ],
                "pr_tool_type": []
            }
        },
        "pr_tool_git_repo": {
            "name": "pr_tool_git_repo",
            "location": 33,
            "return": [],
            "arguments": {
                "tmp_path_factory": []
            }
        },
        "pr_tool_git_repo_clone": {
            "name": "pr_tool_git_repo_clone",
            "location": 57,
            "return": [],
            "arguments": {
                "tmp_path_factory": [],
                "pr_tool_git_repo": []
            }
        },
        "cd_to_pr_tool_repo": {
            "name": "cd_to_pr_tool_repo",
            "location": 67,
            "return": [],
            "arguments": {
                "pr_tool_git_repo": []
            }
        },
        "cd_to_pr_tool_repo_clone": {
            "name": "cd_to_pr_tool_repo_clone",
            "location": 75,
            "return": [],
            "arguments": {
                "pr_tool_git_repo_clone": []
            }
        },
        "test_pr_tool_list": {
            "name": "test_pr_tool_list",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "pr_tool_type": []
            }
        },
        "test_cli_list": {
            "name": "test_cli_list",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "pr_tool_type": [],
                "cd_to_pr_tool_repo": []
            }
        },
        "test_list_target": {
            "name": "test_list_target",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "pr_tool_type": [],
                "cd_to_pr_tool_repo": []
            }
        },
        "test_cli_list_long_title": {
            "name": "test_cli_list_long_title",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "pr_tool_type": [],
                "cd_to_pr_tool_repo": []
            }
        },
        "test_cli_tool_no_git": {
            "name": "test_cli_tool_no_git",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_cli_tool_no_pr_config": {
            "name": "test_cli_tool_no_pr_config",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_cli_tool_test_swift_ci": {
            "name": "test_cli_tool_test_swift_ci",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "pr_tool_type": [],
                "cd_to_pr_tool_repo": []
            }
        },
        "cd_to_pr_tool_repo_clone_adjust_jenkins_ci": {
            "name": "cd_to_pr_tool_repo_clone_adjust_jenkins_ci",
            "location": 193,
            "return": [],
            "arguments": {
                "cd_to_pr_tool_repo": [],
                "tmp_path_factory": []
            }
        },
        "config_dir": {
            "name": "config_dir",
            "location": 252,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_cli_tool_test_jenkins_swift_plans": {
            "name": "test_cli_tool_test_jenkins_swift_plans",
            "location": 260,
            "return": [],
            "arguments": {
                "cd_to_pr_tool_repo_clone_adjust_jenkins_ci": []
            }
        },
        "test_cli_tool_test_invalid_pr": {
            "name": "test_cli_tool_test_invalid_pr",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_pr_tool_repo": []
            }
        },
        "test_cli_tool_test_closed_pr": {
            "name": "test_cli_tool_test_closed_pr",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "pr_tool_type": []
            }
        },
        "test_cli_tool_create_pr": {
            "name": "test_cli_tool_create_pr",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_pr_tool_repo_clone": [],
                "pr_tool_type": []
            }
        },
        "test_cli_tool_create_pr_invalid_base": {
            "name": "test_cli_tool_create_pr_invalid_base",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "cd_to_pr_tool_repo_clone": [],
                "pr_tool_type": []
            }
        },
        "test_cli_tool_test_jenkins_swift_plans.request_callback": {
            "name": "request_callback",
            "location": 266,
            "return": [],
            "arguments": {
                "request": [],
                "uri": [],
                "response_headers": []
            }
        }
    }
}
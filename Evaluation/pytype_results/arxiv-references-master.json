{
    "arxiv-references-master/app.py": {},
    "arxiv-references-master/wsgi.py": {
        "application": {
            "name": "application",
            "location": 7,
            "return": [],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    },
    "arxiv-references-master/bin/run_consumer.py": {},
    "arxiv-references-master/bin/start_agent.py": {
        "start_agent": {
            "name": "start_agent",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-references-master/evaluation/extractions.py": {},
    "arxiv-references-master/evaluation/__init__.py": {},
    "arxiv-references-master/extractors/cermine/tests.py": {
        "TestCERMINEExtractor.setUpClass": {
            "name": "setUpClass",
            "location": 19,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestCERMINEExtractor.tearDownClass": {
            "name": "tearDownClass",
            "location": 45,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestCERMINEExtractor.test_extract": {
            "name": "test_extract",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/extractors/cermine/wsgi.py": {
        "application": {
            "name": "application",
            "location": 7,
            "return": [],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    },
    "arxiv-references-master/extractors/cermine/extract/extract.py": {
        "extract_with_cermine": {
            "name": "extract_with_cermine",
            "location": 12,
            "return": [],
            "arguments": {
                "filepath": []
            }
        }
    },
    "arxiv-references-master/extractors/cermine/extract/factory.py": {
        "create_cermine_app": {
            "name": "create_cermine_app",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-references-master/extractors/cermine/extract/routes.py": {
        "xmlify": {
            "name": "xmlify",
            "location": 26,
            "return": [],
            "arguments": {
                "response_data": []
            }
        },
        "status": {
            "name": "status",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "extract": {
            "name": "extract",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "handle_upload": {
            "name": "handle_upload",
            "location": 60,
            "return": [],
            "arguments": {
                "uploaded_file": []
            }
        },
        "cleanup_upload": {
            "name": "cleanup_upload",
            "location": 75,
            "return": [],
            "arguments": {
                "filepath": []
            }
        }
    },
    "arxiv-references-master/extractors/cermine/extract/__init__.py": {},
    "arxiv-references-master/extractors/cermine/extract/tests/tests.py": {
        "TestExtract.setUpClass": {
            "name": "setUpClass",
            "location": 21,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestExtract.test_extract_with_cermine": {
            "name": "test_extract_with_cermine",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "mock_subprocess": []
            }
        },
        "TestExtract.test_subprocess_raises_error": {
            "name": "test_subprocess_raises_error",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "mock_subprocess": []
            }
        },
        "TestExtract.test_cermine_produces_no_output": {
            "name": "test_cermine_produces_no_output",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "mock_subprocess": []
            }
        },
        "TestExtract.test_cannot_open_cermine_output": {
            "name": "test_cannot_open_cermine_output",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "mock_subprocess": [],
                "mock_open": []
            }
        },
        "TestRoutes.test_extract_without_file": {
            "name": "test_extract_without_file",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "mock_request": []
            }
        },
        "TestRoutes.test_extract_with_non_pdf": {
            "name": "test_extract_with_non_pdf",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "mock_request": []
            }
        },
        "TestRoutes.test_extract_with_pdf": {
            "name": "test_extract_with_pdf",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "mock_request": [],
                "mock_app": [],
                "mock_extract": [],
                "mock_cleanup": []
            }
        },
        "TestApp.setUp": {
            "name": "setUp",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestApp.setUpClass": {
            "name": "setUpClass",
            "location": 135,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestApp.test_request_extract": {
            "name": "test_request_extract",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "mock_subprocess": []
            }
        },
        "TestExtract.test_subprocess_raises_error.raise_calledprocesserror": {
            "name": "raise_calledprocesserror",
            "location": 47,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-references-master/extractors/cermine/extract/tests/__init__.py": {},
    "arxiv-references-master/extractors/refextract/tests.py": {
        "TestRefExtractExtractor.setUpClass": {
            "name": "setUpClass",
            "location": 19,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestRefExtractExtractor.tearDownClass": {
            "name": "tearDownClass",
            "location": 45,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestRefExtractExtractor.test_extract": {
            "name": "test_extract",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/extractors/refextract/wsgi.py": {
        "application": {
            "name": "application",
            "location": 7,
            "return": [],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    },
    "arxiv-references-master/extractors/refextract/extract/factory.py": {
        "create_refextract_app": {
            "name": "create_refextract_app",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-references-master/extractors/refextract/extract/routes.py": {
        "getLogger": {
            "name": "getLogger",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "handle_upload": {
            "name": "handle_upload",
            "location": 40,
            "return": [],
            "arguments": {
                "uploaded_file": []
            }
        },
        "cleanup_upload": {
            "name": "cleanup_upload",
            "location": 50,
            "return": [],
            "arguments": {
                "filepath": []
            }
        },
        "status": {
            "name": "status",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "extract": {
            "name": "extract",
            "location": 64,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-references-master/extractors/refextract/extract/__init__.py": {},
    "arxiv-references-master/extractors/refextract/extract/tests/__init__.py": {},
    "arxiv-references-master/references/celeryconfig.py": {},
    "arxiv-references-master/references/config.py": {},
    "arxiv-references-master/references/domain.py": {
        "Reference.__post_init__": {
            "name": "__post_init__",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reference.to_dict": {
            "name": "to_dict",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReferenceSet.to_dict": {
            "name": "to_dict",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/factory.py": {
        "create_web_app": {
            "name": "create_web_app",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "create_worker_app": {
            "name": "create_worker_app",
            "location": 41,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-references-master/references/routes.py": {
        "ok": {
            "name": "ok",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "extract_references": {
            "name": "extract_references",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "task_status": {
            "name": "task_status",
            "location": 33,
            "return": [],
            "arguments": {
                "task_id": []
            }
        },
        "resolve_reference": {
            "name": "resolve_reference",
            "location": 41,
            "return": [],
            "arguments": {
                "doc_id": [],
                "ref_id": []
            }
        },
        "reference": {
            "name": "reference",
            "location": 67,
            "return": [],
            "arguments": {
                "doc_id": [],
                "ref_id": []
            }
        },
        "references": {
            "name": "references",
            "location": 88,
            "return": [],
            "arguments": {
                "doc_id": []
            }
        },
        "raw": {
            "name": "raw",
            "location": 108,
            "return": [],
            "arguments": {
                "doc_id": [],
                "extractor": []
            }
        }
    },
    "arxiv-references-master/references/worker.py": {},
    "arxiv-references-master/references/__init__.py": {},
    "arxiv-references-master/references/agent/consumer.py": {
        "ExtractionAgent.process_record": {
            "name": "process_record",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "arxiv-references-master/references/agent/__init__.py": {},
    "arxiv-references-master/references/agent/tests/test_consumer.py": {
        "TestExtractionAgent.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExtractionAgent.test_process_record_method": {
            "name": "test_process_record_method",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "mock_tasks": [],
                "mock_client_factory": []
            }
        },
        "TestExtractionAgent.test_process_stream": {
            "name": "test_process_stream",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "mock_tasks": [],
                "mock_client_factory": []
            }
        },
        "TestExtractionAgent.test_process_stream.Stream.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExtractionAgent.test_process_stream.Stream.get_records": {
            "name": "get_records",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExtractionAgent.test_process_stream.Checkpoint.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExtractionAgent.test_process_stream.Checkpoint.checkpoint": {
            "name": "checkpoint",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        }
    },
    "arxiv-references-master/references/agent/tests/__init__.py": {},
    "arxiv-references-master/references/controllers/extracted_references.py": {
        "_gs_query": {
            "name": "_gs_query",
            "location": 20,
            "return": [],
            "arguments": {
                "reference": []
            }
        },
        "_get_identifiers": {
            "name": "_get_identifiers",
            "location": 50,
            "return": [],
            "arguments": {
                "reference_data": []
            }
        },
        "resolve": {
            "name": "resolve",
            "location": 62,
            "return": [],
            "arguments": {
                "document_id": [],
                "reference_id": []
            }
        },
        "get": {
            "name": "get",
            "location": 100,
            "return": [],
            "arguments": {
                "document_id": [],
                "ref_id": []
            }
        },
        "list": {
            "name": "list",
            "location": 137,
            "return": [],
            "arguments": {
                "document_id": [],
                "extractor": []
            }
        }
    },
    "arxiv-references-master/references/controllers/extraction.py": {
        "extract": {
            "name": "extract",
            "location": 27,
            "return": [],
            "arguments": {
                "payload": [],
                "current_version": []
            }
        },
        "status": {
            "name": "status",
            "location": 73,
            "return": [],
            "arguments": {
                "task_id": []
            }
        }
    },
    "arxiv-references-master/references/controllers/health.py": {
        "_getServices": {
            "name": "_getServices",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "_healthy_session": {
            "name": "_healthy_session",
            "location": 24,
            "return": [],
            "arguments": {
                "service": []
            }
        },
        "health_check": {
            "name": "health_check",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-references-master/references/controllers/__init__.py": {},
    "arxiv-references-master/references/controllers/tests/test_controller_extract.py": {
        "ExtractionIsRequested.test_request_is_valid": {
            "name": "test_request_is_valid",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_url_for": [],
                "mock_data": []
            }
        },
        "ExtractionIsRequested.test_file_is_not_included": {
            "name": "test_file_is_not_included",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "mock_data": []
            }
        },
        "ExtractionIsRequested.test_document_id_is_not_included": {
            "name": "test_document_id_is_not_included",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExtractionStatusIsRequested.setUp": {
            "name": "setUp",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "mock_ref_store": []
            }
        },
        "ExtractionStatusIsRequested.test_request_valid_task_does_not_exist": {
            "name": "test_request_valid_task_does_not_exist",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_async": []
            }
        },
        "ExtractionStatusIsRequested.test_request_is_valid_and_pending": {
            "name": "test_request_is_valid_and_pending",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_async": []
            }
        },
        "ExtractionStatusIsRequested.test_request_is_valid_and_started": {
            "name": "test_request_is_valid_and_started",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_async": []
            }
        },
        "ExtractionStatusIsRequested.test_request_is_valid_and_failed": {
            "name": "test_request_is_valid_and_failed",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_async": []
            }
        },
        "ExtractionStatusIsRequested.test_request_is_valid_and_retrying": {
            "name": "test_request_is_valid_and_retrying",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_aync": []
            }
        },
        "ExtractionStatusIsRequested.test_request_is_valid_and_successful": {
            "name": "test_request_is_valid_and_successful",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_url_for": [],
                "mock_async": []
            }
        },
        "ExtractionStatusIsRequested.test_request_is_invalid": {
            "name": "test_request_is_invalid",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "mock_process": [],
                "mock_async": []
            }
        },
        "ExtractionIsRequested.test_request_is_valid.url_for": {
            "name": "url_for",
            "location": 31,
            "return": [],
            "arguments": {
                "endpoint": [],
                "task_id": []
            }
        },
        "ExtractionStatusIsRequested.test_request_is_valid_and_successful.url_for": {
            "name": "url_for",
            "location": 180,
            "return": [],
            "arguments": {
                "endpoint": [],
                "doc_id": []
            }
        }
    },
    "arxiv-references-master/references/controllers/tests/test_controller_health.py": {
        "TestHealthCheck.test_health_check_ok": {
            "name": "test_health_check_ok",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHealthCheck.test_health_check_failure": {
            "name": "test_health_check_failure",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/controllers/tests/test_controller_references.py": {
        "TestReferenceResolver.test_resolve_with_arxiv_id": {
            "name": "test_resolve_with_arxiv_id",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestReferenceResolver.test_resolve_with_doi": {
            "name": "test_resolve_with_doi",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestReferenceResolver.test_resolve_with_isbn": {
            "name": "test_resolve_with_isbn",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestReferenceResolver.test_resolve_with_meta": {
            "name": "test_resolve_with_meta",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestReferenceMetadataControllerList.test_list_calls_datastore_session": {
            "name": "test_list_calls_datastore_session",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "retrieve_mock": []
            }
        },
        "TestReferenceMetadataControllerList.test_list_handles_IOError": {
            "name": "test_list_handles_IOError",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "retrieve_mock": []
            }
        },
        "TestReferenceMetadataControllerList.test_list_handles_nonexistant_record": {
            "name": "test_list_handles_nonexistant_record",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "retrieve_mock": []
            }
        },
        "TestReferenceMetadataControllerGet.test_get_calls_datastore_session": {
            "name": "test_get_calls_datastore_session",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "retrieve_mock": []
            }
        },
        "TestReferenceMetadataControllerGet.test_get_handles_IOError": {
            "name": "test_get_handles_IOError",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "retrieve_mock": []
            }
        },
        "TestReferenceMetadataControllerGet.test_get_handles_nonexistant_record": {
            "name": "test_get_handles_nonexistant_record",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "retrieve_mock": []
            }
        }
    },
    "arxiv-references-master/references/controllers/tests/__init__.py": {},
    "arxiv-references-master/references/process/tasks.py": {
        "_fail": {
            "name": "_fail",
            "location": 21,
            "return": [],
            "arguments": {
                "document_id": [],
                "e": [],
                "reason": []
            }
        },
        "process_document": {
            "name": "process_document",
            "location": 28,
            "return": [],
            "arguments": {
                "document_id": [],
                "pdf_url": []
            }
        },
        "update_sent_state": {
            "name": "update_sent_state",
            "location": 130,
            "return": [],
            "arguments": {
                "sender": [],
                "headers": [],
                "body": []
            }
        }
    },
    "arxiv-references-master/references/process/textutil.py": {
        "clean_text": {
            "name": "clean_text",
            "location": 15,
            "return": [],
            "arguments": {
                "txt": [],
                "numok": []
            }
        },
        "clean_blob": {
            "name": "clean_blob",
            "location": 36,
            "return": [],
            "arguments": {
                "blob": [],
                "numok": []
            }
        }
    },
    "arxiv-references-master/references/process/__init__.py": {},
    "arxiv-references-master/references/process/extract/__init__.py": {
        "getDefaultExtractors": {
            "name": "getDefaultExtractors",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "estimate_quality": {
            "name": "estimate_quality",
            "location": 32,
            "return": [],
            "arguments": {
                "metadata": []
            }
        },
        "extract": {
            "name": "extract",
            "location": 51,
            "return": [],
            "arguments": {
                "pdf_path": [],
                "document_id": [],
                "extractors": []
            }
        }
    },
    "arxiv-references-master/references/process/extract/tests/__init__.py": {},
    "arxiv-references-master/references/process/merge/align.py": {
        "argmax": {
            "name": "argmax",
            "location": 14,
            "return": [],
            "arguments": {
                "array": []
            }
        },
        "jacard": {
            "name": "jacard",
            "location": 20,
            "return": [],
            "arguments": {
                "str0": [],
                "str1": []
            }
        },
        "digest": {
            "name": "digest",
            "location": 47,
            "return": [],
            "arguments": {
                "metadata": []
            }
        },
        "flatten": {
            "name": "flatten",
            "location": 84,
            "return": [],
            "arguments": {
                "arr": []
            }
        },
        "similarity_cutoff": {
            "name": "similarity_cutoff",
            "location": 93,
            "return": [],
            "arguments": {
                "records": []
            }
        },
        "align_records": {
            "name": "align_records",
            "location": 144,
            "return": [],
            "arguments": {
                "records": []
            }
        },
        "similarity_cutoff._cutoff": {
            "name": "_cutoff",
            "location": 111,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "similarity_cutoff._jacard_matrix": {
            "name": "_jacard_matrix",
            "location": 117,
            "return": [],
            "arguments": {
                "r0": [],
                "r1": [],
                "num": []
            }
        },
        "align_records._jacard_max": {
            "name": "_jacard_max",
            "location": 180,
            "return": [],
            "arguments": {
                "r0": [],
                "rlist": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/arbitrate.py": {
        "_dict_repr": {
            "name": "_dict_repr",
            "location": 20,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_validate": {
            "name": "_validate",
            "location": 39,
            "return": [],
            "arguments": {
                "extractors": [],
                "priors": [],
                "metadata": [],
                "valid": []
            }
        },
        "_similarity_int_float": {
            "name": "_similarity_int_float",
            "location": 57,
            "return": [],
            "arguments": {
                "value_a": [],
                "value_b": []
            }
        },
        "_similarity_str": {
            "name": "_similarity_str",
            "location": 66,
            "return": [],
            "arguments": {
                "value_a": [],
                "value_b": []
            }
        },
        "_similarity_dict": {
            "name": "_similarity_dict",
            "location": 75,
            "return": [],
            "arguments": {
                "value_a": [],
                "value_b": []
            }
        },
        "_similarity_list": {
            "name": "_similarity_list",
            "location": 83,
            "return": [],
            "arguments": {
                "value_a": [],
                "value_b": []
            }
        },
        "_similarity": {
            "name": "_similarity",
            "location": 96,
            "return": [],
            "arguments": {
                "value_a": [],
                "value_b": []
            }
        },
        "_prep_value": {
            "name": "_prep_value",
            "location": 124,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_cast_value": {
            "name": "_cast_value",
            "location": 131,
            "return": [],
            "arguments": {
                "field": [],
                "value": []
            }
        },
        "_fix_authors": {
            "name": "_fix_authors",
            "location": 146,
            "return": [],
            "arguments": {
                "authors": []
            }
        },
        "_pool": {
            "name": "_pool",
            "location": 162,
            "return": [],
            "arguments": {
                "metadata": [],
                "fields": [],
                "prob_valid": [],
                "similarity_threshold": []
            }
        },
        "_select": {
            "name": "_select",
            "location": 195,
            "return": [],
            "arguments": {
                "pooled": []
            }
        },
        "_score": {
            "name": "_score",
            "location": 217,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "arbitrate": {
            "name": "arbitrate",
            "location": 225,
            "return": [],
            "arguments": {
                "metadata": [],
                "valid": [],
                "priors": [],
                "similarity_threshold": []
            }
        },
        "arbitrate_all": {
            "name": "arbitrate_all",
            "location": 279,
            "return": [],
            "arguments": {
                "metadata": [],
                "valid": [],
                "priors": [],
                "N_extractions": []
            }
        },
        "_dict_repr._keysort": {
            "name": "_keysort",
            "location": 32,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "arbitrate._prob_valid": {
            "name": "_prob_valid",
            "location": 265,
            "return": [],
            "arguments": {
                "extractor": [],
                "field": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/beliefs.py": {
        "_prepare_filters_or_not": {
            "name": "_prepare_filters_or_not",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "_load_filters": {
            "name": "_load_filters",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "bloom_match": {
            "name": "bloom_match",
            "location": 66,
            "return": [],
            "arguments": {
                "value": [],
                "bloom_filter": []
            }
        },
        "minimum_length": {
            "name": "minimum_length",
            "location": 77,
            "return": [],
            "arguments": {
                "length": []
            }
        },
        "likely": {
            "name": "likely",
            "location": 86,
            "return": [],
            "arguments": {
                "func": [],
                "min_prob": [],
                "max_prob": []
            }
        },
        "does_not_contain_arxiv": {
            "name": "does_not_contain_arxiv",
            "location": 95,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "contains": {
            "name": "contains",
            "location": 102,
            "return": [],
            "arguments": {
                "substring": [],
                "false_prob": [],
                "true_prob": []
            }
        },
        "ends_with": {
            "name": "ends_with",
            "location": 112,
            "return": [],
            "arguments": {
                "substring": [],
                "false_prob": [],
                "true_prob": []
            }
        },
        "doesnt_end_with": {
            "name": "doesnt_end_with",
            "location": 122,
            "return": [],
            "arguments": {
                "substring": [],
                "false_prob": [],
                "true_prob": []
            }
        },
        "is_integer": {
            "name": "is_integer",
            "location": 128,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "is_integer_like": {
            "name": "is_integer_like",
            "location": 137,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "is_year": {
            "name": "is_year",
            "location": 160,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "is_year_like": {
            "name": "is_year_like",
            "location": 171,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "is_pages": {
            "name": "is_pages",
            "location": 182,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "valid_doi": {
            "name": "valid_doi",
            "location": 195,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "valid_identifier": {
            "name": "valid_identifier",
            "location": 202,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "valid_arxiv_id": {
            "name": "valid_arxiv_id",
            "location": 220,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "unity": {
            "name": "unity",
            "location": 227,
            "return": [],
            "arguments": {
                "r": []
            }
        },
        "words_author_structure": {
            "name": "words_author_structure",
            "location": 240,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "calculate_belief": {
            "name": "calculate_belief",
            "location": 273,
            "return": [],
            "arguments": {
                "reference": []
            }
        },
        "identity_belief": {
            "name": "identity_belief",
            "location": 312,
            "return": [],
            "arguments": {
                "reference": []
            }
        },
        "validate": {
            "name": "validate",
            "location": 332,
            "return": [],
            "arguments": {
                "aligned_references": []
            }
        },
        "minimum_length._min_len": {
            "name": "_min_len",
            "location": 79,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "likely.call": {
            "name": "call",
            "location": 89,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "contains.call": {
            "name": "call",
            "location": 105,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "ends_with.call": {
            "name": "call",
            "location": 115,
            "return": [],
            "arguments": {
                "value": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/normalize.py": {
        "_remove_dots": {
            "name": "_remove_dots",
            "location": 15,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "_remove_dots_from_author_names": {
            "name": "_remove_dots_from_author_names",
            "location": 20,
            "return": [],
            "arguments": {
                "author": []
            }
        },
        "_remove_leading_trailing_nonalpha": {
            "name": "_remove_leading_trailing_nonalpha",
            "location": 31,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "_fix_arxiv_id": {
            "name": "_fix_arxiv_id",
            "location": 36,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "normalize_record": {
            "name": "normalize_record",
            "location": 55,
            "return": [],
            "arguments": {
                "record": []
            }
        },
        "normalize_records": {
            "name": "normalize_records",
            "location": 78,
            "return": [],
            "arguments": {
                "records": []
            }
        },
        "filter_records": {
            "name": "filter_records",
            "location": 94,
            "return": [],
            "arguments": {
                "records": [],
                "threshold": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/priors.py": {},
    "arxiv-references-master/references/process/merge/__init__.py": {
        "merge_records": {
            "name": "merge_records",
            "location": 23,
            "return": [],
            "arguments": {
                "records": [],
                "extractor_priors": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/tests/test_align.py": {
        "obj_digest": {
            "name": "obj_digest",
            "location": 13,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "TestAlignRecords.test_simple_records": {
            "name": "test_simple_records",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/tests/test_arbitrate.py": {
        "TestArbitrate.test_arbitrate": {
            "name": "test_arbitrate",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_arbitrate_with_list_and_dict": {
            "name": "test_arbitrate_with_list_and_dict",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_select": {
            "name": "test_select",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_select_with_ints": {
            "name": "test_select_with_ints",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_similarity_with_strings": {
            "name": "test_similarity_with_strings",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_pool_can_math": {
            "name": "test_pool_can_math",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_pool_handles_list_values": {
            "name": "test_pool_handles_list_values",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_pool_handles_dict_values": {
            "name": "test_pool_handles_dict_values",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_pooling_matters": {
            "name": "test_pooling_matters",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_drop_value_if_prior_missing": {
            "name": "test_drop_value_if_prior_missing",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_misaligned_input_raises_valueerror": {
            "name": "test_misaligned_input_raises_valueerror",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_arbitrate_all": {
            "name": "test_arbitrate_all",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_empty_value_is_treated_as_value": {
            "name": "test_empty_value_is_treated_as_value",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_missing_value_is_not_treated_as_value": {
            "name": "test_missing_value_is_not_treated_as_value",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArbitrate.test_pool_can_math._prob_valid": {
            "name": "_prob_valid",
            "location": 98,
            "return": [],
            "arguments": {
                "extractor": [],
                "field": []
            }
        },
        "TestArbitrate.test_pool_handles_list_values._prob_valid": {
            "name": "_prob_valid",
            "location": 110,
            "return": [],
            "arguments": {
                "extractor": [],
                "field": []
            }
        },
        "TestArbitrate.test_pool_handles_dict_values._prob_valid": {
            "name": "_prob_valid",
            "location": 126,
            "return": [],
            "arguments": {
                "extractor": [],
                "field": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/tests/test_beliefs.py": {
        "TestBeliefs.test_is_integer": {
            "name": "test_is_integer",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBeliefs.test_is_integer_like": {
            "name": "test_is_integer_like",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBeliefs.test_is_year": {
            "name": "test_is_year",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBeliefs.test_is_year_like": {
            "name": "test_is_year_like",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBeliefs.test_is_pages": {
            "name": "test_is_pages",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBeliefs.test_valid_doi": {
            "name": "test_valid_doi",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBeliefs.test_valid_identifier_arxiv": {
            "name": "test_valid_identifier_arxiv",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBeliefs.test_valid_identifier_isbn": {
            "name": "test_valid_identifier_isbn",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/tests/test_merge.py": {
        "TestNormalize.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNormalize.test_filter_threshold": {
            "name": "test_filter_threshold",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMergeSimple.setUp": {
            "name": "setUp",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMergeSimple.test_merge_call_pattern": {
            "name": "test_merge_call_pattern",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "mock_align_records": [],
                "mock_validate": [],
                "mock_arbitrate_all": [],
                "mock_filter_records": []
            }
        },
        "TestMergeSimple.test_merge_full": {
            "name": "test_merge_full",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/tests/test_validate.py": {
        "TestValidateSimpleRecords.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestValidateSimpleRecords.test_simple_records": {
            "name": "test_simple_records",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestValidateSimpleRecords.test_blank_value_is_valid": {
            "name": "test_blank_value_is_valid",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFullRecords.setUp": {
            "name": "setUp",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFullRecords.test_full_records": {
            "name": "test_full_records",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/process/merge/tests/__init__.py": {},
    "arxiv-references-master/references/services/retrieve.py": {
        "init_app": {
            "name": "init_app",
            "location": 97,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 103,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "is_valid_url": {
            "name": "is_valid_url",
            "location": 122,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "retrieve_pdf": {
            "name": "retrieve_pdf",
            "location": 128,
            "return": [],
            "arguments": {
                "target": [],
                "document_id": []
            }
        },
        "RetrievePDFSession.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "whitelist": []
            }
        },
        "RetrievePDFSession.is_valid_url": {
            "name": "is_valid_url",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "RetrievePDFSession.retrieve": {
            "name": "retrieve",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "target": [],
                "document_id": []
            }
        }
    },
    "arxiv-references-master/references/services/__init__.py": {},
    "arxiv-references-master/references/services/cermine/parse.py": {
        "_cxml_element_func": {
            "name": "_cxml_element_func",
            "location": 21,
            "return": [],
            "arguments": {
                "tagname": []
            }
        },
        "_cxml_ref_authors": {
            "name": "_cxml_ref_authors",
            "location": 44,
            "return": [],
            "arguments": {
                "ref": []
            }
        },
        "_cxml_format_reference_line": {
            "name": "_cxml_format_reference_line",
            "location": 69,
            "return": [],
            "arguments": {
                "elm": []
            }
        },
        "cxml_format_document": {
            "name": "cxml_format_document",
            "location": 117,
            "return": [],
            "arguments": {
                "root": []
            }
        },
        "cxml_to_json": {
            "name": "cxml_to_json",
            "location": 180,
            "return": [],
            "arguments": {
                "raw_data": []
            }
        },
        "_cxml_element_func._inner": {
            "name": "_inner",
            "location": 39,
            "return": [],
            "arguments": {
                "root": []
            }
        }
    },
    "arxiv-references-master/references/services/cermine/tests.py": {
        "TestCermineExtractor.test_extract": {
            "name": "test_extract",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "mock_session": []
            }
        }
    },
    "arxiv-references-master/references/services/cermine/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 71,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 77,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "extract_references": {
            "name": "extract_references",
            "location": 96,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "CermineSession.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": []
            }
        },
        "CermineSession.extract_references": {
            "name": "extract_references",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        }
    },
    "arxiv-references-master/references/services/data_store/exceptions.py": {},
    "arxiv-references-master/references/services/data_store/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 61,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 75,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 96,
            "return": [],
            "arguments": {}
        },
        "save": {
            "name": "save",
            "location": 108,
            "return": [],
            "arguments": {
                "references": []
            }
        },
        "load": {
            "name": "load",
            "location": 122,
            "return": [],
            "arguments": {
                "document_id": [],
                "extractor": [],
                "version": []
            }
        },
        "ReferenceStoreSession.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "database": []
            }
        },
        "ReferenceStoreSession._version": {
            "name": "_version",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "rset": []
            }
        },
        "ReferenceStoreSession._extractor": {
            "name": "_extractor",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "rset": []
            }
        },
        "ReferenceStoreSession._index": {
            "name": "_index",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "rset": []
            }
        },
        "ReferenceStoreSession.save": {
            "name": "save",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "reference_set": []
            }
        },
        "ReferenceStoreSession.load": {
            "name": "load",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "document_id": [],
                "extractor": [],
                "version": []
            }
        }
    },
    "arxiv-references-master/references/services/grobid/parse.py": {
        "_xml_set_ns": {
            "name": "_xml_set_ns",
            "location": 18,
            "return": [],
            "arguments": {
                "root": []
            }
        },
        "_xml_tag": {
            "name": "_xml_tag",
            "location": 23,
            "return": [],
            "arguments": {
                "tag": []
            }
        },
        "_xml_path_elem": {
            "name": "_xml_path_elem",
            "location": 27,
            "return": [],
            "arguments": {
                "elem": [],
                "path": []
            }
        },
        "_xml_path_attr": {
            "name": "_xml_path_attr",
            "location": 32,
            "return": [],
            "arguments": {
                "elem": [],
                "path": [],
                "attrib": []
            }
        },
        "_xml_path_text": {
            "name": "_xml_path_text",
            "location": 39,
            "return": [],
            "arguments": {
                "elem": [],
                "path": []
            }
        },
        "_xml_format_biblStruct": {
            "name": "_xml_format_biblStruct",
            "location": 49,
            "return": [],
            "arguments": {
                "bbl": []
            }
        },
        "format_grobid_output": {
            "name": "format_grobid_output",
            "location": 115,
            "return": [],
            "arguments": {
                "output": []
            }
        },
        "_xml_format_biblStruct._authors": {
            "name": "_authors",
            "location": 67,
            "return": [],
            "arguments": {
                "bbl": [],
                "path": []
            }
        }
    },
    "arxiv-references-master/references/services/grobid/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 79,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 86,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "extract_references": {
            "name": "extract_references",
            "location": 106,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "GrobidSession.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": [],
                "path": []
            }
        },
        "GrobidSession.extract_references": {
            "name": "extract_references",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        }
    },
    "arxiv-references-master/references/services/refextract/parse.py": {
        "transform": {
            "name": "transform",
            "location": 26,
            "return": [],
            "arguments": {
                "refextract_metadatum": []
            }
        }
    },
    "arxiv-references-master/references/services/refextract/tests.py": {
        "TestRefextractExtractor.test_extract": {
            "name": "test_extract",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "mock_session": []
            }
        }
    },
    "arxiv-references-master/references/services/refextract/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 64,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 70,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "extract_references": {
            "name": "extract_references",
            "location": 90,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "RefExtractSession.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": []
            }
        },
        "RefExtractSession.extract_references": {
            "name": "extract_references",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        }
    },
    "arxiv-references-master/references/services/scienceparse/parse.py": {
        "parse_auth_line": {
            "name": "parse_auth_line",
            "location": 15,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "format_scienceparse_output": {
            "name": "format_scienceparse_output",
            "location": 25,
            "return": [],
            "arguments": {
                "output": []
            }
        }
    },
    "arxiv-references-master/references/services/scienceparse/__init__.py": {
        "init_app": {
            "name": "init_app",
            "location": 90,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 96,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "extract_references": {
            "name": "extract_references",
            "location": 116,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "ScienceParseSession.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "endpoint": []
            }
        },
        "ScienceParseSession.extract_references": {
            "name": "extract_references",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": []
            }
        }
    },
    "arxiv-references-master/references/tests/test_factory.py": {
        "TestWebAppFactory.test_returns_flask_app": {
            "name": "test_returns_flask_app",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProcessAppFactory.test_returns_celery_app": {
            "name": "test_returns_celery_app",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/tests/__init__.py": {},
    "arxiv-references-master/references/util/regex_arxiv.py": {},
    "arxiv-references-master/references/util/regex_identifiers.py": {
        "longest_string": {
            "name": "longest_string",
            "location": 38,
            "return": [],
            "arguments": {
                "strings": []
            }
        },
        "extract_identifiers": {
            "name": "extract_identifiers",
            "location": 44,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "arxiv-references-master/references/util/tests.py": {
        "TestIdentifierIsPresent.test_identifier_has_subject_tag": {
            "name": "test_identifier_has_subject_tag",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-references-master/references/util/__init__.py": {
        "files_modified_since": {
            "name": "files_modified_since",
            "location": 19,
            "return": [],
            "arguments": {
                "fldr": [],
                "timestamp": [],
                "extension": []
            }
        },
        "find_arxiv_id": {
            "name": "find_arxiv_id",
            "location": 58,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "rotating_backup_name": {
            "name": "rotating_backup_name",
            "location": 86,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "backup": {
            "name": "backup",
            "location": 117,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "ps2pdf": {
            "name": "ps2pdf",
            "location": 136,
            "return": [],
            "arguments": {
                "ps": []
            }
        },
        "dvi2ps": {
            "name": "dvi2ps",
            "location": 141,
            "return": [],
            "arguments": {
                "dvi": []
            }
        },
        "argmax": {
            "name": "argmax",
            "location": 146,
            "return": [],
            "arguments": {
                "array": []
            }
        },
        "rotating_backup_name._genname": {
            "name": "_genname",
            "location": 104,
            "return": [],
            "arguments": {
                "base": []
            }
        }
    },
    "arxiv-references-master/tests/e2e/test_e2e.py": {
        "TestReferenceConsumer.setUpClass": {
            "name": "setUpClass",
            "location": 62,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestReferenceConsumer.test_process_record": {
            "name": "test_process_record",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "mock_app": []
            }
        },
        "TestReferenceExtractionViaAPI.setUpClass": {
            "name": "setUpClass",
            "location": 125,
            "return": [],
            "arguments": {
                "cls": [],
                "mock_app": []
            }
        },
        "TestReferenceExtractionViaAPI.test_extraction_via_api": {
            "name": "test_extraction_via_api",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReferenceExtractionViaAPI.test_incomplete_requests_are_rejected": {
            "name": "test_incomplete_requests_are_rejected",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReferenceExtractionViaAPI.test_invalid_urls_are_rejected": {
            "name": "test_invalid_urls_are_rejected",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReferenceExtractionViaAPI.test_nonexistant_document": {
            "name": "test_nonexistant_document",
            "location": 263,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestReferenceExtractionViaAPI.tearDownClass": {
            "name": "tearDownClass",
            "location": 271,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "arxiv-references-master/tests/integration/test_datastore_integrations.py": {
        "TestDataStoreIntegrationWithDynamoDB.setUpClass": {
            "name": "setUpClass",
            "location": 34,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestDataStoreIntegrationWithDynamoDB.test_raw_extractions_integration": {
            "name": "test_raw_extractions_integration",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "mock_app": []
            }
        },
        "TestDataStoreIntegrationWithDynamoDB.tearDownClass": {
            "name": "tearDownClass",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "arxiv-references-master/tests/integration/test_integrations_kinesis.py": {},
    "arxiv-references-master/tests/integration/test_pipeline.py": {
        "decimal_default": {
            "name": "decimal_default",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ReferenceExtractionAndArbitration.setUpClass": {
            "name": "setUpClass",
            "location": 23,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ReferenceExtractionAndArbitration.setUp": {
            "name": "setUp",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReferenceExtractionAndArbitration.test_extraction": {
            "name": "test_extraction",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReferenceExtractionAndArbitration.tearDownClass": {
            "name": "tearDownClass",
            "location": 91,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "arxiv-references-master/tests/regression/test_task_extract_cermine.py": {
        "article1": {
            "name": "article1",
            "location": 13,
            "return": [],
            "arguments": {
                "ext": []
            }
        },
        "article2": {
            "name": "article2",
            "location": 19,
            "return": [],
            "arguments": {
                "ext": []
            }
        },
        "mock_full_dock": {
            "name": "mock_full_dock",
            "location": 25,
            "return": [],
            "arguments": {
                "references": []
            }
        },
        "ordered": {
            "name": "ordered",
            "location": 38,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "CERMINEExtractorRegressionTests.test_cxml_to_json_formatter": {
            "name": "test_cxml_to_json_formatter",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CERMINEExtractorRegressionTests.test_cxml_json_schema": {
            "name": "test_cxml_json_schema",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GROBIDExtractorRegressionTests.test_json_formatter": {
            "name": "test_json_formatter",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GROBIDExtractorRegressionTests.test_schema": {
            "name": "test_schema",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScienceParseExtractorRegressionTests.test_json_formatter": {
            "name": "test_json_formatter",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScienceParseExtractorRegressionTests.test_schema": {
            "name": "test_schema",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "arxiv-search-master/api.py": {},
    "arxiv-search-master/app.py": {},
    "arxiv-search-master/audit.py": {
        "exists": {
            "name": "exists",
            "location": 18,
            "return": [
                "List[Tuple[(str, bool)]]"
            ],
            "arguments": {
                "chunk": [
                    "List[str]"
                ]
            }
        },
        "audit": {
            "name": "audit",
            "location": 56,
            "return": [],
            "arguments": {
                "id_list": [],
                "batch_size": [],
                "n_workers": [],
                "output": []
            }
        }
    },
    "arxiv-search-master/bulk_index.py": {
        "populate": {
            "name": "populate",
            "location": 42,
            "return": [],
            "arguments": {
                "print_indexable": [],
                "paper_id": [],
                "id_list": [],
                "cache_dir": [],
                "no_cache": [],
                "quiet": []
            }
        },
        "init_cache": {
            "name": "init_cache",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "cache_dir": [
                    "str"
                ]
            }
        },
        "from_cache": {
            "name": "from_cache",
            "location": 136,
            "return": [
                "List[search.domain.base.DocMeta]"
            ],
            "arguments": {
                "cache_dir": [
                    "str"
                ],
                "arxiv_id": [
                    "str"
                ]
            }
        },
        "to_cache": {
            "name": "to_cache",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "cache_dir": [
                    "str"
                ],
                "arxiv_id": [
                    "str"
                ],
                "docmeta": [
                    "List[search.domain.base.DocMeta]"
                ]
            }
        },
        "load_id_list": {
            "name": "load_id_list",
            "location": 192,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "load_id_sample": {
            "name": "load_id_sample",
            "location": 202,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "NoopContextManager.__enter__": {
            "name": "__enter__",
            "location": 211,
            "return": [
                "_TNoopContextManager"
            ],
            "arguments": {
                "self": [
                    "_TNoopContextManager"
                ]
            }
        },
        "NoopContextManager.__exit__": {
            "name": "__exit__",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NoopContextManager.update": {
            "name": "update",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "i": []
            }
        }
    },
    "arxiv-search-master/classic-api.py": {},
    "arxiv-search-master/classic_api.py": {},
    "arxiv-search-master/create_index.py": {
        "create_index": {
            "name": "create_index",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-search-master/reindex.py": {
        "reindex": {
            "name": "reindex",
            "location": 15,
            "return": [],
            "arguments": {
                "old_index": [],
                "new_index": []
            }
        }
    },
    "arxiv-search-master/upload_static_assets.py": {},
    "arxiv-search-master/wsgi-api.py": {
        "application": {
            "name": "application",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    },
    "arxiv-search-master/wsgi-classic-api.py": {
        "application": {
            "name": "application",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    },
    "arxiv-search-master/wsgi.py": {
        "application": {
            "name": "application",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    },
    "arxiv-search-master/bin/start_agent.py": {
        "start_agent": {
            "name": "start_agent",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "arxiv-search-master/docs/source/conf.py": {},
    "arxiv-search-master/search/config.py": {},
    "arxiv-search-master/search/consts.py": {},
    "arxiv-search-master/search/context.py": {
        "get_application_config": {
            "name": "get_application_config",
            "location": 10,
            "return": [
                "Union[(dict, os._Environ)]"
            ],
            "arguments": {
                "app": []
            }
        },
        "get_application_global": {
            "name": "get_application_global",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/converters.py": {
        "ArchiveConverter.to_python": {
            "name": "to_python",
            "location": 11,
            "return": [
                "Optional[List[str]]"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "ArchiveConverter.to_url": {
            "name": "to_url",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "List[str]"
                ]
            }
        }
    },
    "arxiv-search-master/search/encode.py": {
        "ISO8601JSONEncoder.default": {
            "name": "default",
            "location": 13,
            "return": [
                "Union[(list, str)]"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "arxiv-search-master/search/errors.py": {
        "SearchError.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ]
            }
        },
        "SearchError.name": {
            "name": "name",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchError.__str__": {
            "name": "__str__",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ValidationError.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ],
                "link": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/factory.py": {
        "create_ui_web_app": {
            "name": "create_ui_web_app",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "create_api_web_app": {
            "name": "create_api_web_app",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "create_classic_api_web_app": {
            "name": "create_classic_api_web_app",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/filters.py": {
        "display_classification": {
            "name": "display_classification",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "classification": [
                    "search.domain.base.Classification"
                ]
            }
        },
        "category_name": {
            "name": "category_name",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "classification": [
                    "search.domain.base.Classification"
                ]
            }
        },
        "display_query": {
            "name": "display_query",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "query": [
                    "search.domain.base.Query"
                ]
            }
        }
    },
    "arxiv-search-master/search/__init__.py": {},
    "arxiv-search-master/search/agent/consumer.py": {
        "MetadataRecordProcessor.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetadataRecordProcessor._get_metadata": {
            "name": "_get_metadata",
            "location": 43,
            "return": [
                "search.domain.base.DocMeta"
            ],
            "arguments": {
                "self": [],
                "arxiv_id": [
                    "str"
                ]
            }
        },
        "MetadataRecordProcessor._get_bulk_metadata": {
            "name": "_get_bulk_metadata",
            "location": 96,
            "return": [
                "List[search.domain.base.DocMeta]"
            ],
            "arguments": {
                "self": [],
                "arxiv_ids": [
                    "List[str]"
                ]
            }
        },
        "MetadataRecordProcessor._transform_to_document": {
            "name": "_transform_to_document",
            "location": 149,
            "return": [
                "search.domain.documents.Document"
            ],
            "arguments": {
                "docmeta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "MetadataRecordProcessor._add_to_index": {
            "name": "_add_to_index",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "document": [
                    "search.domain.documents.Document"
                ]
            }
        },
        "MetadataRecordProcessor._bulk_add_to_index": {
            "name": "_bulk_add_to_index",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "documents": [
                    "List[search.domain.documents.Document]"
                ]
            }
        },
        "MetadataRecordProcessor.index_paper": {
            "name": "index_paper",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arxiv_id": [
                    "str"
                ]
            }
        },
        "MetadataRecordProcessor.index_papers": {
            "name": "index_papers",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arxiv_ids": [
                    "List[str]"
                ]
            }
        },
        "MetadataRecordProcessor.process_record": {
            "name": "process_record",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "record": [
                    "dict"
                ]
            }
        }
    },
    "arxiv-search-master/search/agent/__init__.py": {
        "process_stream": {
            "name": "process_stream",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "duration": [
                    "Optional[int]"
                ]
            }
        }
    },
    "arxiv-search-master/search/agent/tests/test_integration.py": {
        "TestKinesisIntegration.setUpClass": {
            "name": "setUpClass",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestKinesisIntegration.tearDownClass": {
            "name": "tearDownClass",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestKinesisIntegration.test_process": {
            "name": "test_process",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "mock_metadata": [],
                "mock_index": []
            }
        },
        "TestKinesisIntegration.test_process.retrieve": {
            "name": "retrieve",
            "location": 120,
            "return": [],
            "arguments": {
                "document_id": []
            }
        }
    },
    "arxiv-search-master/search/agent/tests/test_record_processor.py": {
        "TestIndexPaper.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIndexPaper.test_paper_has_one_version": {
            "name": "test_paper_has_one_version",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "mock_meta": [],
                "mock_tx": [],
                "mock_idx": [],
                "mock_client_factory": []
            }
        },
        "TestIndexPaper.test_paper_has_three_versions": {
            "name": "test_paper_has_three_versions",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "mock_meta": [],
                "mock_tx": [],
                "mock_idx": [],
                "mock_client_factory": []
            }
        },
        "TestAddToIndex.setUp": {
            "name": "setUp",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAddToIndex.test_add_document_succeeds": {
            "name": "test_add_document_succeeds",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": [],
                "mock_client_factory": []
            }
        },
        "TestAddToIndex.test_index_raises_index_connection_error": {
            "name": "test_index_raises_index_connection_error",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": [],
                "mock_client_factory": []
            }
        },
        "TestAddToIndex.test_index_raises_unhandled_error": {
            "name": "test_index_raises_unhandled_error",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": [],
                "mock_client_factory": []
            }
        },
        "TestBulkAddToIndex.setUp": {
            "name": "setUp",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestBulkAddToIndex.test_bulk_add_documents_succeeds": {
            "name": "test_bulk_add_documents_succeeds",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": [],
                "mock_client_factory": []
            }
        },
        "TestBulkAddToIndex.test_index_raises_index_connection_error": {
            "name": "test_index_raises_index_connection_error",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": [],
                "mock_client_factory": []
            }
        },
        "TestBulkAddToIndex.test_index_raises_unhandled_error": {
            "name": "test_index_raises_unhandled_error",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": [],
                "mock_client_factory": []
            }
        },
        "TestTransformToDocument.setUp": {
            "name": "setUp",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformToDocument.test_transform_raises_exception": {
            "name": "test_transform_raises_exception",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "mock_transform": [],
                "mock_client_factory": []
            }
        },
        "TestGetMetadata.setUp": {
            "name": "setUp",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetMetadata.test_metadata_service_returns_metadata": {
            "name": "test_metadata_service_returns_metadata",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "mock_metadata": [],
                "mock_client_factory": []
            }
        },
        "TestGetMetadata.test_metadata_service_raises_connection_error": {
            "name": "test_metadata_service_raises_connection_error",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "mock_metadata": [],
                "mock_client_factory": []
            }
        },
        "TestGetMetadata.test_metadata_service_raises_request_error": {
            "name": "test_metadata_service_raises_request_error",
            "location": 371,
            "return": [],
            "arguments": {
                "self": [],
                "mock_metadata": [],
                "mock_client_factory": []
            }
        },
        "TestGetMetadata.test_metadata_service_raises_bad_response": {
            "name": "test_metadata_service_raises_bad_response",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "mock_metadata": [],
                "mock_client_factory": []
            }
        }
    },
    "arxiv-search-master/search/agent/tests/__init__.py": {},
    "arxiv-search-master/search/controllers/tests.py": {
        "TestHealthCheck.test_index_is_down": {
            "name": "test_index_is_down",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestHealthCheck.test_index_returns_no_result": {
            "name": "test_index_returns_no_result",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestHealthCheck.test_index_returns_result": {
            "name": "test_index_returns_result",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestUnderscoreHandling.test_underscore_is_rewritten": {
            "name": "test_underscore_is_rewritten",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUnderscoreHandling.test_false_positive": {
            "name": "test_false_positive",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUnderscoreHandling.test_multiple_authors": {
            "name": "test_multiple_authors",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUnderscoreHandling.test_nonsense_input": {
            "name": "test_nonsense_input",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/controllers/util.py": {
        "does_not_start_with_wildcard": {
            "name": "does_not_start_with_wildcard",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "form": [],
                "field": []
            }
        },
        "has_balanced_quotes": {
            "name": "has_balanced_quotes",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "form": [],
                "field": []
            }
        },
        "strip_white_space": {
            "name": "strip_white_space",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        },
        "paginate": {
            "name": "paginate",
            "location": 46,
            "return": [
                "search.domain.base.Query"
            ],
            "arguments": {
                "query": [
                    "search.domain.base.Query"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "catch_underscore_syntax": {
            "name": "catch_underscore_syntax",
            "location": 65,
            "return": [
                "Tuple[(str, bool)]"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/controllers/__init__.py": {
        "health_check": {
            "name": "health_check",
            "location": 17,
            "return": [
                "Tuple[(str, int, Dict[(str, Any)])]"
            ],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/controllers/advanced/forms.py": {
        "yearInBounds": {
            "name": "yearInBounds",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "form": [],
                "field": []
            }
        },
        "MultiFormatDateField.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "label": [
                    "Optional[str]"
                ],
                "validators": [
                    "Optional[List[Callable]]"
                ],
                "formats": [
                    "Optional[List[str]]"
                ],
                "default_upper_bound": [
                    "bool"
                ]
            }
        },
        "MultiFormatDateField._value": {
            "name": "_value",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MultiFormatDateField.process_formdata": {
            "name": "process_formdata",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "valuelist": [
                    "List[str]"
                ]
            }
        },
        "DateForm.validate_filter_by": {
            "name": "validate_filter_by",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        }
    },
    "arxiv-search-master/search/controllers/advanced/tests.py": {
        "TestMultiFormatDateField.test_value_with_one_format": {
            "name": "test_value_with_one_format",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMultiFormatDateField.test_process_with_one_format": {
            "name": "test_process_with_one_format",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMultiFormatDateField.test_process_with_several_formats": {
            "name": "test_process_with_several_formats",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearchController.test_no_form_data": {
            "name": "test_no_form_data",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_single_field_term": {
            "name": "test_single_field_term",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_index_raises_connection_exception": {
            "name": "test_index_raises_connection_exception",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_index_raises_query_error": {
            "name": "test_index_raises_query_error",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAdvancedSearchForm.test_single_field_term": {
            "name": "test_single_field_term",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_term_starts_with_wildcard": {
            "name": "test_term_starts_with_wildcard",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_specific_year_must_be_specified": {
            "name": "test_specific_year_must_be_specified",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_date_range_supports_variable_precision": {
            "name": "test_date_range_supports_variable_precision",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_date_range_must_be_specified": {
            "name": "test_date_range_must_be_specified",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_end_date_bounding": {
            "name": "test_end_date_bounding",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_year_must_be_after_1990": {
            "name": "test_year_must_be_after_1990",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_input_whitespace_is_stripped": {
            "name": "test_input_whitespace_is_stripped",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearchForm.test_querystring_has_unbalanced_quotes": {
            "name": "test_querystring_has_unbalanced_quotes",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdatequeryWithClassification.test_classification_is_selected": {
            "name": "test_classification_is_selected",
            "location": 434,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdatequeryWithClassification.test_multiple_classifications_are_selected": {
            "name": "test_multiple_classifications_are_selected",
            "location": 440,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdatequeryWithClassification.test_physics_is_selected_all_archives": {
            "name": "test_physics_is_selected_all_archives",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdatequeryWithClassification.test_physics_is_selected_specific_archive": {
            "name": "test_physics_is_selected_specific_archive",
            "location": 455,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdatequeryWithClassification.test_physics_is_selected_specific_archive_plus_other_groups": {
            "name": "test_physics_is_selected_specific_archive_plus_other_groups",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdateQueryWithFieldedTerms.test_terms_are_provided": {
            "name": "test_terms_are_provided",
            "location": 488,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdateQueryWithFieldedTerms.test_multiple_terms_are_provided": {
            "name": "test_multiple_terms_are_provided",
            "location": 500,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdateQueryWithFieldedTerms.test_multiple_terms_are_provided_with_all_field": {
            "name": "test_multiple_terms_are_provided_with_all_field",
            "location": 515,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdateQueryWithDates.test_past_12_is_selected": {
            "name": "test_past_12_is_selected",
            "location": 534,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdateQueryWithDates.test_all_dates_is_selected": {
            "name": "test_all_dates_is_selected",
            "location": 547,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdateQueryWithDates.test_specific_year_is_selected": {
            "name": "test_specific_year_is_selected",
            "location": 554,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdateQueryWithDates.test_date_range_is_selected": {
            "name": "test_date_range_is_selected",
            "location": 570,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPaginationParametersAreFunky.test_order_is_invalid": {
            "name": "test_order_is_invalid",
            "location": 598,
            "return": [],
            "arguments": {
                "self": [],
                "mock_url_for": []
            }
        },
        "TestPaginationParametersAreFunky.test_size_is_invalid": {
            "name": "test_size_is_invalid",
            "location": 614,
            "return": [],
            "arguments": {
                "self": [],
                "mock_url_for": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_all_fields_search_contains_classic_syntax": {
            "name": "test_all_fields_search_contains_classic_syntax",
            "location": 641,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_author_search_contains_classic_syntax": {
            "name": "test_author_search_contains_classic_syntax",
            "location": 668,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_all_fields_search_multiple_classic_syntax": {
            "name": "test_all_fields_search_multiple_classic_syntax",
            "location": 696,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_title_search_contains_classic_syntax": {
            "name": "test_title_search_contains_classic_syntax",
            "location": 724,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_index_raises_connection_exception._raiseIndexConnectionError": {
            "name": "_raiseIndexConnectionError",
            "location": 137,
            "return": [],
            "arguments": {}
        },
        "TestSearchController.test_index_raises_query_error._raiseQueryError": {
            "name": "_raiseQueryError",
            "location": 167,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/controllers/advanced/__init__.py": {
        "search": {
            "name": "search",
            "location": 47,
            "return": [
                "Tuple[(Dict[(str, Any)], int, Dict[(str, Any)])]"
            ],
            "arguments": {
                "request_params": []
            }
        },
        "_query_from_form": {
            "name": "_query_from_form",
            "location": 177,
            "return": [
                "search.domain.advanced.AdvancedQuery"
            ],
            "arguments": {
                "form": [
                    "forms.AdvancedSearchForm"
                ]
            }
        },
        "_update_query_with_classification": {
            "name": "_update_query_with_classification",
            "location": 208,
            "return": [
                "search.domain.advanced.AdvancedQuery"
            ],
            "arguments": {
                "q": [
                    "search.domain.advanced.AdvancedQuery"
                ],
                "data": []
            }
        },
        "_update_query_with_terms": {
            "name": "_update_query_with_terms",
            "location": 244,
            "return": [
                "search.domain.advanced.AdvancedQuery"
            ],
            "arguments": {
                "q": [
                    "search.domain.advanced.AdvancedQuery"
                ],
                "terms_data": [
                    "list"
                ]
            }
        },
        "_update_query_with_dates": {
            "name": "_update_query_with_dates",
            "location": 257,
            "return": [
                "search.domain.advanced.AdvancedQuery"
            ],
            "arguments": {
                "q": [
                    "search.domain.advanced.AdvancedQuery"
                ],
                "date_data": []
            }
        },
        "group_search": {
            "name": "group_search",
            "location": 323,
            "return": [
                "Tuple[(Dict[(str, Any)], int, Dict[(str, Any)])]"
            ],
            "arguments": {
                "args": [],
                "groups_or_archives": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/controllers/api/__init__.py": {
        "search": {
            "name": "search",
            "location": 40,
            "return": [
                "Tuple[(Dict[(str, Any)], int, Dict[(str, Any)])]"
            ],
            "arguments": {
                "params": []
            }
        },
        "paper": {
            "name": "paper",
            "location": 118,
            "return": [
                "Tuple[(Dict[(str, Any)], int, Dict[(str, Any)])]"
            ],
            "arguments": {
                "paper_id": [
                    "str"
                ]
            }
        },
        "_get_include_fields": {
            "name": "_get_include_fields",
            "location": 152,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "params": [],
                "query_terms": [
                    "list"
                ]
            }
        },
        "_get_fielded_terms": {
            "name": "_get_fielded_terms",
            "location": 166,
            "return": [
                "Optional[search.domain.advanced.FieldedSearchList]"
            ],
            "arguments": {
                "params": [],
                "query_terms": [
                    "list"
                ],
                "operators": [
                    "Optional[Dict[(str, Any)]]"
                ]
            }
        },
        "_get_date_params": {
            "name": "_get_date_params",
            "location": 188,
            "return": [
                "Optional[search.domain.base.DateRange]"
            ],
            "arguments": {
                "params": [],
                "query_terms": [
                    "list"
                ]
            }
        },
        "_to_classification": {
            "name": "_to_classification",
            "location": 215,
            "return": [
                "Tuple[(search.domain.base.Classification, ...)]"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        },
        "_get_classification": {
            "name": "_get_classification",
            "location": 248,
            "return": [
                "Tuple[(search.domain.base.Classification, ...)]"
            ],
            "arguments": {
                "value": [
                    "str"
                ],
                "field": [
                    "str"
                ],
                "query_terms": [
                    "list"
                ]
            }
        },
        "_parse_search_query": {
            "name": "_parse_search_query",
            "location": 272,
            "return": [
                "Tuple[(Dict[(str, Any)], Dict[(str, Any)])]"
            ],
            "arguments": {
                "query": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/controllers/api/tests/tests_api_search.py": {
        "TestAPISearch.test_no_params": {
            "name": "test_no_params",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_query_param": {
            "name": "test_query_param",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_include_fields": {
            "name": "test_include_fields",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_group_primary_classification": {
            "name": "test_group_primary_classification",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_archive_primary_classification": {
            "name": "test_archive_primary_classification",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_archive_subsumed_classification": {
            "name": "test_archive_subsumed_classification",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_category_primary_classification": {
            "name": "test_category_primary_classification",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_bad_classification": {
            "name": "test_bad_classification",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_with_start_date": {
            "name": "test_with_start_date",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestAPISearch.test_with_end_dates_and_type": {
            "name": "test_with_end_dates_and_type",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestPaper.test_paper": {
            "name": "test_paper",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        }
    },
    "arxiv-search-master/search/controllers/api/tests/__init__.py": {},
    "arxiv-search-master/search/controllers/classic_api/__init__.py": {
        "query": {
            "name": "query",
            "location": 26,
            "return": [
                "Tuple[(search.domain.classic_api.classic_query.ClassicSearchResponseData, http.HTTPStatus, Dict[(str, Any)])]"
            ],
            "arguments": {
                "params": []
            }
        },
        "paper": {
            "name": "paper",
            "location": 166,
            "return": [
                "Tuple[(search.domain.classic_api.classic_query.ClassicSearchResponseData, http.HTTPStatus, Dict[(str, Any)])]"
            ],
            "arguments": {
                "paper_id": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/controllers/classic_api/tests/test_classic_api_search.py": {
        "TestClassicAPISearch.test_no_params": {
            "name": "test_no_params",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAPISearch.test_classic_query": {
            "name": "test_classic_query",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAPISearch.test_classic_query_with_quotes": {
            "name": "test_classic_query_with_quotes",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAPISearch.test_classic_id_list": {
            "name": "test_classic_id_list",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAPISearch.test_classic_start": {
            "name": "test_classic_start",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAPISearch.test_classic_max_result": {
            "name": "test_classic_max_result",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAPISearch.test_classic_sort_by": {
            "name": "test_classic_sort_by",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAPISearch.test_classic_sort_order": {
            "name": "test_classic_sort_order",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        }
    },
    "arxiv-search-master/search/controllers/classic_api/tests/__init__.py": {},
    "arxiv-search-master/search/controllers/simple/forms.py": {
        "SimpleSearchForm.validate_query": {
            "name": "validate_query",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "form": [],
                "field": []
            }
        }
    },
    "arxiv-search-master/search/controllers/simple/tests.py": {
        "TestRetrieveDocument.test_encounters_queryerror": {
            "name": "test_encounters_queryerror",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestRetrieveDocument.test_index_raises_connection_exception": {
            "name": "test_index_raises_connection_exception",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestRetrieveDocument.test_document_not_found": {
            "name": "test_document_not_found",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_arxiv_id": {
            "name": "test_arxiv_id",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_no_form_data": {
            "name": "test_no_form_data",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_single_field_term": {
            "name": "test_single_field_term",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_index_raises_connection_exception": {
            "name": "test_index_raises_connection_exception",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSearchController.test_index_raises_query_error": {
            "name": "test_index_raises_query_error",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestSimpleSearchForm.test_searchtype_only": {
            "name": "test_searchtype_only",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSimpleSearchForm.test_query_only": {
            "name": "test_query_only",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSimpleSearchForm.test_query_and_searchtype": {
            "name": "test_query_and_searchtype",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQueryFromForm.test_multiple_simple": {
            "name": "test_multiple_simple",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQueryFromForm.test_form_data_has_order": {
            "name": "test_form_data_has_order",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQueryFromForm.test_form_data_has_no_order": {
            "name": "test_form_data_has_no_order",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQueryFromForm.test_querystring_has_wildcard_at_start": {
            "name": "test_querystring_has_wildcard_at_start",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQueryFromForm.test_input_whitespace_is_stripped": {
            "name": "test_input_whitespace_is_stripped",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQueryFromForm.test_querystring_has_unbalanced_quotes": {
            "name": "test_querystring_has_unbalanced_quotes",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPaginationParametersAreFunky.test_order_is_invalid": {
            "name": "test_order_is_invalid",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "mock_url_for": []
            }
        },
        "TestPaginationParametersAreFunky.test_size_is_invalid": {
            "name": "test_size_is_invalid",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "mock_url_for": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_all_fields_search_contains_classic_syntax": {
            "name": "test_all_fields_search_contains_classic_syntax",
            "location": 339,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_author_search_contains_classic_syntax": {
            "name": "test_author_search_contains_classic_syntax",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_all_fields_search_multiple_classic_syntax": {
            "name": "test_all_fields_search_multiple_classic_syntax",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestClassicAuthorSyntaxIsIntercepted.test_title_search_contains_classic_syntax": {
            "name": "test_title_search_contains_classic_syntax",
            "location": 417,
            "return": [],
            "arguments": {
                "self": [],
                "mock_index": []
            }
        },
        "TestRetrieveDocument.test_encounters_queryerror._raiseQueryError": {
            "name": "_raiseQueryError",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "TestRetrieveDocument.test_document_not_found._raiseDocumentNotFound": {
            "name": "_raiseDocumentNotFound",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "TestSearchController.test_index_raises_connection_exception._raiseIndexConnectionError": {
            "name": "_raiseIndexConnectionError",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "TestSearchController.test_index_raises_query_error._raiseQueryError": {
            "name": "_raiseQueryError",
            "location": 177,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/controllers/simple/__init__.py": {
        "search": {
            "name": "search",
            "location": 35,
            "return": [
                "Tuple[(Dict[(str, Any)], int, Dict[(str, Any)])]"
            ],
            "arguments": {
                "request_params": [],
                "archives": [
                    "Optional[List[str]]"
                ]
            }
        },
        "retrieve_document": {
            "name": "retrieve_document",
            "location": 195,
            "return": [
                "Tuple[(Dict[(str, Any)], int, Dict[(str, Any)])]"
            ],
            "arguments": {
                "document_id": [
                    "str"
                ]
            }
        },
        "_update_with_archives": {
            "name": "_update_with_archives",
            "location": 248,
            "return": [
                "search.domain.base.SimpleQuery"
            ],
            "arguments": {
                "q": [
                    "search.domain.base.SimpleQuery"
                ],
                "archives": [
                    "List[str]"
                ]
            }
        },
        "_query_from_form": {
            "name": "_query_from_form",
            "location": 271,
            "return": [
                "search.domain.base.SimpleQuery"
            ],
            "arguments": {
                "form": [
                    "search.controllers.simple.forms.SimpleSearchForm"
                ]
            }
        }
    },
    "arxiv-search-master/search/domain/advanced.py": {
        "FieldedSearchTerm.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FieldedSearchList.__str__": {
            "name": "__str__",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/domain/api.py": {
        "get_default_extra_fields": {
            "name": "get_default_extra_fields",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_required_fields": {
            "name": "get_required_fields",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "APIQuery.__post_init__": {
            "name": "__post_init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/domain/base.py": {
        "asdict": {
            "name": "asdict",
            "location": 14,
            "return": [
                "dict"
            ],
            "arguments": {
                "obj": []
            }
        },
        "DateRange.__str__": {
            "name": "__str__",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassificationList.__str__": {
            "name": "__str__",
            "location": 125,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Operator.is_valid_value": {
            "name": "is_valid_value",
            "location": 138,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "value": [
                    "str"
                ]
            }
        },
        "Term.is_empty": {
            "name": "is_empty",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SortDirection.to_es": {
            "name": "to_es",
            "location": 251,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SortBy.to_es": {
            "name": "to_es",
            "location": 263,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SortOrder.to_es": {
            "name": "to_es",
            "location": 279,
            "return": [
                "List[Dict[(str, Dict[(str, str)])]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Query.page_end": {
            "name": "page_end",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Query.page": {
            "name": "page",
            "location": 325,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/domain/documents.py": {
        "document_set_from_documents": {
            "name": "document_set_from_documents",
            "location": 127,
            "return": [
                "DocumentSet"
            ],
            "arguments": {
                "documents": [
                    "List[Document]"
                ]
            }
        },
        "metadata_from_documents": {
            "name": "metadata_from_documents",
            "location": 138,
            "return": [
                "DocumentSetMetadata"
            ],
            "arguments": {
                "documents": [
                    "List[Document]"
                ]
            }
        }
    },
    "arxiv-search-master/search/domain/__init__.py": {},
    "arxiv-search-master/search/domain/classic_api/classic_query.py": {
        "ClassicAPIQuery.__post_init__": {
            "name": "__post_init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassicAPIQuery.to_query_string": {
            "name": "to_query_string",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/domain/classic_api/query_parser.py": {
        "parse_classic_query": {
            "name": "parse_classic_query",
            "location": 138,
            "return": [
                "Optional[Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])]]"
            ],
            "arguments": {
                "query": [
                    "str"
                ]
            }
        },
        "phrase_to_query_string": {
            "name": "phrase_to_query_string",
            "location": 147,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "phrase": [
                    "Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])]"
                ],
                "depth": [
                    "int"
                ]
            }
        },
        "QueryTransformer.field": {
            "name": "field",
            "location": 52,
            "return": [
                "search.domain.base.Field"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.search_string": {
            "name": "search_string",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.term": {
            "name": "term",
            "location": 68,
            "return": [
                "search.domain.base.Term"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.unary_operator": {
            "name": "unary_operator",
            "location": 72,
            "return": [
                "search.domain.base.Operator"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.unary_expression": {
            "name": "unary_expression",
            "location": 77,
            "return": [
                "Tuple[(search.domain.base.Operator, Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])])]"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.binary_operator": {
            "name": "binary_operator",
            "location": 81,
            "return": [
                "search.domain.base.Operator"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.binary_expression": {
            "name": "binary_expression",
            "location": 86,
            "return": [
                "Tuple[(search.domain.base.Operator, Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])], Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])])]"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.expression": {
            "name": "expression",
            "location": 92,
            "return": [
                "Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])]"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.empty": {
            "name": "empty",
            "location": 96,
            "return": [
                "search.domain.base.Term"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        },
        "QueryTransformer.query": {
            "name": "query",
            "location": 100,
            "return": [
                "Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])]"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "list"
                ]
            }
        }
    },
    "arxiv-search-master/search/domain/classic_api/__init__.py": {},
    "arxiv-search-master/search/domain/classic_api/tests/test_classic_parser.py": {
        "TestParsing.test_all_valid_field_values": {
            "name": "test_all_valid_field_values",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParsing.test_parse_ok_test_cases": {
            "name": "test_parse_ok_test_cases",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParsing.test_parse_error_test_cases": {
            "name": "test_parse_error_test_cases",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParsing.test_serialize_cases": {
            "name": "test_serialize_cases",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/domain/classic_api/tests/__init__.py": {},
    "arxiv-search-master/search/process/tests.py": {
        "TestTransformMetdata.test_id": {
            "name": "test_id",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_abstract": {
            "name": "test_abstract",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_authors": {
            "name": "test_authors",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_authors_freeform": {
            "name": "test_authors_freeform",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_owners": {
            "name": "test_owners",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_submitted_date": {
            "name": "test_submitted_date",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_submitted_date_all": {
            "name": "test_submitted_date_all",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_modified_date": {
            "name": "test_modified_date",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_updated_date": {
            "name": "test_updated_date",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_announced_date_first": {
            "name": "test_announced_date_first",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_is_withdrawn": {
            "name": "test_is_withdrawn",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_license": {
            "name": "test_license",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_paper_version": {
            "name": "test_paper_version",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_primary_classification": {
            "name": "test_primary_classification",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_secondary_classification": {
            "name": "test_secondary_classification",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_title": {
            "name": "test_title",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_title_utf8": {
            "name": "test_title_utf8",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_source": {
            "name": "test_source",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_version": {
            "name": "test_version",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_submitter": {
            "name": "test_submitter",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_report_num": {
            "name": "test_report_num",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_proxy": {
            "name": "test_proxy",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_msc_class": {
            "name": "test_msc_class",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_acm_class": {
            "name": "test_acm_class",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_doi": {
            "name": "test_doi",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_metadata_id1": {
            "name": "test_metadata_id1",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformMetdata.test_metadata_id2": {
            "name": "test_metadata_id2",
            "location": 315,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTransformBulkDocmeta.test_transform": {
            "name": "test_transform",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/process/transform.py": {
        "_constructLicense": {
            "name": "_constructLicense",
            "location": 15,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_strip_punctuation": {
            "name": "_strip_punctuation",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "_constructPaperVersion": {
            "name": "_constructPaperVersion",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_constructMSCClass": {
            "name": "_constructMSCClass",
            "location": 31,
            "return": [
                "Optional[list]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_constructACMClass": {
            "name": "_constructACMClass",
            "location": 38,
            "return": [
                "Optional[list]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_transformAuthor": {
            "name": "_transformAuthor",
            "location": 45,
            "return": [
                "Optional[Dict[(str, str)]]"
            ],
            "arguments": {
                "author": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "_constructAuthors": {
            "name": "_constructAuthors",
            "location": 62,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_constructAuthorOwners": {
            "name": "_constructAuthorOwners",
            "location": 71,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_getFirstSubDate": {
            "name": "_getFirstSubDate",
            "location": 80,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_getLastSubDate": {
            "name": "_getLastSubDate",
            "location": 86,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "_constructDOI": {
            "name": "_constructDOI",
            "location": 92,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "meta": [
                    "search.domain.base.DocMeta"
                ]
            }
        },
        "to_search_document": {
            "name": "to_search_document",
            "location": 143,
            "return": [
                "search.domain.documents.Document"
            ],
            "arguments": {
                "metadata": [
                    "search.domain.base.DocMeta"
                ],
                "fulltext": [
                    "Optional[search.domain.base.Fulltext]"
                ]
            }
        }
    },
    "arxiv-search-master/search/process/__init__.py": {},
    "arxiv-search-master/search/routes/consts.py": {},
    "arxiv-search-master/search/routes/context_processors.py": {
        "url_for_page_builder": {
            "name": "url_for_page_builder",
            "location": 9,
            "return": [
                "Dict[(str, Callable)]"
            ],
            "arguments": {}
        },
        "current_url_params_builder": {
            "name": "current_url_params_builder",
            "location": 25,
            "return": [
                "Dict[(str, Callable)]"
            ],
            "arguments": {}
        },
        "current_url_sans_parameters_builder": {
            "name": "current_url_sans_parameters_builder",
            "location": 36,
            "return": [
                "Dict[(str, Callable)]"
            ],
            "arguments": {}
        },
        "url_for_author_search_builder": {
            "name": "url_for_author_search_builder",
            "location": 55,
            "return": [
                "Dict[(str, Callable)]"
            ],
            "arguments": {}
        },
        "url_with_params_builder": {
            "name": "url_with_params_builder",
            "location": 90,
            "return": [
                "Dict[(str, Callable)]"
            ],
            "arguments": {}
        },
        "is_current_builder": {
            "name": "is_current_builder",
            "location": 103,
            "return": [
                "Dict[(str, Callable)]"
            ],
            "arguments": {}
        },
        "url_for_page_builder.url_for_page": {
            "name": "url_for_page",
            "location": 12,
            "return": [],
            "arguments": {
                "page": [],
                "size": []
            }
        },
        "current_url_params_builder.current_url_params": {
            "name": "current_url_params",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "current_url_sans_parameters_builder.current_url_sans_parameters": {
            "name": "current_url_sans_parameters",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "url_for_author_search_builder.get_archives_url": {
            "name": "get_archives_url",
            "location": 61,
            "return": [],
            "arguments": {
                "archives": []
            }
        },
        "url_for_author_search_builder.url_for_author_search": {
            "name": "url_for_author_search",
            "location": 69,
            "return": [],
            "arguments": {
                "forename": [],
                "surname": []
            }
        },
        "url_with_params_builder.url_with_params": {
            "name": "url_with_params",
            "location": 93,
            "return": [],
            "arguments": {
                "name": [],
                "values": [],
                "params": []
            }
        },
        "is_current_builder.is_current": {
            "name": "is_current",
            "location": 106,
            "return": [],
            "arguments": {
                "result": []
            }
        }
    },
    "arxiv-search-master/search/routes/ui.py": {
        "get_parameters_from_cookie": {
            "name": "get_parameters_from_cookie",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "set_parameters_in_cookie": {
            "name": "set_parameters_in_cookie",
            "location": 60,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "apply_response_headers": {
            "name": "apply_response_headers",
            "location": 73,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "search": {
            "name": "search",
            "location": 83,
            "return": [],
            "arguments": {
                "archives": []
            }
        },
        "advanced_search": {
            "name": "advanced_search",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "group_search": {
            "name": "group_search",
            "location": 115,
            "return": [],
            "arguments": {
                "groups_or_archives": []
            }
        },
        "service_status": {
            "name": "service_status",
            "location": 134,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/routes/__init__.py": {},
    "arxiv-search-master/search/routes/api/exceptions.py": {
        "handler": {
            "name": "handler",
            "location": 31,
            "return": [
                "Callable"
            ],
            "arguments": {
                "exception": [
                    "type"
                ]
            }
        },
        "get_handlers": {
            "name": "get_handlers",
            "location": 42,
            "return": [
                "List[Tuple[(type, Callable)]]"
            ],
            "arguments": {}
        },
        "respond": {
            "name": "respond",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "error": [],
                "status": [
                    "http.HTTPStatus"
                ]
            }
        },
        "handle_not_found": {
            "name": "handle_not_found",
            "location": 65,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_forbidden": {
            "name": "handle_forbidden",
            "location": 71,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_unauthorized": {
            "name": "handle_unauthorized",
            "location": 77,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_method_not_allowed": {
            "name": "handle_method_not_allowed",
            "location": 83,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_request_entity_too_large": {
            "name": "handle_request_entity_too_large",
            "location": 89,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_bad_request": {
            "name": "handle_bad_request",
            "location": 95,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_internal_server_error": {
            "name": "handle_internal_server_error",
            "location": 101,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handler.deco": {
            "name": "deco",
            "location": 34,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "arxiv-search-master/search/routes/api/__init__.py": {
        "search": {
            "name": "search",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "paper": {
            "name": "paper",
            "location": 39,
            "return": [],
            "arguments": {
                "paper_id": [],
                "version": []
            }
        }
    },
    "arxiv-search-master/search/routes/api/tests/test_api.py": {
        "TestAPISearchRequests.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAPISearchRequests.test_request_without_token": {
            "name": "test_request_without_token",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAPISearchRequests.test_with_token_lacking_scope": {
            "name": "test_with_token_lacking_scope",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAPISearchRequests.test_with_valid_token": {
            "name": "test_with_valid_token",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestAPISearchRequests.test_with_valid_token_limit_fields": {
            "name": "test_with_valid_token_limit_fields",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestAPISearchRequests.test_paper_retrieval": {
            "name": "test_paper_retrieval",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        }
    },
    "arxiv-search-master/search/routes/api/tests/__init__.py": {},
    "arxiv-search-master/search/routes/classic_api/exceptions.py": {
        "handler": {
            "name": "handler",
            "location": 33,
            "return": [
                "Callable"
            ],
            "arguments": {
                "exception": [
                    "type"
                ]
            }
        },
        "get_handlers": {
            "name": "get_handlers",
            "location": 44,
            "return": [
                "List[Tuple[(type, Callable)]]"
            ],
            "arguments": {}
        },
        "respond": {
            "name": "respond",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "error_msg": [
                    "str"
                ],
                "link": [
                    "str"
                ],
                "status": [
                    "http.HTTPStatus"
                ]
            }
        },
        "handle_not_found": {
            "name": "handle_not_found",
            "location": 70,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_forbidden": {
            "name": "handle_forbidden",
            "location": 76,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_unauthorized": {
            "name": "handle_unauthorized",
            "location": 82,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_method_not_allowed": {
            "name": "handle_method_not_allowed",
            "location": 88,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_request_entity_too_large": {
            "name": "handle_request_entity_too_large",
            "location": 94,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_bad_request": {
            "name": "handle_bad_request",
            "location": 102,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_internal_server_error": {
            "name": "handle_internal_server_error",
            "location": 108,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handle_validation_error": {
            "name": "handle_validation_error",
            "location": 116,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "handler.deco": {
            "name": "deco",
            "location": 36,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "arxiv-search-master/search/routes/classic_api/__init__.py": {
        "query": {
            "name": "query",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "paper": {
            "name": "paper",
            "location": 37,
            "return": [],
            "arguments": {
                "paper_id": [],
                "version": []
            }
        }
    },
    "arxiv-search-master/search/routes/classic_api/tests/test_classic.py": {
        "TestClassicAPISearchRequests.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.mock_classic_controller": {
            "name": "mock_classic_controller",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "controller": [],
                "method": []
            }
        },
        "TestClassicAPISearchRequests.test_request_without_token": {
            "name": "test_request_without_token",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_with_token_lacking_scope": {
            "name": "test_with_token_lacking_scope",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_with_valid_token": {
            "name": "test_with_valid_token",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestClassicAPISearchRequests.test_paper_retrieval": {
            "name": "test_paper_retrieval",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestClassicAPISearchRequests._fix_path": {
            "name": "_fix_path",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "TestClassicAPISearchRequests._node": {
            "name": "_node",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "et": [],
                "path": [
                    "str"
                ]
            }
        },
        "TestClassicAPISearchRequests._text": {
            "name": "_text",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "et": [],
                "path": [
                    "str"
                ]
            }
        },
        "TestClassicAPISearchRequests.check_validation_error": {
            "name": "check_validation_error",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [],
                "error": [],
                "link": []
            }
        },
        "TestClassicAPISearchRequests.test_start_not_a_number": {
            "name": "test_start_not_a_number",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_start_negative": {
            "name": "test_start_negative",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_max_results_not_a_number": {
            "name": "test_max_results_not_a_number",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_max_results_negative": {
            "name": "test_max_results_negative",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_sort_by_valid_values": {
            "name": "test_sort_by_valid_values",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestClassicAPISearchRequests.test_sort_by_invalid_values": {
            "name": "test_sort_by_invalid_values",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_sort_direction_valid_values": {
            "name": "test_sort_direction_valid_values",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestClassicAPISearchRequests.test_sort_direction_invalid_values": {
            "name": "test_sort_direction_invalid_values",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_sort_order": {
            "name": "test_sort_order",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicAPISearchRequests.test_invalid_arxiv_id": {
            "name": "test_invalid_arxiv_id",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/routes/classic_api/tests/__init__.py": {},
    "arxiv-search-master/search/serialize/atom.py": {
        "as_atom": {
            "name": "as_atom",
            "location": 252,
            "return": [
                "str"
            ],
            "arguments": {
                "document_or_set": [
                    "Union[(search.domain.documents.Document, search.domain.documents.DocumentSet, search.domain.documents.Error)]"
                ],
                "query": [
                    "Optional[search.domain.classic_api.classic_query.ClassicAPIQuery]"
                ]
            }
        },
        "AtomXMLSerializer._fix_url": {
            "name": "_fix_url",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "AtomXMLSerializer.transform_document": {
            "name": "transform_document",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fg": [],
                "doc": [
                    "search.domain.documents.Document"
                ],
                "query": [
                    "Optional[search.domain.classic_api.classic_query.ClassicAPIQuery]"
                ]
            }
        },
        "AtomXMLSerializer._get_feed": {
            "name": "_get_feed",
            "location": 130,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "query": [
                    "Optional[search.domain.classic_api.classic_query.ClassicAPIQuery]"
                ]
            }
        },
        "AtomXMLSerializer.serialize": {
            "name": "serialize",
            "location": 191,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "document_set": [
                    "search.domain.documents.DocumentSet"
                ],
                "query": [
                    "Optional[search.domain.classic_api.classic_query.ClassicAPIQuery]"
                ]
            }
        },
        "AtomXMLSerializer.serialize_error": {
            "name": "serialize_error",
            "location": 213,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "search.domain.documents.Error"
                ],
                "query": [
                    "Optional[search.domain.classic_api.classic_query.ClassicAPIQuery]"
                ]
            }
        },
        "AtomXMLSerializer.serialize_document": {
            "name": "serialize_document",
            "location": 242,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "search.domain.documents.Document"
                ],
                "query": [
                    "Optional[search.domain.classic_api.classic_query.ClassicAPIQuery]"
                ]
            }
        }
    },
    "arxiv-search-master/search/serialize/atom_extensions.py": {
        "OpenSearchExtension.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpenSearchExtension.extend_atom": {
            "name": "extend_atom",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "atom_feed": []
            }
        },
        "OpenSearchExtension.extend_rss": {
            "name": "extend_rss",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "rss_feed": []
            }
        },
        "OpenSearchExtension.extend_ns": {
            "name": "extend_ns",
            "location": 86,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {}
        },
        "OpenSearchExtension.totalResults": {
            "name": "totalResults",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "OpenSearchExtension.startIndex": {
            "name": "startIndex",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "OpenSearchExtension.itemsPerPage": {
            "name": "itemsPerPage",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ArXivExtension.__init__": {
            "name": "__init__",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArXivExtension.extend_atom": {
            "name": "extend_atom",
            "location": 118,
            "return": [
                "Any"
            ],
            "arguments": {
                "atom_feed": []
            }
        },
        "ArXivExtension.extend_rss": {
            "name": "extend_rss",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "rss_feed": []
            }
        },
        "ArXivExtension.extend_ns": {
            "name": "extend_ns",
            "location": 154,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {}
        },
        "ArXivEntryExtension.__init__": {
            "name": "__init__",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArXivEntryExtension.extend_atom": {
            "name": "extend_atom",
            "location": 178,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "entry": []
            }
        },
        "ArXivEntryExtension.extend_rss": {
            "name": "extend_rss",
            "location": 234,
            "return": [
                "Any"
            ],
            "arguments": {
                "entry": []
            }
        },
        "ArXivEntryExtension.comment": {
            "name": "comment",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ArXivEntryExtension.primary_category": {
            "name": "primary_category",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ArXivEntryExtension.journal_ref": {
            "name": "journal_ref",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ArXivEntryExtension.doi": {
            "name": "doi",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dois": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "ArXivEntryExtension.author": {
            "name": "author",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[(str, Any)]"
                ]
            }
        }
    },
    "arxiv-search-master/search/serialize/base.py": {},
    "arxiv-search-master/search/serialize/json.py": {
        "as_json": {
            "name": "as_json",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "document_or_set": [
                    "Union[(search.domain.documents.Document, search.domain.documents.DocumentSet)]"
                ],
                "query": [
                    "Optional[search.domain.api.APIQuery]"
                ]
            }
        },
        "JSONSerializer._transform_classification": {
            "name": "_transform_classification",
            "location": 14,
            "return": [
                "Optional[Dict[(str, Optional[str])]]"
            ],
            "arguments": {
                "clsn": [
                    "search.domain.base.Classification"
                ]
            }
        },
        "JSONSerializer._transform_format": {
            "name": "_transform_format",
            "location": 27,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "fmt": [
                    "str"
                ],
                "paper_id": [
                    "str"
                ],
                "version": [
                    "int"
                ]
            }
        },
        "JSONSerializer._transform_latest": {
            "name": "_transform_latest",
            "location": 36,
            "return": [
                "Optional[Dict[(str, str)]]"
            ],
            "arguments": {
                "document": [
                    "search.domain.documents.Document"
                ]
            }
        },
        "JSONSerializer._transform_license": {
            "name": "_transform_license",
            "location": 57,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "license": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "JSONSerializer.transform_document": {
            "name": "transform_document",
            "location": 65,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "doc": [
                    "search.domain.documents.Document"
                ],
                "query": [
                    "Optional[search.domain.api.APIQuery]"
                ]
            }
        },
        "JSONSerializer.serialize": {
            "name": "serialize",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "document_set": [
                    "search.domain.documents.DocumentSet"
                ],
                "query": [
                    "Optional[search.domain.api.APIQuery]"
                ]
            }
        },
        "JSONSerializer.serialize_document": {
            "name": "serialize_document",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "search.domain.documents.Document"
                ],
                "query": [
                    "Optional[search.domain.api.APIQuery]"
                ]
            }
        }
    },
    "arxiv-search-master/search/serialize/__init__.py": {},
    "arxiv-search-master/search/serialize/tests/test_serialize.py": {
        "mock_jsonify": {
            "name": "mock_jsonify",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "o": []
            }
        },
        "TestSerializeJSONDocument.setUp": {
            "name": "setUp",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSerializeJSONDocument.test_to_json": {
            "name": "test_to_json",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSerializeJSONDocumentSet.setUp": {
            "name": "setUp",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSerializeJSONDocumentSet.test_to_json": {
            "name": "test_to_json",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSerializeAtomDocument.test_to_atom": {
            "name": "test_to_atom",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/serialize/tests/__init__.py": {},
    "arxiv-search-master/search/services/fulltext.py": {
        "init_app": {
            "name": "init_app",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "object"
                ]
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 87,
            "return": [
                "FulltextSession"
            ],
            "arguments": {
                "app": [
                    "object"
                ]
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 96,
            "return": [
                "FulltextSession"
            ],
            "arguments": {}
        },
        "retrieve": {
            "name": "retrieve",
            "location": 107,
            "return": [
                "search.domain.base.Fulltext"
            ],
            "arguments": {
                "document_id": [
                    "str"
                ]
            }
        },
        "FulltextSession.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str"
                ]
            }
        },
        "FulltextSession.retrieve": {
            "name": "retrieve",
            "location": 32,
            "return": [
                "search.domain.base.Fulltext"
            ],
            "arguments": {
                "self": [],
                "document_id": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/metadata.py": {
        "init_app": {
            "name": "init_app",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [
                    "object"
                ]
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 217,
            "return": [
                "DocMetaSession"
            ],
            "arguments": {
                "app": [
                    "object"
                ]
            }
        },
        "current_session": {
            "name": "current_session",
            "location": 229,
            "return": [
                "DocMetaSession"
            ],
            "arguments": {}
        },
        "retrieve": {
            "name": "retrieve",
            "location": 240,
            "return": [
                "search.domain.base.DocMeta"
            ],
            "arguments": {
                "document_id": [
                    "str"
                ]
            }
        },
        "bulk_retrieve": {
            "name": "bulk_retrieve",
            "location": 246,
            "return": [
                "List[search.domain.base.DocMeta]"
            ],
            "arguments": {
                "document_ids": [
                    "List[str]"
                ]
            }
        },
        "DocMetaSession.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DocMetaSession.endpoint": {
            "name": "endpoint",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DocMetaSession.retrieve": {
            "name": "retrieve",
            "location": 85,
            "return": [
                "search.domain.base.DocMeta"
            ],
            "arguments": {
                "self": [],
                "document_id": [
                    "str"
                ]
            }
        },
        "DocMetaSession.bulk_retrieve": {
            "name": "bulk_retrieve",
            "location": 147,
            "return": [
                "List[search.domain.base.DocMeta]"
            ],
            "arguments": {
                "self": [],
                "document_ids": [
                    "List[str]"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/tex.py": {
        "isMath": {
            "name": "isMath",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "checkme": []
            }
        },
        "position_f": {
            "name": "position_f",
            "location": 22,
            "return": [
                "Callable[([str], List[Tuple[(int, int)]])]"
            ],
            "arguments": {
                "delims": [
                    "Dict[(str, Tuple[(str, Pattern)])]"
                ]
            }
        },
        "split_for_maths": {
            "name": "split_for_maths",
            "location": 64,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "positions": [
                    "List[Tuple[(int, int)]]"
                ],
                "txt": [
                    "str"
                ]
            }
        },
        "Math.__math__": {
            "name": "__math__",
            "location": 10,
            "return": [
                "_TMath"
            ],
            "arguments": {
                "self": [
                    "_TMath"
                ]
            }
        },
        "position_f.pos_func": {
            "name": "pos_func",
            "location": 29,
            "return": [],
            "arguments": {
                "txt": []
            }
        }
    },
    "arxiv-search-master/search/services/__init__.py": {},
    "arxiv-search-master/search/services/index/advanced.py": {
        "advanced_search": {
            "name": "advanced_search",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "search": [],
                "query": [
                    "search.domain.advanced.AdvancedQuery"
                ]
            }
        },
        "_date_range": {
            "name": "_date_range",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "q": [
                    "search.domain.advanced.AdvancedQuery"
                ]
            }
        },
        "_grouped_terms_to_q": {
            "name": "_grouped_terms_to_q",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {
                "term_pair": [
                    "Tuple[(Any, Any, Any)]"
                ]
            }
        },
        "_get_operator": {
            "name": "_get_operator",
            "location": 103,
            "return": [
                "str"
            ],
            "arguments": {
                "obj": []
            }
        },
        "_group_terms": {
            "name": "_group_terms",
            "location": 110,
            "return": [
                "tuple"
            ],
            "arguments": {
                "query": [
                    "search.domain.advanced.AdvancedQuery"
                ]
            }
        },
        "_fielded_terms_to_q": {
            "name": "_fielded_terms_to_q",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "query": [
                    "search.domain.advanced.AdvancedQuery"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/api.py": {
        "api_search": {
            "name": "api_search",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "search": [],
                "query": [
                    "search.domain.api.APIQuery"
                ]
            }
        },
        "_date_range": {
            "name": "_date_range",
            "location": 66,
            "return": [
                "Any"
            ],
            "arguments": {
                "q": [
                    "search.domain.api.APIQuery"
                ]
            }
        },
        "_grouped_terms_to_q": {
            "name": "_grouped_terms_to_q",
            "location": 82,
            "return": [
                "Any"
            ],
            "arguments": {
                "term_pair": [
                    "Tuple[(Any, Any, Any)]"
                ]
            }
        },
        "_get_operator": {
            "name": "_get_operator",
            "location": 107,
            "return": [
                "str"
            ],
            "arguments": {
                "obj": []
            }
        },
        "_group_terms": {
            "name": "_group_terms",
            "location": 114,
            "return": [
                "tuple"
            ],
            "arguments": {
                "query": [
                    "search.domain.api.APIQuery"
                ]
            }
        },
        "_fielded_terms_to_q": {
            "name": "_fielded_terms_to_q",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "query": [
                    "search.domain.api.APIQuery"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/authors.py": {
        "_remove_stopwords": {
            "name": "_remove_stopwords",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "Q_": {
            "name": "Q_",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "qtype": [
                    "str"
                ],
                "field": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "part_query": {
            "name": "part_query",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "string_query": {
            "name": "string_query",
            "location": 141,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "path": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "author_query": {
            "name": "author_query",
            "location": 154,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "author_id_query": {
            "name": "author_id_query",
            "location": 266,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "orcid_query": {
            "name": "orcid_query",
            "location": 291,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/exceptions.py": {},
    "arxiv-search-master/search/services/index/highlighting.py": {
        "highlight": {
            "name": "highlight",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "search": []
            }
        },
        "preview": {
            "name": "preview",
            "location": 77,
            "return": [
                "Tuple[(str, bool)]"
            ],
            "arguments": {
                "value": [
                    "str"
                ],
                "fragment_size": [
                    "int"
                ],
                "start_tag": [
                    "str"
                ],
                "end_tag": [
                    "str"
                ]
            }
        },
        "add_highlighting": {
            "name": "add_highlighting",
            "location": 153,
            "return": [
                "search.domain.documents.Document"
            ],
            "arguments": {
                "result": [
                    "search.domain.documents.Document"
                ],
                "raw": []
            }
        },
        "_de_highlight_math": {
            "name": "_de_highlight_math",
            "location": 254,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "math": [
                    "str"
                ]
            }
        },
        "_highlight_whole_texism": {
            "name": "_highlight_whole_texism",
            "location": 273,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        },
        "_escape": {
            "name": "_escape",
            "location": 301,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        },
        "_escape_nontex": {
            "name": "_escape_nontex",
            "location": 320,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        },
        "_start_safely": {
            "name": "_start_safely",
            "location": 342,
            "return": [
                "int"
            ],
            "arguments": {
                "value": [
                    "str"
                ],
                "start": [
                    "int"
                ],
                "end": [
                    "int"
                ],
                "fragment_size": [
                    "int"
                ],
                "tolerance": [
                    "int"
                ],
                "start_tag": [
                    "str"
                ],
                "end_tag": [
                    "str"
                ]
            }
        },
        "_end_safely": {
            "name": "_end_safely",
            "location": 374,
            "return": [
                "int"
            ],
            "arguments": {
                "value": [
                    "str"
                ],
                "remaining": [
                    "int"
                ],
                "start_tag": [
                    "str"
                ],
                "end_tag": [
                    "str"
                ]
            }
        },
        "_highlight_positions": {
            "name": "_highlight_positions",
            "location": 412,
            "return": [
                "List[Tuple[(int, int)]]"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        },
        "collapse_hl_tags_score": {
            "name": "collapse_hl_tags_score",
            "location": 422,
            "return": [
                "int"
            ],
            "arguments": {
                "value": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/prepare.py": {
        "_query_title": {
            "name": "_query_title",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "default_operator": [
                    "str"
                ]
            }
        },
        "_query_abstract": {
            "name": "_query_abstract",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "default_operator": [
                    "str"
                ]
            }
        },
        "_query_comments": {
            "name": "_query_comments",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "default_operator": [
                    "str"
                ]
            }
        },
        "_tex_query": {
            "name": "_tex_query",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "field": [
                    "str"
                ],
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_journal_ref": {
            "name": "_query_journal_ref",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "boost": [
                    "int"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_report_num": {
            "name": "_query_report_num",
            "location": 100,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "boost": [
                    "int"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_acm_class": {
            "name": "_query_acm_class",
            "location": 110,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_msc_class": {
            "name": "_query_msc_class",
            "location": 116,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_doi": {
            "name": "_query_doi",
            "location": 122,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_announcement_date": {
            "name": "_query_announcement_date",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "_query_primary": {
            "name": "_query_primary",
            "location": 147,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "query_primary_exact": {
            "name": "query_primary_exact",
            "location": 163,
            "return": [
                "Any"
            ],
            "arguments": {
                "classification": [
                    "search.domain.base.Classification"
                ]
            }
        },
        "query_secondary_exact": {
            "name": "query_secondary_exact",
            "location": 182,
            "return": [
                "Any"
            ],
            "arguments": {
                "classification": [
                    "search.domain.base.Classification"
                ]
            }
        },
        "query_any_subject_exact_raw": {
            "name": "query_any_subject_exact_raw",
            "location": 205,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "_query_secondary": {
            "name": "_query_secondary",
            "location": 219,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_paper_id": {
            "name": "_query_paper_id",
            "location": 237,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_license_query": {
            "name": "_license_query",
            "location": 248,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "_query_combined": {
            "name": "_query_combined",
            "location": 253,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "_query_all_fields": {
            "name": "_query_all_fields",
            "location": 267,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "limit_by_classification": {
            "name": "limit_by_classification",
            "location": 453,
            "return": [
                "Any"
            ],
            "arguments": {
                "classifications": [
                    "search.domain.base.ClassificationList"
                ],
                "field": [
                    "str"
                ]
            }
        },
        "limit_by_classification._to_q": {
            "name": "_to_q",
            "location": 460,
            "return": [],
            "arguments": {
                "classification": []
            }
        }
    },
    "arxiv-search-master/search/services/index/results.py": {
        "to_document": {
            "name": "to_document",
            "location": 22,
            "return": [
                "search.domain.documents.Document"
            ],
            "arguments": {
                "raw": [],
                "highlight": [
                    "bool"
                ]
            }
        },
        "to_documentset": {
            "name": "to_documentset",
            "location": 59,
            "return": [
                "search.domain.documents.DocumentSet"
            ],
            "arguments": {
                "query": [
                    "search.domain.base.Query"
                ],
                "response": [],
                "highlight": [
                    "bool"
                ]
            }
        },
        "_add_announced_date_first": {
            "name": "_add_announced_date_first",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "result": [
                    "search.domain.documents.Document"
                ],
                "raw": []
            }
        },
        "_add_date": {
            "name": "_add_date",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "result": [
                    "search.domain.documents.Document"
                ],
                "raw": [],
                "key": [
                    "str"
                ]
            }
        },
        "_add_amc_msc": {
            "name": "_add_amc_msc",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "result": [
                    "search.domain.documents.Document"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/simple.py": {
        "simple_search": {
            "name": "simple_search",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "search": [],
                "query": [
                    "search.domain.base.SimpleQuery"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/util.py": {
        "wildcard_escape": {
            "name": "wildcard_escape",
            "location": 62,
            "return": [
                "Tuple[(str, bool)]"
            ],
            "arguments": {
                "querystring": [
                    "str"
                ]
            }
        },
        "has_wildcard": {
            "name": "has_wildcard",
            "location": 99,
            "return": [
                "bool"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "is_literal_query": {
            "name": "is_literal_query",
            "location": 106,
            "return": [
                "bool"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "is_tex_query": {
            "name": "is_tex_query",
            "location": 112,
            "return": [
                "bool"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "is_old_papernum": {
            "name": "is_old_papernum",
            "location": 117,
            "return": [
                "bool"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "strip_tex": {
            "name": "strip_tex",
            "location": 122,
            "return": [
                "str"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "Q_": {
            "name": "Q_",
            "location": 127,
            "return": [
                "Any"
            ],
            "arguments": {
                "qtype": [
                    "str"
                ],
                "field": [
                    "str"
                ],
                "value": [
                    "str"
                ],
                "operator": [
                    "str"
                ]
            }
        },
        "escape": {
            "name": "escape",
            "location": 137,
            "return": [
                "str"
            ],
            "arguments": {
                "term": [
                    "str"
                ],
                "quotes": [
                    "bool"
                ]
            }
        },
        "strip_punctuation": {
            "name": "strip_punctuation",
            "location": 147,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        },
        "remove_single_characters": {
            "name": "remove_single_characters",
            "location": 152,
            "return": [
                "str"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "sort": {
            "name": "sort",
            "location": 159,
            "return": [
                "Any"
            ],
            "arguments": {
                "query": [
                    "search.domain.base.Query"
                ],
                "search": []
            }
        },
        "parse_date": {
            "name": "parse_date",
            "location": 175,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        },
        "parse_date_partial": {
            "name": "parse_date_partial",
            "location": 208,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "term": [
                    "str"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/__init__.py": {
        "search2": {
            "name": "search2",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "doc_type": [],
                "body": [],
                "params": []
            }
        },
        "handle_es_exceptions": {
            "name": "handle_es_exceptions",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "ok": {
            "name": "ok",
            "location": 576,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "SearchSession.__init__": {
            "name": "__init__",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [
                    "str"
                ],
                "index": [
                    "str"
                ],
                "port": [
                    "int"
                ],
                "scheme": [
                    "str"
                ],
                "user": [
                    "Optional[str]"
                ],
                "password": [
                    "Optional[str]"
                ],
                "mapping": [
                    "Optional[str]"
                ],
                "verify": [
                    "bool"
                ]
            }
        },
        "SearchSession.new_connection": {
            "name": "new_connection",
            "location": 202,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchSession._base_search": {
            "name": "_base_search",
            "location": 218,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchSession._load_mapping": {
            "name": "_load_mapping",
            "location": 222,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchSession.es": {
            "name": "es",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchSession.cluster_available": {
            "name": "cluster_available",
            "location": 247,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchSession.create_index": {
            "name": "create_index",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SearchSession.index_exists": {
            "name": "index_exists",
            "location": 281,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "index_name": [
                    "str"
                ]
            }
        },
        "SearchSession.reindex": {
            "name": "reindex",
            "location": 299,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "old_index": [
                    "str"
                ],
                "new_index": [
                    "str"
                ],
                "wait_for_completion": [
                    "bool"
                ]
            }
        },
        "SearchSession.get_task_status": {
            "name": "get_task_status",
            "location": 337,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "task": [
                    "str"
                ]
            }
        },
        "SearchSession.add_document": {
            "name": "add_document",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "document": [
                    "search.domain.documents.Document"
                ]
            }
        },
        "SearchSession.bulk_add_documents": {
            "name": "bulk_add_documents",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "documents": [
                    "List[search.domain.documents.Document]"
                ],
                "docs_per_chunk": [
                    "int"
                ]
            }
        },
        "SearchSession.get_document": {
            "name": "get_document",
            "location": 433,
            "return": [
                "search.domain.documents.Document"
            ],
            "arguments": {
                "self": [],
                "document_id": [
                    "str"
                ]
            }
        },
        "SearchSession.search": {
            "name": "search",
            "location": 464,
            "return": [
                "search.domain.documents.DocumentSet"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "search.domain.base.Query"
                ],
                "highlight": [
                    "bool"
                ]
            }
        },
        "SearchSession.exists": {
            "name": "exists",
            "location": 525,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "paper_id_v": [
                    "str"
                ]
            }
        },
        "SearchSession.init_app": {
            "name": "init_app",
            "location": 532,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "app": [
                    "object"
                ]
            }
        },
        "SearchSession.get_session": {
            "name": "get_session",
            "location": 546,
            "return": [
                "_TSearchSession"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSearchSession]"
                ],
                "app": [
                    "object"
                ]
            }
        },
        "SearchSession.current_session": {
            "name": "current_session",
            "location": 566,
            "return": [
                "_TSearchSession"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSearchSession]"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/classic_api/classic_search.py": {
        "classic_search": {
            "name": "classic_search",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "search": [],
                "query": [
                    "search.domain.classic_api.classic_query.ClassicAPIQuery"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/classic_api/query_builder.py": {
        "term_to_query": {
            "name": "term_to_query",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "term": [
                    "search.domain.base.Term"
                ]
            }
        },
        "query_builder": {
            "name": "query_builder",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "phrase": [
                    "Union[(search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Term, Tuple[(Union[(search.domain.base.Operator, search.domain.base.Phrase)], ...)])], ...)])]"
                ]
            }
        }
    },
    "arxiv-search-master/search/services/index/classic_api/__init__.py": {},
    "arxiv-search-master/search/services/index/classic_api/tests/test_query_builder.py": {
        "TestQueryBuilder.test_query_builder": {
            "name": "test_query_builder",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/services/index/classic_api/tests/__init__.py": {},
    "arxiv-search-master/search/services/index/tests/tests.py": {
        "mock_rdata": {
            "name": "mock_rdata",
            "location": 108,
            "return": [
                "Dict[(str, Union[(str, Dict[(str, str)], List[Dict[(str, str)]])])]"
            ],
            "arguments": {}
        },
        "TestClassicApiQuery.test_classic_query_creation": {
            "name": "test_classic_query_creation",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClassicApiQuery.test_to_query_string": {
            "name": "test_to_query_string",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Hi.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSearch.test_advanced_query": {
            "name": "test_advanced_query",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": [],
                "mock_Search": []
            }
        },
        "TestSearch.test_simple_query": {
            "name": "test_simple_query",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": [],
                "mock_Search": []
            }
        },
        "TestSearch.test_classic_query": {
            "name": "test_classic_query",
            "location": 247,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": [],
                "mock_Search": []
            }
        },
        "TestSearch.test_classic_query_complex": {
            "name": "test_classic_query_complex",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": [],
                "mock_Search": []
            }
        },
        "TestSearch.test_classic_query_id_list": {
            "name": "test_classic_query_id_list",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": [],
                "mock_Search": []
            }
        },
        "TestSearch.test_classic_query_phrases": {
            "name": "test_classic_query_phrases",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": [],
                "mock_Search": []
            }
        },
        "TestWildcardSearch.test_match_any_wildcard_is_present": {
            "name": "test_match_any_wildcard_is_present",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWildcardSearch.test_match_any_wildcard_in_literal": {
            "name": "test_match_any_wildcard_in_literal",
            "location": 414,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWildcardSearch.test_multiple_match_any_wildcard_in_literal": {
            "name": "test_multiple_match_any_wildcard_in_literal",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWildcardSearch.test_mixed_wildcards_in_literal": {
            "name": "test_mixed_wildcards_in_literal",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWildcardSearch.test_wildcards_both_inside_and_outside_literal": {
            "name": "test_wildcards_both_inside_and_outside_literal",
            "location": 459,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWildcardSearch.test_wildcards_inside_outside_multiple_literals": {
            "name": "test_wildcards_inside_outside_multiple_literals",
            "location": 476,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWildcardSearch.test_wildcard_at_opening_of_string": {
            "name": "test_wildcard_at_opening_of_string",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrepare.test_group_terms": {
            "name": "test_group_terms",
            "location": 506,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrepare.test_group_terms_all_and": {
            "name": "test_group_terms_all_and",
            "location": 549,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/services/index/tests/test_reindex.py": {
        "raise_index_exists": {
            "name": "raise_index_exists",
            "location": 8,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "TestReindexing.test_reindex_from_scratch": {
            "name": "test_reindex_from_scratch",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": []
            }
        },
        "TestReindexing.test_reindex_already_exists": {
            "name": "test_reindex_already_exists",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": []
            }
        },
        "TestTaskStatus.test_get_task_status": {
            "name": "test_get_task_status",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "mock_Elasticsearch": []
            }
        }
    },
    "arxiv-search-master/search/services/index/tests/test_results.py": {
        "TestResultsHighlightAbstract.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResultsHighlightAbstract.test_preview": {
            "name": "test_preview",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResultsHighlightAbstract.test_preview_with_close_highlights": {
            "name": "test_preview_with_close_highlights",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResultsEndSafely.setUp": {
            "name": "setUp",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResultsEndSafely.test_end_safely_from_start": {
            "name": "test_end_safely_from_start",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResultsEndSafely.test_end_safely_before_texism": {
            "name": "test_end_safely_before_texism",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResultsEndSafely.test_end_safely_before_html": {
            "name": "test_end_safely_before_html",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestResultsEndSafely.test_end_safely_after_html_with_tolerance": {
            "name": "test_end_safely_after_html_with_tolerance",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Collapse.collapse_hl_tags": {
            "name": "collapse_hl_tags",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Texism.test_highlight_whole_texism": {
            "name": "test_highlight_whole_texism",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Texism.test_escape_nontex": {
            "name": "test_escape_nontex",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Highlight.test_hi1": {
            "name": "test_hi1",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/services/index/tests/test_util.py": {
        "TestMatchDatePartial.test_date_partial_only": {
            "name": "test_date_partial_only",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMatchDatePartial.test_in_word": {
            "name": "test_in_word",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMatchDatePartial.test_near_words": {
            "name": "test_near_words",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMatchDatePartial.test_out_of_range": {
            "name": "test_out_of_range",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMatchDatePartial.test_last_millenium": {
            "name": "test_last_millenium",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestOldPapernumDetection.test_is_old_papernum": {
            "name": "test_is_old_papernum",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/services/index/tests/__init__.py": {},
    "arxiv-search-master/search/services/tests/test_fulltext.py": {
        "TestRetrieveExistantContent.test_calls_fulltext_endpoint": {
            "name": "test_calls_fulltext_endpoint",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveNonexistantRecord.test_raise_ioerror_on_404": {
            "name": "test_raise_ioerror_on_404",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveNonexistantRecord.test_raise_ioerror_on_503": {
            "name": "test_raise_ioerror_on_503",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveNonexistantRecord.test_raise_ioerror_on_sslerror": {
            "name": "test_raise_ioerror_on_sslerror",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveMalformedRecord.test_response_is_not_json": {
            "name": "test_response_is_not_json",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveMalformedRecord.test_response_is_not_json.raise_decodeerror": {
            "name": "raise_decodeerror",
            "location": 87,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/services/tests/test_metadata.py": {
        "TestRetrieveExistantMetadata.test_calls_metadata_endpoint": {
            "name": "test_calls_metadata_endpoint",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveExistantMetadata.test_calls_metadata_endpoint_roundrobin": {
            "name": "test_calls_metadata_endpoint_roundrobin",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveNonexistantRecord.test_raise_ioerror_on_404": {
            "name": "test_raise_ioerror_on_404",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveNonexistantRecord.test_raise_ioerror_on_503": {
            "name": "test_raise_ioerror_on_503",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveNonexistantRecord.test_raise_ioerror_on_sslerror": {
            "name": "test_raise_ioerror_on_sslerror",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveMalformedRecord.test_response_is_not_json": {
            "name": "test_response_is_not_json",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get": []
            }
        },
        "TestRetrieveMalformedRecord.test_response_is_not_json.raise_decodeerror": {
            "name": "raise_decodeerror",
            "location": 138,
            "return": [],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/services/tests/test_tex.py": {
        "TestTeX.test_inline": {
            "name": "test_inline",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTeX.test_display": {
            "name": "test_display",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTeX.test_inline_pren": {
            "name": "test_inline_pren",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTeX.test_display2": {
            "name": "test_display2",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTeX.test_split": {
            "name": "test_split",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/services/tests/__init__.py": {},
    "arxiv-search-master/search/tests/mocks.py": {
        "document": {
            "name": "document",
            "location": 5,
            "return": [
                "Dict[(str, Union[(int, str, _datetime.datetime, Dict[(str, Union[(int, str, Dict[(str, str)])])], List[Union[(str, Dict[(str, Union[(str, Dict[(str, str)])])])]])])]"
            ],
            "arguments": {}
        }
    },
    "arxiv-search-master/search/tests/test_advanced_search.py": {
        "TestAdvancedSearch.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearch.test_archive_shortcut": {
            "name": "test_archive_shortcut",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAdvancedSearch.test_nonexistant_archive_shortcut": {
            "name": "test_nonexistant_archive_shortcut",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/tests/test_param_persistence.py": {
        "TestParameterPersistence.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParameterPersistence.test_request_includes_params": {
            "name": "test_request_includes_params",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParameterPersistence.test_request_does_not_include_params": {
            "name": "test_request_does_not_include_params",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestParameterPersistence.test_request_includes_cookie": {
            "name": "test_request_includes_cookie",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "mock_simple": []
            }
        },
        "TestParameterPersistence.test_request_includes_cookie_but_also_explicit_val": {
            "name": "test_request_includes_cookie_but_also_explicit_val",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "mock_simple": []
            }
        }
    },
    "arxiv-search-master/search/tests/__init__.py": {},
    "arxiv-search-master/search/utils/string.py": {
        "safe_str": {
            "name": "safe_str",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "s": [
                    "Union[(bytes, str)]"
                ]
            }
        }
    },
    "arxiv-search-master/search/utils/timestamp.py": {
        "utc_now": {
            "name": "utc_now",
            "location": 25,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {}
        },
        "to_utc": {
            "name": "to_utc",
            "location": 32,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "dt": [
                    "Optional[Union[(str, _datetime.datetime)]]"
                ]
            }
        },
        "DateTime.isoformat": {
            "name": "isoformat",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "sep": [
                    "str"
                ],
                "timespec": [
                    "str"
                ]
            }
        },
        "DateTime.tzinfo": {
            "name": "tzinfo",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/utils/__init__.py": {},
    "arxiv-search-master/search/utils/tests/test_string.py": {
        "TestSafeStr.test_safe_str": {
            "name": "test_safe_str",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-search-master/search/utils/tests/__init__.py": {},
    "arxiv-search-master/tests/base_app_tests.py": {},
    "arxiv-search-master/tests/test_exceptions.py": {
        "TestExceptionHandling.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHandling.test_404": {
            "name": "test_404",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHandling.test_405": {
            "name": "test_405",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestExceptionHandling.test_500": {
            "name": "test_500",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "mock_search": []
            }
        },
        "TestExceptionHandling.test_index_connection_error": {
            "name": "test_index_connection_error",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "mock_search": []
            }
        },
        "TestExceptionHandling.test_query_error": {
            "name": "test_query_error",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "mock_search": []
            }
        }
    },
    "arxiv-search-master/tests/__init__.py": {},
    "arxiv-search-master/tests/integration/__init__.py": {},
    "arxiv-search-master/tests/stubs/docmeta.py": {
        "docmeta": {
            "name": "docmeta",
            "location": 24,
            "return": [],
            "arguments": {
                "document_id": []
            }
        },
        "application": {
            "name": "application",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    }
}
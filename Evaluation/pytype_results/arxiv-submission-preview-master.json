{
    "arxiv-submission-preview-master/app.py": {},
    "arxiv-submission-preview-master/wsgi.py": {
        "application": {
            "name": "application",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "environ": [],
                "start_response": []
            }
        }
    },
    "arxiv-submission-preview-master/preview/config.py": {},
    "arxiv-submission-preview-master/preview/controllers.py": {
        "service_status": {
            "name": "service_status",
            "location": 20,
            "return": [
                "Tuple[(Optional[Union[(Dict[(str, Any)], IO[bytes])]], http.HTTPStatus, Dict[(str, str)])]"
            ],
            "arguments": {}
        },
        "check_preview_exists": {
            "name": "check_preview_exists",
            "location": 54,
            "return": [
                "Tuple[(Optional[Union[(Dict[(str, Any)], IO[bytes])]], http.HTTPStatus, Dict[(str, str)])]"
            ],
            "arguments": {
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ]
            }
        },
        "get_preview_metadata": {
            "name": "get_preview_metadata",
            "location": 89,
            "return": [
                "Tuple[(Optional[Union[(Dict[(str, Any)], IO[bytes])]], http.HTTPStatus, Dict[(str, str)])]"
            ],
            "arguments": {
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ]
            }
        },
        "get_preview_content": {
            "name": "get_preview_content",
            "location": 128,
            "return": [
                "Tuple[(Optional[Union[(Dict[(str, Any)], IO[bytes])]], http.HTTPStatus, Dict[(str, str)])]"
            ],
            "arguments": {
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ],
                "none_match": [
                    "Optional[str]"
                ]
            }
        },
        "deposit_preview": {
            "name": "deposit_preview",
            "location": 180,
            "return": [
                "Tuple[(Optional[Union[(Dict[(str, Any)], IO[bytes])]], http.HTTPStatus, Dict[(str, str)])]"
            ],
            "arguments": {
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ],
                "stream": [
                    "IO[bytes]"
                ],
                "content_type": [
                    "Optional[str]"
                ],
                "content_checksum": [
                    "Optional[str]"
                ],
                "overwrite": [
                    "bool"
                ]
            }
        }
    },
    "arxiv-submission-preview-master/preview/domain.py": {},
    "arxiv-submission-preview-master/preview/encode.py": {
        "PreviewEncoder.default": {
            "name": "default",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "arxiv-submission-preview-master/preview/factory.py": {
        "create_app": {
            "name": "create_app",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "register_error_handlers": {
            "name": "register_error_handlers",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "jsonify_exception": {
            "name": "jsonify_exception",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "error": []
            }
        }
    },
    "arxiv-submission-preview-master/preview/routes.py": {
        "service_status": {
            "name": "service_status",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "check_preview_exists": {
            "name": "check_preview_exists",
            "location": 27,
            "return": [],
            "arguments": {
                "source_id": [],
                "checksum": []
            }
        },
        "get_preview_metadata": {
            "name": "get_preview_metadata",
            "location": 35,
            "return": [],
            "arguments": {
                "source_id": [],
                "checksum": []
            }
        },
        "get_preview_content": {
            "name": "get_preview_content",
            "location": 43,
            "return": [],
            "arguments": {
                "source_id": [],
                "checksum": []
            }
        },
        "deposit_preview": {
            "name": "deposit_preview",
            "location": 58,
            "return": [],
            "arguments": {
                "source_id": [],
                "checksum": []
            }
        },
        "_update_headers": {
            "name": "_update_headers",
            "location": 75,
            "return": [
                "Any"
            ],
            "arguments": {
                "response": [],
                "headers": [
                    "Dict[(str, Any)]"
                ]
            }
        }
    },
    "arxiv-submission-preview-master/preview/__init__.py": {},
    "arxiv-submission-preview-master/preview/services/store.py": {
        "_hex_to_b64": {
            "name": "_hex_to_b64",
            "location": 402,
            "return": [
                "str"
            ],
            "arguments": {
                "etag": [
                    "str"
                ]
            }
        },
        "StreamMonitor.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": [
                    "IO[bytes]"
                ]
            }
        },
        "StreamMonitor.seekable": {
            "name": "seekable",
            "location": 80,
            "return": [
                "Literal[False]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamMonitor.readable": {
            "name": "readable",
            "location": 84,
            "return": [
                "Literal[True]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StreamMonitor.read": {
            "name": "read",
            "location": 88,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "Optional[int]"
                ]
            }
        },
        "StreamMonitor.checksum": {
            "name": "checksum",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PreviewStore.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bucket": [
                    "str"
                ],
                "verify": [
                    "bool"
                ],
                "region_name": [
                    "Optional[str]"
                ],
                "endpoint_url": [
                    "Optional[str]"
                ],
                "aws_access_key_id": [
                    "Optional[str]"
                ],
                "aws_secret_access_key": [
                    "Optional[str]"
                ]
            }
        },
        "PreviewStore._new_client": {
            "name": "_new_client",
            "location": 139,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "PreviewStore._handle_client_error": {
            "name": "_handle_client_error",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": []
            }
        },
        "PreviewStore.__hash__": {
            "name": "__hash__",
            "location": 164,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PreviewStore.is_available": {
            "name": "is_available",
            "location": 170,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "retries": [
                    "int"
                ],
                "read_timeout": [
                    "int"
                ],
                "connect_timeout": [
                    "int"
                ]
            }
        },
        "PreviewStore._test_put": {
            "name": "_test_put",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "retries": [
                    "int"
                ],
                "read_timeout": [
                    "int"
                ],
                "connect_timeout": [
                    "int"
                ]
            }
        },
        "PreviewStore._wait_for_bucket": {
            "name": "_wait_for_bucket",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "retries": [
                    "int"
                ],
                "delay": [
                    "int"
                ]
            }
        },
        "PreviewStore.initialize": {
            "name": "initialize",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PreviewStore._create_bucket": {
            "name": "_create_bucket",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "retries": [
                    "int"
                ],
                "read_timeout": [
                    "int"
                ],
                "connect_timeout": [
                    "int"
                ]
            }
        },
        "PreviewStore.init_app": {
            "name": "init_app",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "app": []
            }
        },
        "PreviewStore.get_session": {
            "name": "get_session",
            "location": 250,
            "return": [
                "_TPreviewStore"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPreviewStore]"
                ]
            }
        },
        "PreviewStore.current_session": {
            "name": "current_session",
            "location": 261,
            "return": [
                "_TPreviewStore"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPreviewStore]"
                ]
            }
        },
        "PreviewStore._key": {
            "name": "_key",
            "location": 271,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ]
            }
        },
        "PreviewStore.deposit": {
            "name": "deposit",
            "location": 274,
            "return": [
                "preview.domain.Preview"
            ],
            "arguments": {
                "self": [],
                "preview": [
                    "preview.domain.Preview"
                ],
                "overwrite": [
                    "bool"
                ],
                "checksum": [
                    "Optional[str]"
                ]
            }
        },
        "PreviewStore.get_metadata": {
            "name": "get_metadata",
            "location": 339,
            "return": [
                "preview.domain.Metadata"
            ],
            "arguments": {
                "self": [],
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ]
            }
        },
        "PreviewStore.get_preview_checksum": {
            "name": "get_preview_checksum",
            "location": 371,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ]
            }
        },
        "PreviewStore.get_preview": {
            "name": "get_preview",
            "location": 382,
            "return": [
                "preview.domain.Preview"
            ],
            "arguments": {
                "self": [],
                "source_id": [
                    "str"
                ],
                "checksum": [
                    "str"
                ]
            }
        }
    },
    "arxiv-submission-preview-master/preview/services/tests.py": {
        "TestStorePreview.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_config": []
            }
        },
        "TestStorePreview.test_deposit": {
            "name": "test_deposit",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStorePreview.test_deposit_checksum_fails": {
            "name": "test_deposit_checksum_fails",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStorePreview.test_deposit_checksum_passes": {
            "name": "test_deposit_checksum_passes",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStorePreview.test_retrieve_nonexistant": {
            "name": "test_retrieve_nonexistant",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-submission-preview-master/preview/services/__init__.py": {},
    "arxiv-submission-preview-master/preview/tests/test_app.py": {
        "TestServiceStatus.test_service_available": {
            "name": "test_service_available",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestServiceStatus.test_service_unavailable": {
            "name": "test_service_unavailable",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "mock_is_available": []
            }
        },
        "TestDeposit.setUp": {
            "name": "setUp",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_deposit_without_content_type": {
            "name": "test_deposit_without_content_type",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_deposit_with_unsupported_content_type": {
            "name": "test_deposit_with_unsupported_content_type",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_deposit_ok": {
            "name": "test_deposit_ok",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_deposit_already_exists": {
            "name": "test_deposit_already_exists",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_deposit_already_exists_overwrite": {
            "name": "test_deposit_already_exists_overwrite",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_retrieve_metadata": {
            "name": "test_retrieve_metadata",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_retrieve_nonexistant_metadata": {
            "name": "test_retrieve_nonexistant_metadata",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_retrieve_nonexistant_content": {
            "name": "test_retrieve_nonexistant_content",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_retrieve_content": {
            "name": "test_retrieve_content",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_retrieve_with_none_match_matches": {
            "name": "test_retrieve_with_none_match_matches",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDeposit.test_retrieve_with_none_match_no_match": {
            "name": "test_retrieve_with_none_match_no_match",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-submission-preview-master/preview/tests/test_controllers.py": {
        "TestStatusEndpoint.test_store_is_unavailable": {
            "name": "test_store_is_unavailable",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestStatusEndpoint.test_store_is_available": {
            "name": "test_store_is_available",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestDepositPreview.setUp": {
            "name": "setUp",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDepositPreview.test_no_content_type": {
            "name": "test_no_content_type",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDepositPreview.test_deposit_fails": {
            "name": "test_deposit_fails",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestDepositPreview.test_already_exists": {
            "name": "test_already_exists",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestDepositPreview.test_deposit_return_malformed": {
            "name": "test_deposit_return_malformed",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestDepositPreview.test_deposit_successful": {
            "name": "test_deposit_successful",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestRetrievePreviewMetadata.setUp": {
            "name": "setUp",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRetrievePreviewMetadata.test_does_not_exist": {
            "name": "test_does_not_exist",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestRetrievePreviewMetadata.test_exists": {
            "name": "test_exists",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestPreviewExists.setUp": {
            "name": "setUp",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPreviewExists.test_does_not_exist": {
            "name": "test_does_not_exist",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestPreviewExists.test_exists": {
            "name": "test_exists",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestRetrievePreviewContent.setUp": {
            "name": "setUp",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRetrievePreviewContent.test_does_not_exist": {
            "name": "test_does_not_exist",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestRetrievePreviewContent.test_exists": {
            "name": "test_exists",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestRetrievePreviewContent.test_if_none_match_matches": {
            "name": "test_if_none_match_matches",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestRetrievePreviewContent.test_if_none_match_does_not_match": {
            "name": "test_if_none_match_does_not_match",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "mock_current_session": []
            }
        },
        "TestDepositPreview.test_deposit_successful.mock_deposit": {
            "name": "mock_deposit",
            "location": 96,
            "return": [],
            "arguments": {
                "obj": [],
                "overwrite": []
            }
        }
    },
    "arxiv-submission-preview-master/preview/tests/test_routes.py": {
        "APITest.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestServiceStatus.test_get_status": {
            "name": "test_get_status",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestServiceStatus.test_post_status": {
            "name": "test_post_status",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestServiceStatus.test_put_status": {
            "name": "test_put_status",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestServiceStatus.test_delete_status": {
            "name": "test_delete_status",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewMetadata.test_get_preview_metadata": {
            "name": "test_get_preview_metadata",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewMetadata.test_post_preview_metadata": {
            "name": "test_post_preview_metadata",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewMetadata.test_put_preview_metadata": {
            "name": "test_put_preview_metadata",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewMetadata.test_delete_preview_metadata": {
            "name": "test_delete_preview_metadata",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewContent.test_get_preview_content": {
            "name": "test_get_preview_content",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewContent.test_post_preview_content": {
            "name": "test_post_preview_content",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewContent.test_delete_preview_metadata": {
            "name": "test_delete_preview_metadata",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewContent.test_put_preview_content": {
            "name": "test_put_preview_content",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        },
        "TestPreviewContent.test_put_preview_content_with_validation": {
            "name": "test_put_preview_content_with_validation",
            "location": 173,
            "return": [],
            "arguments": {
                "self": [],
                "mock_controller": []
            }
        }
    },
    "arxiv-submission-preview-master/preview/tests/__init__.py": {}
}
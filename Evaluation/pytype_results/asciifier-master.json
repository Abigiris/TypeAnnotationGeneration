{
    "asciifier-master/asciifier.py": {
        "reverse_dict": {
            "name": "reverse_dict",
            "location": 25,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "d": []
            }
        },
        "img_to_array": {
            "name": "img_to_array",
            "location": 37,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "f": [],
                "width": [],
                "aspect_ratio": []
            }
        },
        "convert_image": {
            "name": "convert_image",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "f": [],
                "width": [],
                "charmap": [],
                "aspect_ratio": []
            }
        },
        "array2ascii": {
            "name": "array2ascii",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "img": [],
                "charmap": []
            }
        },
        "split_image": {
            "name": "split_image",
            "location": 92,
            "return": [
                "list"
            ],
            "arguments": {
                "img": [],
                "rows": [],
                "cols": []
            }
        },
        "rgb2gs": {
            "name": "rgb2gs",
            "location": 111,
            "return": [
                "Any"
            ],
            "arguments": {
                "img": []
            }
        },
        "img_rgb2cmyk": {
            "name": "img_rgb2cmyk",
            "location": 116,
            "return": [
                "Any"
            ],
            "arguments": {
                "img": []
            }
        },
        "rgb2cmyk": {
            "name": "rgb2cmyk",
            "location": 126,
            "return": [
                "Tuple[(int, int, int, Any)]"
            ],
            "arguments": {
                "r": [],
                "g": [],
                "b": []
            }
        },
        "expand_contrast": {
            "name": "expand_contrast",
            "location": 135,
            "return": [
                "Any"
            ],
            "arguments": {
                "img": [],
                "lower": [],
                "upper": []
            }
        },
        "array2ascii.find_nearest": {
            "name": "find_nearest",
            "location": 74,
            "return": [],
            "arguments": {
                "img_gs": [],
                "vals": []
            }
        }
    },
    "asciifier-master/calibrate.py": {
        "make_calibration_sheet": {
            "name": "make_calibration_sheet",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "charset": [],
                "wrap": [],
                "guidelines": []
            }
        },
        "build_charmap_from_img": {
            "name": "build_charmap_from_img",
            "location": 24,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "cal_img": [],
                "charset": [],
                "wrap": []
            }
        },
        "make_8bit_charmap": {
            "name": "make_8bit_charmap",
            "location": 36,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "vals": [],
                "charset": []
            }
        },
        "sort_dict_by_value": {
            "name": "sort_dict_by_value",
            "location": 43,
            "return": [
                "dict"
            ],
            "arguments": {
                "d": []
            }
        },
        "calc_brightness": {
            "name": "calc_brightness",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "img": []
            }
        },
        "make_8bit_charmap.map_vals_to_charset": {
            "name": "map_vals_to_charset",
            "location": 38,
            "return": [],
            "arguments": {
                "vals": [],
                "charset": []
            }
        }
    },
    "asciifier-master/layerifier.py": {
        "combine_lines": {
            "name": "combine_lines",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "lines": []
            }
        },
        "get_lines": {
            "name": "get_lines",
            "location": 14,
            "return": [
                "Generator[(list, Any, None)]"
            ],
            "arguments": {
                "files": [],
                "num_copies": []
            }
        }
    },
    "asciifier-master/pagifier.py": {}
}
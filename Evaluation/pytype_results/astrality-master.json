{
    "astrality-master/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 9,
            "return": [],
            "arguments": {
                "parser": []
            }
        },
        "pytest_collection_modifyitems": {
            "name": "pytest_collection_modifyitems",
            "location": 15,
            "return": [],
            "arguments": {
                "config": [],
                "items": []
            }
        }
    },
    "astrality-master/setup.py": {
        "readme": {
            "name": "readme",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/actions.py": {
        "Action.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "options": [],
                "directory": [],
                "replacer": [],
                "context_store": [],
                "creation_store": []
            }
        },
        "Action.replace": {
            "name": "replace",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "Action.option": {
            "name": "option",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": [],
                "path": []
            }
        },
        "Action._absolute_path": {
            "name": "_absolute_path",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "of": []
            }
        },
        "Action.execute": {
            "name": "execute",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "Action.__repr__": {
            "name": "__repr__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImportContextAction.execute": {
            "name": "execute",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "CompileAction.__init__": {
            "name": "__init__",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompileAction.execute": {
            "name": "execute",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "CompileAction.performed_compilations": {
            "name": "performed_compilations",
            "location": 294,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompileAction.create_compilation_target": {
            "name": "create_compilation_target",
            "location": 303,
            "return": [],
            "arguments": {
                "self": [],
                "template": []
            }
        },
        "CompileAction.__contains__": {
            "name": "__contains__",
            "location": 330,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SymlinkAction.__init__": {
            "name": "__init__",
            "location": 362,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymlinkAction.execute": {
            "name": "execute",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "CopyAction.__init__": {
            "name": "__init__",
            "location": 433,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CopyAction.execute": {
            "name": "execute",
            "location": 439,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "CopyAction.__contains__": {
            "name": "__contains__",
            "location": 499,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "StowAction.__init__": {
            "name": "__init__",
            "location": 527,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StowAction.execute": {
            "name": "execute",
            "location": 593,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "StowAction.managed_files": {
            "name": "managed_files",
            "location": 613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StowAction.__contains__": {
            "name": "__contains__",
            "location": 631,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "RunAction.execute": {
            "name": "execute",
            "location": 660,
            "return": [],
            "arguments": {
                "self": [],
                "default_timeout": [],
                "dry_run": []
            }
        },
        "Trigger.__init__": {
            "name": "__init__",
            "location": 726,
            "return": [],
            "arguments": {
                "self": [],
                "block": [],
                "specified_path": [],
                "relative_path": [],
                "absolute_path": []
            }
        },
        "TriggerAction.execute": {
            "name": "execute",
            "location": 747,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "ActionBlock.__init__": {
            "name": "__init__",
            "location": 823,
            "return": [],
            "arguments": {
                "self": [],
                "action_block": [],
                "directory": [],
                "replacer": [],
                "context_store": [],
                "global_modules_config": [],
                "module_name": []
            }
        },
        "ActionBlock.action_options": {
            "name": "action_options",
            "location": 866,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": []
            }
        },
        "ActionBlock.import_context": {
            "name": "import_context",
            "location": 877,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "ActionBlock.symlink": {
            "name": "symlink",
            "location": 882,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "ActionBlock.copy": {
            "name": "copy",
            "location": 887,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "ActionBlock.compile": {
            "name": "compile",
            "location": 892,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "ActionBlock.stow": {
            "name": "stow",
            "location": 897,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "ActionBlock.run": {
            "name": "run",
            "location": 902,
            "return": [],
            "arguments": {
                "self": [],
                "default_timeout": [],
                "dry_run": []
            }
        },
        "ActionBlock.triggers": {
            "name": "triggers",
            "location": 926,
            "return": [],
            "arguments": {
                "self": [],
                "dry_run": []
            }
        },
        "ActionBlock.execute": {
            "name": "execute",
            "location": 939,
            "return": [],
            "arguments": {
                "self": [],
                "default_timeout": [],
                "dry_run": []
            }
        },
        "ActionBlock.performed_compilations": {
            "name": "performed_compilations",
            "location": 956,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SetupActionBlock.action_options": {
            "name": "action_options",
            "location": 974,
            "return": [],
            "arguments": {
                "self": [],
                "identifier": []
            }
        }
    },
    "astrality-master/astrality/astrality.py": {
        "main": {
            "name": "main",
            "location": 23,
            "return": [],
            "arguments": {
                "modules": [],
                "logging_level": [],
                "dry_run": [],
                "test": []
            }
        },
        "kill_old_astrality_processes": {
            "name": "kill_old_astrality_processes",
            "location": 153,
            "return": [],
            "arguments": {}
        },
        "main.exit_handler": {
            "name": "exit_handler",
            "location": 51,
            "return": [],
            "arguments": {
                "signal": [],
                "frame": []
            }
        }
    },
    "astrality-master/astrality/compiler.py": {
        "jinja_environment": {
            "name": "jinja_environment",
            "location": 24,
            "return": [],
            "arguments": {
                "templates_folder": [],
                "shell_command_working_directory": []
            }
        },
        "finalize_variable_expression": {
            "name": "finalize_variable_expression",
            "location": 61,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "compile_template_to_string": {
            "name": "compile_template_to_string",
            "location": 69,
            "return": [],
            "arguments": {
                "template": [],
                "context": [],
                "shell_command_working_directory": []
            }
        },
        "compile_template": {
            "name": "compile_template",
            "location": 92,
            "return": [],
            "arguments": {
                "template": [],
                "target": [],
                "context": [],
                "shell_command_working_directory": [],
                "permissions": []
            }
        }
    },
    "astrality-master/astrality/config.py": {
        "resolve_config_directory": {
            "name": "resolve_config_directory",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "infer_config_location": {
            "name": "infer_config_location",
            "location": 119,
            "return": [],
            "arguments": {
                "config_directory": []
            }
        },
        "user_configuration": {
            "name": "user_configuration",
            "location": 144,
            "return": [],
            "arguments": {
                "config_directory": []
            }
        },
        "create_config_directory": {
            "name": "create_config_directory",
            "location": 199,
            "return": [],
            "arguments": {
                "path": [],
                "empty": []
            }
        },
        "expand_path": {
            "name": "expand_path",
            "location": 223,
            "return": [],
            "arguments": {
                "path": [],
                "config_directory": []
            }
        },
        "expand_globbed_path": {
            "name": "expand_globbed_path",
            "location": 244,
            "return": [],
            "arguments": {
                "path": [],
                "config_directory": []
            }
        },
        "filter_config_file": {
            "name": "filter_config_file",
            "location": 752,
            "return": [],
            "arguments": {
                "config_file": [],
                "context": [],
                "enabled_module_name": [],
                "prepend": []
            }
        },
        "ModuleSource.__init__": {
            "name": "__init__",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "enabling_statement": [],
                "modules_directory": []
            }
        },
        "ModuleSource.modules": {
            "name": "modules",
            "location": 309,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "ModuleSource.context": {
            "name": "context",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "ModuleSource.config": {
            "name": "config",
            "location": 350,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "ModuleSource.__contains__": {
            "name": "__contains__",
            "location": 370,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "ModuleSource.represented_by": {
            "name": "represented_by",
            "location": 375,
            "return": [],
            "arguments": {
                "cls": [],
                "module_name": []
            }
        },
        "ModuleSource.type": {
            "name": "type",
            "location": 380,
            "return": [],
            "arguments": {
                "cls": [],
                "of": []
            }
        },
        "GlobalModuleSource.__init__": {
            "name": "__init__",
            "location": 397,
            "return": [],
            "arguments": {
                "self": [],
                "enabling_statement": [],
                "modules_directory": []
            }
        },
        "GlobalModuleSource.__contains__": {
            "name": "__contains__",
            "location": 411,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "GlobalModuleSource.__repr__": {
            "name": "__repr__",
            "location": 418,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GithubModuleSource.__init__": {
            "name": "__init__",
            "location": 428,
            "return": [],
            "arguments": {
                "self": [],
                "enabling_statement": [],
                "modules_directory": []
            }
        },
        "GithubModuleSource.__eq__": {
            "name": "__eq__",
            "location": 480,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "GithubModuleSource.__repr__": {
            "name": "__repr__",
            "location": 493,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryModuleSource.__init__": {
            "name": "__init__",
            "location": 508,
            "return": [],
            "arguments": {
                "self": [],
                "enabling_statement": [],
                "modules_directory": []
            }
        },
        "DirectoryModuleSource.__repr__": {
            "name": "__repr__",
            "location": 532,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryModuleSource.__eq__": {
            "name": "__eq__",
            "location": 542,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EnabledModules.__init__": {
            "name": "__init__",
            "location": 561,
            "return": [],
            "arguments": {
                "self": [],
                "enabling_statements": [],
                "config_directory": [],
                "modules_directory": []
            }
        },
        "EnabledModules.process_enabling_statements": {
            "name": "process_enabling_statements",
            "location": 599,
            "return": [],
            "arguments": {
                "self": [],
                "enabling_statements": [],
                "modules_directory": []
            }
        },
        "EnabledModules.module_directories": {
            "name": "module_directories",
            "location": 631,
            "return": [],
            "arguments": {
                "within": []
            }
        },
        "EnabledModules.compile_config_files": {
            "name": "compile_config_files",
            "location": 648,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "EnabledModules.__contains__": {
            "name": "__contains__",
            "location": 659,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "EnabledModules.__repr__": {
            "name": "__repr__",
            "location": 668,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalModulesConfig.__init__": {
            "name": "__init__",
            "location": 686,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "config_directory": []
            }
        },
        "GlobalModulesConfig.external_module_sources": {
            "name": "external_module_sources",
            "location": 734,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GlobalModulesConfig.compile_config_files": {
            "name": "compile_config_files",
            "location": 744,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        }
    },
    "astrality-master/astrality/context.py": {
        "Context.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "Context.import_context": {
            "name": "import_context",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "from_path": [],
                "from_section": [],
                "to_section": []
            }
        },
        "Context.__eq__": {
            "name": "__eq__",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Context.__setitem__": {
            "name": "__setitem__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Context.__getitem__": {
            "name": "__getitem__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Context.get": {
            "name": "get",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "defualt": []
            }
        },
        "Context.__iter__": {
            "name": "__iter__",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.__repr__": {
            "name": "__repr__",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.__str__": {
            "name": "__str__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.__len__": {
            "name": "__len__",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.__contains__": {
            "name": "__contains__",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Context.items": {
            "name": "items",
            "location": 187,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.keys": {
            "name": "keys",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.values": {
            "name": "values",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.update": {
            "name": "update",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Context.copy": {
            "name": "copy",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Context.reverse_update": {
            "name": "reverse_update",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "astrality-master/astrality/event_listener.py": {
        "event_listener_factory": {
            "name": "event_listener_factory",
            "location": 502,
            "return": [],
            "arguments": {
                "event_listener_config": []
            }
        },
        "EventListener.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "event_listener_config": []
            }
        },
        "EventListener.event": {
            "name": "event",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventListener._event": {
            "name": "_event",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventListener.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solar.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "event_listener_config": []
            }
        },
        "Solar.hardcoded_sun": {
            "name": "hardcoded_sun",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "date": []
            }
        },
        "Solar._event": {
            "name": "_event",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solar.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solar.now": {
            "name": "now",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Solar.construct_astral_location": {
            "name": "construct_astral_location",
            "location": 198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Daylight._event": {
            "name": "_event",
            "location": 232,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Daylight.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 240,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Weekday._event": {
            "name": "_event",
            "location": 276,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Weekday.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Periodic.__init__": {
            "name": "__init__",
            "location": 317,
            "return": [],
            "arguments": {
                "self": [],
                "event_listener_config": []
            }
        },
        "Periodic._event": {
            "name": "_event",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Periodic.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 340,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeOfDay.__init__": {
            "name": "__init__",
            "location": 370,
            "return": [],
            "arguments": {
                "self": [],
                "event_listener_config": []
            }
        },
        "TimeOfDay._event": {
            "name": "_event",
            "location": 396,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeOfDay.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 419,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Static._event": {
            "name": "_event",
            "location": 483,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Static.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 487,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Periodic.Events.__contains__": {
            "name": "__contains__",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "astrality-master/astrality/exceptions.py": {},
    "astrality-master/astrality/filewatcher.py": {
        "DirectoryWatcher.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "directory": [],
                "on_modified": []
            }
        },
        "DirectoryWatcher.start": {
            "name": "start",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryWatcher.stop": {
            "name": "stop",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DirectoryEventHandler.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "on_modified": []
            }
        },
        "DirectoryEventHandler.on_modified": {
            "name": "on_modified",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "astrality-master/astrality/github.py": {
        "clone_repo": {
            "name": "clone_repo",
            "location": 11,
            "return": [],
            "arguments": {
                "user": [],
                "repository": [],
                "modules_directory": [],
                "timeout": []
            }
        },
        "clone_or_pull_repo": {
            "name": "clone_or_pull_repo",
            "location": 58,
            "return": [],
            "arguments": {
                "user": [],
                "repository": [],
                "modules_directory": [],
                "timeout": []
            }
        }
    },
    "astrality-master/astrality/module.py": {
        "Module.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "module_config": [],
                "module_directory": [],
                "replacer": [],
                "context_store": [],
                "global_modules_config": [],
                "dry_run": []
            }
        },
        "Module.prepare_on_startup_block": {
            "name": "prepare_on_startup_block",
            "location": 198,
            "return": [],
            "arguments": {
                "module_name": [],
                "module_config": []
            }
        },
        "Module.get_action_block": {
            "name": "get_action_block",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "path": []
            }
        },
        "Module.execute": {
            "name": "execute",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "block": [],
                "path": [],
                "dry_run": []
            }
        },
        "Module.all_action_blocks": {
            "name": "all_action_blocks",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Module.performed_compilations": {
            "name": "performed_compilations",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Module.interpolate_string": {
            "name": "interpolate_string",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "Module.keep_running": {
            "name": "keep_running",
            "location": 397,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Module.__repr__": {
            "name": "__repr__",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Module.valid_module": {
            "name": "valid_module",
            "location": 410,
            "return": [],
            "arguments": {
                "name": [],
                "config": [],
                "requires_timeout": [],
                "requires_working_directory": []
            }
        },
        "ModuleManager.__init__": {
            "name": "__init__",
            "location": 472,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "modules": [],
                "context": [],
                "directory": [],
                "dry_run": []
            }
        },
        "ModuleManager.module_events": {
            "name": "module_events",
            "location": 574,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.finish_tasks": {
            "name": "finish_tasks",
            "location": 582,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.has_unfinished_tasks": {
            "name": "has_unfinished_tasks",
            "location": 620,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.time_until_next_event": {
            "name": "time_until_next_event",
            "location": 627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.execute": {
            "name": "execute",
            "location": 638,
            "return": [],
            "arguments": {
                "self": [],
                "action": [],
                "block": [],
                "module": []
            }
        },
        "ModuleManager.setup": {
            "name": "setup",
            "location": 680,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.startup": {
            "name": "startup",
            "location": 686,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.exit": {
            "name": "exit",
            "location": 697,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.on_modified": {
            "name": "on_modified",
            "location": 708,
            "return": [],
            "arguments": {
                "self": [],
                "modified": []
            }
        },
        "ModuleManager.file_system_modified": {
            "name": "file_system_modified",
            "location": 735,
            "return": [],
            "arguments": {
                "self": [],
                "modified": []
            }
        },
        "ModuleManager.on_application_config_modified": {
            "name": "on_application_config_modified",
            "location": 766,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.recompile_modified_template": {
            "name": "recompile_modified_template",
            "location": 818,
            "return": [],
            "arguments": {
                "self": [],
                "modified": []
            }
        },
        "ModuleManager.interpolate_string": {
            "name": "interpolate_string",
            "location": 845,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "ModuleManager.keep_running": {
            "name": "keep_running",
            "location": 861,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.__len__": {
            "name": "__len__",
            "location": 873,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleManager.__del__": {
            "name": "__del__",
            "location": 877,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Module.interpolate_string.replace_placeholders": {
            "name": "replace_placeholders",
            "location": 363,
            "return": [],
            "arguments": {
                "match": []
            }
        }
    },
    "astrality-master/astrality/persistence.py": {
        "CreatedFiles.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreatedFiles.wrapper_for": {
            "name": "wrapper_for",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "CreatedFiles.path": {
            "name": "path",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreatedFiles.insert": {
            "name": "insert",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "creation_method": [],
                "contents": [],
                "targets": []
            }
        },
        "CreatedFiles.by": {
            "name": "by",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "CreatedFiles.cleanup": {
            "name": "cleanup",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "dry_run": []
            }
        },
        "CreatedFiles.backup": {
            "name": "backup",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "path": []
            }
        },
        "CreatedFiles.mkdir": {
            "name": "mkdir",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "path": []
            }
        },
        "CreatedFiles.__contains__": {
            "name": "__contains__",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "CreatedFiles.__repr__": {
            "name": "__repr__",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModuleCreatedFiles.__init__": {
            "name": "__init__",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "creation_store": [],
                "module": []
            }
        },
        "ModuleCreatedFiles.backup": {
            "name": "backup",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ModuleCreatedFiles.mkdir": {
            "name": "mkdir",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ModuleCreatedFiles.insert_creation": {
            "name": "insert_creation",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "content": [],
                "target": [],
                "method": []
            }
        },
        "ExecutedActions.__init__": {
            "name": "__init__",
            "location": 341,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "ExecutedActions.is_new": {
            "name": "is_new",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "action_type": [],
                "action_options": []
            }
        },
        "ExecutedActions.write": {
            "name": "write",
            "location": 383,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutedActions.reset": {
            "name": "reset",
            "location": 402,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutedActions.path": {
            "name": "path",
            "location": 426,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutedActions.__repr__": {
            "name": "__repr__",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "astrality-master/astrality/requirements.py": {
        "Requirement.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "requirements": [],
                "directory": [],
                "timeout": []
            }
        },
        "Requirement.pop_missing_module_dependencies": {
            "name": "pop_missing_module_dependencies",
            "location": 87,
            "return": [],
            "arguments": {
                "modules": []
            }
        },
        "Requirement.satisfied_module_dependencies": {
            "name": "satisfied_module_dependencies",
            "location": 115,
            "return": [],
            "arguments": {
                "module": [],
                "enabled_modules": []
            }
        },
        "Requirement.__bool__": {
            "name": "__bool__",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Requirement.__repr__": {
            "name": "__repr__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "astrality-master/astrality/utils.py": {
        "run_shell": {
            "name": "run_shell",
            "location": 32,
            "return": [],
            "arguments": {
                "command": [],
                "timeout": [],
                "fallback": [],
                "working_directory": [],
                "allow_error_codes": [],
                "log_success": []
            }
        },
        "cast_to_list": {
            "name": "cast_to_list",
            "location": 100,
            "return": [],
            "arguments": {
                "content": []
            }
        },
        "resolve_targets": {
            "name": "resolve_targets",
            "location": 112,
            "return": [],
            "arguments": {
                "content": [],
                "target": [],
                "include": []
            }
        },
        "compile_yaml": {
            "name": "compile_yaml",
            "location": 163,
            "return": [],
            "arguments": {
                "path": [],
                "context": []
            }
        },
        "load_yaml": {
            "name": "load_yaml",
            "location": 187,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "dump_yaml": {
            "name": "dump_yaml",
            "location": 198,
            "return": [],
            "arguments": {
                "path": [],
                "data": []
            }
        },
        "yaml_str": {
            "name": "yaml_str",
            "location": 210,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "copy": {
            "name": "copy",
            "location": 224,
            "return": [],
            "arguments": {
                "source": [],
                "destination": [],
                "follow_symlinks": []
            }
        },
        "move": {
            "name": "move",
            "location": 243,
            "return": [],
            "arguments": {
                "source": [],
                "destination": [],
                "follow_symlinks": []
            }
        }
    },
    "astrality-master/astrality/xdg.py": {
        "XDG.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "application_name": []
            }
        },
        "XDG.data_home": {
            "name": "data_home",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "XDG.data": {
            "name": "data",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "resource": [],
                "directory": []
            }
        }
    },
    "astrality-master/astrality/__init__.py": {},
    "astrality-master/astrality/tests/conftest.py": {
        "conf_path": {
            "name": "conf_path",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "conf_file_path": {
            "name": "conf_file_path",
            "location": 23,
            "return": [],
            "arguments": {
                "conf_path": []
            }
        },
        "conf": {
            "name": "conf",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "context": {
            "name": "context",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "modules": {
            "name": "modules",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "test_config_directory": {
            "name": "test_config_directory",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "temp_directory": {
            "name": "temp_directory",
            "location": 59,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "context_directory": {
            "name": "context_directory",
            "location": 65,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "template_directory": {
            "name": "template_directory",
            "location": 71,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "module_factory": {
            "name": "module_factory",
            "location": 77,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "module_manager_factory": {
            "name": "module_manager_factory",
            "location": 113,
            "return": [],
            "arguments": {}
        },
        "create_temp_files": {
            "name": "create_temp_files",
            "location": 142,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "action_block_factory": {
            "name": "action_block_factory",
            "location": 158,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "patch_xdg_directory_standard": {
            "name": "patch_xdg_directory_standard",
            "location": 198,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "monkeypatch": [],
                "request": []
            }
        },
        "patch_astrality_config_home": {
            "name": "patch_astrality_config_home",
            "location": 225,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "module_factory._module_factory": {
            "name": "_module_factory",
            "location": 79,
            "return": [],
            "arguments": {
                "name": [],
                "on_startup": [],
                "on_modified": [],
                "on_exit": [],
                "path": [],
                "module_directory": [],
                "replacer": [],
                "context_store": []
            }
        },
        "module_manager_factory._module_manager_factory": {
            "name": "_module_manager_factory",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "create_temp_files._create_temp_files": {
            "name": "_create_temp_files",
            "location": 146,
            "return": [],
            "arguments": {
                "number": []
            }
        },
        "action_block_factory._action_block_factory": {
            "name": "_action_block_factory",
            "location": 161,
            "return": [],
            "arguments": {
                "import_context": [],
                "compile": [],
                "copy": [],
                "run": [],
                "stow": [],
                "symlink": [],
                "directory": [],
                "replacer": [],
                "context_store": []
            }
        }
    },
    "astrality-master/astrality/tests/test_astrality.py": {
        "test_termination_of_main_process": {
            "name": "test_termination_of_main_process",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_interrupt_of_main_process": {
            "name": "test_interrupt_of_main_process",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "test_enabling_specific_module_from_command_line": {
            "name": "test_enabling_specific_module_from_command_line",
            "location": 46,
            "return": [],
            "arguments": {
                "caplog": [],
                "monkeypatch": [],
                "test_config_directory": []
            }
        },
        "TestKillOldAstralityProcesses.test_killing_old_running_process": {
            "name": "test_killing_old_running_process",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestKillOldAstralityProcesses.test_not_killing_new_procces_with_same_pid": {
            "name": "test_not_killing_new_procces_with_same_pid",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestKillOldAstralityProcesses.test_trying_to_kill_process_no_longer_running": {
            "name": "test_trying_to_kill_process_no_longer_running",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestKillOldAstralityProcesses.test_killing_processes_when_no_previous_command_has_been_run": {
            "name": "test_killing_processes_when_no_previous_command_has_been_run",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "astrality-master/astrality/tests/test_compiler.py": {
        "test_templates_folder": {
            "name": "test_templates_folder",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "jinja_test_env": {
            "name": "jinja_test_env",
            "location": 24,
            "return": [],
            "arguments": {
                "test_templates_folder": []
            }
        },
        "test_rendering_environment_variables": {
            "name": "test_rendering_environment_variables",
            "location": 31,
            "return": [],
            "arguments": {
                "jinja_test_env": []
            }
        },
        "test_logging_undefined_variables": {
            "name": "test_logging_undefined_variables",
            "location": 37,
            "return": [],
            "arguments": {
                "jinja_test_env": [],
                "caplog": []
            }
        },
        "test_integer_indexed_templates": {
            "name": "test_integer_indexed_templates",
            "location": 47,
            "return": [],
            "arguments": {
                "jinja_test_env": []
            }
        },
        "test_compilation_of_jinja_template": {
            "name": "test_compilation_of_jinja_template",
            "location": 53,
            "return": [],
            "arguments": {
                "test_templates_folder": []
            }
        },
        "test_run_shell_template_filter": {
            "name": "test_run_shell_template_filter",
            "location": 62,
            "return": [],
            "arguments": {
                "test_templates_folder": []
            }
        },
        "test_working_directory_of_shell_command_filter": {
            "name": "test_working_directory_of_shell_command_filter",
            "location": 86,
            "return": [],
            "arguments": {
                "test_templates_folder": []
            }
        },
        "test_environment_variable_interpolation_by_preprocessing_conf_yaml_file": {
            "name": "test_environment_variable_interpolation_by_preprocessing_conf_yaml_file",
            "location": 107,
            "return": [],
            "arguments": {}
        },
        "test_command_substition_by_preprocessing_yaml_file": {
            "name": "test_command_substition_by_preprocessing_yaml_file",
            "location": 135,
            "return": [],
            "arguments": {}
        },
        "test_handling_of_undefined_context": {
            "name": "test_handling_of_undefined_context",
            "location": 152,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "caplog": []
            }
        },
        "test_writing_template_file_with_default_permissions": {
            "name": "test_writing_template_file_with_default_permissions",
            "location": 165,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_writing_template_file_with_specific_octal_permissions": {
            "name": "test_writing_template_file_with_specific_octal_permissions",
            "location": 182,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_writing_template_file_with_specific_modal_permissions": {
            "name": "test_writing_template_file_with_specific_modal_permissions",
            "location": 199,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_writing_template_file_with_invalid_permissions": {
            "name": "test_writing_template_file_with_invalid_permissions",
            "location": 218,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "astrality-master/astrality/tests/test_context.py": {
        "test_importing_context_from_compiled_yml_file": {
            "name": "test_importing_context_from_compiled_yml_file",
            "location": 195,
            "return": [],
            "arguments": {}
        },
        "test_instantiating_context_object_with_path": {
            "name": "test_instantiating_context_object_with_path",
            "location": 226,
            "return": [],
            "arguments": {}
        },
        "test_instantiating_with_directory_path": {
            "name": "test_instantiating_with_directory_path",
            "location": 248,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "TestContextClass.test_initialization_of_config_class_with_no_config_parser": {
            "name": "test_initialization_of_config_class_with_no_config_parser",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_invocation_of_class_with_application_config": {
            "name": "test_invocation_of_class_with_application_config",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "conf": []
            }
        },
        "TestContextClass.test_initialization_of_config_class_with_dict": {
            "name": "test_initialization_of_config_class_with_dict",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_values_for_max_key_property": {
            "name": "test_values_for_max_key_property",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_getting_item_from_empty_config": {
            "name": "test_getting_item_from_empty_config",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_accessing_existing_key": {
            "name": "test_accessing_existing_key",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_integer_index_resolution": {
            "name": "test_integer_index_resolution",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_integer_index_resolution_without_earlier_index_key": {
            "name": "test_integer_index_resolution_without_earlier_index_key",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_index_resolution_with_string_key": {
            "name": "test_index_resolution_with_string_key",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_use_of_recursive_config_objects_created_by_dicts": {
            "name": "test_use_of_recursive_config_objects_created_by_dicts",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_getter": {
            "name": "test_getter",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_items": {
            "name": "test_items",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_keys": {
            "name": "test_keys",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_values": {
            "name": "test_values",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_update": {
            "name": "test_update",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_context_class": {
            "name": "test_context_class",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_initializing_context_with_context": {
            "name": "test_initializing_context_with_context",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_updating_context_with_context": {
            "name": "test_updating_context_with_context",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestContextClass.test_reverse_updating_context": {
            "name": "test_reverse_updating_context",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "astrality-master/astrality/tests/test_filewatcher.py": {
        "watch_dir": {
            "name": "watch_dir",
            "location": 17,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_filesystem_watcher": {
            "name": "test_filesystem_watcher",
            "location": 65,
            "return": [],
            "arguments": {
                "watch_dir": []
            }
        },
        "test_logging_of_os_errors": {
            "name": "test_logging_of_os_errors",
            "location": 121,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "tmpdir": [],
                "caplog": []
            }
        },
        "test_logging_of_os_errors.raiser": {
            "name": "raiser",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "watch_dir.EventSaver.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "watch_dir.EventSaver.save_argument": {
            "name": "save_argument",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "astrality-master/astrality/tests/test_requirements.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_shell_command_requirement": {
            "name": "test_shell_command_requirement",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_that_shell_commands_are_run_in_correct_diretory": {
            "name": "test_that_shell_commands_are_run_in_correct_diretory",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_shell_command_timeout": {
            "name": "test_shell_command_timeout",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "test_environment_variable_requirement": {
            "name": "test_environment_variable_requirement",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "test_installed_requirement": {
            "name": "test_installed_requirement",
            "location": 94,
            "return": [],
            "arguments": {}
        },
        "test_requiring_a_global_module": {
            "name": "test_requiring_a_global_module",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "test_recursive_module_requirements": {
            "name": "test_recursive_module_requirements",
            "location": 137,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/test_test_utils.py": {
        "test_use_of_regex_compare": {
            "name": "test_use_of_regex_compare",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_more_complicated_regex_comparisons": {
            "name": "test_more_complicated_regex_comparisons",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/test_xdg.py": {
        "test_xdg_data_home_default_location": {
            "name": "test_xdg_data_home_default_location",
            "location": 12,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_xdg_data_home_using_environment_variable": {
            "name": "test_xdg_data_home_using_environment_variable",
            "location": 21,
            "return": [],
            "arguments": {
                "monkeypatch": [],
                "tmpdir": []
            }
        },
        "test_retrieving_data_resource": {
            "name": "test_retrieving_data_resource",
            "location": 36,
            "return": [],
            "arguments": {
                "patch_xdg_directory_standard": []
            }
        },
        "test_retrieving_data_directory_resource": {
            "name": "test_retrieving_data_directory_resource",
            "location": 49,
            "return": [],
            "arguments": {
                "patch_xdg_directory_standard": []
            }
        }
    },
    "astrality-master/astrality/tests/utils.py": {
        "RegexCompare.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "regex": []
            }
        },
        "RegexCompare.__eq__": {
            "name": "__eq__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "RegexCompare.__repr__": {
            "name": "__repr__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Retry.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "tries": [],
                "delay": [],
                "increase_delay": []
            }
        },
        "Retry.__call__": {
            "name": "__call__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "expression": []
            }
        }
    },
    "astrality-master/astrality/tests/__init__.py": {},
    "astrality-master/astrality/tests/actions/conftest.py": {
        "global_modules_config": {
            "name": "global_modules_config",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/actions/test_action_block.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 9,
            "return": [],
            "arguments": {
                "global_modules_config": []
            }
        },
        "test_executing_action_block_with_one_action": {
            "name": "test_executing_action_block_with_one_action",
            "location": 22,
            "return": [],
            "arguments": {
                "global_modules_config": [],
                "test_config_directory": [],
                "tmpdir": []
            }
        },
        "test_executing_several_action_blocks": {
            "name": "test_executing_several_action_blocks",
            "location": 48,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": [],
                "global_modules_config": []
            }
        },
        "test_retrieving_triggers_from_action_block": {
            "name": "test_retrieving_triggers_from_action_block",
            "location": 84,
            "return": [],
            "arguments": {
                "global_modules_config": []
            }
        },
        "test_retrieving_triggers_from_action_block_without_triggers": {
            "name": "test_retrieving_triggers_from_action_block_without_triggers",
            "location": 110,
            "return": [],
            "arguments": {
                "global_modules_config": []
            }
        },
        "test_retrieving_all_compiled_templates": {
            "name": "test_retrieving_all_compiled_templates",
            "location": 126,
            "return": [],
            "arguments": {
                "global_modules_config": [],
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_symlinking": {
            "name": "test_symlinking",
            "location": 166,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "create_temp_files": []
            }
        },
        "test_copying": {
            "name": "test_copying",
            "location": 185,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "create_temp_files": []
            }
        },
        "test_stowing": {
            "name": "test_stowing",
            "location": 204,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "create_temp_files": []
            }
        }
    },
    "astrality-master/astrality/tests/actions/test_compile_action.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_compilation_of_template_to_temporary_file": {
            "name": "test_compilation_of_template_to_temporary_file",
            "location": 23,
            "return": [],
            "arguments": {
                "template_directory": []
            }
        },
        "test_that_dry_run_skips_compilation": {
            "name": "test_that_dry_run_skips_compilation",
            "location": 42,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": [],
                "caplog": []
            }
        },
        "test_compilation_to_specific_absolute_file_path": {
            "name": "test_compilation_to_specific_absolute_file_path",
            "location": 78,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_compilation_to_specific_relative_file_path": {
            "name": "test_compilation_to_specific_relative_file_path",
            "location": 102,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_compilation_with_context": {
            "name": "test_compilation_with_context",
            "location": 126,
            "return": [],
            "arguments": {
                "template_directory": []
            }
        },
        "test_setting_permissions_of_target_template": {
            "name": "test_setting_permissions_of_target_template",
            "location": 156,
            "return": [],
            "arguments": {
                "template_directory": []
            }
        },
        "test_use_of_replacer": {
            "name": "test_use_of_replacer",
            "location": 174,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_that_current_directory_is_set_correctly": {
            "name": "test_that_current_directory_is_set_correctly",
            "location": 209,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_retrieving_all_compiled_templates": {
            "name": "test_retrieving_all_compiled_templates",
            "location": 229,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_contains_special_method": {
            "name": "test_contains_special_method",
            "location": 263,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_contains_with_uncompiled_template": {
            "name": "test_contains_with_uncompiled_template",
            "location": 283,
            "return": [],
            "arguments": {
                "template_directory": [],
                "tmpdir": []
            }
        },
        "test_compiling_entire_directory": {
            "name": "test_compiling_entire_directory",
            "location": 304,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": []
            }
        },
        "test_filtering_compiled_templates": {
            "name": "test_filtering_compiled_templates",
            "location": 339,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": []
            }
        },
        "test_renaming_templates": {
            "name": "test_renaming_templates",
            "location": 365,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": []
            }
        },
        "test_that_temporary_compile_targets_have_deterministic_paths": {
            "name": "test_that_temporary_compile_targets_have_deterministic_paths",
            "location": 393,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_creation_of_backup": {
            "name": "test_creation_of_backup",
            "location": 421,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_cleanup_of_created_directories": {
            "name": "test_cleanup_of_created_directories",
            "location": 452,
            "return": [],
            "arguments": {
                "create_temp_files": [],
                "tmpdir": []
            }
        },
        "test_use_of_replacer.replacer": {
            "name": "replacer",
            "location": 185,
            "return": [],
            "arguments": {
                "string": []
            }
        }
    },
    "astrality-master/astrality/tests/actions/test_copy_action.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_if_dry_run_is_respected": {
            "name": "test_if_dry_run_is_respected",
            "location": 21,
            "return": [],
            "arguments": {
                "create_temp_files": [],
                "caplog": []
            }
        },
        "test_copy_action_using_all_parameters": {
            "name": "test_copy_action_using_all_parameters",
            "location": 50,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_copying_without_renaming": {
            "name": "test_copying_without_renaming",
            "location": 95,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_copying_file_to_directory": {
            "name": "test_copying_file_to_directory",
            "location": 133,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_setting_permissions_on_target_copy": {
            "name": "test_setting_permissions_on_target_copy",
            "location": 161,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_backup_of_copy_target": {
            "name": "test_backup_of_copy_target",
            "location": 191,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_cleanup_of_created_directory": {
            "name": "test_cleanup_of_created_directory",
            "location": 222,
            "return": [],
            "arguments": {
                "create_temp_files": [],
                "tmpdir": []
            }
        }
    },
    "astrality-master/astrality/tests/actions/test_import_context_action.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_importing_entire_file": {
            "name": "test_importing_entire_file",
            "location": 22,
            "return": [],
            "arguments": {
                "context_directory": []
            }
        },
        "test_importing_specific_section": {
            "name": "test_importing_specific_section",
            "location": 54,
            "return": [],
            "arguments": {
                "context_directory": []
            }
        },
        "test_replacer_function_being_used": {
            "name": "test_replacer_function_being_used",
            "location": 80,
            "return": [],
            "arguments": {
                "context_directory": []
            }
        },
        "test_that_replacer_is_run_every_time": {
            "name": "test_that_replacer_is_run_every_time",
            "location": 120,
            "return": [],
            "arguments": {
                "context_directory": []
            }
        },
        "test_replacer_function_being_used.replacer": {
            "name": "replacer",
            "location": 93,
            "return": [],
            "arguments": {
                "option": []
            }
        },
        "test_that_replacer_is_run_every_time.Replacer.__init__": {
            "name": "__init__",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_that_replacer_is_run_every_time.Replacer.__call__": {
            "name": "__call__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "option": []
            }
        }
    },
    "astrality-master/astrality/tests/actions/test_run_action.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_directory_of_executed_shell_command": {
            "name": "test_directory_of_executed_shell_command",
            "location": 23,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_that_dry_run_is_respected": {
            "name": "test_that_dry_run_is_respected",
            "location": 37,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "caplog": []
            }
        },
        "test_use_of_replacer": {
            "name": "test_use_of_replacer",
            "location": 62,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_run_timeout_specified_in_action_block": {
            "name": "test_run_timeout_specified_in_action_block",
            "location": 77,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_run_timeout_specified_in_execute": {
            "name": "test_run_timeout_specified_in_execute",
            "location": 105,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "caplog": []
            }
        },
        "test_running_shell_command_with_non_zero_exit_code": {
            "name": "test_running_shell_command_with_non_zero_exit_code",
            "location": 138,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_running_shell_command_with_environment_variable": {
            "name": "test_running_shell_command_with_environment_variable",
            "location": 153,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_that_environment_variables_are_expanded": {
            "name": "test_that_environment_variables_are_expanded",
            "location": 179,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/actions/test_stow_action.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_filtering_stowed_templates": {
            "name": "test_filtering_stowed_templates",
            "location": 21,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": []
            }
        },
        "test_renaming_templates": {
            "name": "test_renaming_templates",
            "location": 52,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": []
            }
        },
        "test_symlinking_non_templates": {
            "name": "test_symlinking_non_templates",
            "location": 81,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": []
            }
        },
        "test_copying_non_template_files": {
            "name": "test_copying_non_template_files",
            "location": 116,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": []
            }
        }
    },
    "astrality-master/astrality/tests/actions/test_symlink_action.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_symlink_dry_run": {
            "name": "test_symlink_dry_run",
            "location": 21,
            "return": [],
            "arguments": {
                "create_temp_files": [],
                "caplog": []
            }
        },
        "test_symlink_action_using_all_parameters": {
            "name": "test_symlink_action_using_all_parameters",
            "location": 47,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_symlinking_without_renaming": {
            "name": "test_symlinking_without_renaming",
            "location": 90,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_symlinking_file_to_directory": {
            "name": "test_symlinking_file_to_directory",
            "location": 132,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_running_symlink_action_twice": {
            "name": "test_running_symlink_action_twice",
            "location": 164,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_backup_of_symlink_target": {
            "name": "test_backup_of_symlink_target",
            "location": 200,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_cleanup_of_created_directory": {
            "name": "test_cleanup_of_created_directory",
            "location": 231,
            "return": [],
            "arguments": {
                "create_temp_files": [],
                "tmpdir": []
            }
        }
    },
    "astrality-master/astrality/tests/actions/test_trigger_action.py": {
        "test_null_object_pattern": {
            "name": "test_null_object_pattern",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_triggering_non_on_modified_block": {
            "name": "test_triggering_non_on_modified_block",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_triggering_on_modified_block": {
            "name": "test_triggering_on_modified_block",
            "location": 42,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/cli/test_cleanup.py": {
        "test_that_cleanup_cli_works": {
            "name": "test_that_cleanup_cli_works",
            "location": 12,
            "return": [],
            "arguments": {
                "method": [],
                "create_temp_files": [],
                "patch_xdg_directory_standard": []
            }
        }
    },
    "astrality-master/astrality/tests/config/test_config.py": {
        "dummy_config": {
            "name": "dummy_config",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "TestAllConfigFeaturesFromDummyConfig.test_normal_variable": {
            "name": "test_normal_variable",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "dummy_config": []
            }
        },
        "TestAllConfigFeaturesFromDummyConfig.test_empty_string_variable": {
            "name": "test_empty_string_variable",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "dummy_config": []
            }
        },
        "TestAllConfigFeaturesFromDummyConfig.test_non_existing_variable": {
            "name": "test_non_existing_variable",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "dummy_config": []
            }
        },
        "TestAllConfigFeaturesFromDummyConfig.test_environment_variable_interpolation": {
            "name": "test_environment_variable_interpolation",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "dummy_config": []
            }
        },
        "TestResolveConfigDirectory.test_setting_directory_using_application_env_variable": {
            "name": "test_setting_directory_using_application_env_variable",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "monkeypatch": []
            }
        },
        "TestResolveConfigDirectory.test_setting_directory_using_xdg_directory_standard": {
            "name": "test_setting_directory_using_xdg_directory_standard",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "monkeypatch": []
            }
        },
        "TestResolveConfigDirectory.test_using_standard_config_dir_when_nothing_else_is_specified": {
            "name": "test_using_standard_config_dir_when_nothing_else_is_specified",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "monkeypatch": []
            }
        },
        "TestCreateConfigDirectory.test_creation_of_empty_config_directory": {
            "name": "test_creation_of_empty_config_directory",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCreateConfigDirectory.test_creation_of_infered_config_directory": {
            "name": "test_creation_of_infered_config_directory",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "monkeypatch": []
            }
        },
        "TestCreateConfigDirectory.test_creation_of_config_directory_with_example_content": {
            "name": "test_creation_of_config_directory_with_example_content",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInferConfigLocation.test_that_empty_config_location_still_return_paths": {
            "name": "test_that_empty_config_location_still_return_paths",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "monkeypatch": [],
                "caplog": []
            }
        },
        "TestUserConfiguration.test_missing_global_configuration_file": {
            "name": "test_missing_global_configuration_file",
            "location": 163,
            "return": [],
            "arguments": {
                "self": [],
                "monkeypatch": [],
                "tmpdir": []
            }
        }
    },
    "astrality-master/astrality/tests/config/test_expand_path.py": {
        "test_expand_path_method": {
            "name": "test_expand_path_method",
            "location": 8,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_expansion_of_environment_variables": {
            "name": "test_expansion_of_environment_variables",
            "location": 29,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_expand_globbed_path": {
            "name": "test_expand_globbed_path",
            "location": 41,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_expand_recursive_globbed_path": {
            "name": "test_expand_recursive_globbed_path",
            "location": 52,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        }
    },
    "astrality-master/astrality/tests/config/test_github.py": {
        "test_clone_github_repo": {
            "name": "test_clone_github_repo",
            "location": 12,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_cloning_non_existent_github_repository": {
            "name": "test_cloning_non_existent_github_repository",
            "location": 29,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_cloning_two_repositories": {
            "name": "test_cloning_two_repositories",
            "location": 48,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_cloning_one_existent_and_one_non_existent_repo": {
            "name": "test_cloning_one_existent_and_one_non_existent_repo",
            "location": 66,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_cloning_the_same_repo_twice": {
            "name": "test_cloning_the_same_repo_twice",
            "location": 86,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_clone_or_pull_repository_by_updating_outdated_repository": {
            "name": "test_clone_or_pull_repository_by_updating_outdated_repository",
            "location": 111,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "astrality-master/astrality/tests/config/test_modules_config.py": {
        "modules_application_config": {
            "name": "modules_application_config",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_custom_modules_folder": {
            "name": "test_custom_modules_folder",
            "location": 32,
            "return": [],
            "arguments": {
                "conf_path": []
            }
        },
        "test_enabled_modules": {
            "name": "test_enabled_modules",
            "location": 41,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_external_module": {
            "name": "test_external_module",
            "location": 68,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_retrieval_of_external_module_config": {
            "name": "test_retrieval_of_external_module_config",
            "location": 82,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "TestModuleSource.test_finding_correct_module_source_type_from_name": {
            "name": "test_finding_correct_module_source_type_from_name",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestModuleSource.test_detection_of_all_module_directories_within_a_directory": {
            "name": "test_detection_of_all_module_directories_within_a_directory",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestDirectoryModuleSource.test_which_enabling_statements_represents_directory_module_sources": {
            "name": "test_which_enabling_statements_represents_directory_module_sources",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDirectoryModuleSource.test_error_on_enabling_non_existent_module": {
            "name": "test_error_on_enabling_non_existent_module",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestDirectoryModuleSource.test_recursive_module_directory": {
            "name": "test_recursive_module_directory",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestDirectoryModuleSource.test_getting_config_dict_from_directory_module": {
            "name": "test_getting_config_dict_from_directory_module",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestDirectoryModuleSource.test_enabling_just_one_module_in_diretory": {
            "name": "test_enabling_just_one_module_in_diretory",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestDirectoryModuleSource.test_checking_if_directory_modules_contain_module_name": {
            "name": "test_checking_if_directory_modules_contain_module_name",
            "location": 234,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestGlobalModuleSource.test_valid_names_which_indicate_globally_defined_modules": {
            "name": "test_valid_names_which_indicate_globally_defined_modules",
            "location": 254,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGlobalModuleSource.test_that_enabled_modules_are_detected_correctly": {
            "name": "test_that_enabled_modules_are_detected_correctly",
            "location": 278,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGlobalModuleSource.test_that_wildcard_global_enabling_enables_all_global_modules": {
            "name": "test_that_wildcard_global_enabling_enables_all_global_modules",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGithubModuleSource.test_valid_names_which_indicate_github_modules": {
            "name": "test_valid_names_which_indicate_github_modules",
            "location": 303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGithubModuleSource.test_that_username_and_repo_is_identified": {
            "name": "test_that_username_and_repo_is_identified",
            "location": 337,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestGithubModuleSource.test_that_enabled_repos_are_found": {
            "name": "test_that_enabled_repos_are_found",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestGithubModuleSource.test_specific_github_modules_enabled": {
            "name": "test_specific_github_modules_enabled",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestGithubModuleSource.test_that_all_modules_enabled_syntaxes_behave_identically": {
            "name": "test_that_all_modules_enabled_syntaxes_behave_identically",
            "location": 383,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestGithubModuleSource.test_automatical_retrival_of_github_module": {
            "name": "test_automatical_retrival_of_github_module",
            "location": 409,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestGithubModuleSource.test_use_of_autoupdating_github_source": {
            "name": "test_use_of_autoupdating_github_source",
            "location": 444,
            "return": [],
            "arguments": {
                "self": [],
                "patch_xdg_directory_standard": []
            }
        },
        "TestEnabledModules.test_processing_of_enabled_statements": {
            "name": "test_processing_of_enabled_statements",
            "location": 496,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestEnabledModules.test_enabled_detection": {
            "name": "test_enabled_detection",
            "location": 521,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": [],
                "caplog": []
            }
        },
        "TestEnabledModules.test_enabled_detection_with_global_wildcard": {
            "name": "test_enabled_detection_with_global_wildcard",
            "location": 554,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "astrality-master/astrality/tests/event_listener/test_daylight.py": {
        "daylight_config": {
            "name": "daylight_config",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "daylight": {
            "name": "daylight",
            "location": 21,
            "return": [],
            "arguments": {
                "daylight_config": []
            }
        },
        "dawn": {
            "name": "dawn",
            "location": 30,
            "return": [],
            "arguments": {
                "daylight": []
            }
        },
        "before_dawn": {
            "name": "before_dawn",
            "location": 35,
            "return": [],
            "arguments": {
                "dawn": []
            }
        },
        "after_dawn": {
            "name": "after_dawn",
            "location": 41,
            "return": [],
            "arguments": {
                "dawn": []
            }
        },
        "test_that_night_is_correctly_identified": {
            "name": "test_that_night_is_correctly_identified",
            "location": 46,
            "return": [],
            "arguments": {
                "daylight": [],
                "before_dawn": [],
                "freezer": []
            }
        },
        "test_that_day_is_correctly_identified": {
            "name": "test_that_day_is_correctly_identified",
            "location": 52,
            "return": [],
            "arguments": {
                "daylight": [],
                "after_dawn": [],
                "freezer": []
            }
        },
        "dusk": {
            "name": "dusk",
            "location": 60,
            "return": [],
            "arguments": {
                "daylight": []
            }
        },
        "before_dusk": {
            "name": "before_dusk",
            "location": 65,
            "return": [],
            "arguments": {
                "dusk": []
            }
        },
        "after_dusk": {
            "name": "after_dusk",
            "location": 71,
            "return": [],
            "arguments": {
                "dusk": []
            }
        },
        "test_that_night_is_correctly_identified_after_dusk": {
            "name": "test_that_night_is_correctly_identified_after_dusk",
            "location": 76,
            "return": [],
            "arguments": {
                "daylight": [],
                "after_dusk": [],
                "freezer": []
            }
        },
        "test_that_day_is_correctly_identified_before_dusk": {
            "name": "test_that_day_is_correctly_identified_before_dusk",
            "location": 86,
            "return": [],
            "arguments": {
                "daylight": [],
                "before_dusk": [],
                "freezer": []
            }
        },
        "test_time_left_before_new_event": {
            "name": "test_time_left_before_new_event",
            "location": 96,
            "return": [],
            "arguments": {
                "daylight": [],
                "before_dusk": [],
                "freezer": []
            }
        },
        "test_time_right_before_midnight": {
            "name": "test_time_right_before_midnight",
            "location": 101,
            "return": [],
            "arguments": {
                "daylight": [],
                "freezer": []
            }
        },
        "test_time_until_night_when_other_periods_are_inbetween": {
            "name": "test_time_until_night_when_other_periods_are_inbetween",
            "location": 123,
            "return": [],
            "arguments": {
                "daylight": [],
                "before_dusk": [],
                "freezer": []
            }
        }
    },
    "astrality-master/astrality/tests/event_listener/test_event_listener.py": {
        "solar_config": {
            "name": "solar_config",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "weekday_config": {
            "name": "weekday_config",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "periodic_config": {
            "name": "periodic_config",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "static_config": {
            "name": "static_config",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "solar_event_listener": {
            "name": "solar_event_listener",
            "location": 62,
            "return": [],
            "arguments": {
                "solar_config": []
            }
        },
        "weekday_event_listener": {
            "name": "weekday_event_listener",
            "location": 67,
            "return": [],
            "arguments": {
                "weekday_config": []
            }
        },
        "periodic_event_listener": {
            "name": "periodic_event_listener",
            "location": 72,
            "return": [],
            "arguments": {
                "periodic_config": []
            }
        },
        "static_event_listener": {
            "name": "static_event_listener",
            "location": 77,
            "return": [],
            "arguments": {
                "static_config": []
            }
        },
        "TestEventListenerFactory.test_event_listener_factory_with_solar_confi": {
            "name": "test_event_listener_factory_with_solar_confi",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "solar_config": []
            }
        },
        "TestEventListenerFactory.test_event_listener_factory_with_weekday_confi": {
            "name": "test_event_listener_factory_with_weekday_confi",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "weekday_config": []
            }
        },
        "TestEventListenerFactory.test_event_listener_factory_with_periodic_confi": {
            "name": "test_event_listener_factory_with_periodic_confi",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "periodic_config": []
            }
        },
        "TestEventListenerFactory.test_event_listener_factory_with_static_confi": {
            "name": "test_event_listener_factory_with_static_confi",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "static_config": []
            }
        },
        "TestEventListenerDefaultConfiguration.test_all_options_specified_of_solar_event_listener": {
            "name": "test_all_options_specified_of_solar_event_listener",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "solar_config": [],
                "solar_event_listener": []
            }
        },
        "TestEventListenerDefaultConfiguration.test_replacement_of_missing_event_listener_config_option": {
            "name": "test_replacement_of_missing_event_listener_config_option",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "solar_config": []
            }
        }
    },
    "astrality-master/astrality/tests/event_listener/test_periodic.py": {
        "periodic": {
            "name": "periodic",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_periodic_events_are_correctly_identified": {
            "name": "test_periodic_events_are_correctly_identified",
            "location": 22,
            "return": [],
            "arguments": {
                "event": [],
                "is_event": [],
                "periodic": []
            }
        },
        "test_periodic_beginning_event": {
            "name": "test_periodic_beginning_event",
            "location": 27,
            "return": [],
            "arguments": {
                "freezer": []
            }
        },
        "test_periodic_standard_timedelta": {
            "name": "test_periodic_standard_timedelta",
            "location": 33,
            "return": [],
            "arguments": {
                "freezer": []
            }
        },
        "test_using_custom_periodic_event_listener": {
            "name": "test_using_custom_periodic_event_listener",
            "location": 39,
            "return": [],
            "arguments": {
                "freezer": []
            }
        },
        "test_weekday_time_until_next_event_of_periodic_event_listener": {
            "name": "test_weekday_time_until_next_event_of_periodic_event_listener",
            "location": 57,
            "return": [],
            "arguments": {
                "freezer": []
            }
        },
        "test_enumeration_of_periodic_event_listener_events": {
            "name": "test_enumeration_of_periodic_event_listener_events",
            "location": 72,
            "return": [],
            "arguments": {
                "freezer": []
            }
        }
    },
    "astrality-master/astrality/tests/event_listener/test_solar.py": {
        "solar_config": {
            "name": "solar_config",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "solar": {
            "name": "solar",
            "location": 22,
            "return": [],
            "arguments": {
                "solar_config": []
            }
        },
        "dawn": {
            "name": "dawn",
            "location": 31,
            "return": [],
            "arguments": {
                "solar": []
            }
        },
        "before_dawn": {
            "name": "before_dawn",
            "location": 36,
            "return": [],
            "arguments": {
                "dawn": []
            }
        },
        "after_dawn": {
            "name": "after_dawn",
            "location": 42,
            "return": [],
            "arguments": {
                "dawn": []
            }
        },
        "test_that_night_is_correctly_identified": {
            "name": "test_that_night_is_correctly_identified",
            "location": 47,
            "return": [],
            "arguments": {
                "solar": [],
                "before_dawn": [],
                "freezer": []
            }
        },
        "test_that_sunrise_is_correctly_identified": {
            "name": "test_that_sunrise_is_correctly_identified",
            "location": 53,
            "return": [],
            "arguments": {
                "solar": [],
                "after_dawn": [],
                "freezer": []
            }
        },
        "dusk": {
            "name": "dusk",
            "location": 61,
            "return": [],
            "arguments": {
                "solar": []
            }
        },
        "before_dusk": {
            "name": "before_dusk",
            "location": 66,
            "return": [],
            "arguments": {
                "dusk": []
            }
        },
        "after_dusk": {
            "name": "after_dusk",
            "location": 72,
            "return": [],
            "arguments": {
                "dusk": []
            }
        },
        "test_that_night_is_correctly_identified_after_dusk": {
            "name": "test_that_night_is_correctly_identified_after_dusk",
            "location": 77,
            "return": [],
            "arguments": {
                "solar": [],
                "after_dusk": [],
                "freezer": []
            }
        },
        "test_that_sunset_is_correctly_identified_before_dusk": {
            "name": "test_that_sunset_is_correctly_identified_before_dusk",
            "location": 87,
            "return": [],
            "arguments": {
                "solar": [],
                "before_dusk": [],
                "freezer": []
            }
        },
        "test_location": {
            "name": "test_location",
            "location": 97,
            "return": [],
            "arguments": {
                "solar": []
            }
        },
        "test_time_left_before_new_event": {
            "name": "test_time_left_before_new_event",
            "location": 104,
            "return": [],
            "arguments": {
                "solar": [],
                "before_dusk": [],
                "freezer": []
            }
        },
        "test_time_right_before_midnight": {
            "name": "test_time_right_before_midnight",
            "location": 109,
            "return": [],
            "arguments": {
                "solar": [],
                "freezer": []
            }
        },
        "test_config_event_listener_method": {
            "name": "test_config_event_listener_method",
            "location": 130,
            "return": [],
            "arguments": {}
        },
        "test_locations_where_some_events_never_occur": {
            "name": "test_locations_where_some_events_never_occur",
            "location": 147,
            "return": [],
            "arguments": {
                "freezer": [],
                "hour": [],
                "sun": []
            }
        }
    },
    "astrality-master/astrality/tests/event_listener/test_static.py": {
        "test_static_events": {
            "name": "test_static_events",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_static_event_listener_until_next_event": {
            "name": "test_static_event_listener_until_next_event",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/event_listener/test_time_of_day.py": {
        "default_time_of_day_event_listener": {
            "name": "default_time_of_day_event_listener",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_processing_of_time_of_day_config": {
            "name": "test_processing_of_time_of_day_config",
            "location": 16,
            "return": [],
            "arguments": {
                "default_time_of_day_event_listener": []
            }
        },
        "test_current_event_of_time_of_day_event_listener": {
            "name": "test_current_event_of_time_of_day_event_listener",
            "location": 32,
            "return": [],
            "arguments": {
                "default_time_of_day_event_listener": [],
                "freezer": []
            }
        },
        "test_time_until_next_event_for_time_of_day_event_listener": {
            "name": "test_time_until_next_event_for_time_of_day_event_listener",
            "location": 50,
            "return": [],
            "arguments": {
                "default_time_of_day_event_listener": [],
                "freezer": []
            }
        }
    },
    "astrality-master/astrality/tests/event_listener/test_weekday.py": {
        "weekday": {
            "name": "weekday",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "noon_friday": {
            "name": "noon_friday",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_weekday_events": {
            "name": "test_weekday_events",
            "location": 20,
            "return": [],
            "arguments": {
                "weekday": []
            }
        },
        "test_weekday_event": {
            "name": "test_weekday_event",
            "location": 32,
            "return": [],
            "arguments": {
                "weekday": [],
                "noon_friday": [],
                "freezer": []
            }
        },
        "test_weekday_time_until_next_event": {
            "name": "test_weekday_time_until_next_event",
            "location": 39,
            "return": [],
            "arguments": {
                "weekday": [],
                "noon_friday": [],
                "freezer": []
            }
        },
        "test_using_force_event_config_option": {
            "name": "test_using_force_event_config_option",
            "location": 46,
            "return": [],
            "arguments": {
                "noon_friday": [],
                "freezer": [],
                "caplog": []
            }
        },
        "test_using_force_event_config_option_with_wrong_event_type": {
            "name": "test_using_force_event_config_option_with_wrong_event_type",
            "location": 64,
            "return": [],
            "arguments": {
                "noon_friday": [],
                "freezer": [],
                "caplog": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_configuration.py": {
        "test_modules_config_explicitly_enabled_modules": {
            "name": "test_modules_config_explicitly_enabled_modules",
            "location": 7,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_modules_config_implicitly_enabled_modules": {
            "name": "test_modules_config_implicitly_enabled_modules",
            "location": 29,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_modules_config_several_implicitly_enabled_modules": {
            "name": "test_modules_config_several_implicitly_enabled_modules",
            "location": 52,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_modules_config_where_all_modules_are_enabled": {
            "name": "test_modules_config_where_all_modules_are_enabled",
            "location": 73,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_enabling_of_modules_defined_different_places": {
            "name": "test_enabling_of_modules_defined_different_places",
            "location": 95,
            "return": [],
            "arguments": {}
        },
        "test_enabling_of_all_modules": {
            "name": "test_enabling_of_all_modules",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "test_using_three_different_module_sources": {
            "name": "test_using_three_different_module_sources",
            "location": 145,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_context_import.py": {
        "test_importing_all_context_sections_from_file": {
            "name": "test_importing_all_context_sections_from_file",
            "location": 5,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "action_block_factory": [],
                "module_factory": [],
                "module_manager_factory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_copying.py": {
        "test_copying_in_on_modified_block": {
            "name": "test_copying_in_on_modified_block",
            "location": 6,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "create_temp_files": [],
                "module_factory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_exit.py": {
        "test_target": {
            "name": "test_target",
            "location": 10,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_that_all_exit_actions_are_correctly_performed": {
            "name": "test_that_all_exit_actions_are_correctly_performed",
            "location": 20,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "test_target": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_external_modules.py": {
        "test_that_external_modules_are_brought_in": {
            "name": "test_that_external_modules_are_brought_in",
            "location": 15,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "temp_test_files": {
            "name": "temp_test_files",
            "location": 43,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_correct_relative_paths_used_in_external_module": {
            "name": "test_correct_relative_paths_used_in_external_module",
            "location": 64,
            "return": [],
            "arguments": {
                "temp_test_files": [],
                "test_config_directory": []
            }
        },
        "test_that_external_module_contexts_are_imported_correctly": {
            "name": "test_that_external_module_contexts_are_imported_correctly",
            "location": 109,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_keep_running.py": {
        "test_module_that_does_not_need_to_keep_running": {
            "name": "test_module_that_does_not_need_to_keep_running",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_module_that_needs_to_keep_running_due_to_on_modified": {
            "name": "test_module_that_needs_to_keep_running_due_to_on_modified",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_module_that_needs_to_keep_running_due_to_on_event": {
            "name": "test_module_that_needs_to_keep_running_due_to_on_event",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_module_without_event_listener_does_not_need_to_keep_running": {
            "name": "test_module_without_event_listener_does_not_need_to_keep_running",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "test_that_reprocess_modified_files_causes_keep_running": {
            "name": "test_that_reprocess_modified_files_causes_keep_running",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "test_that_no_reprocess_modified_files_does_not_cause_keep_running": {
            "name": "test_that_no_reprocess_modified_files_does_not_cause_keep_running",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "test_that_module_manager_asks_its_modules_if_it_should_keep_running": {
            "name": "test_that_module_manager_asks_its_modules_if_it_should_keep_running",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "test_that_running_processes_causes_keep_running": {
            "name": "test_that_running_processes_causes_keep_running",
            "location": 107,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/module/test_module.py": {
        "valid_module_section": {
            "name": "valid_module_section",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "simple_application_config": {
            "name": "simple_application_config",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "module": {
            "name": "module",
            "location": 49,
            "return": [],
            "arguments": {
                "valid_module_section": [],
                "test_config_directory": []
            }
        },
        "single_module_manager": {
            "name": "single_module_manager",
            "location": 64,
            "return": [],
            "arguments": {
                "simple_application_config": [],
                "valid_module_section": []
            }
        },
        "test_running_finished_tasks_command": {
            "name": "test_running_finished_tasks_command",
            "location": 297,
            "return": [],
            "arguments": {
                "simple_application_config": [],
                "valid_module_section": [],
                "freezer": [],
                "caplog": []
            }
        },
        "test_has_unfinished_tasks": {
            "name": "test_has_unfinished_tasks",
            "location": 374,
            "return": [],
            "arguments": {
                "simple_application_config": [],
                "valid_module_section": [],
                "freezer": []
            }
        },
        "config_with_modules": {
            "name": "config_with_modules",
            "location": 415,
            "return": [],
            "arguments": {}
        },
        "module_manager": {
            "name": "module_manager",
            "location": 465,
            "return": [],
            "arguments": {
                "config_with_modules": []
            }
        },
        "test_import_sections_on_event": {
            "name": "test_import_sections_on_event",
            "location": 470,
            "return": [],
            "arguments": {
                "config_with_modules": [],
                "freezer": []
            }
        },
        "test_import_sections_on_startup": {
            "name": "test_import_sections_on_startup",
            "location": 513,
            "return": [],
            "arguments": {
                "config_with_modules": [],
                "freezer": []
            }
        },
        "test_time_until_next_event_of_several_modules": {
            "name": "test_time_until_next_event_of_several_modules",
            "location": 592,
            "return": [],
            "arguments": {
                "config_with_modules": [],
                "module_manager": [],
                "freezer": []
            }
        },
        "test_detection_of_new_event_involving_several_modules": {
            "name": "test_detection_of_new_event_involving_several_modules",
            "location": 613,
            "return": [],
            "arguments": {
                "config_with_modules": [],
                "freezer": []
            }
        },
        "test_that_shell_filter_is_run_from_config_directory": {
            "name": "test_that_shell_filter_is_run_from_config_directory",
            "location": 657,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "two_test_file_paths": {
            "name": "two_test_file_paths",
            "location": 686,
            "return": [],
            "arguments": {}
        },
        "test_that_only_startup_event_block_is_run_on_startup": {
            "name": "test_that_only_startup_event_block_is_run_on_startup",
            "location": 699,
            "return": [],
            "arguments": {
                "two_test_file_paths": [],
                "test_config_directory": [],
                "freezer": []
            }
        },
        "test_trigger_event_module_action": {
            "name": "test_trigger_event_module_action",
            "location": 741,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_not_using_list_when_specifiying_trigger_action": {
            "name": "test_not_using_list_when_specifiying_trigger_action",
            "location": 824,
            "return": [],
            "arguments": {
                "conf_path": []
            }
        },
        "test_defining_on_startup_block_at_root_indentation": {
            "name": "test_defining_on_startup_block_at_root_indentation",
            "location": 851,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "TestModuleClass.test_valid_class_section_method_with_valid_section": {
            "name": "test_valid_class_section_method_with_valid_section",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "valid_module_section": []
            }
        },
        "TestModuleClass.test_valid_class_section_method_with_disabled_module_section": {
            "name": "test_valid_class_section_method_with_disabled_module_section",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestModuleClass.test_module_event_listener_class": {
            "name": "test_module_event_listener_class",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "TestModuleClass.test_using_default_static_event_listener_when_no_event_listener_given": {
            "name": "test_using_default_static_event_listener_when_no_event_listener_given",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "test_config_directory": []
            }
        },
        "TestModuleClass.test_running_module_manager_commands_with_special_interpolations": {
            "name": "test_running_module_manager_commands_with_special_interpolations",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "single_module_manager": [],
                "caplog": []
            }
        },
        "TestModuleClass.test_running_module_startup_command": {
            "name": "test_running_module_startup_command",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "single_module_manager": [],
                "module": [],
                "valid_module_section": [],
                "caplog": []
            }
        },
        "TestModuleClass.test_running_module_on_event_command": {
            "name": "test_running_module_on_event_command",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "single_module_manager": [],
                "module": [],
                "caplog": []
            }
        },
        "TestModuleClass.test_running_module_exit_command": {
            "name": "test_running_module_exit_command",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "single_module_manager": [],
                "caplog": []
            }
        },
        "TestModuleClass.test_missing_template_file": {
            "name": "test_missing_template_file",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "caplog": []
            }
        },
        "TestModuleClass.test_compilation_of_template": {
            "name": "test_compilation_of_template",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "valid_module_section": [],
                "simple_application_config": [],
                "module": [],
                "conf": [],
                "caplog": []
            }
        },
        "TestModuleManager.test_invocation_of_module_manager_with_config": {
            "name": "test_invocation_of_module_manager_with_config",
            "location": 568,
            "return": [],
            "arguments": {
                "self": [],
                "conf": []
            }
        },
        "TestModuleManager.test_using_finish_tasks_on_example_configuration": {
            "name": "test_using_finish_tasks_on_example_configuration",
            "location": 572,
            "return": [],
            "arguments": {
                "self": [],
                "conf": [],
                "modules": [],
                "context": []
            }
        },
        "TestModuleManager.test_number_of_modules_instanziated_by_module_manager": {
            "name": "test_number_of_modules_instanziated_by_module_manager",
            "location": 585,
            "return": [],
            "arguments": {
                "self": [],
                "module_manager": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_module_filewatching.py": {
        "modules_config": {
            "name": "modules_config",
            "location": 18,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "temp_directory": []
            }
        },
        "test_modified_commands_of_module": {
            "name": "test_modified_commands_of_module",
            "location": 68,
            "return": [],
            "arguments": {
                "modules_config": []
            }
        },
        "test_direct_invocation_of_modifed_method_of_module_manager": {
            "name": "test_direct_invocation_of_modifed_method_of_module_manager",
            "location": 82,
            "return": [],
            "arguments": {
                "modules_config": []
            }
        },
        "test_on_modified_event_in_module": {
            "name": "test_on_modified_event_in_module",
            "location": 114,
            "return": [],
            "arguments": {
                "modules_config": []
            }
        },
        "test_template_targets": {
            "name": "test_template_targets",
            "location": 157,
            "return": [],
            "arguments": {}
        },
        "test_hot_reloading": {
            "name": "test_hot_reloading",
            "location": 171,
            "return": [],
            "arguments": {
                "test_template_targets": [],
                "test_config_directory": []
            }
        },
        "three_watchable_files": {
            "name": "three_watchable_files",
            "location": 228,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_all_three_actions_in_on_modified_block": {
            "name": "test_all_three_actions_in_on_modified_block",
            "location": 254,
            "return": [],
            "arguments": {
                "three_watchable_files": [],
                "test_config_directory": []
            }
        },
        "test_recompile_templates_when_modified": {
            "name": "test_recompile_templates_when_modified",
            "location": 316,
            "return": [],
            "arguments": {
                "three_watchable_files": []
            }
        },
        "test_recompile_templates_when_modified_overridden": {
            "name": "test_recompile_templates_when_modified_overridden",
            "location": 361,
            "return": [],
            "arguments": {
                "three_watchable_files": [],
                "test_config_directory": []
            }
        },
        "test_importing_context_on_modification": {
            "name": "test_importing_context_on_modification",
            "location": 422,
            "return": [],
            "arguments": {
                "three_watchable_files": [],
                "test_config_directory": []
            }
        },
        "test_that_stowed_templates_are_also_watched": {
            "name": "test_that_stowed_templates_are_also_watched",
            "location": 463,
            "return": [],
            "arguments": {
                "three_watchable_files": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_module_requires.py": {
        "test_module_requires_option": {
            "name": "test_module_requires_option",
            "location": 10,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_module_module_dependencies": {
            "name": "test_module_module_dependencies",
            "location": 65,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/module/test_on_event.py": {
        "three_temporary_files": {
            "name": "three_temporary_files",
            "location": 10,
            "return": [],
            "arguments": {
                "test_config_directory": []
            }
        },
        "test_that_only_changed_events_are_run": {
            "name": "test_that_only_changed_events_are_run",
            "location": 25,
            "return": [],
            "arguments": {
                "three_temporary_files": [],
                "freezer": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_permissions.py": {
        "test_compiling_template_with_specific_permissions": {
            "name": "test_compiling_template_with_specific_permissions",
            "location": 12,
            "return": [],
            "arguments": {
                "test_config_directory": [],
                "tmpdir": [],
                "specified_permission": [],
                "expected_permission": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_setup_action_block.py": {
        "test_that_setup_block_is_only_executed_once": {
            "name": "test_that_setup_block_is_only_executed_once",
            "location": 8,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_setup_block.py": {
        "test_that_module_block_is_persisted": {
            "name": "test_that_module_block_is_persisted",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "astrality-master/astrality/tests/module/test_stowing.py": {
        "test_stowing": {
            "name": "test_stowing",
            "location": 6,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "create_temp_files": [],
                "module_factory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_string_interpolations.py": {
        "test_use_of_string_interpolations_of_module": {
            "name": "test_use_of_string_interpolations_of_module",
            "location": 9,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "caplog": [],
                "template_directory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/test_symlinking.py": {
        "test_symlinking_in_on_startup_block": {
            "name": "test_symlinking_in_on_startup_block",
            "location": 4,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "module_factory": [],
                "create_temp_files": []
            }
        }
    },
    "astrality-master/astrality/tests/module/module_manager/test_module_manager_copying.py": {
        "test_copying_in_on_modified_block": {
            "name": "test_copying_in_on_modified_block",
            "location": 8,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "create_temp_files": [],
                "module_factory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/module_manager/test_module_manager_dry_run.py": {
        "test_that_dry_run_is_respected": {
            "name": "test_that_dry_run_is_respected",
            "location": 6,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        }
    },
    "astrality-master/astrality/tests/module/module_manager/test_module_manager_stowing.py": {
        "test_stowing": {
            "name": "test_stowing",
            "location": 8,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "create_temp_files": [],
                "module_factory": []
            }
        }
    },
    "astrality-master/astrality/tests/module/module_manager/test_module_manager_symlinking.py": {
        "test_symlinking_in_on_startup_block": {
            "name": "test_symlinking_in_on_startup_block",
            "location": 6,
            "return": [],
            "arguments": {
                "action_block_factory": [],
                "module_factory": [],
                "create_temp_files": []
            }
        }
    },
    "astrality-master/astrality/tests/module/module_manager/test_persisting_created_files.py": {
        "test_that_created_files_are_persisted": {
            "name": "test_that_created_files_are_persisted",
            "location": 10,
            "return": [],
            "arguments": {
                "method": [],
                "create_temp_files": []
            }
        }
    },
    "astrality-master/astrality/tests/persistence/test_created_files.py": {
        "test_that_file_is_created_with_created_files": {
            "name": "test_that_file_is_created_with_created_files",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_that_created_files_are_properly_persisted": {
            "name": "test_that_created_files_are_properly_persisted",
            "location": 22,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_that_cleanup_method_removes_files": {
            "name": "test_that_cleanup_method_removes_files",
            "location": 62,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "create_temp_files": []
            }
        },
        "test_that_dry_run_is_respected": {
            "name": "test_that_dry_run_is_respected",
            "location": 122,
            "return": [],
            "arguments": {
                "create_temp_files": [],
                "caplog": []
            }
        },
        "test_that_deleted_files_are_handled_gracefully_under_cleanup": {
            "name": "test_that_deleted_files_are_handled_gracefully_under_cleanup",
            "location": 148,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_that_inserting_non_existent_file_is_skipped": {
            "name": "test_that_inserting_non_existent_file_is_skipped",
            "location": 167,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_that_creations_are_properly_hashed": {
            "name": "test_that_creations_are_properly_hashed",
            "location": 186,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_creating_created_files_object_for_specific_module": {
            "name": "test_creating_created_files_object_for_specific_module",
            "location": 212,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_backup_method": {
            "name": "test_backup_method",
            "location": 223,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "create_temp_files": [],
                "patch_xdg_directory_standard": []
            }
        },
        "test_taking_backup_of_symlinks": {
            "name": "test_taking_backup_of_symlinks",
            "location": 296,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_creation_and_cleanup_of_directory": {
            "name": "test_creation_and_cleanup_of_directory",
            "location": 336,
            "return": [],
            "arguments": {
                "create_temp_files": []
            }
        },
        "test_cleanup_of_recursive_directories": {
            "name": "test_cleanup_of_recursive_directories",
            "location": 389,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_mkdir_method_of_created_files": {
            "name": "test_mkdir_method_of_created_files",
            "location": 429,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "with_wrapper": []
            }
        }
    },
    "astrality-master/astrality/tests/persistence/test_executed_actions.py": {
        "test_that_executed_action_path_is_monkeypatched_in_all_files": {
            "name": "test_that_executed_action_path_is_monkeypatched_in_all_files",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_that_actions_are_saved_to_file": {
            "name": "test_that_actions_are_saved_to_file",
            "location": 18,
            "return": [],
            "arguments": {
                "caplog": []
            }
        }
    },
    "astrality-master/astrality/tests/utils/test_compile_yaml.py": {
        "dir_with_compilable_files": {
            "name": "dir_with_compilable_files",
            "location": 12,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "TestUsingConfigFilesWithPlaceholders.test_dict_from_config_file": {
            "name": "test_dict_from_config_file",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "dir_with_compilable_files": []
            }
        },
        "TestUsingConfigFilesWithPlaceholders.test_get_user_configuration": {
            "name": "test_get_user_configuration",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "dir_with_compilable_files": []
            }
        }
    },
    "astrality-master/astrality/tests/utils/test_resolve_targets.py": {
        "test_resolving_non_existent_file": {
            "name": "test_resolving_non_existent_file",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_resolving_target_of_content_file": {
            "name": "test_resolving_target_of_content_file",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_resolving_target_file_to_directory": {
            "name": "test_resolving_target_file_to_directory",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_resolving_content_directory": {
            "name": "test_resolving_content_directory",
            "location": 38,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_filtering_based_on_include": {
            "name": "test_filtering_based_on_include",
            "location": 66,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_renaming_based_on_include": {
            "name": "test_renaming_based_on_include",
            "location": 92,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "astrality-master/docs/conf.py": {}
}
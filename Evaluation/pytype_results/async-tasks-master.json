{
    "async-tasks-master/setup.py": {},
    "async-tasks-master/at_control/definitions.py": {
        "TaskDef.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "topic": [],
                "timeout": []
            }
        },
        "ProjectDef.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bucket": [],
                "tasks": []
            }
        }
    },
    "async-tasks-master/at_control/deploy.py": {
        "deploy": {
            "name": "deploy",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "__deploy_task": {
            "name": "__deploy_task",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "gen_path": [],
                "task": []
            }
        },
        "__generate_source_dir": {
            "name": "__generate_source_dir",
            "location": 36,
            "return": [
                "p.Path"
            ],
            "arguments": {
                "path": [],
                "project": []
            }
        },
        "__main_content": {
            "name": "__main_content",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "project": []
            }
        },
        "__requirements_content": {
            "name": "__requirements_content",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "async-tasks-master/at_control/loader.py": {
        "load_project": {
            "name": "load_project",
            "location": 8,
            "return": [
                "defs.ProjectDef"
            ],
            "arguments": {
                "dir": []
            }
        },
        "__load_task": {
            "name": "__load_task",
            "location": 24,
            "return": [
                "defs.TaskDef"
            ],
            "arguments": {
                "module": [],
                "dir": []
            }
        }
    },
    "async-tasks-master/at_control/__init__.py": {},
    "async-tasks-master/at_runner/storage.py": {
        "LazyConnection.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "LazyConnection.__getattr__": {
            "name": "__getattr__",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "LazyConnection.__connect": {
            "name": "__connect",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Storage.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Storage.setup": {
            "name": "setup",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Storage.lock": {
            "name": "lock",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "id": [],
                "timeout": []
            }
        },
        "Storage.complete": {
            "name": "complete",
            "location": 80,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "id": []
            }
        },
        "Storage.release": {
            "name": "release",
            "location": 92,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "id": []
            }
        },
        "Storage.invalid": {
            "name": "invalid",
            "location": 103,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "id": [],
                "data": [],
                "errors": []
            }
        }
    },
    "async-tasks-master/at_runner/task.py": {
        "Task.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "store": [],
                "name": [],
                "timeout": []
            }
        },
        "Task.lock_and_run": {
            "name": "lock_and_run",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [],
                "context": []
            }
        },
        "Task.schema": {
            "name": "schema",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.run": {
            "name": "run",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "data": [],
                "attributes": [],
                "timestamp": []
            }
        },
        "Task.__id": {
            "name": "__id",
            "location": 67,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "Task.__parse": {
            "name": "__parse",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "async-tasks-master/at_runner/test.py": {
        "TestTask.schema": {
            "name": "schema",
            "location": 17,
            "return": [
                "TestSchema"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTask.run": {
            "name": "run",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "data": [],
                "attributes": [],
                "timestamp": []
            }
        }
    },
    "async-tasks-master/at_runner/__init__.py": {},
    "async-tasks-master/example/one/__init__.py": {
        "OneTask.schema": {
            "name": "schema",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OneTask.run": {
            "name": "run",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "data": [],
                "attributes": [],
                "timestamp": []
            }
        }
    },
    "async-tasks-master/example/two/__init__.py": {
        "TwoTask.schema": {
            "name": "schema",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TwoTask.run": {
            "name": "run",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "data": [],
                "attributes": [],
                "timestamp": []
            }
        }
    }
}
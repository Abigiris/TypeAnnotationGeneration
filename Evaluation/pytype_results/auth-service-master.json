{
    "auth-service-master/wait_for_postgres.py": {
        "pg_is_ready": {
            "name": "pg_is_ready",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "user": [],
                "password": [],
                "host": [],
                "port": [],
                "dbname": []
            }
        }
    },
    "auth-service-master/auth/manage.py": {},
    "auth-service-master/auth/auth/celery.py": {},
    "auth-service-master/auth/auth/test.py": {
        "TestStatusApi.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStatusApi.test_api": {
            "name": "test_api",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "auth-service-master/auth/auth/urls.py": {},
    "auth-service-master/auth/auth/views.py": {
        "StatusView.__calculate_up_time": {
            "name": "__calculate_up_time",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "StatusView.get": {
            "name": "get",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "auth-service-master/auth/auth/wsgi.py": {},
    "auth-service-master/auth/auth/__init__.py": {},
    "auth-service-master/auth/auth/settings/base.py": {},
    "auth-service-master/auth/auth/settings/local.py": {},
    "auth-service-master/auth/auth/settings/production.py": {},
    "auth-service-master/auth/auth/settings/test.py": {
        "TestLocalSettings.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLocalSettings.test_settings": {
            "name": "test_settings",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProductionSettings.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestProductionSettings.test_settings": {
            "name": "test_settings",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "auth-service-master/auth/auth/settings/__init__.py": {},
    "auth-service-master/auth/jwt_utils/handlers.py": {
        "jwt_payload_handler": {
            "name": "jwt_payload_handler",
            "location": 10,
            "return": [
                "Dict[(str, _datetime.datetime)]"
            ],
            "arguments": {
                "user": []
            }
        },
        "jwt_response_payload_handler": {
            "name": "jwt_response_payload_handler",
            "location": 17,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "token": [],
                "user": [],
                "request": []
            }
        }
    },
    "auth-service-master/auth/jwt_utils/test.py": {
        "TestPayLoadHandler.test_settings": {
            "name": "test_settings",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPayLoadHandler.test_payload_generation": {
            "name": "test_payload_generation",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestResponsePayLoadHandler.test_settings": {
            "name": "test_settings",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestResponsePayLoadHandler.test_payload_generation": {
            "name": "test_payload_generation",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "auth-service-master/auth/jwt_utils/urls.py": {},
    "auth-service-master/auth/jwt_utils/__init__.py": {},
    "auth-service-master/auth/users/backends.py": {
        "UsernameEmailModelBackend.authenticate": {
            "name": "authenticate",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "password": []
            }
        }
    },
    "auth-service-master/auth/users/managers.py": {
        "UserManager.create_user": {
            "name": "create_user",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "email": [],
                "username": [],
                "password": []
            }
        }
    },
    "auth-service-master/auth/users/models.py": {
        "get_default_uuid": {
            "name": "get_default_uuid",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "BlackListValidator.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "black_list": []
            }
        },
        "BlackListValidator.__call__": {
            "name": "__call__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "User.create_jwt": {
            "name": "create_jwt",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "auth-service-master/auth/users/permissions.py": {
        "UserPermissions.has_permission": {
            "name": "has_permission",
            "location": 5,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "view": []
            }
        },
        "UserPermissions.has_object_permission": {
            "name": "has_object_permission",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "view": [],
                "obj": []
            }
        }
    },
    "auth-service-master/auth/users/serializers.py": {
        "UserSerializer.create": {
            "name": "create",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "ConfirmEmailSerializer.get_token": {
            "name": "get_token",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "auth-service-master/auth/users/tasks.py": {
        "broadcast_registration": {
            "name": "broadcast_registration",
            "location": 14,
            "return": [],
            "arguments": {
                "uuid": [],
                "username": []
            }
        },
        "send_confirmation_email": {
            "name": "send_confirmation_email",
            "location": 33,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "on_create": {
            "name": "on_create",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "auth-service-master/auth/users/test.py": {
        "TestUserBackend.setUp": {
            "name": "setUp",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserBackend.test_no_username_fail": {
            "name": "test_no_username_fail",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserBackend.test_no_user_fail": {
            "name": "test_no_user_fail",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserBackend.test_username_authentication_fail": {
            "name": "test_username_authentication_fail",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserBackend.test_username_authentication_success": {
            "name": "test_username_authentication_success",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserBackend.test_email_authentication_fail": {
            "name": "test_email_authentication_fail",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserBackend.test_email_authentication_success": {
            "name": "test_email_authentication_success",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserManager.test_create_user_success": {
            "name": "test_create_user_success",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserModel.test_create_jwt": {
            "name": "test_create_jwt",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.instance_url": {
            "name": "instance_url",
            "location": 92,
            "return": [],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "TestUsersApi.broadcast_registration_url": {
            "name": "broadcast_registration_url",
            "location": 96,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestUsersApi.send_email_url": {
            "name": "send_email_url",
            "location": 100,
            "return": [],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "TestUsersApi.confirm_email_url": {
            "name": "confirm_email_url",
            "location": 104,
            "return": [],
            "arguments": {
                "cls": [],
                "token": []
            }
        },
        "TestUsersApi.me_url": {
            "name": "me_url",
            "location": 109,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TestUsersApi.setUp": {
            "name": "setUp",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_options_401": {
            "name": "test_options_401",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_options_200": {
            "name": "test_options_200",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_list_405": {
            "name": "test_list_405",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_update_405": {
            "name": "test_update_405",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_create_user_403": {
            "name": "test_create_user_403",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_create_user_400_invalid": {
            "name": "test_create_user_400_invalid",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_create_user_400_forbidden": {
            "name": "test_create_user_400_forbidden",
            "location": 159,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_create_user_400_existing": {
            "name": "test_create_user_400_existing",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_create_user_200": {
            "name": "test_create_user_200",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_retrieve_401": {
            "name": "test_retrieve_401",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_retrieve_403": {
            "name": "test_retrieve_403",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_retrieve_200": {
            "name": "test_retrieve_200",
            "location": 206,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_destroy_401": {
            "name": "test_destroy_401",
            "location": 215,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_destroy_403": {
            "name": "test_destroy_403",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_destroy_204": {
            "name": "test_destroy_204",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_broadcast_registration_401": {
            "name": "test_broadcast_registration_401",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "mock": []
            }
        },
        "TestUsersApi.test_broadcast_registration_204": {
            "name": "test_broadcast_registration_204",
            "location": 242,
            "return": [],
            "arguments": {
                "self": [],
                "mock": []
            }
        },
        "TestUsersApi.test_send_confirmation_email_204_user_not_found": {
            "name": "test_send_confirmation_email_204_user_not_found",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "mock": []
            }
        },
        "TestUsersApi.test_send_confirmation_email_204_already_confirmed_username": {
            "name": "test_send_confirmation_email_204_already_confirmed_username",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "mock": []
            }
        },
        "TestUsersApi.test_send_confirmation_email_204": {
            "name": "test_send_confirmation_email_204",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "mock": []
            }
        },
        "TestUsersApi.test_confirm_400_no_token": {
            "name": "test_confirm_400_no_token",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_confirm_400_bad_token": {
            "name": "test_confirm_400_bad_token",
            "location": 277,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_confirm_204": {
            "name": "test_confirm_204",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_me_401": {
            "name": "test_me_401",
            "location": 297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersApi.test_me_200": {
            "name": "test_me_200",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersTasks.setUp": {
            "name": "setUp",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUsersTasks.test_on_create": {
            "name": "test_on_create",
            "location": 315,
            "return": [],
            "arguments": {
                "self": [],
                "mock_broadcast": [],
                "mock_confirmation": []
            }
        },
        "TestUsersTasks.test_broadcast_registration": {
            "name": "test_broadcast_registration",
            "location": 320,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersTasks.test_send_confirmation_email": {
            "name": "test_send_confirmation_email",
            "location": 348,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUsersTasks.test_broadcast_registration.side_effect": {
            "name": "side_effect",
            "location": 327,
            "return": [],
            "arguments": {
                "url": [],
                "json": []
            }
        }
    },
    "auth-service-master/auth/users/urls.py": {},
    "auth-service-master/auth/users/views.py": {
        "UserViewSet.list": {
            "name": "list",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserViewSet.perform_create": {
            "name": "perform_create",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "UserViewSet.broadcast_registration": {
            "name": "broadcast_registration",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserViewSet.send_confirmation_email": {
            "name": "send_confirmation_email",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserViewSet.confirm_email": {
            "name": "confirm_email",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserViewSet.me": {
            "name": "me",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "auth-service-master/auth/users/__init__.py": {},
    "auth-service-master/auth/users/migrations/0001_initial.py": {},
    "auth-service-master/auth/users/migrations/0002_user_email_confirmed.py": {},
    "auth-service-master/auth/users/migrations/__init__.py": {}
}
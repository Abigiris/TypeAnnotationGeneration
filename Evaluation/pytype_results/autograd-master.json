{
    "autograd-master/fizz_buzz.py": {
        "binary_encode": {
            "name": "binary_encode",
            "location": 8,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "x": [
                    "int"
                ]
            }
        },
        "fizz_buzz_encode": {
            "name": "fizz_buzz_encode",
            "location": 12,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "x": [
                    "int"
                ]
            }
        },
        "FizzBuzzModel.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_hidden": [
                    "int"
                ]
            }
        },
        "FizzBuzzModel.predict": {
            "name": "predict",
            "location": 33,
            "return": [
                "autograd.tensor.Tensor"
            ],
            "arguments": {
                "self": [],
                "inputs": []
            }
        }
    },
    "autograd-master/minimize_function.py": {},
    "autograd-master/simple_learned_function.py": {
        "LinearModel.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LinearModel.predict": {
            "name": "predict",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "inputs": []
            }
        }
    },
    "autograd-master/autograd/function.py": {
        "tanh": {
            "name": "tanh",
            "location": 6,
            "return": [
                "autograd.tensor.Tensor"
            ],
            "arguments": {
                "tensor": [
                    "autograd.tensor.Tensor"
                ]
            }
        },
        "tanh.grad_fn": {
            "name": "grad_fn",
            "location": 11,
            "return": [],
            "arguments": {
                "grad": []
            }
        }
    },
    "autograd-master/autograd/module.py": {
        "Module.parameters": {
            "name": "parameters",
            "location": 10,
            "return": [
                "Iterator[autograd.parameter.Parameter]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Module.zero_grad": {
            "name": "zero_grad",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "autograd-master/autograd/optim.py": {
        "SGD.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lr": [
                    "float"
                ]
            }
        },
        "SGD.step": {
            "name": "step",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": [
                    "autograd.module.Module"
                ]
            }
        }
    },
    "autograd-master/autograd/parameter.py": {
        "Parameter.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "autograd-master/autograd/tensor.py": {
        "ensure_array": {
            "name": "ensure_array",
            "location": 12,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "arrayable": [
                    "Union[(float, list, np.ndarray)]"
                ]
            }
        },
        "ensure_tensor": {
            "name": "ensure_tensor",
            "location": 21,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "tensorable": [
                    "Union[(Tensor, float, np.ndarray)]"
                ]
            }
        },
        "tensor_sum": {
            "name": "tensor_sum",
            "location": 145,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "t": [
                    "Tensor"
                ]
            }
        },
        "_add": {
            "name": "_add",
            "location": 165,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "t1": [
                    "Tensor"
                ],
                "t2": [
                    "Tensor"
                ]
            }
        },
        "_mul": {
            "name": "_mul",
            "location": 220,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "t1": [
                    "Tensor"
                ],
                "t2": [
                    "Tensor"
                ]
            }
        },
        "_neg": {
            "name": "_neg",
            "location": 284,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "t": [
                    "Tensor"
                ]
            }
        },
        "_sub": {
            "name": "_sub",
            "location": 294,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "t1": [
                    "Tensor"
                ],
                "t2": [
                    "Tensor"
                ]
            }
        },
        "_matmult": {
            "name": "_matmult",
            "location": 301,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "t1": [
                    "Tensor"
                ],
                "t2": [
                    "Tensor"
                ]
            }
        },
        "_slice": {
            "name": "_slice",
            "location": 331,
            "return": [
                "Tensor"
            ],
            "arguments": {
                "t": [
                    "Tensor"
                ],
                "idxs": []
            }
        },
        "Tensor.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "np.ndarray"
                ],
                "requires_grad": [
                    "bool"
                ],
                "depends_on": [
                    "List[Dependency]"
                ]
            }
        },
        "Tensor.data": {
            "name": "data",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "new_data": []
            }
        },
        "Tensor.zero_grad": {
            "name": "zero_grad",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tensor.__repr__": {
            "name": "__repr__",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tensor.__add__": {
            "name": "__add__",
            "location": 63,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__radd__": {
            "name": "__radd__",
            "location": 67,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__iadd__": {
            "name": "__iadd__",
            "location": 71,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__mul__": {
            "name": "__mul__",
            "location": 84,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__rmul__": {
            "name": "__rmul__",
            "location": 87,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__matmul__": {
            "name": "__matmul__",
            "location": 90,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__imul__": {
            "name": "__imul__",
            "location": 93,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__neg__": {
            "name": "__neg__",
            "location": 97,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ]
            }
        },
        "Tensor.__sub__": {
            "name": "__sub__",
            "location": 100,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__rsub__": {
            "name": "__rsub__",
            "location": 103,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__isub__": {
            "name": "__isub__",
            "location": 106,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "other": []
            }
        },
        "Tensor.__getitem__": {
            "name": "__getitem__",
            "location": 110,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ],
                "idx": []
            }
        },
        "Tensor.backward": {
            "name": "backward",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "grad": [
                    "Tensor"
                ]
            }
        },
        "Tensor.sum": {
            "name": "sum",
            "location": 141,
            "return": [
                "_TTensor"
            ],
            "arguments": {
                "self": [
                    "_TTensor"
                ]
            }
        },
        "tensor_sum.grad_fn": {
            "name": "grad_fn",
            "location": 152,
            "return": [],
            "arguments": {
                "grad": []
            }
        },
        "_add.grad_fn1": {
            "name": "grad_fn1",
            "location": 171,
            "return": [],
            "arguments": {
                "grad": []
            }
        },
        "_add.grad_fn2": {
            "name": "grad_fn2",
            "location": 195,
            "return": [],
            "arguments": {
                "grad": []
            }
        },
        "_mul.grad_fn1": {
            "name": "grad_fn1",
            "location": 233,
            "return": [],
            "arguments": {
                "grad": []
            }
        },
        "_mul.grad_fn2": {
            "name": "grad_fn2",
            "location": 258,
            "return": [],
            "arguments": {
                "grad": []
            }
        },
        "_matmult.grad_fn1": {
            "name": "grad_fn1",
            "location": 315,
            "return": [],
            "arguments": {
                "grad": []
            }
        },
        "_matmult.grad_fn2": {
            "name": "grad_fn2",
            "location": 322,
            "return": [],
            "arguments": {
                "grad": []
            }
        },
        "_slice.grad": {
            "name": "grad",
            "location": 336,
            "return": [],
            "arguments": {
                "grad": []
            }
        }
    },
    "autograd-master/autograd/__init__.py": {},
    "autograd-master/tests/test_tensor_add.py": {
        "TestTensorAdd.test_simple_add": {
            "name": "test_simple_add",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorAdd.test_inplace_add": {
            "name": "test_inplace_add",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorAdd.test_broadcast_add": {
            "name": "test_broadcast_add",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorAdd.test_broadcast_add2": {
            "name": "test_broadcast_add2",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "autograd-master/tests/test_tensor_matmul.py": {
        "TestTensorMatMul.test_simple_matmul": {
            "name": "test_simple_matmul",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "autograd-master/tests/test_tensor_mul.py": {
        "TestTensorMul.test_simple_mul": {
            "name": "test_simple_mul",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorMul.test_inplace_mul": {
            "name": "test_inplace_mul",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorMul.test_broadcast_mul": {
            "name": "test_broadcast_mul",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorMul.test_broadcast_mul2": {
            "name": "test_broadcast_mul2",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "autograd-master/tests/test_tensor_sub.py": {
        "TestTensorAdd.test_simple_sub": {
            "name": "test_simple_sub",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorAdd.test_inplace_sub": {
            "name": "test_inplace_sub",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorAdd.test_broadcast_sub": {
            "name": "test_broadcast_sub",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorAdd.test_broadcast_sub2": {
            "name": "test_broadcast_sub2",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "autograd-master/tests/test_tensor_sum.py": {
        "TestTensorSum.test_simple_sum": {
            "name": "test_simple_sum",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTensorSum.test_sum_with_grad": {
            "name": "test_sum_with_grad",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "autograd-master/tests/__init__.py": {}
}
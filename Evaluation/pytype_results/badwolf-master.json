{
    "badwolf-master/setup.py": {
        "PyTest.initialize_options": {
            "name": "initialize_options",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyTest.finalize_options": {
            "name": "finalize_options",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyTest.run_tests": {
            "name": "run_tests",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "badwolf-master/badwolf/app.py": {
        "create_app": {
            "name": "create_app",
            "location": 8,
            "return": [],
            "arguments": {
                "config": []
            }
        }
    },
    "badwolf-master/badwolf/artifacts.py": {
        "download_artifacts": {
            "name": "download_artifacts",
            "location": 11,
            "return": [],
            "arguments": {
                "user": [],
                "repo": [],
                "sha": [],
                "filename": []
            }
        }
    },
    "badwolf-master/badwolf/bitbucket.py": {
        "BitbucketAPIError.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "error": [],
                "description": []
            }
        },
        "BitbucketAPIError.__repr__": {
            "name": "__repr__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BitbucketAPIError.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIDispatcher.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "APIDispatcher.dispatch": {
            "name": "dispatch",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "APIDispatcher.clone_repository": {
            "name": "clone_repository",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "full_name": [],
                "path": []
            }
        },
        "APIDispatcher.session": {
            "name": "session",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasicAuthDispatcher.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "BasicAuthDispatcher.dispatch": {
            "name": "dispatch",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "BasicAuthDispatcher.get_git_url": {
            "name": "get_git_url",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "full_name": []
            }
        },
        "BasicAuthDispatcher.clone_repository": {
            "name": "clone_repository",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "full_name": [],
                "path": []
            }
        },
        "OAuth2Dispatcher.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "oauth_key": [],
                "oauth_secret": []
            }
        },
        "OAuth2Dispatcher.get_authorization_url": {
            "name": "get_authorization_url",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "grant_type": []
            }
        },
        "OAuth2Dispatcher.grant_access_token": {
            "name": "grant_access_token",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "OAuth2Dispatcher.refresh_access_token": {
            "name": "refresh_access_token",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "OAuth2Dispatcher.dispatch": {
            "name": "dispatch",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "OAuth2Dispatcher.get_git_url": {
            "name": "get_git_url",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "full_name": []
            }
        },
        "OAuth2Dispatcher.clone_repository": {
            "name": "clone_repository",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "full_name": [],
                "path": []
            }
        },
        "Bitbucket.__init__": {
            "name": "__init__",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Bitbucket.request": {
            "name": "request",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "Bitbucket.get": {
            "name": "get",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Bitbucket.post": {
            "name": "post",
            "location": 203,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Bitbucket.put": {
            "name": "put",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Bitbucket.delete": {
            "name": "delete",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Bitbucket.clone": {
            "name": "clone",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "repo_full_name": [],
                "clone_path": []
            }
        },
        "Bitbucket.get_git_url": {
            "name": "get_git_url",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "repo_full_name": []
            }
        },
        "BuildStatus.__init__": {
            "name": "__init__",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "client": [],
                "repo": [],
                "revision": [],
                "key": [],
                "url": []
            }
        },
        "BuildStatus.get": {
            "name": "get",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildStatus.update": {
            "name": "update",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "state": [],
                "name": [],
                "description": []
            }
        },
        "PullRequest.__init__": {
            "name": "__init__",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "client": [],
                "repo": []
            }
        },
        "PullRequest.get": {
            "name": "get",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "PullRequest.list": {
            "name": "list",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "state": [],
                "page": [],
                "size": []
            }
        },
        "PullRequest.merge": {
            "name": "merge",
            "location": 277,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "message": []
            }
        },
        "PullRequest.comment": {
            "name": "comment",
            "location": 289,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "content": [],
                "line_from": [],
                "line_to": [],
                "parent_id": [],
                "filename": []
            }
        },
        "PullRequest.comments": {
            "name": "comments",
            "location": 303,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "page": [],
                "size": []
            }
        },
        "PullRequest.all_comments": {
            "name": "all_comments",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "PullRequest.delete_comment": {
            "name": "delete_comment",
            "location": 323,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "comment_id": []
            }
        },
        "PullRequest.diff": {
            "name": "diff",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "id": [],
                "raw": []
            }
        },
        "Changesets.__init__": {
            "name": "__init__",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "client": [],
                "repo": []
            }
        },
        "Changesets.comment": {
            "name": "comment",
            "location": 351,
            "return": [],
            "arguments": {
                "self": [],
                "node": [],
                "content": [],
                "line_from": [],
                "line_to": [],
                "parent_id": [],
                "filename": []
            }
        },
        "Hooks.__init__": {
            "name": "__init__",
            "location": 367,
            "return": [],
            "arguments": {
                "self": [],
                "client": [],
                "repo": []
            }
        },
        "Hooks.add": {
            "name": "add",
            "location": 371,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "url": [],
                "events": []
            }
        },
        "Hooks.list": {
            "name": "list",
            "location": 383,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FlaskBitbucket.__init__": {
            "name": "__init__",
            "location": 391,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "FlaskBitbucket.init_app": {
            "name": "init_app",
            "location": 396,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "FlaskBitbucket.request": {
            "name": "request",
            "location": 402,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "FlaskBitbucket.get": {
            "name": "get",
            "location": 405,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "FlaskBitbucket.post": {
            "name": "post",
            "location": 408,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "FlaskBitbucket.put": {
            "name": "put",
            "location": 411,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "FlaskBitbucket.delete": {
            "name": "delete",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "FlaskBitbucket.clone": {
            "name": "clone",
            "location": 417,
            "return": [],
            "arguments": {
                "self": [],
                "repo_full_name": [],
                "clone_path": []
            }
        },
        "FlaskBitbucket.get_git_url": {
            "name": "get_git_url",
            "location": 420,
            "return": [],
            "arguments": {
                "self": [],
                "repo_full_name": []
            }
        }
    },
    "badwolf-master/badwolf/builder.py": {
        "trigger_slack_webhook": {
            "name": "trigger_slack_webhook",
            "location": 295,
            "return": [],
            "arguments": {
                "webhooks": [],
                "context": []
            }
        },
        "Builder.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "spec": [],
                "build_status": [],
                "docker_version": []
            }
        },
        "Builder.run": {
            "name": "run",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Builder.get_docker_image": {
            "name": "get_docker_image",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Builder.run_in_container": {
            "name": "run_in_container",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "docker_image_name": []
            }
        },
        "Builder.update_build_status": {
            "name": "update_build_status",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "state": [],
                "description": []
            }
        },
        "Builder.send_notifications": {
            "name": "send_notifications",
            "location": 259,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        }
    },
    "badwolf-master/badwolf/cli.py": {
        "manage": {
            "name": "manage",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "runserver": {
            "name": "runserver",
            "location": 29,
            "return": [],
            "arguments": {
                "host": [],
                "port": [],
                "reload": [],
                "debug": []
            }
        },
        "shell": {
            "name": "shell",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "encrypt": {
            "name": "encrypt",
            "location": 96,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "badwolf-master/badwolf/cloner.py": {
        "RepositoryCloner.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "RepositoryCloner.clone": {
            "name": "clone",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RepositoryCloner._merge_pull_request": {
            "name": "_merge_pull_request",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "gitcmd": []
            }
        },
        "RepositoryCloner.is_commit_exists": {
            "name": "is_commit_exists",
            "location": 80,
            "return": [],
            "arguments": {
                "gitcmd": [],
                "sha": []
            }
        },
        "RepositoryCloner.get_conflicted_files": {
            "name": "get_conflicted_files",
            "location": 85,
            "return": [],
            "arguments": {
                "repo_path": []
            }
        }
    },
    "badwolf-master/badwolf/context.py": {
        "Context.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "repository": [],
                "actor": [],
                "type": [],
                "message": [],
                "source": [],
                "target": [],
                "rebuild": [],
                "pr_id": [],
                "nocache": [],
                "clone_depth": [],
                "skip_lint": []
            }
        }
    },
    "badwolf-master/badwolf/default_settings.py": {},
    "badwolf-master/badwolf/exceptions.py": {},
    "badwolf-master/badwolf/extensions.py": {},
    "badwolf-master/badwolf/notification.py": {
        "send_mail": {
            "name": "send_mail",
            "location": 11,
            "return": [],
            "arguments": {
                "recipients": [],
                "subject": [],
                "html": []
            }
        }
    },
    "badwolf-master/badwolf/pipeline.py": {
        "Pipeline.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "Pipeline.start": {
            "name": "start",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline._report_error": {
            "name": "_report_error",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "Pipeline._report_git_error": {
            "name": "_report_git_error",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "exc": []
            }
        },
        "Pipeline._report_docker_error": {
            "name": "_report_docker_error",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "exc": []
            }
        },
        "Pipeline.clone": {
            "name": "clone",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.parse_spec": {
            "name": "parse_spec",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline._populate_envvars_from_vault": {
            "name": "_populate_envvars_from_vault",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.build": {
            "name": "build",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.save_artifacts": {
            "name": "save_artifacts",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "build_success": []
            }
        },
        "Pipeline._save_artifacts": {
            "name": "_save_artifacts",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "build_success": []
            }
        },
        "Pipeline.lint": {
            "name": "lint",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.deploy": {
            "name": "deploy",
            "location": 286,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.clean": {
            "name": "clean",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline._report_git_error._linkify_file": {
            "name": "_linkify_file",
            "location": 90,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "Pipeline._save_artifacts._should_exclude": {
            "name": "_should_exclude",
            "location": 196,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "badwolf-master/badwolf/security.py": {
        "parse_secretfile": {
            "name": "parse_secretfile",
            "location": 26,
            "return": [],
            "arguments": {
                "fd": []
            }
        },
        "generate_secure_token": {
            "name": "generate_secure_token",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "SecureToken.encrypt": {
            "name": "encrypt",
            "location": 15,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "SecureToken.decrypt": {
            "name": "decrypt",
            "location": 20,
            "return": [],
            "arguments": {
                "encrypted": []
            }
        }
    },
    "badwolf-master/badwolf/spec.py": {
        "ListField._deserialize": {
            "name": "_deserialize",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "attr": [],
                "data": []
            }
        },
        "SetField._deserialize": {
            "name": "_deserialize",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "attr": [],
                "data": []
            }
        },
        "SecureField._deserialize": {
            "name": "_deserialize",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "attr": [],
                "data": []
            }
        },
        "SecureField._decrypt": {
            "name": "_decrypt",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "ObjectDictSchema._postprocess": {
            "name": "_postprocess",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "EmailNotificationSchema._preprocess": {
            "name": "_preprocess",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SlackWebHookSchema._preprocess": {
            "name": "_preprocess",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "slack": []
            }
        },
        "LinterSchema.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinterSchema._preprocess": {
            "name": "_preprocess",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "linter": []
            }
        },
        "LinterSchema._postprocess": {
            "name": "_postprocess",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ArtifactsSchema._preprocess": {
            "name": "_preprocess",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "VaultSchema._postprocess": {
            "name": "_postprocess",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SpecificationSchema._preprocess": {
            "name": "_preprocess",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SpecificationSchema._postprocess": {
            "name": "_postprocess",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Specification.__init__": {
            "name": "__init__",
            "location": 257,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Specification.parse_file": {
            "name": "parse_file",
            "location": 287,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "Specification.parse": {
            "name": "parse",
            "location": 301,
            "return": [],
            "arguments": {
                "cls": [],
                "conf": []
            }
        },
        "Specification.parse_secretfile": {
            "name": "parse_secretfile",
            "location": 313,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Specification.is_branch_enabled": {
            "name": "is_branch_enabled",
            "location": 329,
            "return": [],
            "arguments": {
                "self": [],
                "branch": []
            }
        },
        "Specification.shell_script": {
            "name": "shell_script",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Specification.shell_script._trace": {
            "name": "_trace",
            "location": 336,
            "return": [],
            "arguments": {
                "command": []
            }
        }
    },
    "badwolf-master/badwolf/tasks.py": {
        "_run_task": {
            "name": "_run_task",
            "location": 21,
            "return": [],
            "arguments": {
                "_task_func": []
            }
        },
        "async_task": {
            "name": "async_task",
            "location": 33,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "start_pipeline": {
            "name": "start_pipeline",
            "location": 42,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "check_pr_mergeable": {
            "name": "check_pr_mergeable",
            "location": 47,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "check_mergeable": {
            "name": "check_mergeable",
            "location": 66,
            "return": [],
            "arguments": {
                "context": [],
                "pr_api": [],
                "pr_info": []
            }
        },
        "async_task.delay": {
            "name": "delay",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "badwolf-master/badwolf/utils.py": {
        "to_text": {
            "name": "to_text",
            "location": 29,
            "return": [],
            "arguments": {
                "value": [],
                "encoding": [],
                "errors": []
            }
        },
        "to_binary": {
            "name": "to_binary",
            "location": 44,
            "return": [],
            "arguments": {
                "value": [],
                "encoding": []
            }
        },
        "yesish": {
            "name": "yesish",
            "location": 59,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "sanitize_sensitive_data": {
            "name": "sanitize_sensitive_data",
            "location": 71,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_sanitize_urls": {
            "name": "_sanitize_urls",
            "location": 75,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "run_command": {
            "name": "run_command",
            "location": 87,
            "return": [],
            "arguments": {
                "command": [],
                "split": [],
                "include_errors": [],
                "cwd": [],
                "shell": [],
                "env": []
            }
        },
        "ObjectDict.__getattr__": {
            "name": "__getattr__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ObjectDict.__setattr__": {
            "name": "__setattr__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "_sanitize_urls.remove_basic_auth": {
            "name": "remove_basic_auth",
            "location": 76,
            "return": [],
            "arguments": {
                "match": []
            }
        }
    },
    "badwolf-master/badwolf/wsgi.py": {},
    "badwolf-master/badwolf/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 6,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "register_blueprints": {
            "name": "register_blueprints",
            "location": 17,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "register_error_handlers": {
            "name": "register_error_handlers",
            "location": 35,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "register_extensions": {
            "name": "register_extensions",
            "location": 39,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "register_blueprints.register": {
            "name": "register",
            "location": 18,
            "return": [],
            "arguments": {
                "bp": []
            }
        }
    },
    "badwolf-master/badwolf/deploy/__init__.py": {
        "trigger_slack_webhook": {
            "name": "trigger_slack_webhook",
            "location": 94,
            "return": [],
            "arguments": {
                "webhooks": [],
                "context": [],
                "provider": [],
                "succeed": []
            }
        },
        "Deployer.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "spec": [],
                "providers": [],
                "working_dir": []
            }
        },
        "Deployer.deploy": {
            "name": "deploy",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Deployer._update_build_status": {
            "name": "_update_build_status",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "build_status": [],
                "state": [],
                "description": []
            }
        }
    },
    "badwolf-master/badwolf/deploy/providers/pypi.py": {
        "PypiProvider.deploy": {
            "name": "deploy",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PypiProvider.url": {
            "name": "url",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "badwolf-master/badwolf/deploy/providers/script.py": {
        "ScriptProvider.deploy": {
            "name": "deploy",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "badwolf-master/badwolf/deploy/providers/__init__.py": {
        "Provider.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "working_dir": [],
                "config": [],
                "context": []
            }
        },
        "Provider.is_usable": {
            "name": "is_usable",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Provider.deploy": {
            "name": "deploy",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Provider.url": {
            "name": "url",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "badwolf-master/badwolf/lint/processor.py": {
        "LintProcessor.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "context": [],
                "spec": [],
                "working_dir": []
            }
        },
        "LintProcessor.load_changes": {
            "name": "load_changes",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LintProcessor.process": {
            "name": "process",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LintProcessor._execute_linters": {
            "name": "_execute_linters",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "LintProcessor._report": {
            "name": "_report",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LintProcessor.update_build_status": {
            "name": "update_build_status",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "state": [],
                "description": []
            }
        }
    },
    "badwolf-master/badwolf/lint/utils.py": {
        "in_path": {
            "name": "in_path",
            "location": 6,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "npm_exists": {
            "name": "npm_exists",
            "location": 17,
            "return": [],
            "arguments": {
                "name": [],
                "cwd": []
            }
        },
        "parse_checkstyle": {
            "name": "parse_checkstyle",
            "location": 27,
            "return": [],
            "arguments": {
                "xml": []
            }
        }
    },
    "badwolf-master/badwolf/lint/__init__.py": {
        "Problem.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "line": [],
                "message": [],
                "linter": [],
                "is_error": [],
                "has_line_change": []
            }
        },
        "Problem.__hash__": {
            "name": "__hash__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Problem.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Problem.__str__": {
            "name": "__str__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Problems.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Problems.add": {
            "name": "add",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "problem": []
            }
        },
        "Problems.set_changes": {
            "name": "set_changes",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "changes": []
            }
        },
        "Problems.limit_to_changes": {
            "name": "limit_to_changes",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Problems.__len__": {
            "name": "__len__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Problems.__iter__": {
            "name": "__iter__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Problems.__getitem__": {
            "name": "__getitem__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Problems.limit_to_changes.should_keep": {
            "name": "should_keep",
            "location": 47,
            "return": [],
            "arguments": {
                "item": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/bandit.py": {
        "BanditLinter.is_usable": {
            "name": "is_usable",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BanditLinter.lint_files": {
            "name": "lint_files",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/csslint.py": {
        "CSSLinter.is_usable": {
            "name": "is_usable",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CSSLinter.match_file": {
            "name": "match_file",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "CSSLinter.lint_files": {
            "name": "lint_files",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "CSSLinter.create_command": {
            "name": "create_command",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/eslint.py": {
        "ESLinter.is_usable": {
            "name": "is_usable",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ESLinter.match_file": {
            "name": "match_file",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "ESLinter.lint_files": {
            "name": "lint_files",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "ESLinter.create_command": {
            "name": "create_command",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "is_likely_minified": {
            "name": "is_likely_minified",
            "location": 7,
            "return": [],
            "arguments": {
                "_path": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/flake8.py": {
        "Flake8Linter.is_usable": {
            "name": "is_usable",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Flake8Linter.lint_files": {
            "name": "lint_files",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "Flake8Linter._parse_line": {
            "name": "_parse_line",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Flake8Linter._read_flake8_config": {
            "name": "_read_flake8_config",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/hadolint.py": {
        "HadoLinter.is_usable": {
            "name": "is_usable",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HadoLinter.lint_files": {
            "name": "lint_files",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "HadoLinter._parse_line": {
            "name": "_parse_line",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/jsonlint.py": {
        "JSONLinter.is_usable": {
            "name": "is_usable",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONLinter.lint_files": {
            "name": "lint_files",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "JSONLinter.create_command": {
            "name": "create_command",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "JSONLinter._parse_line": {
            "name": "_parse_line",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/mypy.py": {
        "MypyLinter.is_usable": {
            "name": "is_usable",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MypyLinter.lint_files": {
            "name": "lint_files",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "MypyLinter._parse_line": {
            "name": "_parse_line",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "MypyLinter._is_ignore_missing_imports_configured": {
            "name": "_is_ignore_missing_imports_configured",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/pycodestyle.py": {
        "PyCodeStyleLinter.is_usable": {
            "name": "is_usable",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PyCodeStyleLinter.lint_files": {
            "name": "lint_files",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "PyCodeStyleLinter._parse_line": {
            "name": "_parse_line",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/pylint.py": {
        "PylintLinter.is_usable": {
            "name": "is_usable",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PylintLinter.lint_files": {
            "name": "lint_files",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "PylintLinter._parse_line": {
            "name": "_parse_line",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/rstlint.py": {
        "RestructuredTextLinter.lint_files": {
            "name": "lint_files",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/sasslint.py": {
        "SassLinter.is_usable": {
            "name": "is_usable",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SassLinter.lint_files": {
            "name": "lint_files",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "SassLinter.create_command": {
            "name": "create_command",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/shellcheck.py": {
        "ShellCheckLinter.is_usable": {
            "name": "is_usable",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShellCheckLinter.lint_files": {
            "name": "lint_files",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "ShellCheckLinter.create_command": {
            "name": "create_command",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/stylelint.py": {
        "StyleLinter.is_usable": {
            "name": "is_usable",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StyleLinter.match_file": {
            "name": "match_file",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "StyleLinter.lint_files": {
            "name": "lint_files",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "StyleLinter.create_command": {
            "name": "create_command",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/yamllint.py": {
        "YAMLLinter.is_usable": {
            "name": "is_usable",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "YAMLLinter.lint_files": {
            "name": "lint_files",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "YAMLLinter._parse_line": {
            "name": "_parse_line",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        }
    },
    "badwolf-master/badwolf/lint/linters/__init__.py": {
        "Linter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "working_dir": [],
                "problems": [],
                "options": []
            }
        },
        "Linter.is_usable": {
            "name": "is_usable",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Linter.match_file": {
            "name": "match_file",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "Linter.lint_files": {
            "name": "lint_files",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "Linter.execute": {
            "name": "execute",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "Linter.__repr__": {
            "name": "__repr__",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Linter._relativize_filename": {
            "name": "_relativize_filename",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "PythonLinter.python_name": {
            "name": "python_name",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "badwolf-master/badwolf/log/views.py": {
        "build_log": {
            "name": "build_log",
            "location": 53,
            "return": [],
            "arguments": {
                "sha": []
            }
        },
        "build_log._streaming_gen": {
            "name": "_streaming_gen",
            "location": 84,
            "return": [],
            "arguments": {}
        }
    },
    "badwolf-master/badwolf/log/__init__.py": {},
    "badwolf-master/badwolf/oauth/views.py": {
        "redirect_to_bitbucket": {
            "name": "redirect_to_bitbucket",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "bitbucket_oauth_callback": {
            "name": "bitbucket_oauth_callback",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "badwolf-master/badwolf/oauth/__init__.py": {},
    "badwolf-master/badwolf/webhook/views.py": {
        "register_event_handler": {
            "name": "register_event_handler",
            "location": 21,
            "return": [],
            "arguments": {
                "event_key": []
            }
        },
        "_cancel_outdated_pipelines": {
            "name": "_cancel_outdated_pipelines",
            "location": 28,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "register_webhook": {
            "name": "register_webhook",
            "location": 79,
            "return": [],
            "arguments": {
                "user": [],
                "repo": []
            }
        },
        "webhook_push": {
            "name": "webhook_push",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "handle_repo_push": {
            "name": "handle_repo_push",
            "location": 132,
            "return": [],
            "arguments": {
                "payload": []
            }
        },
        "handle_pull_request": {
            "name": "handle_pull_request",
            "location": 198,
            "return": [],
            "arguments": {
                "payload": []
            }
        },
        "handle_pull_request_approved": {
            "name": "handle_pull_request_approved",
            "location": 245,
            "return": [],
            "arguments": {
                "payload": []
            }
        },
        "handle_repo_commit_comment": {
            "name": "handle_repo_commit_comment",
            "location": 303,
            "return": [],
            "arguments": {
                "payload": []
            }
        },
        "handle_pull_request_comment": {
            "name": "handle_pull_request_comment",
            "location": 334,
            "return": [],
            "arguments": {
                "payload": []
            }
        },
        "register_event_handler.register": {
            "name": "register",
            "location": 22,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "badwolf-master/badwolf/webhook/__init__.py": {},
    "badwolf-master/docs/conf.py": {},
    "badwolf-master/tests/conftest.py": {
        "app": {
            "name": "app",
            "location": 6,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "test_client": {
            "name": "test_client",
            "location": 22,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "app.teardown": {
            "name": "teardown",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "badwolf-master/tests/test_auto_merge_pull_request.py": {
        "test_auto_merge_not_enabled": {
            "name": "test_auto_merge_not_enabled",
            "location": 10,
            "return": [],
            "arguments": {
                "app": [],
                "test_client": []
            }
        },
        "test_auto_merge_failure_pr_get_error": {
            "name": "test_auto_merge_failure_pr_get_error",
            "location": 35,
            "return": [],
            "arguments": {
                "app": [],
                "test_client": []
            }
        },
        "test_auto_merge_skip_merge_skip_in_title": {
            "name": "test_auto_merge_skip_merge_skip_in_title",
            "location": 60,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_auto_merge_skip_merge_skip_in_description": {
            "name": "test_auto_merge_skip_merge_skip_in_description",
            "location": 83,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_auto_merge_skip_wip_in_title": {
            "name": "test_auto_merge_skip_wip_in_title",
            "location": 106,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_auto_merge_skip_wip_in_description": {
            "name": "test_auto_merge_skip_wip_in_description",
            "location": 129,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_auto_merge_skip_pr_not_in_open_state": {
            "name": "test_auto_merge_skip_pr_not_in_open_state",
            "location": 152,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_auto_merge_skip_not_enough_approval": {
            "name": "test_auto_merge_skip_not_enough_approval",
            "location": 179,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_auto_merge_success": {
            "name": "test_auto_merge_success",
            "location": 211,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_auto_merge_call_error": {
            "name": "test_auto_merge_call_error",
            "location": 253,
            "return": [],
            "arguments": {
                "test_client": []
            }
        }
    },
    "badwolf-master/tests/test_bitbucket_webhook_comment.py": {
        "test_repo_commit_comment_created_ci_retry": {
            "name": "test_repo_commit_comment_created_ci_retry",
            "location": 10,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "test_client": []
            }
        },
        "test_repo_commit_comment_created_ci_rebuild": {
            "name": "test_repo_commit_comment_created_ci_rebuild",
            "location": 41,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "test_client": []
            }
        },
        "test_repo_commit_comment_created_do_nothing": {
            "name": "test_repo_commit_comment_created_do_nothing",
            "location": 72,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "test_client": []
            }
        },
        "test_pr_commit_comment_created_do_nothing": {
            "name": "test_pr_commit_comment_created_do_nothing",
            "location": 104,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "mock_cancel_pipelines": [],
                "test_client": []
            }
        },
        "test_pr_commit_comment_created_ci_retry": {
            "name": "test_pr_commit_comment_created_ci_retry",
            "location": 139,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "mock_cancel_pipelines": [],
                "test_client": []
            }
        },
        "test_pr_commit_comment_created_ci_rebuild": {
            "name": "test_pr_commit_comment_created_ci_rebuild",
            "location": 183,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "mock_cancel_pipelines": [],
                "test_client": []
            }
        },
        "test_pr_commit_comment_created_ci_retry_state_not_open": {
            "name": "test_pr_commit_comment_created_ci_retry_state_not_open",
            "location": 227,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "mock_cancel_pipelines": [],
                "test_client": []
            }
        }
    },
    "badwolf-master/tests/test_bitbucket_webhook_pr_created_updated.py": {
        "test_pr_created_unsupported_scm": {
            "name": "test_pr_created_unsupported_scm",
            "location": 11,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_pr_updated_ci_skip_found": {
            "name": "test_pr_updated_ci_skip_found",
            "location": 30,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_pr_updated_state_not_open": {
            "name": "test_pr_updated_state_not_open",
            "location": 63,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_pr_created_trigger_start_pipeline": {
            "name": "test_pr_created_trigger_start_pipeline",
            "location": 99,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "mock_cancel_pipelines": [],
                "test_client": []
            }
        }
    },
    "badwolf-master/tests/test_bitbucket_webhook_repo_push.py": {
        "test_invalid_http_header_bad_request": {
            "name": "test_invalid_http_header_bad_request",
            "location": 11,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_valid_http_header": {
            "name": "test_valid_http_header",
            "location": 17,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_unhandled_event": {
            "name": "test_unhandled_event",
            "location": 30,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_repo_push_no_new_changes": {
            "name": "test_repo_push_no_new_changes",
            "location": 49,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_repo_push_unsupported_push_type": {
            "name": "test_repo_push_unsupported_push_type",
            "location": 68,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_repo_push_unsupported_scm": {
            "name": "test_repo_push_unsupported_scm",
            "location": 96,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_repo_push_no_commits": {
            "name": "test_repo_push_no_commits",
            "location": 124,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_repo_push_ci_skip_found": {
            "name": "test_repo_push_ci_skip_found",
            "location": 153,
            "return": [],
            "arguments": {
                "test_client": []
            }
        },
        "test_repo_push_trigger_start_pipeline": {
            "name": "test_repo_push_trigger_start_pipeline",
            "location": 189,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "mock_cancel_pipelines": [],
                "test_client": []
            }
        },
        "test_repo_push_tag_trigger_start_pipeline": {
            "name": "test_repo_push_tag_trigger_start_pipeline",
            "location": 228,
            "return": [],
            "arguments": {
                "mock_start_pipeline": [],
                "mock_cancel_pipelines": [],
                "test_client": []
            }
        }
    },
    "badwolf-master/tests/test_lint.py": {
        "pr_context": {
            "name": "pr_context",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_no_linters_ignore": {
            "name": "test_no_linters_ignore",
            "location": 35,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_load_changes_failed_ignore": {
            "name": "test_load_changes_failed_ignore",
            "location": 43,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": [],
                "caplog": []
            }
        },
        "test_no_changed_files_ignore": {
            "name": "test_no_changed_files_ignore",
            "location": 56,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": [],
                "caplog": []
            }
        },
        "test_flake8_lint_a_py": {
            "name": "test_flake8_lint_a_py",
            "location": 81,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_eslint_lint_a_js": {
            "name": "test_eslint_lint_a_js",
            "location": 118,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_pycodestyle_lint_a_py": {
            "name": "test_pycodestyle_lint_a_py",
            "location": 160,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_jsonlint_a_json": {
            "name": "test_jsonlint_a_json",
            "location": 196,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_jsonlint_a_json_changes_in_range": {
            "name": "test_jsonlint_a_json_changes_in_range",
            "location": 227,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_jsonlint_a_json_changes_out_of_range": {
            "name": "test_jsonlint_a_json_changes_out_of_range",
            "location": 260,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_shellcheck_a_sh": {
            "name": "test_shellcheck_a_sh",
            "location": 291,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_csslint_a_css": {
            "name": "test_csslint_a_css",
            "location": 323,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_flake8_lint_a_py_with_custom_glob_pattern": {
            "name": "test_flake8_lint_a_py_with_custom_glob_pattern",
            "location": 354,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_flake8_lint_a_py_with_custom_regex_pattern": {
            "name": "test_flake8_lint_a_py_with_custom_regex_pattern",
            "location": 390,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_yamllint_a_yml": {
            "name": "test_yamllint_a_yml",
            "location": 426,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_flake8_lint_a_py_with_multi_custom_glob_patterns": {
            "name": "test_flake8_lint_a_py_with_multi_custom_glob_patterns",
            "location": 459,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_bandit_lint_a_py": {
            "name": "test_bandit_lint_a_py",
            "location": 495,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_rstlint_a_rst": {
            "name": "test_rstlint_a_rst",
            "location": 530,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_pylint_lint_a_py": {
            "name": "test_pylint_lint_a_py",
            "location": 562,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_sasslint_lint_a_scss": {
            "name": "test_sasslint_lint_a_scss",
            "location": 597,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_stylelint_lint_a_scss": {
            "name": "test_stylelint_lint_a_scss",
            "location": 630,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_mypy_lint_a_py": {
            "name": "test_mypy_lint_a_py",
            "location": 660,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        },
        "test_hadolint_lint_a_dockerfile": {
            "name": "test_hadolint_lint_a_dockerfile",
            "location": 695,
            "return": [],
            "arguments": {
                "app": [],
                "pr_context": []
            }
        }
    },
    "badwolf-master/tests/test_log.py": {
        "test_view_build_log": {
            "name": "test_view_build_log",
            "location": 5,
            "return": [],
            "arguments": {
                "test_client": []
            }
        }
    },
    "badwolf-master/tests/test_pipeline.py": {
        "push_context": {
            "name": "push_context",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "pipeline": {
            "name": "pipeline",
            "location": 28,
            "return": [],
            "arguments": {
                "push_context": []
            }
        },
        "test_clone_repo_failed": {
            "name": "test_clone_repo_failed",
            "location": 32,
            "return": [],
            "arguments": {
                "app": [],
                "pipeline": []
            }
        }
    },
    "badwolf-master/tests/test_secure_token.py": {
        "test_secure_token": {
            "name": "test_secure_token",
            "location": 6,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "badwolf-master/tests/test_spec.py": {
        "test_parse_empty_conf": {
            "name": "test_parse_empty_conf",
            "location": 14,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_single_string_conf": {
            "name": "test_parse_single_string_conf",
            "location": 26,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_file_single_string": {
            "name": "test_parse_file_single_string",
            "location": 55,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_file_single_list": {
            "name": "test_parse_file_single_list",
            "location": 79,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_file_multi_list": {
            "name": "test_parse_file_multi_list",
            "location": 109,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_notification_object_no_option": {
            "name": "test_parse_notification_object_no_option",
            "location": 145,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_notification_object_with_option": {
            "name": "test_parse_notification_object_with_option",
            "location": 167,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_env_single_string": {
            "name": "test_parse_env_single_string",
            "location": 191,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_env_single_list": {
            "name": "test_parse_env_single_list",
            "location": 202,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_secure_env": {
            "name": "test_parse_secure_env",
            "location": 214,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_env_multi_list": {
            "name": "test_parse_env_multi_list",
            "location": 226,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_simple_linter": {
            "name": "test_parse_simple_linter",
            "location": 243,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_linter_with_pattern": {
            "name": "test_parse_linter_with_pattern",
            "location": 253,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_multi_linters_with_pattern": {
            "name": "test_parse_multi_linters_with_pattern",
            "location": 267,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_linter_with_regex_pattern": {
            "name": "test_parse_linter_with_regex_pattern",
            "location": 282,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_privileged": {
            "name": "test_parse_privileged",
            "location": 292,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_docker": {
            "name": "test_parse_docker",
            "location": 309,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_image": {
            "name": "test_parse_image",
            "location": 326,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_generate_script_full_feature": {
            "name": "test_generate_script_full_feature",
            "location": 343,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_generate_script_after_success": {
            "name": "test_generate_script_after_success",
            "location": 359,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_generate_script_after_failure": {
            "name": "test_generate_script_after_failure",
            "location": 374,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_secure_field": {
            "name": "test_secure_field",
            "location": 389,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_list_field": {
            "name": "test_list_field",
            "location": 411,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_deploy_single_provider_object": {
            "name": "test_deploy_single_provider_object",
            "location": 428,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_deploy_single_provider_list": {
            "name": "test_deploy_single_provider_list",
            "location": 443,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_deploy_multiple_provider": {
            "name": "test_deploy_multiple_provider",
            "location": 457,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_deploy_pypi_provider_no_auth": {
            "name": "test_deploy_pypi_provider_no_auth",
            "location": 483,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_deploy_single_provider_object_should_fail": {
            "name": "test_deploy_single_provider_object_should_fail",
            "location": 500,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_simple_artifacts": {
            "name": "test_parse_simple_artifacts",
            "location": 511,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_artifacts_paths": {
            "name": "test_parse_artifacts_paths",
            "location": 519,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_vault_no_env": {
            "name": "test_parse_vault_no_env",
            "location": 531,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_vault_with_single_env": {
            "name": "test_parse_vault_with_single_env",
            "location": 543,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_vault_with_multi_env": {
            "name": "test_parse_vault_with_multi_env",
            "location": 557,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_vault_with_env_error": {
            "name": "test_parse_vault_with_env_error",
            "location": 575,
            "return": [],
            "arguments": {
                "app": []
            }
        },
        "test_parse_vault_with_secretfile": {
            "name": "test_parse_vault_with_secretfile",
            "location": 586,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "badwolf-master/tests/test_utils.py": {
        "test_sanitize_basic_auth_urls": {
            "name": "test_sanitize_basic_auth_urls",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_sanitize_basic_auth_urls_same_line": {
            "name": "test_sanitize_basic_auth_urls_same_line",
            "location": 45,
            "return": [],
            "arguments": {}
        }
    },
    "badwolf-master/tests/fixtures/bandit/a.py": {},
    "badwolf-master/tests/fixtures/flake8/a.py": {
        "add": {
            "name": "add",
            "location": 5,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        }
    },
    "badwolf-master/tests/fixtures/mypy/a.py": {
        "p": {
            "name": "p",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "badwolf-master/tests/fixtures/pycodestyle/a.py": {
        "add": {
            "name": "add",
            "location": 5,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        }
    },
    "badwolf-master/tests/fixtures/pylint/a.py": {
        "add": {
            "name": "add",
            "location": 5,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        }
    }
}
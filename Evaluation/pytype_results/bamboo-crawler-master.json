{
    "bamboo-crawler-master/setup.py": {},
    "bamboo-crawler-master/bamboo_crawler/cli.py": {
        "setup_logger": {
            "name": "setup_logger",
            "location": 12,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "debug": []
            }
        },
        "main": {
            "name": "main",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main_": {
            "name": "main_",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bamboo-crawler-master/bamboo_crawler/job.py": {
        "Job.run": {
            "name": "run",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Job._run": {
            "name": "_run",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Job.from_job_directive": {
            "name": "from_job_directive",
            "location": 29,
            "return": [
                "_TJob@@Job@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TJob]"
                ],
                "raw_directive": []
            }
        },
        "Job.filter_task_by_names": {
            "name": "filter_task_by_names",
            "location": 44,
            "return": [
                "_TJob@@Job@@"
            ],
            "arguments": {
                "self": [
                    "_TJob@@Job@@"
                ],
                "task_names": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/parser.py": {
        "parse_ordered_yaml": {
            "name": "parse_ordered_yaml",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "infile": []
            }
        },
        "parse_recipe": {
            "name": "parse_recipe",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "infile": [],
                "config": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/task.py": {
        "Task.do": {
            "name": "do",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/__init__.py": {},
    "bamboo-crawler-master/bamboo_crawler/__main__.py": {},
    "bamboo-crawler-master/bamboo_crawler/constants/__init__.py": {
        "ConstantInputter.read": {
            "name": "read",
            "location": 18,
            "return": [
                "bamboo_crawler.interfaces.context.Context[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NullDeserializer.deserialize": {
            "name": "deserialize",
            "location": 23,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        },
        "NullSerializer.serialize": {
            "name": "serialize",
            "location": 28,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0@@"
                ]
            }
        },
        "NullProcessor.process": {
            "name": "process",
            "location": 33,
            "return": [
                "Generator[(_T0, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0@@"
                ]
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/crawler/__init__.py": {
        "Crawler.process": {
            "name": "process",
            "location": 11,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Crawler.crawl": {
            "name": "crawl",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "HTTPCrawler.crawl": {
            "name": "crawl",
            "location": 26,
            "return": [
                "Generator[(bytes, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/directives/default.py": {},
    "bamboo-crawler-master/bamboo_crawler/directives/searcher.py": {
        "DirectiveSearcher.create": {
            "name": "create",
            "location": 24,
            "return": [
                "_TDirectiveSearcher@@DirectiveSearcher@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDirectiveSearcher]"
                ]
            }
        },
        "DirectiveSearcher.add_inputter": {
            "name": "add_inputter",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inputter": []
            }
        },
        "DirectiveSearcher.add_outputter": {
            "name": "add_outputter",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "outputter": []
            }
        },
        "DirectiveSearcher.add_deserializer": {
            "name": "add_deserializer",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "deserializer": []
            }
        },
        "DirectiveSearcher.add_processor": {
            "name": "add_processor",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "processor": []
            }
        },
        "DirectiveSearcher.add_serializer": {
            "name": "add_serializer",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "DirectiveSearcher.get_inputter": {
            "name": "get_inputter",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "directive": []
            }
        },
        "DirectiveSearcher.get_outputter": {
            "name": "get_outputter",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "directive": []
            }
        },
        "DirectiveSearcher.get_processor": {
            "name": "get_processor",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "directive": []
            }
        },
        "DirectiveSearcher.get_serializer": {
            "name": "get_serializer",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "directive": []
            }
        },
        "DirectiveSearcher.get_deserializer": {
            "name": "get_deserializer",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "directive": []
            }
        },
        "DirectiveSearcher.define_task": {
            "name": "define_task",
            "location": 61,
            "return": [
                "bamboo_crawler.task.Task"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "definitions": []
            }
        },
        "TypeDirective.from_raw": {
            "name": "from_raw",
            "location": 83,
            "return": [
                "_TTypeDirective@@TypeDirective@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTypeDirective]"
                ],
                "raw_directive": []
            }
        },
        "TaskDirective.from_raw": {
            "name": "from_raw",
            "location": 105,
            "return": [
                "_TTaskDirective@@TaskDirective@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTaskDirective]"
                ],
                "name": [],
                "raw_directive": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/directives/__init__.py": {},
    "bamboo-crawler-master/bamboo_crawler/file/__init__.py": {
        "FileInputter.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filepath": []
            }
        },
        "FileInputter.read": {
            "name": "read",
            "location": 11,
            "return": [
                "bamboo_crawler.interfaces.context.Context[nothing]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/gzip/__init__.py": {
        "GzipSerializer.serialize": {
            "name": "serialize",
            "location": 8,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "GzipDeserializer.deserialize": {
            "name": "deserialize",
            "location": 13,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/interfaces/context.py": {
        "Context.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": []
            }
        },
        "Context.add_metadata": {
            "name": "add_metadata",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/interfaces/deserializer.py": {
        "Deserializer.deserialize": {
            "name": "deserialize",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/interfaces/inputter.py": {
        "Inputter.read": {
            "name": "read",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Inputter.done": {
            "name": "done",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/interfaces/outputter.py": {
        "Outputter.write": {
            "name": "write",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/interfaces/processor.py": {
        "Processor.process": {
            "name": "process",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/interfaces/serializer.py": {
        "Serializer.serialize": {
            "name": "serialize",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/interfaces/__init__.py": {},
    "bamboo-crawler-master/bamboo_crawler/json/__init__.py": {
        "JSONSerializer.serialize": {
            "name": "serialize",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "JSONDeserializer.deserialize": {
            "name": "deserialize",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/python/__init__.py": {
        "PythonProcessor.__safe_eval": {
            "name": "__safe_eval",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "data": [],
                "metadata": []
            }
        },
        "PythonProcessor.process": {
            "name": "process",
            "location": 51,
            "return": [
                "Generator[(dict, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "PythonProcessor.__safe_eval.extract_digit": {
            "name": "extract_digit",
            "location": 16,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/scraper/__init__.py": {
        "Scraper.process": {
            "name": "process",
            "location": 13,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Scraper.scrape": {
            "name": "scrape",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "XPathScraper.scrape": {
            "name": "scrape",
            "location": 28,
            "return": [
                "Generator[(dict, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SingleXPathScraper.scrape": {
            "name": "scrape",
            "location": 40,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CSSSelectorScraper.scrape": {
            "name": "scrape",
            "location": 53,
            "return": [
                "Generator[(dict, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CSSSelectorScraper.__select": {
            "name": "__select",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "elements": [],
                "p_selector": []
            }
        },
        "MixedHTMLScraper.xpath_scraper": {
            "name": "xpath_scraper",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MixedHTMLScraper.cssselector_scraper": {
            "name": "cssselector_scraper",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MixedHTMLScraper.scrape": {
            "name": "scrape",
            "location": 92,
            "return": [
                "Generator[(Dict[(str, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "MixedHTMLScraper.__merge": {
            "name": "__merge",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/sql/__init__.py": {
        "SQLInputter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SQLInputter.read": {
            "name": "read",
            "location": 39,
            "return": [
                "bamboo_crawler.interfaces.context.Context[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SQLOutputter.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "SQLOutputter.write": {
            "name": "write",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/sqs_s3/__init__.py": {
        "SQSS3Inputter.queue": {
            "name": "queue",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SQSS3Inputter.bucket": {
            "name": "bucket",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SQSS3Inputter.read": {
            "name": "read",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SQSS3Inputter.__read_sqs": {
            "name": "__read_sqs",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SQSS3Inputter.__read_s3": {
            "name": "__read_s3",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "SQSS3Inputter.done": {
            "name": "done",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SQSS3Outputter.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "bucket_name": [],
                "queue_name": []
            }
        },
        "SQSS3Outputter.write": {
            "name": "write",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/bamboo_crawler/stdio/__init__.py": {
        "StdinInputter.read": {
            "name": "read",
            "location": 10,
            "return": [
                "bamboo_crawler.interfaces.context.Context[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StdoutOutputter.write": {
            "name": "write",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "bamboo-crawler-master/tests/__init__.py": {},
    "bamboo-crawler-master/tests/aws/test_aws.py": {
        "moto_environment": {
            "name": "moto_environment",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "moto_server_s3": {
            "name": "moto_server_s3",
            "location": 29,
            "return": [],
            "arguments": {
                "moto_environment": []
            }
        },
        "moto_server_sqs": {
            "name": "moto_server_sqs",
            "location": 51,
            "return": [],
            "arguments": {
                "moto_environment": []
            }
        },
        "run_recipe": {
            "name": "run_recipe",
            "location": 67,
            "return": [
                "subprocess.CompletedProcess[bytes]"
            ],
            "arguments": {
                "taskname": []
            }
        },
        "test_aws_inputter_and_outputter": {
            "name": "test_aws_inputter_and_outputter",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "moto_server_s3": [],
                "moto_server_sqs": []
            }
        }
    },
    "bamboo-crawler-master/tests/aws/__init__.py": {},
    "bamboo-crawler-master/tests/constants/test_constants.py": {
        "test_constant_inputter_command": {
            "name": "test_constant_inputter_command",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bamboo-crawler-master/tests/constants/__init__.py": {},
    "bamboo-crawler-master/tests/crawling/test_crawling.py": {
        "web_server_environment": {
            "name": "web_server_environment",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "target_web_server": {
            "name": "target_web_server",
            "location": 24,
            "return": [],
            "arguments": {
                "web_server_environment": []
            }
        },
        "test_crawling": {
            "name": "test_crawling",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "target_web_server": []
            }
        }
    },
    "bamboo-crawler-master/tests/crawling/__init__.py": {},
    "bamboo-crawler-master/tests/scraping/test_scraper.py": {
        "run_recipe": {
            "name": "run_recipe",
            "location": 5,
            "return": [
                "subprocess.CompletedProcess[bytes]"
            ],
            "arguments": {
                "taskname": []
            }
        },
        "test_mixed_scrape": {
            "name": "test_mixed_scrape",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_python_processor": {
            "name": "test_python_processor",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bamboo-crawler-master/tests/scraping/__init__.py": {},
    "bamboo-crawler-master/tests/sql/test_sql.py": {
        "database": {
            "name": "database",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "run_recipe": {
            "name": "run_recipe",
            "location": 26,
            "return": [
                "subprocess.CompletedProcess[bytes]"
            ],
            "arguments": {
                "taskname": []
            }
        },
        "test_test1": {
            "name": "test_test1",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "database": []
            }
        },
        "test_test2": {
            "name": "test_test2",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "database": []
            }
        },
        "test_test3": {
            "name": "test_test3",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "database": []
            }
        },
        "test_test4": {
            "name": "test_test4",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "database": []
            }
        }
    },
    "bamboo-crawler-master/tests/sql/__init__.py": {}
}
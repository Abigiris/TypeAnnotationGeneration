{
    "bankroll-master/setup.py": {},
    "bankroll-master/bankroll/analysis/analysis.py": {
        "normalizeSymbol": {
            "name": "normalizeSymbol",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "symbol": [
                    "str"
                ]
            }
        },
        "normalizeInstrument": {
            "name": "normalizeInstrument",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "instrument": []
            }
        },
        "activityAffectsSymbol": {
            "name": "activityAffectsSymbol",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "activity": [],
                "symbol": [
                    "str"
                ]
            }
        },
        "realizedBasisForSymbol": {
            "name": "realizedBasisForSymbol",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "symbol": [
                    "str"
                ],
                "activity": [
                    "Iterable"
                ]
            }
        },
        "timelineForSymbol": {
            "name": "timelineForSymbol",
            "location": 116,
            "return": [
                "Iterable[TimelineEntry]"
            ],
            "arguments": {
                "symbol": [
                    "str"
                ],
                "a": [
                    "Iterable"
                ]
            }
        },
        "liveValuesForPositions": {
            "name": "liveValuesForPositions",
            "location": 147,
            "return": [
                "dict"
            ],
            "arguments": {
                "positions": [
                    "Iterable"
                ],
                "dataProvider": [],
                "progressBar": []
            }
        },
        "deduplicatePositions": {
            "name": "deduplicatePositions",
            "location": 185,
            "return": [
                "Iterable"
            ],
            "arguments": {
                "positions": [
                    "Iterable"
                ]
            }
        },
        "currencyConversionRates": {
            "name": "currencyConversionRates",
            "location": 200,
            "return": [
                "Iterable[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "quoteCurrency": [],
                "otherCurrencies": [
                    "Iterable"
                ],
                "dataProvider": []
            }
        },
        "convertCashToCurrency": {
            "name": "convertCashToCurrency",
            "location": 233,
            "return": [
                "Any"
            ],
            "arguments": {
                "quoteCurrency": [],
                "cash": [
                    "Sequence"
                ],
                "dataProvider": []
            }
        },
        "realizedBasisForSymbol.f": {
            "name": "f",
            "location": 82,
            "return": [],
            "arguments": {
                "basis": [],
                "activity": []
            }
        },
        "TimelineEntry.__str__": {
            "name": "__str__",
            "location": 99,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "liveValuesForPositions.priceFromQuote": {
            "name": "priceFromQuote",
            "location": 152,
            "return": [],
            "arguments": {
                "q": [],
                "p": []
            }
        }
    },
    "bankroll-master/bankroll/analysis/portfolio.py": {
        "etf": {
            "name": "etf",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "portfolio": [],
                "timezone": [
                    "str"
                ]
            }
        },
        "portfolio_to_returns": {
            "name": "portfolio_to_returns",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "portfolio": [],
                "timezone": [
                    "str"
                ]
            }
        },
        "prices_to_daily_returns": {
            "name": "prices_to_daily_returns",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "prices": []
            }
        },
        "positions_to_dataframe": {
            "name": "positions_to_dataframe",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "positions": [
                    "Iterable"
                ]
            }
        },
        "positions_to_returns": {
            "name": "positions_to_returns",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "provider": [],
                "positions": [
                    "Iterable"
                ],
                "timezone": [
                    "str"
                ]
            }
        },
        "positions_and_history_to_returns": {
            "name": "positions_and_history_to_returns",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "frame": [],
                "historical_data": [
                    "list"
                ],
                "timezone": [
                    "str"
                ]
            }
        },
        "positions_to_portfolio": {
            "name": "positions_to_portfolio",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "frame": [],
                "historical_data": [
                    "list"
                ],
                "timezone": [
                    "str"
                ]
            }
        },
        "positions_to_history": {
            "name": "positions_to_history",
            "location": 121,
            "return": [
                "Tuple[(list, Any, list)]"
            ],
            "arguments": {
                "provider": [],
                "positions": [
                    "Iterable"
                ],
                "frame": []
            }
        },
        "holdings": {
            "name": "holdings",
            "location": 153,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "val": [],
                "holds": [],
                "i": [],
                "t": [
                    "int"
                ],
                "aum_t": [
                    "decimal.Decimal"
                ]
            }
        },
        "delta": {
            "name": "delta",
            "location": 183,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "val": [],
                "i": [
                    "str"
                ],
                "t": [
                    "int"
                ]
            }
        },
        "stocks_to_portfolio": {
            "name": "stocks_to_portfolio",
            "location": 195,
            "return": [
                "Any"
            ],
            "arguments": {
                "components": [
                    "Dict[(str, Any)]"
                ],
                "weights": [
                    "Dict[(str, float)]"
                ]
            }
        }
    },
    "bankroll-master/bankroll/analysis/__init__.py": {},
    "bankroll-master/bankroll/interface/brokers.py": {},
    "bankroll-master/bankroll/interface/configuration.py": {
        "loadConfig": {
            "name": "loadConfig",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "searchPaths": [
                    "Iterable[str]"
                ]
            }
        },
        "marketDataProvider": {
            "name": "marketDataProvider",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "accounts": []
            }
        }
    },
    "bankroll-master/bankroll/interface/__init__.py": {},
    "bankroll-master/bankroll/interface/__main__.py": {
        "printPositions": {
            "name": "printPositions",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "accounts": [],
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "printActivity": {
            "name": "printActivity",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "accounts": [],
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "printBalances": {
            "name": "printBalances",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "accounts": [],
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "symbolTimeline": {
            "name": "symbolTimeline",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "accounts": [],
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "bankroll-master/tests/helpers.py": {
        "optionals": {
            "name": "optionals",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "inner": []
            }
        },
        "cashAmounts": {
            "name": "cashAmounts",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "min_value": [
                    "decimal.Decimal"
                ],
                "max_value": [
                    "decimal.Decimal"
                ]
            }
        },
        "positionQuantities": {
            "name": "positionQuantities",
            "location": 71,
            "return": [
                "Any"
            ],
            "arguments": {
                "min_value": [
                    "decimal.Decimal"
                ],
                "max_value": [
                    "decimal.Decimal"
                ],
                "allow_zero": [
                    "bool"
                ]
            }
        },
        "multipliers": {
            "name": "multipliers",
            "location": 86,
            "return": [
                "Any"
            ],
            "arguments": {
                "min_value": [
                    "decimal.Decimal"
                ],
                "max_value": [
                    "decimal.Decimal"
                ]
            }
        },
        "strikes": {
            "name": "strikes",
            "location": 94,
            "return": [
                "Any"
            ],
            "arguments": {
                "min_value": [
                    "decimal.Decimal"
                ],
                "max_value": [
                    "decimal.Decimal"
                ]
            }
        },
        "cash": {
            "name": "cash",
            "location": 102,
            "return": [
                "Any"
            ],
            "arguments": {
                "currency": [],
                "quantity": []
            }
        },
        "exchanges": {
            "name": "exchanges",
            "location": 109,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "bonds": {
            "name": "bonds",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "symbol": [],
                "currency": [],
                "exchange": []
            }
        },
        "stocks": {
            "name": "stocks",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "symbol": [],
                "currency": [],
                "exchange": []
            }
        },
        "options": {
            "name": "options",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "underlying": [],
                "currency": [],
                "optionType": [],
                "expiration": [],
                "strike": [],
                "multiplier": [],
                "exchange": []
            }
        },
        "futuresOptions": {
            "name": "futuresOptions",
            "location": 150,
            "return": [
                "Any"
            ],
            "arguments": {
                "symbol": [],
                "underlying": [],
                "currency": [],
                "optionType": [],
                "expiration": [],
                "strike": [],
                "multiplier": [],
                "exchange": []
            }
        },
        "futures": {
            "name": "futures",
            "location": 173,
            "return": [
                "Any"
            ],
            "arguments": {
                "symbol": [],
                "currency": [],
                "multiplier": [],
                "exchange": []
            }
        },
        "forex": {
            "name": "forex",
            "location": 188,
            "return": [
                "Any"
            ],
            "arguments": {
                "baseCurrency": [],
                "quoteCurrency": [],
                "exchange": []
            }
        },
        "instruments": {
            "name": "instruments",
            "location": 198,
            "return": [
                "Any"
            ],
            "arguments": {
                "currency": [],
                "exchange": []
            }
        },
        "positions": {
            "name": "positions",
            "location": 218,
            "return": [
                "Any"
            ],
            "arguments": {
                "instrument": [],
                "quantity": [],
                "costBasis": []
            }
        },
        "dividendPayments": {
            "name": "dividendPayments",
            "location": 228,
            "return": [
                "Any"
            ],
            "arguments": {
                "date": [],
                "stock": [],
                "proceeds": []
            }
        },
        "trades": {
            "name": "trades",
            "location": 236,
            "return": [
                "Any"
            ],
            "arguments": {
                "date": [],
                "instrument": [],
                "quantity": [],
                "amount": [],
                "fees": [],
                "flags": []
            }
        },
        "activity": {
            "name": "activity",
            "location": 255,
            "return": [
                "Any"
            ],
            "arguments": {
                "date": []
            }
        },
        "quotes": {
            "name": "quotes",
            "location": 259,
            "return": [
                "Any"
            ],
            "arguments": {
                "bid": [],
                "ask": [],
                "last": [],
                "close": [],
                "grow_ask": [
                    "bool"
                ]
            }
        },
        "uniformCurrencyQuotes": {
            "name": "uniformCurrencyQuotes",
            "location": 277,
            "return": [
                "Any"
            ],
            "arguments": {
                "currency": [],
                "bid": [],
                "ask": [],
                "last": [],
                "close": [],
                "grow_ask": [
                    "bool"
                ]
            }
        },
        "accountBalances": {
            "name": "accountBalances",
            "location": 296,
            "return": [
                "Any"
            ],
            "arguments": {
                "currencies": [],
                "quantities": []
            }
        },
        "cashUSD": {
            "name": "cashUSD",
            "location": 400,
            "return": [
                "Any"
            ],
            "arguments": {
                "amount": [
                    "decimal.Decimal"
                ]
            }
        },
        "splitAndStripCSVString": {
            "name": "splitAndStripCSVString",
            "location": 404,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "s": [
                    "str"
                ]
            }
        }
    },
    "bankroll-master/tests/test_analysis.py": {
        "tradesForAmounts": {
            "name": "tradesForAmounts",
            "location": 56,
            "return": [],
            "arguments": {
                "draw": [],
                "symbol": [],
                "amounts": []
            }
        },
        "positionAndQuote": {
            "name": "positionAndQuote",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "instrument": []
            }
        },
        "StubDataProvider.__init__": {
            "name": "__init__",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "quotes": [
                    "dict"
                ]
            }
        },
        "StubDataProvider.fetchQuotes": {
            "name": "fetchQuotes",
            "location": 108,
            "return": [
                "Iterable[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "self": [],
                "instruments": [
                    "Iterable"
                ]
            }
        },
        "TestAnalysis.test_realizedBasis": {
            "name": "test_realizedBasis",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnalysis.test_realizedBasisWithCashDividend": {
            "name": "test_realizedBasisWithCashDividend",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnalysis.test_realizedBasisWithReinvestedDividend": {
            "name": "test_realizedBasisWithReinvestedDividend",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnalysis.test_normalizeSymbol": {
            "name": "test_normalizeSymbol",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "symbol": []
            }
        },
        "TestAnalysis.test_normalizeStockMatchesSymbolNormalization": {
            "name": "test_normalizeStockMatchesSymbolNormalization",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "instrument": []
            }
        },
        "TestAnalysis.test_normalizeOptionMatchesSymbolNormalization": {
            "name": "test_normalizeOptionMatchesSymbolNormalization",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "instrument": []
            }
        },
        "TestAnalysis.test_realizedBasisWithSeparatedSymbol": {
            "name": "test_realizedBasisWithSeparatedSymbol",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "symbols": []
            }
        },
        "TestAnalysis.test_realizedBasisMissing": {
            "name": "test_realizedBasisMissing",
            "location": 276,
            "return": [],
            "arguments": {
                "self": [],
                "trades": []
            }
        },
        "TestAnalysis.test_realizedBasisOfOneTradeEqualsCostBasis": {
            "name": "test_realizedBasisOfOneTradeEqualsCostBasis",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "TestAnalysis.test_realizedBasisAddsUp": {
            "name": "test_realizedBasisAddsUp",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "TestAnalysis.test_liveValuesForPositions": {
            "name": "test_liveValuesForPositions",
            "location": 312,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "TestAnalysis.test_deduplicatePositions": {
            "name": "test_deduplicatePositions",
            "location": 347,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "TestAnalysis.test_currencyConversionRatesGBP": {
            "name": "test_currencyConversionRatesGBP",
            "location": 375,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnalysis.test_currencyConversionRatesUSD": {
            "name": "test_currencyConversionRatesUSD",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnalysis.test_convertCash": {
            "name": "test_convertCash",
            "location": 413,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnalysis.test_timelineForSymbol": {
            "name": "test_timelineForSymbol",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bankroll-master/tests/test_configuration.py": {
        "TestConfiguration.setUp": {
            "name": "setUp",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfiguration.testDefaultSettings": {
            "name": "testDefaultSettings",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfiguration.testNamespacedSettingsDoNotClobberEachOther": {
            "name": "testNamespacedSettingsDoNotClobberEachOther",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConfiguration.testSettingsListedInDefaultINI": {
            "name": "testSettingsListedInDefaultINI",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "bankroll-master/tests/__init__.py": {}
}
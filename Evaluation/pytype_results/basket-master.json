{
    "basket-master/setup.py": {},
    "basket-master/basket/helpers.py": {
        "pairs": {
            "name": "pairs",
            "location": 4,
            "return": [
                "Iterator[nothing]"
            ],
            "arguments": {
                "iterable": []
            }
        }
    },
    "basket-master/basket/item_counter.py": {
        "ItemCounter.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ItemCounter.rides": {
            "name": "rides",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ItemCounter.process_ride": {
            "name": "process_ride",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ride": [
                    "basket.ride.Ride"
                ]
            }
        },
        "ItemCounter.print_items_per_interval": {
            "name": "print_items_per_interval",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ItemCounter._items_per_interval": {
            "name": "_items_per_interval",
            "location": 35,
            "return": [
                "List[Tuple[(_datetime.datetime, _datetime.datetime, List[Tuple[(str, int)]])]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ItemCounter._items_per_start_and_end_time": {
            "name": "_items_per_start_and_end_time",
            "location": 45,
            "return": [
                "Tuple[(Dict[(_datetime.datetime, Dict[(str, int)])], Dict[(_datetime.datetime, Dict[(str, int)])])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ItemCounter._sorted_timestamps": {
            "name": "_sorted_timestamps",
            "location": 55,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "start_times": [],
                "end_times": []
            }
        },
        "ItemCounter._format_items": {
            "name": "_format_items",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "ItemCounter._format_item_count": {
            "name": "_format_item_count",
            "location": 62,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str"
                ],
                "count": [
                    "int"
                ]
            }
        }
    },
    "basket-master/basket/ride.py": {},
    "basket-master/basket/__init__.py": {},
    "basket-master/basket/tests/test_helpers.py": {
        "test_pairs": {
            "name": "test_pairs",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "basket-master/basket/tests/test_item_counter.py": {
        "item_counter": {
            "name": "item_counter",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "rides": {
            "name": "rides",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "populate_item_counter": {
            "name": "populate_item_counter",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "item_counter": [
                    "basket.item_counter.ItemCounter"
                ],
                "rides": [
                    "List[basket.ride.Ride]"
                ]
            }
        },
        "test_item_counter": {
            "name": "test_item_counter",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "item_counter": [
                    "basket.item_counter.ItemCounter"
                ]
            }
        },
        "test_process_ride": {
            "name": "test_process_ride",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "item_counter": [
                    "basket.item_counter.ItemCounter"
                ],
                "rides": [
                    "List[basket.ride.Ride]"
                ]
            }
        },
        "test_items_per_interval": {
            "name": "test_items_per_interval",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "item_counter": [
                    "basket.item_counter.ItemCounter"
                ],
                "rides": [
                    "List[basket.ride.Ride]"
                ]
            }
        },
        "test_print_items_per_interval": {
            "name": "test_print_items_per_interval",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "item_counter": [
                    "basket.item_counter.ItemCounter"
                ],
                "rides": [
                    "List[basket.ride.Ride]"
                ]
            }
        }
    },
    "basket-master/basket/tests/test_ride.py": {
        "test_ride": {
            "name": "test_ride",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "basket-master/basket/tests/__init__.py": {}
}
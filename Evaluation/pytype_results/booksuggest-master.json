{
    "booksuggest-master/setup.py": {},
    "booksuggest-master/app/app.py": {
        "serve_layout": {
            "name": "serve_layout",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "display_reviewed_books": {
            "name": "display_reviewed_books",
            "location": 165,
            "return": [],
            "arguments": {
                "selected_user_id": []
            }
        },
        "display_cf_recommendations": {
            "name": "display_cf_recommendations",
            "location": 182,
            "return": [],
            "arguments": {
                "model": [],
                "selected_user_id": []
            }
        },
        "display_cb_recommendation": {
            "name": "display_cb_recommendation",
            "location": 217,
            "return": [],
            "arguments": {
                "model": [],
                "selected_book_id": []
            }
        }
    },
    "booksuggest-master/app/components.py": {
        "get_goodreads_url": {
            "name": "get_goodreads_url",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "goodreads_id": []
            }
        },
        "get_book_ratings": {
            "name": "get_book_ratings",
            "location": 63,
            "return": [
                "dict"
            ],
            "arguments": {
                "user_data": [],
                "selected_user_id": []
            }
        },
        "books_to_dropdown": {
            "name": "books_to_dropdown",
            "location": 76,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "book_data": []
            }
        },
        "models_to_dropdown": {
            "name": "models_to_dropdown",
            "location": 88,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "models": []
            }
        },
        "users_to_dropdown": {
            "name": "users_to_dropdown",
            "location": 99,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "user_data": []
            }
        },
        "render_book": {
            "name": "render_book",
            "location": 111,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_data": [],
                "extra_html": []
            }
        },
        "create_books_layout": {
            "name": "create_books_layout",
            "location": 146,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_data": [],
                "selected_books": [],
                "extra_html_label": [],
                "extra_html_color": []
            }
        },
        "_create_extra_html": {
            "name": "_create_extra_html",
            "location": 164,
            "return": [
                "Any"
            ],
            "arguments": {
                "label": [],
                "value": [],
                "color": []
            }
        }
    },
    "booksuggest-master/app/resources.py": {
        "get_model": {
            "name": "get_model",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "filename": []
            }
        },
        "read_models_from_dir": {
            "name": "read_models_from_dir",
            "location": 23,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "models_dir": []
            }
        }
    },
    "booksuggest-master/booksuggest/__init__.py": {},
    "booksuggest-master/booksuggest/data/clean_book.py": {
        "extract_book_extra_info": {
            "name": "extract_book_extra_info",
            "location": 13,
            "return": [
                "list"
            ],
            "arguments": {
                "xmls_dir": []
            }
        },
        "_extract_book_info": {
            "name": "_extract_book_info",
            "location": 27,
            "return": [
                "Tuple[(int, Any, Any)]"
            ],
            "arguments": {
                "book": []
            }
        },
        "process_book_extra_info": {
            "name": "process_book_extra_info",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_extra_info_rows": []
            }
        },
        "merge_book_data": {
            "name": "merge_book_data",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_df": [],
                "book_extra_info_df": []
            }
        },
        "main": {
            "name": "main",
            "location": 85,
            "return": [],
            "arguments": {
                "book_filepath": [],
                "books_xml_dir": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/clean_book_tags.py": {
        "switch_to_book_id": {
            "name": "switch_to_book_id",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_df": [],
                "book_tags_df": []
            }
        },
        "filter_non_genres_tags": {
            "name": "filter_non_genres_tags",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "tags_df": [],
                "genres": []
            }
        },
        "join_tag_names": {
            "name": "join_tag_names",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_tags_df": [],
                "tags_df": []
            }
        },
        "main": {
            "name": "main",
            "location": 70,
            "return": [],
            "arguments": {
                "book_filepath": [],
                "book_tags_filepath": [],
                "tags_filepath": [],
                "genres_filepath": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/clean_to_read.py": {
        "main": {
            "name": "main",
            "location": 11,
            "return": [],
            "arguments": {
                "to_read_filepath": [],
                "ratings_trainset_filepath": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/download_dataset.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [],
            "arguments": {
                "download_url": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/extract_xml_files.py": {
        "main": {
            "name": "main",
            "location": 12,
            "return": [],
            "arguments": {
                "xml_archive_path": [],
                "output_dir": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/minify_dataframe.py": {
        "main": {
            "name": "main",
            "location": 10,
            "return": [],
            "arguments": {
                "dataframe_filepath": [],
                "n": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/prepare_description.py": {
        "clean_single_description": {
            "name": "clean_single_description",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "description": [],
                "remove_proper_nouns": []
            }
        },
        "clean_descriptions": {
            "name": "clean_descriptions",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "input_filepath": [],
                "remove_proper_nouns": []
            }
        },
        "main": {
            "name": "main",
            "location": 89,
            "return": [],
            "arguments": {
                "input_filepath": [],
                "output_filepath": [],
                "remove_nouns": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/prepare_similar_books.py": {
        "extract_similar_books": {
            "name": "extract_similar_books",
            "location": 13,
            "return": [
                "List[Tuple[(int, int)]]"
            ],
            "arguments": {
                "xmls_dir": []
            }
        },
        "_extract_similar_books": {
            "name": "_extract_similar_books",
            "location": 30,
            "return": [
                "List[Tuple[(int, int)]]"
            ],
            "arguments": {
                "book": []
            }
        },
        "process_similar_books": {
            "name": "process_similar_books",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "similar_books_rows": []
            }
        },
        "switch_to_book_id": {
            "name": "switch_to_book_id",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "similar_books_df": [],
                "book_df": []
            }
        },
        "main": {
            "name": "main",
            "location": 93,
            "return": [],
            "arguments": {
                "books_xml_dir": [],
                "books_filepath": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/ratings_train_test_split.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [],
            "arguments": {
                "ratings_filepath": [],
                "trainset_filepath": [],
                "testset_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/xml_parser.py": {
        "extract_all_book_xml_roots": {
            "name": "extract_all_book_xml_roots",
            "location": 11,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "xmls_dir": []
            }
        },
        "_extract_book_element": {
            "name": "_extract_book_element",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "filename": []
            }
        }
    },
    "booksuggest-master/booksuggest/data/__init__.py": {},
    "booksuggest-master/booksuggest/evaluation/cb_evaluation.py": {
        "calculate_scores": {
            "name": "calculate_scores",
            "location": 17,
            "return": [
                "list"
            ],
            "arguments": {
                "dir_path": [],
                "test_cases": [],
                "rec_count": []
            }
        },
        "calculate_single_score": {
            "name": "calculate_single_score",
            "location": 41,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "prediction_file": [],
                "test_cases": [],
                "rec_count": []
            }
        },
        "read_similar_books": {
            "name": "read_similar_books",
            "location": 77,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "similar_books_filepath": []
            }
        },
        "main": {
            "name": "main",
            "location": 104,
            "return": [],
            "arguments": {
                "input_directory": [],
                "similar_books_input": [],
                "rec_count": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/evaluation/cb_predict_models.py": {
        "_read_test_cases": {
            "name": "_read_test_cases",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "test_cases_filepath": []
            }
        },
        "predict_model": {
            "name": "predict_model",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "model": [],
                "test_cases": [],
                "rec_count": []
            }
        },
        "main": {
            "name": "main",
            "location": 74,
            "return": [],
            "arguments": {
                "model_filepath": [],
                "test_cases_filepath": [],
                "rec_count": [],
                "output_filepath": []
            }
        },
        "predict_model.recommend_helper": {
            "name": "recommend_helper",
            "location": 56,
            "return": [],
            "arguments": {
                "model": [],
                "test_case_id": [],
                "rec_count": []
            }
        }
    },
    "booksuggest-master/booksuggest/evaluation/cf_accuracy_evaluation.py": {
        "test_accuracy": {
            "name": "test_accuracy",
            "location": 13,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {
                "model": [],
                "testset_filepath": []
            }
        },
        "main": {
            "name": "main",
            "location": 41,
            "return": [],
            "arguments": {
                "models_dir": [],
                "testset_filepath": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/evaluation/cf_effectiveness_evaluation.py": {
        "evaluate_on_predictions": {
            "name": "evaluate_on_predictions",
            "location": 11,
            "return": [
                "tuple"
            ],
            "arguments": {
                "predictions_df": [],
                "test_df": [],
                "threshold": [],
                "n": []
            }
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [],
            "arguments": {
                "predictions_dir": [],
                "to_read_filepath": [],
                "testset_filepath": [],
                "threshold": [],
                "n_min": [],
                "n_max": [],
                "output_filepath": []
            }
        },
        "evaluate_on_predictions.evaluate": {
            "name": "evaluate",
            "location": 28,
            "return": [],
            "arguments": {
                "group": []
            }
        }
    },
    "booksuggest-master/booksuggest/evaluation/cf_grid_search.py": {
        "knn_grid_search": {
            "name": "knn_grid_search",
            "location": 17,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "dataset": [],
                "random_state": []
            }
        },
        "svd_grid_search": {
            "name": "svd_grid_search",
            "location": 42,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "dataset": [],
                "random_state": []
            }
        },
        "_perform_grid_search": {
            "name": "_perform_grid_search",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "algo_class": [],
                "param_grid": [],
                "dataset": [],
                "random_state": []
            }
        },
        "_minify_dataset": {
            "name": "_minify_dataset",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "ratings_df": [],
                "random_state": []
            }
        },
        "main": {
            "name": "main",
            "location": 90,
            "return": [],
            "arguments": {
                "ratings_filepath": [],
                "output_filepath": [],
                "model": [],
                "random_state": [],
                "use_subset": []
            }
        }
    },
    "booksuggest-master/booksuggest/evaluation/cf_predict_models.py": {
        "predict_model": {
            "name": "predict_model",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "model": [],
                "recommendation_count": [],
                "chunks_count": [],
                "batch_size": []
            }
        },
        "_chunk_users": {
            "name": "_chunk_users",
            "location": 43,
            "return": [
                "list"
            ],
            "arguments": {
                "users": [],
                "chunks_count": []
            }
        },
        "_process_chunk": {
            "name": "_process_chunk",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "users": [],
                "model": [],
                "recommendation_count": [],
                "batch_size": []
            }
        },
        "_predict_batch": {
            "name": "_predict_batch",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "model": [],
                "cases_batch": [],
                "recommendation_count": []
            }
        },
        "_batch": {
            "name": "_batch",
            "location": 73,
            "return": [
                "Generator[(itertools.chain, Any, None)]"
            ],
            "arguments": {
                "iterable": [],
                "batch_size": []
            }
        },
        "main": {
            "name": "main",
            "location": 90,
            "return": [],
            "arguments": {
                "model_filepath": [],
                "output_filepath": [],
                "n": [],
                "chunks_count": []
            }
        }
    },
    "booksuggest-master/booksuggest/evaluation/metrics.py": {
        "precision": {
            "name": "precision",
            "location": 7,
            "return": [
                "Union[(float, int)]"
            ],
            "arguments": {
                "recommendations": [],
                "ground_truth": []
            }
        },
        "recall": {
            "name": "recall",
            "location": 22,
            "return": [
                "Union[(float, int)]"
            ],
            "arguments": {
                "recommendations": [],
                "ground_truth": []
            }
        },
        "precision_thresholded": {
            "name": "precision_thresholded",
            "location": 37,
            "return": [
                "Union[(float, int)]"
            ],
            "arguments": {
                "recommendations": [],
                "ground_truth": [],
                "threshold": []
            }
        },
        "recall_thresholded": {
            "name": "recall_thresholded",
            "location": 56,
            "return": [
                "Union[(float, int)]"
            ],
            "arguments": {
                "recommendations": [],
                "ground_truth": [],
                "threshold": []
            }
        }
    },
    "booksuggest-master/booksuggest/evaluation/__init__.py": {},
    "booksuggest-master/booksuggest/features/build_tag_features.py": {
        "build_all_tag_features": {
            "name": "build_all_tag_features",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_tags": [],
                "tags": []
            }
        },
        "build_tag_features": {
            "name": "build_tag_features",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "book_tags": [],
                "tags": []
            }
        },
        "check_book_tags_and_tags_compatibility": {
            "name": "check_book_tags_and_tags_compatibility",
            "location": 65,
            "return": [
                "bool"
            ],
            "arguments": {
                "book_tags": [],
                "tags": []
            }
        },
        "validate_book_tags_data": {
            "name": "validate_book_tags_data",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "book_tags": []
            }
        },
        "validate_tags_data": {
            "name": "validate_tags_data",
            "location": 111,
            "return": [
                "bool"
            ],
            "arguments": {
                "tags": []
            }
        },
        "main": {
            "name": "main",
            "location": 127,
            "return": [],
            "arguments": {
                "book_tags_filepath": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/features/__init__.py": {},
    "booksuggest-master/booksuggest/models/cb_recommend_models.py": {
        "ICbRecommendationModel.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ICbRecommendationModel._is_trained": {
            "name": "_is_trained",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ICbRecommendationModel.train": {
            "name": "train",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_data": []
            }
        },
        "ICbRecommendationModel.recommend": {
            "name": "recommend",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_id": [],
                "rec_count": []
            }
        },
        "ContentBasedRecommendationModel.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content_analyzer": [],
                "recommendation_count": []
            }
        },
        "ContentBasedRecommendationModel.train": {
            "name": "train",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "book_data": []
            }
        },
        "ContentBasedRecommendationModel.recommend": {
            "name": "recommend",
            "location": 92,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "book_id": [],
                "rec_count": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/cf_knn_models.py": {
        "main": {
            "name": "main",
            "location": 12,
            "return": [],
            "arguments": {
                "input_filepath": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/cf_recommend_models.py": {
        "ICfRecommendationModel.users": {
            "name": "users",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ICfRecommendationModel.recommend": {
            "name": "recommend",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user_id": [],
                "recommendations_count": []
            }
        },
        "ICfRecommendationModel.test": {
            "name": "test",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ratings": []
            }
        },
        "ICfRecommendationModel.generate_antitest_set": {
            "name": "generate_antitest_set",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SurpriseBasedModel.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_filepath": []
            }
        },
        "SurpriseBasedModel._read_trainset": {
            "name": "_read_trainset",
            "location": 88,
            "return": [
                "Any"
            ],
            "arguments": {
                "input_filepath": []
            }
        },
        "SurpriseBasedModel.test": {
            "name": "test",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ratings": []
            }
        },
        "SurpriseBasedModel.recommend": {
            "name": "recommend",
            "location": 101,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "user_id": [],
                "recommendations_count": []
            }
        },
        "SurpriseBasedModel.users": {
            "name": "users",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SurpriseBasedModel.generate_antitest_set": {
            "name": "generate_antitest_set",
            "location": 123,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "users_ids": []
            }
        },
        "SurpriseBasedModel._generate_antitest": {
            "name": "_generate_antitest",
            "location": 127,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "user_id": []
            }
        },
        "SlopeOneRecommendationModel.train": {
            "name": "train",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SvdRecommendationModel.train": {
            "name": "train",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "random_state": []
            }
        },
        "KNNRecommendationModel.train": {
            "name": "train",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/cf_slopeone_models.py": {
        "main": {
            "name": "main",
            "location": 12,
            "return": [],
            "arguments": {
                "input_filepath": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/cf_svd_models.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [],
            "arguments": {
                "input_filepath": [],
                "random_state": [],
                "output_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/content_analyzer.py": {
        "IContentAnalyzer.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IContentAnalyzer._has_built_features": {
            "name": "_has_built_features",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IContentAnalyzer.build_features": {
            "name": "build_features",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_data": []
            }
        },
        "IContentAnalyzer.get_feature_vector": {
            "name": "get_feature_vector",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_id": []
            }
        },
        "TextBasedContentAnalyzer.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text_feature_extractor": []
            }
        },
        "TextBasedContentAnalyzer.build_features": {
            "name": "build_features",
            "location": 69,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_data": []
            }
        },
        "TextBasedContentAnalyzer.get_feature_vector": {
            "name": "get_feature_vector",
            "location": 75,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_id": []
            }
        },
        "TagBasedContentAnalyzer.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_features": []
            }
        },
        "TagBasedContentAnalyzer.build_features": {
            "name": "build_features",
            "location": 97,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_data": []
            }
        },
        "TagBasedContentAnalyzer.get_feature_vector": {
            "name": "get_feature_vector",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_id": []
            }
        },
        "EnsembledContentAnalyzer.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content_analyzers": []
            }
        },
        "EnsembledContentAnalyzer.build_features": {
            "name": "build_features",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_data": []
            }
        },
        "EnsembledContentAnalyzer.get_feature_vector": {
            "name": "get_feature_vector",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "book_id": []
            }
        },
        "TextAndTagBasedContentAnalyzer.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text_feature_extractor": [],
                "tag_features": []
            }
        },
        "ContentAnalyzerBuilder.__init__": {
            "name": "__init__",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "ngrams": [],
                "tag_features": []
            }
        },
        "ContentAnalyzerBuilder._validate_config": {
            "name": "_validate_config",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContentAnalyzerBuilder.build_content_analyzer": {
            "name": "build_content_analyzer",
            "location": 198,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/load_models.py": {
        "load_model": {
            "name": "load_model",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "model_file_path": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/model_exceptions.py": {},
    "booksuggest-master/booksuggest/models/train_cb_models.py": {
        "main": {
            "name": "main",
            "location": 23,
            "return": [],
            "arguments": {
                "input_filepath": [],
                "output_filepath": [],
                "rec_count": [],
                "ngrams": [],
                "name": [],
                "tag_features_filepath": []
            }
        }
    },
    "booksuggest-master/booksuggest/models/__init__.py": {},
    "booksuggest-master/booksuggest/utils/csv_utils.py": {
        "save_csv": {
            "name": "save_csv",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [],
                "filepath": [],
                "fieldnames": []
            }
        }
    },
    "booksuggest-master/booksuggest/utils/logging.py": {
        "setup_root_logger": {
            "name": "setup_root_logger",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "booksuggest-master/booksuggest/utils/serialization.py": {
        "save_object": {
            "name": "save_object",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "filename": []
            }
        },
        "read_object": {
            "name": "read_object",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "filename": []
            }
        }
    },
    "booksuggest-master/booksuggest/utils/__init__.py": {},
    "booksuggest-master/docs/conf.py": {},
    "booksuggest-master/tests/build_tag_features_test.py": {
        "test_build_all_tag_features": {
            "name": "test_build_all_tag_features",
            "location": 16,
            "return": [],
            "arguments": {
                "book_tags": [],
                "tags": [],
                "expected": []
            }
        },
        "test_build_tag_features": {
            "name": "test_build_tag_features",
            "location": 28,
            "return": [],
            "arguments": {
                "book_tags": [],
                "tags": [],
                "expected": []
            }
        },
        "test_validate_book_tags_data": {
            "name": "test_validate_book_tags_data",
            "location": 49,
            "return": [],
            "arguments": {
                "book_tags": [],
                "expected": []
            }
        },
        "test_validate_tags_data": {
            "name": "test_validate_tags_data",
            "location": 65,
            "return": [],
            "arguments": {
                "tags": [],
                "expected": []
            }
        }
    },
    "booksuggest-master/tests/cb_evaluation_test.py": {
        "test_read_similar_books": {
            "name": "test_read_similar_books",
            "location": 18,
            "return": [],
            "arguments": {
                "similar_books_filepath": [],
                "expected": []
            }
        },
        "test_calculate_single_score": {
            "name": "test_calculate_single_score",
            "location": 31,
            "return": [],
            "arguments": {
                "prediction_file": [],
                "test_cases": [],
                "expected": []
            }
        }
    },
    "booksuggest-master/tests/cf_evaluation_test.py": {
        "test_to_read_evaluation": {
            "name": "test_to_read_evaluation",
            "location": 15,
            "return": [],
            "arguments": {
                "predictions_filepath": [],
                "to_read_filepath": [],
                "expected": []
            }
        }
    },
    "booksuggest-master/tests/cf_predictions_test.py": {
        "test_generate_antitest": {
            "name": "test_generate_antitest",
            "location": 13,
            "return": [],
            "arguments": {
                "ratings_filepath": [],
                "expected": []
            }
        },
        "test_users_chunking": {
            "name": "test_users_chunking",
            "location": 23,
            "return": [],
            "arguments": {
                "ratings_filepath": [],
                "chunks_count": [],
                "expected": []
            }
        },
        "test_users_chunking_pipeline": {
            "name": "test_users_chunking_pipeline",
            "location": 31,
            "return": [],
            "arguments": {
                "ratings_filepath": [],
                "expected": []
            }
        }
    },
    "booksuggest-master/tests/content_analyzer_test.py": {
        "create_mock_text_feature_extractor": {
            "name": "create_mock_text_feature_extractor",
            "location": 27,
            "return": [
                "unittest.mock.Mock"
            ],
            "arguments": {}
        },
        "test_content_analyzers": {
            "name": "test_content_analyzers",
            "location": 69,
            "return": [],
            "arguments": {
                "book_data": [],
                "content_analyzer": [],
                "expected_features": [],
                "expected_vector": []
            }
        },
        "test_content_analyzer_builder_config_validation": {
            "name": "test_content_analyzer_builder_config_validation",
            "location": 91,
            "return": [],
            "arguments": {
                "name": [],
                "ngrams": [],
                "tag_features": [],
                "expected": []
            }
        },
        "test_content_analyzer_builder": {
            "name": "test_content_analyzer_builder",
            "location": 112,
            "return": [],
            "arguments": {
                "name": [],
                "ngrams": [],
                "tag_features": [],
                "expected": []
            }
        }
    },
    "booksuggest-master/tests/metrics_test.py": {
        "test_precision": {
            "name": "test_precision",
            "location": 14,
            "return": [],
            "arguments": {
                "recommendations": [],
                "ground_truth": [],
                "expected": []
            }
        },
        "test_recall": {
            "name": "test_recall",
            "location": 26,
            "return": [],
            "arguments": {
                "recommendations": [],
                "ground_truth": [],
                "expected": []
            }
        },
        "test_precision_with_threshold": {
            "name": "test_precision_with_threshold",
            "location": 37,
            "return": [],
            "arguments": {
                "recommendations": [],
                "ground_truth": [],
                "threshold": [],
                "expected": []
            }
        },
        "test_recall__thresholded": {
            "name": "test_recall__thresholded",
            "location": 49,
            "return": [],
            "arguments": {
                "recommendations": [],
                "ground_truth": [],
                "threshold": [],
                "expected": []
            }
        }
    },
    "booksuggest-master/tests/xml_parsing_test.py": {
        "test_book_element_parsed": {
            "name": "test_book_element_parsed",
            "location": 18,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "test_similar_books_parsed": {
            "name": "test_similar_books_parsed",
            "location": 28,
            "return": [],
            "arguments": {
                "file_path": [],
                "expected": []
            }
        },
        "test_book_info_parsed": {
            "name": "test_book_info_parsed",
            "location": 41,
            "return": [],
            "arguments": {
                "file_path": [],
                "expected": []
            }
        },
        "test_book_description_html_tags_stripping": {
            "name": "test_book_description_html_tags_stripping",
            "location": 52,
            "return": [],
            "arguments": {
                "description": [],
                "expected": []
            }
        }
    }
}
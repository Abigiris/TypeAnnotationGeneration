{
    "bravado-asyncio-master/setup.py": {},
    "bravado-asyncio-master/bravado_asyncio/definitions.py": {},
    "bravado-asyncio-master/bravado_asyncio/future_adapter.py": {
        "BaseFutureAdapter.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": []
            }
        },
        "FutureAdapter.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "concurrent.futures._base.Future"
                ]
            }
        },
        "FutureAdapter.result": {
            "name": "result",
            "location": 30,
            "return": [
                "bravado_asyncio.definitions.AsyncioResponse"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "Optional[float]"
                ]
            }
        },
        "FutureAdapter.cancel": {
            "name": "cancel",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AsyncioFutureAdapter.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "future": [
                    "asyncio.futures.Future"
                ]
            }
        },
        "AsyncioFutureAdapter.cancel": {
            "name": "cancel",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bravado-asyncio-master/bravado_asyncio/http_client.py": {
        "get_client_session": {
            "name": "get_client_session",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "loop": [
                    "asyncio.events.AbstractEventLoop"
                ]
            }
        },
        "AsyncioClient.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "run_mode": [
                    "bravado_asyncio.definitions.RunMode"
                ],
                "loop": [
                    "Optional[asyncio.events.AbstractEventLoop]"
                ],
                "ssl_verify": [
                    "Union[(bool, str)]"
                ],
                "ssl_cert": [
                    "Optional[Union[(str, Sequence[str])]]"
                ]
            }
        },
        "AsyncioClient.loop": {
            "name": "loop",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncioClient.client_session": {
            "name": "client_session",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AsyncioClient.request": {
            "name": "request",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request_params": [
                    "MutableMapping[(str, Any)]"
                ],
                "operation": [],
                "request_config": []
            }
        },
        "AsyncioClient.prepare_params": {
            "name": "prepare_params",
            "location": 209,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "Optional[Dict[(str, Any)]]"
                ]
            }
        },
        "AsyncioClient._get_ssl_params": {
            "name": "_get_ssl_params",
            "location": 225,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bravado-asyncio-master/bravado_asyncio/response_adapter.py": {
        "AioHTTPResponseAdapter.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "loop": [
                    "asyncio.events.AbstractEventLoop"
                ]
            }
        },
        "AioHTTPResponseAdapter.__call__": {
            "name": "__call__",
            "location": 23,
            "return": [
                "T"
            ],
            "arguments": {
                "self": [
                    "T"
                ],
                "response": [
                    "bravado_asyncio.definitions.AsyncioResponse"
                ]
            }
        },
        "AioHTTPResponseAdapter.status_code": {
            "name": "status_code",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioHTTPResponseAdapter.text": {
            "name": "text",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioHTTPResponseAdapter.raw_bytes": {
            "name": "raw_bytes",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioHTTPResponseAdapter.reason": {
            "name": "reason",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioHTTPResponseAdapter.headers": {
            "name": "headers",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AioHTTPResponseAdapter.json": {
            "name": "json",
            "location": 52,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "bravado-asyncio-master/bravado_asyncio/thread_loop.py": {
        "run_event_loop": {
            "name": "run_event_loop",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "loop": [
                    "asyncio.events.AbstractEventLoop"
                ]
            }
        },
        "get_thread_loop": {
            "name": "get_thread_loop",
            "location": 16,
            "return": [
                "asyncio.events.AbstractEventLoop"
            ],
            "arguments": {}
        }
    },
    "bravado-asyncio-master/bravado_asyncio/__init__.py": {},
    "bravado-asyncio-master/docs/conf.py": {
        "skip": {
            "name": "skip",
            "location": 139,
            "return": [
                "Union[(bool, _T4)]"
            ],
            "arguments": {
                "app": [],
                "what": [],
                "name": [],
                "obj": [],
                "skip": [
                    "_T4"
                ],
                "options": []
            }
        },
        "setup": {
            "name": "setup",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "bravado-asyncio-master/testing/integration_server.py": {
        "check_content_type": {
            "name": "check_content_type",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "headers": [],
                "expected_content_type": []
            }
        },
        "setup_routes": {
            "name": "setup_routes",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "app": []
            }
        },
        "start_integration_server": {
            "name": "start_integration_server",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "port": [],
                "shm_request_received_var": []
            }
        }
    },
    "bravado-asyncio-master/testing/__init__.py": {},
    "bravado-asyncio-master/tests/conftest.py": {
        "event_loop": {
            "name": "event_loop",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "mock_loop": {
            "name": "mock_loop",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "set_log_level": {
            "name": "set_log_level",
            "location": 22,
            "return": [],
            "arguments": {}
        }
    },
    "bravado-asyncio-master/tests/future_adapter_test.py": {
        "mock_future": {
            "name": "mock_future",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "mock_response": {
            "name": "mock_response",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "mock_wait_for": {
            "name": "mock_wait_for",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "mock_result_with_sleep": {
            "name": "mock_result_with_sleep",
            "location": 29,
            "return": [
                "Callable"
            ],
            "arguments": {
                "response": []
            }
        },
        "mock_wait_for_result_with_sleep": {
            "name": "mock_wait_for_result_with_sleep",
            "location": 39,
            "return": [
                "Callable"
            ],
            "arguments": {
                "response": []
            }
        },
        "test_future_adapter": {
            "name": "test_future_adapter",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_future": [],
                "mock_response": []
            }
        },
        "test_future_adapter_timeout_error_class": {
            "name": "test_future_adapter_timeout_error_class",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_asyncio_future_adapter": {
            "name": "test_asyncio_future_adapter",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_future": [],
                "mock_wait_for": [],
                "mock_response": [],
                "event_loop": []
            }
        },
        "test_asyncio_future_adapter_timeout_error_class": {
            "name": "test_asyncio_future_adapter_timeout_error_class",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "mock_result_with_sleep._side_effect": {
            "name": "_side_effect",
            "location": 32,
            "return": [],
            "arguments": {
                "timeout": []
            }
        },
        "mock_wait_for_result_with_sleep._side_effect": {
            "name": "_side_effect",
            "location": 42,
            "return": [],
            "arguments": {
                "future": [],
                "timeout": []
            }
        }
    },
    "bravado-asyncio-master/tests/http_client_test.py": {
        "mock_client_session": {
            "name": "mock_client_session",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "get_asyncio_client": {
            "name": "get_asyncio_client",
            "location": 21,
            "return": [
                "bravado_asyncio.http_client.AsyncioClient"
            ],
            "arguments": {
                "ssl_verify": [],
                "ssl_cert": []
            }
        },
        "asyncio_client": {
            "name": "asyncio_client",
            "location": 33,
            "return": [],
            "arguments": {
                "mock_client_session": []
            }
        },
        "request_params": {
            "name": "request_params",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "mock_aiohttp_version": {
            "name": "mock_aiohttp_version",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "mock_create_default_context": {
            "name": "mock_create_default_context",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_fail_on_unknown_run_mode": {
            "name": "test_fail_on_unknown_run_mode",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_client_session": {
            "name": "test_get_client_session",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_client_session": []
            }
        },
        "test_request": {
            "name": "test_request",
            "location": 82,
            "return": [],
            "arguments": {
                "asyncio_client": [],
                "mock_client_session": [],
                "request_params": []
            }
        },
        "test_simple_get": {
            "name": "test_simple_get",
            "location": 123,
            "return": [],
            "arguments": {
                "asyncio_client": [],
                "mock_client_session": [],
                "request_params": []
            }
        },
        "test_int_param": {
            "name": "test_int_param",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "asyncio_client": [],
                "mock_client_session": [],
                "request_params": []
            }
        },
        "test_formdata": {
            "name": "test_formdata",
            "location": 161,
            "return": [],
            "arguments": {
                "asyncio_client": [],
                "mock_client_session": [],
                "request_params": [],
                "param_name": [],
                "param_value": [],
                "expected_param_value": []
            }
        },
        "test_file_data": {
            "name": "test_file_data",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "asyncio_client": [],
                "mock_client_session": [],
                "request_params": []
            }
        },
        "test_file_data_int_filename": {
            "name": "test_file_data_int_filename",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "asyncio_client": [],
                "mock_client_session": [],
                "request_params": []
            }
        },
        "test_timeouts": {
            "name": "test_timeouts",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "asyncio_client": [],
                "mock_client_session": [],
                "request_params": []
            }
        },
        "test_disable_ssl_verification": {
            "name": "test_disable_ssl_verification",
            "location": 239,
            "return": [],
            "arguments": {
                "mock_client_session": [],
                "mock_create_default_context": []
            }
        },
        "test_use_custom_ssl_ca": {
            "name": "test_use_custom_ssl_ca",
            "location": 247,
            "return": [],
            "arguments": {
                "mock_client_session": [],
                "mock_create_default_context": []
            }
        },
        "test_use_custom_ssl_cert": {
            "name": "test_use_custom_ssl_cert",
            "location": 267,
            "return": [],
            "arguments": {
                "ssl_cert": [],
                "expected_args": [],
                "mock_client_session": [],
                "mock_create_default_context": []
            }
        },
        "test_use_custom_ssl_ca_and_cert": {
            "name": "test_use_custom_ssl_ca_and_cert",
            "location": 283,
            "return": [],
            "arguments": {
                "mock_client_session": [],
                "mock_create_default_context": []
            }
        }
    },
    "bravado-asyncio-master/tests/prepare_params_test.py": {
        "test_prepare_params": {
            "name": "test_prepare_params",
            "location": 9,
            "return": [],
            "arguments": {
                "params": []
            }
        }
    },
    "bravado-asyncio-master/tests/response_adapter_test.py": {
        "response_adapter": {
            "name": "response_adapter",
            "location": 13,
            "return": [],
            "arguments": {
                "request": [],
                "mock_loop": []
            }
        },
        "mock_incoming_response": {
            "name": "mock_incoming_response",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "asyncio_response": {
            "name": "asyncio_response",
            "location": 23,
            "return": [],
            "arguments": {
                "mock_incoming_response": []
            }
        },
        "mock_run_coroutine_threadsafe": {
            "name": "mock_run_coroutine_threadsafe",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "mock_wait_for_result": {
            "name": "mock_wait_for_result",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "mock_wait_for": {
            "name": "mock_wait_for",
            "location": 41,
            "return": [],
            "arguments": {
                "mock_wait_for_result": []
            }
        },
        "test_initialization": {
            "name": "test_initialization",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "response_adapter": [],
                "mock_loop": [],
                "asyncio_response": []
            }
        },
        "test_properties": {
            "name": "test_properties",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "response_adapter": [],
                "asyncio_response": [],
                "mock_incoming_response": []
            }
        },
        "test_thread_methods": {
            "name": "test_thread_methods",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_run_coroutine_threadsafe": [],
                "asyncio_response": [],
                "mock_incoming_response": [],
                "mock_loop": []
            }
        },
        "test_asyncio_text": {
            "name": "test_asyncio_text",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_wait_for": [],
                "mock_wait_for_result": [],
                "asyncio_response": [],
                "mock_incoming_response": [],
                "event_loop": []
            }
        },
        "test_asyncio_raw_bytes": {
            "name": "test_asyncio_raw_bytes",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_wait_for": [],
                "mock_wait_for_result": [],
                "asyncio_response": [],
                "mock_incoming_response": [],
                "event_loop": []
            }
        },
        "test_asyncio_json": {
            "name": "test_asyncio_json",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "mock_wait_for": [],
                "mock_wait_for_result": [],
                "asyncio_response": [],
                "mock_incoming_response": [],
                "event_loop": []
            }
        }
    },
    "bravado-asyncio-master/tests/integration/bravado_integration_test.py": {
        "TestServerBravadoAsyncioClient.test_bytes_header": {
            "name": "test_bytes_header",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "swagger_http_server": []
            }
        },
        "TestServerBravadoAsyncioClient.test_request_timeout_errors_are_thrown_as_BravadoTimeoutError": {
            "name": "test_request_timeout_errors_are_thrown_as_BravadoTimeoutError",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "swagger_http_server": []
            }
        }
    },
    "bravado-asyncio-master/tests/integration/integration_test.py": {
        "wait_unit_service_starts": {
            "name": "wait_unit_service_starts",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [],
                "timeout": []
            }
        },
        "integration_server": {
            "name": "integration_server",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "swagger_client": {
            "name": "swagger_client",
            "location": 67,
            "return": [],
            "arguments": {
                "integration_server": [],
                "request": []
            }
        },
        "get_swagger_client": {
            "name": "get_swagger_client",
            "location": 75,
            "return": [
                "Any"
            ],
            "arguments": {
                "server_url": [],
                "http_client_instance": []
            }
        },
        "test_get_query_args": {
            "name": "test_get_query_args",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_param_multi": {
            "name": "test_param_multi",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_response_headers": {
            "name": "test_response_headers",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_post_form_data": {
            "name": "test_post_form_data",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_put_json_body": {
            "name": "test_put_json_body",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_delete_query_args": {
            "name": "test_delete_query_args",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_post_file_upload": {
            "name": "test_post_file_upload",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_post_file_upload_stream_no_name": {
            "name": "test_post_file_upload_stream_no_name",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_multiple_requests": {
            "name": "test_multiple_requests",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_get_msgpack": {
            "name": "test_get_msgpack",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_server_400": {
            "name": "test_server_400",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_server_404": {
            "name": "test_server_404",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_server_500": {
            "name": "test_server_500",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_cancellation": {
            "name": "test_cancellation",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "integration_server": []
            }
        },
        "test_timeout_request_options": {
            "name": "test_timeout_request_options",
            "location": 264,
            "return": [],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_timeout_on_future": {
            "name": "test_timeout_on_future",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "swagger_client": []
            }
        },
        "test_time_until_request_done": {
            "name": "test_time_until_request_done",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "integration_server": []
            }
        },
        "test_client_from_asyncio": {
            "name": "test_client_from_asyncio",
            "location": 306,
            "return": [],
            "arguments": {
                "integration_server": []
            }
        }
    }
}
{
    "breakfast-master/setup.py": {
        "find_version": {
            "name": "find_version",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "breakfast-master/breakfast/main.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "root": []
            }
        },
        "Application.rename": {
            "name": "rename",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "row": [],
                "column": [],
                "new_name": []
            }
        },
        "Application.get_additional_sources": {
            "name": "get_additional_sources",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "Application.find_modules": {
            "name": "find_modules",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.find_importers": {
            "name": "find_importers",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "breakfast-master/breakfast/modules.py": {
        "Module.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "module_path": [],
                "source": []
            }
        },
        "Module.get_imported_modules": {
            "name": "get_imported_modules",
            "location": 19,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Module.imports": {
            "name": "imports",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "module_path": []
            }
        },
        "Module.get_name_at": {
            "name": "get_name_at",
            "location": 35,
            "return": [
                "Optional[Name]"
            ],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Name.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "module": [],
                "position": [],
                "value": []
            }
        },
        "ImportFinder.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportFinder.visit_ImportFrom": {
            "name": "visit_ImportFrom",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "ImportFinder.visit_Import": {
            "name": "visit_Import",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "breakfast-master/breakfast/names.py": {},
    "breakfast-master/breakfast/occurrences.py": {
        "find_occurrences": {
            "name": "find_occurrences",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "sources": [],
                "old_name": [],
                "position": []
            }
        },
        "NameVisitor.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sources": []
            }
        },
        "NameVisitor.visit_all": {
            "name": "visit_all",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NameVisitor.visit_source": {
            "name": "visit_source",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "NameVisitor.visit_Module": {
            "name": "visit_Module",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_ImportFrom": {
            "name": "visit_ImportFrom",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_Name": {
            "name": "visit_Name",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_FunctionDef": {
            "name": "visit_FunctionDef",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_ClassDef": {
            "name": "visit_ClassDef",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_Attribute": {
            "name": "visit_Attribute",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_Call": {
            "name": "visit_Call",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_Assign": {
            "name": "visit_Assign",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_DictComp": {
            "name": "visit_DictComp",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_SetComp": {
            "name": "visit_SetComp",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor.visit_ListComp": {
            "name": "visit_ListComp",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor._comp_visit": {
            "name": "_comp_visit",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "NameVisitor._is_definition": {
            "name": "_is_definition",
            "location": 190,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "NameVisitor._is_staticmethod": {
            "name": "_is_staticmethod",
            "location": 194,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "NameVisitor._position_from_node": {
            "name": "_position_from_node",
            "location": 201,
            "return": [
                "breakfast.position.Position"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "row_offset": [],
                "column_offset": []
            }
        },
        "NameVisitor._names_from": {
            "name": "_names_from",
            "location": 210,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "breakfast-master/breakfast/position.py": {
        "Position.__post_init__": {
            "name": "__post_init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Position.__add__": {
            "name": "__add__",
            "location": 27,
            "return": [
                "_TPosition@@Position@@"
            ],
            "arguments": {
                "self": [
                    "_TPosition@@Position@@"
                ],
                "column_offset": []
            }
        },
        "Position.__sub__": {
            "name": "__sub__",
            "location": 30,
            "return": [
                "_TPosition@@Position@@"
            ],
            "arguments": {
                "self": [
                    "_TPosition@@Position@@"
                ],
                "to_subtract": []
            }
        },
        "Position.next_line": {
            "name": "next_line",
            "location": 36,
            "return": [
                "_TPosition@@Position@@"
            ],
            "arguments": {
                "self": [
                    "_TPosition@@Position@@"
                ]
            }
        },
        "Position._add_offset": {
            "name": "_add_offset",
            "location": 39,
            "return": [
                "_TPosition@@Position@@"
            ],
            "arguments": {
                "self": [
                    "_TPosition@@Position@@"
                ],
                "offset": []
            }
        }
    },
    "breakfast-master/breakfast/scope.py": {
        "Scope.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "is_class": [],
                "class_scope": []
            }
        },
        "Scope.add_module": {
            "name": "add_module",
            "location": 21,
            "return": [
                "_TScope@@Scope@@"
            ],
            "arguments": {
                "self": [
                    "_TScope@@Scope@@"
                ],
                "name": []
            }
        },
        "Scope.add_occurrence": {
            "name": "add_occurrence",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "position": [],
                "force": []
            }
        },
        "Scope.add_function_definition": {
            "name": "add_function_definition",
            "location": 31,
            "return": [
                "_TScope@@Scope@@"
            ],
            "arguments": {
                "self": [
                    "_TScope@@Scope@@"
                ],
                "name": [],
                "position": []
            }
        },
        "Scope.add_static_method": {
            "name": "add_static_method",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "position": []
            }
        },
        "Scope.add_class_definition": {
            "name": "add_class_definition",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "position": []
            }
        },
        "Scope.add_parameter": {
            "name": "add_parameter",
            "location": 42,
            "return": [
                "_TScope@@Scope@@"
            ],
            "arguments": {
                "self": [
                    "_TScope@@Scope@@"
                ],
                "name": [],
                "number": [],
                "position": []
            }
        },
        "Scope.add_alias": {
            "name": "add_alias",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "alias": []
            }
        },
        "Scope.set_points_to": {
            "name": "set_points_to",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "class_scope": []
            }
        },
        "Scope.get_scope": {
            "name": "get_scope",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Scope.find_occurrences": {
            "name": "find_occurrences",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "position": []
            }
        },
        "Scope.add_scope": {
            "name": "add_scope",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "scope": []
            }
        },
        "Scope.add_definition": {
            "name": "add_definition",
            "location": 79,
            "return": [
                "_TScope@@Scope@@"
            ],
            "arguments": {
                "self": [
                    "_TScope@@Scope@@"
                ],
                "name": [],
                "position": []
            }
        },
        "Scope.add_name": {
            "name": "add_name",
            "location": 88,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "position": [],
                "force": [],
                "is_class": [],
                "class_scope": []
            }
        },
        "Scope._add_child_occurrence": {
            "name": "_add_child_occurrence",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "position": []
            }
        }
    },
    "breakfast-master/breakfast/source.py": {
        "Source.__hash__": {
            "name": "__hash__",
            "location": 20,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.__post_init__": {
            "name": "__post_init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.__repr__": {
            "name": "__repr__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.position": {
            "name": "position",
            "location": 34,
            "return": [
                "breakfast.position.Position"
            ],
            "arguments": {
                "self": [],
                "row": [],
                "column": []
            }
        },
        "Source.get_name_at": {
            "name": "get_name_at",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Source.get_ast": {
            "name": "get_ast",
            "location": 42,
            "return": [
                "_ast.Module"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.render": {
            "name": "render",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.get_changes": {
            "name": "get_changes",
            "location": 48,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Source.replace": {
            "name": "replace",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": [],
                "old": [],
                "new": []
            }
        },
        "Source.modify_line": {
            "name": "modify_line",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "end": [],
                "new": []
            }
        },
        "Source.find_after": {
            "name": "find_after",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "start": []
            }
        },
        "Source.get_string_starting_at": {
            "name": "get_string_starting_at",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "position": []
            }
        }
    },
    "breakfast-master/breakfast/__init__.py": {},
    "breakfast-master/tests/test_main.py": {
        "test_renames_function_from_lines": {
            "name": "test_renames_function_from_lines",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_returns_paths": {
            "name": "test_returns_paths",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_returns_module_paths": {
            "name": "test_returns_module_paths",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_reports_empty_importers": {
            "name": "test_reports_empty_importers",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "test_reports_importers": {
            "name": "test_reports_importers",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "test_all_imports": {
            "name": "test_all_imports",
            "location": 73,
            "return": [],
            "arguments": {}
        }
    },
    "breakfast-master/tests/test_modules.py": {
        "test_reports_empty_importees": {
            "name": "test_reports_empty_importees",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_reports_importees": {
            "name": "test_reports_importees",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "breakfast-master/tests/test_names.py": {
        "test_distinguishes_local_variables_from_global": {
            "name": "test_distinguishes_local_variables_from_global",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_finds_non_local_variable": {
            "name": "test_finds_non_local_variable",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "test_does_not_rename_random_attributes": {
            "name": "test_does_not_rename_random_attributes",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "test_finds_parameter": {
            "name": "test_finds_parameter",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "test_finds_function": {
            "name": "test_finds_function",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_finds_class": {
            "name": "test_finds_class",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "test_finds_method_name": {
            "name": "test_finds_method_name",
            "location": 112,
            "return": [],
            "arguments": {}
        },
        "test_finds_passed_argument": {
            "name": "test_finds_passed_argument",
            "location": 132,
            "return": [],
            "arguments": {}
        },
        "test_finds_parameter_with_unusual_indentation": {
            "name": "test_finds_parameter_with_unusual_indentation",
            "location": 147,
            "return": [],
            "arguments": {}
        },
        "test_does_not_find_method_of_unrelated_class": {
            "name": "test_does_not_find_method_of_unrelated_class",
            "location": 166,
            "return": [],
            "arguments": {}
        },
        "test_finds_definition_from_call": {
            "name": "test_finds_definition_from_call",
            "location": 203,
            "return": [],
            "arguments": {}
        },
        "test_finds_attribute_assignments": {
            "name": "test_finds_attribute_assignments",
            "location": 219,
            "return": [],
            "arguments": {}
        },
        "test_finds_dict_comprehension_variables": {
            "name": "test_finds_dict_comprehension_variables",
            "location": 236,
            "return": [],
            "arguments": {}
        },
        "test_finds_list_comprehension_variables": {
            "name": "test_finds_list_comprehension_variables",
            "location": 254,
            "return": [],
            "arguments": {}
        },
        "test_finds_set_comprehension_variables": {
            "name": "test_finds_set_comprehension_variables",
            "location": 273,
            "return": [],
            "arguments": {}
        },
        "test_finds_generator_comprehension_variables": {
            "name": "test_finds_generator_comprehension_variables",
            "location": 290,
            "return": [],
            "arguments": {}
        },
        "test_finds_loop_variables": {
            "name": "test_finds_loop_variables",
            "location": 307,
            "return": [],
            "arguments": {}
        },
        "test_finds_tuple_unpack": {
            "name": "test_finds_tuple_unpack",
            "location": 328,
            "return": [],
            "arguments": {}
        },
        "test_finds_superclasses": {
            "name": "test_finds_superclasses",
            "location": 344,
            "return": [],
            "arguments": {}
        },
        "test_recognizes_multiple_assignments": {
            "name": "test_recognizes_multiple_assignments",
            "location": 369,
            "return": [],
            "arguments": {}
        },
        "test_finds_enclosing_scope_variable_from_comprehension": {
            "name": "test_finds_enclosing_scope_variable_from_comprehension",
            "location": 394,
            "return": [],
            "arguments": {}
        },
        "test_finds_static_method": {
            "name": "test_finds_static_method",
            "location": 410,
            "return": [],
            "arguments": {}
        },
        "test_finds_method_after_call": {
            "name": "test_finds_method_after_call",
            "location": 432,
            "return": [],
            "arguments": {}
        },
        "test_finds_argument": {
            "name": "test_finds_argument",
            "location": 452,
            "return": [],
            "arguments": {}
        },
        "test_finds_method_but_not_function": {
            "name": "test_finds_method_but_not_function",
            "location": 475,
            "return": [],
            "arguments": {}
        },
        "test_finds_global_variable_in_method_scope": {
            "name": "test_finds_global_variable_in_method_scope",
            "location": 501,
            "return": [],
            "arguments": {}
        },
        "test_treats_staticmethod_args_correctly": {
            "name": "test_treats_staticmethod_args_correctly",
            "location": 521,
            "return": [],
            "arguments": {}
        },
        "test_finds_global_variable": {
            "name": "test_finds_global_variable",
            "location": 539,
            "return": [],
            "arguments": {}
        },
        "test_finds_nonlocal_variable": {
            "name": "test_finds_nonlocal_variable",
            "location": 559,
            "return": [],
            "arguments": {}
        },
        "test_finds_multiple_definitions": {
            "name": "test_finds_multiple_definitions",
            "location": 587,
            "return": [],
            "arguments": {}
        },
        "test_finds_method_in_super_call": {
            "name": "test_finds_method_in_super_call",
            "location": 606,
            "return": [],
            "arguments": {}
        },
        "test_finds_imports": {
            "name": "test_finds_imports",
            "location": 631,
            "return": [],
            "arguments": {}
        },
        "test_does_not_rename_imported_names": {
            "name": "test_does_not_rename_imported_names",
            "location": 652,
            "return": [],
            "arguments": {}
        },
        "test_finds_across_files": {
            "name": "test_finds_across_files",
            "location": 673,
            "return": [],
            "arguments": {}
        },
        "test_finds_namespace_imports": {
            "name": "test_finds_namespace_imports",
            "location": 696,
            "return": [],
            "arguments": {}
        },
        "test_finds_imports_with_paths": {
            "name": "test_finds_imports_with_paths",
            "location": 718,
            "return": [],
            "arguments": {}
        },
        "test_finds_multile_imports": {
            "name": "test_finds_multile_imports",
            "location": 741,
            "return": [],
            "arguments": {}
        },
        "test_finds_aliased_imports": {
            "name": "test_finds_aliased_imports",
            "location": 763,
            "return": [],
            "arguments": {}
        }
    },
    "breakfast-master/tests/test_position.py": {
        "source": {
            "name": "source",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_cannot_create_negative_positions": {
            "name": "test_cannot_create_negative_positions",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "source": []
            }
        },
        "test_add": {
            "name": "test_add",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "source": []
            }
        },
        "test_substract": {
            "name": "test_substract",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "source": []
            }
        },
        "test_compare": {
            "name": "test_compare",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "source": []
            }
        }
    },
    "breakfast-master/tests/test_source.py": {
        "test_ordering": {
            "name": "test_ordering",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "breakfast-master/tests/__init__.py": {
        "dedent": {
            "name": "dedent",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "code": []
            }
        },
        "make_source": {
            "name": "make_source",
            "location": 12,
            "return": [
                "breakfast.source.Source"
            ],
            "arguments": {
                "code": [],
                "module_name": [],
                "file_name": []
            }
        }
    },
    "breakfast-master/tests/data/module1.py": {
        "fun2": {
            "name": "fun2",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "breakfast-master/tests/data/module2.py": {
        "fun": {
            "name": "fun",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "breakfast-master/tests/data/__init__.py": {},
    "breakfast-master/tests/data/subpackage/__init__.py": {},
    "breakfast-master/vim/ftplugin/python/test_vim_breakfast.py": {
        "test_simple_rename": {
            "name": "test_simple_rename",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "breakfast-master/vim/ftplugin/python/vim_breakfast.py": {
        "do_rename": {
            "name": "do_rename",
            "location": 7,
            "return": [],
            "arguments": {
                "root": [],
                "buffer_contents": [],
                "file_name": [],
                "row": [],
                "column": [],
                "new_name": []
            }
        },
        "move_to_start_of_word": {
            "name": "move_to_start_of_word",
            "location": 23,
            "return": [],
            "arguments": {
                "vim": []
            }
        },
        "user_input": {
            "name": "user_input",
            "location": 31,
            "return": [],
            "arguments": {
                "vim": [],
                "message": []
            }
        }
    }
}
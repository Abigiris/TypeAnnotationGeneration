{
    "browsertrix-cloud-main/backend/btrixcloud/archives.py": {
        "init_archives_api": {
            "name": "init_archives_api",
            "location": 224,
            "return": [
                "ArchiveOps"
            ],
            "arguments": {
                "app": [],
                "mdb": [],
                "user_manager": [],
                "invites": [],
                "user_dep": []
            }
        },
        "Archive.is_owner": {
            "name": "is_owner",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Archive.is_crawler": {
            "name": "is_crawler",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Archive.is_viewer": {
            "name": "is_viewer",
            "location": 69,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "Archive._is_auth": {
            "name": "_is_auth",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "value": []
            }
        },
        "ArchiveOps.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mdb": [],
                "invites": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/colls.py": {
        "init_collections_api": {
            "name": "init_collections_api",
            "location": 129,
            "return": [
                "CollectionOps"
            ],
            "arguments": {
                "mdb": [],
                "crawls": [],
                "archives": [],
                "crawl_manager": []
            }
        },
        "CollectionOps.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mdb": [],
                "crawls": [],
                "crawl_manager": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/crawlconfigs.py": {
        "init_crawl_config_api": {
            "name": "init_crawl_config_api",
            "location": 500,
            "return": [
                "CrawlConfigOps"
            ],
            "arguments": {
                "dbclient": [],
                "mdb": [],
                "user_dep": [],
                "user_manager": [],
                "archive_ops": [],
                "crawl_manager": [],
                "profiles": []
            }
        },
        "CrawlConfig.get_raw_config": {
            "name": "get_raw_config",
            "location": 132,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrawlConfigOps.__init__": {
            "name": "__init__",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dbclient": [],
                "mdb": [],
                "user_manager": [],
                "archive_ops": [],
                "crawl_manager": [],
                "profiles": []
            }
        },
        "CrawlConfigOps.set_crawl_ops": {
            "name": "set_crawl_ops",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ops": []
            }
        },
        "CrawlConfigOps.set_coll_ops": {
            "name": "set_coll_ops",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coll_ops": []
            }
        },
        "CrawlConfigOps.sanitize": {
            "name": "sanitize",
            "location": 212,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "string": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/crawlmanager.py": {
        "BaseCrawlManager.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "templates": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/crawls.py": {
        "init_crawls_api": {
            "name": "init_crawls_api",
            "location": 411,
            "return": [
                "CrawlOps"
            ],
            "arguments": {
                "app": [],
                "mdb": [],
                "users": [],
                "crawl_manager": [],
                "crawl_config_ops": [],
                "archives": [],
                "user_dep": []
            }
        },
        "dt_now": {
            "name": "dt_now",
            "location": 511,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {}
        },
        "ts_now": {
            "name": "ts_now",
            "location": 516,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "CrawlOps.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mdb": [],
                "users": [],
                "crawl_manager": [],
                "crawl_configs": [],
                "archives": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/crawl_job.py": {
        "CrawlJob.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrawlJob._make_crawl": {
            "name": "_make_crawl",
            "location": 344,
            "return": [
                "btrixcloud.crawls.Crawl"
            ],
            "arguments": {
                "self": [],
                "state": [],
                "scale": []
            }
        },
        "CrawlJob.register_handlers": {
            "name": "register_handlers",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "CrawlJob.redis_url": {
            "name": "redis_url",
            "location": 411,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlJob.register_handlers.sig_handler": {
            "name": "sig_handler",
            "location": 361,
            "return": [],
            "arguments": {}
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/db.py": {
        "resolve_db_url": {
            "name": "resolve_db_url",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "init_db": {
            "name": "init_db",
            "location": 29,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {}
        },
        "BaseMongoModel.id_str": {
            "name": "id_str",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseMongoModel.from_dict": {
            "name": "from_dict",
            "location": 55,
            "return": [
                "Optional[BaseMongoModel]"
            ],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "BaseMongoModel.serialize": {
            "name": "serialize",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMongoModel.to_dict": {
            "name": "to_dict",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/emailsender.py": {
        "EmailSender.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EmailSender._send_encrypted": {
            "name": "_send_encrypted",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "receiver": [],
                "message": []
            }
        },
        "EmailSender.get_origin": {
            "name": "get_origin",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "EmailSender.send_user_validation": {
            "name": "send_user_validation",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "receiver_email": [],
                "token": [],
                "headers": []
            }
        },
        "EmailSender.send_new_user_invite": {
            "name": "send_new_user_invite",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "receiver_email": [],
                "sender": [],
                "archive_name": [],
                "token": [],
                "headers": []
            }
        },
        "EmailSender.send_existing_user_invite": {
            "name": "send_existing_user_invite",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "receiver_email": [],
                "sender": [],
                "archive_name": [],
                "token": [],
                "headers": []
            }
        },
        "EmailSender.send_user_forgot_password": {
            "name": "send_user_forgot_password",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "receiver_email": [],
                "token": [],
                "headers": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/invites.py": {
        "init_invites": {
            "name": "init_invites",
            "location": 169,
            "return": [
                "InviteOps"
            ],
            "arguments": {
                "mdb": [],
                "email": []
            }
        },
        "InviteOps.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mdb": [],
                "email": []
            }
        },
        "InviteOps.accept_user_invite": {
            "name": "accept_user_invite",
            "location": 98,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "invite_token": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/main.py": {
        "main": {
            "name": "main",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "exit_handler": {
            "name": "exit_handler",
            "location": 138,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/profiles.py": {
        "init_profiles_api": {
            "name": "init_profiles_api",
            "location": 370,
            "return": [
                "ProfileOps"
            ],
            "arguments": {
                "mdb": [],
                "crawl_manager": [],
                "archive_ops": [],
                "user_dep": []
            }
        },
        "ProfileOps.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mdb": [],
                "crawl_manager": []
            }
        },
        "ProfileOps.set_crawlconfigs": {
            "name": "set_crawlconfigs",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "crawlconfigs": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/profile_job.py": {
        "ProfileJob.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProfileJob.ping_handler": {
            "name": "ping_handler",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProfileJob.timeout_handler": {
            "name": "timeout_handler",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProfileJob.exit_handler": {
            "name": "exit_handler",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProfileJob._do_exit": {
            "name": "_do_exit",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/storages.py": {
        "init_storages_api": {
            "name": "init_storages_api",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "archive_ops": [],
                "crawl_manager": [],
                "user_dep": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/users.py": {
        "init_user_manager": {
            "name": "init_user_manager",
            "location": 250,
            "return": [
                "UserManager"
            ],
            "arguments": {
                "mdb": [],
                "emailsender": [],
                "invites": []
            }
        },
        "init_users_api": {
            "name": "init_users_api",
            "location": 305,
            "return": [
                "Any"
            ],
            "arguments": {
                "app": [],
                "user_manager": []
            }
        },
        "UserManager.__init__": {
            "name": "__init__",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_db": [],
                "email": [],
                "invites": []
            }
        },
        "UserManager.set_archive_ops": {
            "name": "set_archive_ops",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ops": []
            }
        },
        "BearerOrQueryTransport.__init__": {
            "name": "__init__",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tokenUrl": []
            }
        },
        "init_users_api.get_jwt_strategy": {
            "name": "get_jwt_strategy",
            "location": 309,
            "return": [],
            "arguments": {}
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/utils.py": {
        "random_suffix": {
            "name": "random_suffix",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/__init__.py": {},
    "browsertrix-cloud-main/backend/btrixcloud/k8s/base_job.py": {
        "K8SJobMixin.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/k8s/crawl_job.py": {
        "K8SCrawlJob.redis_url": {
            "name": "redis_url",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/k8s/k8sapi.py": {
        "K8sAPI.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/k8s/k8sman.py": {
        "K8SManager.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "K8SManager._secret_data": {
            "name": "_secret_data",
            "location": 147,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "secret": [],
                "name": []
            }
        },
        "FakeKubeResponse.__init__": {
            "name": "__init__",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/k8s/profile_job.py": {},
    "browsertrix-cloud-main/backend/btrixcloud/k8s/utils.py": {
        "get_templates_dir": {
            "name": "get_templates_dir",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/k8s/__init__.py": {},
    "browsertrix-cloud-main/backend/btrixcloud/swarm/base_job.py": {
        "SwarmJobMixin.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SwarmJobMixin._populate_env": {
            "name": "_populate_env",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "SwarmJobMixin.unschedule_job": {
            "name": "unschedule_job",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/swarm/crawl_job.py": {
        "SwarmCrawlJob.redis_url": {
            "name": "redis_url",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/swarm/profile_job.py": {},
    "browsertrix-cloud-main/backend/btrixcloud/swarm/swarmmanager.py": {
        "SwarmManager.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SwarmManager._add_extra_crawl_job_params": {
            "name": "_add_extra_crawl_job_params",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/swarm/utils.py": {
        "get_templates_dir": {
            "name": "get_templates_dir",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "get_runner": {
            "name": "get_runner",
            "location": 18,
            "return": [],
            "arguments": {
                "runtime": []
            }
        },
        "SwarmRunner.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SwarmRunner.run_service_stack": {
            "name": "run_service_stack",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "data": []
            }
        },
        "SwarmRunner.delete_service_stack": {
            "name": "delete_service_stack",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SwarmRunner.delete_volumes": {
            "name": "delete_volumes",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "names": []
            }
        },
        "SwarmRunner.create_secret": {
            "name": "create_secret",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "data": [],
                "labels": []
            }
        },
        "SwarmRunner.delete_secret": {
            "name": "delete_secret",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "SwarmRunner.delete_secrets": {
            "name": "delete_secrets",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "SwarmRunner.get_service": {
            "name": "get_service",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "service_name": []
            }
        },
        "SwarmRunner.get_service_labels": {
            "name": "get_service_labels",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "service_name": []
            }
        },
        "SwarmRunner.set_service_label": {
            "name": "set_service_label",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "service_name": [],
                "label": []
            }
        },
        "SwarmRunner.ping_containers": {
            "name": "ping_containers",
            "location": 138,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "signal_": []
            }
        },
        "PodmanComposeRunner.__init__": {
            "name": "__init__",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PodmanComposeRunner.run_service_stack": {
            "name": "run_service_stack",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "data": []
            }
        },
        "PodmanComposeRunner.delete_service_stack": {
            "name": "delete_service_stack",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PodmanComposeRunner.create_secret": {
            "name": "create_secret",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "data": [],
                "labels": []
            }
        },
        "PodmanComposeRunner.delete_secret": {
            "name": "delete_secret",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "PodmanComposeRunner.get_service": {
            "name": "get_service",
            "location": 234,
            "return": [],
            "arguments": {
                "self": [],
                "service_name": []
            }
        }
    },
    "browsertrix-cloud-main/backend/btrixcloud/swarm/__init__.py": {},
    "browsertrix-cloud-main/backend/test/test_login.py": {
        "test_login_invalid": {
            "name": "test_login_invalid",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_login": {
            "name": "test_login",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
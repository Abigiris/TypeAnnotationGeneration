{
    "cachepot-master/setup.py": {},
    "cachepot-master/cachepot/expire.py": {
        "to_timedelta": {
            "name": "to_timedelta",
            "location": 7,
            "return": [
                "Union[(datetime.timedelta, _T0)]"
            ],
            "arguments": {
                "expire_seconds": [
                    "_T0@@"
                ]
            }
        }
    },
    "cachepot-master/cachepot/__init__.py": {},
    "cachepot-master/cachepot/backend/filesystem.py": {
        "FileSystemCacheBackend.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "FileSystemCacheBackend.__get_real_path": {
            "name": "__get_real_path",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "FileSystemCacheBackend.save": {
            "name": "save",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "expire_seconds": []
            }
        },
        "FileSystemCacheBackend.load": {
            "name": "load",
            "location": 38,
            "return": [
                "Optional[bytes]"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "FileSystemCacheBackend.delete": {
            "name": "delete",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "cachepot-master/cachepot/backend/redis.py": {
        "RedisCacheBackend.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "redis_connection": []
            }
        },
        "RedisCacheBackend.save": {
            "name": "save",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "RedisCacheBackend.load": {
            "name": "load",
            "location": 25,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "RedisCacheBackend.delete": {
            "name": "delete",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "cachepot-master/cachepot/backend/sqlite.py": {
        "SQLiteCacheBackend.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "SQLiteCacheBackend.save": {
            "name": "save",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "SQLiteCacheBackend.load": {
            "name": "load",
            "location": 47,
            "return": [
                "Optional[bytes]"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SQLiteCacheBackend.delete": {
            "name": "delete",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "cachepot-master/cachepot/backend/__init__.py": {
        "CacheBackendProtocol.save": {
            "name": "save",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "CacheBackendProtocol.load": {
            "name": "load",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CacheBackendProtocol.delete": {
            "name": "delete",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "cachepot-master/cachepot/serializer/json.py": {
        "JSONSerializer.serialize": {
            "name": "serialize",
            "location": 17,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "JSONSerializer.deserialize": {
            "name": "deserialize",
            "location": 22,
            "return": [
                "Union[(float, int, list, str, Dict[(str, Any)])]"
            ],
            "arguments": {
                "self": [],
                "serialized_data": []
            }
        }
    },
    "cachepot-master/cachepot/serializer/pickle.py": {
        "PickleSerializer.serialize": {
            "name": "serialize",
            "location": 9,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "PickleSerializer.deserialize": {
            "name": "deserialize",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "serialized_data": []
            }
        }
    },
    "cachepot-master/cachepot/serializer/str.py": {
        "StringSerializer.serialize": {
            "name": "serialize",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "StringSerializer.deserialize": {
            "name": "deserialize",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "serialized_data": []
            }
        }
    },
    "cachepot-master/cachepot/serializer/__init__.py": {
        "SerializerProtocol.serialize": {
            "name": "serialize",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SerializerProtocol.deserialize": {
            "name": "deserialize",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "serialized_data": []
            }
        }
    },
    "cachepot-master/cachepot/store/__init__.py": {
        "CacheStoreProtocol.get": {
            "name": "get",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CacheStoreProtocol.put": {
            "name": "put",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "CacheStoreProtocol.proxy": {
            "name": "proxy",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "original_function": []
            }
        },
        "CacheStoreProtocol.remove": {
            "name": "remove",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CacheStore.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "namespace": [],
                "backend": [],
                "key_serializer": [],
                "value_serializer": [],
                "default_expire_seconds": []
            }
        },
        "CacheStore.__get_real_key": {
            "name": "__get_real_key",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CacheStore.get": {
            "name": "get",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CacheStore.put": {
            "name": "put",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "CacheStore.proxy": {
            "name": "proxy",
            "location": 72,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "original_function": []
            }
        },
        "CacheStore.remove": {
            "name": "remove",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CacheStore.proxy._proxy": {
            "name": "_proxy",
            "location": 76,
            "return": [],
            "arguments": {}
        }
    },
    "cachepot-master/example/__init__.py": {
        "example_usage": {
            "name": "example_usage",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SimpleFileSystemCacheStore.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "namespace": []
            }
        },
        "FileSystemJSONCacheStore.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "namespace": []
            }
        }
    },
    "cachepot-master/tests/test_expire.py": {
        "TestExpireSeconds.test_to_timedelta": {
            "name": "test_to_timedelta",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/test_store.py": {
        "TestCacheStore.test_basis": {
            "name": "test_basis",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/__init__.py": {},
    "cachepot-master/tests/backend/test_filesystem.py": {
        "TestFileSystemCacheBackend.test_various_pathlike": {
            "name": "test_various_pathlike",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestFileSystemCacheBackend.test_expire": {
            "name": "test_expire",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/backend/test_redis.py": {
        "TestRedisCacheBackend.test_various_connection_like": {
            "name": "test_various_connection_like",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRedisCacheBackend.test_expire": {
            "name": "test_expire",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/backend/test_sqlite.py": {
        "TestSQLiteCacheBackend.test_various_connection_like": {
            "name": "test_various_connection_like",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSQLiteCacheBackend.test_expire": {
            "name": "test_expire",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/backend/__init__.py": {},
    "cachepot-master/tests/serializer/test_json.py": {
        "TestJSONSerializer.test_json_serializer": {
            "name": "test_json_serializer",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/serializer/test_pickle.py": {
        "TestPickleSerializer.test_pickle_serializer": {
            "name": "test_pickle_serializer",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/serializer/test_str.py": {
        "TestStringSerializer.test_str_serializer": {
            "name": "test_str_serializer",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cachepot-master/tests/serializer/__init__.py": {}
}
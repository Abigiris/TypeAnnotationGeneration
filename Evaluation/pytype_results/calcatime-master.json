{
    "calcatime-master/calcatime.py": {
        "get_providers": {
            "name": "get_providers",
            "location": 127,
            "return": [
                "List[CalendarProvider]"
            ],
            "arguments": {}
        },
        "get_provider": {
            "name": "get_provider",
            "location": 132,
            "return": [
                "CalendarProvider"
            ],
            "arguments": {
                "connection_string": [
                    "str"
                ]
            }
        },
        "parse_configs": {
            "name": "parse_configs",
            "location": 161,
            "return": [
                "Configs"
            ],
            "arguments": {}
        },
        "parse_timerange_tokens": {
            "name": "parse_timerange_tokens",
            "location": 216,
            "return": [
                "Tuple[(_datetime.datetime, _datetime.datetime)]"
            ],
            "arguments": {
                "timespan_tokens": [
                    "List[str]"
                ]
            }
        },
        "collect_events": {
            "name": "collect_events",
            "location": 285,
            "return": [
                "List[CalendarEvent]"
            ],
            "arguments": {
                "configs": [
                    "Configs"
                ]
            }
        },
        "get_exchange_events": {
            "name": "get_exchange_events",
            "location": 308,
            "return": [
                "List[CalendarEvent]"
            ],
            "arguments": {
                "server": [
                    "str"
                ],
                "domain": [
                    "Optional[str]"
                ],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ],
                "range_start": [
                    "_datetime.datetime"
                ],
                "range_end": [
                    "_datetime.datetime"
                ]
            }
        },
        "group_events": {
            "name": "group_events",
            "location": 347,
            "return": [
                "Dict[(str, List[CalendarEvent])]"
            ],
            "arguments": {
                "events": [
                    "List[CalendarEvent]"
                ],
                "configs": [
                    "Configs"
                ]
            }
        },
        "group_by_title": {
            "name": "group_by_title",
            "location": 373,
            "return": [
                "Dict[(str, List[CalendarEvent])]"
            ],
            "arguments": {
                "events": [
                    "List[CalendarEvent]"
                ]
            }
        },
        "group_by_category": {
            "name": "group_by_category",
            "location": 385,
            "return": [
                "Dict[(str, List[CalendarEvent])]"
            ],
            "arguments": {
                "events": [
                    "List[CalendarEvent]"
                ],
                "unknown_group": []
            }
        },
        "group_by_pattern": {
            "name": "group_by_pattern",
            "location": 404,
            "return": [
                "Dict[(str, List[CalendarEvent])]"
            ],
            "arguments": {
                "events": [
                    "List[CalendarEvent]"
                ],
                "pattern": [
                    "str"
                ],
                "attr": [
                    "str"
                ]
            }
        },
        "cal_total_duration": {
            "name": "cal_total_duration",
            "location": 430,
            "return": [
                "Dict[(str, float)]"
            ],
            "arguments": {
                "grouped_events": [
                    "Dict[(str, List[CalendarEvent])]"
                ]
            }
        },
        "calculate_and_dump": {
            "name": "calculate_and_dump",
            "location": 442,
            "return": [
                "None"
            ],
            "arguments": {
                "grouped_events": [
                    "Dict[(str, List[CalendarEvent])]"
                ],
                "configs": [
                    "Configs"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
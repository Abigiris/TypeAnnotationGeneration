{
    "catch-apis-master/.gunicorn.config.py": {},
    "catch-apis-master/src/app_entry.py": {
        "bare_root": {
            "name": "bare_root",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "catch-apis-master/src/env.py": {},
    "catch-apis-master/src/logging_setup.py": {},
    "catch-apis-master/src/util.py": {
        "jsonify_output": {
            "name": "jsonify_output",
            "location": 11,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [
                    "Callable"
                ]
            }
        },
        "desg_to_prefix": {
            "name": "desg_to_prefix",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "desg": [
                    "str"
                ]
            }
        },
        "jsonify_output.jsonified": {
            "name": "jsonified",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "FormattedStringOrNone.output": {
            "name": "output",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "obj": []
            }
        }
    },
    "catch-apis-master/src/__init__.py": {},
    "catch-apis-master/src/controllers/caught.py": {
        "Caught.get": {
            "name": "get",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "job_id": []
            }
        },
        "CaughtLabels.get": {
            "name": "get",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "catch-apis-master/src/controllers/demo_routes.py": {
        "event_stream": {
            "name": "event_stream",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "example_task": {
            "name": "example_task",
            "location": 162,
            "return": [],
            "arguments": {
                "seconds": [],
                "job_uuid": []
            }
        },
        "DemoRoutes.get": {
            "name": "get",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DemoRoutes.post": {
            "name": "post",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StagedDemoRoutes.get": {
            "name": "get",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DemoRedisRoutes.get": {
            "name": "get",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DemoStreamRoutes.get": {
            "name": "get",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "catch-apis-master/src/controllers/images.py": {
        "NeatCutouts.get": {
            "name": "get",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "catch-apis-master/src/controllers/query.py": {
        "Query.get": {
            "name": "get",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "catch-apis-master/src/controllers/stream.py": {
        "StreamRoute.get": {
            "name": "get",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StreamRoute.event_stream": {
            "name": "event_stream",
            "location": 42,
            "return": [],
            "arguments": {}
        }
    },
    "catch-apis-master/src/controllers/__init__.py": {
        "default_error_handler": {
            "name": "default_error_handler",
            "location": 70,
            "return": [],
            "arguments": {
                "exception": []
            }
        },
        "database_not_found_error_handler": {
            "name": "database_not_found_error_handler",
            "location": 81,
            "return": [],
            "arguments": {
                "exception": []
            }
        }
    },
    "catch-apis-master/src/models/body_type.py": {},
    "catch-apis-master/src/models/caught.py": {},
    "catch-apis-master/src/models/images.py": {},
    "catch-apis-master/src/models/query.py": {},
    "catch-apis-master/src/models/__init__.py": {},
    "catch-apis-master/src/services/caught.py": {
        "caught": {
            "name": "caught",
            "location": 14,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "job_id": [
                    "uuid.UUID"
                ]
            }
        }
    },
    "catch-apis-master/src/services/database_provider.py": {
        "data_provider_session": {
            "name": "data_provider_session",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "catch_manager": {
            "name": "catch_manager",
            "location": 45,
            "return": [],
            "arguments": {
                "save_log": []
            }
        }
    },
    "catch-apis-master/src/services/images.py": {
        "build_url": {
            "name": "build_url",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "productid": [
                    "str"
                ],
                "ra": [
                    "Optional[float]"
                ],
                "dec": [
                    "Optional[float]"
                ],
                "size": [
                    "int"
                ],
                "prefix": [
                    "str"
                ]
            }
        }
    },
    "catch-apis-master/src/services/query.py": {
        "query": {
            "name": "query",
            "location": 47,
            "return": [
                "list"
            ],
            "arguments": {
                "target": [
                    "str"
                ],
                "job_id": [
                    "uuid.UUID"
                ],
                "source": [
                    "str"
                ],
                "cached": [
                    "bool"
                ]
            }
        },
        "check_cache": {
            "name": "check_cache",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "target": [
                    "str"
                ],
                "source": [
                    "str"
                ],
                "save_to": [
                    "Optional[uuid.UUID]"
                ]
            }
        },
        "parse_target_name": {
            "name": "parse_target_name",
            "location": 113,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "catch-apis-master/src/services/__init__.py": {},
    "catch-apis-master/src/tasks/demo_task.py": {
        "example": {
            "name": "example",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "seconds": [
                    "int"
                ]
            }
        }
    },
    "catch-apis-master/src/tasks/images.py": {
        "neat_cutout": {
            "name": "neat_cutout",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "productid": [
                    "str"
                ],
                "job_id": [
                    "uuid.UUID"
                ],
                "ra": [
                    "float"
                ],
                "dec": [
                    "float"
                ],
                "size": [
                    "int"
                ],
                "prefix": [
                    "str"
                ],
                "overwrite": [
                    "bool"
                ],
                "thumbnail": [
                    "bool"
                ],
                "preview": [
                    "bool"
                ]
            }
        },
        "array_to_thumbnail": {
            "name": "array_to_thumbnail",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "np.ndarray"
                ],
                "vmin": [
                    "float"
                ],
                "vmax": [
                    "float"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "array_to_preview": {
            "name": "array_to_preview",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [
                    "np.ndarray"
                ],
                "vmin": [
                    "float"
                ],
                "vmax": [
                    "float"
                ],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "catch-apis-master/src/tasks/logger.py": {
        "setup": {
            "name": "setup",
            "location": 11,
            "return": [
                "logging.Logger"
            ],
            "arguments": {}
        }
    },
    "catch-apis-master/src/tasks/message.py": {
        "listen_to_task_messenger": {
            "name": "listen_to_task_messenger",
            "location": 133,
            "return": [],
            "arguments": {
                "job_id": []
            }
        },
        "Message.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "job_id": [],
                "text": [],
                "status": []
            }
        },
        "Message.job_id": {
            "name": "job_id",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "j": []
            }
        },
        "Message.status": {
            "name": "status",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.__repr__": {
            "name": "__repr__",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageHandler.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "job_id": [],
                "level": []
            }
        },
        "MessageHandler.job_id": {
            "name": "job_id",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "j": []
            }
        },
        "MessageHandler.emit": {
            "name": "emit",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "catch-apis-master/src/tasks/query.py": {
        "catch_moving_target": {
            "name": "catch_moving_target",
            "location": 19,
            "return": [],
            "arguments": {
                "desg": [],
                "source": [],
                "cached": [],
                "job_id": []
            }
        },
        "cutout_moving_targets": {
            "name": "cutout_moving_targets",
            "location": 67,
            "return": [],
            "arguments": {
                "job_id": [],
                "overwrite": [],
                "sub_task": []
            }
        }
    },
    "catch-apis-master/src/tasks/worker.py": {},
    "catch-apis-master/src/tasks/__init__.py": {},
    "catch-apis-master/tests/test_catch_query.py": {},
    "catch-apis-master/tests/test_sample.py": {
        "inc": {
            "name": "inc",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {
                "x": [
                    "int"
                ]
            }
        },
        "test_answer": {
            "name": "test_answer",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "catch-apis-master/tests/test_will_fail.py": {
        "test_will_fail": {
            "name": "test_will_fail",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "catch-apis-master/tests/test_ztf_labels.py": {
        "_test_ztf_labels": {
            "name": "_test_ztf_labels",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
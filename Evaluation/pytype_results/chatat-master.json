{
    "chatat-master/example_macros.py": {
        "on_gnu": {
            "name": "on_gnu",
            "location": 6,
            "return": [],
            "arguments": {
                "handler": [],
                "message": []
            }
        }
    },
    "chatat-master/setup.py": {},
    "chatat-master/chatat/client.py": {
        "_Protocol.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "auth": [],
                "loop": []
            }
        },
        "TwitchChatProtocol.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TwitchChatProtocol._send_irc_command": {
            "name": "_send_irc_command",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd": [],
                "value": []
            }
        },
        "TwitchChatProtocol._send_to_channel": {
            "name": "_send_to_channel",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "TwitchChatProtocol._switch_channel": {
            "name": "_switch_channel",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": []
            }
        },
        "TwitchChatProtocol._quit_channel": {
            "name": "_quit_channel",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": []
            }
        },
        "TwitchChatProtocol.connection_made": {
            "name": "connection_made",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "TwitchChatProtocol.data_received": {
            "name": "data_received",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_msg": []
            }
        },
        "TwitchChatProtocol.connection_lost": {
            "name": "connection_lost",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc": []
            }
        }
    },
    "chatat-master/chatat/macros.py": {
        "Macros.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pubpen": [],
                "helix": [],
                "loop": []
            }
        },
        "Macros.dispatch": {
            "name": "dispatch",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Macros.macro": {
            "name": "macro",
            "location": 18,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "cls": [],
                "on_event": []
            }
        },
        "Macros.macro.wrapper": {
            "name": "wrapper",
            "location": 19,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "chatat-master/chatat/twitch.py": {
        "Auth.from_json": {
            "name": "from_json",
            "location": 26,
            "return": [
                "_TAuth@@Auth@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TAuth]"
                ],
                "file": []
            }
        },
        "SingleableChannel.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SingleableChannel.__new__": {
            "name": "__new__",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Channel.__str__": {
            "name": "__str__",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.from_system": {
            "name": "from_system",
            "location": 60,
            "return": [
                "_TMessage@@Message@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TMessage]"
                ],
                "message": [],
                "level": []
            }
        },
        "Message.from_simple": {
            "name": "from_simple",
            "location": 64,
            "return": [
                "_TMessage@@Message@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TMessage]"
                ],
                "channel": [],
                "author": [],
                "message": []
            }
        },
        "Message.from_raw": {
            "name": "from_raw",
            "location": 68,
            "return": [
                "Optional[Message]"
            ],
            "arguments": {
                "cls": [],
                "raw_msg": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "chatat-master/chatat/__main__.py": {
        "ChatInterface.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "auth": [],
                "pubpen": []
            }
        },
        "ChatInterface.__enter__": {
            "name": "__enter__",
            "location": 32,
            "return": [
                "_TChatInterface@@ChatInterface@@"
            ],
            "arguments": {
                "self": [
                    "_TChatInterface@@ChatInterface@@"
                ]
            }
        },
        "ChatInterface.__exit__": {
            "name": "__exit__",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChatInterface.show_message": {
            "name": "show_message",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "ChatInterface.show_typing": {
            "name": "show_typing",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "char": []
            }
        },
        "ChatInterface.clear_typing": {
            "name": "clear_typing",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChatInterface.switch_channel": {
            "name": "switch_channel",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "channel": []
            }
        },
        "ChatInterface._run_cmd": {
            "name": "_run_cmd",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "ChatInterface.outgoing": {
            "name": "outgoing",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buffer": []
            }
        }
    }
}
{
    "circles-master/circles/cli.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [],
            "arguments": {
                "number": []
            }
        }
    },
    "circles-master/circles/solve.py": {
        "calculate_contained": {
            "name": "calculate_contained",
            "location": 8,
            "return": [
                "Iterable[types.Circle]"
            ],
            "arguments": {}
        },
        "calculate_intersections": {
            "name": "calculate_intersections",
            "location": 27,
            "return": [
                "Iterable[types.Circle]"
            ],
            "arguments": {}
        },
        "calculate_solutions": {
            "name": "calculate_solutions",
            "location": 50,
            "return": [
                "Sequence[List[types.Circle]]"
            ],
            "arguments": {}
        },
        "normalize_intersection": {
            "name": "normalize_intersection",
            "location": 100,
            "return": [
                "Tuple[(int, ...)]"
            ],
            "arguments": {}
        },
        "normalize_solution": {
            "name": "normalize_solution",
            "location": 111,
            "return": [
                "List[types.Circle]"
            ],
            "arguments": {}
        },
        "is_valid_solution": {
            "name": "is_valid_solution",
            "location": 147,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "normalize_solutions": {
            "name": "normalize_solutions",
            "location": 174,
            "return": [
                "Set[Tuple[(types.Circle, ...)]]"
            ],
            "arguments": {}
        },
        "calculate_circles": {
            "name": "calculate_circles",
            "location": 184,
            "return": [
                "Set[Tuple[(types.Circle, ...)]]"
            ],
            "arguments": {}
        },
        "normalize_solution._push": {
            "name": "_push",
            "location": 116,
            "return": [],
            "arguments": {
                "index": []
            }
        }
    },
    "circles-master/circles/types.py": {
        "Circle._check_contains": {
            "name": "_check_contains",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "value": []
            }
        },
        "Circle._check_intersects": {
            "name": "_check_intersects",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "attribute": [],
                "value": []
            }
        }
    },
    "circles-master/circles/__init__.py": {},
    "circles-master/circles/__main__.py": {}
}
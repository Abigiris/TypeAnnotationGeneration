{
    "cleaner-master/cleaner.py": {
        "has_required_extension": {
            "name": "has_required_extension",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "file_name": []
            }
        },
        "build_tags": {
            "name": "build_tags",
            "location": 20,
            "return": [
                "config.Tag"
            ],
            "arguments": {
                "comment_symbols": []
            }
        },
        "get_comment_tags": {
            "name": "get_comment_tags",
            "location": 28,
            "return": [
                "Optional[Tuple[(config.Tag, config.CommentSymbol)]]"
            ],
            "arguments": {
                "file_name": []
            }
        },
        "get_exclude_regex": {
            "name": "get_exclude_regex",
            "location": 36,
            "return": [
                "Pattern[str]"
            ],
            "arguments": {
                "raw_regexes": []
            }
        },
        "save_file": {
            "name": "save_file",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [],
                "lines": []
            }
        },
        "clean": {
            "name": "clean",
            "location": 51,
            "return": [
                "collections.defaultdict"
            ],
            "arguments": {
                "path": [],
                "line_processor": []
            }
        }
    },
    "cleaner-master/config.py": {},
    "cleaner-master/processors.py": {
        "delete_line_processor": {
            "name": "delete_line_processor",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "line": [],
                "comment_symbol": [],
                "tag": []
            }
        },
        "comment_line_processor": {
            "name": "comment_line_processor",
            "location": 11,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "line": [
                    "_T0@@"
                ],
                "comment_symbol": [],
                "tag": []
            }
        },
        "uncomment_line_processor": {
            "name": "uncomment_line_processor",
            "location": 19,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "line": [
                    "_T0@@"
                ],
                "comment_symbol": [],
                "tag": []
            }
        },
        "check_line_processor": {
            "name": "check_line_processor",
            "location": 29,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "line": [
                    "_T0@@"
                ],
                "comment_symbol": [],
                "tag": []
            }
        }
    },
    "cleaner-master/tests/data.py": {},
    "cleaner-master/tests/test_cleaner.py": {
        "test_line_processors": {
            "name": "test_line_processors",
            "location": 19,
            "return": [],
            "arguments": {
                "line_processor_name": [],
                "line": [],
                "processed_line": []
            }
        },
        "test_clean__include_only_defined_extensions_and_exclude_dirs": {
            "name": "test_clean__include_only_defined_extensions_and_exclude_dirs",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean": {
            "name": "test_clean",
            "location": 56,
            "return": [],
            "arguments": {
                "line_processor_name": [],
                "file_data": [],
                "expected_result": []
            }
        },
        "test_clean__rise_exception_where_no_closing_tag": {
            "name": "test_clean__rise_exception_where_no_closing_tag",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_clean__include_only_defined_extensions_and_exclude_dirs.mock_walk": {
            "name": "mock_walk",
            "location": 25,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "test_clean.mock_walk": {
            "name": "mock_walk",
            "location": 57,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "test_clean__rise_exception_where_no_closing_tag.mock_walk": {
            "name": "mock_walk",
            "location": 77,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "cleaner-master/tests/__init__.py": {}
}
{
    "cnaas-nac-master/setyp.py": {},
    "cnaas-nac-master/alembic/env.py": {
        "include_object": {
            "name": "include_object",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "object": [],
                "name": [],
                "type_": [],
                "reflected": [],
                "compare_to": []
            }
        },
        "run_migrations_offline": {
            "name": "run_migrations_offline",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_migrations_online": {
            "name": "run_migrations_online",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cnaas-nac-master/alembic/versions/1e4142701fbb_table_for_oui.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cnaas-nac-master/alembic/versions/538170dfe877_added_freeradius_tables.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cnaas-nac-master/alembic/versions/e76a7f120db0_table_for_nas_ports.py": {
        "upgrade": {
            "name": "upgrade",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "downgrade": {
            "name": "downgrade",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "cnaas-nac-master/src/cnaas_nac/run.py": {
        "get_app": {
            "name": "get_app",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "cnaas-nac-master/src/cnaas_nac/version.py": {},
    "cnaas-nac-master/src/cnaas_nac/__init__.py": {},
    "cnaas-nac-master/src/cnaas_nac/api/app.py": {
        "log_request": {
            "name": "log_request",
            "location": 64,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "CnaasApi.handle_error": {
            "name": "handle_error",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "e": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/api/auth.py": {
        "accept": {
            "name": "accept",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "username": [],
                "data": []
            }
        },
        "reject": {
            "name": "reject",
            "location": 43,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "username": [],
                "errstr": []
            }
        },
        "AuthApi.validate": {
            "name": "validate",
            "location": 49,
            "return": [
                "Tuple[(Any, Any, Any, Any, Any, Any, Any, Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "json_data": []
            }
        },
        "AuthApi.get": {
            "name": "get",
            "location": 98,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthApi.post": {
            "name": "post",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AuthApiByName.error": {
            "name": "error",
            "location": 195,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "self": [],
                "errstr": []
            }
        },
        "AuthApiByName.get": {
            "name": "get",
            "location": 199,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "AuthApiByName.put": {
            "name": "put",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "AuthApiByName.delete": {
            "name": "delete",
            "location": 220,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/api/generic.py": {
        "limit_results": {
            "name": "limit_results",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "build_filter": {
            "name": "build_filter",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "f_class": [],
                "query": []
            }
        },
        "empty_result": {
            "name": "empty_result",
            "location": 36,
            "return": [
                "Optional[Dict[(str, Union[(str, _T0, _T1)])]]"
            ],
            "arguments": {
                "status": [
                    "_T0"
                ],
                "data": [
                    "_T1"
                ]
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/db/accounting.py": {
        "Accounting.as_dict": {
            "name": "as_dict",
            "location": 47,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/db/nas.py": {
        "NasPort.as_dict": {
            "name": "as_dict",
            "location": 28,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "NasPort.get": {
            "name": "get",
            "location": 45,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "NasPort.add": {
            "name": "add",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": [],
                "nas_ip_address": [],
                "nas_identifier": [],
                "nas_port_id": [],
                "calling_station_id": [],
                "called_station_id": []
            }
        },
        "NasPort.delete": {
            "name": "delete",
            "location": 77,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/db/oui.py": {
        "DeviceOui.as_dict": {
            "name": "as_dict",
            "location": 25,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeviceOui.exists": {
            "name": "exists",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "oui": []
            }
        },
        "DeviceOui.get_vlan": {
            "name": "get_vlan",
            "location": 53,
            "return": [
                "sqlalchemy.sql.schema.Column"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "DeviceOui.normalize": {
            "name": "normalize",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "oui": []
            }
        },
        "DeviceOui.get": {
            "name": "get",
            "location": 70,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/db/session.py": {
        "get_dbdata": {
            "name": "get_dbdata",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "config": []
            }
        },
        "get_sqlalchemy_conn_str": {
            "name": "get_sqlalchemy_conn_str",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "sqla_session": {
            "name": "sqla_session",
            "location": 35,
            "return": [],
            "arguments": {
                "conn_str": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/db/user.py": {
        "get_users": {
            "name": "get_users",
            "location": 347,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "username": []
            }
        },
        "UserInfo.add": {
            "name": "add",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": [],
                "comment": [],
                "reason": []
            }
        },
        "UserInfo.get": {
            "name": "get",
            "location": 45,
            "return": [
                "Dict[(Any, Dict[(str, str)])]"
            ],
            "arguments": {
                "cls": [],
                "usernames": []
            }
        },
        "UserInfo.delete": {
            "name": "delete",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "UserInfo.as_dict": {
            "name": "as_dict",
            "location": 72,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostAuth.as_dict": {
            "name": "as_dict",
            "location": 103,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostAuth.get_last_seen": {
            "name": "get_last_seen",
            "location": 120,
            "return": [
                "Dict[(Any, Dict[(str, str)])]"
            ],
            "arguments": {
                "cls": [],
                "usernames": [],
                "last": []
            }
        },
        "Reply.as_dict": {
            "name": "as_dict",
            "location": 150,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.as_dict": {
            "name": "as_dict",
            "location": 179,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get": {
            "name": "get",
            "location": 196,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "User.reply_get": {
            "name": "reply_get",
            "location": 216,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "User.add": {
            "name": "add",
            "location": 231,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": [],
                "password": []
            }
        },
        "User.enable": {
            "name": "enable",
            "location": 244,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "User.disable": {
            "name": "disable",
            "location": 255,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "User.is_enabled": {
            "name": "is_enabled",
            "location": 327,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "User.reply_add": {
            "name": "reply_add",
            "location": 278,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": [],
                "vlan": []
            }
        },
        "User.reply_delete": {
            "name": "reply_delete",
            "location": 303,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "User.delete": {
            "name": "delete",
            "location": 315,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": []
            }
        },
        "User.reply_vlan": {
            "name": "reply_vlan",
            "location": 338,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "username": [],
                "vlan": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/tests/test_api.py": {
        "ApiTests.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.tearDown": {
            "name": "tearDown",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_01_add_user": {
            "name": "test_01_add_user",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_02_enable_user": {
            "name": "test_02_enable_user",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_03_authenticate_user": {
            "name": "test_03_authenticate_user",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_04_set_vlan": {
            "name": "test_04_set_vlan",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_05_authenticate_user_new_vlan": {
            "name": "test_05_authenticate_user_new_vlan",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_06_wrong_port": {
            "name": "test_06_wrong_port",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_06_wrong_station": {
            "name": "test_06_wrong_station",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_07_disable_user": {
            "name": "test_07_disable_user",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_08_authenticate_user": {
            "name": "test_08_authenticate_user",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_09_verify_user_data": {
            "name": "test_09_verify_user_data",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiTests.test_99_delete_user": {
            "name": "test_99_delete_user",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/tools/db_cleanup.py": {
        "db_cleanup": {
            "name": "db_cleanup",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "cnaas-nac-master/src/cnaas_nac/tools/db_replicator.py": {
        "diff_rows": {
            "name": "diff_rows",
            "location": 17,
            "return": [
                "list"
            ],
            "arguments": {
                "list_a": [
                    "list"
                ],
                "list_b": [
                    "list"
                ]
            }
        },
        "rad_replicate": {
            "name": "rad_replicate",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "db_source": [
                    "str"
                ],
                "db_target": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ],
                "table": [
                    "object"
                ]
            }
        },
        "usage": {
            "name": "usage",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/tools/helpers.py": {
        "get_user_replies": {
            "name": "get_user_replies",
            "location": 1,
            "return": [
                "list"
            ],
            "arguments": {
                "username": [],
                "replies": []
            }
        },
        "get_user_port": {
            "name": "get_user_port",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "username": [],
                "nas_ports": []
            }
        },
        "get_is_active": {
            "name": "get_is_active",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "username": [],
                "users": []
            }
        },
        "get_last_seen": {
            "name": "get_last_seen",
            "location": 34,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "username": [],
                "last_seen": []
            }
        },
        "get_last_reply": {
            "name": "get_last_reply",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "username": [],
                "last_seen": []
            }
        }
    },
    "cnaas-nac-master/src/cnaas_nac/tools/log.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "cnaas-nac-master/src/cnaas_nac/tools/rad_db.py": {
        "get_connstrs": {
            "name": "get_connstrs",
            "location": 7,
            "return": [
                "tuple"
            ],
            "arguments": {
                "source": [
                    "str"
                ],
                "target": [
                    "str"
                ],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "get_rows": {
            "name": "get_rows",
            "location": 18,
            "return": [
                "list"
            ],
            "arguments": {
                "connstr": [
                    "str"
                ],
                "table": [
                    "object"
                ]
            }
        },
        "edit_users": {
            "name": "edit_users",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "diff": [],
                "connstr": [],
                "remove": []
            }
        },
        "edit_replies": {
            "name": "edit_replies",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "diff": [],
                "connstr": [],
                "remove": []
            }
        },
        "edit_nas": {
            "name": "edit_nas",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "nas_diff": [],
                "connstr": [],
                "table": [],
                "remove": []
            }
        },
        "copy_accounting": {
            "name": "copy_accounting",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "diffs": [],
                "connstr": [],
                "table": []
            }
        },
        "edit_userinfo": {
            "name": "edit_userinfo",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "userinfo_diff": [],
                "connstr": [],
                "table": [],
                "remove": []
            }
        }
    }
}
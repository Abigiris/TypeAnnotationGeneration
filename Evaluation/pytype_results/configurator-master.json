{
    "configurator-master/setup.py": {},
    "configurator-master/configurator/compiler.py": {
        "instanciate_schema_from_template": {
            "name": "instanciate_schema_from_template",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "schema": [],
                "template": []
            }
        },
        "Template.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Template.__eq__": {
            "name": "__eq__",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Template.merge_from": {
            "name": "merge_from",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "schema": [],
                "writer": [],
                "templates": [],
                "config_modifiers": [],
                "config_validators": []
            }
        },
        "Config.resolve": {
            "name": "resolve",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.validate": {
            "name": "validate",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.write": {
            "name": "write",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigSet.__init__": {
            "name": "__init__",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "configs": [],
                "configset_modifiers": [],
                "configset_validators": []
            }
        },
        "ConfigSet.materialize": {
            "name": "materialize",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "configurator-master/configurator/schemas.py": {
        "Schema.serialize": {
            "name": "serialize",
            "location": 15,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "DictSchema.serialize": {
            "name": "serialize",
            "location": 29,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "JsonSchema.serialize": {
            "name": "serialize",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PropertiesSchema.encode": {
            "name": "encode",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": []
            }
        },
        "PropertiesSchema.serialize": {
            "name": "serialize",
            "location": 90,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "configurator-master/configurator/writers.py": {
        "file_writer": {
            "name": "file_writer",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "config": [],
                "path": []
            }
        }
    },
    "configurator-master/configurator/__init__.py": {},
    "configurator-master/examples/hadoop_clusters.py": {
        "get_config_json_writer": {
            "name": "get_config_json_writer",
            "location": 16,
            "return": [
                "functools.partial[None]"
            ],
            "arguments": {
                "cluster_name": []
            }
        }
    },
    "configurator-master/examples/hadoop_templates.py": {},
    "configurator-master/examples/hadoop_types.py": {},
    "configurator-master/examples/utils.py": {
        "merge_dict": {
            "name": "merge_dict",
            "location": 4,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "new_dict": []
            }
        },
        "merge_dict.merger": {
            "name": "merger",
            "location": 5,
            "return": [],
            "arguments": {
                "old_dict": []
            }
        }
    },
    "configurator-master/examples/__init__.py": {},
    "configurator-master/tests/common.py": {},
    "configurator-master/tests/test_config.py": {
        "test_resolve": {
            "name": "test_resolve",
            "location": 41,
            "return": [],
            "arguments": {
                "schema": [],
                "templates": [],
                "modifiers": [],
                "expected": []
            }
        },
        "test_writer_is_called": {
            "name": "test_writer_is_called",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_fail_if_writer_is_called_before_resolve": {
            "name": "test_fail_if_writer_is_called_before_resolve",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validate_success": {
            "name": "test_validate_success",
            "location": 96,
            "return": [],
            "arguments": {
                "validators": []
            }
        },
        "test_validate_failure": {
            "name": "test_validate_failure",
            "location": 128,
            "return": [],
            "arguments": {
                "validators": []
            }
        }
    },
    "configurator-master/tests/test_configset.py": {
        "create_and_attach_mock": {
            "name": "create_and_attach_mock",
            "location": 8,
            "return": [
                "mock.mock.Mock"
            ],
            "arguments": {
                "mock_manager": [],
                "name": []
            }
        },
        "test_order_of_materialization": {
            "name": "test_order_of_materialization",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_materialization_failures": {
            "name": "test_materialization_failures",
            "location": 53,
            "return": [],
            "arguments": {
                "config_validator": [],
                "configset_validator": []
            }
        }
    },
    "configurator-master/tests/test_schema.py": {
        "test_valid_instanciation": {
            "name": "test_valid_instanciation",
            "location": 29,
            "return": [],
            "arguments": {
                "schema": [],
                "template": [],
                "expected": []
            }
        },
        "test_invalid_instanciation": {
            "name": "test_invalid_instanciation",
            "location": 42,
            "return": [],
            "arguments": {
                "schema": [],
                "template": [],
                "error": []
            }
        },
        "test_serialization": {
            "name": "test_serialization",
            "location": 218,
            "return": [],
            "arguments": {
                "config": [],
                "expected": []
            }
        }
    },
    "configurator-master/tests/test_template.py": {
        "test_template_merge": {
            "name": "test_template_merge",
            "location": 32,
            "return": [],
            "arguments": {
                "source": [],
                "other": [],
                "expected": []
            }
        }
    },
    "configurator-master/tests/__init__.py": {}
}
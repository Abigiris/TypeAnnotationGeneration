{
    "cstructs-master/cstruct/cstruct.py": {
        "CStruct.append": {
            "name": "append",
            "location": 43,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "CStruct.leq": {
            "name": "leq",
            "location": 46,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CStruct.glb": {
            "name": "glb",
            "location": 49,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CStruct.compatible": {
            "name": "compatible",
            "location": 52,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CStruct.lub": {
            "name": "lub",
            "location": 55,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CStruct.contains": {
            "name": "contains",
            "location": 58,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "CStruct.append_all": {
            "name": "append_all",
            "location": 61,
            "return": [
                "CStruct"
            ],
            "arguments": {
                "self": [],
                "cmds": []
            }
        }
    },
    "cstructs-master/cstruct/sequence.py": {
        "_is_prefix": {
            "name": "_is_prefix",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "xs": [],
                "ys": []
            }
        },
        "Sequence.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "xs": []
            }
        },
        "Sequence.__eq__": {
            "name": "__eq__",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Sequence.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequence.__repr__": {
            "name": "__repr__",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequence.append": {
            "name": "append",
            "location": 27,
            "return": [
                "Sequence"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "Sequence.leq": {
            "name": "leq",
            "location": 30,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Sequence.glb": {
            "name": "glb",
            "location": 37,
            "return": [
                "Sequence"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Sequence.compatible": {
            "name": "compatible",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Sequence.lub": {
            "name": "lub",
            "location": 46,
            "return": [
                "Optional[Union[(Sequence, _T0)]]"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "_T0@@"
                ]
            }
        },
        "Sequence.contains": {
            "name": "contains",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        }
    },
    "cstructs-master/cstruct/sequence_test.py": {
        "SequenceTest.test_append": {
            "name": "test_append",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceTest.test_append_all": {
            "name": "test_append_all",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceTest.test_leq": {
            "name": "test_leq",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceTest.test_glb": {
            "name": "test_glb",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceTest.test_compatible": {
            "name": "test_compatible",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceTest.test_lub": {
            "name": "test_lub",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequenceTest.test_contains": {
            "name": "test_contains",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cstructs-master/cstruct/__init__.py": {}
}
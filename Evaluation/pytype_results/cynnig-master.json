{
    "cynnig-master/cynnig/app.py": {
        "new_motion_video_handler": {
            "name": "new_motion_video_handler",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [],
                "context": []
            }
        },
        "new_motion_gifs_handler": {
            "name": "new_motion_gifs_handler",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [],
                "context": []
            }
        },
        "elastictranscoder_resource_handler": {
            "name": "elastictranscoder_resource_handler",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [],
                "context": []
            }
        },
        "create_pipeline": {
            "name": "create_pipeline",
            "location": 93,
            "return": [
                "Tuple[(str, Any)]"
            ],
            "arguments": {
                "event": [],
                "context": []
            }
        },
        "update_pipeline": {
            "name": "update_pipeline",
            "location": 120,
            "return": [
                "Tuple[(str, Any)]"
            ],
            "arguments": {
                "event": [],
                "context": []
            }
        },
        "delete_pipeline": {
            "name": "delete_pipeline",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [],
                "context": []
            }
        },
        "schedule_gif_transcoding": {
            "name": "schedule_gif_transcoding",
            "location": 169,
            "return": [
                "dict"
            ],
            "arguments": {
                "client": [],
                "pipeline_id": [
                    "str"
                ],
                "object_key": [
                    "str"
                ]
            }
        },
        "find_pipeline_id": {
            "name": "find_pipeline_id",
            "location": 186,
            "return": [
                "str"
            ],
            "arguments": {
                "client": [],
                "stack_name": [
                    "str"
                ]
            }
        }
    },
    "cynnig-master/cynnig/__init__.py": {},
    "cynnig-master/cynnig/lib/crhelper.py": {
        "log_config": {
            "name": "log_config",
            "location": 8,
            "return": [
                "logging.LoggerAdapter[logging.Logger]"
            ],
            "arguments": {
                "event": [],
                "loglevel": [],
                "botolevel": []
            }
        },
        "send": {
            "name": "send",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [],
                "context": [],
                "responseStatus": [],
                "responseData": [],
                "physicalResourceId": [],
                "logger": [],
                "reason": []
            }
        },
        "timeout": {
            "name": "timeout",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [],
                "context": [],
                "logger": []
            }
        },
        "cfn_handler": {
            "name": "cfn_handler",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "event": [],
                "context": [],
                "create": [],
                "update": [],
                "delete": [],
                "logger": [],
                "init_failed": []
            }
        }
    },
    "cynnig-master/cynnig/lib/lambda_types.py": {
        "ElasticTranscoderClient.create_job": {
            "name": "create_job",
            "location": 136,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElasticTranscoderClient.read_pipeline": {
            "name": "read_pipeline",
            "location": 139,
            "return": [
                "AWSPipelineResponse"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElasticTranscoderClient.create_pipeline": {
            "name": "create_pipeline",
            "location": 142,
            "return": [
                "AWSPipelineResponse"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElasticTranscoderClient.update_pipeline": {
            "name": "update_pipeline",
            "location": 147,
            "return": [
                "AWSPipelineResponse"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElasticTranscoderClient.delete_pipeline": {
            "name": "delete_pipeline",
            "location": 153,
            "return": [
                "AWSElasticTranscoderResponse"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "cynnig-master/cynnig/lib/rocketchat.py": {
        "RocketChat.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "server_url": [
                    "str"
                ],
                "username": [
                    "Optional[str]"
                ],
                "password": [
                    "Optional[str]"
                ],
                "user_id": [
                    "Optional[str]"
                ],
                "auth_token": [
                    "Optional[str]"
                ]
            }
        },
        "RocketChat.request": {
            "name": "request",
            "location": 45,
            "return": [
                "RocketResponse"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "str"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "RocketChat.login": {
            "name": "login",
            "location": 59,
            "return": [
                "RocketLoginResponse"
            ],
            "arguments": {
                "self": [],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "RocketChat.upload": {
            "name": "upload",
            "location": 67,
            "return": [
                "RocketResponse"
            ],
            "arguments": {
                "self": [],
                "room_id": [
                    "str"
                ],
                "name": [
                    "str"
                ],
                "file": [
                    "BinaryIO"
                ]
            }
        },
        "TokenAuth.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_id": [],
                "auth_token": []
            }
        },
        "TokenAuth.__call__": {
            "name": "__call__",
            "location": 80,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "_T0"
                ]
            }
        },
        "LoginAuth.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chat": [
                    "RocketChat"
                ],
                "username": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        },
        "LoginAuth.token_auth": {
            "name": "token_auth",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoginAuth.__call__": {
            "name": "__call__",
            "location": 106,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "_T0"
                ]
            }
        }
    },
    "cynnig-master/cynnig/lib/__init__.py": {},
    "cynnig-master/tests/test_elastictranscoder_resource_handler.py": {
        "create_event": {
            "name": "create_event",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "update_event": {
            "name": "update_event",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "non_update_event": {
            "name": "non_update_event",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "delete_event": {
            "name": "delete_event",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "lambda_context": {
            "name": "lambda_context",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "requests": {
            "name": "requests",
            "location": 126,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "session": {
            "name": "session",
            "location": 135,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_create": {
            "name": "test_create",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "create_event": [],
                "lambda_context": [],
                "session": [],
                "requests": []
            }
        },
        "test_update_not_found": {
            "name": "test_update_not_found",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "update_event": [],
                "lambda_context": [],
                "session": [],
                "requests": []
            }
        },
        "test_non_update": {
            "name": "test_non_update",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "non_update_event": [],
                "lambda_context": [],
                "session": [],
                "requests": []
            }
        },
        "test_update": {
            "name": "test_update",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "update_event": [],
                "lambda_context": [],
                "session": [],
                "requests": []
            }
        },
        "test_delete": {
            "name": "test_delete",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {
                "delete_event": [],
                "lambda_context": [],
                "session": [],
                "requests": []
            }
        },
        "test_delete_not_found": {
            "name": "test_delete_not_found",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "delete_event": [],
                "lambda_context": [],
                "session": [],
                "requests": []
            }
        },
        "create_pipeline_test": {
            "name": "create_pipeline_test",
            "location": 245,
            "return": [
                "None"
            ],
            "arguments": {
                "lambda_fn": [],
                "event": [],
                "context": [],
                "session": [],
                "pipeline_arn": [],
                "pipeline_id": [],
                "requests": []
            }
        },
        "assert_cfn_response": {
            "name": "assert_cfn_response",
            "location": 257,
            "return": [
                "None"
            ],
            "arguments": {
                "requests": [],
                "data": []
            }
        }
    },
    "cynnig-master/tests/test_new_motion_gifs_handler.py": {
        "sns_job_completed_lambda_event": {
            "name": "sns_job_completed_lambda_event",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_new_motion_video_handler": {
            "name": "test_new_motion_video_handler",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "sns_job_completed_lambda_event": [],
                "monkeypatch": []
            }
        },
        "KMS.decrypt": {
            "name": "decrypt",
            "location": 36,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "CiphertextBlob": []
            }
        },
        "test_new_motion_video_handler.mocked_client": {
            "name": "mocked_client",
            "location": 53,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "cynnig-master/tests/test_new_motion_video_handler.py": {
        "s3_new_object_lambda_event": {
            "name": "s3_new_object_lambda_event",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_new_motion_video_handler": {
            "name": "test_new_motion_video_handler",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "s3_new_object_lambda_event": [],
                "monkeypatch": []
            }
        }
    },
    "cynnig-master/tests/test_rocketchat.py": {
        "chat": {
            "name": "chat",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_login": {
            "name": "test_login",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "chat": []
            }
        },
        "assert_request_auth": {
            "name": "assert_request_auth",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "request": []
            }
        }
    }
}
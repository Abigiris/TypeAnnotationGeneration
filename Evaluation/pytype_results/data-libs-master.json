{
    "data-libs-master/connections/setup.py": {},
    "data-libs-master/connections/revlibs/__init__.py": {},
    "data-libs-master/connections/revlibs/connections/config.py": {
        "load": {
            "name": "load",
            "location": 17,
            "return": [],
            "arguments": {
                "database": []
            }
        },
        "load_connection_settings": {
            "name": "load_connection_settings",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "config": []
            }
        },
        "Config.__repr__": {
            "name": "__repr__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.__contains__": {
            "name": "__contains__",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Config.params": {
            "name": "params",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.password": {
            "name": "password",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.__getattr__": {
            "name": "__getattr__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "data-libs-master/connections/revlibs/connections/connectors.py": {
        "BaseConnector.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "cfg": []
            }
        },
        "BaseConnector._connect": {
            "name": "_connect",
            "location": 21,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "BaseConnector._is_connection_closed": {
            "name": "_is_connection_closed",
            "location": 27,
            "return": [],
            "arguments": {
                "connection": []
            }
        },
        "BaseConnector.is_connected": {
            "name": "is_connected",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseConnector.get_connection": {
            "name": "get_connection",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseConnector.close": {
            "name": "close",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExasolConnector._is_connection_closed": {
            "name": "_is_connection_closed",
            "location": 54,
            "return": [],
            "arguments": {
                "connection": []
            }
        },
        "ExasolConnector._connect": {
            "name": "_connect",
            "location": 59,
            "return": [],
            "arguments": {
                "config": []
            }
        },
        "PostgresConnector._is_connection_closed": {
            "name": "_is_connection_closed",
            "location": 93,
            "return": [],
            "arguments": {
                "connection": []
            }
        },
        "PostgresConnector._parse_dsn": {
            "name": "_parse_dsn",
            "location": 98,
            "return": [],
            "arguments": {
                "data_source_name": []
            }
        },
        "PostgresConnector._connect": {
            "name": "_connect",
            "location": 110,
            "return": [],
            "arguments": {
                "config": []
            }
        }
    },
    "data-libs-master/connections/revlibs/connections/exceptions.py": {
        "DatabaseConnectionError.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "connection_name": [],
                "reason": []
            }
        }
    },
    "data-libs-master/connections/revlibs/connections/interface.py": {
        "get_connector": {
            "name": "get_connector",
            "location": 15,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "get": {
            "name": "get",
            "location": 59,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "data-libs-master/connections/revlibs/connections/__init__.py": {},
    "data-libs-master/connections/tests/config_test.py": {
        "test_raise_password": {
            "name": "test_raise_password",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_password_fetched": {
            "name": "test_password_fetched",
            "location": 17,
            "return": [],
            "arguments": {}
        }
    },
    "data-libs-master/connections/tests/connectors_test.py": {
        "test_simple_postgres": {
            "name": "test_simple_postgres",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_multi_server_postgres": {
            "name": "test_multi_server_postgres",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "test_multi_server_exasol": {
            "name": "test_multi_server_exasol",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "test_bad_dsn_exasol": {
            "name": "test_bad_dsn_exasol",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "test_disabled_connection": {
            "name": "test_disabled_connection",
            "location": 89,
            "return": [],
            "arguments": {}
        },
        "test_failed_connection_postgres": {
            "name": "test_failed_connection_postgres",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "test_pyexasol_exceptions": {
            "name": "test_pyexasol_exceptions",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "test_unknown_flavour": {
            "name": "test_unknown_flavour",
            "location": 148,
            "return": [],
            "arguments": {}
        },
        "test_get_connector_same_connection": {
            "name": "test_get_connector_same_connection",
            "location": 158,
            "return": [],
            "arguments": {}
        },
        "test_get_connector_closed_connection": {
            "name": "test_get_connector_closed_connection",
            "location": 175,
            "return": [],
            "arguments": {}
        }
    },
    "data-libs-master/dicts/setup.py": {},
    "data-libs-master/dicts/tests.py": {
        "create_dir": {
            "name": "create_dir",
            "location": 25,
            "return": [],
            "arguments": {
                "num_files": [],
                "dict_generator": [],
                "extensions": []
            }
        },
        "test_load_dicts": {
            "name": "test_load_dicts",
            "location": 78,
            "return": [],
            "arguments": {
                "generator": [],
                "num_files": [],
                "expected_size": [],
                "extensions": []
            }
        },
        "test_to_dict_simple": {
            "name": "test_to_dict_simple",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "test_to_dict_transform": {
            "name": "test_to_dict_transform",
            "location": 102,
            "return": [],
            "arguments": {}
        },
        "test_group_by_unordered": {
            "name": "test_group_by_unordered",
            "location": 112,
            "return": [],
            "arguments": {}
        },
        "test_duplicate": {
            "name": "test_duplicate",
            "location": 119,
            "return": [],
            "arguments": {}
        },
        "test_filter": {
            "name": "test_filter",
            "location": 126,
            "return": [],
            "arguments": {}
        },
        "test_cast_then_key": {
            "name": "test_cast_then_key",
            "location": 139,
            "return": [],
            "arguments": {}
        },
        "test_group_by_file": {
            "name": "test_group_by_file",
            "location": 159,
            "return": [],
            "arguments": {}
        },
        "Animal.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Animal.__repr__": {
            "name": "__repr__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Animal.__eq__": {
            "name": "__eq__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "test_cast_then_key.animal_size": {
            "name": "animal_size",
            "location": 148,
            "return": [],
            "arguments": {
                "animal": []
            }
        }
    },
    "data-libs-master/dicts/revlibs/dicts.py": {
        "Dicts.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "dicts": [],
                "skip_errors": [],
                "load_disabled": [],
                "disabled_key": []
            }
        },
        "Dicts.items": {
            "name": "items",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dicts.__classify_path": {
            "name": "__classify_path",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dicts.__load_items": {
            "name": "__load_items",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dicts.remove_disabled_items": {
            "name": "remove_disabled_items",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "Dicts.load_file": {
            "name": "load_file",
            "location": 105,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "Dicts.load_directory": {
            "name": "load_directory",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dicts.items_as": {
            "name": "items_as",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "Dicts.filter": {
            "name": "filter",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "predicate": []
            }
        },
        "Dicts.__make_callable": {
            "name": "__make_callable",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "Dicts.__key_by": {
            "name": "__key_by",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": [],
                "map": []
            }
        },
        "Dicts.key_by": {
            "name": "key_by",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": [],
                "map": []
            }
        },
        "Dicts.key_by_file": {
            "name": "key_by_file",
            "location": 226,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dicts.map_by": {
            "name": "map_by",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "Dicts.from_path": {
            "name": "from_path",
            "location": 250,
            "return": [],
            "arguments": {
                "path": [],
                "skip_errors": [],
                "load_disabled": [],
                "disabled_key": []
            }
        },
        "Dicts.from_dicts": {
            "name": "from_dicts",
            "location": 264,
            "return": [],
            "arguments": {
                "dicts": [],
                "skip_errors": [],
                "load_disabled": [],
                "disabled_key": []
            }
        }
    },
    "data-libs-master/dicts/revlibs/__init__.py": {},
    "data-libs-master/logger/setup.py": {},
    "data-libs-master/logger/tests.py": {
        "test_console_logging": {
            "name": "test_console_logging",
            "location": 9,
            "return": [],
            "arguments": {
                "capsys": [],
                "monkeypatch": []
            }
        }
    },
    "data-libs-master/logger/revlibs/__init__.py": {},
    "data-libs-master/logger/revlibs/logger/__init__.py": {
        "_load_logging_config_": {
            "name": "_load_logging_config_",
            "location": 28,
            "return": [],
            "arguments": {
                "params": []
            }
        },
        "select_handlers": {
            "name": "select_handlers",
            "location": 44,
            "return": [],
            "arguments": {
                "names": [],
                "config": []
            }
        },
        "get_logger": {
            "name": "get_logger",
            "location": 57,
            "return": [],
            "arguments": {
                "name": [],
                "params": [],
                "add_handlers": []
            }
        }
    },
    "data-libs-master/logger/revlibs/logger/formatters/color_formatter.py": {
        "ColoredFormatter.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "ColoredFormatter.format": {
            "name": "format",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "data-libs-master/logger/revlibs/logger/formatters/stackdriver_formatter.py": {
        "supported_keys": {
            "name": "supported_keys",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "serialize": {
            "name": "serialize",
            "location": 52,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "add_stack_driver_support": {
            "name": "add_stack_driver_support",
            "location": 68,
            "return": [],
            "arguments": {
                "log": []
            }
        },
        "StackdriverJsonFormatter.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StackdriverJsonFormatter.environment_info": {
            "name": "environment_info",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "StackdriverJsonFormatter.format": {
            "name": "format",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "data-libs-master/logger/revlibs/logger/formatters/__init__.py": {}
}
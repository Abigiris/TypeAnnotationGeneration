{
    "dim-master/dim.py": {
        "parse_html": {
            "name": "parse_html",
            "location": 567,
            "return": [
                "Any"
            ],
            "arguments": {
                "html": []
            }
        },
        "_tag_is_void": {
            "name": "_tag_is_void",
            "location": 1200,
            "return": [
                "bool"
            ],
            "arguments": {
                "tag": []
            }
        },
        "_tag_encloses_foreign_namespace": {
            "name": "_tag_encloses_foreign_namespace",
            "location": 1225,
            "return": [
                "bool"
            ],
            "arguments": {
                "tag": []
            }
        },
        "Node.__init__": {
            "name": "__init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.__str__": {
            "name": "__str__",
            "location": 113,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.select": {
            "name": "select",
            "location": 116,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "selector": []
            }
        },
        "Node.query_selector": {
            "name": "query_selector",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "selector": []
            }
        },
        "Node.select_all": {
            "name": "select_all",
            "location": 127,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "selector": []
            }
        },
        "Node.query_selector_all": {
            "name": "query_selector_all",
            "location": 132,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "selector": []
            }
        },
        "Node.matched_by": {
            "name": "matched_by",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "selector": [],
                "root": []
            }
        },
        "Node._normalize_selector": {
            "name": "_normalize_selector",
            "location": 148,
            "return": [
                "Union[(SelectorGroup, _T0)]"
            ],
            "arguments": {
                "selector": [
                    "_T0@@"
                ]
            }
        },
        "Node._select_all": {
            "name": "_select_all",
            "location": 157,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "selector": []
            }
        },
        "Node.child_nodes": {
            "name": "child_nodes",
            "location": 162,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.first_child": {
            "name": "first_child",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.first_element_child": {
            "name": "first_element_child",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.last_child": {
            "name": "last_child",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.last_element_child": {
            "name": "last_element_child",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.next_sibling": {
            "name": "next_sibling",
            "location": 189,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.next_siblings": {
            "name": "next_siblings",
            "location": 197,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.next_element_sibling": {
            "name": "next_element_sibling",
            "location": 207,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.previous_sibling": {
            "name": "previous_sibling",
            "location": 214,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.previous_siblings": {
            "name": "previous_siblings",
            "location": 222,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.previous_element_sibling": {
            "name": "previous_element_sibling",
            "location": 240,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.ancestors": {
            "name": "ancestors",
            "location": 247,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.descendants": {
            "name": "descendants",
            "location": 268,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.attr": {
            "name": "attr",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Node.html": {
            "name": "html",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.outer_html": {
            "name": "outer_html",
            "location": 288,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.inner_html": {
            "name": "inner_html",
            "location": 292,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.text": {
            "name": "text",
            "location": 297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.text_content": {
            "name": "text_content",
            "location": 301,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Node.classes": {
            "name": "classes",
            "location": 306,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Node.class_list": {
            "name": "class_list",
            "location": 309,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementNode.__init__": {
            "name": "__init__",
            "location": 321,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [],
                "attrs": []
            }
        },
        "ElementNode.__repr__": {
            "name": "__repr__",
            "location": 335,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementNode._repr_pretty_": {
            "name": "_repr_pretty_",
            "location": 345,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "cycle": []
            }
        },
        "ElementNode.__str__": {
            "name": "__str__",
            "location": 368,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ElementNode.text": {
            "name": "text",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextNode.__new__": {
            "name": "__new__",
            "location": 397,
            "return": [
                "_TTextNode@@TextNode@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTextNode]"
                ],
                "text": []
            }
        },
        "TextNode.__init__": {
            "name": "__init__",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "TextNode.__repr__": {
            "name": "__repr__",
            "location": 405,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextNode.__str__": {
            "name": "__str__",
            "location": 410,
            "return": [
                "_TTextNode@@TextNode@@"
            ],
            "arguments": {
                "self": [
                    "_TTextNode@@TextNode@@"
                ]
            }
        },
        "TextNode.__eq__": {
            "name": "__eq__",
            "location": 413,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TextNode.__ne__": {
            "name": "__ne__",
            "location": 421,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TextNode.text": {
            "name": "text",
            "location": 430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DOMBuilderException.__init__": {
            "name": "__init__",
            "location": 445,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pos": [],
                "why": []
            }
        },
        "DOMBuilderException.__str__": {
            "name": "__str__",
            "location": 449,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DOMBuilder.__init__": {
            "name": "__init__",
            "location": 465,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DOMBuilder.handle_starttag": {
            "name": "handle_starttag",
            "location": 481,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [],
                "attrs": []
            }
        },
        "DOMBuilder.handle_endtag": {
            "name": "handle_endtag",
            "location": 499,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "tag": []
            }
        },
        "DOMBuilder.handle_startendtag": {
            "name": "handle_startendtag",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": [],
                "attrs": []
            }
        },
        "DOMBuilder.handle_data": {
            "name": "handle_data",
            "location": 546,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "DOMBuilder.root": {
            "name": "root",
            "location": 553,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SelectorParserException.__init__": {
            "name": "__init__",
            "location": 601,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "s": [],
                "cursor": [],
                "why": []
            }
        },
        "SelectorParserException.__str__": {
            "name": "__str__",
            "location": 606,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectorGroup.__init__": {
            "name": "__init__",
            "location": 629,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "selectors": []
            }
        },
        "SelectorGroup.__repr__": {
            "name": "__repr__",
            "location": 632,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectorGroup.__str__": {
            "name": "__str__",
            "location": 635,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectorGroup.__len__": {
            "name": "__len__",
            "location": 638,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectorGroup.__getitem__": {
            "name": "__getitem__",
            "location": 641,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "SelectorGroup.__iter__": {
            "name": "__iter__",
            "location": 644,
            "return": [
                "listiterator"
            ],
            "arguments": {
                "self": []
            }
        },
        "SelectorGroup.from_str": {
            "name": "from_str",
            "location": 648,
            "return": [
                "_TSelectorGroup@@SelectorGroup@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSelectorGroup]"
                ],
                "s": []
            }
        },
        "SelectorGroup.matches": {
            "name": "matches",
            "location": 670,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "root": []
            }
        },
        "Selector.__init__": {
            "name": "__init__",
            "location": 773,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Selector.__repr__": {
            "name": "__repr__",
            "location": 790,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Selector.__str__": {
            "name": "__str__",
            "location": 793,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Selector._sequence_str_": {
            "name": "_sequence_str_",
            "location": 822,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Selector.from_str": {
            "name": "from_str",
            "location": 835,
            "return": [
                "Tuple[(Selector, int)]"
            ],
            "arguments": {
                "cls": [],
                "s": [],
                "cursor": []
            }
        },
        "Selector.matches": {
            "name": "matches",
            "location": 1032,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "node": [],
                "root": []
            }
        },
        "AttributeSelector.__init__": {
            "name": "__init__",
            "location": 1097,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "attr": [],
                "val": [],
                "type": []
            }
        },
        "AttributeSelector.__repr__": {
            "name": "__repr__",
            "location": 1104,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AttributeSelector.__str__": {
            "name": "__str__",
            "location": 1107,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AttributeSelector.matches": {
            "name": "matches",
            "location": 1124,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "dim-master/tests.py": {
        "annotations": {
            "name": "annotations",
            "location": 75,
            "return": [
                "list"
            ],
            "arguments": {
                "nodes": []
            }
        },
        "tree": {
            "name": "tree",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "test_selector": {
            "name": "test_selector",
            "location": 124,
            "return": [],
            "arguments": {
                "tree": [],
                "selector": [],
                "matches": []
            }
        },
        "test_non_root_selection": {
            "name": "test_non_root_selection",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_parsing_void_elements": {
            "name": "test_parsing_void_elements",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_malformed_html": {
            "name": "test_malformed_html",
            "location": 156,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "test_valid_html": {
            "name": "test_valid_html",
            "location": 178,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "test_tree_walking": {
            "name": "test_tree_walking",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_root_siblings": {
            "name": "test_root_siblings",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_html": {
            "name": "test_html",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_lone_text_node": {
            "name": "test_lone_text_node",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_empty_element": {
            "name": "test_empty_element",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_text_content": {
            "name": "test_text_content",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_text_mode_comparison": {
            "name": "test_text_mode_comparison",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_bad_selector": {
            "name": "test_bad_selector",
            "location": 296,
            "return": [],
            "arguments": {
                "selector": []
            }
        },
        "test_unsupported_selector": {
            "name": "test_unsupported_selector",
            "location": 313,
            "return": [],
            "arguments": {
                "selector": []
            }
        },
        "test_ancestors": {
            "name": "test_ancestors",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_node_misc": {
            "name": "test_node_misc",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "test_selector_misc": {
            "name": "test_selector_misc",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "AnnotatedDOMBuilder.handle_comment": {
            "name": "handle_comment",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "comment": []
            }
        }
    },
    "dim-master/doc/conf.py": {
        "copyright_years": {
            "name": "copyright_years",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "dim-master/doc/genparamdoc.py": {
        "setup": {
            "name": "setup",
            "location": 15,
            "return": [
                "Dict[(str, bool)]"
            ],
            "arguments": {
                "app": []
            }
        },
        "_process_docstring": {
            "name": "_process_docstring",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "app": [],
                "what": [],
                "name": [],
                "obj": [],
                "options": [],
                "lines": []
            }
        },
        "_get_object_by_name": {
            "name": "_get_object_by_name",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "qualname": []
            }
        },
        "_get_param_list": {
            "name": "_get_param_list",
            "location": 57,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "callable": []
            }
        },
        "_format_params": {
            "name": "_format_params",
            "location": 67,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "params": []
            }
        }
    }
}
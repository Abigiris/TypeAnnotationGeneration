{
    "django-graphql-playground-master/manage.py": {},
    "django-graphql-playground-master/django_graphql_playground/settings.py": {},
    "django-graphql-playground-master/django_graphql_playground/urls.py": {},
    "django-graphql-playground-master/django_graphql_playground/wsgi.py": {},
    "django-graphql-playground-master/django_graphql_playground/__init__.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/__init__.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/core/admin.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/core/apps.py": {
        "CoreConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/core/models.py": {
        "Category.__str__": {
            "name": "__str__",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ingredient.__str__": {
            "name": "__str__",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/core/signals.py": {
        "user_logged_in_callback": {
            "name": "user_logged_in_callback",
            "location": 14,
            "return": [],
            "arguments": {
                "sender": [],
                "request": [],
                "user": []
            }
        },
        "user_logged_out_callback": {
            "name": "user_logged_out_callback",
            "location": 20,
            "return": [],
            "arguments": {
                "sender": [],
                "request": [],
                "user": []
            }
        },
        "user_login_failed_callback": {
            "name": "user_login_failed_callback",
            "location": 25,
            "return": [],
            "arguments": {
                "sender": [],
                "credentials": [],
                "request": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/core/__init__.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/core/management/commands/seed_db.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/core/migrations/__init__.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/drf/apps.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/drf/serializers.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/drf/views.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/drf/__init__.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/gqyl/apps.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/gqyl/mutations.py": {
        "DeleteCategory.mutate": {
            "name": "mutate",
            "location": 20,
            "return": [
                "_TDeleteCategory"
            ],
            "arguments": {
                "self": [
                    "_TDeleteCategory"
                ],
                "info": [],
                "name": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/gqyl/objects_types.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/gqyl/query.py": {
        "QueryDefinition.resolve_all_categories": {
            "name": "resolve_all_categories",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "QueryDefinition.resolve_category": {
            "name": "resolve_category",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "QueryDefinition.resolve_all_categories_configured_between_the_date": {
            "name": "resolve_all_categories_configured_between_the_date",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "QueryDefinition.resolve_all_ingredients": {
            "name": "resolve_all_ingredients",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "info": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/gqyl/schema.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/gqyl/views.py": {
        "DRFAuthenticatedGraphQLView.parse_body": {
            "name": "parse_body",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DRFAuthenticatedGraphQLView.as_view": {
            "name": "as_view",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/gqyl/__init__.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/pubsub/apps.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/pubsub/exceps.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/pubsub/__init__.py": {},
    "django-graphql-playground-master/django_graphql_playground/apps/pubsub/management/commands/pubsub_consumer.py": {
        "_listener_callback": {
            "name": "_listener_callback",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "payload": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/pubsub/management/commands/pubsub_producer.py": {
        "Command.handle": {
            "name": "handle",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/pubsub/services/consumer.py": {
        "build_listener": {
            "name": "build_listener",
            "location": 103,
            "return": [
                "_Listener"
            ],
            "arguments": {
                "destination_name": [],
                "callback": [],
                "ack_type": []
            }
        },
        "_Listener.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connection": [],
                "callback": [],
                "subscription_configuration": [
                    "dict"
                ],
                "connection_configuration": [
                    "dict"
                ]
            }
        },
        "_Listener.on_message": {
            "name": "on_message",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "headers": [],
                "message": []
            }
        },
        "_Listener.is_open": {
            "name": "is_open",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Listener.start": {
            "name": "start",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "block": [],
                "testing": []
            }
        },
        "_Listener.close": {
            "name": "close",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Listener.on_message.ack_logic": {
            "name": "ack_logic",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "_Listener.on_message.nack_logic": {
            "name": "nack_logic",
            "location": 65,
            "return": [],
            "arguments": {}
        }
    },
    "django-graphql-playground-master/django_graphql_playground/apps/pubsub/services/producer.py": {
        "build_publisher": {
            "name": "build_publisher",
            "location": 68,
            "return": [
                "_Publisher"
            ],
            "arguments": {
                "destination_name": []
            }
        },
        "auto_open_close_connection": {
            "name": "auto_open_close_connection",
            "location": 87,
            "return": [],
            "arguments": {
                "publisher": []
            }
        },
        "do_inside_transaction": {
            "name": "do_inside_transaction",
            "location": 97,
            "return": [],
            "arguments": {
                "publisher": []
            }
        },
        "_Publisher.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "connection": [],
                "connection_configuration": [
                    "dict"
                ],
                "destination_name": [
                    "str"
                ]
            }
        },
        "_Publisher.is_open": {
            "name": "is_open",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Publisher.start": {
            "name": "start",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Publisher.close": {
            "name": "close",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_Publisher.send": {
            "name": "send",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": [],
                "headers": [],
                "attempt": []
            }
        },
        "_Publisher._retry_send": {
            "name": "_retry_send",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "function": [
                    "Callable"
                ],
                "attempt": []
            }
        },
        "_Publisher.send._internal_send_logic": {
            "name": "_internal_send_logic",
            "location": 50,
            "return": [],
            "arguments": {}
        }
    },
    "django-graphql-playground-master/django_graphql_playground/support/decorators.py": {
        "measure_it": {
            "name": "measure_it",
            "location": 9,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "auto_str": {
            "name": "auto_str",
            "location": 22,
            "return": [
                "_T0"
            ],
            "arguments": {
                "cls": [
                    "_T0"
                ]
            }
        },
        "slow_down": {
            "name": "slow_down",
            "location": 30,
            "return": [
                "Callable"
            ],
            "arguments": {
                "_func": []
            }
        },
        "measure_it.timed": {
            "name": "timed",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "auto_str.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "slow_down.decorator_slow_down": {
            "name": "decorator_slow_down",
            "location": 33,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "slow_down.decorator_slow_down.wrapper_slow_down": {
            "name": "wrapper_slow_down",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "django-graphql-playground-master/django_graphql_playground/support/django_helpers.py": {
        "batch_qs": {
            "name": "batch_qs",
            "location": 53,
            "return": [
                "Generator[(Tuple[(int, Any, Any, Any)], Any, None)]"
            ],
            "arguments": {
                "query_set": [],
                "batch_size": []
            }
        },
        "make_sure_database_is_usable": {
            "name": "make_sure_database_is_usable",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "ExportCsvMixin.export_as_csv": {
            "name": "export_as_csv",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": []
            }
        },
        "CustomModelAdminMixin.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model": [],
                "admin_site": []
            }
        },
        "ChoiceEnum.choices": {
            "name": "choices",
            "location": 74,
            "return": [
                "Tuple[(Tuple[(Any, Any)], ...)]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ChoiceEnum.name_from_value": {
            "name": "name_from_value",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "value": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/support/log.py": {
        "_generated_correlation_id": {
            "name": "_generated_correlation_id",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "custom_correlation_id": []
            }
        },
        "_unset_correlation_id": {
            "name": "_unset_correlation_id",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "do_log_with_correlation_id": {
            "name": "do_log_with_correlation_id",
            "location": 28,
            "return": [],
            "arguments": {
                "custom_correlation_id": []
            }
        },
        "ContextFilter.filter": {
            "name": "filter",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "django-graphql-playground-master/django_graphql_playground/support/utils.py": {
        "extract_db_properties_from_url": {
            "name": "extract_db_properties_from_url",
            "location": 30,
            "return": [
                "_DatabaseProperties"
            ],
            "arguments": {
                "connection_url": []
            }
        },
        "retrieve_ip_address": {
            "name": "retrieve_ip_address",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": []
            }
        },
        "some_day_from_next_month": {
            "name": "some_day_from_next_month",
            "location": 77,
            "return": [
                "datetime.date"
            ],
            "arguments": {}
        },
        "get_first_day": {
            "name": "get_first_day",
            "location": 81,
            "return": [
                "datetime.date"
            ],
            "arguments": {
                "dt": [],
                "delta_years": [],
                "delta_months": []
            }
        },
        "get_last_day": {
            "name": "get_last_day",
            "location": 87,
            "return": [
                "datetime.date"
            ],
            "arguments": {
                "dt": []
            }
        },
        "option": {
            "name": "option",
            "location": 91,
            "return": [
                "Callable"
            ],
            "arguments": {
                "function": []
            }
        },
        "eval_env_as_boolean": {
            "name": "eval_env_as_boolean",
            "location": 102,
            "return": [
                "bool"
            ],
            "arguments": {
                "varname": [],
                "standard_value": []
            }
        },
        "option.wrapper": {
            "name": "wrapper",
            "location": 92,
            "return": [],
            "arguments": {}
        }
    },
    "django-graphql-playground-master/tests/conftest.py": {
        "caplog": {
            "name": "caplog",
            "location": 5,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "pytest_assertrepr_compare": {
            "name": "pytest_assertrepr_compare",
            "location": 21,
            "return": [
                "Optional[List[str]]"
            ],
            "arguments": {
                "config": [],
                "op": [],
                "left": [],
                "right": []
            }
        }
    },
    "django-graphql-playground-master/tests/__init__.py": {},
    "django-graphql-playground-master/tests/integration/test_urls.py": {
        "prepare_db": {
            "name": "prepare_db",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "get_user_from_admin": {
            "name": "get_user_from_admin",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_should_get_401_as_categories_api_is_protected": {
            "name": "test_should_get_401_as_categories_api_is_protected",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_should_get_401_as_ingredients_api_is_protected": {
            "name": "test_should_get_401_as_ingredients_api_is_protected",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "test_should_generate_token_from_registered_user": {
            "name": "test_should_generate_token_from_registered_user",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_should_acess_categories_api_with_authenticated_user": {
            "name": "test_should_acess_categories_api_with_authenticated_user",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "live_server": []
            }
        },
        "test_should_authenticate_with_basic_authentication": {
            "name": "test_should_authenticate_with_basic_authentication",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "live_server": []
            }
        },
        "test_prisma_python_graphql_client": {
            "name": "test_prisma_python_graphql_client",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "live_server": [],
                "get_user_from_admin": []
            }
        },
        "test_gql_client": {
            "name": "test_gql_client",
            "location": 121,
            "return": [],
            "arguments": {
                "live_server": [],
                "prepare_db": [],
                "get_user_from_admin": []
            }
        }
    },
    "django-graphql-playground-master/tests/integration/apps/__init__.py": {},
    "django-graphql-playground-master/tests/integration/apps/core/test_admin.py": {
        "test_category_page_should_have_properly_configured_columns": {
            "name": "test_category_page_should_have_properly_configured_columns",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_category_page_should_have_properly_configured_filters": {
            "name": "test_category_page_should_have_properly_configured_filters",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        }
    },
    "django-graphql-playground-master/tests/integration/apps/core/test_models.py": {
        "test_should_create_category": {
            "name": "test_should_create_category",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_should_create_an_ingredient_with_its_category": {
            "name": "test_should_create_an_ingredient_with_its_category",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_should_throw_constraint_error_when_category_id_is_invalid": {
            "name": "test_should_throw_constraint_error_when_category_id_is_invalid",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "django-graphql-playground-master/tests/integration/apps/core/test_signals.py": {
        "test_should_log_username_when_one_logged_in_and_logged_out": {
            "name": "test_should_log_username_when_one_logged_in_and_logged_out",
            "location": 8,
            "return": [],
            "arguments": {
                "caplog": []
            }
        },
        "test_should_log_attempt_when_user_failed_to_login": {
            "name": "test_should_log_attempt_when_user_failed_to_login",
            "location": 26,
            "return": [],
            "arguments": {
                "caplog": []
            }
        }
    },
    "django-graphql-playground-master/tests/integration/apps/core/__init__.py": {},
    "django-graphql-playground-master/tests/integration/apps/core/management/commands/test_seed_db.py": {
        "test_should_seed_db_without_super_user": {
            "name": "test_should_seed_db_without_super_user",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_should_seed_db_with_super_user_given_extra_option": {
            "name": "test_should_seed_db_with_super_user_given_extra_option",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_should_seed_db_with_super_user_hidding_password_given_extra_option": {
            "name": "test_should_seed_db_with_super_user_hidding_password_given_extra_option",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "test_should_seed_db_with_custom_super_user_given_extra_options": {
            "name": "test_should_seed_db_with_custom_super_user_given_extra_options",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "test_should_inform_if_super_user_exists": {
            "name": "test_should_inform_if_super_user_exists",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "test_should_only_create_super_user_given_extra_options": {
            "name": "test_should_only_create_super_user_given_extra_options",
            "location": 79,
            "return": [],
            "arguments": {}
        }
    },
    "django-graphql-playground-master/tests/integration/apps/gqyl/test_mutations.py": {
        "client": {
            "name": "client",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_should_create_category": {
            "name": "test_should_create_category",
            "location": 17,
            "return": [],
            "arguments": {
                "client": []
            }
        },
        "test_should_update_category": {
            "name": "test_should_update_category",
            "location": 40,
            "return": [],
            "arguments": {
                "client": []
            }
        },
        "test_should_delete_category": {
            "name": "test_should_delete_category",
            "location": 72,
            "return": [],
            "arguments": {
                "client": []
            }
        },
        "test_should_create_ingredient": {
            "name": "test_should_create_ingredient",
            "location": 89,
            "return": [],
            "arguments": {
                "client": []
            }
        }
    },
    "django-graphql-playground-master/tests/integration/apps/gqyl/test_resolvers.py": {
        "client": {
            "name": "client",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "prepare_db": {
            "name": "prepare_db",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_should_retrieve_all_categories": {
            "name": "test_should_retrieve_all_categories",
            "location": 29,
            "return": [],
            "arguments": {
                "client": [],
                "prepare_db": []
            }
        },
        "test_should_retrieve_specific_category": {
            "name": "test_should_retrieve_specific_category",
            "location": 57,
            "return": [],
            "arguments": {
                "client": [],
                "prepare_db": []
            }
        },
        "test_should_retrieve_nothing_from_category": {
            "name": "test_should_retrieve_nothing_from_category",
            "location": 112,
            "return": [],
            "arguments": {
                "client": [],
                "prepare_db": []
            }
        },
        "test_should_retrieve_categories_created_between_from_specific_date": {
            "name": "test_should_retrieve_categories_created_between_from_specific_date",
            "location": 134,
            "return": [],
            "arguments": {
                "client": []
            }
        },
        "test_should_retrieve_all_ingredients": {
            "name": "test_should_retrieve_all_ingredients",
            "location": 185,
            "return": [],
            "arguments": {
                "client": [],
                "prepare_db": []
            }
        },
        "test_should_retrieve_specific_category.do_assert": {
            "name": "do_assert",
            "location": 60,
            "return": [],
            "arguments": {
                "category": []
            }
        }
    },
    "django-graphql-playground-master/tests/integration/apps/gqyl/__init__.py": {},
    "django-graphql-playground-master/tests/integration/apps/pubsub/management/commands/test_pubsub_consumer.py": {
        "configured_publisher": {
            "name": "configured_publisher",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_should_persist_category_when_valid_payload_is_received": {
            "name": "test_should_persist_category_when_valid_payload_is_received",
            "location": 27,
            "return": [],
            "arguments": {
                "configured_publisher": []
            }
        }
    },
    "django-graphql-playground-master/tests/integration/apps/pubsub/management/commands/test_pubsub_producer.py": {
        "test_should_send_expired_categories__given_they_werent_distributed_yet": {
            "name": "test_should_send_expired_categories__given_they_werent_distributed_yet",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "django-graphql-playground-master/tests/unit/support/test_utils.py": {
        "test_should_extract_db_properties_given_url": {
            "name": "test_should_extract_db_properties_given_url",
            "location": 12,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    }
}
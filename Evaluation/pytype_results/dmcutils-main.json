{
    "dmcutils-main/CalibrateDMC.py": {
        "doplatescale": {
            "name": "doplatescale",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "infn": [],
                "outfn": [],
                "latlon": [],
                "ut1": []
            }
        }
    },
    "dmcutils-main/cam_intensity.py": {
        "plotstats": {
            "name": "plotstats",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "bmean": [],
                "bmin": [],
                "bmax": [],
                "bvar": [],
                "t": [],
                "imgfn": [],
                "israzel": [],
                "isrvalid": []
            }
        },
        "loadplot": {
            "name": "loadplot",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "imgfn": [],
                "calfn": [],
                "israzel": [],
                "isrvalid": [],
                "showmovie": [],
                "writemovie": []
            }
        },
        "update": {
            "name": "update",
            "location": 138,
            "return": [
                "Tuple[(Any, Any, Any, Any)]"
            ],
            "arguments": {
                "imgs": [],
                "mask": [],
                "t": [],
                "hi": [],
                "ht": [],
                "showmovie": [],
                "writemovie": [],
                "writer": []
            }
        }
    },
    "dmcutils-main/ConvertAVI2hdf5.py": {},
    "dmcutils-main/ConvertSolisFits2h5.py": {
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "flist": [
                    "List[pathlib.Path]"
                ],
                "ofn": [
                    "pathlib.Path"
                ],
                "P": [
                    "dict"
                ]
            }
        }
    },
    "dmcutils-main/ConvertSpool2h5.py": {
        "converter": {
            "name": "converter",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "p": []
            }
        }
    },
    "dmcutils-main/FileTick.py": {
        "filetick": {
            "name": "filetick",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "indir": [
                    "pathlib.Path"
                ],
                "xy": [
                    "tuple"
                ],
                "stride": [
                    "int"
                ],
                "tickfn": [
                    "pathlib.Path"
                ],
                "zerocols": [
                    "int"
                ]
            }
        }
    },
    "dmcutils-main/live_preview_neospool.py": {},
    "dmcutils-main/PlotSpool.py": {
        "plotspool": {
            "name": "plotspool",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [],
                "kinetic": [],
                "tstart": []
            }
        }
    },
    "dmcutils-main/preview.py": {
        "preview_image_web": {
            "name": "preview_image_web",
            "location": 32,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "datadir": [
                    "pathlib.Path"
                ],
                "htmldir": [
                    "pathlib.Path"
                ],
                "update": [
                    "int"
                ],
                "verbose": [
                    "bool"
                ]
            }
        }
    },
    "dmcutils-main/sendGmail.py": {
        "sender": {
            "name": "sender",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "user": [
                    "str"
                ],
                "passw": [
                    "str"
                ],
                "to": [
                    "list"
                ],
                "email_text": [
                    "str"
                ],
                "server": [
                    "str"
                ]
            }
        }
    },
    "dmcutils-main/setup.py": {},
    "dmcutils-main/Webserver.py": {
        "static_file": {
            "name": "static_file",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "dmcutils-main/src/dmcutils/avi2hdf5.py": {
        "avi2hdf5": {
            "name": "avi2hdf5",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "avifn": [
                    "pathlib.Path"
                ],
                "ofn": [
                    "pathlib.Path"
                ],
                "t0": [],
                "P": [
                    "dict"
                ]
            }
        }
    },
    "dmcutils-main/src/dmcutils/fitsreadermulti.py": {
        "fitsreadermulti": {
            "name": "fitsreadermulti",
            "location": 16,
            "return": [
                "tuple"
            ],
            "arguments": {
                "flist": [
                    "List[pathlib.Path]"
                ],
                "outfn": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "dmcutils-main/src/dmcutils/neospool.py": {
        "preview_newest": {
            "name": "preview_newest",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ],
                "odir": [
                    "pathlib.Path"
                ],
                "oldfset": [
                    "set"
                ],
                "inifn": [
                    "str"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "findnewest": {
            "name": "findnewest",
            "location": 58,
            "return": [
                "Union[(pathlib.Path, Tuple[(Any, Set[pathlib.Path])])]"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ],
                "oldset": [
                    "set"
                ],
                "verbose": [
                    "bool"
                ]
            }
        },
        "spoolpath": {
            "name": "spoolpath",
            "location": 91,
            "return": [
                "List[pathlib.Path]"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ]
            }
        },
        "spoolparam": {
            "name": "spoolparam",
            "location": 112,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "inifn": [
                    "pathlib.Path"
                ],
                "superx": [
                    "int"
                ],
                "supery": [
                    "int"
                ],
                "stride": [
                    "int"
                ]
            }
        },
        "readNeoSpool": {
            "name": "readNeoSpool",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "fn": [
                    "pathlib.Path"
                ],
                "P": [
                    "dict"
                ],
                "ifrm": [],
                "tickonly": [
                    "bool"
                ],
                "zerocols": [
                    "int"
                ]
            }
        },
        "tickfile": {
            "name": "tickfile",
            "location": 251,
            "return": [
                "Any"
            ],
            "arguments": {
                "flist": [
                    "List[pathlib.Path]"
                ],
                "P": [
                    "dict"
                ],
                "outfn": [
                    "pathlib.Path"
                ],
                "zerocol": [
                    "int"
                ]
            }
        },
        "annowrite": {
            "name": "annowrite",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "img": [],
                "newfn": [
                    "pathlib.Path"
                ],
                "pngfn": [
                    "pathlib.Path"
                ]
            }
        },
        "oldspool": {
            "name": "oldspool",
            "location": 346,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "path": [
                    "pathlib.Path"
                ],
                "xy": [
                    "Tuple[(int, int)]"
                ],
                "bn": [],
                "kineticsec": [
                    "float"
                ],
                "startutc": [],
                "outfn": [
                    "pathlib.Path"
                ]
            }
        },
        "tickfile._writeh5": {
            "name": "_writeh5",
            "location": 259,
            "return": [],
            "arguments": {
                "F": [],
                "outfn": [],
                "flist": []
            }
        }
    },
    "dmcutils-main/src/dmcutils/whichandorfile.py": {
        "whichfile": {
            "name": "whichfile",
            "location": 15,
            "return": [
                "Tuple[(pathlib.Path, pathlib.Path)]"
            ],
            "arguments": {
                "firstfn": [
                    "pathlib.Path"
                ],
                "treq": [
                    "List[_datetime.datetime]"
                ]
            }
        },
        "getandorfn": {
            "name": "getandorfn",
            "location": 52,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "dt": [
                    "_datetime.timedelta"
                ],
                "secperfile": [],
                "firstfn": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "dmcutils-main/src/dmcutils/__init__.py": {
        "h5toh5": {
            "name": "h5toh5",
            "location": 10,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "fn": [
                    "pathlib.Path"
                ],
                "kineticsec": [
                    "float"
                ],
                "startutc": []
            }
        },
        "mean16to8": {
            "name": "mean16to8",
            "location": 26,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "img": [
                    "np.ndarray"
                ]
            }
        },
        "bytescale": {
            "name": "bytescale",
            "location": 47,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "img": [
                    "np.ndarray"
                ],
                "Clim": [
                    "Tuple[(int, int)]"
                ]
            }
        },
        "normframe": {
            "name": "normframe",
            "location": 63,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "img": [
                    "np.ndarray"
                ],
                "Clim": [
                    "Tuple[(int, int)]"
                ]
            }
        }
    },
    "dmcutils-main/src/dmcutils/tests/TestFileopSpeed.py": {},
    "dmcutils-main/src/dmcutils/tests/TestHDF5writeRace.py": {
        "test_h5race": {
            "name": "test_h5race",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "outfn": [
                    "pathlib.Path"
                ],
                "N": [
                    "int"
                ]
            }
        }
    },
    "dmcutils-main/src/dmcutils/tests/test_all.py": {
        "test_neoparam": {
            "name": "test_neoparam",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
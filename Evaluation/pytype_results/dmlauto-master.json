{
    "dmlauto-master/dev.py": {},
    "dmlauto-master/web_power.py": {
        "server_public": {
            "name": "server_public",
            "location": 50,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "switchon": {
            "name": "switchon",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "switchoff": {
            "name": "switchoff",
            "location": 73,
            "return": [],
            "arguments": {}
        },
        "server_home": {
            "name": "server_home",
            "location": 91,
            "return": [],
            "arguments": {}
        }
    },
    "dmlauto-master/wv.py": {
        "set_res": {
            "name": "set_res",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "cap": [],
                "resolution": []
            }
        }
    },
    "dmlauto-master/.vscode/.ropeproject/config.py": {
        "set_prefs": {
            "name": "set_prefs",
            "location": 5,
            "return": [],
            "arguments": {
                "prefs": []
            }
        },
        "project_opened": {
            "name": "project_opened",
            "location": 110,
            "return": [],
            "arguments": {
                "project": []
            }
        }
    },
    "dmlauto-master/cpy/cpy_serial_gmail.py": {},
    "dmlauto-master/cpy/cpy_serial_neopix.py": {},
    "dmlauto-master/dmlauto/dmlapp.py": {
        "index": {
            "name": "index",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "on": {
            "name": "on",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "off": {
            "name": "off",
            "location": 20,
            "return": [],
            "arguments": {}
        }
    },
    "dmlauto-master/pi-power-master/web-power.py": {
        "server_public": {
            "name": "server_public",
            "location": 47,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "switchon": {
            "name": "switchon",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "switchoff": {
            "name": "switchoff",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "server_home": {
            "name": "server_home",
            "location": 87,
            "return": [],
            "arguments": {}
        }
    },
    "dmlauto-master/pyenergenie-master/src/cleanup.py": {},
    "dmlauto-master/pyenergenie-master/src/combined.py": {
        "switch_loop": {
            "name": "switch_loop",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "dmlauto-master/pyenergenie-master/src/legacy.py": {
        "get_yes_no": {
            "name": "get_yes_no",
            "location": 57,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "legacy_learn_mode": {
            "name": "legacy_learn_mode",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "legacy_switch_loop": {
            "name": "legacy_switch_loop",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "switch1_loop": {
            "name": "switch1_loop",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "pattern_test": {
            "name": "pattern_test",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "dmlauto-master/pyenergenie-master/src/Logger.py": {
        "trace": {
            "name": "trace",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "logMessage": {
            "name": "logMessage",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/monitor.py": {
        "warning": {
            "name": "warning",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "trace": {
            "name": "trace",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "monitor_loop": {
            "name": "monitor_loop",
            "location": 26,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "dmlauto-master/pyenergenie-master/src/switch.py": {
        "warning": {
            "name": "warning",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "trace": {
            "name": "trace",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "switch_sniff_loop": {
            "name": "switch_sniff_loop",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "switch_toggle_loop": {
            "name": "switch_toggle_loop",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "dmlauto-master/pyenergenie-master/src/Timer.py": {
        "Timer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ratesec": [],
                "offsetsec": []
            }
        },
        "Timer.check": {
            "name": "check",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/crypto.py": {
        "init": {
            "name": "init",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "pid": [],
                "pip": []
            }
        },
        "cryptByte": {
            "name": "cryptByte",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": []
            }
        },
        "cryptPayload": {
            "name": "cryptPayload",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "payload": [],
                "start": [],
                "length": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/Devices.py": {
        "getDescription": {
            "name": "getDescription",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {
                "mfrid": [],
                "productid": []
            }
        },
        "hasSwitch": {
            "name": "hasSwitch",
            "location": 86,
            "return": [
                "bool"
            ],
            "arguments": {
                "mfrid": [],
                "productid": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/encoder.py": {
        "ashex": {
            "name": "ashex",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "payload": []
            }
        },
        "build_relay_msg": {
            "name": "build_relay_msg",
            "location": 61,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "relayState": []
            }
        },
        "build_test_message": {
            "name": "build_test_message",
            "location": 75,
            "return": [
                "list"
            ],
            "arguments": {
                "pattern": []
            }
        },
        "build_switch_msg": {
            "name": "build_switch_msg",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "state": [],
                "device_address": [],
                "house_address": []
            }
        },
        "encode_bytes": {
            "name": "encode_bytes",
            "location": 137,
            "return": [
                "list"
            ],
            "arguments": {
                "data": []
            }
        },
        "encode_bits": {
            "name": "encode_bits",
            "location": 149,
            "return": [
                "list"
            ],
            "arguments": {
                "data": [],
                "number": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/encoder_test.py": {
        "ashex": {
            "name": "ashex",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "data": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/Messages.py": {
        "send_join_ack": {
            "name": "send_join_ack",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "radio": [],
                "mfrid": [],
                "productid": [],
                "sensorid": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/OpenThings.py": {
        "init": {
            "name": "init",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "pid": []
            }
        },
        "warning": {
            "name": "warning",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "trace": {
            "name": "trace",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "decode": {
            "name": "decode",
            "location": 138,
            "return": [
                "Dict[(str, Union[(str, Dict[(str, Any)], List[Dict[(str, Any)]])])]"
            ],
            "arguments": {
                "payload": [],
                "decrypt": []
            }
        },
        "encode": {
            "name": "encode",
            "location": 247,
            "return": [
                "list"
            ],
            "arguments": {
                "spec": [],
                "encrypt": []
            }
        },
        "calcCRC": {
            "name": "calcCRC",
            "location": 563,
            "return": [
                "int"
            ],
            "arguments": {
                "payload": [],
                "start": [],
                "length": []
            }
        },
        "showMessage": {
            "name": "showMessage",
            "location": 577,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [],
                "timestamp": []
            }
        },
        "alterMessage": {
            "name": "alterMessage",
            "location": 607,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "message": [
                    "_T0@@"
                ]
            }
        },
        "getFromMessage": {
            "name": "getFromMessage",
            "location": 630,
            "return": [
                "Any"
            ],
            "arguments": {
                "message": [],
                "keypath": []
            }
        },
        "printhex": {
            "name": "printhex",
            "location": 645,
            "return": [
                "None"
            ],
            "arguments": {
                "payload": []
            }
        },
        "test_payload_unencrypted": {
            "name": "test_payload_unencrypted",
            "location": 673,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_payload_encrypted": {
            "name": "test_payload_encrypted",
            "location": 697,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_value_encoder": {
            "name": "test_value_encoder",
            "location": 721,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_value_decoder": {
            "name": "test_value_decoder",
            "location": 744,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "OpenThingsException.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "OpenThingsException.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Value.typebits": {
            "name": "typebits",
            "location": 342,
            "return": [
                "int"
            ],
            "arguments": {
                "typeid": []
            }
        },
        "Value.highestClearBit": {
            "name": "highestClearBit",
            "location": 357,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": [],
                "maxbits": []
            }
        },
        "Value.valuebits": {
            "name": "valuebits",
            "location": 373,
            "return": [
                "int"
            ],
            "arguments": {
                "value": []
            }
        },
        "Value.encode": {
            "name": "encode",
            "location": 397,
            "return": [
                "list"
            ],
            "arguments": {
                "value": [],
                "typeid": [],
                "length": []
            }
        },
        "Value.decode": {
            "name": "decode",
            "location": 500,
            "return": [
                "Any"
            ],
            "arguments": {
                "valuebytes": [],
                "typeid": [],
                "length": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/radio.py": {
        "trace": {
            "name": "trace",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": []
            }
        },
        "tohex": {
            "name": "tohex",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "l": []
            }
        },
        "unimplemented": {
            "name": "unimplemented",
            "location": 62,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "m": [
                    "_T0@@"
                ]
            }
        },
        "deprecated": {
            "name": "deprecated",
            "location": 67,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "m": [
                    "_T0@@"
                ]
            }
        },
        "untested": {
            "name": "untested",
            "location": 73,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "m": [
                    "_T0@@"
                ]
            }
        },
        "disabled": {
            "name": "disabled",
            "location": 79,
            "return": [
                "Callable"
            ],
            "arguments": {
                "m": []
            }
        },
        "init": {
            "name": "init",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "reset": {
            "name": "reset",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_ver": {
            "name": "get_ver",
            "location": 98,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "modulation": {
            "name": "modulation",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "fsk": [],
                "ook": []
            }
        },
        "transmitter": {
            "name": "transmitter",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "fsk": [],
                "ook": []
            }
        },
        "transmit": {
            "name": "transmit",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "payload": [],
                "outer_times": [],
                "inner_times": [],
                "outer_delay": []
            }
        },
        "send_payload": {
            "name": "send_payload",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "payload": [],
                "outer_times": [],
                "inner_times": [],
                "outer_delay": []
            }
        },
        "receiver": {
            "name": "receiver",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "fsk": [],
                "ook": []
            }
        },
        "is_receive_waiting": {
            "name": "is_receive_waiting",
            "location": 190,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "receive": {
            "name": "receive",
            "location": 199,
            "return": [
                "list"
            ],
            "arguments": {
                "size": []
            }
        },
        "receive_cbp": {
            "name": "receive_cbp",
            "location": 208,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "receive_len": {
            "name": "receive_len",
            "location": 236,
            "return": [
                "list"
            ],
            "arguments": {
                "size": []
            }
        },
        "standby": {
            "name": "standby",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "finished": {
            "name": "finished",
            "location": 265,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "disabled.nothing": {
            "name": "nothing",
            "location": 82,
            "return": [],
            "arguments": {}
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/radio_test.py": {
        "radio_test_ook": {
            "name": "radio_test_ook",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/Registry.py": {
        "allkeys": {
            "name": "allkeys",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "d": []
            }
        },
        "update": {
            "name": "update",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "message": []
            }
        },
        "size": {
            "name": "size",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "get_sensorids": {
            "name": "get_sensorids",
            "location": 46,
            "return": [
                "dict_keys[nothing]"
            ],
            "arguments": {}
        },
        "get_info": {
            "name": "get_info",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "sensor_id": []
            }
        }
    },
    "dmlauto-master/pyenergenie-master/src/energenie/__init__.py": {},
    "dmlauto-master/rpi/unt.py": {},
    "dmlauto-master/rpi/webscraper.py": {
        "get_base_url": {
            "name": "get_base_url",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": []
            }
        },
        "get_soup": {
            "name": "get_soup",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": []
            }
        },
        "download_images": {
            "name": "download_images",
            "location": 48,
            "return": [
                "list"
            ],
            "arguments": {
                "soup": []
            }
        }
    },
    "dmlauto-master/rpi/webscraper1.py": {
        "downloadProcess": {
            "name": "downloadProcess",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "html": [],
                "base": [],
                "filetype": [],
                "linkList": []
            }
        }
    },
    "dmlauto-master/rpi/webscraper2.py": {
        "get_base_url": {
            "name": "get_base_url",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": []
            }
        },
        "get_soup": {
            "name": "get_soup",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": []
            }
        },
        "get_none_soup": {
            "name": "get_none_soup",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": []
            }
        },
        "download_links": {
            "name": "download_links",
            "location": 77,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "start_url": [],
                "filetypes": []
            }
        },
        "download_images": {
            "name": "download_images",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "start_url": [],
                "filetypes": []
            }
        }
    },
    "dmlauto-master/rpi/webscraper3(threads).py": {
        "get_base_url": {
            "name": "get_base_url",
            "location": 48,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "get_soup": {
            "name": "get_soup",
            "location": 58,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "get_none_soup": {
            "name": "get_none_soup",
            "location": 75,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "download_unknowns": {
            "name": "download_unknowns",
            "location": 82,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "make_dir_from_href": {
            "name": "make_dir_from_href",
            "location": 126,
            "return": [],
            "arguments": {
                "href": []
            }
        },
        "download_links": {
            "name": "download_links",
            "location": 139,
            "return": [],
            "arguments": {
                "start_url": [],
                "filetypes": []
            }
        },
        "download_images": {
            "name": "download_images",
            "location": 170,
            "return": [],
            "arguments": {
                "start_url": [],
                "filetypes": []
            }
        }
    },
    "dmlauto-master/rpi/webscraper4(gevent).py": {
        "get_base_url": {
            "name": "get_base_url",
            "location": 50,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "get_soup": {
            "name": "get_soup",
            "location": 60,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "get_none_soup": {
            "name": "get_none_soup",
            "location": 77,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "download_unknowns": {
            "name": "download_unknowns",
            "location": 84,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "make_dir_from_href": {
            "name": "make_dir_from_href",
            "location": 115,
            "return": [],
            "arguments": {
                "href": []
            }
        },
        "download_links": {
            "name": "download_links",
            "location": 128,
            "return": [],
            "arguments": {
                "start_url": [],
                "filetypes": []
            }
        },
        "download_images": {
            "name": "download_images",
            "location": 159,
            "return": [],
            "arguments": {
                "start_url": [],
                "filetypes": []
            }
        }
    },
    "dmlauto-master/rpi/webscraper5(asyncIO).py": {},
    "dmlauto-master/rpi/webvid.1.py": {
        "set_res": {
            "name": "set_res",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "cap": [],
                "resolution": []
            }
        }
    },
    "dmlauto-master/rpi/webvid.py": {
        "set_res": {
            "name": "set_res",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "cap": [],
                "resolution": []
            }
        }
    },
    "dmlauto-master/work/rtktest.py": {}
}
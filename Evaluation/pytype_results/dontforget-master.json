{
    "dontforget-master/src/dontforget/app.py": {
        "load_plugins": {
            "name": "load_plugins",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "DontForgetApp.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DontForgetApp.create_preferences_menu": {
            "name": "create_preferences_menu",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DontForgetApp.clicked_preferences": {
            "name": "clicked_preferences",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "DontForgetApp.clicked_reload_config_file": {
            "name": "clicked_reload_config_file",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "DontForgetApp.start_scheduler": {
            "name": "start_scheduler",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePlugin.name": {
            "name": "name",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasePlugin.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_yaml": []
            }
        },
        "BasePlugin.plugin_config": {
            "name": "plugin_config",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasePlugin.init_app": {
            "name": "init_app",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "BasePlugin.reload_config": {
            "name": "reload_config",
            "location": 111,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dontforget-master/src/dontforget/cli.py": {
        "main": {
            "name": "main",
            "location": 20,
            "return": [],
            "arguments": {
                "clear_cache": []
            }
        },
        "menu": {
            "name": "menu",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "register_plugin_commands": {
            "name": "register_plugin_commands",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "pipe": {
            "name": "pipe",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "ls": {
            "name": "ls",
            "location": 75,
            "return": [],
            "arguments": {
                "which": []
            }
        },
        "run": {
            "name": "run",
            "location": 85,
            "return": [],
            "arguments": {
                "partial_names": []
            }
        }
    },
    "dontforget-master/src/dontforget/constants.py": {},
    "dontforget-master/src/dontforget/generic.py": {
        "get_subclasses": {
            "name": "get_subclasses",
            "location": 59,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        },
        "flatten": {
            "name": "flatten",
            "location": 68,
            "return": [
                "dict"
            ],
            "arguments": {
                "dict_": [],
                "parent_key": [],
                "separator": []
            }
        },
        "unflatten": {
            "name": "unflatten",
            "location": 86,
            "return": [
                "Dict[(Any, dict)]"
            ],
            "arguments": {
                "dict_": [],
                "separator": []
            }
        },
        "find_partial_keys": {
            "name": "find_partial_keys",
            "location": 108,
            "return": [
                "list"
            ],
            "arguments": {
                "list_or_dict": [],
                "partial_key": [],
                "not_found": [],
                "multiple": []
            }
        },
        "pretty_plugin_name": {
            "name": "pretty_plugin_name",
            "location": 176,
            "return": [
                "str"
            ],
            "arguments": {
                "class_": []
            }
        },
        "parse_interval": {
            "name": "parse_interval",
            "location": 182,
            "return": [
                "Dict[(Any, int)]"
            ],
            "arguments": {
                "text": []
            }
        },
        "classproperty": {
            "name": "classproperty",
            "location": 257,
            "return": [
                "ClassPropertyDescriptor"
            ],
            "arguments": {
                "func": []
            }
        },
        "SingletonMixin.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingletonMixin.singleton": {
            "name": "singleton",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ClassPropertyDescriptor.__init__": {
            "name": "__init__",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fget": [],
                "fset": []
            }
        },
        "ClassPropertyDescriptor.__get__": {
            "name": "__get__",
            "location": 236,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": [],
                "klass": []
            }
        },
        "ClassPropertyDescriptor.__set__": {
            "name": "__set__",
            "location": 242,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": [],
                "value": []
            }
        },
        "ClassPropertyDescriptor.setter": {
            "name": "setter",
            "location": 249,
            "return": [
                "_TClassPropertyDescriptor@@ClassPropertyDescriptor@@"
            ],
            "arguments": {
                "self": [
                    "_TClassPropertyDescriptor@@ClassPropertyDescriptor@@"
                ],
                "func": []
            }
        }
    },
    "dontforget-master/src/dontforget/home.py": {
        "go_home": {
            "name": "go_home",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "desired_date": []
            }
        }
    },
    "dontforget-master/src/dontforget/pipes.py": {
        "Pipe.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "toml_file": []
            }
        },
        "Pipe.__lt__": {
            "name": "__lt__",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipe.original_dict": {
            "name": "original_dict",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipe.merged_dict": {
            "name": "merged_dict",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipe.echo": {
            "name": "echo",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pipe.echo_dict": {
            "name": "echo_dict",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pipe.merge_parent_pipes": {
            "name": "merge_parent_pipes",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pipe.validate": {
            "name": "validate",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pipe.run": {
            "name": "run",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipeConfig.default_pipes": {
            "name": "default_pipes",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipeConfig.user_pipes": {
            "name": "user_pipes",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipeConfig.pipes_by_name": {
            "name": "pipes_by_name",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipeConfig.sources": {
            "name": "sources",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipeConfig.targets": {
            "name": "targets",
            "location": 184,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipeConfig._find_pipes_in": {
            "name": "_find_pipes_in",
            "location": 189,
            "return": [
                "Set[Pipe]"
            ],
            "arguments": {
                "directories": []
            }
        },
        "PipeConfig.echo": {
            "name": "echo",
            "location": 210,
            "return": [
                "_TPipeConfig@@PipeConfig@@"
            ],
            "arguments": {
                "self": [
                    "_TPipeConfig@@PipeConfig@@"
                ],
                "header": [],
                "default": []
            }
        },
        "PipeConfig.get_pipe": {
            "name": "get_pipe",
            "location": 217,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "exact_name": []
            }
        },
        "PipeConfig.get_pipes": {
            "name": "get_pipes",
            "location": 221,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "partial_name": []
            }
        },
        "BaseSource.name": {
            "name": "name",
            "location": 233,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseSource.get_class_from": {
            "name": "get_class_from",
            "location": 238,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "class_name": []
            }
        },
        "BaseSource.pull": {
            "name": "pull",
            "location": 249,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "connection_info": []
            }
        },
        "BaseSource.on_success": {
            "name": "on_success",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseSource.on_failure": {
            "name": "on_failure",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseTarget.__init__": {
            "name": "__init__",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseTarget.name": {
            "name": "name",
            "location": 272,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "BaseTarget.get_class_from": {
            "name": "get_class_from",
            "location": 277,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "class_name": []
            }
        },
        "BaseTarget.push": {
            "name": "push",
            "location": 288,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "raw_data": []
            }
        },
        "BaseTarget.unique_key": {
            "name": "unique_key",
            "location": 292,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "dontforget-master/src/dontforget/settings.py": {
        "load_config_file": {
            "name": "load_config_file",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "dontforget-master/src/dontforget/typedefs.py": {},
    "dontforget-master/src/dontforget/__init__.py": {},
    "dontforget-master/src/dontforget/default_pipes/gmail_plugin.py": {
        "format_count": {
            "name": "format_count",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "threads": [],
                "messages": []
            }
        },
        "GMailPlugin.name": {
            "name": "name",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GMailPlugin.init_app": {
            "name": "init_app",
            "location": 90,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "GMailPlugin.reload_config": {
            "name": "reload_config",
            "location": 115,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GMailPlugin.update_important": {
            "name": "update_important",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": [],
                "threads": [],
                "messages": [],
                "clear": []
            }
        },
        "LabelCollection.__init__": {
            "name": "__init__",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LabelCollection.add": {
            "name": "add",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "LabelCollection.items": {
            "name": "items",
            "location": 201,
            "return": [
                "dict_items"
            ],
            "arguments": {
                "self": []
            }
        },
        "GMailAPI.__init__": {
            "name": "__init__",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": []
            }
        },
        "GMailAPI.authenticate": {
            "name": "authenticate",
            "location": 218,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GMailAPI.fetch_labels": {
            "name": "fetch_labels",
            "location": 256,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GMailAPI.unread_count": {
            "name": "unread_count",
            "location": 273,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "GMailJob.__init__": {
            "name": "__init__",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GMailJob.add_to_menu": {
            "name": "add_to_menu",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "menuitem": []
            }
        },
        "GMailJob.create_main_menu": {
            "name": "create_main_menu",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GMailJob.__call__": {
            "name": "__call__",
            "location": 350,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GMailJob.check_now_clicked": {
            "name": "check_now_clicked",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sender": []
            }
        },
        "GMailJob.label_clicked": {
            "name": "label_clicked",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "menu": []
            }
        },
        "GMailJob.check_unread_labels": {
            "name": "check_unread_labels",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dontforget-master/src/dontforget/default_pipes/mail.py": {
        "EmailSource.pull": {
            "name": "pull",
            "location": 23,
            "return": [
                "Generator[(Dict[(str, Any)], Any, Optional[List[nothing]])]"
            ],
            "arguments": {
                "self": [],
                "connection_info": []
            }
        },
        "EmailSource.build_search_url": {
            "name": "build_search_url",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "from_": [],
                "after": [],
                "before": [],
                "subject": []
            }
        },
        "EmailSource.on_success": {
            "name": "on_success",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dontforget-master/src/dontforget/default_pipes/redmine.py": {
        "RedmineSource.pull": {
            "name": "pull",
            "location": 13,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "connection_info": []
            }
        }
    },
    "dontforget-master/src/dontforget/default_pipes/todoist.py": {
        "Todoist.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "api_token": []
            }
        },
        "Todoist.smart_sync": {
            "name": "smart_sync",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Todoist._merge_new_data": {
            "name": "_merge_new_data",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "partial_data": []
            }
        },
        "Todoist.keys": {
            "name": "keys",
            "location": 74,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Todoist.fetch": {
            "name": "fetch",
            "location": 79,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "element_name": [],
                "return_field": [],
                "filters": [],
                "index": [],
                "matching_function": []
            }
        },
        "Todoist.fetch_first": {
            "name": "fetch_first",
            "location": 109,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "element_name": [],
                "return_field": [],
                "filters": []
            }
        },
        "Todoist.find_project_id": {
            "name": "find_project_id",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "exact_name": []
            }
        },
        "Todoist.find_projects": {
            "name": "find_projects",
            "location": 120,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "partial_name": []
            }
        },
        "Todoist.find_project_items": {
            "name": "find_project_items",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "exact_project_name": [],
                "extra_jmes_expression": []
            }
        },
        "Todoist.find_items_by_content": {
            "name": "find_items_by_content",
            "location": 140,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "exact_project_name": [],
                "partial_content": []
            }
        },
        "TodoistTarget.push": {
            "name": "push",
            "location": 174,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "raw_data": []
            }
        },
        "TodoistTarget._set_project_id": {
            "name": "_set_project_id",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TodoistTarget._add_task": {
            "name": "_add_task",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "dontforget-master/src/dontforget/default_pipes/toggl_plugin.py": {
        "fetch_all_clients": {
            "name": "fetch_all_clients",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "fetch_all_projects": {
            "name": "fetch_all_projects",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "track": {
            "name": "track",
            "location": 192,
            "return": [],
            "arguments": {
                "entry": []
            }
        },
        "what_i_did": {
            "name": "what_i_did",
            "location": 209,
            "return": [],
            "arguments": {
                "date": [],
                "report": []
            }
        },
        "TogglPlugin.name": {
            "name": "name",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TogglPlugin.init_app": {
            "name": "init_app",
            "location": 96,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "TogglPlugin.create": {
            "name": "create",
            "location": 104,
            "return": [
                "_TTogglPlugin@@TogglPlugin@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTogglPlugin]"
                ]
            }
        },
        "TogglPlugin.set_api_token": {
            "name": "set_api_token",
            "location": 108,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TogglPlugin.create_menu": {
            "name": "create_menu",
            "location": 118,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TogglPlugin.fetch_shortcuts": {
            "name": "fetch_shortcuts",
            "location": 134,
            "return": [
                "Dict[(Any, ShortcutDC)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TogglPlugin.fetch_clients_projects": {
            "name": "fetch_clients_projects",
            "location": 148,
            "return": [
                "_TTogglPlugin@@TogglPlugin@@"
            ],
            "arguments": {
                "self": [
                    "_TTogglPlugin@@TogglPlugin@@"
                ]
            }
        },
        "TogglPlugin.reload_config": {
            "name": "reload_config",
            "location": 154,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TogglPlugin.entry_clicked": {
            "name": "entry_clicked",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "menu": []
            }
        },
        "TogglPlugin.register_cli_commands": {
            "name": "register_cli_commands",
            "location": 177,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TogglPlugin.track_entry": {
            "name": "track_entry",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entry": [],
                "echo": []
            }
        }
    },
    "dontforget-master/src/dontforget/default_pipes/__init__.py": {}
}
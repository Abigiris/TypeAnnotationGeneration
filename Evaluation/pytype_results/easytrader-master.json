{
    "easytrader-master/setup.py": {},
    "easytrader-master/easytrader/api.py": {
        "use": {
            "name": "use",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "broker": [],
                "debug": []
            }
        },
        "follower": {
            "name": "follower",
            "location": 79,
            "return": [
                "Union[(easytrader.joinquant_follower.JoinQuantFollower, easytrader.ricequant_follower.RiceQuantFollower, easytrader.xq_follower.XueQiuFollower)]"
            ],
            "arguments": {
                "platform": []
            }
        }
    },
    "easytrader-master/easytrader/clienttrader.py": {
        "IClientTrader.app": {
            "name": "app",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IClientTrader.main": {
            "name": "main",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IClientTrader.config": {
            "name": "config",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IClientTrader.wait": {
            "name": "wait",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "seconds": [
                    "float"
                ]
            }
        },
        "IClientTrader.refresh": {
            "name": "refresh",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "IClientTrader.is_exist_pop_dialog": {
            "name": "is_exist_pop_dialog",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.enable_type_keys_for_editor": {
            "name": "enable_type_keys_for_editor",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.grid_strategy_instance": {
            "name": "grid_strategy_instance",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.app": {
            "name": "app",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.main": {
            "name": "main",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.config": {
            "name": "config",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.connect": {
            "name": "connect",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exe_path": []
            }
        },
        "ClientTrader.broker_type": {
            "name": "broker_type",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.balance": {
            "name": "balance",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._init_toolbar": {
            "name": "_init_toolbar",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._get_balance_from_statics": {
            "name": "_get_balance_from_statics",
            "location": 134,
            "return": [
                "Dict[(str, float)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.position": {
            "name": "position",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.today_entrusts": {
            "name": "today_entrusts",
            "location": 151,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.today_trades": {
            "name": "today_trades",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.cancel_entrusts": {
            "name": "cancel_entrusts",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.cancel_entrust": {
            "name": "cancel_entrust",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "entrust_no": []
            }
        },
        "ClientTrader.cancel_all_entrusts": {
            "name": "cancel_all_entrusts",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.repo": {
            "name": "repo",
            "location": 202,
            "return": [],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "ClientTrader.reverse_repo": {
            "name": "reverse_repo",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "ClientTrader.buy": {
            "name": "buy",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "ClientTrader.sell": {
            "name": "sell",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "ClientTrader.market_buy": {
            "name": "market_buy",
            "location": 226,
            "return": [],
            "arguments": {
                "self": [],
                "security": [],
                "amount": [],
                "ttype": [],
                "limit_price": []
            }
        },
        "ClientTrader.market_sell": {
            "name": "market_sell",
            "location": 243,
            "return": [],
            "arguments": {
                "self": [],
                "security": [],
                "amount": [],
                "ttype": [],
                "limit_price": []
            }
        },
        "ClientTrader.market_trade": {
            "name": "market_trade",
            "location": 258,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "amount": [],
                "ttype": [],
                "limit_price": []
            }
        },
        "ClientTrader._set_market_trade_type": {
            "name": "_set_market_trade_type",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ttype": []
            }
        },
        "ClientTrader._set_stock_exchange_type": {
            "name": "_set_stock_exchange_type",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ttype": []
            }
        },
        "ClientTrader.auto_ipo": {
            "name": "auto_ipo",
            "location": 323,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._click_grid_by_row": {
            "name": "_click_grid_by_row",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "ClientTrader.is_exist_pop_dialog": {
            "name": "is_exist_pop_dialog",
            "location": 361,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.close_pop_dialog": {
            "name": "close_pop_dialog",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._run_exe_path": {
            "name": "_run_exe_path",
            "location": 390,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "exe_path": []
            }
        },
        "ClientTrader.wait": {
            "name": "wait",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "seconds": []
            }
        },
        "ClientTrader.exit": {
            "name": "exit",
            "location": 396,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._close_prompt_windows": {
            "name": "_close_prompt_windows",
            "location": 399,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.close_pormpt_window_no_wait": {
            "name": "close_pormpt_window_no_wait",
            "location": 409,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.trade": {
            "name": "trade",
            "location": 414,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "ClientTrader._click": {
            "name": "_click",
            "location": 423,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "control_id": []
            }
        },
        "ClientTrader._submit_trade": {
            "name": "_submit_trade",
            "location": 429,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader.__get_top_window_pop_dialog": {
            "name": "__get_top_window_pop_dialog",
            "location": 436,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._get_pop_dialog_title": {
            "name": "_get_pop_dialog_title",
            "location": 442,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._set_trade_params": {
            "name": "_set_trade_params",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "ClientTrader._set_market_trade_params": {
            "name": "_set_market_trade_params",
            "location": 473,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "amount": [],
                "limit_price": []
            }
        },
        "ClientTrader._get_grid_data": {
            "name": "_get_grid_data",
            "location": 489,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "control_id": []
            }
        },
        "ClientTrader._type_keys": {
            "name": "_type_keys",
            "location": 492,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "control_id": [],
                "text": []
            }
        },
        "ClientTrader._type_edit_control_keys": {
            "name": "_type_edit_control_keys",
            "location": 497,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "control_id": [],
                "text": []
            }
        },
        "ClientTrader.type_edit_control_keys": {
            "name": "type_edit_control_keys",
            "location": 507,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "editor": [],
                "text": []
            }
        },
        "ClientTrader._collapse_left_menus": {
            "name": "_collapse_left_menus",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._switch_left_menus": {
            "name": "_switch_left_menus",
            "location": 520,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "sleep": []
            }
        },
        "ClientTrader._switch_left_menus_by_shortcut": {
            "name": "_switch_left_menus_by_shortcut",
            "location": 526,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shortcut": [],
                "sleep": []
            }
        },
        "ClientTrader._get_left_menus_handle": {
            "name": "_get_left_menus_handle",
            "location": 532,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._cancel_entrust_by_double_click": {
            "name": "_cancel_entrust_by_double_click",
            "location": 549,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "ClientTrader.refresh": {
            "name": "refresh",
            "location": 560,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClientTrader._handle_pop_dialogs": {
            "name": "_handle_pop_dialogs",
            "location": 565,
            "return": [],
            "arguments": {
                "self": [],
                "handler_class": []
            }
        },
        "BaseLoginClientTrader.login": {
            "name": "login",
            "location": 582,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        },
        "BaseLoginClientTrader.prepare": {
            "name": "prepare",
            "location": 586,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_path": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        }
    },
    "easytrader-master/easytrader/exceptions.py": {
        "NotLoginError.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": []
            }
        }
    },
    "easytrader-master/easytrader/follower.py": {
        "BaseFollower.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseFollower.login": {
            "name": "login",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": []
            }
        },
        "BaseFollower._generate_headers": {
            "name": "_generate_headers",
            "location": 60,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseFollower.check_login_success": {
            "name": "check_login_success",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rep": []
            }
        },
        "BaseFollower.create_login_params": {
            "name": "create_login_params",
            "location": 81,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": []
            }
        },
        "BaseFollower.follow": {
            "name": "follow",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "users": [],
                "strategies": [],
                "track_interval": [],
                "trade_cmd_expire_seconds": [],
                "cmd_cache": [],
                "slippage": [
                    "float"
                ]
            }
        },
        "BaseFollower._calculate_price_by_slippage": {
            "name": "_calculate_price_by_slippage",
            "location": 115,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "str"
                ],
                "price": [
                    "float"
                ]
            }
        },
        "BaseFollower.load_expired_cmd_cache": {
            "name": "load_expired_cmd_cache",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseFollower.start_trader_thread": {
            "name": "start_trader_thread",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "users": [],
                "trade_cmd_expire_seconds": [],
                "entrust_prop": [],
                "send_interval": []
            }
        },
        "BaseFollower.warp_list": {
            "name": "warp_list",
            "location": 153,
            "return": [
                "Union[(List[_T0], _T0)]"
            ],
            "arguments": {
                "value": [
                    "_T0"
                ]
            }
        },
        "BaseFollower.extract_strategy_id": {
            "name": "extract_strategy_id",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy_url": []
            }
        },
        "BaseFollower.extract_strategy_name": {
            "name": "extract_strategy_name",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "strategy_url": []
            }
        },
        "BaseFollower.track_strategy_worker": {
            "name": "track_strategy_worker",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "strategy": [],
                "name": [],
                "interval": []
            }
        },
        "BaseFollower.generate_expired_cmd_key": {
            "name": "generate_expired_cmd_key",
            "location": 221,
            "return": [
                "str"
            ],
            "arguments": {
                "cmd": []
            }
        },
        "BaseFollower.is_cmd_expired": {
            "name": "is_cmd_expired",
            "location": 231,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "BaseFollower.add_cmd_to_expired_cmds": {
            "name": "add_cmd_to_expired_cmds",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "BaseFollower._is_number": {
            "name": "_is_number",
            "location": 243,
            "return": [
                "bool"
            ],
            "arguments": {
                "s": []
            }
        },
        "BaseFollower._execute_trade_cmd": {
            "name": "_execute_trade_cmd",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trade_cmd": [],
                "users": [],
                "expire_seconds": [],
                "entrust_prop": [],
                "send_interval": []
            }
        },
        "BaseFollower.trade_worker": {
            "name": "trade_worker",
            "location": 345,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "users": [],
                "expire_seconds": [],
                "entrust_prop": [],
                "send_interval": []
            }
        },
        "BaseFollower.query_strategy_transaction": {
            "name": "query_strategy_transaction",
            "location": 358,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "strategy": []
            }
        },
        "BaseFollower.extract_transactions": {
            "name": "extract_transactions",
            "location": 368,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "history": []
            }
        },
        "BaseFollower.create_query_transaction_params": {
            "name": "create_query_transaction_params",
            "location": 376,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "strategy": []
            }
        },
        "BaseFollower.re_find": {
            "name": "re_find",
            "location": 385,
            "return": [
                "Any"
            ],
            "arguments": {
                "pattern": [],
                "string": [],
                "dtype": []
            }
        },
        "BaseFollower.re_search": {
            "name": "re_search",
            "location": 389,
            "return": [
                "Any"
            ],
            "arguments": {
                "pattern": [],
                "string": [],
                "dtype": []
            }
        },
        "BaseFollower.project_transactions": {
            "name": "project_transactions",
            "location": 392,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transactions": []
            }
        },
        "BaseFollower.order_transactions_sell_first": {
            "name": "order_transactions_sell_first",
            "location": 400,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "transactions": []
            }
        }
    },
    "easytrader-master/easytrader/gf_clienttrader.py": {
        "GFClientTrader.broker_type": {
            "name": "broker_type",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GFClientTrader.login": {
            "name": "login",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        },
        "GFClientTrader._handle_verify_code": {
            "name": "_handle_verify_code",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/easytrader/gj_clienttrader.py": {
        "GJClientTrader.broker_type": {
            "name": "broker_type",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GJClientTrader.login": {
            "name": "login",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        },
        "GJClientTrader._handle_verify_code": {
            "name": "_handle_verify_code",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/easytrader/grid_strategies.py": {
        "IGridStrategy.get": {
            "name": "get",
            "location": 24,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "control_id": [
                    "int"
                ]
            }
        },
        "IGridStrategy.set_trader": {
            "name": "set_trader",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "trader": [
                    "clienttrader.IClientTrader"
                ]
            }
        },
        "BaseStrategy.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseStrategy.set_trader": {
            "name": "set_trader",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trader": [
                    "clienttrader.IClientTrader"
                ]
            }
        },
        "BaseStrategy.get": {
            "name": "get",
            "location": 46,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "control_id": [
                    "int"
                ]
            }
        },
        "BaseStrategy._get_grid": {
            "name": "_get_grid",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "control_id": [
                    "int"
                ]
            }
        },
        "BaseStrategy._set_foreground": {
            "name": "_set_foreground",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "grid": []
            }
        },
        "Copy.get": {
            "name": "get",
            "location": 78,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "control_id": [
                    "int"
                ]
            }
        },
        "Copy._format_grid_data": {
            "name": "_format_grid_data",
            "location": 85,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str"
                ]
            }
        },
        "Copy._get_clipboard_data": {
            "name": "_get_clipboard_data",
            "location": 97,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "WMCopy.get": {
            "name": "get",
            "location": 158,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "control_id": [
                    "int"
                ]
            }
        },
        "Xls.__init__": {
            "name": "__init__",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_folder": [
                    "Optional[str]"
                ]
            }
        },
        "Xls.get": {
            "name": "get",
            "location": 178,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "control_id": [
                    "int"
                ]
            }
        },
        "Xls._format_grid_data": {
            "name": "_format_grid_data",
            "location": 206,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "str"
                ]
            }
        }
    },
    "easytrader-master/easytrader/htzq_clienttrader.py": {
        "HTZQClientTrader.broker_type": {
            "name": "broker_type",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTZQClientTrader.login": {
            "name": "login",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        }
    },
    "easytrader-master/easytrader/ht_clienttrader.py": {
        "HTClientTrader.broker_type": {
            "name": "broker_type",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTClientTrader.login": {
            "name": "login",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        },
        "HTClientTrader.balance": {
            "name": "balance",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HTClientTrader._get_balance_from_statics": {
            "name": "_get_balance_from_statics",
            "location": 66,
            "return": [
                "Dict[(str, float)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/easytrader/joinquant_follower.py": {
        "JoinQuantFollower.create_login_params": {
            "name": "create_login_params",
            "location": 19,
            "return": [
                "Dict[(str, Union[(int, _T0, _T1)])]"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "_T0"
                ],
                "password": [
                    "_T1"
                ]
            }
        },
        "JoinQuantFollower.check_login_success": {
            "name": "check_login_success",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rep": []
            }
        },
        "JoinQuantFollower.follow": {
            "name": "follow",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "users": [],
                "strategies": [],
                "track_interval": [],
                "trade_cmd_expire_seconds": [],
                "cmd_cache": [],
                "entrust_prop": [],
                "send_interval": []
            }
        },
        "JoinQuantFollower.extract_strategy_id": {
            "name": "extract_strategy_id",
            "location": 91,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "strategy_url": []
            }
        },
        "JoinQuantFollower.extract_strategy_name": {
            "name": "extract_strategy_name",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "strategy_url": []
            }
        },
        "JoinQuantFollower.create_query_transaction_params": {
            "name": "create_query_transaction_params",
            "location": 99,
            "return": [
                "Dict[(str, Union[(int, str, _T0)])]"
            ],
            "arguments": {
                "self": [],
                "strategy": [
                    "_T0"
                ]
            }
        },
        "JoinQuantFollower.extract_transactions": {
            "name": "extract_transactions",
            "location": 104,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "history": []
            }
        },
        "JoinQuantFollower.stock_shuffle_to_prefix": {
            "name": "stock_shuffle_to_prefix",
            "location": 109,
            "return": [
                "str"
            ],
            "arguments": {
                "stock": []
            }
        },
        "JoinQuantFollower.project_transactions": {
            "name": "project_transactions",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transactions": []
            }
        }
    },
    "easytrader-master/easytrader/log.py": {},
    "easytrader-master/easytrader/pop_dialog_handler.py": {
        "PopDialogHandler.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app": []
            }
        },
        "PopDialogHandler._set_foreground": {
            "name": "_set_foreground",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "window": []
            }
        },
        "PopDialogHandler.handle": {
            "name": "handle",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        },
        "PopDialogHandler._extract_content": {
            "name": "_extract_content",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PopDialogHandler._extract_entrust_id": {
            "name": "_extract_entrust_id",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "content": []
            }
        },
        "PopDialogHandler._submit_by_click": {
            "name": "_submit_by_click",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PopDialogHandler._submit_by_shortcut": {
            "name": "_submit_by_shortcut",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PopDialogHandler._close": {
            "name": "_close",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TradePopDialogHandler.handle": {
            "name": "handle",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        }
    },
    "easytrader-master/easytrader/refresh_strategies.py": {
        "IRefreshStrategy.refresh": {
            "name": "refresh",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "IRefreshStrategy.set_trader": {
            "name": "set_trader",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trader": [
                    "clienttrader.ClientTrader"
                ]
            }
        },
        "Switch.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sleep": [
                    "float"
                ]
            }
        },
        "Switch.refresh": {
            "name": "refresh",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Toolbar.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "refresh_btn_index": [
                    "int"
                ]
            }
        },
        "Toolbar.refresh": {
            "name": "refresh",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/easytrader/remoteclient.py": {
        "use": {
            "name": "use",
            "location": 7,
            "return": [
                "RemoteClient"
            ],
            "arguments": {
                "broker": [],
                "host": [],
                "port": []
            }
        },
        "RemoteClient.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "broker": [],
                "host": [],
                "port": []
            }
        },
        "RemoteClient.prepare": {
            "name": "prepare",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "config_path": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        },
        "RemoteClient.balance": {
            "name": "balance",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoteClient.position": {
            "name": "position",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoteClient.today_entrusts": {
            "name": "today_entrusts",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoteClient.today_trades": {
            "name": "today_trades",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoteClient.cancel_entrusts": {
            "name": "cancel_entrusts",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoteClient.auto_ipo": {
            "name": "auto_ipo",
            "location": 71,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoteClient.exit": {
            "name": "exit",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoteClient.common_get": {
            "name": "common_get",
            "location": 77,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "endpoint": []
            }
        },
        "RemoteClient.buy": {
            "name": "buy",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "RemoteClient.sell": {
            "name": "sell",
            "location": 92,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": []
            }
        },
        "RemoteClient.cancel_entrust": {
            "name": "cancel_entrust",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "entrust_no": []
            }
        }
    },
    "easytrader-master/easytrader/ricequant_follower.py": {
        "RiceQuantFollower.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RiceQuantFollower.login": {
            "name": "login",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": []
            }
        },
        "RiceQuantFollower.follow": {
            "name": "follow",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "users": [],
                "run_id": [],
                "track_interval": [],
                "trade_cmd_expire_seconds": [],
                "cmd_cache": [],
                "entrust_prop": [],
                "send_interval": []
            }
        },
        "RiceQuantFollower.extract_strategy_name": {
            "name": "extract_strategy_name",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "run_id": []
            }
        },
        "RiceQuantFollower.extract_day_trades": {
            "name": "extract_day_trades",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "run_id": []
            }
        },
        "RiceQuantFollower.query_strategy_transaction": {
            "name": "query_strategy_transaction",
            "location": 85,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "strategy": []
            }
        },
        "RiceQuantFollower.stock_shuffle_to_prefix": {
            "name": "stock_shuffle_to_prefix",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "stock": []
            }
        },
        "RiceQuantFollower.project_transactions": {
            "name": "project_transactions",
            "location": 102,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": [],
                "transactions": []
            }
        }
    },
    "easytrader-master/easytrader/server.py": {
        "error_handle": {
            "name": "error_handle",
            "location": 13,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "post_prepare": {
            "name": "post_prepare",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "get_balance": {
            "name": "get_balance",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "get_position": {
            "name": "get_position",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "get_auto_ipo": {
            "name": "get_auto_ipo",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "get_today_entrusts": {
            "name": "get_today_entrusts",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "get_today_trades": {
            "name": "get_today_trades",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "get_cancel_entrusts": {
            "name": "get_cancel_entrusts",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "post_buy": {
            "name": "post_buy",
            "location": 95,
            "return": [],
            "arguments": {}
        },
        "post_sell": {
            "name": "post_sell",
            "location": 105,
            "return": [],
            "arguments": {}
        },
        "post_cancel_entrust": {
            "name": "post_cancel_entrust",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "get_exit": {
            "name": "get_exit",
            "location": 127,
            "return": [],
            "arguments": {}
        },
        "run": {
            "name": "run",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "port": []
            }
        },
        "error_handle.wrapper": {
            "name": "wrapper",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "easytrader-master/easytrader/universal_clienttrader.py": {
        "UniversalClientTrader.broker_type": {
            "name": "broker_type",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UniversalClientTrader.login": {
            "name": "login",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        }
    },
    "easytrader-master/easytrader/webtrader.py": {
        "WebTrader.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "debug": []
            }
        },
        "WebTrader.read_config": {
            "name": "read_config",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "WebTrader.prepare": {
            "name": "prepare",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_file": [],
                "user": [],
                "password": []
            }
        },
        "WebTrader._prepare_account": {
            "name": "_prepare_account",
            "location": 58,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": []
            }
        },
        "WebTrader.autologin": {
            "name": "autologin",
            "location": 62,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "limit": []
            }
        },
        "WebTrader.login": {
            "name": "login",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.keepalive": {
            "name": "keepalive",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.send_heartbeat": {
            "name": "send_heartbeat",
            "location": 85,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.check_login": {
            "name": "check_login",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sleepy": []
            }
        },
        "WebTrader.heartbeat": {
            "name": "heartbeat",
            "location": 108,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.check_account_live": {
            "name": "check_account_live",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "WebTrader.exit": {
            "name": "exit",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.__read_config": {
            "name": "__read_config",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.balance": {
            "name": "balance",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.get_balance": {
            "name": "get_balance",
            "location": 128,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.position": {
            "name": "position",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.get_position": {
            "name": "get_position",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.entrust": {
            "name": "entrust",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.get_entrust": {
            "name": "get_entrust",
            "location": 144,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.current_deal": {
            "name": "current_deal",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.get_current_deal": {
            "name": "get_current_deal",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.exchangebill": {
            "name": "exchangebill",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.get_exchangebill": {
            "name": "get_exchangebill",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start_date": [],
                "end_date": []
            }
        },
        "WebTrader.get_ipo_limit": {
            "name": "get_ipo_limit",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stock_code": []
            }
        },
        "WebTrader.do": {
            "name": "do",
            "location": 184,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "WebTrader.create_basic_params": {
            "name": "create_basic_params",
            "location": 203,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebTrader.request": {
            "name": "request",
            "location": 207,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "WebTrader.format_response_data": {
            "name": "format_response_data",
            "location": 212,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        },
        "WebTrader.fix_error_data": {
            "name": "fix_error_data",
            "location": 217,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        },
        "WebTrader.format_response_data_type": {
            "name": "format_response_data_type",
            "location": 222,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "response_data": [
                    "_T0"
                ]
            }
        },
        "WebTrader.check_login_status": {
            "name": "check_login_status",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "return_data": []
            }
        }
    },
    "easytrader-master/easytrader/wk_clienttrader.py": {
        "WKClientTrader.broker_type": {
            "name": "broker_type",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WKClientTrader.login": {
            "name": "login",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        }
    },
    "easytrader-master/easytrader/xqtrader.py": {
        "XueQiuTrader.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader.autologin": {
            "name": "autologin",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader._set_cookies": {
            "name": "_set_cookies",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cookies": []
            }
        },
        "XueQiuTrader._prepare_account": {
            "name": "_prepare_account",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": []
            }
        },
        "XueQiuTrader._virtual_to_balance": {
            "name": "_virtual_to_balance",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "virtual": []
            }
        },
        "XueQiuTrader._get_html": {
            "name": "_get_html",
            "location": 98,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "XueQiuTrader._search_stock_info": {
            "name": "_search_stock_info",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "XueQiuTrader._get_portfolio_info": {
            "name": "_get_portfolio_info",
            "location": 126,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "portfolio_code": []
            }
        },
        "XueQiuTrader.get_balance": {
            "name": "get_balance",
            "location": 144,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader._get_position": {
            "name": "_get_position",
            "location": 168,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader._time_strftime": {
            "name": "_time_strftime",
            "location": 180,
            "return": [
                "str"
            ],
            "arguments": {
                "time_stamp": []
            }
        },
        "XueQiuTrader.get_position": {
            "name": "get_position",
            "location": 188,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader._get_xq_history": {
            "name": "_get_xq_history",
            "location": 214,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader.history": {
            "name": "history",
            "location": 231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader.get_entrust": {
            "name": "get_entrust",
            "location": 234,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuTrader.cancel_entrust": {
            "name": "cancel_entrust",
            "location": 274,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "entrust_no": []
            }
        },
        "XueQiuTrader.adjust_weight": {
            "name": "adjust_weight",
            "location": 316,
            "return": [
                "Optional[List[Dict[(str, Any)]]]"
            ],
            "arguments": {
                "self": [],
                "stock_code": [],
                "weight": []
            }
        },
        "XueQiuTrader._trade": {
            "name": "_trade",
            "location": 397,
            "return": [
                "Optional[List[Dict[(str, Any)]]]"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": [],
                "volume": [],
                "entrust_bs": []
            }
        },
        "XueQiuTrader.buy": {
            "name": "buy",
            "location": 531,
            "return": [
                "Optional[List[Dict[(str, Any)]]]"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": [],
                "volume": [],
                "entrust_prop": []
            }
        },
        "XueQiuTrader.sell": {
            "name": "sell",
            "location": 541,
            "return": [
                "Optional[List[Dict[(str, Any)]]]"
            ],
            "arguments": {
                "self": [],
                "security": [],
                "price": [],
                "amount": [],
                "volume": [],
                "entrust_prop": []
            }
        }
    },
    "easytrader-master/easytrader/xq_follower.py": {
        "XueQiuFollower.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XueQiuFollower.login": {
            "name": "login",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": []
            }
        },
        "XueQiuFollower.follow": {
            "name": "follow",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "users": [],
                "strategies": [],
                "total_assets": [],
                "initial_assets": [],
                "adjust_sell": [],
                "track_interval": [],
                "trade_cmd_expire_seconds": [],
                "cmd_cache": [],
                "slippage": [
                    "float"
                ]
            }
        },
        "XueQiuFollower.calculate_assets": {
            "name": "calculate_assets",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "strategy_url": [],
                "total_assets": [],
                "initial_assets": []
            }
        },
        "XueQiuFollower.extract_strategy_id": {
            "name": "extract_strategy_id",
            "location": 135,
            "return": [
                "_T0"
            ],
            "arguments": {
                "strategy_url": [
                    "_T0"
                ]
            }
        },
        "XueQiuFollower.extract_strategy_name": {
            "name": "extract_strategy_name",
            "location": 138,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "strategy_url": []
            }
        },
        "XueQiuFollower.extract_transactions": {
            "name": "extract_transactions",
            "location": 145,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "history": []
            }
        },
        "XueQiuFollower.create_query_transaction_params": {
            "name": "create_query_transaction_params",
            "location": 159,
            "return": [
                "Dict[(str, Union[(int, _T0)])]"
            ],
            "arguments": {
                "self": [],
                "strategy": [
                    "_T0"
                ]
            }
        },
        "XueQiuFollower.none_to_zero": {
            "name": "none_to_zero",
            "location": 164,
            "return": [
                "Union[(int, _T0)]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        },
        "XueQiuFollower.project_transactions": {
            "name": "project_transactions",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transactions": [],
                "assets": []
            }
        },
        "XueQiuFollower._adjust_sell_amount": {
            "name": "_adjust_sell_amount",
            "location": 192,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stock_code": [],
                "amount": []
            }
        },
        "XueQiuFollower._get_portfolio_info": {
            "name": "_get_portfolio_info",
            "location": 229,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "portfolio_code": []
            }
        },
        "XueQiuFollower._get_portfolio_net_value": {
            "name": "_get_portfolio_net_value",
            "location": 244,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "portfolio_code": []
            }
        }
    },
    "easytrader-master/easytrader/yh_clienttrader.py": {
        "YHClientTrader.broker_type": {
            "name": "broker_type",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "YHClientTrader.login": {
            "name": "login",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "password": [],
                "exe_path": [],
                "comm_password": []
            }
        },
        "YHClientTrader._switch_window_to_normal_mode": {
            "name": "_switch_window_to_normal_mode",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "YHClientTrader._handle_verify_code": {
            "name": "_handle_verify_code",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "is_xiadan": []
            }
        },
        "YHClientTrader.balance": {
            "name": "balance",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "YHClientTrader.auto_ipo": {
            "name": "auto_ipo",
            "location": 114,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/easytrader/__init__.py": {},
    "easytrader-master/easytrader/config/client.py": {
        "create": {
            "name": "create",
            "location": 2,
            "return": [
                "Type[CommonConfig]"
            ],
            "arguments": {
                "broker": []
            }
        }
    },
    "easytrader-master/easytrader/config/__init__.py": {},
    "easytrader-master/easytrader/utils/captcha.py": {
        "captcha_recognize": {
            "name": "captcha_recognize",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "img_path": []
            }
        },
        "recognize_verify_code": {
            "name": "recognize_verify_code",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "image_path": [],
                "broker": []
            }
        },
        "detect_yh_client_result": {
            "name": "detect_yh_client_result",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "image_path": []
            }
        },
        "input_verify_code_manual": {
            "name": "input_verify_code_manual",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "image_path": []
            }
        },
        "default_verify_code_detect": {
            "name": "default_verify_code_detect",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "image_path": []
            }
        },
        "detect_gf_result": {
            "name": "detect_gf_result",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "image_path": []
            }
        },
        "invoke_tesseract_to_recognize": {
            "name": "invoke_tesseract_to_recognize",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "img": []
            }
        }
    },
    "easytrader-master/easytrader/utils/misc.py": {
        "parse_cookies_str": {
            "name": "parse_cookies_str",
            "location": 5,
            "return": [
                "dict"
            ],
            "arguments": {
                "cookies": []
            }
        },
        "file2dict": {
            "name": "file2dict",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        },
        "grep_comma": {
            "name": "grep_comma",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "num_str": []
            }
        },
        "str2num": {
            "name": "str2num",
            "location": 29,
            "return": [
                "Union[(float, int)]"
            ],
            "arguments": {
                "num_str": [],
                "convert_type": []
            }
        }
    },
    "easytrader-master/easytrader/utils/perf.py": {
        "perf_clock": {
            "name": "perf_clock",
            "location": 14,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": []
            }
        },
        "perf_clock.wrapper": {
            "name": "wrapper",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "easytrader-master/easytrader/utils/stock.py": {
        "get_stock_type": {
            "name": "get_stock_type",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "stock_code": []
            }
        },
        "get_30_date": {
            "name": "get_30_date",
            "location": 33,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {}
        },
        "get_today_ipo_data": {
            "name": "get_today_ipo_data",
            "location": 45,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {}
        }
    },
    "easytrader-master/easytrader/utils/win_gui.py": {},
    "easytrader-master/easytrader/utils/__init__.py": {},
    "easytrader-master/tests/test_easytrader.py": {
        "TestYhClientTrader.setUpClass": {
            "name": "setUpClass",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestYhClientTrader.test_balance": {
            "name": "test_balance",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestYhClientTrader.test_today_entrusts": {
            "name": "test_today_entrusts",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestYhClientTrader.test_today_trades": {
            "name": "test_today_trades",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestYhClientTrader.test_cancel_entrusts": {
            "name": "test_cancel_entrusts",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestYhClientTrader.test_cancel_entrust": {
            "name": "test_cancel_entrust",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestYhClientTrader.test_invalid_buy": {
            "name": "test_invalid_buy",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestYhClientTrader.test_invalid_sell": {
            "name": "test_invalid_sell",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestYhClientTrader.test_auto_ipo": {
            "name": "test_auto_ipo",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.setUpClass": {
            "name": "setUpClass",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestHTClientTrader.test_balance": {
            "name": "test_balance",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_today_entrusts": {
            "name": "test_today_entrusts",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_today_trades": {
            "name": "test_today_trades",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_cancel_entrusts": {
            "name": "test_cancel_entrusts",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_cancel_entrust": {
            "name": "test_cancel_entrust",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_invalid_buy": {
            "name": "test_invalid_buy",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_invalid_sell": {
            "name": "test_invalid_sell",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_auto_ipo": {
            "name": "test_auto_ipo",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_invalid_repo": {
            "name": "test_invalid_repo",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTClientTrader.test_invalid_reverse_repo": {
            "name": "test_invalid_reverse_repo",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.setUpClass": {
            "name": "setUpClass",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestHTZQClientTrader.test_balance": {
            "name": "test_balance",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.test_today_entrusts": {
            "name": "test_today_entrusts",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.test_today_trades": {
            "name": "test_today_trades",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.test_cancel_entrusts": {
            "name": "test_cancel_entrusts",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.test_cancel_entrust": {
            "name": "test_cancel_entrust",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.test_invalid_buy": {
            "name": "test_invalid_buy",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.test_invalid_sell": {
            "name": "test_invalid_sell",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHTZQClientTrader.test_auto_ipo": {
            "name": "test_auto_ipo",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/tests/test_xqtrader.py": {
        "TestXueQiuTrader.test_prepare_account": {
            "name": "test_prepare_account",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/tests/test_xq_follower.py": {
        "TestXueQiuTrader.test_adjust_sell_amount_without_enable": {
            "name": "test_adjust_sell_amount_without_enable",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestXueQiuTrader.test_adjust_sell_should_only_work_when_sell": {
            "name": "test_adjust_sell_should_only_work_when_sell",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestXueQiuTrader.test_adjust_sell_amount": {
            "name": "test_adjust_sell_amount",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestXueQiuTrader.test_slippage_with_default": {
            "name": "test_slippage_with_default",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestXueQiuTrader.test_slippage": {
            "name": "test_slippage",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestXqFollower.setUp": {
            "name": "setUp",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestXqFollower.test_extract_transactions": {
            "name": "test_extract_transactions",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "easytrader-master/tests/__init__.py": {}
}
{
    "eda_ru_parser-master/setup.py": {},
    "eda_ru_parser-master/eda_ru_parser/parser.py": {
        "random_headers": {
            "name": "random_headers",
            "location": 56,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {}
        },
        "get_recipes_json": {
            "name": "get_recipes_json",
            "location": 64,
            "return": [
                "Union[(Dict[(str, Optional[Union[(float, int, list, str, Dict[(str, Any)])]])], List[Optional[Union[(float, int, list, str, Dict[(str, Any)])]]])]"
            ],
            "arguments": {
                "response": [
                    "requests.models.Response"
                ]
            }
        },
        "split_ingredient": {
            "name": "split_ingredient",
            "location": 74,
            "return": [
                "Dict[(str, Dict[(str, float)])]"
            ],
            "arguments": {
                "ingredient_str": [
                    "str"
                ]
            }
        },
        "parse_recipe_from_json": {
            "name": "parse_recipe_from_json",
            "location": 102,
            "return": [
                "Optional[Union[(float, int, list, str, Dict[(str, Any)])]]"
            ],
            "arguments": {
                "element": [
                    "Optional[Union[(float, list, str, Dict[(str, Any)])]]"
                ]
            }
        },
        "load_and_parse_page": {
            "name": "load_and_parse_page",
            "location": 152,
            "return": [
                "List[Optional[Union[(float, int, list, str, Dict[(str, Any)])]]]"
            ],
            "arguments": {
                "page": [
                    "int"
                ]
            }
        },
        "parser_generator": {
            "name": "parser_generator",
            "location": 177,
            "return": [
                "Generator[(List[Optional[Union[(float, int, list, str, Dict[(str, Any)])]]], Optional[eda_ru_parser.proxy.StepResult], None)]"
            ],
            "arguments": {
                "pages_amount": [
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main._flatten": {
            "name": "_flatten",
            "location": 200,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "_Args.__init__": {
            "name": "__init__",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "destination_folder": []
            }
        }
    },
    "eda_ru_parser-master/eda_ru_parser/proxy.py": {
        "run_with_proxy": {
            "name": "run_with_proxy",
            "location": 22,
            "return": [
                "list"
            ],
            "arguments": {
                "gen": [
                    "Generator[(Any, Optional[StepResult], None)]"
                ]
            }
        }
    },
    "eda_ru_parser-master/eda_ru_parser/__init__.py": {},
    "eda_ru_parser-master/eda_ru_parser/__main__.py": {
        "run": {
            "name": "run",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "eventstreamd-master/evtstrd/auth.py": {},
    "eventstreamd-master/evtstrd/cmdargs.py": {
        "parse_command_line": {
            "name": "parse_command_line",
            "location": 6,
            "return": [
                "evtstrd.config.Config"
            ],
            "arguments": {}
        }
    },
    "eventstreamd-master/evtstrd/config.py": {
        "read_config": {
            "name": "read_config",
            "location": 32,
            "return": [
                "Config"
            ],
            "arguments": {
                "filename": []
            }
        },
        "read_default_config": {
            "name": "read_default_config",
            "location": 58,
            "return": [
                "Config"
            ],
            "arguments": {}
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Config.with_ssl": {
            "name": "with_ssl",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "eventstreamd-master/evtstrd/date.py": {
        "parse_iso_date": {
            "name": "parse_iso_date",
            "location": 7,
            "return": [
                "datetime.date"
            ],
            "arguments": {
                "date_string": []
            }
        }
    },
    "eventstreamd-master/evtstrd/dispatcher.py": {
        "Dispatcher.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [],
                "stats": []
            }
        },
        "Dispatcher.all_listeners": {
            "name": "all_listeners",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher._setup_listener": {
            "name": "_setup_listener",
            "location": 44,
            "return": [
                "evtstrd.listener.Listener"
            ],
            "arguments": {
                "self": [],
                "reader": [],
                "writer": [],
                "referer": [],
                "subsystem": [],
                "filters": []
            }
        },
        "Dispatcher._log_listener_added": {
            "name": "_log_listener_added",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listener": []
            }
        },
        "Dispatcher._remove_listener": {
            "name": "_remove_listener",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listener": []
            }
        },
        "Dispatcher.notify": {
            "name": "notify",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "subsystem": [],
                "event_type": [],
                "data": [],
                "id": []
            }
        },
        "Dispatcher.disconnect_all": {
            "name": "disconnect_all",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "eventstreamd-master/evtstrd/events.py": {
        "Event.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_type": [],
                "data": [],
                "id": []
            }
        },
        "Event.__bytes__": {
            "name": "__bytes__",
            "location": 21,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.__str__": {
            "name": "__str__",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PingEvent.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JSONEvent.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_type": [],
                "json_data": [],
                "id": []
            }
        },
        "LogoutEvent.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "eventstreamd-master/evtstrd/exc.py": {
        "ServerAlreadyRunningError.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DisconnectedError.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PluginError.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "plugin": [],
                "message": []
            }
        }
    },
    "eventstreamd-master/evtstrd/filters.py": {
        "_parse_value": {
            "name": "_parse_value",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "v": []
            }
        },
        "parse_filter": {
            "name": "parse_filter",
            "location": 84,
            "return": [
                "Union[(DateFilter, StringFilter)]"
            ],
            "arguments": {
                "string": []
            }
        },
        "Filter.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": [],
                "comparator": [],
                "value": [],
                "string": []
            }
        },
        "Filter.__call__": {
            "name": "__call__",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Filter.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Filter._get_value": {
            "name": "_get_value",
            "location": 31,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Filter.field_type": {
            "name": "field_type",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Filter.parse_value": {
            "name": "parse_value",
            "location": 42,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "StringFilter.field_type": {
            "name": "field_type",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StringFilter.parse_value": {
            "name": "parse_value",
            "location": 51,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "v": [
                    "_T0@@"
                ]
            }
        },
        "DateFilter.field_type": {
            "name": "field_type",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DateFilter.parse_value": {
            "name": "parse_value",
            "location": 60,
            "return": [
                "datetime.date"
            ],
            "arguments": {
                "self": [],
                "v": []
            }
        }
    },
    "eventstreamd-master/evtstrd/http.py": {
        "write_http_head": {
            "name": "write_http_head",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "writer": [],
                "code": [],
                "headers": []
            }
        },
        "write_response": {
            "name": "write_response",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "writer": [],
                "status": [],
                "headers": [],
                "body": []
            }
        },
        "write_http_error": {
            "name": "write_http_error",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "writer": [],
                "exc": []
            }
        },
        "write_chunk": {
            "name": "write_chunk",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "writer": [],
                "data": []
            }
        },
        "write_last_chunk": {
            "name": "write_last_chunk",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "writer": []
            }
        },
        "HTTPError.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": [],
                "message": []
            }
        },
        "BadRequestError.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "CGIArgumentError.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "argument_name": [],
                "message": []
            }
        },
        "NotFoundError.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "MethodNotAllowedError.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "read_http_head.parse_header_line": {
            "name": "parse_header_line",
            "location": 69,
            "return": [],
            "arguments": {
                "li": []
            }
        }
    },
    "eventstreamd-master/evtstrd/http_server.py": {
        "HTTPServer.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "loop": [],
                "config": [],
                "dispatcher": [],
                "stats": []
            }
        },
        "HTTPServer.__enter__": {
            "name": "__enter__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPServer._ssl_context": {
            "name": "_ssl_context",
            "location": 46,
            "return": [
                "Optional[ssl.SSLContext]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPServer.__exit__": {
            "name": "__exit__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_val": [
                    "Optional[BaseException]"
                ],
                "exc_tb": []
            }
        },
        "HTTPHandler.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [],
                "dispatcher": [],
                "stats": []
            }
        },
        "HTTPHandler._default_headers": {
            "name": "_default_headers",
            "location": 117,
            "return": [
                "List[Tuple[(str, str)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPHandler._parse_event_args": {
            "name": "_parse_event_args",
            "location": 148,
            "return": [
                "Tuple[(_T0, List[Union[(evtstrd.filters.DateFilter, evtstrd.filters.StringFilter)]])]"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "_T0@@"
                ]
            }
        }
    },
    "eventstreamd-master/evtstrd/listener.py": {
        "Listener.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [],
                "reader": [],
                "writer": [],
                "subsystem": [],
                "filters": []
            }
        },
        "Listener.__str__": {
            "name": "__str__",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Listener.__repr__": {
            "name": "__repr__",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Listener.remote_host": {
            "name": "remote_host",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Listener.notify": {
            "name": "notify",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_type": [],
                "data": [],
                "id": []
            }
        },
        "Listener._write_event": {
            "name": "_write_event",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Listener.disconnect": {
            "name": "disconnect",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "eventstreamd-master/evtstrd/main.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "eventstreamd-master/evtstrd/server.py": {
        "run_server": {
            "name": "run_server",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "_setup_signal_handlers": {
            "name": "_setup_signal_handlers",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "loop": []
            }
        }
    },
    "eventstreamd-master/evtstrd/socket_server.py": {
        "SocketServer.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "loop": [],
                "config": [],
                "dispatcher": []
            }
        },
        "SocketServer.__enter__": {
            "name": "__enter__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketServer.__exit__": {
            "name": "__exit__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_val": [
                    "Optional[BaseException]"
                ],
                "exc_tb": []
            }
        },
        "SocketServer._remove_stale_socket": {
            "name": "_remove_stale_socket",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketServer._change_socket_permissions": {
            "name": "_change_socket_permissions",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketServer.close": {
            "name": "close",
            "location": 77,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SocketHandler.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "SocketHandler._notify_dispatcher": {
            "name": "_notify_dispatcher",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "SocketHandler._get_event_data": {
            "name": "_get_event_data",
            "location": 111,
            "return": [
                "Tuple[(Any, Any, Any, Any)]"
            ],
            "arguments": {
                "message": []
            }
        }
    },
    "eventstreamd-master/evtstrd/stats.py": {
        "json_stats": {
            "name": "json_stats",
            "location": 13,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "stats": [],
                "listeners": []
            }
        },
        "ServerStats.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "json_stats.json_connection": {
            "name": "json_connection",
            "location": 16,
            "return": [],
            "arguments": {
                "listener": []
            }
        }
    },
    "eventstreamd-master/evtstrd/util.py": {},
    "eventstreamd-master/evtstrd/__init__.py": {},
    "eventstreamd-master/evtstrd/plugins/example_auth.py": {},
    "eventstreamd-master/evtstrd/plugins/__init__.py": {
        "load_plugin": {
            "name": "load_plugin",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "plugin": [],
                "obj": []
            }
        }
    },
    "eventstreamd-master/evtstrd_test/date.py": {
        "ParseISODateTest.test_empty": {
            "name": "test_empty",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseISODateTest.test_invalid": {
            "name": "test_invalid",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseISODateTest.test_with_dashes": {
            "name": "test_with_dashes",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseISODateTest.test_without_dashes": {
            "name": "test_without_dashes",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseISODateTest.test_out_of_range": {
            "name": "test_out_of_range",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "eventstreamd-master/evtstrd_test/events.py": {
        "EventTest.test_str": {
            "name": "test_str",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "JSONEventTest.test_exercise": {
            "name": "test_exercise",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "eventstreamd-master/evtstrd_test/filter.py": {
        "FilterTest.test_str": {
            "name": "test_str",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FilterTest.test_string_filter__path_not_found": {
            "name": "test_string_filter__path_not_found",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FilterTest.test_string_filter__wrong_type": {
            "name": "test_string_filter__wrong_type",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FilterTest.test_string_filter__compare": {
            "name": "test_string_filter__compare",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FilterTest.test_string_filter__lt": {
            "name": "test_string_filter__lt",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FilterTest.test_string_filter__gt": {
            "name": "test_string_filter__gt",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_invalid_filter": {
            "name": "test_invalid_filter",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_invalid_values": {
            "name": "test_invalid_values",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_no_such_field": {
            "name": "test_no_such_field",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_wrong_type": {
            "name": "test_wrong_type",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_eq_int": {
            "name": "test_eq_int",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_le_int": {
            "name": "test_le_int",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_ge_int": {
            "name": "test_ge_int",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_eq_str": {
            "name": "test_eq_str",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_eq_date": {
            "name": "test_eq_date",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseFilterTest.test_nested_value": {
            "name": "test_nested_value",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "eventstreamd-master/evtstrd_test/__init__.py": {}
}
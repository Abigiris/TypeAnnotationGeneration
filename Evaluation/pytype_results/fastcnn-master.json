{
    "fastcnn-master/main.py": {
        "cli": {
            "name": "cli",
            "location": 21,
            "return": [],
            "arguments": {
                "debug": []
            }
        },
        "supervised": {
            "name": "supervised",
            "location": 54,
            "return": [],
            "arguments": {
                "input": [],
                "validate": [],
                "output": [],
                "verbose": [],
                "stat": [],
                "epochs": [],
                "batch_size": [],
                "dim": [],
                "maxlen": [],
                "kernel_size": [],
                "opt": [],
                "lr": [],
                "clip_norm": [],
                "stop_window": [],
                "label_smoothing": []
            }
        },
        "test": {
            "name": "test",
            "location": 159,
            "return": [],
            "arguments": {
                "model_file": [],
                "test_data": [],
                "k": [],
                "t": [],
                "batch_size": [],
                "stat": []
            }
        },
        "predict": {
            "name": "predict",
            "location": 252,
            "return": [],
            "arguments": {
                "model_file": [],
                "test_data": [],
                "k": [],
                "t": [],
                "batch_size": [],
                "stat": [],
                "show_data": []
            }
        },
        "predict_prob": {
            "name": "predict_prob",
            "location": 306,
            "return": [],
            "arguments": {
                "model_file": [],
                "test_data": [],
                "k": [],
                "t": [],
                "batch_size": [],
                "stat": [],
                "show_data": []
            }
        },
        "print_sentence_vectors": {
            "name": "print_sentence_vectors",
            "location": 357,
            "return": [],
            "arguments": {
                "model_file": [],
                "data_file": [],
                "batch_size": []
            }
        }
    },
    "fastcnn-master/core/batch.py": {
        "BatchSequence.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dataset": [],
                "batch_size": [],
                "maxlen": [],
                "label_smoothing": []
            }
        },
        "BatchSequence.__len__": {
            "name": "__len__",
            "location": 20,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "BatchSequence.__getitem__": {
            "name": "__getitem__",
            "location": 23,
            "return": [
                "Tuple[(numpy.ndarray, Any)]"
            ],
            "arguments": {
                "self": [],
                "idx": []
            }
        }
    },
    "fastcnn-master/core/model.py": {
        "load_model": {
            "name": "load_model",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "model_file": []
            }
        },
        "make_model": {
            "name": "make_model",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "dataset": [],
                "dim": [],
                "maxlen": [],
                "kernel_size": [],
                "opt": [],
                "verbose": []
            }
        },
        "make_model.make_conv_layers": {
            "name": "make_conv_layers",
            "location": 22,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "make_model.make_model_binary": {
            "name": "make_model_binary",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "make_model.make_model_classify_single": {
            "name": "make_model_classify_single",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "make_model.make_model_classify_multiple": {
            "name": "make_model_classify_multiple",
            "location": 50,
            "return": [],
            "arguments": {}
        }
    },
    "fastcnn-master/core/optimizer.py": {
        "make_optimizer": {
            "name": "make_optimizer",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "name": [],
                "lr": [],
                "clipnorm": []
            }
        }
    },
    "fastcnn-master/core/read.py": {
        "make_vocabulary": {
            "name": "make_vocabulary",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "samples": []
            }
        },
        "read": {
            "name": "read",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": [],
                "label_suffix": [],
                "remove_no_labels": []
            }
        }
    },
    "fastcnn-master/core/text.py": {
        "vectorize": {
            "name": "vectorize",
            "location": 11,
            "return": [
                "numpy.ndarray"
            ],
            "arguments": {
                "sentence": [],
                "chars": [],
                "maxlen": [],
                "use_bos": [],
                "use_eos": []
            }
        }
    },
    "fastcnn-master/core/utils.py": {
        "stat": {
            "name": "stat",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "dataset": []
            }
        },
        "float4": {
            "name": "float4",
            "location": 27,
            "return": [
                "float"
            ],
            "arguments": {
                "x": []
            }
        },
        "div": {
            "name": "div",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "a": [],
                "b": [],
                "default": []
            }
        },
        "f1": {
            "name": "f1",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "prec": [],
                "recall": []
            }
        },
        "labels_performance": {
            "name": "labels_performance",
            "location": 41,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "confusion_matrix": []
            }
        }
    },
    "fastcnn-master/core/entity/dataset.py": {
        "Dataset.__repr__": {
            "name": "__repr__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fastcnn-master/core/entity/index.py": {
        "Index.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Index.index": {
            "name": "index",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "fastcnn-master/core/entity/metadata.py": {
        "Metadata.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "task": [],
                "labels": [],
                "chars": [],
                "params": []
            }
        },
        "Metadata.dump": {
            "name": "dump",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "Metadata.load": {
            "name": "load",
            "location": 31,
            "return": [],
            "arguments": {
                "cls": [],
                "file_path": []
            }
        }
    },
    "fastcnn-master/core/entity/sample.py": {},
    "fastcnn-master/core/entity/task.py": {},
    "fastcnn-master/core/entity/__init__.py": {}
}
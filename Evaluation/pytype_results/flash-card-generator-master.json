{
    "flash-card-generator-master/learning/flash_card.py": {
        "FlashCardGenerator.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reader": []
            }
        },
        "FlashCardGenerator.export_flash_cards": {
            "name": "export_flash_cards",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flash-card-generator-master/learning/reader.py": {
        "TextReader.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [],
                "language": [],
                "pre_processor_name": [],
                "sorted_flash_cards": []
            }
        },
        "TextReader.clean_text": {
            "name": "clean_text",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "text": [],
                "pre_processor_name": []
            }
        },
        "TextReader.build_tree": {
            "name": "build_tree",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextReader.add_known_word": {
            "name": "add_known_word",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "TextReader.add_unknown_word": {
            "name": "add_unknown_word",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "TextReader._read_sentences": {
            "name": "_read_sentences",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextReader._read_word_phrase": {
            "name": "_read_word_phrase",
            "location": 50,
            "return": [
                "Generator[(Tuple[(int, str, Any)], Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextReader._read_words": {
            "name": "_read_words",
            "location": 55,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "TextReader.iterate_unseen_words_with_examples": {
            "name": "iterate_unseen_words_with_examples",
            "location": 62,
            "return": [
                "Generator[(Tuple[(Any, List[str])], Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextReader.get_unseen_words": {
            "name": "get_unseen_words",
            "location": 67,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextReader.iterate_unknown_words": {
            "name": "iterate_unknown_words",
            "location": 70,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TextReader.get_phrases": {
            "name": "get_phrases",
            "location": 77,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "TextReader.dump_word_tree": {
            "name": "dump_word_tree",
            "location": 80,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flash-card-generator-master/learning/__init__.py": {},
    "flash-card-generator-master/learning/__main__.py": {
        "group": {
            "name": "group",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "process_file": {
            "name": "process_file",
            "location": 34,
            "return": [],
            "arguments": {
                "output": [],
                "language": [],
                "pre_processor": [],
                "file_name": []
            }
        },
        "run_pre_processor": {
            "name": "run_pre_processor",
            "location": 54,
            "return": [],
            "arguments": {
                "pre_processor": [],
                "file_name": []
            }
        },
        "run_server": {
            "name": "run_server",
            "location": 65,
            "return": [],
            "arguments": {
                "port": [],
                "host": [],
                "production": [],
                "extra_args": []
            }
        }
    },
    "flash-card-generator-master/learning/clients/command_line.py": {
        "CommandLineClient.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reader": [],
                "config_folder": []
            }
        },
        "CommandLineClient._setup_config_folder": {
            "name": "_setup_config_folder",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandLineClient._add_words_to_reader": {
            "name": "_add_words_to_reader",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reader_add": [],
                "file_name": []
            }
        },
        "CommandLineClient._read_words_file": {
            "name": "_read_words_file",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "file_name": []
            }
        },
        "CommandLineClient._known_words_file_name": {
            "name": "_known_words_file_name",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommandLineClient._unknown_words_file_name": {
            "name": "_unknown_words_file_name",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CommandLineClient.ask_user": {
            "name": "ask_user",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandLineClient._ask_user": {
            "name": "_ask_user",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandLineClient._process_word": {
            "name": "_process_word",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "word": [],
                "chosen_examples": [],
                "used_times": []
            }
        },
        "CommandLineClient._save_all_words_files": {
            "name": "_save_all_words_files",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandLineClient._save_words_file": {
            "name": "_save_words_file",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "words": [],
                "file_name": []
            }
        }
    },
    "flash-card-generator-master/learning/clients/web.py": {
        "profile": {
            "name": "profile",
            "location": 17,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "create_app": {
            "name": "create_app",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "profile.wrapped": {
            "name": "wrapped",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "BaseApiMixin.validate_language": {
            "name": "validate_language",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "language": []
            }
        },
        "BaseApiMixin.validate_payload": {
            "name": "validate_payload",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseApiMixin.initialize_reader": {
            "name": "initialize_reader",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebFlashCardGenerator.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebFlashCardGenerator.dispatch_request": {
            "name": "dispatch_request",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "language": []
            }
        },
        "WebFlashCardGenerator.parse_words": {
            "name": "parse_words",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field_name": [],
                "add_word_function": []
            }
        },
        "WebFlashCardGenerator.get_output_flash_card": {
            "name": "get_output_flash_card",
            "location": 107,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WordTreeGenerator.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WordTreeGenerator.dispatch_request": {
            "name": "dispatch_request",
            "location": 119,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "language": []
            }
        }
    },
    "flash-card-generator-master/learning/clients/__init__.py": {},
    "flash-card-generator-master/learning/pre_processors/__init__.py": {
        "BasePreProcessor.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_text": []
            }
        },
        "BasePreProcessor.get_output_text": {
            "name": "get_output_text",
            "location": 12,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePreProcessor.get_pre_processor": {
            "name": "get_pre_processor",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "BasePreProcessor.get_pre_processors": {
            "name": "get_pre_processors",
            "location": 20,
            "return": [
                "dict"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "flash-card-generator-master/learning/pre_processors/subtitles/ttml2.py": {
        "TTML2PreProcessor.get_output_text": {
            "name": "get_output_text",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flash-card-generator-master/learning/pre_processors/subtitles/__init__.py": {},
    "flash-card-generator-master/learning/processors/english.py": {},
    "flash-card-generator-master/learning/processors/french.py": {},
    "flash-card-generator-master/learning/processors/german.py": {
        "GermanProcessor.iterate_words": {
            "name": "iterate_words",
            "location": 11,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "sentence": []
            }
        },
        "GermanProcessor.get_verb_particle": {
            "name": "get_verb_particle",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "GermanProcessor.is_token_separable_verb_particle": {
            "name": "is_token_separable_verb_particle",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "GermanProcessor.get_token_lemma": {
            "name": "get_token_lemma",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "GermanProcessor.is_token_infititive_verb": {
            "name": "is_token_infititive_verb",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        }
    },
    "flash-card-generator-master/learning/processors/__init__.py": {
        "BaseProcessor.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "BaseProcessor.spacy_instance": {
            "name": "spacy_instance",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseProcessor._get_or_cache_spacy": {
            "name": "_get_or_cache_spacy",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "BaseProcessor.is_token_verb": {
            "name": "is_token_verb",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "BaseProcessor.is_token_particle": {
            "name": "is_token_particle",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "BaseProcessor.is_token_punctuation": {
            "name": "is_token_punctuation",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "BaseProcessor.iterate_sentences": {
            "name": "iterate_sentences",
            "location": 40,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseProcessor.iterate_words": {
            "name": "iterate_words",
            "location": 44,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "sentence": []
            }
        },
        "BaseProcessor.supported_languages": {
            "name": "supported_languages",
            "location": 50,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        },
        "BaseProcessor.get_processor": {
            "name": "get_processor",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "language": []
            }
        },
        "BaseProcessor.get_processors": {
            "name": "get_processors",
            "location": 58,
            "return": [
                "dict"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "flash-card-generator-master/tests/conftest.py": {
        "app": {
            "name": "app",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_client": {
            "name": "test_client",
            "location": 19,
            "return": [],
            "arguments": {
                "app": []
            }
        }
    },
    "flash-card-generator-master/tests/__init__.py": {},
    "flash-card-generator-master/tests/clients/test_web.py": {
        "test_wrong_language": {
            "name": "test_wrong_language",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "test_client": []
            }
        },
        "test_invalid_payload": {
            "name": "test_invalid_payload",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "test_client": []
            }
        },
        "test_flash_card_generated": {
            "name": "test_flash_card_generated",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "test_client": []
            }
        },
        "test_word_tree_generated": {
            "name": "test_word_tree_generated",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "test_client": []
            }
        }
    },
    "flash-card-generator-master/tests/pre_processors/test_ttml2.py": {
        "test_output": {
            "name": "test_output",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "flash-card-generator-master/tests/processors/test_german.py": {
        "process": {
            "name": "process",
            "location": 5,
            "return": [
                "Tuple[(list, list)]"
            ],
            "arguments": {
                "text": []
            }
        },
        "test_separable_verbs": {
            "name": "test_separable_verbs",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wrong_separable_verbs": {
            "name": "test_wrong_separable_verbs",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_possessive_pronouns": {
            "name": "test_possessive_pronouns",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_definitive_article": {
            "name": "test_definitive_article",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    }
}
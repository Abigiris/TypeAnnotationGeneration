{
    "flask-boilerplate-master/manage.py": {
        "runserver": {
            "name": "runserver",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "runworker": {
            "name": "runworker",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "recreate_db": {
            "name": "recreate_db",
            "location": 27,
            "return": [],
            "arguments": {}
        }
    },
    "flask-boilerplate-master/api/config.py": {},
    "flask-boilerplate-master/api/core.py": {
        "create_response": {
            "name": "create_response",
            "location": 27,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "data": [
                    "dict"
                ],
                "status": [
                    "int"
                ],
                "message": [
                    "str"
                ]
            }
        },
        "serialize_list": {
            "name": "serialize_list",
            "location": 53,
            "return": [
                "list"
            ],
            "arguments": {
                "items": [
                    "list"
                ]
            }
        },
        "all_exception_handler": {
            "name": "all_exception_handler",
            "location": 66,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "error": [
                    "Exception"
                ]
            }
        },
        "get_pg_url": {
            "name": "get_pg_url",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "file": [
                    "str"
                ]
            }
        },
        "Mixin.to_dict": {
            "name": "to_dict",
            "location": 20,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-boilerplate-master/api/__init__.py": {
        "create_app": {
            "name": "create_app",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "test_config": []
            }
        },
        "RequestFormatter.format": {
            "name": "format",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "flask-boilerplate-master/api/models/base.py": {},
    "flask-boilerplate-master/api/models/Email.py": {
        "Email.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "email": []
            }
        },
        "Email.__repr__": {
            "name": "__repr__",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-boilerplate-master/api/models/Person.py": {
        "Person.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Person.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "flask-boilerplate-master/api/models/__init__.py": {},
    "flask-boilerplate-master/api/models/model_class_possibilities/Model_id_recursion.py": {
        "ModelSQL.__repr__": {
            "name": "__repr__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelSQL.to_dict_recursive": {
            "name": "to_dict_recursive",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelSQL._to_dict_recursive": {
            "name": "_to_dict_recursive",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "obj_ids_crossed": []
            }
        },
        "ModelSQL._to_dict_recursive.check_crossed_obj": {
            "name": "check_crossed_obj",
            "location": 30,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ModelSQL._to_dict_recursive.type_shunt_recursive": {
            "name": "type_shunt_recursive",
            "location": 40,
            "return": [],
            "arguments": {
                "attribute": []
            }
        }
    },
    "flask-boilerplate-master/api/views/main.py": {
        "index": {
            "name": "index",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "get_persons": {
            "name": "get_persons",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "create_person": {
            "name": "create_person",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "flask-boilerplate-master/tests/conftest.py": {
        "postgres": {
            "name": "postgres",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "client": {
            "name": "client",
            "location": 29,
            "return": [],
            "arguments": {
                "postgres": []
            }
        }
    },
    "flask-boilerplate-master/tests/test_basic.py": {
        "test_index": {
            "name": "test_index",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_get_person": {
            "name": "test_get_person",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        }
    },
    "flask-boilerplate-master/tests/__init__.py": {}
}
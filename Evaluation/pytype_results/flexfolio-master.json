{
    "flexfolio-master/setup.py": {},
    "flexfolio-master/docs/conf.py": {},
    "flexfolio-master/flexfolio/cli.py": {
        "main": {
            "name": "main",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "fetch_statement": {
            "name": "fetch_statement",
            "location": 50,
            "return": [],
            "arguments": {
                "ib_api_token": [],
                "ib_query_id": [],
                "target_file": []
            }
        },
        "fetch_statement_logic": {
            "name": "fetch_statement_logic",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "ib_api_token": [
                    "str"
                ],
                "ib_query_id": [
                    "str"
                ],
                "target_file": [
                    "str"
                ]
            }
        },
        "statement_to_pyfolio": {
            "name": "statement_to_pyfolio",
            "location": 133,
            "return": [],
            "arguments": {
                "flex_statement_path": [],
                "target_dir": [],
                "output_format": [],
                "model": []
            }
        },
        "fetch_statement_logic._request_statement": {
            "name": "_request_statement",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "fetch_statement_logic._download_statement": {
            "name": "_download_statement",
            "location": 81,
            "return": [],
            "arguments": {
                "reference_code": [],
                "statement_url": []
            }
        },
        "fetch_statement_logic._download_statement._download_report": {
            "name": "_download_report",
            "location": 86,
            "return": [],
            "arguments": {}
        }
    },
    "flexfolio-master/flexfolio/flex_statement.py": {
        "_typify": {
            "name": "_typify",
            "location": 20,
            "return": [
                "Tuple[(str, Union[(float, str)])]"
            ],
            "arguments": {
                "_": [
                    "str"
                ],
                "key": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "FlexStatement.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "flex_report_path": [
                    "str"
                ]
            }
        },
        "FlexStatement.models": {
            "name": "models",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FlexStatement.stmts_for_model": {
            "name": "stmts_for_model",
            "location": 53,
            "return": [
                "Dict[(str, collections.OrderedDict[(str, Any)])]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.nav": {
            "name": "nav",
            "location": 60,
            "return": [
                "Tuple[(float, float)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.cash_flow": {
            "name": "cash_flow",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.returns": {
            "name": "returns",
            "location": 98,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.flex_dict_to_df": {
            "name": "flex_dict_to_df",
            "location": 155,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ],
                "keys": [
                    "List[str]"
                ],
                "date_field": [
                    "Optional[Union[(str, Tuple[(str, str)])]]"
                ],
                "local_tz": [
                    "str"
                ]
            }
        },
        "FlexStatement.dict_of_dfs_to_multiindex_df": {
            "name": "dict_of_dfs_to_multiindex_df",
            "location": 193,
            "return": [
                "Any"
            ],
            "arguments": {
                "dict_of_dfs": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "FlexStatement.equity_summary": {
            "name": "equity_summary",
            "location": 200,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.trades": {
            "name": "trades",
            "location": 208,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.prior_period": {
            "name": "prior_period",
            "location": 215,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.stmt_funds": {
            "name": "stmt_funds",
            "location": 221,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.securities": {
            "name": "securities",
            "location": 227,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.open_positions": {
            "name": "open_positions",
            "location": 233,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.calc_daily_qty": {
            "name": "calc_daily_qty",
            "location": 240,
            "return": [
                "Any"
            ],
            "arguments": {
                "final_qty": [
                    "float"
                ],
                "trades": [],
                "start_date": [
                    "_datetime.datetime"
                ],
                "end_date": [
                    "_datetime.datetime"
                ]
            }
        },
        "FlexStatement.positions": {
            "name": "positions",
            "location": 276,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.transactions": {
            "name": "transactions",
            "location": 373,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "model": [
                    "str"
                ]
            }
        },
        "FlexStatement.flex_dict_to_df.to_df": {
            "name": "to_df",
            "location": 168,
            "return": [],
            "arguments": {
                "stmt": []
            }
        }
    },
    "flexfolio-master/flexfolio/utils.py": {
        "get_equity_price": {
            "name": "get_equity_price",
            "location": 18,
            "return": [],
            "arguments": {
                "symbol": [],
                "start_date": [],
                "end_date": []
            }
        },
        "result_str": {
            "name": "result_str",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [
                    "Result"
                ]
            }
        },
        "run": {
            "name": "run",
            "location": 44,
            "return": [
                "Result"
            ],
            "arguments": {
                "cmd": [
                    "str"
                ],
                "ignore_error": [
                    "bool"
                ],
                "shell": [
                    "bool"
                ]
            }
        }
    },
    "flexfolio-master/flexfolio/__init__.py": {},
    "flexfolio-master/tests/reports.py": {
        "flex_statements": {
            "name": "flex_statements",
            "location": 11,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "x_fail_patterns": [
                    "Optional[List[str]]"
                ]
            }
        },
        "_expected_filename": {
            "name": "_expected_filename",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "flex_report_path": [
                    "str"
                ],
                "result_type": [
                    "str"
                ]
            }
        },
        "load_expected_results": {
            "name": "load_expected_results",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "flex_report_path": [
                    "str"
                ],
                "result_type": [
                    "str"
                ]
            }
        },
        "store_expected_results": {
            "name": "store_expected_results",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "flex_report_path": [
                    "str"
                ],
                "result_type": [
                    "str"
                ],
                "df": []
            }
        }
    },
    "flexfolio-master/tests/test_flex_statement.py": {
        "test_models": {
            "name": "test_models",
            "location": 14,
            "return": [],
            "arguments": {
                "flex_stmt_path": []
            }
        },
        "test_starting_and_ending_nav": {
            "name": "test_starting_and_ending_nav",
            "location": 31,
            "return": [],
            "arguments": {
                "flex_stmt_path": []
            }
        },
        "test_cash_flows": {
            "name": "test_cash_flows",
            "location": 51,
            "return": [],
            "arguments": {
                "flex_stmt_path": []
            }
        },
        "test_returns": {
            "name": "test_returns",
            "location": 75,
            "return": [],
            "arguments": {
                "flex_stmt_path": []
            }
        },
        "test_calc_daily_qty_with_nonzero_final_and_no_trades": {
            "name": "test_calc_daily_qty_with_nonzero_final_and_no_trades",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calc_daily_qty_with_nonzero_final_and_trades": {
            "name": "test_calc_daily_qty_with_nonzero_final_and_trades",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calc_daily_qty_with_zero_final_and_trades": {
            "name": "test_calc_daily_qty_with_zero_final_and_trades",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_calc_daily_qty_with_zero_final_and_no_trades": {
            "name": "test_calc_daily_qty_with_zero_final_and_no_trades",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_positions": {
            "name": "test_positions",
            "location": 219,
            "return": [],
            "arguments": {
                "flex_stmt_path": []
            }
        },
        "test_transactions": {
            "name": "test_transactions",
            "location": 247,
            "return": [],
            "arguments": {
                "flex_stmt_path": []
            }
        }
    },
    "flexfolio-master/tests/__init__.py": {}
}
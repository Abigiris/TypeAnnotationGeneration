{
    "forex-trader-master/config.py": {
        "ConfigSection.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "iterable": []
            }
        },
        "ConfigSection.__getitem__": {
            "name": "__getitem__",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "Config.__getitem__": {
            "name": "__getitem__",
            "location": 28,
            "return": [
                "ConfigSection"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        }
    },
    "forex-trader-master/main.py": {
        "App.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "App.run_server": {
            "name": "run_server",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "App.run_django_command": {
            "name": "run_django_command",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "forex-trader-master/oanda/api.py": {
        "OandaApi._catch_errors": {
            "name": "_catch_errors",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "data": [
                    "dict"
                ]
            }
        }
    },
    "forex-trader-master/oanda/config.py": {},
    "forex-trader-master/oanda/models.py": {
        "Candle.from_json": {
            "name": "from_json",
            "location": 60,
            "return": [
                "_TCandle"
            ],
            "arguments": {
                "cls": [
                    "Type[_TCandle]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "Units.from_json": {
            "name": "from_json",
            "location": 78,
            "return": [
                "_TUnits"
            ],
            "arguments": {
                "cls": [
                    "Type[_TUnits]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "Position.from_json": {
            "name": "from_json",
            "location": 93,
            "return": [
                "_TPosition"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPosition]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "Account.from_json": {
            "name": "from_json",
            "location": 108,
            "return": [
                "_TAccount"
            ],
            "arguments": {
                "cls": [
                    "Type[_TAccount]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "PriceBucket.from_json": {
            "name": "from_json",
            "location": 127,
            "return": [
                "_TPriceBucket"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPriceBucket]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "Price.from_json": {
            "name": "from_json",
            "location": 144,
            "return": [
                "_TPrice"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPrice]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "Price.spread": {
            "name": "spread",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TransactionHeartbeat.from_json": {
            "name": "from_json",
            "location": 167,
            "return": [
                "_TTransactionHeartbeat"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTransactionHeartbeat]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "Transaction.from_json": {
            "name": "from_json",
            "location": 181,
            "return": [
                "_TTransaction"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTransaction]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "TransferFundsTransaction.from_json": {
            "name": "from_json",
            "location": 194,
            "return": [
                "DailyFinancingTransaction"
            ],
            "arguments": {
                "cls": [],
                "data": [
                    "dict"
                ]
            }
        },
        "OrderFillTransaction.from_json": {
            "name": "from_json",
            "location": 206,
            "return": [
                "DailyFinancingTransaction"
            ],
            "arguments": {
                "cls": [],
                "data": [
                    "dict"
                ]
            }
        },
        "DailyFinancingTransaction.from_json": {
            "name": "from_json",
            "location": 218,
            "return": [
                "_TDailyFinancingTransaction"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDailyFinancingTransaction]"
                ],
                "data": [
                    "dict"
                ]
            }
        }
    },
    "forex-trader-master/oanda/prices.py": {},
    "forex-trader-master/oanda/__init__.py": {},
    "forex-trader-master/oanda/tests/factories.py": {
        "instrument_factory": {
            "name": "instrument_factory",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "forex-trader-master/oanda/tests/__init__.py": {},
    "forex-trader-master/rss/feed.py": {},
    "forex-trader-master/rss/models.py": {
        "skip_attrs_for_dataclass": {
            "name": "skip_attrs_for_dataclass",
            "location": 8,
            "return": [
                "dict"
            ],
            "arguments": {
                "data": [
                    "dict"
                ],
                "cls": []
            }
        },
        "Entry.from_data": {
            "name": "from_data",
            "location": 25,
            "return": [
                "_TEntry"
            ],
            "arguments": {
                "cls": [
                    "Type[_TEntry]"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "Feed.from_data": {
            "name": "from_data",
            "location": 42,
            "return": [
                "_TFeed"
            ],
            "arguments": {
                "cls": [
                    "Type[_TFeed]"
                ],
                "data": [
                    "dict"
                ]
            }
        }
    },
    "forex-trader-master/rss/__init__.py": {},
    "forex-trader-master/server/views.py": {},
    "forex-trader-master/server/__init__.py": {},
    "forex-trader-master/trader/listeners.py": {
        "BalanceListener.__post_init__": {
            "name": "__post_init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BalanceListener.balance_changed": {
            "name": "balance_changed",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_balance": [
                    "utils.money.Money"
                ]
            }
        }
    },
    "forex-trader-master/trader/models.py": {
        "DefaultModel.save": {
            "name": "save",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "forex-trader-master/trader/strategies.py": {
        "Strategy.feed": {
            "name": "feed",
            "location": 35,
            "return": [
                "StrategyDecision"
            ],
            "arguments": {
                "self": [],
                "price": [
                    "models.Price"
                ]
            }
        },
        "Strategy.profit": {
            "name": "profit",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MomentumStrategy.get_profits": {
            "name": "get_profits",
            "location": 55,
            "return": [
                "Iterator[Tuple[(float, _datetime.datetime)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomentumStrategy.get_momentum": {
            "name": "get_momentum",
            "location": 61,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomentumStrategy.feed": {
            "name": "feed",
            "location": 74,
            "return": [
                "StrategyDecision"
            ],
            "arguments": {
                "self": [],
                "price": [
                    "models.Price"
                ]
            }
        },
        "MomentumStrategy.ready": {
            "name": "ready",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "forex-trader-master/trader/trader.py": {
        "Trader.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "account": [
                    "models.Account"
                ],
                "instrument": [
                    "str"
                ]
            }
        },
        "Trader.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Trader.listen": {
            "name": "listen",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "price": [
                    "models.Price"
                ]
            }
        }
    },
    "forex-trader-master/trader/__init__.py": {},
    "forex-trader-master/trader/migrations/0001_initial.py": {},
    "forex-trader-master/trader/migrations/__init__.py": {},
    "forex-trader-master/trader/tests/test_strategies.py": {
        "TestStrategy.test_health": {
            "name": "test_health",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMomentumStrategy.test_get_momentum": {
            "name": "test_get_momentum",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "prices": [],
                "momentum": []
            }
        }
    },
    "forex-trader-master/trader/tests/__init__.py": {},
    "forex-trader-master/utils/money.py": {
        "Money.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "currency": [
                    "str"
                ],
                "amount": [
                    "float"
                ]
            }
        },
        "Money.__eq__": {
            "name": "__eq__",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Money.__ne__": {
            "name": "__ne__",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Money.__gt__": {
            "name": "__gt__",
            "location": 19,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Money"
                ]
            }
        },
        "Money.__ge__": {
            "name": "__ge__",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Money"
                ]
            }
        },
        "Money.__lt__": {
            "name": "__lt__",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Money"
                ]
            }
        },
        "Money.__le__": {
            "name": "__le__",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "Money"
                ]
            }
        },
        "Money.__sub__": {
            "name": "__sub__",
            "location": 34,
            "return": [
                "_TMoney"
            ],
            "arguments": {
                "self": [
                    "_TMoney"
                ],
                "other": []
            }
        },
        "Money.__add__": {
            "name": "__add__",
            "location": 39,
            "return": [
                "_TMoney"
            ],
            "arguments": {
                "self": [
                    "_TMoney"
                ],
                "other": []
            }
        },
        "Money.__neg__": {
            "name": "__neg__",
            "location": 42,
            "return": [
                "_TMoney"
            ],
            "arguments": {
                "self": [
                    "_TMoney"
                ]
            }
        },
        "Money.__str__": {
            "name": "__str__",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Money.__repr__": {
            "name": "__repr__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "forex-trader-master/utils/singleton.py": {
        "Singleton.__call__": {
            "name": "__call__",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [
                    "Singleton"
                ]
            }
        }
    },
    "forex-trader-master/utils/__init__.py": {}
}
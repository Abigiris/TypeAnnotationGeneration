{
    "fortran-format-converter-master/setup.py": {
        "read_version": {
            "name": "read_version",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": []
            }
        },
        "read": {
            "name": "read",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": []
            }
        }
    },
    "fortran-format-converter-master/docs/conf.py": {},
    "fortran-format-converter-master/fortran_format_converter/_converter.py": {
        "convert": {
            "name": "convert",
            "location": 154,
            "return": [
                "Any"
            ],
            "arguments": {
                "fortran_format": [],
                "uppercase": []
            }
        },
        "Format.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fortran_format": [],
                "uppercase": []
            }
        },
        "Format._format_error": {
            "name": "_format_error",
            "location": 67,
            "return": [
                "ValueError"
            ],
            "arguments": {
                "self": []
            }
        },
        "Format._fortran_parts": {
            "name": "_fortran_parts",
            "location": 72,
            "return": [
                "Tuple[(Any, Optional[int], Optional[int], Optional[int])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Format.string": {
            "name": "string",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Format.sign": {
            "name": "sign",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Format.align": {
            "name": "align",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Format.fill": {
            "name": "fill",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Format.precision": {
            "name": "precision",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Format.type": {
            "name": "type",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Format.width": {
            "name": "width",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "fortran-format-converter-master/fortran_format_converter/__init__.py": {},
    "fortran-format-converter-master/tests/conftest.py": {},
    "fortran-format-converter-master/tests/test_convert.py": {
        "test_integer_format": {
            "name": "test_integer_format",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_integer_format_uppercase": {
            "name": "test_integer_format_uppercase",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_binary_format": {
            "name": "test_binary_format",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_binary_format_uppercase": {
            "name": "test_binary_format_uppercase",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_octal_format": {
            "name": "test_octal_format",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_octal_format_uppercase": {
            "name": "test_octal_format_uppercase",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_hexadecimal_format": {
            "name": "test_hexadecimal_format",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_hexadecimal_format_uppercase": {
            "name": "test_hexadecimal_format_uppercase",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_real_format": {
            "name": "test_real_format",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_real_format_uppercase": {
            "name": "test_real_format_uppercase",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_double_format": {
            "name": "test_double_format",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_double_format_uppercase": {
            "name": "test_double_format_uppercase",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_exponent_format": {
            "name": "test_exponent_format",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_exponent_format_uppercase": {
            "name": "test_exponent_format_uppercase",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_engineering_format": {
            "name": "test_engineering_format",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_engineering_format_uppercase": {
            "name": "test_engineering_format_uppercase",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_scientific_format": {
            "name": "test_scientific_format",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_scientific_format_uppercase": {
            "name": "test_scientific_format_uppercase",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_logical_format": {
            "name": "test_logical_format",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_logical_format_uppercase": {
            "name": "test_logical_format_uppercase",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string_format": {
            "name": "test_string_format",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_string_format_uppercase": {
            "name": "test_string_format_uppercase",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_general_format": {
            "name": "test_general_format",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_general_format_uppercase": {
            "name": "test_general_format_uppercase",
            "location": 358,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_invalid_type": {
            "name": "test_invalid_type",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
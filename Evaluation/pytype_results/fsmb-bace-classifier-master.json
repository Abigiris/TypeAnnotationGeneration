{
    "fsmb-bace-classifier-master/bace_driver.py": {
        "construct_primary_parser": {
            "name": "construct_primary_parser",
            "location": 8,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "construct_primary_parser.subparser_constructors": {
            "name": "subparser_constructors",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "fsmb-bace-classifier-master/main.py": {},
    "fsmb-bace-classifier-master/bace/preprocessor.py": {
        "filter_tokens": {
            "name": "filter_tokens",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "tokens": [
                    "Iterable[str]"
                ],
                "stop_words": [
                    "Optional[Container[str]]"
                ]
            }
        },
        "get_filtered_file": {
            "name": "get_filtered_file",
            "location": 112,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "stop_words": [
                    "Optional[Container[str]]"
                ]
            }
        },
        "yield_filtered_files": {
            "name": "yield_filtered_files",
            "location": 145,
            "return": [
                "Iterable"
            ],
            "arguments": {
                "input_dir": [
                    "str"
                ],
                "stop_words": [
                    "Optional[Container[str]]"
                ]
            }
        },
        "split_dataset": {
            "name": "split_dataset",
            "location": 208,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "export": [
                    "str"
                ],
                "split_percent": [
                    "float"
                ],
                "input_dir": [
                    "str"
                ],
                "output_dir": [
                    "str"
                ],
                "stopwords_file_path": [
                    "Optional[str]"
                ]
            }
        },
        "get_slices": {
            "name": "get_slices",
            "location": 301,
            "return": [
                "Any"
            ],
            "arguments": {
                "all_texts_df": [],
                "slice_length": [
                    "int"
                ],
                "overlap_percent": [
                    "float"
                ]
            }
        },
        "export_fasttext_data": {
            "name": "export_fasttext_data",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {
                "df": [],
                "output_name": [
                    "str"
                ],
                "slice_length": [
                    "Optional[int]"
                ],
                "overlap_percent": [
                    "float"
                ]
            }
        },
        "construct_parser_preprocessor": {
            "name": "construct_parser_preprocessor",
            "location": 376,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run_preprocessor": {
            "name": "run_preprocessor",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "filter_tokens.yield_filtered_tokens": {
            "name": "yield_filtered_tokens",
            "location": 40,
            "return": [],
            "arguments": {
                "tokens": []
            }
        },
        "construct_parser_preprocessor.within_percent_interval": {
            "name": "within_percent_interval",
            "location": 387,
            "return": [],
            "arguments": {
                "interval_str": []
            }
        },
        "filter_tokens.yield_filtered_tokens.filter_token": {
            "name": "filter_token",
            "location": 54,
            "return": [],
            "arguments": {
                "token": []
            }
        },
        "filter_tokens.yield_filtered_tokens.filter_token.strip_enum": {
            "name": "strip_enum",
            "location": 67,
            "return": [],
            "arguments": {
                "token": []
            }
        }
    },
    "fsmb-bace-classifier-master/bace/__init__.py": {},
    "fsmb-bace-classifier-master/bace/classifiers/classifier.py": {
        "Classifier.read_data": {
            "name": "read_data",
            "location": 5,
            "return": [
                "Tuple[(List[str], List[str])]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "Classifier.get_classifier": {
            "name": "get_classifier",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "train_labels": [
                    "List[str]"
                ],
                "train_data": [
                    "List[str]"
                ],
                "num": [
                    "int"
                ]
            }
        },
        "Classifier.predict": {
            "name": "predict",
            "location": 11,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "classifier": [
                    "Classifier"
                ],
                "test_data": [
                    "List[str]"
                ],
                "num": [
                    "int"
                ]
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/__init__.py": {},
    "fsmb-bace-classifier-master/bace/classifiers/bayesian/bag_of_words.py": {
        "read_data": {
            "name": "read_data",
            "location": 11,
            "return": [
                "Tuple[(List[str], List[str], List[str])]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "get_classifier": {
            "name": "get_classifier",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "train_labels": [
                    "List[str]"
                ],
                "train_data": [
                    "List[str]"
                ],
                "num_features": [
                    "int"
                ]
            }
        },
        "predict": {
            "name": "predict",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "classifier": [],
                "test_data": [
                    "List[str]"
                ],
                "num": [
                    "int"
                ]
            }
        },
        "predict_single": {
            "name": "predict_single",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "classifier": [],
                "test_data": [
                    "List[str]"
                ],
                "num": [
                    "int"
                ]
            }
        },
        "show_metrics": {
            "name": "show_metrics",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "test_labels": [
                    "List[str]"
                ],
                "class_prediction": [
                    "List[str]"
                ]
            }
        },
        "run_bagofwords": {
            "name": "run_bagofwords",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "construct_parser_bow": {
            "name": "construct_parser_bow",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/bayesian/__init__.py": {},
    "fsmb-bace-classifier-master/bace/classifiers/fasttext/fasttext_classifier.py": {
        "fancy_prediction": {
            "name": "fancy_prediction",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "classifier": [],
                "input_str": [
                    "str"
                ]
            }
        },
        "run_fasttext": {
            "name": "run_fasttext",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "construct_parser_fasttext": {
            "name": "construct_parser_fasttext",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/fasttext/__init__.py": {},
    "fsmb-bace-classifier-master/bace/classifiers/neural/classifier_interface.py": {
        "ClassifierWrapper.add_data": {
            "name": "add_data",
            "location": 8,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "file_id": [],
                "tokenized_file": [],
                "true_label": []
            }
        },
        "ClassifierWrapper.get_data": {
            "name": "get_data",
            "location": 19,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassifierWrapper.train": {
            "name": "train",
            "location": 28,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "ClassifierWrapper.predict": {
            "name": "predict",
            "location": 36,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "tokenized_file": [],
                "minimum_confidence": []
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/neural/comparative_neural_classifier.py": {
        "ComparativeNeuralClassifier.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComparativeNeuralClassifier.add_data": {
            "name": "add_data",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_id": [
                    "str"
                ],
                "tokenized_file": [
                    "str"
                ],
                "true_label": [
                    "int"
                ]
            }
        },
        "ComparativeNeuralClassifier.add_validation_data": {
            "name": "add_validation_data",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_id": [
                    "str"
                ],
                "data": [
                    "str"
                ],
                "true_label": [
                    "int"
                ]
            }
        },
        "ComparativeNeuralClassifier.get_data": {
            "name": "get_data",
            "location": 48,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComparativeNeuralClassifier.train": {
            "name": "train",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ComparativeNeuralClassifier.predict": {
            "name": "predict",
            "location": 176,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "tokenized_file": [
                    "str"
                ],
                "minimum_confidence": []
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/neural/data_slicer.py": {
        "slice_data": {
            "name": "slice_data",
            "location": 2,
            "return": [
                "Tuple[(list, Optional[list])]"
            ],
            "arguments": {
                "X_data": [],
                "y_data": [],
                "slice_length": [],
                "overlap_percent": []
            }
        },
        "test": {
            "name": "test",
            "location": 47,
            "return": [
                "Tuple[(list, List[int])]"
            ],
            "arguments": {}
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/neural/glove.py": {
        "load_glove": {
            "name": "load_glove",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "fname": [
                    "str"
                ],
                "word_index": [
                    "Dict[(str, int)]"
                ],
                "glove_dimension": [
                    "int"
                ]
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/neural/neural_classifier.py": {
        "NeuralClassifier.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NeuralClassifier.pickle": {
            "name": "pickle",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fname": [],
                "keep_data": []
            }
        },
        "NeuralClassifier.to_pred": {
            "name": "to_pred",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "pred": []
            }
        },
        "NeuralClassifier.to_pred_comparison": {
            "name": "to_pred_comparison",
            "location": 80,
            "return": [
                "List[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "self": [],
                "pred": []
            }
        },
        "NeuralClassifier.add_data": {
            "name": "add_data",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_id": [
                    "str"
                ],
                "data": [
                    "str"
                ],
                "true_label": []
            }
        },
        "NeuralClassifier.add_validation_data": {
            "name": "add_validation_data",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_id": [
                    "str"
                ],
                "data": [
                    "str"
                ],
                "true_label": [
                    "int"
                ]
            }
        },
        "NeuralClassifier.train": {
            "name": "train",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max_number_tokens": [],
                "slice_length": [],
                "slice_overlap": [],
                "glove_file": [],
                "glove_dimensions": [],
                "diagnostic_printing": [],
                "num_epochs": [],
                "batch_size": []
            }
        },
        "NeuralClassifier.predict": {
            "name": "predict",
            "location": 291,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "str": [],
                "slice_length": [],
                "slice_overlap": []
            }
        },
        "NeuralClassifier.slice_and_predict": {
            "name": "slice_and_predict",
            "location": 330,
            "return": [
                "List[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "self": [],
                "str": [],
                "slice_length": [],
                "slice_overlap": []
            }
        },
        "NeuralClassifier.train.cm": {
            "name": "cm",
            "location": 266,
            "return": [],
            "arguments": {
                "true": [],
                "pred": []
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/neural/neural_constants.py": {},
    "fsmb-bace-classifier-master/bace/classifiers/neural/neural_runner.py": {
        "run_nn": {
            "name": "run_nn",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "construct_parser_nn": {
            "name": "construct_parser_nn",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run_nn.child_path": {
            "name": "child_path",
            "location": 21,
            "return": [],
            "arguments": {
                "dir": [],
                "fname": []
            }
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/neural/neural_tester.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "fsmb-bace-classifier-master/bace/classifiers/neural/__init__.py": {}
}
{
    "functional_p_nets-master/arc.py": {},
    "functional_p_nets-master/arc_type.py": {},
    "functional_p_nets-master/des_tracking.py": {
        "DesTracking.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transitions_fired_list": [],
                "transitions_fired_cost": []
            }
        },
        "DesTracking.add_to_transitions_fired_list": {
            "name": "add_to_transitions_fired_list",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transition_name": [],
                "transitions_fired_cost": []
            }
        }
    },
    "functional_p_nets-master/net.py": {
        "get_round_limit": {
            "name": "get_round_limit",
            "location": 174,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "new_marking_value": {
            "name": "new_marking_value",
            "location": 189,
            "return": [
                "Any"
            ],
            "arguments": {
                "arc_type": [],
                "marking": [],
                "weight": []
            }
        },
        "Net.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transitions": [],
                "arcs": [],
                "places": [],
                "determine_transition_to_fire": [],
                "des_tracking": [],
                "cost": []
            }
        },
        "Net.run": {
            "name": "run",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.run_with_net_list": {
            "name": "run_with_net_list",
            "location": 34,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.handle_empty_inputs": {
            "name": "handle_empty_inputs",
            "location": 49,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.handle_empty_inputs_list": {
            "name": "handle_empty_inputs_list",
            "location": 56,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "running_list": [
                    "_T0@@"
                ]
            }
        },
        "Net.step": {
            "name": "step",
            "location": 65,
            "return": [
                "_TNet@@Net@@"
            ],
            "arguments": {
                "self": [
                    "_TNet@@Net@@"
                ]
            }
        },
        "Net.enabled_transitions": {
            "name": "enabled_transitions",
            "location": 77,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.all_input_arcs_enabled": {
            "name": "all_input_arcs_enabled",
            "location": 87,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "transition": []
            }
        },
        "Net.fire": {
            "name": "fire",
            "location": 97,
            "return": [
                "_TNet@@Net@@"
            ],
            "arguments": {
                "self": [
                    "_TNet@@Net@@"
                ],
                "transition": []
            }
        },
        "Net.new_place_after_firing": {
            "name": "new_place_after_firing",
            "location": 115,
            "return": [
                "_T1@@"
            ],
            "arguments": {
                "self": [],
                "arc_list": [],
                "places_dict": [
                    "_T1@@"
                ]
            }
        },
        "Net.generate_list_of_places": {
            "name": "generate_list_of_places",
            "location": 134,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.marked_places": {
            "name": "marked_places",
            "location": 137,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.is_transition_inihibited": {
            "name": "is_transition_inihibited",
            "location": 141,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "transition": []
            }
        },
        "Net.visited_places": {
            "name": "visited_places",
            "location": 150,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.empty_inputs": {
            "name": "empty_inputs",
            "location": 154,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Net.track_transitions_fired": {
            "name": "track_transitions_fired",
            "location": 157,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "transition_name": [],
                "transitions_fired_cost": []
            }
        },
        "Net.current_transition_cost": {
            "name": "current_transition_cost",
            "location": 164,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "transition": []
            }
        }
    },
    "functional_p_nets-master/place.py": {},
    "functional_p_nets-master/transition.py": {
        "Transition.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "rate": [],
                "input": [],
                "output": [],
                "inhibit": [],
                "control_rate": [],
                "player_control": [],
                "fire_cost": []
            }
        }
    },
    "functional_p_nets-master/tests/test_net.py": {
        "pick_first": {
            "name": "pick_first",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "list_of_enabled": []
            }
        }
    },
    "functional_p_nets-master/tests/__init__.py": {}
}
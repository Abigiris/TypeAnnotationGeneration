{
    "funky-collections-master/setup.py": {
        "find_version": {
            "name": "find_version",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "UploadCommand.status": {
            "name": "status",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "s": []
            }
        },
        "UploadCommand.initialize_options": {
            "name": "initialize_options",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.finalize_options": {
            "name": "finalize_options",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCommand.run": {
            "name": "run",
            "location": 64,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "funky-collections-master/src/funky_collections/abc.py": {
        "DoublyLinkedList.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList.append_left": {
            "name": "append_left",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DoublyLinkedList.append_right": {
            "name": "append_right",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "DoublyLinkedList.pop_left": {
            "name": "pop_left",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList.pop_right": {
            "name": "pop_right",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList.get_node": {
            "name": "get_node",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "DoublyLinkedList.__repr__": {
            "name": "__repr__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList.__str__": {
            "name": "__str__",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList.__len__": {
            "name": "__len__",
            "location": 81,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList.__iter__": {
            "name": "__iter__",
            "location": 84,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList.__reversed__": {
            "name": "__reversed__",
            "location": 90,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DoublyLinkedList._from_sequence": {
            "name": "_from_sequence",
            "location": 97,
            "return": [
                "_TDoublyLinkedList@@DoublyLinkedList@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDoublyLinkedList]"
                ]
            }
        }
    },
    "funky-collections-master/src/funky_collections/immutable.py": {
        "ImmutableFixedList.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max_len": [],
                "seq": []
            }
        },
        "ImmutableFixedList.max_len": {
            "name": "max_len",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImmutableFixedList.append_left": {
            "name": "append_left",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ImmutableFixedList.append_right": {
            "name": "append_right",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ImmutableFixedList.pop_left": {
            "name": "pop_left",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImmutableFixedList.pop_right": {
            "name": "pop_right",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImmutableFixedList.__getitem__": {
            "name": "__getitem__",
            "location": 105,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "ImmutableList.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "seq": []
            }
        },
        "ImmutableList.append_left": {
            "name": "append_left",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ImmutableList.append_right": {
            "name": "append_right",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ImmutableList.pop_left": {
            "name": "pop_left",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImmutableList.pop_right": {
            "name": "pop_right",
            "location": 181,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImmutableList.__getitem__": {
            "name": "__getitem__",
            "location": 202,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        }
    },
    "funky-collections-master/src/funky_collections/mutable.py": {
        "MutableFixedList.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max_len": [],
                "seq": []
            }
        },
        "MutableFixedList.max_len": {
            "name": "max_len",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MutableFixedList.append_left": {
            "name": "append_left",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "MutableFixedList.append_right": {
            "name": "append_right",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "MutableFixedList.pop_left": {
            "name": "pop_left",
            "location": 64,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MutableFixedList.pop_right": {
            "name": "pop_right",
            "location": 85,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MutableFixedList.__getitem__": {
            "name": "__getitem__",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "MutableList.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "seq": []
            }
        },
        "MutableList.append_left": {
            "name": "append_left",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "MutableList.append_right": {
            "name": "append_right",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "MutableList.pop_left": {
            "name": "pop_left",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MutableList.pop_right": {
            "name": "pop_right",
            "location": 181,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MutableList.__getitem__": {
            "name": "__getitem__",
            "location": 202,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        }
    },
    "funky-collections-master/src/funky_collections/nodes.py": {
        "ListNodeBase.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "prev": [],
                "_next": []
            }
        },
        "ListNodeBase.data": {
            "name": "data",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ListNodeBase.previous_node": {
            "name": "previous_node",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ListNodeBase.next_node": {
            "name": "next_node",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ListNodeBase.__repr__": {
            "name": "__repr__",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListNodeBase.__str__": {
            "name": "__str__",
            "location": 47,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImmutableListNode.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "prev": [],
                "_next": []
            }
        },
        "ImmutableListNode.data": {
            "name": "data",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MutableListNode.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "prev": [],
                "_next": []
            }
        },
        "MutableListNode.data": {
            "name": "data",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "funky-collections-master/src/funky_collections/__init__.py": {},
    "funky-collections-master/tests/test_fixed_immutable_list.py": {
        "test_len": {
            "name": "test_len",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_max_len": {
            "name": "test_max_len",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
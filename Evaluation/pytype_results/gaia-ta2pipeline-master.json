{
    "gaia-ta2pipeline-master/gen_event_clusters.py": {
        "gen_event_clusters": {
            "name": "gen_event_clusters",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "endpoint_url": [],
                "outfile": []
            }
        },
        "gen_event_clusters.to_list": {
            "name": "to_list",
            "location": 33,
            "return": [],
            "arguments": {
                "e": []
            }
        }
    },
    "gaia-ta2pipeline-master/ta2_runner.py": {},
    "gaia-ta2pipeline-master/model/entity.py": {
        "BaseElement.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uri": [],
                "type_": []
            }
        },
        "BaseElement.add_justification": {
            "name": "add_justification",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [],
                "start": [],
                "end": [],
                "label": [],
                "type_": []
            }
        },
        "BaseElement.source": {
            "name": "source",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseElement.all_labels": {
            "name": "all_labels",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseElement.__eq__": {
            "name": "__eq__",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BaseElement.__hash__": {
            "name": "__hash__",
            "location": 40,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Entity.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uri": [],
                "type_": [],
                "target": []
            }
        },
        "Entity.mention_labels": {
            "name": "mention_labels",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.nominal_labels": {
            "name": "nominal_labels",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.pronominal_labels": {
            "name": "pronominal_labels",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.__str__": {
            "name": "__str__",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Entity.__repr__": {
            "name": "__repr__",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uri": [],
                "type_": []
            }
        },
        "Event.add_role": {
            "name": "add_role",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "role": [],
                "ent": []
            }
        },
        "Relation.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "uri": [],
                "type_": []
            }
        }
    },
    "gaia-ta2pipeline-master/model/justification.py": {
        "Justification.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [],
                "start": [],
                "end": [],
                "label": [],
                "type_": []
            }
        },
        "Justification.__str__": {
            "name": "__str__",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Justification.__repr__": {
            "name": "__repr__",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "doc_id": [],
                "lang": []
            }
        },
        "Document.__str__": {
            "name": "__str__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Document.__repr__": {
            "name": "__repr__",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gaia-ta2pipeline-master/model/source.py": {
        "SourceContext.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "doc_id": []
            }
        },
        "SourceContext.get_some_context": {
            "name": "get_some_context",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "src": [],
                "start": [],
                "end": []
            }
        },
        "SourceContext.doc_exists": {
            "name": "doc_exists",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourceContext.query_context": {
            "name": "query_context",
            "location": 23,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        },
        "LTFSourceContext.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "doc_id": []
            }
        },
        "LTFSourceContext.query_context": {
            "name": "query_context",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        },
        "LTFSourceContext.query": {
            "name": "query",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        },
        "TextSourceContext.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "doc_id": []
            }
        },
        "TextSourceContext.query_context": {
            "name": "query_context",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "end": [],
                "length": []
            }
        },
        "TextSourceContext.calculate_double_side_length": {
            "name": "calculate_double_side_length",
            "location": 91,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "start": [],
                "end": [],
                "length": [],
                "total": [
                    "_T3"
                ]
            }
        }
    },
    "gaia-ta2pipeline-master/model/__init__.py": {},
    "gaia-ta2pipeline-master/pipeline/clusterer.py": {
        "flatten": {
            "name": "flatten",
            "location": 22,
            "return": [
                "list"
            ],
            "arguments": {
                "list_": [
                    "_T0"
                ],
                "remove_none": []
            }
        },
        "highest_score_indices": {
            "name": "highest_score_indices",
            "location": 36,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "list_": []
            }
        },
        "select_most_overlapped": {
            "name": "select_most_overlapped",
            "location": 45,
            "return": [
                "int"
            ],
            "arguments": {
                "name": []
            }
        },
        "normalize_type": {
            "name": "normalize_type",
            "location": 295,
            "return": [
                "Any"
            ],
            "arguments": {
                "t": []
            }
        },
        "process": {
            "name": "process",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "GaiaRecord.selected_wikidata_index": {
            "name": "selected_wikidata_index",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_target_index": {
            "name": "selected_target_index",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_wikidata": {
            "name": "selected_wikidata",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_target": {
            "name": "selected_target",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_wikidata_labels": {
            "name": "selected_wikidata_labels",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_target_labels": {
            "name": "selected_target_labels",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.concatenated_labels": {
            "name": "concatenated_labels",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.name": {
            "name": "name",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.lower_labels": {
            "name": "lower_labels",
            "location": 169,
            "return": [],
            "arguments": {
                "l": []
            }
        },
        "Cluster.__init__": {
            "name": "__init__",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ds": []
            }
        },
        "Cluster.elect_wd_id": {
            "name": "elect_wd_id",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cluster.random_str": {
            "name": "random_str",
            "location": 201,
            "return": [
                "str"
            ],
            "arguments": {
                "length": []
            }
        },
        "Cluster.similarity": {
            "name": "similarity",
            "location": 204,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "Cluster.add": {
            "name": "add",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "Cluster.compute_confidence": {
            "name": "compute_confidence",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cluster.elect_featured_entity": {
            "name": "elect_featured_entity",
            "location": 242,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cluster.attractive_labels": {
            "name": "attractive_labels",
            "location": 265,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cluster.generate": {
            "name": "generate",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Cluster.debug": {
            "name": "debug",
            "location": 281,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline/clusterer_old.py": {
        "flatten": {
            "name": "flatten",
            "location": 21,
            "return": [
                "list"
            ],
            "arguments": {
                "list_": [
                    "_T0"
                ],
                "remove_none": []
            }
        },
        "top_score_indices": {
            "name": "top_score_indices",
            "location": 35,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "list_": [],
                "num": []
            }
        },
        "normalize_type": {
            "name": "normalize_type",
            "location": 188,
            "return": [
                "Any"
            ],
            "arguments": {
                "t": []
            }
        },
        "process": {
            "name": "process",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "GaiaRecord.selected_wikidata": {
            "name": "selected_wikidata",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_fbid": {
            "name": "selected_fbid",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_target": {
            "name": "selected_target",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.selected_wikidata_label_en": {
            "name": "selected_wikidata_label_en",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GaiaRecord.concatenated_labels": {
            "name": "concatenated_labels",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cluster.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ds": []
            }
        },
        "Cluster.record_score": {
            "name": "record_score",
            "location": 158,
            "return": [
                "Any"
            ],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "Cluster.random_str": {
            "name": "random_str",
            "location": 163,
            "return": [
                "str"
            ],
            "arguments": {
                "length": []
            }
        },
        "Cluster.similarity": {
            "name": "similarity",
            "location": 166,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "r": []
            }
        },
        "Cluster.add": {
            "name": "add",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "r": [],
                "contribute": []
            }
        },
        "Cluster.generate": {
            "name": "generate",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline/common.py": {
        "exec_sh": {
            "name": "exec_sh",
            "location": 4,
            "return": [
                "Tuple[(bytes, bytes)]"
            ],
            "arguments": {
                "s": [],
                "logger": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline/config.py": {
        "get_env_var": {
            "name": "get_env_var",
            "location": 16,
            "return": [
                "Union[(str, _T2)]"
            ],
            "arguments": {
                "name": [],
                "optional": [],
                "default": [
                    "_T2"
                ]
            }
        },
        "get_config": {
            "name": "get_config",
            "location": 28,
            "return": [
                "Dict[(str, Optional[Union[(int, str)]])]"
            ],
            "arguments": {}
        },
        "get_logger": {
            "name": "get_logger",
            "location": 62,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "name": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline/exporter.py": {
        "process": {
            "name": "process",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Exporter.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": [],
                "event": [],
                "event_role": [],
                "relation": [],
                "relation_role": [],
                "outfile": []
            }
        },
        "Exporter.generate_name_space": {
            "name": "generate_name_space",
            "location": 110,
            "return": [
                "dict"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Exporter.extend_prefix": {
            "name": "extend_prefix",
            "location": 126,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Exporter.run": {
            "name": "run",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.__dell__": {
            "name": "__dell__",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_prefix": {
            "name": "declare_prefix",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.write": {
            "name": "write",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "string": [
                    "str"
                ]
            }
        },
        "Exporter.declare_entity": {
            "name": "declare_entity",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.legal_filter": {
            "name": "legal_filter",
            "location": 167,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Exporter.declare_cluster": {
            "name": "declare_cluster",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_system": {
            "name": "declare_system",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_cluster_membership": {
            "name": "declare_cluster_membership",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_entity_assertion": {
            "name": "declare_entity_assertion",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_super_edge": {
            "name": "declare_super_edge",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline/importer.py": {
        "convert_nan_to_none": {
            "name": "convert_nan_to_none",
            "location": 782,
            "return": [
                "Any"
            ],
            "arguments": {
                "df": []
            }
        },
        "create_wd_to_fb_mapping": {
            "name": "create_wd_to_fb_mapping",
            "location": 786,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "load_ldc_kb": {
            "name": "load_ldc_kb",
            "location": 813,
            "return": [
                "collections.defaultdict[(str, Any)]"
            ],
            "arguments": {}
        },
        "load_kb_to_fb_mapping": {
            "name": "load_kb_to_fb_mapping",
            "location": 841,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "load_wd_to_fb_df": {
            "name": "load_wd_to_fb_df",
            "location": 849,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "worker": {
            "name": "worker",
            "location": 853,
            "return": [
                "None"
            ],
            "arguments": {
                "source": []
            }
        },
        "process": {
            "name": "process",
            "location": 858,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generate_kb_to_wd_mapping": {
            "name": "generate_kb_to_wd_mapping",
            "location": 913,
            "return": [
                "None"
            ],
            "arguments": {
                "run_name": [],
                "outfile": []
            }
        },
        "Importer.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Importer.run": {
            "name": "run",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Importer.create_namespace_file": {
            "name": "create_namespace_file",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "outfile": []
            }
        },
        "Importer.tmp_file_path": {
            "name": "tmp_file_path",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Importer.clean_temp_files": {
            "name": "clean_temp_files",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Importer.predicate_path": {
            "name": "predicate_path",
            "location": 86,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "infile": [],
                "path": [],
                "retain_intermediate": [],
                "quoting": [],
                "doublequote": []
            }
        },
        "Importer.convert_ttl_to_nt": {
            "name": "convert_ttl_to_nt",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ttl_file": [],
                "nt_file": []
            }
        },
        "Importer.clean_nt": {
            "name": "clean_nt",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nt_file": [],
                "cleaned_nt_file": []
            }
        },
        "Importer.convert_nt_to_kgtk": {
            "name": "convert_nt_to_kgtk",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "nt_file": [],
                "kgtk_file": []
            }
        },
        "Importer.unreify_kgtk": {
            "name": "unreify_kgtk",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "infile": [],
                "outfile": []
            }
        },
        "Importer.create_entity_df": {
            "name": "create_entity_df",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "unreified_kgtk_file": [],
                "output_file": [],
                "source": [],
                "ldc_kg": [],
                "df_wd_fb": [],
                "kb_to_fb_mapping": []
            }
        },
        "Importer.create_event_df": {
            "name": "create_event_df",
            "location": 618,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "unreified_kgtk_file": [],
                "output_file": [],
                "source": []
            }
        },
        "Importer.create_event_role_df": {
            "name": "create_event_role_df",
            "location": 657,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "unreified_kgtk_file": [],
                "output_file": [],
                "source": [],
                "entity_file": [],
                "event_file": []
            }
        },
        "Importer.create_relation_df": {
            "name": "create_relation_df",
            "location": 698,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "unreified_kgtk_file": [],
                "output_file": [],
                "source": []
            }
        },
        "Importer.create_relation_role_df": {
            "name": "create_relation_role_df",
            "location": 730,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "unreified_kgtk_file": [],
                "output_file": [],
                "source": [],
                "entity_file": [],
                "event_file": [],
                "relation_file": []
            }
        },
        "Importer.create_entity_df.merge_names": {
            "name": "merge_names",
            "location": 215,
            "return": [],
            "arguments": {
                "names": []
            }
        },
        "Importer.create_entity_df.merge_targets": {
            "name": "merge_targets",
            "location": 236,
            "return": [],
            "arguments": {
                "table": []
            }
        },
        "Importer.create_entity_df.extract_target_id": {
            "name": "extract_target_id",
            "location": 246,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "Importer.create_entity_df.filter_target": {
            "name": "filter_target",
            "location": 254,
            "return": [],
            "arguments": {
                "df": []
            }
        },
        "Importer.create_entity_df.getFBIDs": {
            "name": "getFBIDs",
            "location": 361,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "Importer.create_entity_df.merge_fb": {
            "name": "merge_fb",
            "location": 385,
            "return": [],
            "arguments": {
                "fb": []
            }
        },
        "Importer.create_entity_df.merge_types": {
            "name": "merge_types",
            "location": 451,
            "return": [],
            "arguments": {
                "types": []
            }
        },
        "Importer.create_entity_df.expand": {
            "name": "expand",
            "location": 462,
            "return": [],
            "arguments": {
                "s": [],
                "multiple": []
            }
        },
        "Importer.create_entity_df.format_fbid": {
            "name": "format_fbid",
            "location": 476,
            "return": [],
            "arguments": {
                "fbid": []
            }
        },
        "Importer.create_entity_df.merge_just": {
            "name": "merge_just",
            "location": 579,
            "return": [],
            "arguments": {
                "table": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline/runner.py": {},
    "gaia-ta2pipeline-master/pipeline/__init__.py": {},
    "gaia-ta2pipeline-master/pipeline2/clusterer.py": {
        "load_resource": {
            "name": "load_resource",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "process": {
            "name": "process",
            "location": 149,
            "return": [],
            "arguments": {}
        },
        "Cluster.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline2/common.py": {
        "exec_sh": {
            "name": "exec_sh",
            "location": 6,
            "return": [],
            "arguments": {
                "s": [],
                "logger": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline2/config.py": {
        "get_env_var": {
            "name": "get_env_var",
            "location": 16,
            "return": [],
            "arguments": {
                "name": [],
                "optional": [],
                "default": []
            }
        },
        "get_config": {
            "name": "get_config",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "get_logger": {
            "name": "get_logger",
            "location": 72,
            "return": [],
            "arguments": {
                "name": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline2/exporter.py": {
        "process": {
            "name": "process",
            "location": 411,
            "return": [],
            "arguments": {}
        },
        "Exporter.__init__": {
            "name": "__init__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "super_edge": [],
                "outfile": []
            }
        },
        "Exporter.generate_name_space": {
            "name": "generate_name_space",
            "location": 154,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Exporter.extend_prefix": {
            "name": "extend_prefix",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "Exporter.run": {
            "name": "run",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.__dell__": {
            "name": "__dell__",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_prefix": {
            "name": "declare_prefix",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.write": {
            "name": "write",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "Exporter.declare_entity": {
            "name": "declare_entity",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.legal_filter": {
            "name": "legal_filter",
            "location": 224,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Exporter.declare_cluster": {
            "name": "declare_cluster",
            "location": 231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_cluster_membership": {
            "name": "declare_cluster_membership",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_prototype": {
            "name": "declare_prototype",
            "location": 304,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_claims": {
            "name": "declare_claims",
            "location": 360,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Exporter.declare_super_edge": {
            "name": "declare_super_edge",
            "location": 393,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline2/importer.py": {
        "load_resource": {
            "name": "load_resource",
            "location": 624,
            "return": [],
            "arguments": {}
        },
        "worker": {
            "name": "worker",
            "location": 703,
            "return": [],
            "arguments": {
                "source": [],
                "logger": [],
                "message": []
            }
        },
        "process": {
            "name": "process",
            "location": 710,
            "return": [],
            "arguments": {}
        },
        "Importer.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Importer.run": {
            "name": "run",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Importer.create_namespace_file": {
            "name": "create_namespace_file",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "outfile": []
            }
        },
        "Importer.tmp_file_path": {
            "name": "tmp_file_path",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Importer.clean_temp_files": {
            "name": "clean_temp_files",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Importer.predicate_path": {
            "name": "predicate_path",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "dbfile": [],
                "infile": [],
                "path": [],
                "quoting": [],
                "doublequote": []
            }
        },
        "Importer.kgtk_query": {
            "name": "kgtk_query",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "dbfile": [],
                "infile": [],
                "match": [],
                "option": [],
                "return_": [],
                "where": [],
                "quoting": []
            }
        },
        "Importer.convert_ttl_to_nt": {
            "name": "convert_ttl_to_nt",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "ttl_file": [],
                "nt_file": []
            }
        },
        "Importer.execute_update": {
            "name": "execute_update",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "infile": [],
                "query": []
            }
        },
        "Importer.clean_nt": {
            "name": "clean_nt",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "nt_file": [],
                "cleaned_nt_file": []
            }
        },
        "Importer.convert_nt_to_kgtk": {
            "name": "convert_nt_to_kgtk",
            "location": 222,
            "return": [],
            "arguments": {
                "self": [],
                "nt_file": [],
                "kgtk_file": []
            }
        },
        "Importer.merge_values": {
            "name": "merge_values",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "Importer.assign_qnode_label": {
            "name": "assign_qnode_label",
            "location": 247,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Importer.create_entity_df": {
            "name": "create_entity_df",
            "location": 251,
            "return": [],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "kgtk_db_file": [],
                "output_file": [],
                "source": []
            }
        },
        "Importer.create_event_df": {
            "name": "create_event_df",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "kgtk_db_file": [],
                "output_file": [],
                "source": []
            }
        },
        "Importer.create_relation_df": {
            "name": "create_relation_df",
            "location": 540,
            "return": [],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "kgtk_db_file": [],
                "output_file": [],
                "source": []
            }
        },
        "Importer.create_role": {
            "name": "create_role",
            "location": 594,
            "return": [],
            "arguments": {
                "self": [],
                "kgtk_file": [],
                "kgtk_db_file": [],
                "output_file": [],
                "source": []
            }
        },
        "Importer.create_entity_df.merge_just": {
            "name": "merge_just",
            "location": 280,
            "return": [],
            "arguments": {
                "v": []
            }
        },
        "Importer.create_event_df.merge_time": {
            "name": "merge_time",
            "location": 483,
            "return": [],
            "arguments": {
                "values": []
            }
        },
        "Importer.create_entity_df.parse_private_date": {
            "name": "parse_private_date",
            "location": 360,
            "return": [],
            "arguments": {
                "v": []
            }
        }
    },
    "gaia-ta2pipeline-master/pipeline2/runner.py": {}
}
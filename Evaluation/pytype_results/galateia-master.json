{
    "galateia-master/manage.py": {},
    "galateia-master/api/__init__.py": {},
    "galateia-master/api/v1/urls.py": {},
    "galateia-master/api/v1/__init__.py": {},
    "galateia-master/galateia/celery.py": {
        "debug_task": {
            "name": "debug_task",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "galateia-master/galateia/settings.py": {},
    "galateia-master/galateia/urls.py": {},
    "galateia-master/galateia/wsgi.py": {},
    "galateia-master/galateia/__init__.py": {},
    "galateia-master/sites/admin.py": {
        "UserArticleAdmin.get_field_queryset": {
            "name": "get_field_queryset",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "db": [],
                "db_field": [],
                "request": []
            }
        },
        "ArticleAdmin.news_title": {
            "name": "news_title",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "inctance": []
            }
        },
        "ArticleAdmin.main_text": {
            "name": "main_text",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "inctance": []
            }
        },
        "UserSiteAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UserSiteAdmin.save_model": {
            "name": "save_model",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "form": [],
                "change": []
            }
        }
    },
    "galateia-master/sites/apps.py": {},
    "galateia-master/sites/models.py": {
        "Site.save": {
            "name": "save",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "force_insert": [],
                "force_update": [],
                "using": [],
                "update_fields": []
            }
        },
        "Site.__str__": {
            "name": "__str__",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Article.__str__": {
            "name": "__str__",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserSite.__str__": {
            "name": "__str__",
            "location": 70,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserSite.get_key_words": {
            "name": "get_key_words",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserSite.get_exclude_words": {
            "name": "get_exclude_words",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "galateia-master/sites/tasks.py": {
        "site_parser": {
            "name": "site_parser",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "galateia-master/sites/task_modules.py": {
        "RenderAndSave.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "async_mode": []
            }
        },
        "RenderAndSave.get_available_sites": {
            "name": "get_available_sites",
            "location": 20,
            "return": [
                "list"
            ],
            "arguments": {
                "news_portal": [],
                "news_dep": []
            }
        },
        "RenderAndSave._save_postgr": {
            "name": "_save_postgr",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "results": []
            }
        },
        "RenderAndSave._async_worker": {
            "name": "_async_worker",
            "location": 49,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "sites_list": []
            }
        },
        "RenderAndSave._sync_worker": {
            "name": "_sync_worker",
            "location": 63,
            "return": [
                "Optional[list]"
            ],
            "arguments": {
                "self": [],
                "site": []
            }
        },
        "RenderAndSave.run_parser": {
            "name": "run_parser",
            "location": 75,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "galateia-master/sites/tass_utils.py": {
        "tass_news": {
            "name": "tass_news",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "site_url": [],
                "render": []
            }
        },
        "get_news_links": {
            "name": "get_news_links",
            "location": 29,
            "return": [
                "Optional[Tuple[(Tuple[(Any, Any)], ...)]]"
            ],
            "arguments": {
                "news_list": [],
                "template": []
            }
        },
        "get_news_tuple": {
            "name": "get_news_tuple",
            "location": 49,
            "return": [
                "Optional[Tuple[(Tuple[(Any, Any)], ...)]]"
            ],
            "arguments": {
                "url": []
            }
        },
        "get_content": {
            "name": "get_content",
            "location": 65,
            "return": [
                "tuple"
            ],
            "arguments": {
                "abs_url": []
            }
        },
        "tass_circle": {
            "name": "tass_circle",
            "location": 84,
            "return": [
                "Tuple[(Dict[(str, Any)], ...)]"
            ],
            "arguments": {
                "target_site": []
            }
        }
    },
    "galateia-master/sites/urls.py": {},
    "galateia-master/sites/utils.py": {
        "get_has_prices": {
            "name": "get_has_prices",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "text": []
            }
        },
        "get_has_percents": {
            "name": "get_has_percents",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "text": []
            }
        },
        "get_frequent_words": {
            "name": "get_frequent_words",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "text": [],
                "number": []
            }
        }
    },
    "galateia-master/sites/views.py": {},
    "galateia-master/sites/__init__.py": {},
    "galateia-master/sites/fixtures/__init__.py": {},
    "galateia-master/sites/migrations/0001_initial.py": {},
    "galateia-master/sites/migrations/0002_auto_20190217_2212.py": {},
    "galateia-master/sites/migrations/__init__.py": {},
    "galateia-master/sites/rest/__init__.py": {},
    "galateia-master/sites/rest/v1/serializers.py": {},
    "galateia-master/sites/rest/v1/views.py": {
        "SitesListViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserEstimationsViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserSitesViewSet.list": {
            "name": "list",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": []
            }
        },
        "UserSitesViewSet.retrieve": {
            "name": "retrieve",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "pk": [],
                "interface_id": []
            }
        }
    },
    "galateia-master/sites/rest/v1/__init__.py": {},
    "galateia-master/sites/tests/base_test.py": {
        "BaseSetupCase.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseSetupCase.tearDown": {
            "name": "tearDown",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "galateia-master/sites/tests/test_article_site.py": {
        "ArticlesTests.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArticlesTests.test_sites_list": {
            "name": "test_sites_list",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArticlesTests.test_article": {
            "name": "test_article",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "galateia-master/sites/tests/test_user_interface.py": {
        "ArticlesTests.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArticlesTests.test_user_sites": {
            "name": "test_user_sites",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArticlesTests.test_user_estimation": {
            "name": "test_user_estimation",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "galateia-master/sites/tests/__init__.py": {},
    "galateia-master/users/admin.py": {},
    "galateia-master/users/apps.py": {},
    "galateia-master/users/models.py": {},
    "galateia-master/users/tests.py": {},
    "galateia-master/users/urls.py": {},
    "galateia-master/users/views.py": {},
    "galateia-master/users/__init__.py": {},
    "galateia-master/users/migrations/0001_initial.py": {},
    "galateia-master/users/migrations/__init__.py": {},
    "galateia-master/users/rest/v1/serializers.py": {},
    "galateia-master/users/rest/v1/views.py": {
        "UsersViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "gampy-master/ipython.py": {},
    "gampy-master/jupyterlab.py": {},
    "gampy-master/setup.py": {
        "requires": {
            "name": "requires",
            "location": 10,
            "return": [],
            "arguments": {
                "requirements": []
            }
        }
    },
    "gampy-master/editors/jupyterlab.py": {
        "post_save_hook": {
            "name": "post_save_hook",
            "location": 11,
            "return": [],
            "arguments": {
                "model": [],
                "os_path": [],
                "contents_manager": []
            }
        }
    },
    "gampy-master/gampy/advices.py": {
        "identical": {
            "name": "identical",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "cacheable": {
            "name": "cacheable",
            "location": 33,
            "return": [],
            "arguments": {
                "n": [],
                "typed": []
            }
        },
        "constable": {
            "name": "constable",
            "location": 41,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "flippable": {
            "name": "flippable",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "fluentable": {
            "name": "fluentable",
            "location": 73,
            "return": [],
            "arguments": {
                "n": []
            }
        },
        "preable": {
            "name": "preable",
            "location": 94,
            "return": [],
            "arguments": {
                "do": []
            }
        },
        "postable": {
            "name": "postable",
            "location": 112,
            "return": [],
            "arguments": {
                "do": []
            }
        },
        "optional": {
            "name": "optional",
            "location": 131,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "retryable": {
            "name": "retryable",
            "location": 152,
            "return": [],
            "arguments": {
                "d": [],
                "n": [],
                "on": []
            }
        },
        "exceptional": {
            "name": "exceptional",
            "location": 176,
            "return": [],
            "arguments": {
                "x": [],
                "on": []
            }
        },
        "loggable": {
            "name": "loggable",
            "location": 195,
            "return": [],
            "arguments": {
                "logger": [],
                "pre": [],
                "post": []
            }
        },
        "traceable": {
            "name": "traceable",
            "location": 223,
            "return": [],
            "arguments": {
                "printer": [],
                "pre": [],
                "post": []
            }
        },
        "identical.advice": {
            "name": "advice",
            "location": 24,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "constable.advice": {
            "name": "advice",
            "location": 44,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "flippable.advice": {
            "name": "advice",
            "location": 60,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "fluentable.advice": {
            "name": "advice",
            "location": 76,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "preable.advice": {
            "name": "advice",
            "location": 97,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "postable.advice": {
            "name": "advice",
            "location": 115,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "optional.advice": {
            "name": "advice",
            "location": 134,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "retryable.advice": {
            "name": "advice",
            "location": 157,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "exceptional.advice": {
            "name": "advice",
            "location": 179,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "loggable.advice": {
            "name": "advice",
            "location": 202,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "traceable.advice": {
            "name": "advice",
            "location": 230,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "constable.advice.wrapped": {
            "name": "wrapped",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "flippable.advice.wrapped": {
            "name": "wrapped",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "fluentable.advice.wrapped": {
            "name": "wrapped",
            "location": 78,
            "return": [],
            "arguments": {}
        },
        "preable.advice.wrapped": {
            "name": "wrapped",
            "location": 99,
            "return": [],
            "arguments": {}
        },
        "postable.advice.wrapped": {
            "name": "wrapped",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "optional.advice.wrapped": {
            "name": "wrapped",
            "location": 136,
            "return": [],
            "arguments": {}
        },
        "retryable.advice.wrapped": {
            "name": "wrapped",
            "location": 159,
            "return": [],
            "arguments": {}
        },
        "exceptional.advice.wrapped": {
            "name": "wrapped",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "loggable.advice.wrapped": {
            "name": "wrapped",
            "location": 204,
            "return": [],
            "arguments": {}
        },
        "traceable.advice.wrapped": {
            "name": "wrapped",
            "location": 232,
            "return": [],
            "arguments": {}
        }
    },
    "gampy-master/gampy/errors.py": {},
    "gampy-master/gampy/structures.py": {
        "Pipeline.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "steps": []
            }
        },
        "Pipeline.__hash__": {
            "name": "__hash__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.steps": {
            "name": "steps",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "steps": []
            }
        },
        "Pipeline.__enter__": {
            "name": "__enter__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__exit__": {
            "name": "__exit__",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "Pipeline.__or__": {
            "name": "__or__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "f": []
            }
        },
        "Pipeline.__and__": {
            "name": "__and__",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__xor__": {
            "name": "__xor__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__add__": {
            "name": "__add__",
            "location": 146,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__sub__": {
            "name": "__sub__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__mul__": {
            "name": "__mul__",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Pipeline.__matmul__": {
            "name": "__matmul__",
            "location": 169,
            "return": [],
            "arguments": {
                "self": [],
                "advice": []
            }
        },
        "Pipeline.__truediv__": {
            "name": "__truediv__",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Pipeline.__floordiv__": {
            "name": "__floordiv__",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Pipeline.__mod__": {
            "name": "__mod__",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__str__": {
            "name": "__str__",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__repr__": {
            "name": "__repr__",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__bool__": {
            "name": "__bool__",
            "location": 218,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__call__": {
            "name": "__call__",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__len__": {
            "name": "__len__",
            "location": 249,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__iter__": {
            "name": "__iter__",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__getitem__": {
            "name": "__getitem__",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "Pipeline.__contains__": {
            "name": "__contains__",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "step": []
            }
        },
        "Pipeline.__reversed__": {
            "name": "__reversed__",
            "location": 265,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Pipeline.__lt__": {
            "name": "__lt__",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__gt__": {
            "name": "__gt__",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__le__": {
            "name": "__le__",
            "location": 279,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__ge__": {
            "name": "__ge__",
            "location": 283,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__eq__": {
            "name": "__eq__",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__ne__": {
            "name": "__ne__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__pow__": {
            "name": "__pow__",
            "location": 295,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__lshift__": {
            "name": "__lshift__",
            "location": 302,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__rshift__": {
            "name": "__rshift__",
            "location": 310,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Pipeline.__call__.part": {
            "name": "part",
            "location": 227,
            "return": [],
            "arguments": {
                "step": []
            }
        },
        "Pipeline.__call__.comp": {
            "name": "comp",
            "location": 234,
            "return": [],
            "arguments": {
                "f": [],
                "g": []
            }
        },
        "Pipeline.__call__.comp.composition": {
            "name": "composition",
            "location": 237,
            "return": [],
            "arguments": {}
        }
    },
    "gampy-master/gampy/__init__.py": {},
    "gampy-master/shells/ipython.py": {},
    "gampy-master/tests/conftest.py": {},
    "gampy-master/tests/test_advices.py": {
        "test_identical": {
            "name": "test_identical",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_cacheable": {
            "name": "test_cacheable",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_constable": {
            "name": "test_constable",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "test_flippable": {
            "name": "test_flippable",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "test_fluentable": {
            "name": "test_fluentable",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "test_preable": {
            "name": "test_preable",
            "location": 91,
            "return": [],
            "arguments": {}
        },
        "test_postable": {
            "name": "test_postable",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "test_optional": {
            "name": "test_optional",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "test_retryable": {
            "name": "test_retryable",
            "location": 127,
            "return": [],
            "arguments": {}
        },
        "test_exceptional": {
            "name": "test_exceptional",
            "location": 145,
            "return": [],
            "arguments": {}
        },
        "test_loggable": {
            "name": "test_loggable",
            "location": 155,
            "return": [],
            "arguments": {}
        },
        "test_traceable": {
            "name": "test_traceable",
            "location": 181,
            "return": [],
            "arguments": {}
        }
    },
    "gampy-master/tests/test_gampy.py": {
        "test_pipeline": {
            "name": "test_pipeline",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_advices": {
            "name": "test_advices",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "gampy-master/tests/test_structures.py": {
        "inc": {
            "name": "inc",
            "location": 19,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "add": {
            "name": "add",
            "location": 23,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "iseven": {
            "name": "iseven",
            "location": 27,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "test_init": {
            "name": "test_init",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "test_hash": {
            "name": "test_hash",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "test_getter": {
            "name": "test_getter",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "test_setter": {
            "name": "test_setter",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "test_context": {
            "name": "test_context",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "test_or": {
            "name": "test_or",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "test_and": {
            "name": "test_and",
            "location": 154,
            "return": [],
            "arguments": {}
        },
        "test_xor": {
            "name": "test_xor",
            "location": 161,
            "return": [],
            "arguments": {}
        },
        "test_add": {
            "name": "test_add",
            "location": 168,
            "return": [],
            "arguments": {}
        },
        "test_sub": {
            "name": "test_sub",
            "location": 175,
            "return": [],
            "arguments": {}
        },
        "test_mul": {
            "name": "test_mul",
            "location": 182,
            "return": [],
            "arguments": {}
        },
        "test_matmul": {
            "name": "test_matmul",
            "location": 198,
            "return": [],
            "arguments": {}
        },
        "test_truediv": {
            "name": "test_truediv",
            "location": 214,
            "return": [],
            "arguments": {}
        },
        "test_floordiv": {
            "name": "test_floordiv",
            "location": 221,
            "return": [],
            "arguments": {}
        },
        "test_mod": {
            "name": "test_mod",
            "location": 228,
            "return": [],
            "arguments": {}
        },
        "test_str": {
            "name": "test_str",
            "location": 235,
            "return": [],
            "arguments": {}
        },
        "test_repr": {
            "name": "test_repr",
            "location": 242,
            "return": [],
            "arguments": {}
        },
        "test_bool": {
            "name": "test_bool",
            "location": 249,
            "return": [],
            "arguments": {}
        },
        "test_call": {
            "name": "test_call",
            "location": 257,
            "return": [],
            "arguments": {}
        },
        "test_len": {
            "name": "test_len",
            "location": 269,
            "return": [],
            "arguments": {}
        },
        "test_iter": {
            "name": "test_iter",
            "location": 277,
            "return": [],
            "arguments": {}
        },
        "test_getitem": {
            "name": "test_getitem",
            "location": 284,
            "return": [],
            "arguments": {}
        },
        "test_contains": {
            "name": "test_contains",
            "location": 296,
            "return": [],
            "arguments": {}
        },
        "test_reversed": {
            "name": "test_reversed",
            "location": 307,
            "return": [],
            "arguments": {}
        },
        "test_lt": {
            "name": "test_lt",
            "location": 318,
            "return": [],
            "arguments": {}
        },
        "test_gt": {
            "name": "test_gt",
            "location": 327,
            "return": [],
            "arguments": {}
        },
        "test_le": {
            "name": "test_le",
            "location": 336,
            "return": [],
            "arguments": {}
        },
        "test_ge": {
            "name": "test_ge",
            "location": 345,
            "return": [],
            "arguments": {}
        },
        "test_eq": {
            "name": "test_eq",
            "location": 354,
            "return": [],
            "arguments": {}
        },
        "test_ne": {
            "name": "test_ne",
            "location": 362,
            "return": [],
            "arguments": {}
        },
        "test_pow": {
            "name": "test_pow",
            "location": 370,
            "return": [],
            "arguments": {}
        },
        "test_lshift": {
            "name": "test_lshift",
            "location": 379,
            "return": [],
            "arguments": {}
        },
        "test_rshift": {
            "name": "test_rshift",
            "location": 390,
            "return": [],
            "arguments": {}
        },
        "test_matmul.advice": {
            "name": "advice",
            "location": 199,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "test_matmul.advice.wrapped": {
            "name": "wrapped",
            "location": 200,
            "return": [],
            "arguments": {}
        }
    }
}
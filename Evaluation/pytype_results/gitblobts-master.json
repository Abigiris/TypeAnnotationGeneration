{
    "gitblobts-master/setup.py": {
        "parse_requirements": {
            "name": "parse_requirements",
            "location": 7,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "filename": []
            }
        }
    },
    "gitblobts-master/docs/conf.py": {},
    "gitblobts-master/gitblobts/config.py": {
        "configure_logging": {
            "name": "configure_logging",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "gitblobts-master/gitblobts/exc.py": {
        "StoreError.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": []
            }
        }
    },
    "gitblobts-master/gitblobts/store.py": {
        "generate_key": {
            "name": "generate_key",
            "location": 39,
            "return": [
                "bytes"
            ],
            "arguments": {}
        },
        "Store.__init__": {
            "name": "__init__",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Store._addblob": {
            "name": "_addblob",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "blob": [],
                "timestamp": []
            }
        },
        "Store._check_repo": {
            "name": "_check_repo",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store._commit_and_push_repo": {
            "name": "_commit_and_push_repo",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store._compress_blob": {
            "name": "_compress_blob",
            "location": 175,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blob": []
            }
        },
        "Store._decode_name": {
            "name": "_decode_name",
            "location": 182,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "filepath": []
            }
        },
        "Store._decompress_blob": {
            "name": "_decompress_blob",
            "location": 194,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blob": []
            }
        },
        "Store._decrypt_blob": {
            "name": "_decrypt_blob",
            "location": 201,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blob": []
            }
        },
        "Store._egress_blob": {
            "name": "_egress_blob",
            "location": 208,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blob": []
            }
        },
        "Store._encode_name": {
            "name": "_encode_name",
            "location": 211,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "timestamp_ns": []
            }
        },
        "Store._encrypt_blob": {
            "name": "_encrypt_blob",
            "location": 218,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blob": []
            }
        },
        "Store._ingress_blob": {
            "name": "_ingress_blob",
            "location": 225,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blob": []
            }
        },
        "Store._log_state": {
            "name": "_log_state",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store._pull_repo": {
            "name": "_pull_repo",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store._standardize_time_to_ns": {
            "name": "_standardize_time_to_ns",
            "location": 262,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "timestamp": []
            }
        },
        "Store.addblob": {
            "name": "addblob",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "blob": [],
                "timestamp": []
            }
        },
        "Store.addblobs": {
            "name": "addblobs",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "blobs": [],
                "timestamps": []
            }
        },
        "Store.getblobs": {
            "name": "getblobs",
            "location": 334,
            "return": [
                "Generator[(Blob, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "start_time": [],
                "end_time": []
            }
        },
        "Store._commit_and_push_repo._is_pushed": {
            "name": "_is_pushed",
            "location": 143,
            "return": [],
            "arguments": {
                "push_info": []
            }
        },
        "Store._pull_repo._is_pulled": {
            "name": "_is_pulled",
            "location": 244,
            "return": [],
            "arguments": {
                "pull_info": []
            }
        },
        "Store._standardize_time_to_ns._convert_seconds_to_ns": {
            "name": "_convert_seconds_to_ns",
            "location": 263,
            "return": [],
            "arguments": {
                "seconds": []
            }
        },
        "Store.getblobs.standardize_time_to_ns": {
            "name": "standardize_time_to_ns",
            "location": 354,
            "return": [],
            "arguments": {
                "timestamp": []
            }
        }
    },
    "gitblobts-master/gitblobts/__init__.py": {},
    "gitblobts-master/gitblobts/util/int_base_encoder.py": {
        "IntBaseEncoder.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "encoding": []
            }
        },
        "IntBaseEncoder._bytes_length": {
            "name": "_bytes_length",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "IntBaseEncoder.encode": {
            "name": "encode",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "IntBaseEncoder.decode": {
            "name": "decode",
            "location": 29,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "b64": []
            }
        },
        "TestIntBaseEncoder.test_unsigned_with_variable_length": {
            "name": "test_unsigned_with_variable_length",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntBaseEncoder.test_signed_with_variable_length": {
            "name": "test_signed_with_variable_length",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntBaseEncoder.test_unsigned_with_fixed_length": {
            "name": "test_unsigned_with_fixed_length",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntBaseEncoder.test_signed_with_fixed_length": {
            "name": "test_signed_with_fixed_length",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gitblobts-master/gitblobts/util/int_merger.py": {
        "IntMerger.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_bits_int2": []
            }
        },
        "IntMerger._max_int": {
            "name": "_max_int",
            "location": 23,
            "return": [
                "int"
            ],
            "arguments": {
                "num_bits": []
            }
        },
        "IntMerger.merge": {
            "name": "merge",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "int1": [],
                "int2": []
            }
        },
        "IntMerger.split": {
            "name": "split",
            "location": 29,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "int12": []
            }
        },
        "TestIntMerger.test_intmerger": {
            "name": "test_intmerger",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gitblobts-master/gitblobts/util/__init__.py": {},
    "gitblobts-master/scripts/store.py": {},
    "gitblobts-master/tests/test_requirements.py": {
        "TestRequirements.test_requirements": {
            "name": "test_requirements",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "gitblobts-master/util/compression/compare.py": {
        "compare_compressors": {
            "name": "compare_compressors",
            "location": 11,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "filetype": [],
                "samples": [],
                "compressors": []
            }
        },
        "test_compressors": {
            "name": "test_compressors",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "go-site-master/graphstore/rule-runner/setup.py": {},
    "go-site-master/graphstore/rule-runner/rulerunner/main.py": {
        "cli": {
            "name": "cli",
            "location": 59,
            "return": [],
            "arguments": {}
        },
        "group": {
            "name": "group",
            "location": 68,
            "return": [],
            "arguments": {
                "endpoint": [],
                "rules_dir": [],
                "schema": [],
                "verbose": [],
                "out": []
            }
        },
        "test": {
            "name": "test",
            "location": 93,
            "return": [],
            "arguments": {
                "ctx": [],
                "endpoint": [],
                "rule_path": [],
                "verbose": [],
                "schema": [],
                "out": []
            }
        },
        "local": {
            "name": "local",
            "location": 116,
            "return": [],
            "arguments": {
                "turtle": [],
                "sparql_file": []
            }
        },
        "valid": {
            "name": "valid",
            "location": 125,
            "return": [],
            "arguments": {
                "rules_dir": [],
                "schema": []
            }
        },
        "rules_directory": {
            "name": "rules_directory",
            "location": 155,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "load_yamldown": {
            "name": "load_yamldown",
            "location": 161,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "validate": {
            "name": "validate",
            "location": 176,
            "return": [],
            "arguments": {
                "yml_rule": [],
                "schema_path": []
            }
        },
        "RuleParameter.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RuleParameter.convert": {
            "name": "convert",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "param": [],
                "ctx": []
            }
        },
        "RuleParameter.build_rule_path": {
            "name": "build_rule_path",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "gorule": []
            }
        },
        "RuleParameter.is_gorule": {
            "name": "is_gorule",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RuleParameter.is_int": {
            "name": "is_int",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "RuleParameter.is_just_id": {
            "name": "is_just_id",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "go-site-master/graphstore/rule-runner/rulerunner/rule.py": {
        "prefix_uri": {
            "name": "prefix_uri",
            "location": 12,
            "return": [],
            "arguments": {
                "uri": []
            }
        },
        "run_query": {
            "name": "run_query",
            "location": 89,
            "return": [],
            "arguments": {
                "query": [],
                "endpoint": []
            }
        },
        "test_rule": {
            "name": "test_rule",
            "location": 99,
            "return": [],
            "arguments": {
                "rule": [],
                "endpoint": []
            }
        },
        "generate_results_json": {
            "name": "generate_results_json",
            "location": 110,
            "return": [],
            "arguments": {
                "rule_results_list": []
            }
        },
        "sparql_from": {
            "name": "sparql_from",
            "location": 135,
            "return": [],
            "arguments": {
                "gorule": []
            }
        },
        "RuleResult.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "returned": [],
                "rule": []
            }
        },
        "RuleResult.jsonify": {
            "name": "jsonify",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RuleResult.verbose_readable": {
            "name": "verbose_readable",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RuleResult.short_summary": {
            "name": "short_summary",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RuleResult.__init__._passing": {
            "name": "_passing",
            "location": 36,
            "return": [],
            "arguments": {
                "returned": [],
                "rule": []
            }
        }
    },
    "go-site-master/graphstore/rule-runner/rulerunner/__init__.py": {},
    "go-site-master/graphstore/rule-runner/tests/test_rules.py": {
        "query": {
            "name": "query",
            "location": 9,
            "return": [],
            "arguments": {
                "rule_number": []
            }
        },
        "check_rule_with_data": {
            "name": "check_rule_with_data",
            "location": 18,
            "return": [],
            "arguments": {
                "rule_path": [],
                "data_path": []
            }
        },
        "TestRules.test_rule_6": {
            "name": "test_rule_6",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRules.test_rule_7": {
            "name": "test_rule_7",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRules.test_rule_14": {
            "name": "test_rule_14",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRules.test_rule_11": {
            "name": "test_rule_11",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "go-site-master/graphstore/rule-runner/tests/__init__.py": {},
    "go-site-master/pipeline/group-timing.py": {
        "groups_dir": {
            "name": "groups_dir",
            "location": 4,
            "return": [],
            "arguments": {}
        },
        "group_names": {
            "name": "group_names",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "group_files": {
            "name": "group_files",
            "location": 10,
            "return": [],
            "arguments": {
                "group": []
            }
        },
        "modification_time": {
            "name": "modification_time",
            "location": 13,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "group_files_times": {
            "name": "group_files_times",
            "location": 16,
            "return": [],
            "arguments": {
                "group": []
            }
        },
        "group_time_delta": {
            "name": "group_time_delta",
            "location": 19,
            "return": [],
            "arguments": {
                "group": []
            }
        },
        "all_groups_timing": {
            "name": "all_groups_timing",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "display": {
            "name": "display",
            "location": 26,
            "return": [],
            "arguments": {
                "timings": []
            }
        },
        "optional_file_write": {
            "name": "optional_file_write",
            "location": 30,
            "return": [],
            "arguments": {
                "writable": [],
                "text": []
            }
        },
        "timing": {
            "name": "timing",
            "location": 37,
            "return": [],
            "arguments": {
                "group": [],
                "record": []
            }
        }
    },
    "go-site-master/pipeline/go-association-transit/setup.py": {},
    "go-site-master/pipeline/go-association-transit/goat/cached_ontology.py": {
        "from_file": {
            "name": "from_file",
            "location": 24,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "KeyDefaultDict.__missing__": {
            "name": "__missing__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "go-site-master/pipeline/go-association-transit/goat/goat.py": {
        "cli": {
            "name": "cli",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "pristine": {
            "name": "pristine",
            "location": 35,
            "return": [],
            "arguments": {
                "source": [],
                "ontology": [],
                "inferences": [],
                "target": []
            }
        }
    },
    "go-site-master/pipeline/go-association-transit/goat/parse_into_gpad.py": {
        "process_single_file": {
            "name": "process_single_file",
            "location": 15,
            "return": [],
            "arguments": {
                "source_file": [],
                "gpis": [],
                "ontology": [],
                "out_dir": [],
                "annotation_inferences": []
            }
        }
    },
    "go-site-master/pipeline/go-association-transit/goat/sources.py": {
        "align_source": {
            "name": "align_source",
            "location": 17,
            "return": [],
            "arguments": {
                "source_file": []
            }
        },
        "align_sources": {
            "name": "align_sources",
            "location": 34,
            "return": [],
            "arguments": {
                "source_dir": []
            }
        }
    },
    "go-site-master/pipeline/go-association-transit/goat/__init__.py": {},
    "go-site-master/pipeline/util/model_organism.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "taxons": {
            "name": "taxons",
            "location": 14,
            "return": [],
            "arguments": {
                "dataset_dir": [],
                "out": []
            }
        },
        "read_taxa_for_path": {
            "name": "read_taxa_for_path",
            "location": 23,
            "return": [],
            "arguments": {
                "dataset_path": []
            }
        }
    },
    "go-site-master/pipeline/util/paint_merge.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "merge": {
            "name": "merge",
            "location": 16,
            "return": [],
            "arguments": {
                "merger": [],
                "merge_into": []
            }
        },
        "dataset_id_to_path": {
            "name": "dataset_id_to_path",
            "location": 19,
            "return": [],
            "arguments": {
                "dataset_id": [],
                "groups_dir": []
            }
        },
        "merges_into_path": {
            "name": "merges_into_path",
            "location": 23,
            "return": [],
            "arguments": {
                "merges_into": [],
                "groups_dir": []
            }
        },
        "append_zip_into_zip": {
            "name": "append_zip_into_zip",
            "location": 27,
            "return": [],
            "arguments": {
                "merger": [],
                "merge_into": []
            }
        },
        "header_and_annotations": {
            "name": "header_and_annotations",
            "location": 51,
            "return": [],
            "arguments": {
                "merge_into_zip": []
            }
        },
        "paint_header": {
            "name": "paint_header",
            "location": 64,
            "return": [],
            "arguments": {
                "header": [],
                "filename": []
            }
        }
    },
    "go-site-master/scripts/aggregate-json-reports.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 39,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "wikidata_taxon_name": {
            "name": "wikidata_taxon_name",
            "location": 44,
            "return": [],
            "arguments": {
                "tid": []
            }
        },
        "main": {
            "name": "main",
            "location": 77,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/aggregate-references.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 28,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "wtflist2str": {
            "name": "wtflist2str",
            "location": 33,
            "return": [],
            "arguments": {
                "wtflist": []
            }
        },
        "main": {
            "name": "main",
            "location": 94,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/aggregate-stats.py": {
        "create_initial_set": {
            "name": "create_initial_set",
            "location": 9,
            "return": [],
            "arguments": {
                "folder": []
            }
        },
        "list_stats": {
            "name": "list_stats",
            "location": 17,
            "return": [],
            "arguments": {
                "folder": []
            }
        },
        "read_json": {
            "name": "read_json",
            "location": 25,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "write_json": {
            "name": "write_json",
            "location": 30,
            "return": [],
            "arguments": {
                "key": [],
                "content": []
            }
        },
        "print_help": {
            "name": "print_help",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 37,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "go-site-master/scripts/bucket-indexer.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 26,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "get_args": {
            "name": "get_args",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 56,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/combine-datasets-metadata.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/correct_paint_symbols.py": {},
    "go-site-master/scripts/create-bdbag-remote-file-manifest.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 33,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "main": {
            "name": "main",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/datasets.py": {
        "cli": {
            "name": "cli",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "paths": {
            "name": "paths",
            "location": 23,
            "return": [],
            "arguments": {
                "datasets_dir": [],
                "groups": [],
                "excludes": [],
                "type": []
            }
        },
        "load_resource_metadata": {
            "name": "load_resource_metadata",
            "location": 45,
            "return": [],
            "arguments": {
                "datasets_dir": []
            }
        },
        "transform_download_targets": {
            "name": "transform_download_targets",
            "location": 65,
            "return": [],
            "arguments": {
                "resource_metadata": [],
                "types": []
            }
        }
    },
    "go-site-master/scripts/directory_indexer.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 39,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "main": {
            "name": "main",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "map_current_dir_to_url": {
            "name": "map_current_dir_to_url",
            "location": 148,
            "return": [],
            "arguments": {
                "base_dir": [],
                "current_dir": [],
                "url_prefix": []
            }
        },
        "map_dir_to_url": {
            "name": "map_dir_to_url",
            "location": 152,
            "return": [],
            "arguments": {
                "base_dir": [],
                "current_dir": [],
                "directory": [],
                "url_prefix": []
            }
        },
        "map_file_to_url": {
            "name": "map_file_to_url",
            "location": 161,
            "return": [],
            "arguments": {
                "base_dir": [],
                "current_dir": [],
                "a_file": [],
                "url_prefix": []
            }
        },
        "parent_url": {
            "name": "parent_url",
            "location": 170,
            "return": [],
            "arguments": {
                "base_dir": [],
                "current_dir": [],
                "url_prefix": []
            }
        }
    },
    "go-site-master/scripts/download-annotation-sources.py": {
        "cli": {
            "name": "cli",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "all": {
            "name": "all",
            "location": 38,
            "return": [],
            "arguments": {
                "datasets": [],
                "target": [],
                "type": [],
                "exclude": [],
                "only_group": [],
                "parallel": [],
                "dry_run": [],
                "retries": [],
                "retry_time": [],
                "map_dataset_url": [],
                "replace": [],
                "zip_unzip": []
            }
        },
        "group": {
            "name": "group",
            "location": 89,
            "return": [],
            "arguments": {
                "group": [],
                "datasets": [],
                "target": [],
                "type": [],
                "exclude": [],
                "dry_run": [],
                "parallel": [],
                "retries": [],
                "retry_time": [],
                "replace": [],
                "zip_unzip": []
            }
        },
        "annotations": {
            "name": "annotations",
            "location": 136,
            "return": [],
            "arguments": {
                "datasets": [],
                "target": [],
                "exclude": [],
                "only_group": [],
                "parallel": [],
                "dry_run": [],
                "retries": [],
                "retry_time": [],
                "map_dataset_url": [],
                "replace": [],
                "zip_unzip": []
            }
        },
        "organize": {
            "name": "organize",
            "location": 212,
            "return": [],
            "arguments": {
                "datasets": [],
                "target": [],
                "source": []
            }
        },
        "load_resource_metadata": {
            "name": "load_resource_metadata",
            "location": 238,
            "return": [],
            "arguments": {
                "datasets_dir": []
            }
        },
        "annotation_datasets_to_download": {
            "name": "annotation_datasets_to_download",
            "location": 258,
            "return": [],
            "arguments": {
                "groups_metadata": []
            }
        },
        "multi_download": {
            "name": "multi_download",
            "location": 346,
            "return": [],
            "arguments": {
                "dataset_targets": [],
                "target": [],
                "parallel": [],
                "retries": [],
                "retry_time": [],
                "dryrun": [],
                "replace": []
            }
        },
        "transform_download_targets": {
            "name": "transform_download_targets",
            "location": 369,
            "return": [],
            "arguments": {
                "resource_metadata": [],
                "types": []
            }
        },
        "robust_download": {
            "name": "robust_download",
            "location": 399,
            "return": [],
            "arguments": {
                "dataset_target": [],
                "target": [],
                "retries": [],
                "retry_time": [],
                "dryrun": [],
                "replace": []
            }
        },
        "download_the_file": {
            "name": "download_the_file",
            "location": 424,
            "return": [],
            "arguments": {
                "url": [],
                "out_path": [],
                "dryrun": []
            }
        },
        "construct_download_path": {
            "name": "construct_download_path",
            "location": 451,
            "return": [],
            "arguments": {
                "dataset_target": [],
                "target": []
            }
        },
        "construct_grouped_path": {
            "name": "construct_grouped_path",
            "location": 465,
            "return": [],
            "arguments": {
                "dataset": [],
                "filename": [],
                "target": []
            }
        },
        "extension_map": {
            "name": "extension_map",
            "location": 474,
            "return": [],
            "arguments": {
                "compression": []
            }
        },
        "zipup": {
            "name": "zipup",
            "location": 480,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "unzip": {
            "name": "unzip",
            "location": 490,
            "return": [],
            "arguments": {
                "path": [],
                "target": []
            }
        },
        "multi_download._simple_callback": {
            "name": "_simple_callback",
            "location": 350,
            "return": [],
            "arguments": {
                "download_result_tuple": []
            }
        },
        "unzip.chunk_gen": {
            "name": "chunk_gen",
            "location": 492,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/downloads-page-gen.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 49,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "main": {
            "name": "main",
            "location": 54,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/download_source_gafs.py": {
        "cli": {
            "name": "cli",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "all": {
            "name": "all",
            "location": 39,
            "return": [],
            "arguments": {
                "datasets": [],
                "target": [],
                "type": [],
                "exclude": [],
                "only_group": [],
                "parallel": [],
                "dry_run": [],
                "retries": [],
                "retry_time": [],
                "map_dataset_url": [],
                "replace": [],
                "zip_unzip": []
            }
        },
        "group": {
            "name": "group",
            "location": 90,
            "return": [],
            "arguments": {
                "group": [],
                "datasets": [],
                "target": [],
                "type": [],
                "exclude": [],
                "dry_run": [],
                "parallel": [],
                "retries": [],
                "retry_time": [],
                "replace": [],
                "zip_unzip": []
            }
        },
        "annotations": {
            "name": "annotations",
            "location": 137,
            "return": [],
            "arguments": {
                "datasets": [],
                "target": [],
                "exclude": [],
                "only_group": [],
                "parallel": [],
                "dry_run": [],
                "retries": [],
                "retry_time": [],
                "map_dataset_url": [],
                "replace": [],
                "zip_unzip": []
            }
        },
        "organize": {
            "name": "organize",
            "location": 212,
            "return": [],
            "arguments": {
                "datasets": [],
                "target": [],
                "source": []
            }
        },
        "load_resource_metadata": {
            "name": "load_resource_metadata",
            "location": 237,
            "return": [],
            "arguments": {
                "datasets_dir": []
            }
        },
        "annotation_datasets_to_download": {
            "name": "annotation_datasets_to_download",
            "location": 257,
            "return": [],
            "arguments": {
                "groups_metadata": []
            }
        },
        "multi_download": {
            "name": "multi_download",
            "location": 349,
            "return": [],
            "arguments": {
                "dataset_targets": [],
                "target": [],
                "parallel": [],
                "retries": [],
                "retry_time": [],
                "dryrun": [],
                "replace": []
            }
        },
        "transform_download_targets": {
            "name": "transform_download_targets",
            "location": 372,
            "return": [],
            "arguments": {
                "resource_metadata": [],
                "types": []
            }
        },
        "robust_download": {
            "name": "robust_download",
            "location": 402,
            "return": [],
            "arguments": {
                "dataset_target": [],
                "target": [],
                "retries": [],
                "retry_time": [],
                "dryrun": [],
                "replace": []
            }
        },
        "download_the_file": {
            "name": "download_the_file",
            "location": 427,
            "return": [],
            "arguments": {
                "url": [],
                "out_path": [],
                "dryrun": []
            }
        },
        "construct_download_path": {
            "name": "construct_download_path",
            "location": 454,
            "return": [],
            "arguments": {
                "dataset_target": [],
                "target": []
            }
        },
        "construct_grouped_path": {
            "name": "construct_grouped_path",
            "location": 468,
            "return": [],
            "arguments": {
                "dataset": [],
                "filename": [],
                "target": []
            }
        },
        "extension_map": {
            "name": "extension_map",
            "location": 477,
            "return": [],
            "arguments": {
                "compression": []
            }
        },
        "zipup": {
            "name": "zipup",
            "location": 483,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "unzip": {
            "name": "unzip",
            "location": 493,
            "return": [],
            "arguments": {
                "path": [],
                "target": []
            }
        },
        "multi_download._simple_callback": {
            "name": "_simple_callback",
            "location": 353,
            "return": [],
            "arguments": {
                "download_result_tuple": []
            }
        },
        "unzip.chunk_gen": {
            "name": "chunk_gen",
            "location": 495,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/gaferencer-by-metadata.py": {
        "cli": {
            "name": "cli",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "group": {
            "name": "group",
            "location": 32,
            "return": [],
            "arguments": {
                "group": [],
                "datasets": [],
                "target": [],
                "contexts": [],
                "ontology": [],
                "gafs": [],
                "gaferencer": [],
                "excludes": [],
                "dryrun": []
            }
        },
        "unzip": {
            "name": "unzip",
            "location": 73,
            "return": [],
            "arguments": {
                "path": [],
                "target": []
            }
        },
        "construct_gaf_paths": {
            "name": "construct_gaf_paths",
            "location": 88,
            "return": [],
            "arguments": {
                "gaf_dir": [],
                "group_dataset": [],
                "excludes": []
            }
        },
        "construct_context_options": {
            "name": "construct_context_options",
            "location": 97,
            "return": [],
            "arguments": {
                "contexts": []
            }
        },
        "load_resource_metadata": {
            "name": "load_resource_metadata",
            "location": 102,
            "return": [],
            "arguments": {
                "datasets_dir": []
            }
        },
        "run_gaferencer": {
            "name": "run_gaferencer",
            "location": 122,
            "return": [],
            "arguments": {
                "contexts": [],
                "ontology_path": [],
                "gaf_path": [],
                "out_path": [],
                "dryrun": []
            }
        },
        "unzip.chunk_gen": {
            "name": "chunk_gen",
            "location": 75,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/GitHubIssueCreatorExp01.lambda.py": {
        "lambda_handler": {
            "name": "lambda_handler",
            "location": 20,
            "return": [],
            "arguments": {
                "event": [],
                "context": []
            }
        }
    },
    "go-site-master/scripts/github_issue_summary.py": {
        "make_html_safe": {
            "name": "make_html_safe",
            "location": 14,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "print_single_issue": {
            "name": "print_single_issue",
            "location": 23,
            "return": [],
            "arguments": {
                "issue": []
            }
        },
        "print_issues": {
            "name": "print_issues",
            "location": 28,
            "return": [],
            "arguments": {
                "issues": [],
                "event_type": [],
                "printed_ids": []
            }
        },
        "get_issues": {
            "name": "get_issues",
            "location": 46,
            "return": [],
            "arguments": {
                "repo": [],
                "event_type": [],
                "start_date": []
            }
        }
    },
    "go-site-master/scripts/go_annotation_changes.py": {
        "compute_changes": {
            "name": "compute_changes",
            "location": 8,
            "return": [],
            "arguments": {
                "current_stats": [],
                "previous_stats": []
            }
        },
        "nested_changes": {
            "name": "nested_changes",
            "location": 26,
            "return": [],
            "arguments": {
                "current_json": [],
                "previous_json": []
            }
        },
        "missing_fields": {
            "name": "missing_fields",
            "location": 52,
            "return": [],
            "arguments": {
                "current_json": [],
                "previous_json": []
            }
        },
        "alter_annotation_changes": {
            "name": "alter_annotation_changes",
            "location": 72,
            "return": [],
            "arguments": {
                "current_stats": [],
                "previous_stats": [],
                "current_references": [],
                "previous_references": [],
                "json_annot_changes": []
            }
        },
        "create_text_report": {
            "name": "create_text_report",
            "location": 180,
            "return": [],
            "arguments": {
                "json_changes": []
            }
        },
        "print_help": {
            "name": "print_help",
            "location": 420,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 424,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "go-site-master/scripts/go_bootstrap.py": {
        "print_help": {
            "name": "print_help",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 18,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "go-site-master/scripts/go_ontology_changes.py": {
        "compute_changes": {
            "name": "compute_changes",
            "location": 14,
            "return": [],
            "arguments": {
                "current_obo_url": [],
                "previous_obo_url": []
            }
        },
        "flattern": {
            "name": "flattern",
            "location": 184,
            "return": [],
            "arguments": {
                "A": []
            }
        },
        "create_text_report": {
            "name": "create_text_report",
            "location": 192,
            "return": [],
            "arguments": {
                "json_changes": []
            }
        },
        "format": {
            "name": "format",
            "location": 253,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "count": {
            "name": "count",
            "location": 262,
            "return": [],
            "arguments": {
                "map": []
            }
        },
        "print_help": {
            "name": "print_help",
            "location": 269,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 273,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "go-site-master/scripts/go_refine_stats.py": {
        "print_help": {
            "name": "print_help",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 15,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "go-site-master/scripts/go_reports.py": {
        "print_help": {
            "name": "print_help",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 18,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "go-site-master/scripts/go_stats.py": {
        "compute_stats": {
            "name": "compute_stats",
            "location": 63,
            "return": [],
            "arguments": {
                "golr_url": [],
                "release_date": [],
                "exclude_pb_only": []
            }
        },
        "load_taxon_map": {
            "name": "load_taxon_map",
            "location": 142,
            "return": [],
            "arguments": {}
        },
        "prepare_globals": {
            "name": "prepare_globals",
            "location": 154,
            "return": [],
            "arguments": {
                "all_annotations": []
            }
        },
        "golr_fetch_bioentities_taxon": {
            "name": "golr_fetch_bioentities_taxon",
            "location": 211,
            "return": [],
            "arguments": {
                "taxon": []
            }
        },
        "golr_fetch_references_taxon": {
            "name": "golr_fetch_references_taxon",
            "location": 229,
            "return": [],
            "arguments": {
                "taxon": []
            }
        },
        "golr_fetch_references_group": {
            "name": "golr_fetch_references_group",
            "location": 234,
            "return": [],
            "arguments": {
                "group": []
            }
        },
        "golr_fetch_annotation_by_evidence_by_species": {
            "name": "golr_fetch_annotation_by_evidence_by_species",
            "location": 239,
            "return": [],
            "arguments": {
                "taxon": [],
                "exclude_pb_only": []
            }
        },
        "taxon_label": {
            "name": "taxon_label",
            "location": 260,
            "return": [],
            "arguments": {
                "taxon": []
            }
        },
        "add_taxon_label": {
            "name": "add_taxon_label",
            "location": 267,
            "return": [],
            "arguments": {
                "map": []
            }
        },
        "create_stats": {
            "name": "create_stats",
            "location": 285,
            "return": [],
            "arguments": {
                "all_terms": [],
                "all_annotations": [],
                "all_entities": [],
                "release_date": [],
                "qualifiers": [],
                "exclude_pb_only": []
            }
        },
        "create_text_report": {
            "name": "create_text_report",
            "location": 462,
            "return": [],
            "arguments": {
                "stats_json": []
            }
        },
        "create_meta": {
            "name": "create_meta",
            "location": 575,
            "return": [],
            "arguments": {
                "json_stats": []
            }
        },
        "print_help": {
            "name": "print_help",
            "location": 602,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 606,
            "return": [],
            "arguments": {
                "argv": []
            }
        },
        "get_references": {
            "name": "get_references",
            "location": 706,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/go_stats_utils.py": {
        "is_experimental": {
            "name": "is_experimental",
            "location": 50,
            "return": [],
            "arguments": {
                "evidence_type": []
            }
        },
        "is_computational": {
            "name": "is_computational",
            "location": 53,
            "return": [],
            "arguments": {
                "evidence_type": []
            }
        },
        "get_evidence_min_group": {
            "name": "get_evidence_min_group",
            "location": 56,
            "return": [],
            "arguments": {
                "evidence_type": []
            }
        },
        "aspect_from_source": {
            "name": "aspect_from_source",
            "location": 62,
            "return": [],
            "arguments": {
                "source": []
            }
        },
        "requests_retry": {
            "name": "requests_retry",
            "location": 74,
            "return": [],
            "arguments": {
                "retries": [],
                "backoff": [],
                "session": []
            }
        },
        "fetch": {
            "name": "fetch",
            "location": 89,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "post": {
            "name": "post",
            "location": 107,
            "return": [],
            "arguments": {
                "url": [],
                "params": []
            }
        },
        "golr_fetch": {
            "name": "golr_fetch",
            "location": 118,
            "return": [],
            "arguments": {
                "golr_base_url": [],
                "select_query": []
            }
        },
        "golr_fetch_by_taxon": {
            "name": "golr_fetch_by_taxon",
            "location": 129,
            "return": [],
            "arguments": {
                "golr_base_url": [],
                "select_query": [],
                "taxon": []
            }
        },
        "golr_fetch_by_taxa": {
            "name": "golr_fetch_by_taxa",
            "location": 132,
            "return": [],
            "arguments": {
                "golr_base_url": [],
                "select_query": [],
                "taxa": []
            }
        },
        "build_list": {
            "name": "build_list",
            "location": 142,
            "return": [],
            "arguments": {
                "items_list": [],
                "min_size": []
            }
        },
        "build_map": {
            "name": "build_map",
            "location": 150,
            "return": [],
            "arguments": {
                "items_list": [],
                "min_size": []
            }
        },
        "build_reverse_map": {
            "name": "build_reverse_map",
            "location": 158,
            "return": [],
            "arguments": {
                "map": []
            }
        },
        "cluster_map": {
            "name": "cluster_map",
            "location": 170,
            "return": [],
            "arguments": {
                "input_map": [],
                "synonyms": []
            }
        },
        "cluster_complex_map": {
            "name": "cluster_complex_map",
            "location": 182,
            "return": [],
            "arguments": {
                "input_map": [],
                "synonyms": []
            }
        },
        "ordered_map": {
            "name": "ordered_map",
            "location": 198,
            "return": [],
            "arguments": {
                "map": []
            }
        },
        "extract_map": {
            "name": "extract_map",
            "location": 204,
            "return": [],
            "arguments": {
                "map": [],
                "key_str": []
            }
        },
        "merge_dict": {
            "name": "merge_dict",
            "location": 212,
            "return": [],
            "arguments": {
                "dict_total": [],
                "dict_diff": []
            }
        },
        "minus_dict": {
            "name": "minus_dict",
            "location": 231,
            "return": [],
            "arguments": {
                "dict1": [],
                "dict2": []
            }
        },
        "has_taxon": {
            "name": "has_taxon",
            "location": 246,
            "return": [],
            "arguments": {
                "stats": [],
                "taxon_id": []
            }
        },
        "added_removed_species": {
            "name": "added_removed_species",
            "location": 252,
            "return": [],
            "arguments": {
                "current_stats": [],
                "previous_stats": []
            }
        },
        "bioentity_type": {
            "name": "bioentity_type",
            "location": 271,
            "return": [],
            "arguments": {
                "str_type": []
            }
        },
        "sum_map_values": {
            "name": "sum_map_values",
            "location": 279,
            "return": [],
            "arguments": {
                "map": []
            }
        },
        "write_json": {
            "name": "write_json",
            "location": 288,
            "return": [],
            "arguments": {
                "key": [],
                "content": []
            }
        },
        "write_text": {
            "name": "write_text",
            "location": 295,
            "return": [],
            "arguments": {
                "key": [],
                "content": []
            }
        }
    },
    "go-site-master/scripts/json-concat-lists.py": {},
    "go-site-master/scripts/log-rat.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 23,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/merge-all-reports.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 31,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "main": {
            "name": "main",
            "location": 38,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/obo_parser.py": {
        "value": {
            "name": "value",
            "location": 15,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "relationValue": {
            "name": "relationValue",
            "location": 18,
            "return": [],
            "arguments": {
                "array": []
            }
        },
        "main": {
            "name": "main",
            "location": 515,
            "return": [],
            "arguments": {
                "argv": []
            }
        },
        "NamedEntity.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Term.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Term.count_metas": {
            "name": "count_metas",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "includeXRefs": []
            }
        },
        "Term.count_xrefs": {
            "name": "count_xrefs",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Term.count_structurals": {
            "name": "count_structurals",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Term.is_merged": {
            "name": "is_merged",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Term.has_alt_id": {
            "name": "has_alt_id",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Term.add_intersection_of": {
            "name": "add_intersection_of",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "relationship": [],
                "target_id": [],
                "target_label": []
            }
        },
        "Term.add_relationship": {
            "name": "add_relationship",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "relationship": [],
                "target_id": [],
                "target_label": []
            }
        },
        "Term.add_is_a": {
            "name": "add_is_a",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "is_a": []
            }
        },
        "Term.add_alternate_id": {
            "name": "add_alternate_id",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "alt_id": []
            }
        },
        "Term.add_synonym": {
            "name": "add_synonym",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "synonym": []
            }
        },
        "Term.add_subset": {
            "name": "add_subset",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "subset": []
            }
        },
        "Term.add_xref": {
            "name": "add_xref",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "xref": []
            }
        },
        "Term.equals": {
            "name": "equals",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.structural_equals": {
            "name": "structural_equals",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.meta_equals": {
            "name": "meta_equals",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "includeXRefs": []
            }
        },
        "Term.xrefs_equals": {
            "name": "xrefs_equals",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.explain_structural_differences": {
            "name": "explain_structural_differences",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.explain_xrefs_differences": {
            "name": "explain_xrefs_differences",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.count_xrefs_differences": {
            "name": "count_xrefs_differences",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.explain_meta_differences": {
            "name": "explain_meta_differences",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "includeXRefs": []
            }
        },
        "Term.explain_differences": {
            "name": "explain_differences",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.__str__": {
            "name": "__str__",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Relation.__init__": {
            "name": "__init__",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Relation.__str__": {
            "name": "__str__",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RelationTarget.__init__": {
            "name": "__init__",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OBO_Parser.__init__": {
            "name": "__init__",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "content": []
            }
        },
        "OBO_Parser._parseHeader": {
            "name": "_parseHeader",
            "location": 336,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OBO_Parser._parseTerms": {
            "name": "_parseTerms",
            "location": 347,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OBO_Parser._parseRelations": {
            "name": "_parseRelations",
            "location": 400,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OBO_Parser.get_nodes": {
            "name": "get_nodes",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OBO_Parser.get_terms": {
            "name": "get_terms",
            "location": 429,
            "return": [],
            "arguments": {
                "self": [],
                "term_state": []
            }
        },
        "OBO_Parser.get_terms_in": {
            "name": "get_terms_in",
            "location": 437,
            "return": [],
            "arguments": {
                "self": [],
                "aspect": [],
                "term_state": []
            }
        },
        "OBO_Parser.get_merged_terms": {
            "name": "get_merged_terms",
            "location": 445,
            "return": [],
            "arguments": {
                "self": [],
                "term_state": []
            }
        },
        "OBO_Parser.has_term": {
            "name": "has_term",
            "location": 455,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "OBO_Parser.get_term": {
            "name": "get_term",
            "location": 459,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "OBO_Parser.term_used_as_alternate": {
            "name": "term_used_as_alternate",
            "location": 465,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "OBO_Parser.get_alternate_terms": {
            "name": "get_alternate_terms",
            "location": 471,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "OBO_Parser.count_all_metas": {
            "name": "count_all_metas",
            "location": 478,
            "return": [],
            "arguments": {
                "self": [],
                "term_state": [],
                "includeXRefs": []
            }
        },
        "OBO_Parser.count_all_xrefs": {
            "name": "count_all_xrefs",
            "location": 485,
            "return": [],
            "arguments": {
                "self": [],
                "term_state": []
            }
        },
        "OBO_Parser.count_all_structurals": {
            "name": "count_all_structurals",
            "location": 492,
            "return": [],
            "arguments": {
                "self": [],
                "term_state": []
            }
        },
        "OBO_Parser.get_children": {
            "name": "get_children",
            "location": 499,
            "return": [],
            "arguments": {
                "self": [],
                "root": []
            }
        }
    },
    "go-site-master/scripts/prepare-panther-arbre-directory.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 24,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "main": {
            "name": "main",
            "location": 29,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/reports-page-gen.py": {
        "main": {
            "name": "main",
            "location": 19,
            "return": [],
            "arguments": {
                "report": [],
                "template": [],
                "date": [],
                "suppress_rule_tag": []
            }
        }
    },
    "go-site-master/scripts/s3-uploader.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 63,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "get_args": {
            "name": "get_args",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 97,
            "return": [],
            "arguments": {}
        },
        "multipart_upload": {
            "name": "multipart_upload",
            "location": 211,
            "return": [],
            "arguments": {
                "source_file_path": [],
                "s3_bucket": [],
                "s3_path": [],
                "content_type": [],
                "metadata": [],
                "policy": []
            }
        }
    },
    "go-site-master/scripts/sanity-check-ann-report.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 43,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "main": {
            "name": "main",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "severe_line_reduction_test": {
            "name": "severe_line_reduction_test",
            "location": 286,
            "return": [],
            "arguments": {
                "aid": [],
                "thresholds": [],
                "prod": [],
                "src": [],
                "small_file_size": []
            }
        }
    },
    "go-site-master/scripts/sanity-check-users-and-groups.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 30,
            "return": [],
            "arguments": {
                "string": []
            }
        },
        "main": {
            "name": "main",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/scripts/shex-reports-page-gen.py": {
        "main": {
            "name": "main",
            "location": 22,
            "return": [],
            "arguments": {
                "report": [],
                "template": [],
                "date": [],
                "suppress_rule_tag": []
            }
        }
    },
    "go-site-master/scripts/zenodo-ops.py": {
        "die_screaming": {
            "name": "die_screaming",
            "location": 35,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "main": {
            "name": "main",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "main.get_deposition": {
            "name": "get_deposition",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "main.safe_json_report": {
            "name": "safe_json_report",
            "location": 101,
            "return": [],
            "arguments": {
                "response": [],
                "report_list": []
            }
        },
        "main.check_args": {
            "name": "check_args",
            "location": 137,
            "return": [],
            "arguments": {
                "arg_list": []
            }
        }
    },
    "go-site-master/scripts/zenodo-version-update.py": {
        "die": {
            "name": "die",
            "location": 36,
            "return": [],
            "arguments": {
                "instr": []
            }
        },
        "yes_or_die": {
            "name": "yes_or_die",
            "location": 42,
            "return": [],
            "arguments": {
                "question": [],
                "default": []
            }
        },
        "successful_response_code": {
            "name": "successful_response_code",
            "location": 82,
            "return": [],
            "arguments": {
                "respc": [],
                "expected": []
            }
        },
        "main": {
            "name": "main",
            "location": 93,
            "return": [],
            "arguments": {}
        },
        "main.die_screaming": {
            "name": "die_screaming",
            "location": 153,
            "return": [],
            "arguments": {
                "instr": [],
                "response": [],
                "deposition_id": []
            }
        }
    },
    "go-site-master/scripts/goref_parser/goref.py": {
        "GoRef.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "goref_path": []
            }
        },
        "GoRef.goref_path": {
            "name": "goref_path",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "goref_path": []
            }
        },
        "GoRef.parse": {
            "name": "parse",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "portion": []
            }
        }
    },
    "go-site-master/scripts/goref_parser/parser.py": {},
    "go-site-master/scripts/goref_parser/utils.py": {
        "get_html_string": {
            "name": "get_html_string",
            "location": 4,
            "return": [],
            "arguments": {
                "tag": [],
                "html": []
            }
        },
        "merge_dicts": {
            "name": "merge_dicts",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "go-site-master/tests/panther-hammer.py": {},
    "go-site-master/tests/behave/steps/basic.py": {
        "step_impl": {
            "name": "step_impl",
            "location": 107,
            "return": [],
            "arguments": {
                "context": [],
                "jsonpath": [],
                "value": []
            }
        }
    }
}
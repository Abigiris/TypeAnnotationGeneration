{
    "graph-tests-master/src/calculations.py": {
        "bundle_size": {
            "name": "bundle_size",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {
                "count": [],
                "size": [],
                "margin": []
            }
        }
    },
    "graph-tests-master/src/config.py": {},
    "graph-tests-master/src/flow.py": {
        "FlowAlgorithm.length": {
            "name": "length",
            "location": 12,
            "return": [
                "BoundFlowAlgorithm"
            ],
            "arguments": {
                "self": [],
                "length": []
            }
        },
        "BoundFlowAlgorithm.__call__": {
            "name": "__call__",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        }
    },
    "graph-tests-master/src/grid.py": {
        "row_count": {
            "name": "row_count",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "width": [],
                "margin_function": [],
                "radius_scale": [],
                "node_count": []
            }
        },
        "node_count": {
            "name": "node_count",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "width": [],
                "margin_function": [],
                "radius_scale": [],
                "row_count": []
            }
        },
        "Grid.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "width": [],
                "node_config": [],
                "node_count": []
            }
        },
        "Grid.coordinates": {
            "name": "coordinates",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        }
    },
    "graph-tests-master/src/mathtools.py": {
        "plus_minus": {
            "name": "plus_minus",
            "location": 1,
            "return": [
                "Any"
            ],
            "arguments": {
                "n": []
            }
        },
        "zero_two": {
            "name": "zero_two",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "n": []
            }
        },
        "slow_count": {
            "name": "slow_count",
            "location": 29,
            "return": [
                "int"
            ],
            "arguments": {
                "n": []
            }
        }
    },
    "graph-tests-master/src/model.py": {},
    "graph-tests-master/src/node.py": {},
    "graph-tests-master/src/non_content_area.py": {
        "NonContentArea.create": {
            "name": "create",
            "location": 16,
            "return": [
                "_TNonContentArea@@NonContentArea@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TNonContentArea]"
                ]
            }
        }
    },
    "graph-tests-master/src/random.py": {
        "to_d3dict": {
            "name": "to_d3dict",
            "location": 24,
            "return": [
                "Dict[(str, List[Dict[(str, Any)]])]"
            ],
            "arguments": {
                "G": []
            }
        },
        "ego_json": {
            "name": "ego_json",
            "location": 31,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "n": [],
                "m": [],
                "radius": []
            }
        },
        "Ego.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": [],
                "m": [],
                "radius": []
            }
        },
        "Ego._ipython_display_": {
            "name": "_ipython_display_",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "graph-tests-master/src/relations.py": {
        "chart_width": {
            "name": "chart_width",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {
                "main_area_width": [],
                "side_area_width": []
            }
        },
        "chart_height": {
            "name": "chart_height",
            "location": 8,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "main_area_height": [
                    "_T0@@"
                ]
            }
        },
        "main_area_height": {
            "name": "main_area_height",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "row_count": [],
                "row_height": []
            }
        },
        "row_height": {
            "name": "row_height",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "row_upper_area_height": [],
                "row_main_area_height": []
            }
        },
        "row_main_area_height": {
            "name": "row_main_area_height",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "radius": [],
                "row_main_area_vertical_padding": []
            }
        }
    },
    "graph-tests-master/src/row.py": {
        "column_count": {
            "name": "column_count",
            "location": 89,
            "return": [
                "Any"
            ],
            "arguments": {
                "width": [],
                "node_margin": [],
                "node_radius": []
            }
        },
        "fit_width": {
            "name": "fit_width",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "column_count": [],
                "node_margin": [],
                "node_radius": []
            }
        },
        "horizontal_padding": {
            "name": "horizontal_padding",
            "location": 97,
            "return": [
                "Any"
            ],
            "arguments": {
                "width": [],
                "node_margin": [],
                "node_radius": []
            }
        },
        "Row.create": {
            "name": "create",
            "location": 24,
            "return": [
                "_TRow@@Row@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TRow]"
                ],
                "width": [],
                "node_radius": [],
                "node_margin": [],
                "flow": []
            }
        },
        "Row.cx": {
            "name": "cx",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "Row._ipython_display_": {
            "name": "_ipython_display_",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "graph-tests-master/src/scale.py": {
        "_": {
            "name": "_",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "domain": [],
                "range": [],
                "x": []
            }
        },
        "BoundScale.__call__": {
            "name": "__call__",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "UnboundScale.domain": {
            "name": "domain",
            "location": 25,
            "return": [
                "DomainBoundScale[(nothing, nothing)]"
            ],
            "arguments": {
                "self": [],
                "domain": []
            }
        },
        "UnboundScale.range": {
            "name": "range",
            "location": 28,
            "return": [
                "RangeBoundScale[(nothing, nothing)]"
            ],
            "arguments": {
                "self": [],
                "range": []
            }
        },
        "DomainBoundScale.range": {
            "name": "range",
            "location": 37,
            "return": [
                "BoundScale[(nothing, nothing)]"
            ],
            "arguments": {
                "self": [],
                "range": []
            }
        },
        "RangeBoundScale.domain": {
            "name": "domain",
            "location": 46,
            "return": [
                "BoundScale[(nothing, nothing)]"
            ],
            "arguments": {
                "self": [],
                "domain": []
            }
        }
    },
    "graph-tests-master/src/util.py": {},
    "graph-tests-master/src/vis.py": {
        "Element.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag": []
            }
        },
        "Element.__str__": {
            "name": "__str__",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Element._repr_html_": {
            "name": "_repr_html_",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "graph-tests-master/src/__init__.py": {}
}
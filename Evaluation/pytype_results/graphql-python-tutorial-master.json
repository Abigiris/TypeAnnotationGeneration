{
    "graphql-python-tutorial-master/manage.py": {},
    "graphql-python-tutorial-master/api/schema.py": {},
    "graphql-python-tutorial-master/api/utils.py": {
        "to_global_id": {
            "name": "to_global_id",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "type_": [],
                "id_": []
            }
        },
        "from_global_id": {
            "name": "from_global_id",
            "location": 14,
            "return": [
                "GlobalID"
            ],
            "arguments": {
                "global_id": []
            }
        }
    },
    "graphql-python-tutorial-master/api/__init__.py": {},
    "graphql-python-tutorial-master/api/mutation/base.py": {},
    "graphql-python-tutorial-master/api/mutation/story.py": {
        "CreateStory.mutate": {
            "name": "mutate",
            "location": 21,
            "return": [
                "_TCreateStory@@CreateStory@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TCreateStory]"
                ],
                "root": [],
                "info": []
            }
        },
        "UpdateStory.mutate": {
            "name": "mutate",
            "location": 49,
            "return": [
                "_TUpdateStory@@UpdateStory@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TUpdateStory]"
                ],
                "root": [],
                "info": []
            }
        }
    },
    "graphql-python-tutorial-master/api/mutation/__init__.py": {},
    "graphql-python-tutorial-master/api/query/base.py": {},
    "graphql-python-tutorial-master/api/query/story.py": {
        "StoryType.resolve_author_name": {
            "name": "resolve_author_name",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "root": [],
                "info": [],
                "display": []
            }
        },
        "Query.resolve_stories": {
            "name": "resolve_stories",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "root": [],
                "info": []
            }
        }
    },
    "graphql-python-tutorial-master/api/query/__init__.py": {},
    "graphql-python-tutorial-master/api/tests/test_utils.py": {
        "TestGlobalId.test_to_global_id__can_be_decoded_from_type_name": {
            "name": "test_to_global_id__can_be_decoded_from_type_name",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGlobalId.test_to_global_id__can_be_decoded_from_default_name": {
            "name": "test_to_global_id__can_be_decoded_from_default_name",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "graphql-python-tutorial-master/api/tests/util.py": {
        "request_with_loaders": {
            "name": "request_with_loaders",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "connection_to_list": {
            "name": "connection_to_list",
            "location": 10,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "connection": []
            }
        }
    },
    "graphql-python-tutorial-master/api/tests/__init__.py": {},
    "graphql-python-tutorial-master/api/tests/query/test_story.py": {
        "TestStoriesQuery.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStoriesQuery.build_query_with_fields": {
            "name": "build_query_with_fields",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStoriesQuery.test_stories_query__returns_list_of_stories": {
            "name": "test_stories_query__returns_list_of_stories",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStoriesQuery.test_story_node_query__returns_empty_field_when_id_does_not_exist": {
            "name": "test_story_node_query__returns_empty_field_when_id_does_not_exist",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStoriesQuery.test_story_node_query__returns_model_fields": {
            "name": "test_story_node_query__returns_model_fields",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "graphql-python-tutorial-master/api/tests/query/__init__.py": {},
    "graphql-python-tutorial-master/cyoa/settings.py": {},
    "graphql-python-tutorial-master/cyoa/urls.py": {},
    "graphql-python-tutorial-master/cyoa/wsgi.py": {},
    "graphql-python-tutorial-master/cyoa/__init__.py": {},
    "graphql-python-tutorial-master/story/admin.py": {},
    "graphql-python-tutorial-master/story/apps.py": {},
    "graphql-python-tutorial-master/story/factories.py": {},
    "graphql-python-tutorial-master/story/models.py": {
        "Author.full_name": {
            "name": "full_name",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "display_format": []
            }
        },
        "Author.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Story.__str__": {
            "name": "__str__",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Character.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Passage.__str__": {
            "name": "__str__",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Choice.__str__": {
            "name": "__str__",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "graphql-python-tutorial-master/story/tests.py": {},
    "graphql-python-tutorial-master/story/__init__.py": {},
    "graphql-python-tutorial-master/story/migrations/0001_initial.py": {},
    "graphql-python-tutorial-master/story/migrations/0002_auto_20180211_1701.py": {},
    "graphql-python-tutorial-master/story/migrations/0003_auto_20180211_1702.py": {},
    "graphql-python-tutorial-master/story/migrations/0004_auto_20180211_1808.py": {},
    "graphql-python-tutorial-master/story/migrations/0005_story_published_year.py": {},
    "graphql-python-tutorial-master/story/migrations/0006_auto_20180211_1842.py": {},
    "graphql-python-tutorial-master/story/migrations/0007_auto_20180224_2118.py": {},
    "graphql-python-tutorial-master/story/migrations/0008_auto_20181008_0502.py": {},
    "graphql-python-tutorial-master/story/migrations/0009_remove_story_date_published.py": {},
    "graphql-python-tutorial-master/story/migrations/0010_auto_20190408_1646.py": {},
    "graphql-python-tutorial-master/story/migrations/0011_auto_20190408_1652.py": {},
    "graphql-python-tutorial-master/story/migrations/0012_auto_20190416_0333.py": {},
    "graphql-python-tutorial-master/story/migrations/0013_auto_20190416_0338.py": {},
    "graphql-python-tutorial-master/story/migrations/__init__.py": {},
    "graphql-python-tutorial-master/story/services/author.py": {
        "AuthorService.create": {
            "name": "create",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "AuthorService.update": {
            "name": "update",
            "location": 14,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0@@"
                ],
                "validated_data": []
            }
        },
        "AuthorService.for_instance": {
            "name": "for_instance",
            "location": 22,
            "return": [
                "_TAuthorService@@AuthorService@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TAuthorService]"
                ],
                "instance_id": [],
                "data": []
            }
        }
    },
    "graphql-python-tutorial-master/story/services/character.py": {
        "CharacterService.create": {
            "name": "create",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "CharacterService.update": {
            "name": "update",
            "location": 12,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0@@"
                ],
                "validated_data": []
            }
        },
        "CharacterService.for_instance": {
            "name": "for_instance",
            "location": 18,
            "return": [
                "_TCharacterService@@CharacterService@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TCharacterService]"
                ],
                "instance_id": [],
                "data": []
            }
        }
    },
    "graphql-python-tutorial-master/story/services/choice.py": {
        "ChoiceService.validate_from_passage_id": {
            "name": "validate_from_passage_id",
            "location": 15,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "from_passage_id": [
                    "_T0@@"
                ]
            }
        },
        "ChoiceService.validate_to_passage_id": {
            "name": "validate_to_passage_id",
            "location": 22,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "to_passage_id": [
                    "_T0@@"
                ]
            }
        },
        "ChoiceService.validate": {
            "name": "validate",
            "location": 29,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "attrs": [
                    "_T0@@"
                ]
            }
        },
        "ChoiceService.create": {
            "name": "create",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "ChoiceService.update": {
            "name": "update",
            "location": 38,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0@@"
                ],
                "validated_data": []
            }
        },
        "ChoiceService.for_instance": {
            "name": "for_instance",
            "location": 47,
            "return": [
                "_TChoiceService@@ChoiceService@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TChoiceService]"
                ],
                "instance_id": [],
                "data": []
            }
        }
    },
    "graphql-python-tutorial-master/story/services/passage.py": {
        "PassageService.validate_story_id": {
            "name": "validate_story_id",
            "location": 13,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "story_id": [
                    "_T0@@"
                ]
            }
        },
        "PassageService.validate_character_id": {
            "name": "validate_character_id",
            "location": 20,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "character_id": [
                    "_T0@@"
                ]
            }
        },
        "PassageService.create": {
            "name": "create",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "PassageService.update": {
            "name": "update",
            "location": 30,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0@@"
                ],
                "validated_data": []
            }
        },
        "PassageService.for_instance": {
            "name": "for_instance",
            "location": 40,
            "return": [
                "_TPassageService@@PassageService@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPassageService]"
                ],
                "instance_id": [],
                "data": []
            }
        }
    },
    "graphql-python-tutorial-master/story/services/story.py": {
        "StoryService.validate_author_id": {
            "name": "validate_author_id",
            "location": 13,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "author_id": [
                    "_T0@@"
                ]
            }
        },
        "StoryService.create": {
            "name": "create",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "StoryService.update": {
            "name": "update",
            "location": 23,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0@@"
                ],
                "validated_data": []
            }
        },
        "StoryService.for_instance": {
            "name": "for_instance",
            "location": 33,
            "return": [
                "_TStoryService@@StoryService@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TStoryService]"
                ],
                "instance_id": [],
                "data": []
            }
        }
    },
    "graphql-python-tutorial-master/story/services/__init__.py": {},
    "graphql-python-tutorial-master/tasks/check.py": {
        "style": {
            "name": "style",
            "location": 5,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "types": {
            "name": "types",
            "location": 11,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "lint": {
            "name": "lint",
            "location": 17,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "tests": {
            "name": "tests",
            "location": 22,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "all_": {
            "name": "all_",
            "location": 28,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "graphql-python-tutorial-master/tasks/clean.py": {
        "db": {
            "name": "db",
            "location": 5,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "dependencies": {
            "name": "dependencies",
            "location": 11,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "all_": {
            "name": "all_",
            "location": 17,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "graphql-python-tutorial-master/tasks/setup.py": {
        "install_pipenv": {
            "name": "install_pipenv",
            "location": 5,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "install_dependencies": {
            "name": "install_dependencies",
            "location": 11,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "dependencies": {
            "name": "dependencies",
            "location": 17,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "migrate_db": {
            "name": "migrate_db",
            "location": 22,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "seed_db": {
            "name": "seed_db",
            "location": 28,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "db": {
            "name": "db",
            "location": 34,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "all_": {
            "name": "all_",
            "location": 39,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "superuser": {
            "name": "superuser",
            "location": 44,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "graphql-python-tutorial-master/tasks/start.py": {
        "dev_server": {
            "name": "dev_server",
            "location": 5,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "terminal_shell": {
            "name": "terminal_shell",
            "location": 11,
            "return": [],
            "arguments": {
                "context": []
            }
        },
        "django_shell": {
            "name": "django_shell",
            "location": 17,
            "return": [],
            "arguments": {
                "context": []
            }
        }
    },
    "graphql-python-tutorial-master/tasks/tasks.py": {},
    "graphql-python-tutorial-master/tasks/__init__.py": {}
}
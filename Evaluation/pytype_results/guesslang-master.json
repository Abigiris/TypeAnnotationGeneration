{
    "guesslang-master/setup.py": {
        "version": {
            "name": "version",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "base_module": [
                    "str"
                ]
            }
        },
        "long_description": {
            "name": "long_description",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ],
                "end_tag": [
                    "str"
                ],
                "doc_url": [
                    "str"
                ]
            }
        }
    },
    "guesslang-master/docs/conf.py": {
        "read_version": {
            "name": "read_version",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "base_module": []
            }
        }
    },
    "guesslang-master/guesslang/guess.py": {
        "Guess.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model_dir": [
                    "Optional[str]"
                ]
            }
        },
        "Guess.is_trained": {
            "name": "is_trained",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Guess.supported_languages": {
            "name": "supported_languages",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Guess.language_name": {
            "name": "language_name",
            "location": 61,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "source_code": [
                    "str"
                ]
            }
        },
        "Guess.probabilities": {
            "name": "probabilities",
            "location": 81,
            "return": [
                "List[Tuple[(str, float)]]"
            ],
            "arguments": {
                "self": [],
                "source_code": [
                    "str"
                ]
            }
        },
        "Guess.train": {
            "name": "train",
            "location": 101,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "source_files_dir": [
                    "str"
                ],
                "max_steps": [
                    "int"
                ]
            }
        },
        "Guess._is_reliable": {
            "name": "_is_reliable",
            "location": 157,
            "return": [
                "bool"
            ],
            "arguments": {
                "probabilities": [
                    "List[float]"
                ]
            }
        }
    },
    "guesslang-master/guesslang/model.py": {
        "load": {
            "name": "load",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "saved_model_dir": [
                    "str"
                ]
            }
        },
        "build": {
            "name": "build",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "model_dir": [
                    "str"
                ],
                "labels": [
                    "List[str]"
                ]
            }
        },
        "train": {
            "name": "train",
            "location": 76,
            "return": [
                "Any"
            ],
            "arguments": {
                "estimator": [],
                "data_root_dir": [
                    "str"
                ],
                "max_steps": [
                    "int"
                ]
            }
        },
        "save": {
            "name": "save",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "estimator": [],
                "saved_model_dir": [
                    "str"
                ]
            }
        },
        "test": {
            "name": "test",
            "location": 114,
            "return": [
                "Dict[(str, Dict[(str, int)])]"
            ],
            "arguments": {
                "saved_model": [],
                "data_root_dir": [
                    "str"
                ],
                "mapping": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "predict": {
            "name": "predict",
            "location": 139,
            "return": [
                "List[Tuple[(str, float)]]"
            ],
            "arguments": {
                "saved_model": [],
                "mapping": [
                    "Dict[(str, str)]"
                ],
                "text": [
                    "str"
                ]
            }
        },
        "_build_input_fn": {
            "name": "_build_input_fn",
            "location": 159,
            "return": [
                "Callable[([], Any)]"
            ],
            "arguments": {
                "data_root_dir": [
                    "str"
                ],
                "mode": []
            }
        },
        "_serving_input_receiver_fn": {
            "name": "_serving_input_receiver_fn",
            "location": 181,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_read_file": {
            "name": "_read_file",
            "location": 194,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "_preprocess": {
            "name": "_preprocess",
            "location": 201,
            "return": [
                "Tuple[(Dict[(str, Any)], Any)]"
            ],
            "arguments": {
                "data": [],
                "label": []
            }
        },
        "_preprocess_text": {
            "name": "_preprocess_text",
            "location": 210,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": []
            }
        },
        "_build_input_fn.input_function": {
            "name": "input_function",
            "location": 166,
            "return": [],
            "arguments": {}
        }
    },
    "guesslang-master/guesslang/__init__.py": {},
    "guesslang-master/guesslang/__main__.py": {
        "main": {
            "name": "main",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_build_argument_parser": {
            "name": "_build_argument_parser",
            "location": 106,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "_update_config": {
            "name": "_update_config",
            "location": 170,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "config": [
                    "Dict[(str, Any)]"
                ],
                "level": [
                    "int"
                ]
            }
        },
        "_read_file": {
            "name": "_read_file",
            "location": 177,
            "return": [
                "str"
            ],
            "arguments": {
                "input_file": [
                    "TextIO"
                ]
            }
        }
    },
    "guesslang-master/tests/test_guesslang_guess.py": {
        "test_guess_init": {
            "name": "test_guess_init",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_init_with_model_dir": {
            "name": "test_guess_init_with_model_dir",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_supported_languages": {
            "name": "test_guess_supported_languages",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_language_name": {
            "name": "test_guess_language_name",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_language_name_empty_code": {
            "name": "test_guess_language_name_empty_code",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_language_name_untrained_model": {
            "name": "test_guess_language_name_untrained_model",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_language_name_plain_text": {
            "name": "test_guess_language_name_plain_text",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "test_guess_probabilities": {
            "name": "test_guess_probabilities",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_train_with_default_model": {
            "name": "test_guess_train_with_default_model",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_train_without_subdirectories": {
            "name": "test_guess_train_without_subdirectories",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_guess_train": {
            "name": "test_guess_train",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_create_training_files": {
            "name": "_create_training_files",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "source_files_dir": []
            }
        }
    }
}
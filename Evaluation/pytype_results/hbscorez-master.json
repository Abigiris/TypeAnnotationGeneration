{
    "hbscorez-master/src/manage.py": {},
    "hbscorez-master/src/api/urls.py": {},
    "hbscorez-master/src/api/views.py": {
        "associations": {
            "name": "associations",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "_": []
            }
        },
        "association_districts": {
            "name": "association_districts",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "_": [],
                "bhv_id": []
            }
        },
        "seasons": {
            "name": "seasons",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "_": []
            }
        },
        "district_season_leagues": {
            "name": "district_season_leagues",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "_": [],
                "bhv_id": [],
                "start_year": []
            }
        },
        "league_teams": {
            "name": "league_teams",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "_": [],
                "bhv_id": []
            }
        }
    },
    "hbscorez-master/src/api/__init__.py": {},
    "hbscorez-master/src/associations/admin.py": {},
    "hbscorez-master/src/associations/apps.py": {},
    "hbscorez-master/src/associations/models.py": {
        "Association.__str__": {
            "name": "__str__",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Association.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Association.build_source_url": {
            "name": "build_source_url",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "bhv_id": []
            }
        },
        "Association.source_url": {
            "name": "source_url",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Association.get_association_abbreviation": {
            "name": "get_association_abbreviation",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "association_name": []
            }
        }
    },
    "hbscorez-master/src/associations/test_views.py": {
        "TestViews.test_list": {
            "name": "test_list",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_detail": {
            "name": "test_detail",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/associations/urls.py": {},
    "hbscorez-master/src/associations/views.py": {
        "show_all": {
            "name": "show_all",
            "location": 6,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "detail": {
            "name": "detail",
            "location": 11,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        }
    },
    "hbscorez-master/src/associations/__init__.py": {},
    "hbscorez-master/src/associations/migrations/0001_initial.py": {},
    "hbscorez-master/src/associations/migrations/__init__.py": {},
    "hbscorez-master/src/base/admin.py": {},
    "hbscorez-master/src/base/apps.py": {},
    "hbscorez-master/src/base/captcha.py": {
        "generate_captcha": {
            "name": "generate_captcha",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "encode_captcha_image_base64": {
            "name": "encode_captcha_image_base64",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "captcha": []
            }
        }
    },
    "hbscorez-master/src/base/context_processors.py": {
        "matomo": {
            "name": "matomo",
            "location": 4,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "_request": []
            }
        }
    },
    "hbscorez-master/src/base/forms.py": {
        "CaptchaContactForm.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CaptchaContactForm.clean_captcha": {
            "name": "clean_captcha",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/http.py": {},
    "hbscorez-master/src/base/logic.py": {
        "get_html": {
            "name": "get_html",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": [],
                "fails": []
            }
        },
        "add_ranking_place": {
            "name": "add_ranking_place",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "items": [],
                "field": []
            }
        },
        "add_score": {
            "name": "add_score",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "score": []
            }
        },
        "duplicate_player_scores_exist": {
            "name": "duplicate_player_scores_exist",
            "location": 64,
            "return": [
                "Any"
            ],
            "arguments": {
                "score": []
            }
        },
        "split_by_number": {
            "name": "split_by_number",
            "location": 72,
            "return": [],
            "arguments": {
                "original_name": [],
                "team": []
            }
        },
        "league_games": {
            "name": "league_games",
            "location": 94,
            "return": [
                "collections.defaultdict"
            ],
            "arguments": {
                "league": []
            }
        },
        "team_points": {
            "name": "team_points",
            "location": 104,
            "return": [
                "int"
            ],
            "arguments": {
                "team": []
            }
        },
        "top_league_teams": {
            "name": "top_league_teams",
            "location": 115,
            "return": [
                "collections.defaultdict"
            ],
            "arguments": {
                "league": []
            }
        },
        "scorer": {
            "name": "scorer",
            "location": 130,
            "return": [
                "Any"
            ],
            "arguments": {
                "player": []
            }
        },
        "league_scorers": {
            "name": "league_scorers",
            "location": 140,
            "return": [
                "Any"
            ],
            "arguments": {
                "league": []
            }
        },
        "top_league_scorers": {
            "name": "top_league_scorers",
            "location": 154,
            "return": [
                "collections.defaultdict"
            ],
            "arguments": {
                "league": []
            }
        },
        "league_offenders": {
            "name": "league_offenders",
            "location": 171,
            "return": [
                "Any"
            ],
            "arguments": {
                "league": []
            }
        },
        "top_league_offenders": {
            "name": "top_league_offenders",
            "location": 187,
            "return": [
                "collections.defaultdict"
            ],
            "arguments": {
                "league": []
            }
        }
    },
    "hbscorez-master/src/base/models.py": {
        "Env.set_value": {
            "name": "set_value",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "GlobalMessage.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/parsing.py": {
        "parse_link_query_item": {
            "name": "parse_link_query_item",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "link": [],
                "query_key": []
            }
        },
        "parse_association_bhv_id": {
            "name": "parse_association_bhv_id",
            "location": 16,
            "return": [
                "int"
            ],
            "arguments": {
                "link": []
            }
        },
        "parse_association_name": {
            "name": "parse_association_name",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "tree": []
            }
        },
        "parse_district_link_date": {
            "name": "parse_district_link_date",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "link": []
            }
        },
        "parse_league_bhv_id": {
            "name": "parse_league_bhv_id",
            "location": 28,
            "return": [
                "int"
            ],
            "arguments": {
                "link": []
            }
        },
        "parse_district_season_start_year": {
            "name": "parse_district_season_start_year",
            "location": 32,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "district_season_heading": []
            }
        },
        "parse_league_name": {
            "name": "parse_league_name",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "tree": []
            }
        },
        "parse_team_links": {
            "name": "parse_team_links",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "tree": []
            }
        },
        "parse_retirements": {
            "name": "parse_retirements",
            "location": 47,
            "return": [
                "List[Tuple[(str, _datetime.date)]]"
            ],
            "arguments": {
                "tree": []
            }
        },
        "parse_team_bhv_id": {
            "name": "parse_team_bhv_id",
            "location": 69,
            "return": [
                "int"
            ],
            "arguments": {
                "link": []
            }
        },
        "parse_team_names": {
            "name": "parse_team_names",
            "location": 73,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "text": []
            }
        },
        "parse_game_rows": {
            "name": "parse_game_rows",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "dom": []
            }
        },
        "parse_opening_whistle": {
            "name": "parse_opening_whistle",
            "location": 84,
            "return": [
                "Optional[_datetime.datetime]"
            ],
            "arguments": {
                "text": []
            }
        },
        "parse_sports_hall_bhv_id": {
            "name": "parse_sports_hall_bhv_id",
            "location": 95,
            "return": [
                "int"
            ],
            "arguments": {
                "link": []
            }
        },
        "parse_coordinates": {
            "name": "parse_coordinates",
            "location": 99,
            "return": [
                "Tuple[(Optional[str], Optional[str])]"
            ],
            "arguments": {
                "tree": []
            }
        },
        "parse_goals": {
            "name": "parse_goals",
            "location": 109,
            "return": [
                "Tuple[(Optional[int], Optional[int])]"
            ],
            "arguments": {
                "game_row": []
            }
        },
        "parse_report_number": {
            "name": "parse_report_number",
            "location": 127,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "cell": []
            }
        },
        "parse_forfeiting_team": {
            "name": "parse_forfeiting_team",
            "location": 134,
            "return": [
                "Optional[Union[(_T1, _T2)]]"
            ],
            "arguments": {
                "cell": [],
                "home_team": [
                    "_T1@@"
                ],
                "guest_team": [
                    "_T2@@"
                ]
            }
        },
        "parse_game_time": {
            "name": "parse_game_time",
            "location": 143,
            "return": [
                "Optional[_datetime.timedelta]"
            ],
            "arguments": {
                "text": []
            }
        },
        "parse_penalty_data": {
            "name": "parse_penalty_data",
            "location": 151,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "text": []
            }
        },
        "parse_retirements.date_from_text": {
            "name": "date_from_text",
            "location": 56,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "hbscorez-master/src/base/urls.py": {},
    "hbscorez-master/src/base/views.py": {},
    "hbscorez-master/src/base/__init__.py": {},
    "hbscorez-master/src/base/management/__init__.py": {},
    "hbscorez-master/src/base/management/commands/clear_data.py": {
        "Command.handle": {
            "name": "handle",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/management/commands/correct_data.py": {
        "rename_player": {
            "name": "rename_player",
            "location": 30,
            "return": [],
            "arguments": {
                "team_bhv_id": [],
                "old_name": [],
                "new_name": []
            }
        },
        "_score": {
            "name": "_score",
            "location": 51,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "player_number": [],
                "goals": [],
                "penalty_tries": [],
                "penalty_goals": []
            }
        },
        "time": {
            "name": "time",
            "location": 57,
            "return": [
                "datetime.timedelta"
            ],
            "arguments": {
                "minutes": [],
                "seconds": []
            }
        },
        "add_scores": {
            "name": "add_scores",
            "location": 62,
            "return": [],
            "arguments": {
                "league__bhv_id": [],
                "game_number": [],
                "home_score_data": [],
                "guest_score_data": []
            }
        },
        "_add_scores": {
            "name": "_add_scores",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "game": [],
                "team": [],
                "scores_data": []
            }
        },
        "fix_game_387733": {
            "name": "fix_game_387733",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fix_game_210116": {
            "name": "fix_game_210116",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fix_game_96781": {
            "name": "fix_game_96781",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fix_game_201059": {
            "name": "fix_game_201059",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "fix_game_91021": {
            "name": "fix_game_91021",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Command.handle": {
            "name": "handle",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/management/commands/__init__.py": {},
    "hbscorez-master/src/base/middleware/env.py": {
        "_ensure_env": {
            "name": "_ensure_env",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {
                "name": [],
                "default": [],
                "force": []
            }
        },
        "EnvironmentMiddleware.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_response": []
            }
        },
        "EnvironmentMiddleware.__call__": {
            "name": "__call__",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "hbscorez-master/src/base/middleware/__init__.py": {},
    "hbscorez-master/src/base/migrations/0001_initial.py": {},
    "hbscorez-master/src/base/migrations/0002_globalmessage.py": {},
    "hbscorez-master/src/base/migrations/__init__.py": {},
    "hbscorez-master/src/base/templatetags/base_extras.py": {
        "get": {
            "name": "get",
            "location": 7,
            "return": [],
            "arguments": {
                "dictionary": [],
                "key": []
            }
        }
    },
    "hbscorez-master/src/base/templatetags/scores_extras.py": {
        "dec": {
            "name": "dec",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": [],
                "arg": []
            }
        },
        "team_logo_url": {
            "name": "team_logo_url",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "team": []
            }
        },
        "team_outcome_badge": {
            "name": "team_outcome_badge",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "outcome": []
            }
        },
        "game_outcome_badge": {
            "name": "game_outcome_badge",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "outcome": []
            }
        }
    },
    "hbscorez-master/src/base/templatetags/__init__.py": {},
    "hbscorez-master/src/base/tests/base.py": {
        "filter_tests_by_explicit_tags": {
            "name": "filter_tests_by_explicit_tags",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "suite": [],
                "cmd_tags": []
            }
        },
        "should_include_test": {
            "name": "should_include_test",
            "location": 77,
            "return": [
                "bool"
            ],
            "arguments": {
                "cmd_tags": [],
                "code_tags": []
            }
        },
        "skip_unless_any_tag": {
            "name": "skip_unless_any_tag",
            "location": 81,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {}
        },
        "Runner.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "verbosity": [],
                "failfast": [],
                "keepdb": []
            }
        },
        "Runner.run_testss": {
            "name": "run_testss",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "test_labels": []
            }
        },
        "Runner.build_suite": {
            "name": "build_suite",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "test_labels": [],
                "extra_tests": []
            }
        },
        "skip_unless_any_tag.decorator": {
            "name": "decorator",
            "location": 84,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ModelTestCase.assert_objects": {
            "name": "assert_objects",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "model": [],
                "count": [],
                "filters": []
            }
        },
        "IntegrationTestCase.assert_command": {
            "name": "assert_command",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "command_name": []
            }
        },
        "LiveServerThreadWithReuse._create_server": {
            "name": "_create_server",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "connections_override": []
            }
        },
        "SeleniumTestCase.setUp": {
            "name": "setUp",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestCase.sauce_chrome_webdriver": {
            "name": "sauce_chrome_webdriver",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestCase.tearDown": {
            "name": "tearDown",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestCase.navigate": {
            "name": "navigate",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "view_name": []
            }
        },
        "SeleniumTestCase.assert_view": {
            "name": "assert_view",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "view_name": []
            }
        },
        "SeleniumTestCase.load": {
            "name": "load",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "SeleniumTestCase.wait": {
            "name": "wait",
            "location": 199,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "_UrlHasChanged.__init__": {
            "name": "__init__",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "_UrlHasChanged.__call__": {
            "name": "__call__",
            "location": 210,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "driver": []
            }
        }
    },
    "hbscorez-master/src/base/tests/test_should_include_test.py": {
        "TestWInclude.test_should_exclude_if_no_cmd_tags": {
            "name": "test_should_exclude_if_no_cmd_tags",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWInclude.test_should_exclude_if_tagged_but_not_called": {
            "name": "test_should_exclude_if_tagged_but_not_called",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWInclude.test_should_include_if_tagged_and_called": {
            "name": "test_should_include_if_tagged_and_called",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWInclude.test_should_include_if_single_intersection": {
            "name": "test_should_include_if_single_intersection",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestWInclude.test_should_include_if_multiple_intersections": {
            "name": "test_should_include_if_multiple_intersections",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/tests/__init__.py": {},
    "hbscorez-master/src/base/tests/integration/test_correct_data.py": {
        "ImportGamesTest.test_game_210116_sghh_hcn": {
            "name": "test_game_210116_sghh_hcn",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportGamesTest.test_game_96781": {
            "name": "test_game_96781",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/tests/integration/__init__.py": {},
    "hbscorez-master/src/base/tests/selenium/test_contact_form.py": {
        "ContactFormTest.test_contact_form": {
            "name": "test_contact_form",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ContactFormTest.test_invalid_captcha": {
            "name": "test_invalid_captcha",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/tests/selenium/test_selenium.py": {
        "TestSelenium.test_internet_connection": {
            "name": "test_internet_connection",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSelenium.test_body_exists": {
            "name": "test_body_exists",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSelenium.test_w3_org_exists": {
            "name": "test_w3_org_exists",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/base/tests/selenium/__init__.py": {},
    "hbscorez-master/src/districts/admin.py": {},
    "hbscorez-master/src/districts/apps.py": {},
    "hbscorez-master/src/districts/models.py": {
        "District.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "District.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "District.build_source_url": {
            "name": "build_source_url",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "bhv_id": [],
                "date": []
            }
        },
        "District.source_url": {
            "name": "source_url",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "date": []
            }
        }
    },
    "hbscorez-master/src/districts/urls.py": {},
    "hbscorez-master/src/districts/views.py": {
        "detail": {
            "name": "detail",
            "location": 8,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        }
    },
    "hbscorez-master/src/districts/__init__.py": {},
    "hbscorez-master/src/districts/migrations/0001_initial.py": {},
    "hbscorez-master/src/districts/migrations/__init__.py": {},
    "hbscorez-master/src/games/admin.py": {},
    "hbscorez-master/src/games/apps.py": {},
    "hbscorez-master/src/games/models.py": {
        "Game.__str__": {
            "name": "__str__",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.build_report_source_url": {
            "name": "build_report_source_url",
            "location": 53,
            "return": [],
            "arguments": {
                "report_number": []
            }
        },
        "Game.report_source_url": {
            "name": "report_source_url",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.opponent_of": {
            "name": "opponent_of",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "team": []
            }
        },
        "Game.other_games": {
            "name": "other_games",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.leg": {
            "name": "leg",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.leg_title": {
            "name": "leg_title",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.outcome": {
            "name": "outcome",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.outcome_for": {
            "name": "outcome_for",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "team": []
            }
        },
        "Game.goals_of": {
            "name": "goals_of",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "team": []
            }
        }
    },
    "hbscorez-master/src/games/urls.py": {},
    "hbscorez-master/src/games/views.py": {},
    "hbscorez-master/src/games/__init__.py": {},
    "hbscorez-master/src/games/management/__init__.py": {},
    "hbscorez-master/src/games/management/commands/import_games.py": {
        "get_sports_hall": {
            "name": "get_sports_hall",
            "location": 138,
            "return": [
                "Any"
            ],
            "arguments": {
                "game_row": []
            }
        },
        "parse_sports_hall": {
            "name": "parse_sports_hall",
            "location": 152,
            "return": [
                "Any"
            ],
            "arguments": {
                "number": [],
                "bhv_id": []
            }
        },
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.import_associations": {
            "name": "import_associations",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.import_association": {
            "name": "import_association",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "association": []
            }
        },
        "Command.import_district": {
            "name": "import_district",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "district": []
            }
        },
        "Command.import_district_season": {
            "name": "import_district_season",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "district": [],
                "season": []
            }
        },
        "Command.import_league": {
            "name": "import_league",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "league": []
            }
        },
        "Command.import_game": {
            "name": "import_game",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_row": [],
                "league": []
            }
        }
    },
    "hbscorez-master/src/games/management/commands/__init__.py": {},
    "hbscorez-master/src/games/migrations/0001_initial.py": {},
    "hbscorez-master/src/games/migrations/0002_game_spectators.py": {},
    "hbscorez-master/src/games/migrations/__init__.py": {},
    "hbscorez-master/src/games/tests/test_game_leg.py": {
        "create_test_game": {
            "name": "create_test_game",
            "location": 61,
            "return": [
                "Tuple[(Any, _T4)]"
            ],
            "arguments": {
                "number": [],
                "league": [],
                "home_team": [],
                "guest_team": [],
                "expected_leg": [
                    "_T4@@"
                ],
                "unscheduled": []
            }
        },
        "create_test_league": {
            "name": "create_test_league",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "NormalGames.test_game_leg": {
            "name": "test_game_leg",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NormalGames.test_three_teams": {
            "name": "test_three_teams",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NormalGames.test_four_teams": {
            "name": "test_four_teams",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnscheduledGames.test_unscheduled_game": {
            "name": "test_unscheduled_game",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnscheduledGames.test_unscheduled_other_games": {
            "name": "test_unscheduled_other_games",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TripleGames.test_game_leg": {
            "name": "test_game_leg",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TripleGames.test_single_unscheduled": {
            "name": "test_single_unscheduled",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TripleGames.test_three_teams": {
            "name": "test_three_teams",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TripleGames.test_three_teams_single_unscheduled": {
            "name": "test_three_teams_single_unscheduled",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuadrupleGames.test_game_leg": {
            "name": "test_game_leg",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/games/tests/test_opening_whistle_datetime_parsing.py": {
        "OpeningWhistleParseTest.test_date_not_null": {
            "name": "test_date_not_null",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpeningWhistleParseTest.test_fixed_date": {
            "name": "test_fixed_date",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpeningWhistleParseTest.test_dynamic_date": {
            "name": "test_dynamic_date",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/games/tests/test_parse_report_number.py": {
        "ParseReportNumberTest.assert_from_markup": {
            "name": "assert_from_markup",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "markup": [],
                "expected": []
            }
        },
        "ParseReportNumberTest.test__empty_cell_markup__returns__none": {
            "name": "test__empty_cell_markup__returns__none",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseReportNumberTest.test__usual_markup__returns__correct_number": {
            "name": "test__usual_markup__returns__correct_number",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseReportNumberTest.test__rescheduled_markup__returns__correct_number": {
            "name": "test__rescheduled_markup__returns__correct_number",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/games/tests/__init__.py": {},
    "hbscorez-master/src/games/tests/integration/test_import_games.py": {
        "ImportGamesTest.test__import_games__specific_game": {
            "name": "test__import_games__specific_game",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportGamesTest.test__import_games__m_vl": {
            "name": "test__import_games__m_vl",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportGamesTest.test__import_games__missing_district": {
            "name": "test__import_games__missing_district",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportGamesTest.test__import_games__m_vl__multiseason": {
            "name": "test__import_games__m_vl__multiseason",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Forfeit.test_forfeit_with_report": {
            "name": "test_forfeit_with_report",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Forfeit.test_forfeit_without_report": {
            "name": "test_forfeit_without_report",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Youth.test_youth": {
            "name": "test_youth",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Youth.test_no_youth": {
            "name": "test_no_youth",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuggedGameRows.test_additional_heading_row": {
            "name": "test_additional_heading_row",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/games/tests/integration/__init__.py": {},
    "hbscorez-master/src/hbscorez/jinja2_env.py": {
        "environment": {
            "name": "environment",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "hbscorez-master/src/hbscorez/settings.py": {},
    "hbscorez-master/src/hbscorez/urls.py": {},
    "hbscorez-master/src/hbscorez/wsgi.py": {},
    "hbscorez-master/src/hbscorez/__init__.py": {},
    "hbscorez-master/src/leagues/admin.py": {},
    "hbscorez-master/src/leagues/apps.py": {},
    "hbscorez-master/src/leagues/models.py": {
        "Season.__str__": {
            "name": "__str__",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "League.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "League.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "League.build_source_url": {
            "name": "build_source_url",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "bhv_id": []
            }
        },
        "League.source_url": {
            "name": "source_url",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "League.youth": {
            "name": "youth",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "League.is_youth": {
            "name": "is_youth",
            "location": 46,
            "return": [],
            "arguments": {
                "abbreviation": [],
                "name": []
            }
        },
        "LeagueName.__str__": {
            "name": "__str__",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "YouthUndecidableError.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "abbreviation": [],
                "name": [],
                "message": []
            }
        }
    },
    "hbscorez-master/src/leagues/urls.py": {},
    "hbscorez-master/src/leagues/views.py": {
        "detail": {
            "name": "detail",
            "location": 10,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "teams": {
            "name": "teams",
            "location": 30,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "games": {
            "name": "games",
            "location": 37,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "scorers": {
            "name": "scorers",
            "location": 46,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "offenders": {
            "name": "offenders",
            "location": 55,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "calendar": {
            "name": "calendar",
            "location": 65,
            "return": [],
            "arguments": {}
        }
    },
    "hbscorez-master/src/leagues/__init__.py": {},
    "hbscorez-master/src/leagues/management/__init__.py": {},
    "hbscorez-master/src/leagues/management/commands/setup.py": {
        "add_default_arguments": {
            "name": "add_default_arguments",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "create_team": {
            "name": "create_team",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "link": [],
                "league": []
            }
        },
        "check_retirements": {
            "name": "check_retirements",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "retirements": [],
                "league": []
            }
        },
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.create_associations": {
            "name": "create_associations",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.get_association_bhv_id": {
            "name": "get_association_bhv_id",
            "location": 62,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "association_portal_url": []
            }
        },
        "Command.create_association": {
            "name": "create_association",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bhv_id": []
            }
        },
        "Command.create_district": {
            "name": "create_district",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "district_item": [],
                "association": []
            }
        },
        "Command.create_season": {
            "name": "create_season",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "district": [],
                "start_year": []
            }
        },
        "Command.create_league": {
            "name": "create_league",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "league_link": [],
                "district": [],
                "season": []
            }
        }
    },
    "hbscorez-master/src/leagues/management/commands/__init__.py": {},
    "hbscorez-master/src/leagues/migrations/0001_initial.py": {},
    "hbscorez-master/src/leagues/migrations/0002_update_league_names.py": {
        "update_league_names": {
            "name": "update_league_names",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "hbscorez-master/src/leagues/migrations/0003_leaguename.py": {},
    "hbscorez-master/src/leagues/migrations/__init__.py": {},
    "hbscorez-master/src/leagues/tests/test_renamed_league.py": {
        "RenamedTeam.test_renamed_team": {
            "name": "test_renamed_team",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/leagues/tests/test_youth.py": {
        "Youth.test_youth": {
            "name": "test_youth",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Youth.test_non_youth": {
            "name": "test_non_youth",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/leagues/tests/__init__.py": {},
    "hbscorez-master/src/leagues/tests/integration/test_retired_team.py": {
        "read_html": {
            "name": "read_html",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "file": []
            }
        },
        "ParseRetiredTeamTest.test_empty_retirement": {
            "name": "test_empty_retirement",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseRetiredTeamTest.test_retired_team": {
            "name": "test_retired_team",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseRetiredTeamTest.test_another_retired_team": {
            "name": "test_another_retired_team",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RetiredTeamTest.test_retired_team": {
            "name": "test_retired_team",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RetiredTeamTest.test_another_retired_team": {
            "name": "test_another_retired_team",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RetiredTeamTest.test_retirement_during_season": {
            "name": "test_retirement_during_season",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RetiredTeamTest.test_nonexisting_retired_team": {
            "name": "test_nonexisting_retired_team",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/leagues/tests/integration/test_setup.py": {
        "SetupTest.test__setup__association": {
            "name": "test__setup__association",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__all_associations_and_districts": {
            "name": "test__setup__all_associations_and_districts",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__oberliga_hamburg_schleswig": {
            "name": "test__setup__oberliga_hamburg_schleswig",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__district": {
            "name": "test__setup__district",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__season": {
            "name": "test__setup__season",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__league": {
            "name": "test__setup__league",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__exclude_irrelevant_seasons": {
            "name": "test__setup__exclude_irrelevant_seasons",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__old_leagues": {
            "name": "test__setup__old_leagues",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__meisterschaft": {
            "name": "test__setup__meisterschaft",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__subsequently_added_to_district": {
            "name": "test__setup__subsequently_added_to_district",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StartDate.test_first_hit": {
            "name": "test_first_hit",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StartDate.test_first_hit_multiseason": {
            "name": "test_first_hit_multiseason",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StartDate.test_later_hit": {
            "name": "test_later_hit",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StartDate.test_later_hit_multiseason": {
            "name": "test_later_hit_multiseason",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/leagues/tests/integration/test_setup_league.py": {
        "SetupTest.test__setup__mvl_2016": {
            "name": "test__setup__mvl_2016",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__mvl_2017": {
            "name": "test__setup__mvl_2017",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__mwls_2016": {
            "name": "test__setup__mwls_2016",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__mwls_2017": {
            "name": "test__setup__mwls_2017",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__mklc2_2007": {
            "name": "test__setup__mklc2_2007",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SetupTest.test__setup__mkl2_2005": {
            "name": "test__setup__mkl2_2005",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Youth.test_youth": {
            "name": "test_youth",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Youth.test_no_youth": {
            "name": "test_no_youth",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LongLeagueNames.test_youth": {
            "name": "test_youth",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pokal.test_fpokk_2019": {
            "name": "test_fpokk_2019",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/leagues/tests/integration/__init__.py": {},
    "hbscorez-master/src/players/admin.py": {},
    "hbscorez-master/src/players/apps.py": {},
    "hbscorez-master/src/players/models.py": {
        "Player.__str__": {
            "name": "__str__",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Player.public_name": {
            "name": "public_name",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Score.__str__": {
            "name": "__str__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/players/urls.py": {},
    "hbscorez-master/src/players/views.py": {
        "detail": {
            "name": "detail",
            "location": 8,
            "return": [],
            "arguments": {
                "request": [],
                "key": []
            }
        }
    },
    "hbscorez-master/src/players/__init__.py": {},
    "hbscorez-master/src/players/management/__init__.py": {},
    "hbscorez-master/src/players/management/commands/import_reports.py": {
        "import_game": {
            "name": "import_game",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "game": []
            }
        },
        "download_report": {
            "name": "download_report",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "game": [],
                "path": []
            }
        },
        "import_report": {
            "name": "import_report",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "game": [],
                "path": []
            }
        },
        "import_scores": {
            "name": "import_scores",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "table": [],
                "game": [],
                "team": []
            }
        },
        "parse_score": {
            "name": "parse_score",
            "location": 176,
            "return": [
                "players.models.Score"
            ],
            "arguments": {
                "player": [],
                "game": [],
                "row_data": []
            }
        },
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.import_associations": {
            "name": "import_associations",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.import_association": {
            "name": "import_association",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "association": []
            }
        },
        "Command.import_district": {
            "name": "import_district",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "district": []
            }
        },
        "Command.import_district_season": {
            "name": "import_district_season",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "district": [],
                "season": []
            }
        },
        "Command.import_league": {
            "name": "import_league",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "league": []
            }
        },
        "Command.import_game": {
            "name": "import_game",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game": []
            }
        }
    },
    "hbscorez-master/src/players/management/commands/parse_report.py": {
        "parse_spectators": {
            "name": "parse_spectators",
            "location": 4,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "table": []
            }
        }
    },
    "hbscorez-master/src/players/management/commands/__init__.py": {},
    "hbscorez-master/src/players/migrations/0001_initial.py": {},
    "hbscorez-master/src/players/migrations/0002_alter_published_default_false.py": {},
    "hbscorez-master/src/players/migrations/0003_reportsblacklist.py": {},
    "hbscorez-master/src/players/migrations/__init__.py": {},
    "hbscorez-master/src/players/tests/__init__.py": {},
    "hbscorez-master/src/players/tests/integration/test_import_reports.py": {
        "Forfeit.test": {
            "name": "test",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Youth.test_youth": {
            "name": "test_youth",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReportsBlacklistTest.test_blacklist": {
            "name": "test_blacklist",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/players/tests/integration/__init__.py": {},
    "hbscorez-master/src/players/tests/test_parse_spectators/test_spectators.py": {
        "ParseSpectators.test_value": {
            "name": "test_value",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseSpectators.test_unknown": {
            "name": "test_unknown",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseSpectators.test_invalid": {
            "name": "test_invalid",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/players/tests/test_parse_spectators/__init__.py": {},
    "hbscorez-master/src/sports_halls/admin.py": {},
    "hbscorez-master/src/sports_halls/apps.py": {},
    "hbscorez-master/src/sports_halls/models.py": {
        "SportsHall.__str__": {
            "name": "__str__",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SportsHall.build_source_url": {
            "name": "build_source_url",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "bhv_id": []
            }
        },
        "SportsHall.source_url": {
            "name": "source_url",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/sports_halls/urls.py": {},
    "hbscorez-master/src/sports_halls/__init__.py": {},
    "hbscorez-master/src/sports_halls/migrations/0001_initial.py": {},
    "hbscorez-master/src/sports_halls/migrations/__init__.py": {},
    "hbscorez-master/src/teams/admin.py": {},
    "hbscorez-master/src/teams/apps.py": {},
    "hbscorez-master/src/teams/models.py": {
        "Team.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Team.build_source_url": {
            "name": "build_source_url",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "league_bhv_id": [],
                "team_bhv_id": []
            }
        },
        "Team.create_or_update_team": {
            "name": "create_or_update_team",
            "location": 31,
            "return": [],
            "arguments": {
                "name": [],
                "short_name": [],
                "league": [],
                "bhv_id": [],
                "logger": []
            }
        },
        "Team.source_url": {
            "name": "source_url",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/teams/urls.py": {},
    "hbscorez-master/src/teams/views.py": {
        "detail": {
            "name": "detail",
            "location": 15,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "games": {
            "name": "games",
            "location": 20,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "players": {
            "name": "players",
            "location": 26,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "scorers": {
            "name": "scorers",
            "location": 36,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "offenders": {
            "name": "offenders",
            "location": 50,
            "return": [],
            "arguments": {
                "request": [],
                "bhv_id": []
            }
        },
        "calendar": {
            "name": "calendar",
            "location": 67,
            "return": [],
            "arguments": {
                "_": [],
                "bhv_id": []
            }
        },
        "_create_event": {
            "name": "_create_event",
            "location": 92,
            "return": [],
            "arguments": {
                "team": [],
                "game": []
            }
        },
        "_outcome": {
            "name": "_outcome",
            "location": 124,
            "return": [],
            "arguments": {
                "game": [],
                "team": []
            }
        },
        "_display": {
            "name": "_display",
            "location": 134,
            "return": [],
            "arguments": {
                "cal": []
            }
        }
    },
    "hbscorez-master/src/teams/__init__.py": {},
    "hbscorez-master/src/teams/migrations/0001_initial.py": {},
    "hbscorez-master/src/teams/migrations/0002_team_retirement.py": {},
    "hbscorez-master/src/teams/migrations/__init__.py": {},
    "hbscorez-master/src/teams/tests/__init__.py": {},
    "hbscorez-master/src/teams/tests/integration/test_calendars.py": {
        "CalendarTest.test__rems_stuttgart__mkld": {
            "name": "test__rems_stuttgart__mkld",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/teams/tests/integration/__init__.py": {},
    "hbscorez-master/src/users/apps.py": {},
    "hbscorez-master/src/users/forms.py": {
        "CaptchaRegistrationForm.init_captcha": {
            "name": "init_captcha",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CaptchaRegistrationForm.clean_captcha": {
            "name": "clean_captcha",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LinkForm.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LinkForm.clean_team_bhv_id": {
            "name": "clean_team_bhv_id",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LinkForm.clean": {
            "name": "clean",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/users/urls.py": {},
    "hbscorez-master/src/users/views.py": {
        "profile": {
            "name": "profile",
            "location": 26,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "link": {
            "name": "link",
            "location": 32,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "unlink": {
            "name": "unlink",
            "location": 62,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "team_from_request_query": {
            "name": "team_from_request_query",
            "location": 74,
            "return": [],
            "arguments": {
                "query": []
            }
        },
        "CaptchaRegistrationView.get_form": {
            "name": "get_form",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "form_class": []
            }
        }
    },
    "hbscorez-master/src/users/__init__.py": {},
    "hbscorez-master/src/users/migrations/0001_initial.py": {},
    "hbscorez-master/src/users/migrations/0002_delete_link_model.py": {},
    "hbscorez-master/src/users/migrations/__init__.py": {},
    "hbscorez-master/src/users/tests/test_link_form.py": {
        "TestLinkForm.test_simple": {
            "name": "test_simple",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLinkForm.test_player_name_ignore_case": {
            "name": "test_player_name_ignore_case",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLinkForm.test_team_does_not_exist": {
            "name": "test_team_does_not_exist",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLinkForm.test_player_does_not_exist": {
            "name": "test_player_does_not_exist",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLinkForm.test_team_and_player_do_not_exist": {
            "name": "test_team_and_player_do_not_exist",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLinkForm.test_player_already_linked": {
            "name": "test_player_already_linked",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLinkForm.test_multiple_seasons": {
            "name": "test_multiple_seasons",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/users/tests/__init__.py": {},
    "hbscorez-master/src/users/tests/selenium/test_activation_failed.py": {
        "TestActivationFailed.test_invalid_key": {
            "name": "test_invalid_key",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestActivationFailed.test_already_activated": {
            "name": "test_already_activated",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestActivationFailed.test_key_expired": {
            "name": "test_key_expired",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/users/tests/selenium/test_password_change.py": {
        "TestPasswordChange.test_password_change": {
            "name": "test_password_change",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPasswordChange.login": {
            "name": "login",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        }
    },
    "hbscorez-master/src/users/tests/selenium/test_password_reset.py": {
        "TestPasswordReset.test_password_reset": {
            "name": "test_password_reset",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/users/tests/selenium/test_registration.py": {
        "registration": {
            "name": "registration",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRegistration.test_registration": {
            "name": "test_registration",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistration.test_invalid_captcha": {
            "name": "test_invalid_captcha",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hbscorez-master/src/users/tests/selenium/__init__.py": {}
}
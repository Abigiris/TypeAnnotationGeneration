{
    "hexpy-master/setup.py": {},
    "hexpy-master/src/hexpy/activity.py": {
        "ActivityAPI.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "ActivityAPI.monitor_creation": {
            "name": "monitor_creation",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "organization_id": []
            }
        },
        "ActivityAPI.social_sites": {
            "name": "social_sites",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "organization_id": []
            }
        },
        "ActivityAPI.user_activity": {
            "name": "user_activity",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "organization_id": []
            }
        },
        "ActivityAPI.user_invitations": {
            "name": "user_invitations",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "organization_id": []
            }
        }
    },
    "hexpy-master/src/hexpy/analysis.py": {
        "AnalysisAPI.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "AnalysisAPI.analysis_request": {
            "name": "analysis_request",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AnalysisAPI.results": {
            "name": "results",
            "location": 91,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request_id": []
            }
        },
        "AnalysisAPI.image_analysis": {
            "name": "image_analysis",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        }
    },
    "hexpy-master/src/hexpy/base.py": {
        "rate_limited": {
            "name": "rate_limited",
            "location": 15,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": [],
                "max_calls": [],
                "period": []
            }
        },
        "handle_response": {
            "name": "handle_response",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "response": []
            }
        },
        "rate_limited.wrapper": {
            "name": "wrapper",
            "location": 26,
            "return": [],
            "arguments": {}
        }
    },
    "hexpy-master/src/hexpy/content_upload.py": {
        "ContentUploadAPI.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "ContentUploadAPI.upload": {
            "name": "upload",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "document_type": [],
                "items": [],
                "request_usage": []
            }
        },
        "ContentUploadAPI.batch_upload": {
            "name": "batch_upload",
            "location": 98,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "document_type": [],
                "items": [],
                "request_usage": []
            }
        },
        "ContentUploadAPI.delete_content_batch": {
            "name": "delete_content_batch",
            "location": 118,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "document_type": [],
                "batch": []
            }
        },
        "ContentUploadAPI.delete_content_items": {
            "name": "delete_content_items",
            "location": 132,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "document_type": [],
                "items": []
            }
        },
        "ContentUploadAPI.delete_content_source": {
            "name": "delete_content_source",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "document_type": [],
                "remove_results": []
            }
        },
        "ContentUploadAPI.create_content_source": {
            "name": "create_content_source",
            "location": 176,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "content_type": []
            }
        },
        "ContentUploadAPI.list_content_sources": {
            "name": "list_content_sources",
            "location": 192,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "team_id": []
            }
        }
    },
    "hexpy-master/src/hexpy/custom.py": {
        "CustomAPI.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": [],
                "endpoint": []
            }
        },
        "CustomAPI.get": {
            "name": "get",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "url_params": [],
                "params": []
            }
        },
        "CustomAPI.post": {
            "name": "post",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "url_params": [],
                "params": [],
                "data": []
            }
        },
        "CustomAPI.delete": {
            "name": "delete",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "url_params": [],
                "params": []
            }
        }
    },
    "hexpy-master/src/hexpy/hexpy.py": {
        "helpful_validation_error": {
            "name": "helpful_validation_error",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "errors": []
            }
        },
        "posts_json_to_df": {
            "name": "posts_json_to_df",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "docs": [],
                "images": []
            }
        },
        "docs_to_text": {
            "name": "docs_to_text",
            "location": 171,
            "return": [
                "str"
            ],
            "arguments": {
                "json_docs": [],
                "mode": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 195,
            "return": [],
            "arguments": {}
        },
        "login": {
            "name": "login",
            "location": 213,
            "return": [],
            "arguments": {
                "force": [],
                "expiration": []
            }
        },
        "results": {
            "name": "results",
            "location": 248,
            "return": [],
            "arguments": {
                "ctx": [],
                "monitor_id": [],
                "metrics": [],
                "date_range": []
            }
        },
        "metadata": {
            "name": "metadata",
            "location": 300,
            "return": [],
            "arguments": {
                "ctx": [],
                "info": [],
                "team_id": [],
                "country": [],
                "monitor_id": []
            }
        },
        "api_documentation": {
            "name": "api_documentation",
            "location": 356,
            "return": [],
            "arguments": {
                "ctx": [],
                "output_type": []
            }
        },
        "upload": {
            "name": "upload",
            "location": 399,
            "return": [],
            "arguments": {
                "ctx": [],
                "filename": [],
                "document_type": [],
                "separator": []
            }
        },
        "train": {
            "name": "train",
            "location": 442,
            "return": [],
            "arguments": {
                "ctx": [],
                "filename": [],
                "monitor_id": [],
                "separator": []
            }
        },
        "export": {
            "name": "export",
            "location": 581,
            "return": [],
            "arguments": {
                "ctx": [],
                "monitor_id": [],
                "limit": [],
                "dates": [],
                "output_type": [],
                "post_type": [],
                "filename": [],
                "separator": [],
                "images": []
            }
        },
        "stream_posts": {
            "name": "stream_posts",
            "location": 658,
            "return": [],
            "arguments": {
                "ctx": [],
                "stream_id": [],
                "max_docs": [],
                "output_type": [],
                "separator": []
            }
        },
        "Param.render": {
            "name": "render",
            "location": 112,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Response.validate_members": {
            "name": "validate_members",
            "location": 124,
            "return": [],
            "arguments": {
                "cls": [],
                "members": []
            }
        },
        "Response.render": {
            "name": "render",
            "location": 127,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Endpoint.render": {
            "name": "render",
            "location": 156,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hexpy-master/src/hexpy/metadata.py": {
        "MetadataAPI.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "MetadataAPI.team_list": {
            "name": "team_list",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetadataAPI.monitor_list": {
            "name": "monitor_list",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "team_id": []
            }
        },
        "MetadataAPI.geography": {
            "name": "geography",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetadataAPI.states": {
            "name": "states",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "country": []
            }
        },
        "MetadataAPI.cities": {
            "name": "cities",
            "location": 66,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "country": []
            }
        },
        "MetadataAPI.countries": {
            "name": "countries",
            "location": 79,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetadataAPI.image_classes": {
            "name": "image_classes",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetadataAPI.api_documentation": {
            "name": "api_documentation",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hexpy-master/src/hexpy/models.py": {
        "parse_datetime": {
            "name": "parse_datetime",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "date_string": []
            }
        },
        "UploadItem.validate_guid_url": {
            "name": "validate_guid_url",
            "location": 137,
            "return": [],
            "arguments": {
                "cls": [],
                "value": [],
                "values": []
            }
        },
        "UploadItem.fix_contents": {
            "name": "fix_contents",
            "location": 148,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "UploadItem.fix_title": {
            "name": "fix_title",
            "location": 153,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "UploadItem.fix_author": {
            "name": "fix_author",
            "location": 158,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "UploadItem.validate_len_custom_fields": {
            "name": "validate_len_custom_fields",
            "location": 163,
            "return": [],
            "arguments": {
                "cls": [],
                "value_dict": []
            }
        },
        "UploadItem.validate_custom_fields": {
            "name": "validate_custom_fields",
            "location": 172,
            "return": [],
            "arguments": {
                "cls": [],
                "value_dict": []
            }
        },
        "UploadItem.__hash__": {
            "name": "__hash__",
            "location": 182,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadItem.__eq__": {
            "name": "__eq__",
            "location": 185,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "UploadItem.dict": {
            "name": "dict",
            "location": 188,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadItem.__repr__": {
            "name": "__repr__",
            "location": 192,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCollection.unique_item_urls": {
            "name": "unique_item_urls",
            "location": 247,
            "return": [],
            "arguments": {
                "cls": [],
                "items": []
            }
        },
        "UploadCollection.from_dataframe": {
            "name": "from_dataframe",
            "location": 258,
            "return": [
                "_TUploadCollection@@UploadCollection@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TUploadCollection]"
                ],
                "df": []
            }
        },
        "UploadCollection.to_dataframe": {
            "name": "to_dataframe",
            "location": 296,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCollection.dict": {
            "name": "dict",
            "location": 300,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCollection.__len__": {
            "name": "__len__",
            "location": 303,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCollection.__iter__": {
            "name": "__iter__",
            "location": 306,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadCollection.__getitem__": {
            "name": "__getitem__",
            "location": 310,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "slice": []
            }
        },
        "UploadCollection.__repr__": {
            "name": "__repr__",
            "location": 317,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainItem.fix_contents": {
            "name": "fix_contents",
            "location": 367,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "TrainItem.fix_title": {
            "name": "fix_title",
            "location": 372,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "TrainItem.fix_author": {
            "name": "fix_author",
            "location": 377,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "TrainItem.__hash__": {
            "name": "__hash__",
            "location": 381,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainItem.__eq__": {
            "name": "__eq__",
            "location": 385,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TrainItem.__repr__": {
            "name": "__repr__",
            "location": 388,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainCollection.unique_item_urls": {
            "name": "unique_item_urls",
            "location": 427,
            "return": [],
            "arguments": {
                "cls": [],
                "items": []
            }
        },
        "TrainCollection.categoryid_match": {
            "name": "categoryid_match",
            "location": 438,
            "return": [],
            "arguments": {
                "cls": [],
                "items": []
            }
        },
        "TrainCollection.from_dataframe": {
            "name": "from_dataframe",
            "location": 448,
            "return": [
                "_TTrainCollection@@TrainCollection@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTrainCollection]"
                ],
                "df": []
            }
        },
        "TrainCollection.to_dataframe": {
            "name": "to_dataframe",
            "location": 457,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainCollection.dict": {
            "name": "dict",
            "location": 461,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainCollection.__len__": {
            "name": "__len__",
            "location": 464,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainCollection.__iter__": {
            "name": "__iter__",
            "location": 467,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TrainCollection.__getitem__": {
            "name": "__getitem__",
            "location": 471,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "TrainCollection.__repr__": {
            "name": "__repr__",
            "location": 478,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnalysisRequest.validate_24_range": {
            "name": "validate_24_range",
            "location": 628,
            "return": [],
            "arguments": {
                "cls": [],
                "end_date": [],
                "values": []
            }
        },
        "AnalysisRequest.dict": {
            "name": "dict",
            "location": 636,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hexpy-master/src/hexpy/monitor.py": {
        "MonitorAPI.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "MonitorAPI._aggregate_metrics": {
            "name": "_aggregate_metrics",
            "location": 55,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "date": [],
                "metrics": []
            }
        },
        "MonitorAPI._aggregate_dates": {
            "name": "_aggregate_dates",
            "location": 69,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "dates": [],
                "metrics": []
            }
        },
        "MonitorAPI.aggregate": {
            "name": "aggregate",
            "location": 94,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": [],
                "monitor_ids": [],
                "dates": [],
                "metrics": []
            }
        },
        "MonitorAPI.details": {
            "name": "details",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": []
            }
        },
        "MonitorAPI.audit": {
            "name": "audit",
            "location": 146,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": []
            }
        },
        "MonitorAPI.word_cloud": {
            "name": "word_cloud",
            "location": 156,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "filter_string": []
            }
        },
        "MonitorAPI.training_posts": {
            "name": "training_posts",
            "location": 181,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "category": []
            }
        },
        "MonitorAPI.train_monitor": {
            "name": "train_monitor",
            "location": 201,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "items": []
            }
        },
        "MonitorAPI.batch_train": {
            "name": "batch_train",
            "location": 230,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "items": []
            }
        },
        "MonitorAPI.interest_affinities": {
            "name": "interest_affinities",
            "location": 250,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "daily": [],
                "document_source": []
            }
        },
        "MonitorAPI.topics": {
            "name": "topics",
            "location": 280,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "filter_string": []
            }
        },
        "MonitorAPI.topic_waves": {
            "name": "topic_waves",
            "location": 303,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.top_sources": {
            "name": "top_sources",
            "location": 319,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.image_results": {
            "name": "image_results",
            "location": 334,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "object_type": [],
                "top": []
            }
        },
        "MonitorAPI.volume": {
            "name": "volume",
            "location": 364,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "group_by": []
            }
        },
        "MonitorAPI.dayandtime": {
            "name": "dayandtime",
            "location": 387,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "aggregate_by_day": [],
                "use_local_time": []
            }
        },
        "MonitorAPI.sentiment_and_categories": {
            "name": "sentiment_and_categories",
            "location": 417,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "hide_excluded": []
            }
        },
        "MonitorAPI.posts": {
            "name": "posts",
            "location": 441,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "filter_string": [],
                "extend_limit": [],
                "full_contents": [],
                "geotagged": []
            }
        },
        "MonitorAPI.age": {
            "name": "age",
            "location": 483,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.ethnicity": {
            "name": "ethnicity",
            "location": 498,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.gender": {
            "name": "gender",
            "location": 513,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.cities": {
            "name": "cities",
            "location": 533,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "country": []
            }
        },
        "MonitorAPI.states": {
            "name": "states",
            "location": 555,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": [],
                "country": []
            }
        },
        "MonitorAPI.countries": {
            "name": "countries",
            "location": 576,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.twitter_authors": {
            "name": "twitter_authors",
            "location": 597,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.twitter_metrics": {
            "name": "twitter_metrics",
            "location": 612,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.twitter_followers": {
            "name": "twitter_followers",
            "location": 627,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.twitter_sent_posts": {
            "name": "twitter_sent_posts",
            "location": 643,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.twitter_engagement": {
            "name": "twitter_engagement",
            "location": 658,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.facebook_admin_posts": {
            "name": "facebook_admin_posts",
            "location": 679,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.facebook_likes": {
            "name": "facebook_likes",
            "location": 695,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.facebook_activity": {
            "name": "facebook_activity",
            "location": 711,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.instagram_top_hashtags": {
            "name": "instagram_top_hashtags",
            "location": 732,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.instagram_followers": {
            "name": "instagram_followers",
            "location": 749,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.instagram_sent_media": {
            "name": "instagram_sent_media",
            "location": 765,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "MonitorAPI.instagram_activity": {
            "name": "instagram_activity",
            "location": 780,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        }
    },
    "hexpy-master/src/hexpy/project.py": {
        "substitute_default": {
            "name": "substitute_default",
            "location": 17,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": [],
                "monitor_id": [],
                "start": [],
                "end": []
            }
        },
        "substitute_default.wrapper": {
            "name": "wrapper",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "Project.validate_empty_gender": {
            "name": "validate_empty_gender",
            "location": 79,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        },
        "Project.get_from_monitor_id": {
            "name": "get_from_monitor_id",
            "location": 87,
            "return": [
                "_TProject@@Project@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TProject]"
                ],
                "session": [],
                "monitor_id": []
            }
        },
        "Project.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.__len__": {
            "name": "__len__",
            "location": 136,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.__repr__": {
            "name": "__repr__",
            "location": 139,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.__iter__": {
            "name": "__iter__",
            "location": 142,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Project.__getitem__": {
            "name": "__getitem__",
            "location": 146,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": []
            }
        }
    },
    "hexpy-master/src/hexpy/realtime.py": {
        "RealtimeAPI.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "RealtimeAPI.cashtags": {
            "name": "cashtags",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "top": []
            }
        },
        "RealtimeAPI.hashtags": {
            "name": "hashtags",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "top": []
            }
        },
        "RealtimeAPI.list": {
            "name": "list",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "team_id": []
            }
        },
        "RealtimeAPI.configure": {
            "name": "configure",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "data": []
            }
        },
        "RealtimeAPI.enable": {
            "name": "enable",
            "location": 85,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": []
            }
        },
        "RealtimeAPI.disbale": {
            "name": "disbale",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": []
            }
        },
        "RealtimeAPI.detail": {
            "name": "detail",
            "location": 105,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": []
            }
        },
        "RealtimeAPI.retweets": {
            "name": "retweets",
            "location": 115,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": []
            }
        },
        "RealtimeAPI.full_retweets": {
            "name": "full_retweets",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": []
            }
        },
        "RealtimeAPI.social_guids": {
            "name": "social_guids",
            "location": 139,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "doc_type": [],
                "start": [],
                "received_after": [],
                "maxresults": []
            }
        },
        "RealtimeAPI.tweets": {
            "name": "tweets",
            "location": 169,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": []
            }
        },
        "RealtimeAPI.full_tweets": {
            "name": "full_tweets",
            "location": 182,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": []
            }
        },
        "RealtimeAPI.volume": {
            "name": "volume",
            "location": 195,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "doc_type": []
            }
        },
        "RealtimeAPI.volume_by_sentiment": {
            "name": "volume_by_sentiment",
            "location": 212,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "doc_type": []
            }
        },
        "RealtimeAPI.volume_by_emotion": {
            "name": "volume_by_emotion",
            "location": 229,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "monitor_id": [],
                "start": [],
                "doc_type": []
            }
        }
    },
    "hexpy-master/src/hexpy/session.py": {
        "HexpySession.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "HexpySession._get_token": {
            "name": "_get_token",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "username": [],
                "password": [],
                "no_expiration": [],
                "force": []
            }
        },
        "HexpySession.save_token": {
            "name": "save_token",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "HexpySession.login": {
            "name": "login",
            "location": 115,
            "return": [
                "_THexpySession@@HexpySession@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_THexpySession]"
                ],
                "username": [],
                "password": [],
                "no_expiration": [],
                "force": []
            }
        },
        "HexpySession.load_auth_from_file": {
            "name": "load_auth_from_file",
            "location": 138,
            "return": [
                "_THexpySession@@HexpySession@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_THexpySession]"
                ],
                "path": []
            }
        },
        "HexpySession.close": {
            "name": "close",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HexpySession.__enter__": {
            "name": "__enter__",
            "location": 162,
            "return": [
                "_THexpySession@@HexpySession@@"
            ],
            "arguments": {
                "self": [
                    "_THexpySession@@HexpySession@@"
                ]
            }
        },
        "HexpySession.__exit__": {
            "name": "__exit__",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "hexpy-master/src/hexpy/streams.py": {
        "StreamsAPI.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "StreamsAPI.posts": {
            "name": "posts",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stream_id": [],
                "count": []
            }
        },
        "StreamsAPI.stream_list": {
            "name": "stream_list",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "team_id": []
            }
        },
        "StreamsAPI.create_stream": {
            "name": "create_stream",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "team_id": [],
                "name": []
            }
        },
        "StreamsAPI.delete_stream": {
            "name": "delete_stream",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stream_id": []
            }
        },
        "StreamsAPI.add_monitor_to_stream": {
            "name": "add_monitor_to_stream",
            "location": 76,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stream_id": [],
                "monitor_id": []
            }
        },
        "StreamsAPI.remove_monitor_from_stream": {
            "name": "remove_monitor_from_stream",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stream_id": [],
                "monitor_id": []
            }
        },
        "StreamsAPI.update_stream": {
            "name": "update_stream",
            "location": 98,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stream_id": [],
                "name": []
            }
        }
    },
    "hexpy-master/src/hexpy/__init__.py": {},
    "hexpy-master/tests/conftest.py": {
        "upload_items": {
            "name": "upload_items",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "upload_dataframe": {
            "name": "upload_dataframe",
            "location": 58,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "duplicate_items": {
            "name": "duplicate_items",
            "location": 64,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "train_items": {
            "name": "train_items",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "train_dataframe": {
            "name": "train_dataframe",
            "location": 97,
            "return": [],
            "arguments": {
                "train_items": []
            }
        },
        "fake_session": {
            "name": "fake_session",
            "location": 103,
            "return": [],
            "arguments": {}
        },
        "posts_json": {
            "name": "posts_json",
            "location": 109,
            "return": [],
            "arguments": {}
        },
        "posts_df": {
            "name": "posts_df",
            "location": 118,
            "return": [],
            "arguments": {}
        },
        "json_documentation": {
            "name": "json_documentation",
            "location": 125,
            "return": [],
            "arguments": {}
        },
        "markdown_documentation": {
            "name": "markdown_documentation",
            "location": 132,
            "return": [],
            "arguments": {}
        },
        "geography_json": {
            "name": "geography_json",
            "location": 139,
            "return": [],
            "arguments": {}
        },
        "results_json": {
            "name": "results_json",
            "location": 146,
            "return": [],
            "arguments": {}
        },
        "monitor_details_json": {
            "name": "monitor_details_json",
            "location": 153,
            "return": [],
            "arguments": {}
        },
        "analysis_request_dict": {
            "name": "analysis_request_dict",
            "location": 160,
            "return": [],
            "arguments": {}
        }
    },
    "hexpy-master/tests/test_cli.py": {
        "fake_login": {
            "name": "fake_login",
            "location": 21,
            "return": [
                "hexpy.session.HexpySession"
            ],
            "arguments": {
                "force": [],
                "expiration": []
            }
        },
        "test_cli_help": {
            "name": "test_cli_help",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_posts_json_to_df": {
            "name": "test_posts_json_to_df",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "posts_json": [],
                "posts_df": []
            }
        },
        "test_format_documentation": {
            "name": "test_format_documentation",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "json_documentation": [],
                "markdown_documentation": []
            }
        },
        "test_export": {
            "name": "test_export",
            "location": 52,
            "return": [],
            "arguments": {
                "posts_json": [],
                "monkeypatch": []
            }
        },
        "test_api_documentation": {
            "name": "test_api_documentation",
            "location": 75,
            "return": [],
            "arguments": {
                "json_documentation": [],
                "monkeypatch": []
            }
        },
        "test_metadata_geography": {
            "name": "test_metadata_geography",
            "location": 94,
            "return": [],
            "arguments": {
                "geography_json": [],
                "monkeypatch": []
            }
        },
        "test_stream": {
            "name": "test_stream",
            "location": 111,
            "return": [],
            "arguments": {
                "posts_json": [],
                "monkeypatch": []
            }
        },
        "test_upload": {
            "name": "test_upload",
            "location": 128,
            "return": [],
            "arguments": {
                "upload_dataframe": [],
                "monkeypatch": [],
                "tmp_path": []
            }
        },
        "test_train": {
            "name": "test_train",
            "location": 152,
            "return": [],
            "arguments": {
                "train_dataframe": [],
                "monkeypatch": [],
                "tmp_path": []
            }
        },
        "test_results": {
            "name": "test_results",
            "location": 187,
            "return": [],
            "arguments": {
                "results_json": [],
                "monkeypatch": []
            }
        },
        "test_helpful_error_item": {
            "name": "test_helpful_error_item",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "upload_items": []
            }
        },
        "test_helpful_error_collection": {
            "name": "test_helpful_error_collection",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "duplicate_items": []
            }
        }
    },
    "hexpy-master/tests/test_hexpy.py": {
        "test_response_error_code": {
            "name": "test_response_error_code",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_response_error_status": {
            "name": "test_response_error_status",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "test_response_status_ok": {
            "name": "test_response_status_ok",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "base_func": {
            "name": "base_func",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "test_rate_limiting": {
            "name": "test_rate_limiting",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [],
                "base_func": []
            }
        },
        "test_rate_limiting_window": {
            "name": "test_rate_limiting_window",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "caplog": [],
                "base_func": []
            }
        },
        "base_func.some_function": {
            "name": "some_function",
            "location": 71,
            "return": [],
            "arguments": {
                "message": []
            }
        }
    },
    "hexpy-master/tests/test_models.py": {
        "test_correct_upload_item": {
            "name": "test_correct_upload_item",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "upload_items": []
            }
        },
        "test_upload_from_df": {
            "name": "test_upload_from_df",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "upload_items": [],
                "upload_dataframe": []
            }
        },
        "test_upload_to_df": {
            "name": "test_upload_to_df",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "upload_dataframe": []
            }
        },
        "test_upload_iteration": {
            "name": "test_upload_iteration",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "upload_items": []
            }
        },
        "invalid_item": {
            "name": "invalid_item",
            "location": 53,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "test_wrong_upload_item": {
            "name": "test_wrong_upload_item",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "invalid_item": []
            }
        },
        "only_url_item": {
            "name": "only_url_item",
            "location": 88,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "test_only_url": {
            "name": "test_only_url",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "only_url_item": []
            }
        },
        "only_guid_item": {
            "name": "only_guid_item",
            "location": 102,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "test_only_guid": {
            "name": "test_only_guid",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "only_guid_item": []
            }
        },
        "no_url_or_guid_item": {
            "name": "no_url_or_guid_item",
            "location": 116,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "test_missing_url_and_guid": {
            "name": "test_missing_url_and_guid",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "no_url_or_guid_item": []
            }
        },
        "too_many_custom_fields": {
            "name": "too_many_custom_fields",
            "location": 138,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "test_too_many_custom_fields": {
            "name": "test_too_many_custom_fields",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "too_many_custom_fields": []
            }
        },
        "long_custom_fields": {
            "name": "long_custom_fields",
            "location": 161,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "test_long_custom_fields": {
            "name": "test_long_custom_fields",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "long_custom_fields": []
            }
        },
        "test_detect_duplicate_upload_items": {
            "name": "test_detect_duplicate_upload_items",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "duplicate_items": []
            }
        },
        "test_unique_upload_items": {
            "name": "test_unique_upload_items",
            "location": 197,
            "return": [
                "None"
            ],
            "arguments": {
                "upload_items": []
            }
        },
        "test_correct_train_item": {
            "name": "test_correct_train_item",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "train_items": []
            }
        },
        "invalid_train_item": {
            "name": "invalid_train_item",
            "location": 210,
            "return": [],
            "arguments": {
                "train_items": []
            }
        },
        "test_wrong_train_item": {
            "name": "test_wrong_train_item",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "invalid_train_item": []
            }
        },
        "duplicate_train_items": {
            "name": "duplicate_train_items",
            "location": 252,
            "return": [],
            "arguments": {
                "train_items": []
            }
        },
        "test_detect_duplicate_train_items": {
            "name": "test_detect_duplicate_train_items",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "duplicate_train_items": []
            }
        },
        "mixed_train_items": {
            "name": "mixed_train_items",
            "location": 274,
            "return": [],
            "arguments": {
                "train_items": []
            }
        },
        "test_mulitple_category_id": {
            "name": "test_mulitple_category_id",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {
                "mixed_train_items": []
            }
        },
        "test_train_from_df": {
            "name": "test_train_from_df",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "train_dataframe": [],
                "train_items": []
            }
        },
        "test_train_to_df": {
            "name": "test_train_to_df",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "train_dataframe": [],
                "train_items": []
            }
        },
        "test_train_iteration": {
            "name": "test_train_iteration",
            "location": 313,
            "return": [
                "None"
            ],
            "arguments": {
                "train_items": []
            }
        },
        "test_train_slice": {
            "name": "test_train_slice",
            "location": 320,
            "return": [
                "None"
            ],
            "arguments": {
                "train_items": []
            }
        },
        "test_unique_train_items": {
            "name": "test_unique_train_items",
            "location": 327,
            "return": [
                "None"
            ],
            "arguments": {
                "train_items": []
            }
        },
        "large_upload_collection": {
            "name": "large_upload_collection",
            "location": 334,
            "return": [],
            "arguments": {
                "upload_items": []
            }
        },
        "test_batch_upload": {
            "name": "test_batch_upload",
            "location": 349,
            "return": [],
            "arguments": {
                "large_upload_collection": [],
                "fake_session": [],
                "caplog": []
            }
        },
        "large_train_collection": {
            "name": "large_train_collection",
            "location": 375,
            "return": [],
            "arguments": {
                "train_items": []
            }
        },
        "test_batch_train": {
            "name": "test_batch_train",
            "location": 390,
            "return": [],
            "arguments": {
                "large_train_collection": [],
                "fake_session": [],
                "caplog": []
            }
        },
        "test_project": {
            "name": "test_project",
            "location": 416,
            "return": [],
            "arguments": {
                "fake_session": [],
                "monitor_details_json": []
            }
        },
        "test_valid_analysis_request": {
            "name": "test_valid_analysis_request",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "analysis_request_dict": []
            }
        },
        "invalid_request_range": {
            "name": "invalid_request_range",
            "location": 440,
            "return": [],
            "arguments": {
                "analysis_request_dict": []
            }
        },
        "test_invalid_analysis_date_range": {
            "name": "test_invalid_analysis_date_range",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "invalid_request_range": []
            }
        }
    },
    "hexpy-master/tests/test_session.py": {
        "mocked_authenticate": {
            "name": "mocked_authenticate",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_login": {
            "name": "test_login",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_authenticate": []
            }
        },
        "test_load_auth": {
            "name": "test_load_auth",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_save_token": {
            "name": "test_save_token",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "mocked_authenticate": [],
                "tmp_path": []
            }
        }
    },
    "hexpy-master/tests/__init__.py": {}
}
{
    "httpmeter-master/setup.py": {
        "requirements": {
            "name": "requirements",
            "location": 4,
            "return": [
                "list"
            ],
            "arguments": {}
        }
    },
    "httpmeter-master/httpmeter/cli.py": {
        "parse_header": {
            "name": "parse_header",
            "location": 6,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "header": [
                    "str"
                ]
            }
        },
        "parse_args": {
            "name": "parse_args",
            "location": 18,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {
                "args": [
                    "List[str]"
                ]
            }
        },
        "AppendHeader.__call__": {
            "name": "__call__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [],
                "namespace": [],
                "values": [],
                "option_string": []
            }
        }
    },
    "httpmeter-master/httpmeter/net.py": {
        "use_uvloop": {
            "name": "use_uvloop",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "HttpRequests.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "loop": []
            }
        },
        "HttpRequests.exec_to": {
            "name": "exec_to",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "concurrency": [
                    "int"
                ],
                "total_requests": [
                    "int"
                ]
            }
        },
        "HttpRequests.via_proxy": {
            "name": "via_proxy",
            "location": 33,
            "return": [
                "_THttpRequests"
            ],
            "arguments": {
                "self": [
                    "_THttpRequests"
                ],
                "proxy_url": [
                    "str"
                ]
            }
        },
        "HttpRequests.with_headers": {
            "name": "with_headers",
            "location": 37,
            "return": [
                "_THttpRequests"
            ],
            "arguments": {
                "self": [
                    "_THttpRequests"
                ],
                "headers": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "HttpRequests.on_response": {
            "name": "on_response",
            "location": 41,
            "return": [
                "_THttpRequests"
            ],
            "arguments": {
                "self": [
                    "_THttpRequests"
                ],
                "cb": [
                    "Callable[([str, int, float], None)]"
                ]
            }
        },
        "HttpRequests.make_requests": {
            "name": "make_requests",
            "location": 45,
            "return": [
                "List[Awaitable]"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "count": [
                    "int"
                ]
            }
        }
    },
    "httpmeter-master/httpmeter/stats.py": {
        "min_avg_max": {
            "name": "min_avg_max",
            "location": 42,
            "return": [
                "Tuple[(int, float, int)]"
            ],
            "arguments": {
                "iter_": [
                    "Iterable[float]"
                ]
            }
        },
        "results_to_str": {
            "name": "results_to_str",
            "location": 100,
            "return": [
                "str"
            ],
            "arguments": {
                "results": [
                    "BenchmarkResults"
                ]
            }
        },
        "inc": {
            "name": "inc",
            "location": 118,
            "return": [
                "dict"
            ],
            "arguments": {
                "assoc_arr": [
                    "dict"
                ],
                "key": []
            }
        },
        "ForRequest.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content_size": [
                    "int"
                ],
                "status_code": [
                    "int"
                ],
                "duration": [
                    "float"
                ]
            }
        },
        "ForRequest.__str__": {
            "name": "__str__",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BenchmarkResults.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "min_doc_len": [
                    "int"
                ],
                "avg_doc_len": [
                    "float"
                ],
                "max_doc_len": [
                    "int"
                ],
                "concurrency": [
                    "int"
                ],
                "completed_requests": [
                    "int"
                ],
                "reqs_per_sec": [
                    "float"
                ],
                "min_req_time": [
                    "int"
                ],
                "avg_req_time": [
                    "float"
                ],
                "max_req_time": [
                    "int"
                ],
                "status_codes": [
                    "Dict[(int, int)]"
                ]
            }
        },
        "ForBenchmark.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stats": [
                    "List[ForRequest]"
                ],
                "concurrency": [
                    "int"
                ],
                "total_duration": [
                    "float"
                ]
            }
        },
        "ForBenchmark.content_sizes": {
            "name": "content_sizes",
            "location": 56,
            "return": [
                "Iterable[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ForBenchmark.durations": {
            "name": "durations",
            "location": 59,
            "return": [
                "Iterable[float]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ForBenchmark.status_codes": {
            "name": "status_codes",
            "location": 62,
            "return": [
                "Dict[(int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ForBenchmark.completed_requests": {
            "name": "completed_requests",
            "location": 66,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ForBenchmark.summary": {
            "name": "summary",
            "location": 69,
            "return": [
                "BenchmarkResults"
            ],
            "arguments": {
                "self": []
            }
        },
        "Progress.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Progress.update": {
            "name": "update",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": [
                    "str"
                ]
            }
        },
        "Progress.done": {
            "name": "done",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Progress.we_should_flush": {
            "name": "we_should_flush",
            "location": 96,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "httpmeter-master/httpmeter/utils.py": {
        "count": {
            "name": "count",
            "location": 6,
            "return": [
                "int"
            ],
            "arguments": {
                "iter_": [
                    "Iterable"
                ]
            }
        },
        "avg": {
            "name": "avg",
            "location": 10,
            "return": [
                "float"
            ],
            "arguments": {
                "iter_": [
                    "Iterable[int]"
                ]
            }
        },
        "time_it": {
            "name": "time_it",
            "location": 18,
            "return": [
                "Tuple[(Any, float)]"
            ],
            "arguments": {
                "cb": []
            }
        }
    },
    "httpmeter-master/httpmeter/__init__.py": {},
    "httpmeter-master/httpmeter/__main__.py": {
        "make_requests": {
            "name": "make_requests",
            "location": 44,
            "return": [
                "List[stats.ForRequest]"
            ],
            "arguments": {
                "args": [
                    "tuple"
                ]
            }
        },
        "requests_per_process": {
            "name": "requests_per_process",
            "location": 48,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "process_count": [
                    "int"
                ],
                "conf": []
            }
        },
        "main": {
            "name": "main",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "list"
                ]
            }
        },
        "Benchmark.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": [],
                "progress": []
            }
        },
        "Benchmark.run": {
            "name": "run",
            "location": 26,
            "return": [
                "List[stats.ForRequest]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Benchmark._on_response": {
            "name": "_on_response",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resp_text": [
                    "str"
                ],
                "status_code": [
                    "int"
                ],
                "request_start_time": [
                    "float"
                ]
            }
        }
    },
    "httpmeter-master/tests/unit/test_benchmark.py": {
        "describe_Bencmark": {
            "name": "describe_Bencmark",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_Bencmark.describe_constructor": {
            "name": "describe_constructor",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe__on_response": {
            "name": "describe__on_response",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe_run": {
            "name": "describe_run",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe_constructor.it_instantiates_http_requests_with_headers_specified_in_config": {
            "name": "it_instantiates_http_requests_with_headers_specified_in_config",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe_constructor.it_instantiates_http_requests_with_proxy_specified_in_config": {
            "name": "it_instantiates_http_requests_with_proxy_specified_in_config",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe__on_response.describe_when_progress_output_is_set": {
            "name": "describe_when_progress_output_is_set",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe__on_response.it_appends_request_stats": {
            "name": "it_appends_request_stats",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe_run.it_stops_the_progress": {
            "name": "it_stops_the_progress",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "describe_Bencmark.describe__on_response.describe_when_progress_output_is_set.it_updates_progress": {
            "name": "it_updates_progress",
            "location": 33,
            "return": [],
            "arguments": {}
        }
    },
    "httpmeter-master/tests/unit/test_cli.py": {
        "describe_parse_args": {
            "name": "describe_parse_args",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_parse_header": {
            "name": "describe_parse_header",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_parse_args.it_returns_parsed_arguments": {
            "name": "it_returns_parsed_arguments",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "describe_parse_args.describe_when_multiple_headers_are_provided": {
            "name": "describe_when_multiple_headers_are_provided",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "describe_parse_header.it_returns_header_name_and_value_as_a_tuple": {
            "name": "it_returns_header_name_and_value_as_a_tuple",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "describe_parse_header.describe_when_header_value_has_trailing_whitespaces": {
            "name": "describe_when_header_value_has_trailing_whitespaces",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "describe_parse_args.describe_when_multiple_headers_are_provided.it_returns_them_all": {
            "name": "it_returns_them_all",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "describe_parse_header.describe_when_header_value_has_trailing_whitespaces.it_removes_them": {
            "name": "it_removes_them",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "httpmeter-master/tests/unit/test_http_requests.py": {
        "describe_HttpRequests": {
            "name": "describe_HttpRequests",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_HttpRequests.describe_make_requests": {
            "name": "describe_make_requests",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_make_get": {
            "name": "describe_make_get",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_exec_to": {
            "name": "describe_exec_to",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_via_proxy": {
            "name": "describe_via_proxy",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_make_requests.it_returns_a_list_of_request_tasks": {
            "name": "it_returns_a_list_of_request_tasks",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_make_get.describe_when_proxy_is_set": {
            "name": "describe_when_proxy_is_set",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_make_get.describe_when_headers_are_set": {
            "name": "describe_when_headers_are_set",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_exec_to.it_executes_all_requests": {
            "name": "it_executes_all_requests",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "describe_HttpRequests.describe_via_proxy.it_returns_pointer_to_self_object": {
            "name": "it_returns_pointer_to_self_object",
            "location": 75,
            "return": [],
            "arguments": {}
        }
    },
    "httpmeter-master/tests/unit/test_stats_for_benchmark.py": {
        "describe_ForBenchmark": {
            "name": "describe_ForBenchmark",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_content_sizes": {
            "name": "describe_content_sizes",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_durations": {
            "name": "describe_durations",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_status_codes": {
            "name": "describe_status_codes",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_completed_requests": {
            "name": "describe_completed_requests",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary": {
            "name": "describe_summary",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_content_sizes.it_returns_iterable_of_content_sizes_for_all_requests": {
            "name": "it_returns_iterable_of_content_sizes_for_all_requests",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_durations.it_returns_iterable_of_durations_for_all_requests": {
            "name": "it_returns_iterable_of_durations_for_all_requests",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_status_codes.it_returns_status_codes_count_dictionary": {
            "name": "it_returns_status_codes_count_dictionary",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_completed_requests.it_returns_request_stats_count": {
            "name": "it_returns_request_stats_count",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_with_minimum_content_size": {
            "name": "it_returns_benchmark_results_with_minimum_content_size",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_with_average_content_size": {
            "name": "it_returns_benchmark_results_with_average_content_size",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_with_maximum_content_size": {
            "name": "it_returns_benchmark_results_with_maximum_content_size",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_with_concurrency": {
            "name": "it_returns_benchmark_results_with_concurrency",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_with_completed_requests_count": {
            "name": "it_returns_benchmark_results_with_completed_requests_count",
            "location": 95,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_with_http_client_speed": {
            "name": "it_returns_benchmark_results_with_http_client_speed",
            "location": 106,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_with_min_avg_and_max_request_durations": {
            "name": "it_returns_benchmark_results_with_min_avg_and_max_request_durations",
            "location": 117,
            "return": [],
            "arguments": {}
        },
        "describe_ForBenchmark.describe_summary.it_returns_benchmark_results_status_codes_stats": {
            "name": "it_returns_benchmark_results_status_codes_stats",
            "location": 130,
            "return": [],
            "arguments": {}
        }
    },
    "httpmeter-master/tests/unit/test_stats_utils.py": {
        "describe_inc": {
            "name": "describe_inc",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_inc.describe_when_specified_key_is_not_in_dict": {
            "name": "describe_when_specified_key_is_not_in_dict",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "describe_inc.describe_when_specified_key_is_in_dict": {
            "name": "describe_when_specified_key_is_in_dict",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "describe_inc.describe_when_specified_key_is_not_in_dict.it_sets_1_for_the_key": {
            "name": "it_sets_1_for_the_key",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "describe_inc.describe_when_specified_key_is_in_dict.it_increases_key_value_by_one": {
            "name": "it_increases_key_value_by_one",
            "location": 16,
            "return": [],
            "arguments": {}
        }
    },
    "httpmeter-master/tests/unit/test_utils.py": {
        "describe_count": {
            "name": "describe_count",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_avg": {
            "name": "describe_avg",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "describe_count.describe_when_iterable_yields_some_results": {
            "name": "describe_when_iterable_yields_some_results",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "describe_count.describe_when_iterable_yields_no_results": {
            "name": "describe_when_iterable_yields_no_results",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "describe_avg.describe_when_iterable_has_no_elements": {
            "name": "describe_when_iterable_has_no_elements",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "describe_avg.it_returns_average_of_iterable_elements": {
            "name": "it_returns_average_of_iterable_elements",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "describe_count.describe_when_iterable_yields_some_results.it_returns_iterable_element_count": {
            "name": "it_returns_iterable_element_count",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "describe_count.describe_when_iterable_yields_no_results.it_returns_0": {
            "name": "it_returns_0",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "describe_avg.describe_when_iterable_has_no_elements.it_returns_0": {
            "name": "it_returns_0",
            "location": 22,
            "return": [],
            "arguments": {}
        }
    }
}
{
    "hypernotes-master/setup.py": {},
    "hypernotes-master/test_hypernotes.py": {
        "test_to_pandas_dict": {
            "name": "test_to_pandas_dict",
            "location": 325,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TestNote.test_setup": {
            "name": "test_setup",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNote.test_end": {
            "name": "test_end",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNote.test_pass_content": {
            "name": "test_pass_content",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNote.test_pass_text": {
            "name": "test_pass_text",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNote.test_properties_and_setters": {
            "name": "test_properties_and_setters",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNote.test_set_identifier": {
            "name": "test_set_identifier",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStore.test_roundtrip": {
            "name": "test_roundtrip",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "TestStore.test_update": {
            "name": "test_update",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "TestStore.test_remove": {
            "name": "test_remove",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "TestStore.test_writing_invalid_note": {
            "name": "test_writing_invalid_note",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "TestStore.test_deterministic_sorting": {
            "name": "test_deterministic_sorting",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "TestStore.test_from_note": {
            "name": "test_from_note",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMain.test_html_format": {
            "name": "test_html_format",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMain.test_command_line_interface": {
            "name": "test_command_line_interface",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "TestMain.validate_html": {
            "name": "validate_html",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "html": [],
                "expected_test_values": []
            }
        }
    },
    "hypernotes-master/hypernotes/__init__.py": {
        "_prepare_note_for_storing": {
            "name": "_prepare_note_for_storing",
            "location": 302,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "note": [
                    "_T0@@"
                ]
            }
        },
        "_to_pandas": {
            "name": "_to_pandas",
            "location": 308,
            "return": [
                "Any"
            ],
            "arguments": {
                "notes": []
            }
        },
        "_pandas_dict": {
            "name": "_pandas_dict",
            "location": 320,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "notes": []
            }
        },
        "_flatten_notes": {
            "name": "_flatten_notes",
            "location": 339,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "notes": []
            }
        },
        "_all_keys_from_dicts": {
            "name": "_all_keys_from_dicts",
            "location": 346,
            "return": [
                "list"
            ],
            "arguments": {
                "ds": []
            }
        },
        "_key_order": {
            "name": "_key_order",
            "location": 350,
            "return": [
                "Any"
            ],
            "arguments": {
                "keys": [],
                "additional_keys_subset": []
            }
        },
        "_flatten_dict": {
            "name": "_flatten_dict",
            "location": 383,
            "return": [
                "dict"
            ],
            "arguments": {
                "d": [],
                "parent_key": [],
                "sep": []
            }
        },
        "_filter_sequence_if_startswith": {
            "name": "_filter_sequence_if_startswith",
            "location": 398,
            "return": [
                "list"
            ],
            "arguments": {
                "seq": [],
                "startswith": []
            }
        },
        "_deserialize_datetime": {
            "name": "_deserialize_datetime",
            "location": 620,
            "return": [
                "Union[(_datetime.datetime, _T0)]"
            ],
            "arguments": {
                "obj": [
                    "_T0@@"
                ]
            }
        },
        "_format_datetime": {
            "name": "_format_datetime",
            "location": 633,
            "return": [
                "Any"
            ],
            "arguments": {
                "dt": []
            }
        },
        "_parse_datetime": {
            "name": "_parse_datetime",
            "location": 637,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "dt_str": []
            }
        },
        "_convert_to_path": {
            "name": "_convert_to_path",
            "location": 641,
            "return": [
                "Union[(pathlib.Path, _T0)]"
            ],
            "arguments": {
                "path": [
                    "_T0@@"
                ]
            }
        },
        "_raw_dicts_to_notes": {
            "name": "_raw_dicts_to_notes",
            "location": 647,
            "return": [
                "List[Note]"
            ],
            "arguments": {
                "raw_dicts": []
            }
        },
        "_notes_to_raw_dicts": {
            "name": "_notes_to_raw_dicts",
            "location": 652,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "notes": []
            }
        },
        "Note.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [],
                "content": []
            }
        },
        "Note._set_identifier": {
            "name": "_set_identifier",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note._set_up_initial_structure": {
            "name": "_set_up_initial_structure",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note._initial_features_structure": {
            "name": "_initial_features_structure",
            "location": 84,
            "return": [
                "Dict[(str, List[nothing])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note._python_executable_path": {
            "name": "_python_executable_path",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note._start": {
            "name": "_start",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note.end": {
            "name": "end",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note._current_datetime": {
            "name": "_current_datetime",
            "location": 102,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note._add_git_info": {
            "name": "_add_git_info",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note._is_in_git_repo": {
            "name": "_is_in_git_repo",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note.from_note": {
            "name": "from_note",
            "location": 140,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "cls": [],
                "note": [
                    "_T0@@"
                ]
            }
        },
        "Note.identifier": {
            "name": "identifier",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.text": {
            "name": "text",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.model": {
            "name": "model",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.metrics": {
            "name": "metrics",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.parameters": {
            "name": "parameters",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.features": {
            "name": "features",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.target": {
            "name": "target",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.info": {
            "name": "info",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.start_datetime": {
            "name": "start_datetime",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.end_datetime": {
            "name": "end_datetime",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.python_path": {
            "name": "python_path",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.git": {
            "name": "git",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Note.__repr__": {
            "name": "__repr__",
            "location": 263,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseStore.__init__": {
            "name": "__init__",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseStore.load": {
            "name": "load",
            "location": 282,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "return_dataframe": []
            }
        },
        "BaseStore.add": {
            "name": "add",
            "location": 293,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "note": []
            }
        },
        "Store.__init__": {
            "name": "__init__",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Store._create_store_if_not_exists": {
            "name": "_create_store_if_not_exists",
            "location": 419,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store.load": {
            "name": "load",
            "location": 424,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "return_dataframe": []
            }
        },
        "Store._load": {
            "name": "_load",
            "location": 446,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Store.add": {
            "name": "add",
            "location": 451,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note": []
            }
        },
        "Store.update": {
            "name": "update",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "notes": []
            }
        },
        "Store.remove": {
            "name": "remove",
            "location": 519,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "notes": []
            }
        },
        "Store._notes_are_subset": {
            "name": "_notes_are_subset",
            "location": 550,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "notes_subset": [],
                "all_notes": []
            }
        },
        "Store._get_identifers_of_notes": {
            "name": "_get_identifers_of_notes",
            "location": 561,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "notes": []
            }
        },
        "Store._filter_notes": {
            "name": "_filter_notes",
            "location": 564,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "notes_to_filter_out": [],
                "all_notes": []
            }
        },
        "Store._save_notes": {
            "name": "_save_notes",
            "location": 576,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "notes": []
            }
        },
        "Store._sort_notes": {
            "name": "_sort_notes",
            "location": 581,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "notes": []
            }
        },
        "Store._json_load": {
            "name": "_json_load",
            "location": 590,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        },
        "Store._json_dump": {
            "name": "_json_dump",
            "location": 596,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "path": []
            }
        },
        "Store.__repr__": {
            "name": "__repr__",
            "location": 601,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatetimeJSONEncoder.default": {
            "name": "default",
            "location": 614,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "hypernotes-master/hypernotes/__main__.py": {
        "_format_notes_as_html": {
            "name": "_format_notes_as_html",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "notes": []
            }
        },
        "_html_start": {
            "name": "_html_start",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "_html_header": {
            "name": "_html_header",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "js_var_data": [],
                "js_columns": []
            }
        },
        "_html_body": {
            "name": "_html_body",
            "location": 108,
            "return": [
                "str"
            ],
            "arguments": {
                "js_table_tr": []
            }
        },
        "_parse_args": {
            "name": "_parse_args",
            "location": 139,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "raw_args": []
            }
        },
        "DatetimeNonReversibleJSONEncoder.default": {
            "name": "default",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "HTMLResponder.do_GET": {
            "name": "do_GET",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
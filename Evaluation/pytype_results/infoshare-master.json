{
    "infoshare-master/manage.py": {},
    "infoshare-master/bootcamp/helpers.py": {
        "paginate_data": {
            "name": "paginate_data",
            "location": 7,
            "return": [],
            "arguments": {
                "qs": [],
                "page_size": [],
                "page": [],
                "paginated_type": []
            }
        },
        "ajax_required": {
            "name": "ajax_required",
            "location": 30,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "ajax_required.wrap": {
            "name": "wrap",
            "location": 32,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "AuthorRequiredMixin.dispatch": {
            "name": "dispatch",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "infoshare-master/bootcamp/schema.py": {},
    "infoshare-master/bootcamp/__init__.py": {},
    "infoshare-master/bootcamp/articles/admin.py": {},
    "infoshare-master/bootcamp/articles/apps.py": {},
    "infoshare-master/bootcamp/articles/forms.py": {},
    "infoshare-master/bootcamp/articles/models.py": {
        "notify_comment": {
            "name": "notify_comment",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "ArticleQuerySet.get_published": {
            "name": "get_published",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleQuerySet.get_drafts": {
            "name": "get_drafts",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticleQuerySet.get_counted_tags": {
            "name": "get_counted_tags",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.__str__": {
            "name": "__str__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.save": {
            "name": "save",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Article.get_markdown": {
            "name": "get_markdown",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/articles/urls.py": {},
    "infoshare-master/bootcamp/articles/views.py": {
        "ArticlesListView.get_context_data": {
            "name": "get_context_data",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesListView.get_queryset": {
            "name": "get_queryset",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DraftsListView.get_queryset": {
            "name": "get_queryset",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateArticleView.form_valid": {
            "name": "form_valid",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "CreateArticleView.get_success_url": {
            "name": "get_success_url",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditArticleView.form_valid": {
            "name": "form_valid",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "EditArticleView.get_success_url": {
            "name": "get_success_url",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/articles/__init__.py": {},
    "infoshare-master/bootcamp/articles/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/articles/migrations/0002_article_secret.py": {},
    "infoshare-master/bootcamp/articles/migrations/__init__.py": {},
    "infoshare-master/bootcamp/articles/tests/test_models.py": {
        "ArticlesModelsTest.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesModelsTest.test_object_instance": {
            "name": "test_object_instance",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesModelsTest.test_return_values": {
            "name": "test_return_values",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/articles/tests/test_views.py": {
        "get_temp_img": {
            "name": "get_temp_img",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "ArticlesViewsTest.setUp": {
            "name": "setUp",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.tearDown": {
            "name": "tearDown",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_index_articles": {
            "name": "test_index_articles",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_error_404": {
            "name": "test_error_404",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_create_article": {
            "name": "test_create_article",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_single_article": {
            "name": "test_single_article",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ArticlesViewsTest.test_draft_article": {
            "name": "test_draft_article",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/articles/tests/__init__.py": {},
    "infoshare-master/bootcamp/contrib/__init__.py": {},
    "infoshare-master/bootcamp/contrib/sites/__init__.py": {},
    "infoshare-master/bootcamp/contrib/sites/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "infoshare-master/bootcamp/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "infoshare-master/bootcamp/contrib/sites/migrations/__init__.py": {},
    "infoshare-master/bootcamp/groups/admin.py": {},
    "infoshare-master/bootcamp/groups/apps.py": {},
    "infoshare-master/bootcamp/groups/models.py": {},
    "infoshare-master/bootcamp/groups/tests.py": {},
    "infoshare-master/bootcamp/groups/urls.py": {},
    "infoshare-master/bootcamp/groups/views.py": {
        "request_membership": {
            "name": "request_membership",
            "location": 56,
            "return": [],
            "arguments": {
                "request": [],
                "pk": []
            }
        },
        "request_handler": {
            "name": "request_handler",
            "location": 65,
            "return": [],
            "arguments": {
                "request": [],
                "pk": []
            }
        },
        "CreateGroupView.form_valid": {
            "name": "form_valid",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "CreateGroupView.get_success_url": {
            "name": "get_success_url",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GroupsListView.get_queryset": {
            "name": "get_queryset",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GroupDetailView.get_context_data": {
            "name": "get_context_data",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/groups/__init__.py": {},
    "infoshare-master/bootcamp/groups/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/groups/migrations/0002_auto_20180929_1038.py": {},
    "infoshare-master/bootcamp/groups/migrations/0003_auto_20180929_1058.py": {},
    "infoshare-master/bootcamp/groups/migrations/0004_group_type.py": {},
    "infoshare-master/bootcamp/groups/migrations/__init__.py": {},
    "infoshare-master/bootcamp/messager/admin.py": {},
    "infoshare-master/bootcamp/messager/apps.py": {},
    "infoshare-master/bootcamp/messager/consumers.py": {},
    "infoshare-master/bootcamp/messager/models.py": {
        "MessageQuerySet.get_conversation": {
            "name": "get_conversation",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "recipient": []
            }
        },
        "MessageQuerySet.get_most_recent_conversation": {
            "name": "get_most_recent_conversation",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "MessageQuerySet.mark_conversation_as_read": {
            "name": "mark_conversation_as_read",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "sender": [],
                "recipient": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.mark_as_read": {
            "name": "mark_as_read",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.send_message": {
            "name": "send_message",
            "location": 72,
            "return": [],
            "arguments": {
                "sender": [],
                "recipient": [],
                "message": []
            }
        }
    },
    "infoshare-master/bootcamp/messager/schema.py": {
        "MessageQuery.resolve_conversation": {
            "name": "resolve_conversation",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "MessageQuery.resolve_message": {
            "name": "resolve_message",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        }
    },
    "infoshare-master/bootcamp/messager/urls.py": {},
    "infoshare-master/bootcamp/messager/views.py": {
        "send_message": {
            "name": "send_message",
            "location": 55,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "receive_message": {
            "name": "receive_message",
            "location": 77,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "MessagesListView.get_context_data": {
            "name": "get_context_data",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagesListView.get_queryset": {
            "name": "get_queryset",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConversationListView.get_context_data": {
            "name": "get_context_data",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConversationListView.get_queryset": {
            "name": "get_queryset",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/messager/__init__.py": {},
    "infoshare-master/bootcamp/messager/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/messager/migrations/__init__.py": {},
    "infoshare-master/bootcamp/messager/tests/test_models.py": {
        "MessagerModelsTest.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerModelsTest.test_object_instance": {
            "name": "test_object_instance",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerModelsTest.test_return_values": {
            "name": "test_return_values",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerModelsTest.test_conversation": {
            "name": "test_conversation",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerModelsTest.test_recent_conversation": {
            "name": "test_recent_conversation",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerModelsTest.test_single_marking_as_read": {
            "name": "test_single_marking_as_read",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerModelsTest.test_sending_new_message": {
            "name": "test_sending_new_message",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/messager/tests/test_views.py": {
        "MessagerViewsTests.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerViewsTests.test_user_messages": {
            "name": "test_user_messages",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerViewsTests.test_user_conversation": {
            "name": "test_user_conversation",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerViewsTests.test_send_message_view": {
            "name": "test_send_message_view",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerViewsTests.test_wrong_requests_send_message": {
            "name": "test_wrong_requests_send_message",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerViewsTests.test_message_reception_view": {
            "name": "test_message_reception_view",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessagerViewsTests.test_wrong_request_recieve_message_view": {
            "name": "test_wrong_request_recieve_message_view",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/messager/tests/__init__.py": {},
    "infoshare-master/bootcamp/news/admin.py": {},
    "infoshare-master/bootcamp/news/apps.py": {},
    "infoshare-master/bootcamp/news/models.py": {
        "News.__str__": {
            "name": "__str__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.save": {
            "name": "save",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.switch_like": {
            "name": "switch_like",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "News.get_parent": {
            "name": "get_parent",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.reply_this": {
            "name": "reply_this",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "text": []
            }
        },
        "News.get_thread": {
            "name": "get_thread",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.count_thread": {
            "name": "count_thread",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.count_likers": {
            "name": "count_likers",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "News.get_likers": {
            "name": "get_likers",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/news/schema.py": {
        "NewsType.resolve_count_thread": {
            "name": "resolve_count_thread",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "NewsType.resolve_count_likers": {
            "name": "resolve_count_likers",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "NewsQuery.resolve_all_news": {
            "name": "resolve_all_news",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "NewsQuery.resolve_paginated_news": {
            "name": "resolve_paginated_news",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "info": [],
                "page": []
            }
        },
        "NewsQuery.resolve_news": {
            "name": "resolve_news",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        }
    },
    "infoshare-master/bootcamp/news/urls.py": {},
    "infoshare-master/bootcamp/news/views.py": {
        "post_news": {
            "name": "post_news",
            "location": 33,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "like": {
            "name": "like",
            "location": 61,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "get_thread": {
            "name": "get_thread",
            "location": 74,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "post_comment": {
            "name": "post_comment",
            "location": 91,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "update_interactions": {
            "name": "update_interactions",
            "location": 110,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "NewsListView.get_queryset": {
            "name": "get_queryset",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/news/__init__.py": {},
    "infoshare-master/bootcamp/news/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/news/migrations/0002_news_secret.py": {},
    "infoshare-master/bootcamp/news/migrations/__init__.py": {},
    "infoshare-master/bootcamp/news/tests/test_models.py": {
        "NewsModelsTest.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsModelsTest.test_reply_this": {
            "name": "test_reply_this",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsModelsTest.test_switch_like": {
            "name": "test_switch_like",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/news/tests/test_views.py": {
        "NewsViewsTest.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_news_list": {
            "name": "test_news_list",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_delete_news": {
            "name": "test_delete_news",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_post_news": {
            "name": "test_post_news",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_like_news": {
            "name": "test_like_news",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_thread": {
            "name": "test_thread",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_posting_comments": {
            "name": "test_posting_comments",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_updating_interactions": {
            "name": "test_updating_interactions",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/news/tests/__init__.py": {},
    "infoshare-master/bootcamp/notifications/admin.py": {},
    "infoshare-master/bootcamp/notifications/apps.py": {},
    "infoshare-master/bootcamp/notifications/consumers.py": {},
    "infoshare-master/bootcamp/notifications/models.py": {
        "notification_handler": {
            "name": "notification_handler",
            "location": 203,
            "return": [],
            "arguments": {
                "actor": [],
                "recipient": [],
                "verb": []
            }
        },
        "notification_broadcast": {
            "name": "notification_broadcast",
            "location": 253,
            "return": [],
            "arguments": {
                "actor": [],
                "key": []
            }
        },
        "NotificationQuerySet.unread": {
            "name": "unread",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationQuerySet.read": {
            "name": "read",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationQuerySet.mark_all_as_read": {
            "name": "mark_all_as_read",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "NotificationQuerySet.mark_all_as_unread": {
            "name": "mark_all_as_unread",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "NotificationQuerySet.serialize_latest_notifications": {
            "name": "serialize_latest_notifications",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "NotificationQuerySet.get_most_recent": {
            "name": "get_most_recent",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "recipient": []
            }
        },
        "Notification.__str__": {
            "name": "__str__",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Notification.save": {
            "name": "save",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Notification.time_since": {
            "name": "time_since",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "now": []
            }
        },
        "Notification.get_icon": {
            "name": "get_icon",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Notification.mark_as_read": {
            "name": "mark_as_read",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Notification.mark_as_unread": {
            "name": "mark_as_unread",
            "location": 197,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/notifications/urls.py": {},
    "infoshare-master/bootcamp/notifications/views.py": {
        "mark_all_as_read": {
            "name": "mark_all_as_read",
            "location": 23,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "mark_as_read": {
            "name": "mark_as_read",
            "location": 39,
            "return": [],
            "arguments": {
                "request": [],
                "slug": []
            }
        },
        "get_latest_notifications": {
            "name": "get_latest_notifications",
            "location": 58,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "NotificationUnreadListView.get_queryset": {
            "name": "get_queryset",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/notifications/__init__.py": {},
    "infoshare-master/bootcamp/notifications/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/notifications/migrations/__init__.py": {},
    "infoshare-master/bootcamp/notifications/tests/test_models.py": {
        "NotificationsModelsTest.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_return_values": {
            "name": "test_return_values",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_return_unread": {
            "name": "test_return_unread",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_mark_as_read_and_return": {
            "name": "test_mark_as_read_and_return",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_mark_all_as_read": {
            "name": "test_mark_all_as_read",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_get_most_recent": {
            "name": "test_get_most_recent",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_single_notification": {
            "name": "test_single_notification",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_global_notification": {
            "name": "test_global_notification",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NotificationsModelsTest.test_list_notification": {
            "name": "test_list_notification",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/notifications/tests/test_views.py": {
        "NewsViewsTest.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_notification_list": {
            "name": "test_notification_list",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_mark_all_as_read": {
            "name": "test_mark_all_as_read",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_mark_as_read": {
            "name": "test_mark_as_read",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsViewsTest.test_latest_notifications": {
            "name": "test_latest_notifications",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/notifications/tests/__init__.py": {},
    "infoshare-master/bootcamp/qa/apps.py": {},
    "infoshare-master/bootcamp/qa/forms.py": {},
    "infoshare-master/bootcamp/qa/models.py": {
        "QuestionQuerySet.get_answered": {
            "name": "get_answered",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionQuerySet.get_unanswered": {
            "name": "get_unanswered",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionQuerySet.get_counted_tags": {
            "name": "get_counted_tags",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.save": {
            "name": "save",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.__str__": {
            "name": "__str__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.count_answers": {
            "name": "count_answers",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.count_votes": {
            "name": "count_votes",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_upvoters": {
            "name": "get_upvoters",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_downvoters": {
            "name": "get_downvoters",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_answers": {
            "name": "get_answers",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_accepted_answer": {
            "name": "get_accepted_answer",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Question.get_markdown": {
            "name": "get_markdown",
            "location": 133,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.__str__": {
            "name": "__str__",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_markdown": {
            "name": "get_markdown",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.count_votes": {
            "name": "count_votes",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_upvoters": {
            "name": "get_upvoters",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.get_downvoters": {
            "name": "get_downvoters",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Answer.accept_answer": {
            "name": "accept_answer",
            "location": 176,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/qa/urls.py": {},
    "infoshare-master/bootcamp/qa/views.py": {
        "question_vote": {
            "name": "question_vote",
            "location": 99,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "answer_vote": {
            "name": "answer_vote",
            "location": 126,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "accept_answer": {
            "name": "accept_answer",
            "location": 153,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "QuestionsIndexListView.get_context_data": {
            "name": "get_context_data",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionAnsListView.get_queryset": {
            "name": "get_queryset",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionAnsListView.get_context_data": {
            "name": "get_context_data",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionListView.get_queryset": {
            "name": "get_queryset",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QuestionListView.get_context_data": {
            "name": "get_context_data",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateQuestionView.form_valid": {
            "name": "form_valid",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "CreateQuestionView.get_success_url": {
            "name": "get_success_url",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateAnswerView.form_valid": {
            "name": "form_valid",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "CreateAnswerView.get_success_url": {
            "name": "get_success_url",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/qa/__init__.py": {},
    "infoshare-master/bootcamp/qa/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/qa/migrations/0002_vote_secret.py": {},
    "infoshare-master/bootcamp/qa/migrations/0003_auto_20180929_1326.py": {},
    "infoshare-master/bootcamp/qa/migrations/__init__.py": {},
    "infoshare-master/bootcamp/qa/tests/test_models.py": {
        "QAModelsTest.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_can_vote_question": {
            "name": "test_can_vote_question",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_can_vote_answer": {
            "name": "test_can_vote_answer",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_get_question_voters": {
            "name": "test_get_question_voters",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_get_answern_voters": {
            "name": "test_get_answern_voters",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_question_str_return_value": {
            "name": "test_question_str_return_value",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_question_non_answered_question": {
            "name": "test_question_non_answered_question",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_question_answered_question": {
            "name": "test_question_answered_question",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_question_answers_returns": {
            "name": "test_question_answers_returns",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_question_answer_count": {
            "name": "test_question_answer_count",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_question_accepted_answer": {
            "name": "test_question_accepted_answer",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_answer_return_value": {
            "name": "test_answer_return_value",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAModelsTest.test_answer_accept_method": {
            "name": "test_answer_accept_method",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/qa/tests/test_views.py": {
        "QAViewsTest.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_index_questions": {
            "name": "test_index_questions",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_create_question_view": {
            "name": "test_create_question_view",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_answered_questions": {
            "name": "test_answered_questions",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_unanswered_questions": {
            "name": "test_unanswered_questions",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_answer_question": {
            "name": "test_answer_question",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_question_upvote": {
            "name": "test_question_upvote",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_question_downvote": {
            "name": "test_question_downvote",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_answer_upvote": {
            "name": "test_answer_upvote",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_answer_downvote": {
            "name": "test_answer_downvote",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QAViewsTest.test_accept_answer": {
            "name": "test_accept_answer",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/qa/tests/__init__.py": {},
    "infoshare-master/bootcamp/search/apps.py": {},
    "infoshare-master/bootcamp/search/urls.py": {},
    "infoshare-master/bootcamp/search/views.py": {
        "get_suggestions": {
            "name": "get_suggestions",
            "location": 52,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "SearchListView.get_context_data": {
            "name": "get_context_data",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/search/__init__.py": {},
    "infoshare-master/bootcamp/search/tests/test_views.py": {
        "SearchViewsTests.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchViewsTests.test_news_search_results": {
            "name": "test_news_search_results",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchViewsTests.test_questions_suggestions_results": {
            "name": "test_questions_suggestions_results",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/search/tests/__init__.py": {},
    "infoshare-master/bootcamp/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "sociallogin": []
            }
        }
    },
    "infoshare-master/bootcamp/users/admin.py": {
        "MyUserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/models.py": {
        "broadcast_login": {
            "name": "broadcast_login",
            "location": 47,
            "return": [],
            "arguments": {
                "sender": [],
                "user": [],
                "request": []
            }
        },
        "broadcast_logout": {
            "name": "broadcast_logout",
            "location": 52,
            "return": [],
            "arguments": {
                "sender": [],
                "user": [],
                "request": []
            }
        },
        "User.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.get_profile_name": {
            "name": "get_profile_name",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/schema.py": {
        "UserType.resolve_picture": {
            "name": "resolve_picture",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserType.resolve_name": {
            "name": "resolve_name",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserQuery.resolve_all_users": {
            "name": "resolve_all_users",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        },
        "UserQuery.resolve_user": {
            "name": "resolve_user",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "info": []
            }
        }
    },
    "infoshare-master/bootcamp/users/urls.py": {},
    "infoshare-master/bootcamp/users/views.py": {
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/__init__.py": {},
    "infoshare-master/bootcamp/users/migrations/0001_initial.py": {},
    "infoshare-master/bootcamp/users/migrations/__init__.py": {},
    "infoshare-master/bootcamp/users/tests/test_admin.py": {
        "TestMyUserCreationForm.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMyUserCreationForm.test_clean_username_success": {
            "name": "test_clean_username_success",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMyUserCreationForm.test_clean_username_false": {
            "name": "test_clean_username_false",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/tests/test_models.py": {
        "TestUser.setUp": {
            "name": "setUp",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test__str__": {
            "name": "test__str__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_get_absolute_url": {
            "name": "test_get_absolute_url",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUser.test_get_profile_name": {
            "name": "test_get_profile_name",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/tests/test_urls.py": {
        "TestUserURLs.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_list_reverse": {
            "name": "test_list_reverse",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_list_resolve": {
            "name": "test_list_resolve",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_redirect_reverse": {
            "name": "test_redirect_reverse",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_redirect_resolve": {
            "name": "test_redirect_resolve",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_detail_reverse": {
            "name": "test_detail_reverse",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_detail_resolve": {
            "name": "test_detail_resolve",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_update_reverse": {
            "name": "test_update_reverse",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserURLs.test_update_resolve": {
            "name": "test_update_resolve",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/tests/test_views.py": {
        "BaseUserTestCase.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.setUp": {
            "name": "setUp",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/bootcamp/users/tests/__init__.py": {},
    "infoshare-master/config/asgi.py": {},
    "infoshare-master/config/routing.py": {},
    "infoshare-master/config/urls.py": {},
    "infoshare-master/config/wsgi.py": {},
    "infoshare-master/config/__init__.py": {},
    "infoshare-master/config/settings/base.py": {},
    "infoshare-master/config/settings/local.py": {},
    "infoshare-master/config/settings/production.py": {},
    "infoshare-master/config/settings/test.py": {},
    "infoshare-master/config/settings/__init__.py": {},
    "infoshare-master/infoshare/manage.py": {},
    "infoshare-master/infoshare/config/urls.py": {},
    "infoshare-master/infoshare/config/wsgi.py": {},
    "infoshare-master/infoshare/config/__init__.py": {},
    "infoshare-master/infoshare/config/settings/base.py": {},
    "infoshare-master/infoshare/config/settings/local.py": {},
    "infoshare-master/infoshare/config/settings/production.py": {},
    "infoshare-master/infoshare/config/settings/test.py": {},
    "infoshare-master/infoshare/config/settings/__init__.py": {},
    "infoshare-master/infoshare/infoshare/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "infoshare-master/infoshare/infoshare/__init__.py": {},
    "infoshare-master/infoshare/infoshare/contrib/__init__.py": {},
    "infoshare-master/infoshare/infoshare/contrib/sites/__init__.py": {},
    "infoshare-master/infoshare/infoshare/contrib/sites/migrations/0001_initial.py": {},
    "infoshare-master/infoshare/infoshare/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "infoshare-master/infoshare/infoshare/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/contrib/sites/migrations/__init__.py": {},
    "infoshare-master/infoshare/infoshare/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "sociallogin": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/admin.py": {},
    "infoshare-master/infoshare/infoshare/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/urls.py": {},
    "infoshare-master/infoshare/infoshare/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/__init__.py": {},
    "infoshare-master/infoshare/infoshare/users/migrations/0001_initial.py": {},
    "infoshare-master/infoshare/infoshare/users/migrations/__init__.py": {},
    "infoshare-master/infoshare/infoshare/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "create": [],
                "extracted": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [],
            "arguments": {
                "user": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [],
            "arguments": {
                "user": []
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [],
            "arguments": {}
        }
    },
    "infoshare-master/infoshare/infoshare/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        }
    },
    "infoshare-master/infoshare/infoshare/users/tests/__init__.py": {}
}
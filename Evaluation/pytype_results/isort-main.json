{
    "isort-main/example_isort_formatting_plugin/example_isort_formatting_plugin.py": {
        "black_format_import_section": {
            "name": "black_format_import_section",
            "location": 6,
            "return": [],
            "arguments": {
                "contents": [],
                "extension": [],
                "config": []
            }
        }
    },
    "isort-main/example_isort_sorting_plugin/example_isort_sorting_plugin.py": {
        "natural_plus": {
            "name": "natural_plus",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/example_shared_isort_profile/example_shared_isort_profile.py": {},
    "isort-main/isort/api.py": {
        "sort_code_string": {
            "name": "sort_code_string",
            "location": 69,
            "return": [],
            "arguments": {
                "code": [],
                "extension": [],
                "config": [],
                "file_path": [],
                "disregard_skip": [],
                "show_diff": []
            }
        },
        "check_code_string": {
            "name": "check_code_string",
            "location": 105,
            "return": [],
            "arguments": {
                "code": [],
                "show_diff": [],
                "extension": [],
                "config": [],
                "file_path": [],
                "disregard_skip": []
            }
        },
        "sort_stream": {
            "name": "sort_stream",
            "location": 137,
            "return": [],
            "arguments": {
                "input_stream": [],
                "output_stream": [],
                "extension": [],
                "config": [],
                "file_path": [],
                "disregard_skip": [],
                "show_diff": [],
                "raise_on_skip": []
            }
        },
        "check_stream": {
            "name": "check_stream",
            "location": 238,
            "return": [],
            "arguments": {
                "input_stream": [],
                "show_diff": [],
                "extension": [],
                "config": [],
                "file_path": [],
                "disregard_skip": []
            }
        },
        "check_file": {
            "name": "check_file",
            "location": 305,
            "return": [],
            "arguments": {
                "filename": [],
                "show_diff": [],
                "config": [],
                "file_path": [],
                "disregard_skip": [],
                "extension": []
            }
        },
        "_tmp_file": {
            "name": "_tmp_file",
            "location": 349,
            "return": [],
            "arguments": {
                "source_file": []
            }
        },
        "_in_memory_output_stream_context": {
            "name": "_in_memory_output_stream_context",
            "location": 354,
            "return": [],
            "arguments": {}
        },
        "_file_output_stream_context": {
            "name": "_file_output_stream_context",
            "location": 359,
            "return": [],
            "arguments": {
                "filename": [],
                "source_file": []
            }
        },
        "sort_file": {
            "name": "sort_file",
            "location": 366,
            "return": [],
            "arguments": {
                "filename": [],
                "extension": [],
                "config": [],
                "file_path": [],
                "disregard_skip": [],
                "ask_to_apply": [],
                "show_diff": [],
                "write_to_stdout": [],
                "output": []
            }
        },
        "find_imports_in_code": {
            "name": "find_imports_in_code",
            "location": 504,
            "return": [],
            "arguments": {
                "code": [],
                "config": [],
                "file_path": [],
                "unique": [],
                "top_only": []
            }
        },
        "find_imports_in_stream": {
            "name": "find_imports_in_stream",
            "location": 531,
            "return": [],
            "arguments": {
                "input_stream": [],
                "config": [],
                "file_path": [],
                "unique": [],
                "top_only": [],
                "_seen": []
            }
        },
        "find_imports_in_file": {
            "name": "find_imports_in_file",
            "location": 573,
            "return": [],
            "arguments": {
                "filename": [],
                "config": [],
                "file_path": [],
                "unique": [],
                "top_only": []
            }
        },
        "find_imports_in_paths": {
            "name": "find_imports_in_paths",
            "location": 602,
            "return": [],
            "arguments": {
                "paths": [],
                "config": [],
                "file_path": [],
                "unique": [],
                "top_only": []
            }
        },
        "_config": {
            "name": "_config",
            "location": 632,
            "return": [],
            "arguments": {
                "path": [],
                "config": []
            }
        }
    },
    "isort-main/isort/comments.py": {
        "parse": {
            "name": "parse",
            "location": 4,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "add_to_line": {
            "name": "add_to_line",
            "location": 15,
            "return": [],
            "arguments": {
                "comments": [],
                "original_string": [],
                "removed": [],
                "comment_prefix": []
            }
        }
    },
    "isort-main/isort/core.py": {
        "process": {
            "name": "process",
            "location": 34,
            "return": [],
            "arguments": {
                "input_stream": [],
                "output_stream": [],
                "extension": [],
                "raise_on_skip": [],
                "config": []
            }
        },
        "_indented_config": {
            "name": "_indented_config",
            "location": 489,
            "return": [],
            "arguments": {
                "config": [],
                "indent": []
            }
        },
        "_has_changed": {
            "name": "_has_changed",
            "location": 503,
            "return": [],
            "arguments": {
                "before": [],
                "after": [],
                "line_separator": [],
                "ignore_whitespace": []
            }
        }
    },
    "isort-main/isort/exceptions.py": {
        "ISortError.__reduce__": {
            "name": "__reduce__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidSettingsPath.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "settings_path": []
            }
        },
        "ExistingSyntaxErrors.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "IntroducedSyntaxErrors.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "FileSkipped.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "file_path": []
            }
        },
        "FileSkipComment.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "FileSkipSetting.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "ProfileDoesNotExist.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "profile": []
            }
        },
        "SortingFunctionDoesNotExist.__init__": {
            "name": "__init__",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "sort_order": [],
                "available_sort_orders": []
            }
        },
        "FormattingPluginDoesNotExist.__init__": {
            "name": "__init__",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "formatter": []
            }
        },
        "LiteralParsingFailure.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "code": [],
                "original_error": []
            }
        },
        "LiteralSortTypeMismatch.__init__": {
            "name": "__init__",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "kind": [],
                "expected_kind": []
            }
        },
        "AssignmentsFormatMismatch.__init__": {
            "name": "__init__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "UnsupportedSettings._format_option": {
            "name": "_format_option",
            "location": 163,
            "return": [],
            "arguments": {
                "name": [],
                "value": [],
                "source": []
            }
        },
        "UnsupportedSettings.__init__": {
            "name": "__init__",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "unsupported_settings": []
            }
        },
        "UnsupportedEncoding.__init__": {
            "name": "__init__",
            "location": 183,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "MissingSection.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "import_module": [],
                "section": []
            }
        }
    },
    "isort-main/isort/files.py": {
        "find": {
            "name": "find",
            "location": 8,
            "return": [],
            "arguments": {
                "paths": [],
                "config": [],
                "skipped": [],
                "broken": []
            }
        }
    },
    "isort-main/isort/format.py": {
        "format_simplified": {
            "name": "format_simplified",
            "location": 21,
            "return": [],
            "arguments": {
                "import_line": []
            }
        },
        "format_natural": {
            "name": "format_natural",
            "location": 32,
            "return": [],
            "arguments": {
                "import_line": []
            }
        },
        "show_unified_diff": {
            "name": "show_unified_diff",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "ask_whether_to_apply_changes_to_file": {
            "name": "ask_whether_to_apply_changes_to_file",
            "location": 77,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "remove_whitespace": {
            "name": "remove_whitespace",
            "location": 89,
            "return": [],
            "arguments": {
                "content": [],
                "line_separator": []
            }
        },
        "create_terminal_printer": {
            "name": "create_terminal_printer",
            "location": 139,
            "return": [],
            "arguments": {
                "color": [],
                "output": [],
                "error": [],
                "success": []
            }
        },
        "BasicPrinter.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "error": [],
                "success": [],
                "output": []
            }
        },
        "BasicPrinter.success": {
            "name": "success",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "BasicPrinter.error": {
            "name": "error",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "BasicPrinter.diff_line": {
            "name": "diff_line",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "ColoramaPrinter.__init__": {
            "name": "__init__",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "error": [],
                "success": [],
                "output": []
            }
        },
        "ColoramaPrinter.style_text": {
            "name": "style_text",
            "location": 125,
            "return": [],
            "arguments": {
                "text": [],
                "style": []
            }
        },
        "ColoramaPrinter.diff_line": {
            "name": "diff_line",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "line": []
            }
        }
    },
    "isort-main/isort/hooks.py": {
        "get_output": {
            "name": "get_output",
            "location": 14,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "get_lines": {
            "name": "get_lines",
            "location": 24,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "git_hook": {
            "name": "git_hook",
            "location": 34,
            "return": [],
            "arguments": {
                "strict": [],
                "modify": [],
                "lazy": [],
                "settings_file": []
            }
        }
    },
    "isort-main/isort/identify.py": {
        "imports": {
            "name": "imports",
            "location": 42,
            "return": [],
            "arguments": {
                "input_stream": [],
                "config": [],
                "file_path": [],
                "top_only": []
            }
        },
        "Import.statement": {
            "name": "statement",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Import.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/isort/io.py": {
        "File.detect_encoding": {
            "name": "detect_encoding",
            "location": 22,
            "return": [],
            "arguments": {
                "filename": [],
                "readline": []
            }
        },
        "File.from_contents": {
            "name": "from_contents",
            "location": 29,
            "return": [],
            "arguments": {
                "contents": [],
                "filename": []
            }
        },
        "File.extension": {
            "name": "extension",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "File._open": {
            "name": "_open",
            "location": 40,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "File.read": {
            "name": "read",
            "location": 57,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "_EmptyIO.write": {
            "name": "write",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/isort/literal.py": {
        "assignments": {
            "name": "assignments",
            "location": 23,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "assignment": {
            "name": "assignment",
            "location": 38,
            "return": [],
            "arguments": {
                "code": [],
                "sort_type": [],
                "extension": [],
                "config": []
            }
        },
        "register_type": {
            "name": "register_type",
            "location": 72,
            "return": [],
            "arguments": {
                "name": [],
                "kind": []
            }
        },
        "_dict": {
            "name": "_dict",
            "location": 87,
            "return": [],
            "arguments": {
                "value": [],
                "printer": []
            }
        },
        "_list": {
            "name": "_list",
            "location": 92,
            "return": [],
            "arguments": {
                "value": [],
                "printer": []
            }
        },
        "_unique_list": {
            "name": "_unique_list",
            "location": 97,
            "return": [],
            "arguments": {
                "value": [],
                "printer": []
            }
        },
        "_set": {
            "name": "_set",
            "location": 102,
            "return": [],
            "arguments": {
                "value": [],
                "printer": []
            }
        },
        "_tuple": {
            "name": "_tuple",
            "location": 107,
            "return": [],
            "arguments": {
                "value": [],
                "printer": []
            }
        },
        "_unique_tuple": {
            "name": "_unique_tuple",
            "location": 112,
            "return": [],
            "arguments": {
                "value": [],
                "printer": []
            }
        },
        "ISortPrettyPrinter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "register_type.wrap": {
            "name": "wrap",
            "location": 77,
            "return": [],
            "arguments": {
                "function": []
            }
        }
    },
    "isort-main/isort/logo.py": {},
    "isort-main/isort/main.py": {
        "sort_imports": {
            "name": "sort_imports",
            "location": 74,
            "return": [],
            "arguments": {
                "file_name": [],
                "config": [],
                "check": [],
                "ask_to_apply": [],
                "write_to_stdout": []
            }
        },
        "_print_hard_fail": {
            "name": "_print_hard_fail",
            "location": 118,
            "return": [],
            "arguments": {
                "config": [],
                "offending_file": [],
                "message": []
            }
        },
        "_build_arg_parser": {
            "name": "_build_arg_parser",
            "location": 133,
            "return": [],
            "arguments": {}
        },
        "parse_args": {
            "name": "parse_args",
            "location": 925,
            "return": [],
            "arguments": {
                "argv": []
            }
        },
        "_preconvert": {
            "name": "_preconvert",
            "location": 959,
            "return": [],
            "arguments": {
                "item": []
            }
        },
        "identify_imports_main": {
            "name": "identify_imports_main",
            "location": 972,
            "return": [],
            "arguments": {
                "argv": [],
                "stdin": []
            }
        },
        "main": {
            "name": "main",
            "location": 1058,
            "return": [],
            "arguments": {
                "argv": [],
                "stdin": []
            }
        },
        "SortAttempt.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "incorrectly_sorted": [],
                "skipped": [],
                "supported_encoding": []
            }
        }
    },
    "isort-main/isort/output.py": {
        "sorted_imports": {
            "name": "sorted_imports",
            "location": 14,
            "return": [],
            "arguments": {
                "parsed": [],
                "config": [],
                "extension": [],
                "import_type": []
            }
        },
        "_with_from_imports": {
            "name": "_with_from_imports",
            "location": 239,
            "return": [],
            "arguments": {
                "parsed": [],
                "config": [],
                "from_modules": [],
                "section": [],
                "remove_imports": [],
                "import_type": []
            }
        },
        "_with_straight_imports": {
            "name": "_with_straight_imports",
            "location": 551,
            "return": [],
            "arguments": {
                "parsed": [],
                "config": [],
                "straight_modules": [],
                "section": [],
                "remove_imports": [],
                "import_type": []
            }
        },
        "_output_as_string": {
            "name": "_output_as_string",
            "location": 625,
            "return": [],
            "arguments": {
                "lines": [],
                "line_separator": []
            }
        },
        "_normalize_empty_lines": {
            "name": "_normalize_empty_lines",
            "location": 629,
            "return": [],
            "arguments": {
                "lines": []
            }
        },
        "_ensure_newline_before_comment": {
            "name": "_ensure_newline_before_comment",
            "location": 648,
            "return": [],
            "arguments": {
                "output": []
            }
        },
        "_with_star_comments": {
            "name": "_with_star_comments",
            "location": 661,
            "return": [],
            "arguments": {
                "parsed": [],
                "module": [],
                "comments": []
            }
        },
        "_LineWithComments.__new__": {
            "name": "__new__",
            "location": 640,
            "return": [],
            "arguments": {
                "cls": [],
                "value": [],
                "comments": []
            }
        },
        "_ensure_newline_before_comment.is_comment": {
            "name": "is_comment",
            "location": 651,
            "return": [],
            "arguments": {
                "line": []
            }
        }
    },
    "isort-main/isort/parse.py": {
        "_infer_line_separator": {
            "name": "_infer_line_separator",
            "location": 31,
            "return": [],
            "arguments": {
                "contents": []
            }
        },
        "_normalize_line": {
            "name": "_normalize_line",
            "location": 39,
            "return": [],
            "arguments": {
                "raw_line": []
            }
        },
        "import_type": {
            "name": "import_type",
            "location": 53,
            "return": [],
            "arguments": {
                "line": [],
                "config": []
            }
        },
        "_strip_syntax": {
            "name": "_strip_syntax",
            "location": 66,
            "return": [],
            "arguments": {
                "import_string": []
            }
        },
        "skip_line": {
            "name": "skip_line",
            "location": 81,
            "return": [],
            "arguments": {
                "line": [],
                "in_quote": [],
                "index": [],
                "section_comments": [],
                "needs_import": []
            }
        },
        "file_contents": {
            "name": "file_contents",
            "location": 144,
            "return": [],
            "arguments": {
                "contents": [],
                "config": []
            }
        }
    },
    "isort-main/isort/place.py": {
        "module": {
            "name": "module",
            "location": 15,
            "return": [],
            "arguments": {
                "name": [],
                "config": []
            }
        },
        "module_with_reason": {
            "name": "module_with_reason",
            "location": 21,
            "return": [],
            "arguments": {
                "name": [],
                "config": []
            }
        },
        "_forced_separate": {
            "name": "_forced_separate",
            "location": 32,
            "return": [],
            "arguments": {
                "name": [],
                "config": []
            }
        },
        "_local": {
            "name": "_local",
            "location": 45,
            "return": [],
            "arguments": {
                "name": [],
                "config": []
            }
        },
        "_known_pattern": {
            "name": "_known_pattern",
            "location": 52,
            "return": [],
            "arguments": {
                "name": [],
                "config": []
            }
        },
        "_src_path": {
            "name": "_src_path",
            "location": 63,
            "return": [],
            "arguments": {
                "name": [],
                "config": [],
                "src_paths": [],
                "prefix": []
            }
        },
        "_is_module": {
            "name": "_is_module",
            "location": 98,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_is_package": {
            "name": "_is_package",
            "location": 109,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_is_namespace_package": {
            "name": "_is_namespace_package",
            "location": 113,
            "return": [],
            "arguments": {
                "path": [],
                "src_extensions": []
            }
        },
        "_src_path_is_module": {
            "name": "_src_path_is_module",
            "location": 142,
            "return": [],
            "arguments": {
                "src_path": [],
                "module_name": []
            }
        }
    },
    "isort-main/isort/profiles.py": {},
    "isort-main/isort/pylama_isort.py": {
        "suppress_stdout": {
            "name": "suppress_stdout",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "Linter.allow": {
            "name": "allow",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Linter.run": {
            "name": "run",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "params": []
            }
        }
    },
    "isort-main/isort/sections.py": {},
    "isort-main/isort/settings.py": {
        "_get_str_to_type_converter": {
            "name": "_get_str_to_type_converter",
            "location": 743,
            "return": [],
            "arguments": {
                "setting_name": []
            }
        },
        "_as_list": {
            "name": "_as_list",
            "location": 752,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_abspaths": {
            "name": "_abspaths",
            "location": 759,
            "return": [],
            "arguments": {
                "cwd": [],
                "values": []
            }
        },
        "_find_config": {
            "name": "_find_config",
            "location": 770,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "find_all_configs": {
            "name": "find_all_configs",
            "location": 803,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "_get_config_data": {
            "name": "_get_config_data",
            "location": 832,
            "return": [],
            "arguments": {
                "file_path": [],
                "sections": []
            }
        },
        "_as_bool": {
            "name": "_as_bool",
            "location": 927,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "_Config.__post_init__": {
            "name": "__post_init__",
            "location": 248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_Config.__hash__": {
            "name": "__hash__",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.__init__": {
            "name": "__init__",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "settings_file": [],
                "settings_path": [],
                "config": []
            }
        },
        "Config.is_supported_filetype": {
            "name": "is_supported_filetype",
            "location": 530,
            "return": [],
            "arguments": {
                "self": [],
                "file_name": []
            }
        },
        "Config._check_folder_git_ls_files": {
            "name": "_check_folder_git_ls_files",
            "location": 556,
            "return": [],
            "arguments": {
                "self": [],
                "folder": []
            }
        },
        "Config.is_skipped": {
            "name": "is_skipped",
            "location": 593,
            "return": [],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "Config.known_patterns": {
            "name": "known_patterns",
            "location": 651,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.section_comments": {
            "name": "section_comments",
            "location": 675,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.section_comments_end": {
            "name": "section_comments_end",
            "location": 683,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.skips": {
            "name": "skips",
            "location": 691,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.skip_globs": {
            "name": "skip_globs",
            "location": 699,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config.sorting_function": {
            "name": "sorting_function",
            "location": 707,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Config._parse_known_pattern": {
            "name": "_parse_known_pattern",
            "location": 729,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        }
    },
    "isort-main/isort/setuptools_commands.py": {
        "ISortCommand.initialize_options": {
            "name": "initialize_options",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ISortCommand.finalize_options": {
            "name": "finalize_options",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ISortCommand.distribution_files": {
            "name": "distribution_files",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ISortCommand.run": {
            "name": "run",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/isort/sorting.py": {
        "module_key": {
            "name": "module_key",
            "location": 13,
            "return": [],
            "arguments": {
                "module_name": [],
                "config": [],
                "sub_imports": [],
                "ignore_case": [],
                "section_name": [],
                "straight_import": []
            }
        },
        "section_key": {
            "name": "section_key",
            "location": 57,
            "return": [],
            "arguments": {
                "line": [],
                "config": []
            }
        },
        "sort": {
            "name": "sort",
            "location": 102,
            "return": [],
            "arguments": {
                "config": [],
                "to_sort": [],
                "key": [],
                "reverse": []
            }
        },
        "naturally": {
            "name": "naturally",
            "location": 111,
            "return": [],
            "arguments": {
                "to_sort": [],
                "key": [],
                "reverse": []
            }
        },
        "_atoi": {
            "name": "_atoi",
            "location": 125,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "_natural_keys": {
            "name": "_natural_keys",
            "location": 129,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "naturally.key_callback": {
            "name": "key_callback",
            "location": 119,
            "return": [],
            "arguments": {
                "text": []
            }
        }
    },
    "isort-main/isort/utils.py": {
        "exists_case_sensitive": {
            "name": "exists_case_sensitive",
            "location": 61,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "TrieNode.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": [],
                "config_data": []
            }
        },
        "Trie.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": [],
                "config_data": []
            }
        },
        "Trie.insert": {
            "name": "insert",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": [],
                "config_data": []
            }
        },
        "Trie.search": {
            "name": "search",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        }
    },
    "isort-main/isort/wrap.py": {
        "import_statement": {
            "name": "import_statement",
            "location": 10,
            "return": [],
            "arguments": {
                "import_start": [],
                "from_imports": [],
                "comments": [],
                "line_separator": [],
                "config": [],
                "multi_line_output": [],
                "explode": []
            }
        },
        "line": {
            "name": "line",
            "location": 71,
            "return": [],
            "arguments": {
                "content": [],
                "line_separator": [],
                "config": []
            }
        }
    },
    "isort-main/isort/wrap_modes.py": {
        "from_string": {
            "name": "from_string",
            "location": 11,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "formatter_from_string": {
            "name": "formatter_from_string",
            "location": 15,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "_wrap_mode_interface": {
            "name": "_wrap_mode_interface",
            "location": 19,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "_wrap_mode": {
            "name": "_wrap_mode",
            "location": 35,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "grid": {
            "name": "grid",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "vertical": {
            "name": "vertical",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "_hanging_indent_end_line": {
            "name": "_hanging_indent_end_line",
            "location": 109,
            "return": [],
            "arguments": {
                "line": []
            }
        },
        "hanging_indent": {
            "name": "hanging_indent",
            "location": 116,
            "return": [],
            "arguments": {}
        },
        "vertical_hanging_indent": {
            "name": "vertical_hanging_indent",
            "location": 172,
            "return": [],
            "arguments": {}
        },
        "_vertical_grid_common": {
            "name": "_vertical_grid_common",
            "location": 187,
            "return": [],
            "arguments": {
                "need_trailing_char": []
            }
        },
        "vertical_grid": {
            "name": "vertical_grid",
            "location": 224,
            "return": [],
            "arguments": {}
        },
        "vertical_grid_grouped": {
            "name": "vertical_grid_grouped",
            "location": 229,
            "return": [],
            "arguments": {}
        },
        "vertical_grid_grouped_no_comma": {
            "name": "vertical_grid_grouped_no_comma",
            "location": 238,
            "return": [],
            "arguments": {}
        },
        "noqa": {
            "name": "noqa",
            "location": 245,
            "return": [],
            "arguments": {}
        },
        "vertical_hanging_indent_bracket": {
            "name": "vertical_hanging_indent_bracket",
            "location": 265,
            "return": [],
            "arguments": {}
        },
        "vertical_prefix_from_module_import": {
            "name": "vertical_prefix_from_module_import",
            "location": 273,
            "return": [],
            "arguments": {}
        },
        "hanging_indent_with_parentheses": {
            "name": "hanging_indent_with_parentheses",
            "location": 313,
            "return": [],
            "arguments": {}
        },
        "backslash_grid": {
            "name": "backslash_grid",
            "location": 369,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/isort/_version.py": {},
    "isort-main/isort/__init__.py": {},
    "isort-main/isort/__main__.py": {},
    "isort-main/isort/deprecated/finders.py": {
        "chdir": {
            "name": "chdir",
            "location": 41,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "BaseFinder.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "BaseFinder.find": {
            "name": "find",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "ForcedSeparateFinder.find": {
            "name": "find",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "LocalFinder.find": {
            "name": "find",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "KnownPatternFinder.__init__": {
            "name": "__init__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "KnownPatternFinder._parse_known_pattern": {
            "name": "_parse_known_pattern",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "KnownPatternFinder.find": {
            "name": "find",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "PathFinder.__init__": {
            "name": "__init__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "path": []
            }
        },
        "PathFinder.find": {
            "name": "find",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "ReqsBaseFinder.__init__": {
            "name": "__init__",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "path": []
            }
        },
        "ReqsBaseFinder._get_names": {
            "name": "_get_names",
            "location": 217,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ReqsBaseFinder._get_files_from_dir": {
            "name": "_get_files_from_dir",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "ReqsBaseFinder._load_mapping": {
            "name": "_load_mapping",
            "location": 225,
            "return": [],
            "arguments": {}
        },
        "ReqsBaseFinder._load_names": {
            "name": "_load_names",
            "location": 243,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReqsBaseFinder._get_parents": {
            "name": "_get_parents",
            "location": 252,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "ReqsBaseFinder._get_files": {
            "name": "_get_files",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReqsBaseFinder._normalize_name": {
            "name": "_normalize_name",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ReqsBaseFinder.find": {
            "name": "find",
            "location": 280,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "RequirementsFinder._get_files_from_dir": {
            "name": "_get_files_from_dir",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "RequirementsFinder._get_files_from_dir_cached": {
            "name": "_get_files_from_dir_cached",
            "location": 306,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "RequirementsFinder._get_names": {
            "name": "_get_names",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "RequirementsFinder._get_names_cached": {
            "name": "_get_names_cached",
            "location": 337,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "PipfileFinder._get_names": {
            "name": "_get_names",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "PipfileFinder._get_files_from_dir": {
            "name": "_get_files_from_dir",
            "location": 358,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "DefaultFinder.find": {
            "name": "find",
            "location": 364,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        },
        "FindersManager.__init__": {
            "name": "__init__",
            "location": 379,
            "return": [],
            "arguments": {
                "self": [],
                "config": [],
                "finder_classes": []
            }
        },
        "FindersManager.find": {
            "name": "find",
            "location": 401,
            "return": [],
            "arguments": {
                "self": [],
                "module_name": []
            }
        }
    },
    "isort-main/isort/deprecated/__init__.py": {},
    "isort-main/isort/stdlibs/all.py": {},
    "isort-main/isort/stdlibs/py2.py": {},
    "isort-main/isort/stdlibs/py27.py": {},
    "isort-main/isort/stdlibs/py3.py": {},
    "isort-main/isort/stdlibs/py310.py": {},
    "isort-main/isort/stdlibs/py35.py": {},
    "isort-main/isort/stdlibs/py36.py": {},
    "isort-main/isort/stdlibs/py37.py": {},
    "isort-main/isort/stdlibs/py38.py": {},
    "isort-main/isort/stdlibs/py39.py": {},
    "isort-main/isort/stdlibs/__init__.py": {},
    "isort-main/isort/_future/_dataclasses.py": {
        "field": {
            "name": "field",
            "location": 328,
            "return": [],
            "arguments": {}
        },
        "_tuple_str": {
            "name": "_tuple_str",
            "location": 355,
            "return": [],
            "arguments": {
                "obj_name": [],
                "fields": []
            }
        },
        "_create_fn": {
            "name": "_create_fn",
            "location": 367,
            "return": [],
            "arguments": {
                "name": [],
                "args": [],
                "body": []
            }
        },
        "_field_assign": {
            "name": "_field_assign",
            "location": 387,
            "return": [],
            "arguments": {
                "frozen": [],
                "name": [],
                "value": [],
                "self_name": []
            }
        },
        "_field_init": {
            "name": "_field_init",
            "location": 399,
            "return": [],
            "arguments": {
                "f": [],
                "frozen": [],
                "globals": [],
                "self_name": []
            }
        },
        "_init_param": {
            "name": "_init_param",
            "location": 451,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "_init_fn": {
            "name": "_init_fn",
            "location": 470,
            "return": [],
            "arguments": {
                "fields": [],
                "frozen": [],
                "has_post_init": [],
                "self_name": []
            }
        },
        "_repr_fn": {
            "name": "_repr_fn",
            "location": 517,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "_frozen_get_del_attr": {
            "name": "_frozen_get_del_attr",
            "location": 529,
            "return": [],
            "arguments": {
                "cls": [],
                "fields": []
            }
        },
        "_cmp_fn": {
            "name": "_cmp_fn",
            "location": 562,
            "return": [],
            "arguments": {
                "name": [],
                "op": [],
                "self_tuple": [],
                "other_tuple": []
            }
        },
        "_hash_fn": {
            "name": "_hash_fn",
            "location": 579,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "_is_classvar": {
            "name": "_is_classvar",
            "location": 584,
            "return": [],
            "arguments": {
                "a_type": [],
                "typing": []
            }
        },
        "_is_initvar": {
            "name": "_is_initvar",
            "location": 590,
            "return": [],
            "arguments": {
                "a_type": [],
                "dataclasses": []
            }
        },
        "_is_type": {
            "name": "_is_type",
            "location": 596,
            "return": [],
            "arguments": {
                "annotation": [],
                "cls": [],
                "a_module": [],
                "a_type": [],
                "is_type_predicate": []
            }
        },
        "_get_field": {
            "name": "_get_field",
            "location": 655,
            "return": [],
            "arguments": {
                "cls": [],
                "a_name": [],
                "a_type": []
            }
        },
        "_set_new_attribute": {
            "name": "_set_new_attribute",
            "location": 737,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "value": []
            }
        },
        "_hash_set_none": {
            "name": "_hash_set_none",
            "location": 752,
            "return": [],
            "arguments": {
                "cls": [],
                "fields": []
            }
        },
        "_hash_add": {
            "name": "_hash_add",
            "location": 756,
            "return": [],
            "arguments": {
                "cls": [],
                "fields": []
            }
        },
        "_hash_exception": {
            "name": "_hash_exception",
            "location": 761,
            "return": [],
            "arguments": {
                "cls": [],
                "fields": []
            }
        },
        "_process_class": {
            "name": "_process_class",
            "location": 797,
            "return": [],
            "arguments": {
                "cls": [],
                "init": [],
                "repr": [],
                "eq": [],
                "order": [],
                "unsafe_hash": [],
                "frozen": []
            }
        },
        "dataclass": {
            "name": "dataclass",
            "location": 967,
            "return": [],
            "arguments": {
                "_cls": []
            }
        },
        "fields": {
            "name": "fields",
            "location": 992,
            "return": [],
            "arguments": {
                "class_or_instance": []
            }
        },
        "_is_dataclass_instance": {
            "name": "_is_dataclass_instance",
            "location": 1009,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "is_dataclass": {
            "name": "is_dataclass",
            "location": 1014,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "asdict": {
            "name": "asdict",
            "location": 1020,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_asdict_inner": {
            "name": "_asdict_inner",
            "location": 1040,
            "return": [],
            "arguments": {
                "obj": [],
                "dict_factory": []
            }
        },
        "astuple": {
            "name": "astuple",
            "location": 1057,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_astuple_inner": {
            "name": "_astuple_inner",
            "location": 1077,
            "return": [],
            "arguments": {
                "obj": [],
                "tuple_factory": []
            }
        },
        "make_dataclass": {
            "name": "make_dataclass",
            "location": 1095,
            "return": [],
            "arguments": {
                "cls_name": [],
                "fields": []
            }
        },
        "replace": {
            "name": "replace",
            "location": 1169,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "_HAS_DEFAULT_FACTORY_CLASS.__repr__": {
            "name": "__repr__",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FIELD_BASE.__init__": {
            "name": "__init__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "_FIELD_BASE.__repr__": {
            "name": "__repr__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_InitVarMeta.__getitem__": {
            "name": "__getitem__",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "Field.__init__": {
            "name": "__init__",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "default": [],
                "default_factory": [],
                "init": [],
                "repr": [],
                "hash": [],
                "compare": [],
                "metadata": []
            }
        },
        "Field.__repr__": {
            "name": "__repr__",
            "location": 269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Field.__set_name__": {
            "name": "__set_name__",
            "location": 293,
            "return": [],
            "arguments": {
                "self": [],
                "owner": [],
                "name": []
            }
        },
        "_DataclassParams.__init__": {
            "name": "__init__",
            "location": 304,
            "return": [],
            "arguments": {
                "self": [],
                "init": [],
                "repr": [],
                "eq": [],
                "order": [],
                "unsafe_hash": [],
                "frozen": []
            }
        },
        "_DataclassParams.__repr__": {
            "name": "__repr__",
            "location": 312,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "dataclass.wrap": {
            "name": "wrap",
            "location": 980,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "isort-main/isort/_future/__init__.py": {},
    "isort-main/isort/_vendored/tomli/_parser.py": {
        "load": {
            "name": "load",
            "location": 55,
            "return": [],
            "arguments": {
                "fp": []
            }
        },
        "loads": {
            "name": "loads",
            "location": 69,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "skip_chars": {
            "name": "skip_chars",
            "location": 232,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "chars": []
            }
        },
        "skip_until": {
            "name": "skip_until",
            "location": 241,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "expect": []
            }
        },
        "skip_comment": {
            "name": "skip_comment",
            "location": 263,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "skip_comments_and_array_ws": {
            "name": "skip_comments_and_array_ws",
            "location": 273,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "create_dict_rule": {
            "name": "create_dict_rule",
            "location": 282,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": []
            }
        },
        "create_list_rule": {
            "name": "create_list_rule",
            "location": 300,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": []
            }
        },
        "key_value_rule": {
            "name": "key_value_rule",
            "location": 321,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "out": [],
                "header": [],
                "parse_float": []
            }
        },
        "parse_key_value_pair": {
            "name": "parse_key_value_pair",
            "location": 343,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_key": {
            "name": "parse_key",
            "location": 357,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_key_part": {
            "name": "parse_key_part",
            "location": 375,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_one_line_basic_str": {
            "name": "parse_one_line_basic_str",
            "location": 391,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_array": {
            "name": "parse_array",
            "location": 396,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_inline_table": {
            "name": "parse_inline_table",
            "location": 420,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "parse_basic_str_escape": {
            "name": "parse_basic_str_escape",
            "location": 452,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_basic_str_escape_multiline": {
            "name": "parse_basic_str_escape_multiline",
            "location": 483,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_hex_char": {
            "name": "parse_hex_char",
            "location": 487,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "hex_len": []
            }
        },
        "parse_literal_str": {
            "name": "parse_literal_str",
            "location": 498,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_multiline_str": {
            "name": "parse_multiline_str",
            "location": 505,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_basic_str": {
            "name": "parse_basic_str",
            "location": 536,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        },
        "parse_value": {
            "name": "parse_value",
            "location": 568,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "parse_float": []
            }
        },
        "suffixed_err": {
            "name": "suffixed_err",
            "location": 632,
            "return": [],
            "arguments": {
                "src": [],
                "pos": [],
                "msg": []
            }
        },
        "is_unicode_scalar_value": {
            "name": "is_unicode_scalar_value",
            "location": 649,
            "return": [],
            "arguments": {
                "codepoint": []
            }
        },
        "Flags.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Flags.unset_all": {
            "name": "unset_all",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Flags.set_for_relative_key": {
            "name": "set_for_relative_key",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "head_key": [],
                "rel_key": [],
                "flag": []
            }
        },
        "Flags.set": {
            "name": "set",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "Flags.is_": {
            "name": "is_",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "flag": []
            }
        },
        "NestedDict.__init__": {
            "name": "__init__",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NestedDict.get_or_create_nest": {
            "name": "get_or_create_nest",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "NestedDict.append_nest_to_list": {
            "name": "append_nest_to_list",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "suffixed_err.coord_repr": {
            "name": "coord_repr",
            "location": 636,
            "return": [],
            "arguments": {
                "src": [],
                "pos": []
            }
        }
    },
    "isort-main/isort/_vendored/tomli/_re.py": {
        "match_to_datetime": {
            "name": "match_to_datetime",
            "location": 47,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "cached_tz": {
            "name": "cached_tz",
            "location": 81,
            "return": [],
            "arguments": {
                "hour_str": [],
                "minute_str": [],
                "sign_str": []
            }
        },
        "match_to_localtime": {
            "name": "match_to_localtime",
            "location": 91,
            "return": [],
            "arguments": {
                "match": []
            }
        },
        "match_to_number": {
            "name": "match_to_number",
            "location": 97,
            "return": [],
            "arguments": {
                "match": [],
                "parse_float": []
            }
        }
    },
    "isort-main/isort/_vendored/tomli/__init__.py": {},
    "isort-main/scripts/build_config_option_docs.py": {
        "config_default": {
            "name": "config_default",
            "location": 346,
            "return": [],
            "arguments": {
                "default": []
            }
        },
        "human": {
            "name": "human",
            "location": 358,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "config_options": {
            "name": "config_options",
            "location": 367,
            "return": [],
            "arguments": {}
        },
        "document_text": {
            "name": "document_text",
            "location": 417,
            "return": [],
            "arguments": {}
        },
        "write_document": {
            "name": "write_document",
            "location": 421,
            "return": [],
            "arguments": {}
        },
        "Example.__post_init__": {
            "name": "__post_init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Example.__str__": {
            "name": "__str__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigOption.__str__": {
            "name": "__str__",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/scripts/build_profile_docs.py": {
        "format_profile": {
            "name": "format_profile",
            "location": 22,
            "return": [],
            "arguments": {
                "profile_name": [],
                "profile": []
            }
        },
        "document_text": {
            "name": "document_text",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "write_document": {
            "name": "write_document",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/scripts/check_acknowledgments.py": {
        "_user_info": {
            "name": "_user_info",
            "location": 24,
            "return": [],
            "arguments": {
                "user": [],
                "verbose": []
            }
        }
    },
    "isort-main/scripts/mkstdlibs.py": {},
    "isort-main/tests/__init__.py": {},
    "isort-main/tests/benchmark/test_api.py": {
        "imperfect": {
            "name": "imperfect",
            "location": 10,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_sort_file": {
            "name": "test_sort_file",
            "location": 16,
            "return": [],
            "arguments": {
                "benchmark": [],
                "imperfect": []
            }
        },
        "test_sort_file_in_place": {
            "name": "test_sort_file_in_place",
            "location": 24,
            "return": [],
            "arguments": {
                "benchmark": [],
                "imperfect": []
            }
        },
        "test_sort_file.sort_file": {
            "name": "sort_file",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_sort_file_in_place.sort_file": {
            "name": "sort_file",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/integration/test_hypothesmith.py": {
        "_as_config": {
            "name": "_as_config",
            "location": 12,
            "return": [],
            "arguments": {
                "kw": []
            }
        },
        "_record_targets": {
            "name": "_record_targets",
            "location": 22,
            "return": [],
            "arguments": {
                "code": [],
                "prefix": []
            }
        },
        "configs": {
            "name": "configs",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_isort_is_idempotent": {
            "name": "test_isort_is_idempotent",
            "location": 92,
            "return": [],
            "arguments": {
                "source_code": [],
                "config": [],
                "disregard_skip": []
            }
        }
    },
    "isort-main/tests/integration/test_projects_using_isort.py": {
        "git_clone": {
            "name": "git_clone",
            "location": 16,
            "return": [],
            "arguments": {
                "repository_url": [],
                "directory": []
            }
        },
        "run_isort": {
            "name": "run_isort",
            "location": 21,
            "return": [],
            "arguments": {
                "arguments": []
            }
        },
        "test_django": {
            "name": "test_django",
            "location": 26,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_plone": {
            "name": "test_plone",
            "location": 33,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_pandas": {
            "name": "test_pandas",
            "location": 38,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_fastapi": {
            "name": "test_fastapi",
            "location": 47,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_zulip": {
            "name": "test_zulip",
            "location": 52,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_habitat_lab": {
            "name": "test_habitat_lab",
            "location": 57,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_tmuxp": {
            "name": "test_tmuxp",
            "location": 62,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_websockets": {
            "name": "test_websockets",
            "location": 79,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_airflow": {
            "name": "test_airflow",
            "location": 84,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_typeshed": {
            "name": "test_typeshed",
            "location": 89,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_pylint": {
            "name": "test_pylint",
            "location": 110,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_poetry": {
            "name": "test_poetry",
            "location": 115,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_hypothesis": {
            "name": "test_hypothesis",
            "location": 120,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_pillow": {
            "name": "test_pillow",
            "location": 127,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_attrs": {
            "name": "test_attrs",
            "location": 132,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_datadog_integrations_core": {
            "name": "test_datadog_integrations_core",
            "location": 147,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_pyramid": {
            "name": "test_pyramid",
            "location": 152,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_products_zopetree": {
            "name": "test_products_zopetree",
            "location": 160,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_dobby": {
            "name": "test_dobby",
            "location": 165,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_zope": {
            "name": "test_zope",
            "location": 170,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "isort-main/tests/integration/test_setting_combinations.py": {
        "_as_config": {
            "name": "_as_config",
            "location": 9,
            "return": [],
            "arguments": {
                "kw": []
            }
        },
        "configs": {
            "name": "configs",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_isort_is_idempotent": {
            "name": "test_isort_is_idempotent",
            "location": 1014,
            "return": [],
            "arguments": {
                "config": [],
                "disregard_skip": []
            }
        },
        "test_isort_doesnt_lose_imports_or_comments": {
            "name": "test_isort_doesnt_lose_imports_or_comments",
            "location": 1872,
            "return": [],
            "arguments": {
                "config": [],
                "disregard_skip": []
            }
        }
    },
    "isort-main/tests/unit/conftest.py": {
        "test_dir": {
            "name": "test_dir",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "src_dir": {
            "name": "src_dir",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_path": {
            "name": "test_path",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "src_path": {
            "name": "src_path",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "examples_path": {
            "name": "examples_path",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/example_crlf_file.py": {
        "func": {
            "name": "func",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_action_comments.py": {
        "test_isort_off_and_on": {
            "name": "test_isort_off_and_on",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_api.py": {
        "imperfect": {
            "name": "imperfect",
            "location": 17,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_sort_file_with_bad_syntax": {
            "name": "test_sort_file_with_bad_syntax",
            "location": 23,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_sort_file": {
            "name": "test_sort_file",
            "location": 32,
            "return": [],
            "arguments": {
                "imperfect": []
            }
        },
        "test_sort_file_in_place": {
            "name": "test_sort_file_in_place",
            "location": 37,
            "return": [],
            "arguments": {
                "imperfect": []
            }
        },
        "test_sort_file_to_stdout": {
            "name": "test_sort_file_to_stdout",
            "location": 42,
            "return": [],
            "arguments": {
                "capsys": [],
                "imperfect": []
            }
        },
        "test_other_ask_to_apply": {
            "name": "test_other_ask_to_apply",
            "location": 48,
            "return": [],
            "arguments": {
                "imperfect": []
            }
        },
        "test_check_file_no_changes": {
            "name": "test_check_file_no_changes",
            "location": 61,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmpdir": []
            }
        },
        "test_check_file_with_changes": {
            "name": "test_check_file_with_changes",
            "location": 69,
            "return": [],
            "arguments": {
                "capsys": [],
                "imperfect": []
            }
        },
        "test_sorted_imports_multiple_configs": {
            "name": "test_sorted_imports_multiple_configs",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "test_diff_stream": {
            "name": "test_diff_stream",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "test_sort_code_string_mixed_newlines": {
            "name": "test_sort_code_string_mixed_newlines",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "test_find_imports_in_file": {
            "name": "test_find_imports_in_file",
            "location": 91,
            "return": [],
            "arguments": {
                "imperfect": []
            }
        },
        "test_find_imports_in_code": {
            "name": "test_find_imports_in_code",
            "location": 96,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_comments.py": {
        "test_add_to_line": {
            "name": "test_add_to_line",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_fuzz_add_to_line": {
            "name": "test_fuzz_add_to_line",
            "location": 23,
            "return": [],
            "arguments": {
                "comments": [],
                "original_string": [],
                "removed": [],
                "comment_prefix": []
            }
        },
        "test_fuzz_parse": {
            "name": "test_fuzz_parse",
            "location": 33,
            "return": [],
            "arguments": {
                "line": []
            }
        }
    },
    "isort-main/tests/unit/test_deprecated_finders.py": {
        "test_requirements_finder": {
            "name": "test_requirements_finder",
            "location": 139,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_pipfile_finder": {
            "name": "test_pipfile_finder",
            "location": 166,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_path_finder": {
            "name": "test_path_finder",
            "location": 186,
            "return": [],
            "arguments": {
                "monkeypatch": []
            }
        },
        "TestFindersManager.test_init": {
            "name": "test_init",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFindersManager.test_no_finders": {
            "name": "test_no_finders",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFindersManager.test_find_broken_finder": {
            "name": "test_find_broken_finder",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractTestFinder.setup_class": {
            "name": "setup_class",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "AbstractTestFinder.test_create": {
            "name": "test_create",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractTestFinder.test_find": {
            "name": "test_find",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPathFinder.test_conda_and_virtual_env": {
            "name": "test_conda_and_virtual_env",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestPathFinder.test_default_section": {
            "name": "test_default_section",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestPathFinder.test_src_paths": {
            "name": "test_src_paths",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestRequirementsFinder.test_no_pipreqs": {
            "name": "test_no_pipreqs",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequirementsFinder.test_not_enabled": {
            "name": "test_not_enabled",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestRequirementsFinder.test_requirements_dir": {
            "name": "test_requirements_dir",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestFindersManager.test_init.ExceptionOnInit.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFindersManager.test_find_broken_finder.ExceptionOnFind.find": {
            "name": "find",
            "location": 49,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_exceptions.py": {
        "TestISortError.setup_class": {
            "name": "setup_class",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestISortError.test_init": {
            "name": "test_init",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestISortError.test_pickleable": {
            "name": "test_pickleable",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExistingSyntaxErrors.setup_class": {
            "name": "setup_class",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExistingSyntaxErrors.test_variables": {
            "name": "test_variables",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIntroducedSyntaxErrors.setup_class": {
            "name": "setup_class",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIntroducedSyntaxErrors.test_variables": {
            "name": "test_variables",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFileSkipped.setup_class": {
            "name": "setup_class",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFileSkipped.test_variables": {
            "name": "test_variables",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFileSkipComment.setup_class": {
            "name": "setup_class",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFileSkipComment.test_variables": {
            "name": "test_variables",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFileSkipSetting.setup_class": {
            "name": "setup_class",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFileSkipSetting.test_variables": {
            "name": "test_variables",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProfileDoesNotExist.setup_class": {
            "name": "setup_class",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestProfileDoesNotExist.test_variables": {
            "name": "test_variables",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSortingFunctionDoesNotExist.setup_class": {
            "name": "setup_class",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSortingFunctionDoesNotExist.test_variables": {
            "name": "test_variables",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLiteralParsingFailure.setup_class": {
            "name": "setup_class",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLiteralParsingFailure.test_variables": {
            "name": "test_variables",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLiteralSortTypeMismatch.setup_class": {
            "name": "setup_class",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLiteralSortTypeMismatch.test_variables": {
            "name": "test_variables",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAssignmentsFormatMismatch.setup_class": {
            "name": "setup_class",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAssignmentsFormatMismatch.test_variables": {
            "name": "test_variables",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUnsupportedSettings.setup_class": {
            "name": "setup_class",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUnsupportedSettings.test_variables": {
            "name": "test_variables",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUnsupportedEncoding.setup_class": {
            "name": "setup_class",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestUnsupportedEncoding.test_variables": {
            "name": "test_variables",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/tests/unit/test_files.py": {
        "test_find": {
            "name": "test_find",
            "location": 5,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "isort-main/tests/unit/test_format.py": {
        "test_ask_whether_to_apply_changes_to_file": {
            "name": "test_ask_whether_to_apply_changes_to_file",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_basic_printer": {
            "name": "test_basic_printer",
            "location": 23,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_basic_printer_diff": {
            "name": "test_basic_printer_diff",
            "location": 45,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_colored_printer_success": {
            "name": "test_colored_printer_success",
            "location": 54,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_colored_printer_error": {
            "name": "test_colored_printer_error",
            "location": 63,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_colored_printer_diff": {
            "name": "test_colored_printer_diff",
            "location": 72,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_colored_printer_diff_output": {
            "name": "test_colored_printer_diff_output",
            "location": 92,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_colorama_not_available_handled_gracefully": {
            "name": "test_colorama_not_available_handled_gracefully",
            "location": 105,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_fuzz_show_unified_diff": {
            "name": "test_fuzz_show_unified_diff",
            "location": 124,
            "return": [],
            "arguments": {
                "file_input": [],
                "file_output": [],
                "file_path": [],
                "output": []
            }
        }
    },
    "isort-main/tests/unit/test_hooks.py": {
        "test_git_hook": {
            "name": "test_git_hook",
            "location": 8,
            "return": [],
            "arguments": {
                "src_dir": []
            }
        },
        "test_git_hook_uses_the_configuration_file_specified_in_settings_path": {
            "name": "test_git_hook_uses_the_configuration_file_specified_in_settings_path",
            "location": 76,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "isort-main/tests/unit/test_identify.py": {
        "imports_in_code": {
            "name": "imports_in_code",
            "location": 8,
            "return": [],
            "arguments": {
                "code": []
            }
        },
        "test_top_only": {
            "name": "test_top_only",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_top_doc_string": {
            "name": "test_top_doc_string",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "test_yield_and_raise_edge_cases": {
            "name": "test_yield_and_raise_edge_cases",
            "location": 51,
            "return": [],
            "arguments": {}
        },
        "test_complex_examples": {
            "name": "test_complex_examples",
            "location": 204,
            "return": [],
            "arguments": {}
        },
        "test_aliases": {
            "name": "test_aliases",
            "location": 256,
            "return": [],
            "arguments": {}
        },
        "test_indented": {
            "name": "test_indented",
            "location": 271,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_importable.py": {
        "test_importable": {
            "name": "test_importable",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_io.py": {
        "TestFile.test_read": {
            "name": "test_read",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestFile.test_from_content": {
            "name": "test_from_content",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestFile.test_open": {
            "name": "test_open",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestFile.test_open.raise_arbitrary_exception": {
            "name": "raise_arbitrary_exception",
            "location": 33,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_isort.py": {
        "default_settings_path": {
            "name": "default_settings_path",
            "location": 59,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "test_happy_path": {
            "name": "test_happy_path",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "test_code_intermixed": {
            "name": "test_code_intermixed",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "test_correct_space_between_imports": {
            "name": "test_correct_space_between_imports",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "test_sort_on_number": {
            "name": "test_sort_on_number",
            "location": 163,
            "return": [],
            "arguments": {}
        },
        "test_line_length": {
            "name": "test_line_length",
            "location": 170,
            "return": [],
            "arguments": {}
        },
        "test_output_modes": {
            "name": "test_output_modes",
            "location": 261,
            "return": [],
            "arguments": {}
        },
        "test_qa_comment_case": {
            "name": "test_qa_comment_case",
            "location": 598,
            "return": [],
            "arguments": {}
        },
        "test_length_sort": {
            "name": "test_length_sort",
            "location": 608,
            "return": [],
            "arguments": {}
        },
        "test_length_sort_straight": {
            "name": "test_length_sort_straight",
            "location": 625,
            "return": [],
            "arguments": {}
        },
        "test_length_sort_section": {
            "name": "test_length_sort_section",
            "location": 646,
            "return": [],
            "arguments": {}
        },
        "test_convert_hanging": {
            "name": "test_convert_hanging",
            "location": 670,
            "return": [],
            "arguments": {}
        },
        "test_custom_indent": {
            "name": "test_custom_indent",
            "location": 696,
            "return": [],
            "arguments": {}
        },
        "test_use_parentheses": {
            "name": "test_use_parentheses",
            "location": 759,
            "return": [],
            "arguments": {}
        },
        "test_skip": {
            "name": "test_skip",
            "location": 806,
            "return": [],
            "arguments": {}
        },
        "test_skip_with_file_name": {
            "name": "test_skip_with_file_name",
            "location": 826,
            "return": [],
            "arguments": {}
        },
        "test_skip_within_file": {
            "name": "test_skip_within_file",
            "location": 835,
            "return": [],
            "arguments": {}
        },
        "test_force_to_top": {
            "name": "test_force_to_top",
            "location": 842,
            "return": [],
            "arguments": {}
        },
        "test_add_imports": {
            "name": "test_add_imports",
            "location": 849,
            "return": [],
            "arguments": {}
        },
        "test_remove_imports": {
            "name": "test_remove_imports",
            "location": 940,
            "return": [],
            "arguments": {}
        },
        "test_comments_above": {
            "name": "test_comments_above",
            "location": 965,
            "return": [],
            "arguments": {}
        },
        "test_explicitly_local_import": {
            "name": "test_explicitly_local_import",
            "location": 971,
            "return": [],
            "arguments": {}
        },
        "test_quotes_in_file": {
            "name": "test_quotes_in_file",
            "location": 982,
            "return": [],
            "arguments": {}
        },
        "test_check_newline_in_imports": {
            "name": "test_check_newline_in_imports",
            "location": 1003,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_forced_separate": {
            "name": "test_forced_separate",
            "location": 1040,
            "return": [],
            "arguments": {}
        },
        "test_default_section": {
            "name": "test_default_section",
            "location": 1103,
            "return": [],
            "arguments": {}
        },
        "test_first_party_overrides_standard_section": {
            "name": "test_first_party_overrides_standard_section",
            "location": 1121,
            "return": [],
            "arguments": {}
        },
        "test_thirdy_party_overrides_standard_section": {
            "name": "test_thirdy_party_overrides_standard_section",
            "location": 1139,
            "return": [],
            "arguments": {}
        },
        "test_known_pattern_path_expansion": {
            "name": "test_known_pattern_path_expansion",
            "location": 1146,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_force_single_line_imports": {
            "name": "test_force_single_line_imports",
            "location": 1189,
            "return": [],
            "arguments": {}
        },
        "test_force_single_line_long_imports": {
            "name": "test_force_single_line_long_imports",
            "location": 1239,
            "return": [],
            "arguments": {}
        },
        "test_force_single_line_imports_and_sort_within_sections": {
            "name": "test_force_single_line_imports_and_sort_within_sections",
            "location": 1250,
            "return": [],
            "arguments": {}
        },
        "test_titled_imports": {
            "name": "test_titled_imports",
            "location": 1292,
            "return": [],
            "arguments": {}
        },
        "test_footered_imports": {
            "name": "test_footered_imports",
            "location": 1360,
            "return": [],
            "arguments": {}
        },
        "test_titled_and_footered_imports": {
            "name": "test_titled_and_footered_imports",
            "location": 1433,
            "return": [],
            "arguments": {}
        },
        "test_balanced_wrapping": {
            "name": "test_balanced_wrapping",
            "location": 1600,
            "return": [],
            "arguments": {}
        },
        "test_relative_import_with_space": {
            "name": "test_relative_import_with_space",
            "location": 1613,
            "return": [],
            "arguments": {}
        },
        "test_multiline_import": {
            "name": "test_multiline_import",
            "location": 1627,
            "return": [],
            "arguments": {}
        },
        "test_single_multiline": {
            "name": "test_single_multiline",
            "location": 1646,
            "return": [],
            "arguments": {}
        },
        "test_atomic_mode": {
            "name": "test_atomic_mode",
            "location": 1653,
            "return": [],
            "arguments": {}
        },
        "test_order_by_type": {
            "name": "test_order_by_type",
            "location": 1683,
            "return": [],
            "arguments": {}
        },
        "test_custom_lines_before_import_section": {
            "name": "test_custom_lines_before_import_section",
            "location": 1717,
            "return": [],
            "arguments": {}
        },
        "test_custom_lines_after_import_section": {
            "name": "test_custom_lines_after_import_section",
            "location": 1744,
            "return": [],
            "arguments": {}
        },
        "test_smart_lines_after_import_section": {
            "name": "test_smart_lines_after_import_section",
            "location": 1755,
            "return": [],
            "arguments": {}
        },
        "test_settings_overwrite": {
            "name": "test_settings_overwrite",
            "location": 1808,
            "return": [],
            "arguments": {}
        },
        "test_combined_from_and_as_imports": {
            "name": "test_combined_from_and_as_imports",
            "location": 1816,
            "return": [],
            "arguments": {}
        },
        "test_as_imports_with_line_length": {
            "name": "test_as_imports_with_line_length",
            "location": 1830,
            "return": [],
            "arguments": {}
        },
        "test_keep_comments": {
            "name": "test_keep_comments",
            "location": 1843,
            "return": [],
            "arguments": {}
        },
        "test_multiline_split_on_dot": {
            "name": "test_multiline_split_on_dot",
            "location": 1901,
            "return": [],
            "arguments": {}
        },
        "test_import_star": {
            "name": "test_import_star",
            "location": 1915,
            "return": [],
            "arguments": {}
        },
        "test_include_trailing_comma": {
            "name": "test_include_trailing_comma",
            "location": 1922,
            "return": [],
            "arguments": {}
        },
        "test_similar_to_std_library": {
            "name": "test_similar_to_std_library",
            "location": 2023,
            "return": [],
            "arguments": {}
        },
        "test_correctly_placed_imports": {
            "name": "test_correctly_placed_imports",
            "location": 2031,
            "return": [],
            "arguments": {}
        },
        "test_auto_detection": {
            "name": "test_auto_detection",
            "location": 2120,
            "return": [],
            "arguments": {}
        },
        "test_same_line_statements": {
            "name": "test_same_line_statements",
            "location": 2133,
            "return": [],
            "arguments": {}
        },
        "test_long_line_comments": {
            "name": "test_long_line_comments",
            "location": 2144,
            "return": [],
            "arguments": {}
        },
        "test_tab_character_in_import": {
            "name": "test_tab_character_in_import",
            "location": 2164,
            "return": [],
            "arguments": {}
        },
        "test_split_position": {
            "name": "test_split_position",
            "location": 2172,
            "return": [],
            "arguments": {}
        },
        "test_place_comments": {
            "name": "test_place_comments",
            "location": 2184,
            "return": [],
            "arguments": {}
        },
        "test_placement_control": {
            "name": "test_placement_control",
            "location": 2214,
            "return": [],
            "arguments": {}
        },
        "test_custom_sections": {
            "name": "test_custom_sections",
            "location": 2246,
            "return": [],
            "arguments": {}
        },
        "test_custom_sections_exception_handling": {
            "name": "test_custom_sections_exception_handling",
            "location": 2308,
            "return": [],
            "arguments": {}
        },
        "test_glob_known": {
            "name": "test_glob_known",
            "location": 2343,
            "return": [],
            "arguments": {}
        },
        "test_sticky_comments": {
            "name": "test_sticky_comments",
            "location": 2389,
            "return": [],
            "arguments": {}
        },
        "test_zipimport": {
            "name": "test_zipimport",
            "location": 2409,
            "return": [],
            "arguments": {}
        },
        "test_from_ending": {
            "name": "test_from_ending",
            "location": 2415,
            "return": [],
            "arguments": {}
        },
        "test_from_first": {
            "name": "test_from_first",
            "location": 2422,
            "return": [],
            "arguments": {}
        },
        "test_top_comments": {
            "name": "test_top_comments",
            "location": 2428,
            "return": [],
            "arguments": {}
        },
        "test_consistency": {
            "name": "test_consistency",
            "location": 2452,
            "return": [],
            "arguments": {}
        },
        "test_force_grid_wrap": {
            "name": "test_force_grid_wrap",
            "location": 2458,
            "return": [],
            "arguments": {}
        },
        "test_force_grid_wrap_long": {
            "name": "test_force_grid_wrap_long",
            "location": 2479,
            "return": [],
            "arguments": {}
        },
        "test_uses_jinja_variables": {
            "name": "test_uses_jinja_variables",
            "location": 2504,
            "return": [],
            "arguments": {}
        },
        "test_fcntl": {
            "name": "test_fcntl",
            "location": 2525,
            "return": [],
            "arguments": {}
        },
        "test_import_split_is_word_boundary_aware": {
            "name": "test_import_split_is_word_boundary_aware",
            "location": 2531,
            "return": [],
            "arguments": {}
        },
        "test_other_file_encodings": {
            "name": "test_other_file_encodings",
            "location": 2547,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_other_file_encodings_in_place": {
            "name": "test_other_file_encodings_in_place",
            "location": 2557,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_encoding_not_in_comment": {
            "name": "test_encoding_not_in_comment",
            "location": 2572,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_encoding_not_in_first_two_lines": {
            "name": "test_encoding_not_in_first_two_lines",
            "location": 2585,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_comment_at_top_of_file": {
            "name": "test_comment_at_top_of_file",
            "location": 2598,
            "return": [],
            "arguments": {}
        },
        "test_alphabetic_sorting": {
            "name": "test_alphabetic_sorting",
            "location": 2612,
            "return": [],
            "arguments": {}
        },
        "test_alphabetic_sorting_multi_line": {
            "name": "test_alphabetic_sorting_multi_line",
            "location": 2637,
            "return": [],
            "arguments": {}
        },
        "test_comments_not_duplicated": {
            "name": "test_comments_not_duplicated",
            "location": 2647,
            "return": [],
            "arguments": {}
        },
        "test_top_of_line_comments": {
            "name": "test_top_of_line_comments",
            "location": 2660,
            "return": [],
            "arguments": {}
        },
        "test_basic_comment": {
            "name": "test_basic_comment",
            "location": 2677,
            "return": [],
            "arguments": {}
        },
        "test_shouldnt_add_lines": {
            "name": "test_shouldnt_add_lines",
            "location": 2683,
            "return": [],
            "arguments": {}
        },
        "test_sections_parsed_correct": {
            "name": "test_sections_parsed_correct",
            "location": 2691,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_pyproject_conf_file": {
            "name": "test_pyproject_conf_file",
            "location": 2717,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_alphabetic_sorting_no_newlines": {
            "name": "test_alphabetic_sorting_no_newlines",
            "location": 2755,
            "return": [],
            "arguments": {}
        },
        "test_sort_within_section": {
            "name": "test_sort_within_section",
            "location": 2770,
            "return": [],
            "arguments": {}
        },
        "test_sort_within_section_case_honored": {
            "name": "test_sort_within_section_case_honored",
            "location": 2825,
            "return": [],
            "arguments": {}
        },
        "test_sorting_with_two_top_comments": {
            "name": "test_sorting_with_two_top_comments",
            "location": 2885,
            "return": [],
            "arguments": {}
        },
        "test_lines_between_sections": {
            "name": "test_lines_between_sections",
            "location": 2891,
            "return": [],
            "arguments": {}
        },
        "test_forced_sepatate_globs": {
            "name": "test_forced_sepatate_globs",
            "location": 2900,
            "return": [],
            "arguments": {}
        },
        "test_no_additional_lines_issue_358": {
            "name": "test_no_additional_lines_issue_358",
            "location": 2926,
            "return": [],
            "arguments": {}
        },
        "test_import_by_paren_issue_375": {
            "name": "test_import_by_paren_issue_375",
            "location": 3005,
            "return": [],
            "arguments": {}
        },
        "test_import_by_paren_issue_460": {
            "name": "test_import_by_paren_issue_460",
            "location": 3013,
            "return": [],
            "arguments": {}
        },
        "test_function_with_docstring": {
            "name": "test_function_with_docstring",
            "location": 3025,
            "return": [],
            "arguments": {}
        },
        "test_plone_style": {
            "name": "test_plone_style",
            "location": 3042,
            "return": [],
            "arguments": {}
        },
        "test_third_party_case_sensitive": {
            "name": "test_third_party_case_sensitive",
            "location": 3059,
            "return": [],
            "arguments": {}
        },
        "test_exists_case_sensitive_file": {
            "name": "test_exists_case_sensitive_file",
            "location": 3067,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_exists_case_sensitive_directory": {
            "name": "test_exists_case_sensitive_directory",
            "location": 3074,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_sys_path_mutation": {
            "name": "test_sys_path_mutation",
            "location": 3081,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_long_single_line": {
            "name": "test_long_single_line",
            "location": 3092,
            "return": [],
            "arguments": {}
        },
        "test_import_inside_class_issue_432": {
            "name": "test_import_inside_class_issue_432",
            "location": 3114,
            "return": [],
            "arguments": {}
        },
        "test_wildcard_import_without_space_issue_496": {
            "name": "test_wildcard_import_without_space_issue_496",
            "location": 3131,
            "return": [],
            "arguments": {}
        },
        "test_import_line_mangles_issues_491": {
            "name": "test_import_line_mangles_issues_491",
            "location": 3138,
            "return": [],
            "arguments": {}
        },
        "test_import_line_mangles_issues_505": {
            "name": "test_import_line_mangles_issues_505",
            "location": 3144,
            "return": [],
            "arguments": {}
        },
        "test_import_line_mangles_issues_439": {
            "name": "test_import_line_mangles_issues_439",
            "location": 3150,
            "return": [],
            "arguments": {}
        },
        "test_alias_using_paren_issue_466": {
            "name": "test_alias_using_paren_issue_466",
            "location": 3156,
            "return": [],
            "arguments": {}
        },
        "test_long_alias_using_paren_issue_957": {
            "name": "test_long_alias_using_paren_issue_957",
            "location": 3186,
            "return": [],
            "arguments": {}
        },
        "test_strict_whitespace_by_default": {
            "name": "test_strict_whitespace_by_default",
            "location": 3241,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_strict_whitespace_no_closing_newline_issue_676": {
            "name": "test_strict_whitespace_no_closing_newline_issue_676",
            "location": 3249,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_ignore_whitespace": {
            "name": "test_ignore_whitespace",
            "location": 3256,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_import_wraps_with_comment_issue_471": {
            "name": "test_import_wraps_with_comment_issue_471",
            "location": 3263,
            "return": [],
            "arguments": {}
        },
        "test_import_case_produces_inconsistent_results_issue_472": {
            "name": "test_import_case_produces_inconsistent_results_issue_472",
            "location": 3279,
            "return": [],
            "arguments": {}
        },
        "test_inconsistent_behavior_in_python_2_and_3_issue_479": {
            "name": "test_inconsistent_behavior_in_python_2_and_3_issue_479",
            "location": 3296,
            "return": [],
            "arguments": {}
        },
        "test_sort_within_section_comments_issue_436": {
            "name": "test_sort_within_section_comments_issue_436",
            "location": 3306,
            "return": [],
            "arguments": {}
        },
        "test_sort_within_sections_with_force_to_top_issue_473": {
            "name": "test_sort_within_sections_with_force_to_top_issue_473",
            "location": 3320,
            "return": [],
            "arguments": {}
        },
        "test_force_sort_within_sections_with_relative_imports": {
            "name": "test_force_sort_within_sections_with_relative_imports",
            "location": 3329,
            "return": [],
            "arguments": {}
        },
        "test_force_sort_within_sections_with_reverse_relative_imports": {
            "name": "test_force_sort_within_sections_with_reverse_relative_imports",
            "location": 3345,
            "return": [],
            "arguments": {}
        },
        "test_sort_relative_in_force_sorted_sections_issue_1659": {
            "name": "test_sort_relative_in_force_sorted_sections_issue_1659",
            "location": 3362,
            "return": [],
            "arguments": {}
        },
        "test_reverse_sort_relative_in_force_sorted_sections_issue_1659": {
            "name": "test_reverse_sort_relative_in_force_sorted_sections_issue_1659",
            "location": 3379,
            "return": [],
            "arguments": {}
        },
        "test_correct_number_of_new_lines_with_comment_issue_435": {
            "name": "test_correct_number_of_new_lines_with_comment_issue_435",
            "location": 3397,
            "return": [],
            "arguments": {}
        },
        "test_future_below_encoding_issue_545": {
            "name": "test_future_below_encoding_issue_545",
            "location": 3405,
            "return": [],
            "arguments": {}
        },
        "test_no_extra_lines_issue_557": {
            "name": "test_no_extra_lines_issue_557",
            "location": 3425,
            "return": [],
            "arguments": {}
        },
        "test_long_import_wrap_support_with_mode_2": {
            "name": "test_long_import_wrap_support_with_mode_2",
            "location": 3449,
            "return": [],
            "arguments": {}
        },
        "test_pylint_comments_incorrectly_wrapped_issue_571": {
            "name": "test_pylint_comments_incorrectly_wrapped_issue_571",
            "location": 3461,
            "return": [],
            "arguments": {}
        },
        "test_ensure_async_methods_work_issue_537": {
            "name": "test_ensure_async_methods_work_issue_537",
            "location": 3474,
            "return": [],
            "arguments": {}
        },
        "test_ensure_as_imports_sort_correctly_within_from_imports_issue_590": {
            "name": "test_ensure_as_imports_sort_correctly_within_from_imports_issue_590",
            "location": 3486,
            "return": [],
            "arguments": {}
        },
        "test_ensure_line_endings_are_preserved_issue_493": {
            "name": "test_ensure_line_endings_are_preserved_issue_493",
            "location": 3498,
            "return": [],
            "arguments": {}
        },
        "test_not_splitted_sections": {
            "name": "test_not_splitted_sections",
            "location": 3508,
            "return": [],
            "arguments": {}
        },
        "test_no_lines_before_empty_section": {
            "name": "test_no_lines_before_empty_section",
            "location": 3551,
            "return": [],
            "arguments": {}
        },
        "test_no_inline_sort": {
            "name": "test_no_inline_sort",
            "location": 3565,
            "return": [],
            "arguments": {}
        },
        "test_relative_import_of_a_module": {
            "name": "test_relative_import_of_a_module",
            "location": 3581,
            "return": [],
            "arguments": {}
        },
        "test_escaped_parens_sort": {
            "name": "test_escaped_parens_sort",
            "location": 3609,
            "return": [],
            "arguments": {}
        },
        "test_escaped_parens_sort_with_comment": {
            "name": "test_escaped_parens_sort_with_comment",
            "location": 3615,
            "return": [],
            "arguments": {}
        },
        "test_escaped_parens_sort_with_first_comment": {
            "name": "test_escaped_parens_sort_with_first_comment",
            "location": 3621,
            "return": [],
            "arguments": {}
        },
        "test_escaped_no_parens_sort_with_first_comment": {
            "name": "test_escaped_no_parens_sort_with_first_comment",
            "location": 3627,
            "return": [],
            "arguments": {}
        },
        "test_to_ensure_imports_are_brought_to_top_issue_651": {
            "name": "test_to_ensure_imports_are_brought_to_top_issue_651",
            "location": 3634,
            "return": [],
            "arguments": {}
        },
        "test_to_ensure_importing_from_imports_module_works_issue_662": {
            "name": "test_to_ensure_importing_from_imports_module_works_issue_662",
            "location": 3655,
            "return": [],
            "arguments": {}
        },
        "test_to_ensure_no_unexpected_changes_issue_666": {
            "name": "test_to_ensure_no_unexpected_changes_issue_666",
            "location": 3667,
            "return": [],
            "arguments": {}
        },
        "test_to_ensure_tabs_dont_become_space_issue_665": {
            "name": "test_to_ensure_tabs_dont_become_space_issue_665",
            "location": 3686,
            "return": [],
            "arguments": {}
        },
        "test_new_lines_are_preserved": {
            "name": "test_new_lines_are_preserved",
            "location": 3691,
            "return": [],
            "arguments": {}
        },
        "test_forced_separate_is_deterministic_issue_774": {
            "name": "test_forced_separate_is_deterministic_issue_774",
            "location": 3737,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_monkey_patched_urllib": {
            "name": "test_monkey_patched_urllib",
            "location": 3764,
            "return": [],
            "arguments": {}
        },
        "test_argument_parsing": {
            "name": "test_argument_parsing",
            "location": 3771,
            "return": [],
            "arguments": {}
        },
        "test_command_line": {
            "name": "test_command_line",
            "location": 3783,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capfd": [],
                "multiprocess": []
            }
        },
        "test_quiet": {
            "name": "test_quiet",
            "location": 3811,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capfd": [],
                "quiet": []
            }
        },
        "test_safety_skips": {
            "name": "test_safety_skips",
            "location": 3828,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "enabled": []
            }
        },
        "test_skip_glob": {
            "name": "test_skip_glob",
            "location": 3875,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "skip_glob_assert": []
            }
        },
        "test_broken": {
            "name": "test_broken",
            "location": 3892,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_comments_not_removed_issue_576": {
            "name": "test_comments_not_removed_issue_576",
            "location": 3906,
            "return": [],
            "arguments": {}
        },
        "test_reverse_relative_imports_issue_417": {
            "name": "test_reverse_relative_imports_issue_417",
            "location": 3915,
            "return": [],
            "arguments": {}
        },
        "test_inconsistent_relative_imports_issue_577": {
            "name": "test_inconsistent_relative_imports_issue_577",
            "location": 3933,
            "return": [],
            "arguments": {}
        },
        "test_unwrap_issue_762": {
            "name": "test_unwrap_issue_762",
            "location": 3951,
            "return": [],
            "arguments": {}
        },
        "test_multiple_as_imports": {
            "name": "test_multiple_as_imports",
            "location": 3959,
            "return": [],
            "arguments": {}
        },
        "test_all_imports_from_single_module": {
            "name": "test_all_imports_from_single_module",
            "location": 4011,
            "return": [],
            "arguments": {}
        },
        "test_noqa_issue_679": {
            "name": "test_noqa_issue_679",
            "location": 4232,
            "return": [],
            "arguments": {}
        },
        "test_extract_multiline_output_wrap_setting_from_a_config_file": {
            "name": "test_extract_multiline_output_wrap_setting_from_a_config_file",
            "location": 4267,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_ensure_support_for_non_typed_but_cased_alphabetic_sort_issue_890": {
            "name": "test_ensure_support_for_non_typed_but_cased_alphabetic_sort_issue_890",
            "location": 4276,
            "return": [],
            "arguments": {}
        },
        "test_to_ensure_empty_line_not_added_to_file_start_issue_889": {
            "name": "test_to_ensure_empty_line_not_added_to_file_start_issue_889",
            "location": 4305,
            "return": [],
            "arguments": {}
        },
        "test_to_ensure_correctly_handling_of_whitespace_only_issue_811": {
            "name": "test_to_ensure_correctly_handling_of_whitespace_only_issue_811",
            "location": 4310,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_standard_library_deprecates_user_issue_778": {
            "name": "test_standard_library_deprecates_user_issue_778",
            "location": 4320,
            "return": [],
            "arguments": {}
        },
        "test_settings_path_skip_issue_909": {
            "name": "test_settings_path_skip_issue_909",
            "location": 4326,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_skip_paths_issue_938": {
            "name": "test_skip_paths_issue_938",
            "location": 4357,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_failing_file_check_916": {
            "name": "test_failing_file_check_916",
            "location": 4403,
            "return": [],
            "arguments": {}
        },
        "test_import_heading_issue_905": {
            "name": "test_import_heading_issue_905",
            "location": 4427,
            "return": [],
            "arguments": {}
        },
        "test_isort_keeps_comments_issue_691": {
            "name": "test_isort_keeps_comments_issue_691",
            "location": 4448,
            "return": [],
            "arguments": {}
        },
        "test_isort_multiline_with_tab_issue_1714": {
            "name": "test_isort_multiline_with_tab_issue_1714",
            "location": 4475,
            "return": [],
            "arguments": {}
        },
        "test_isort_ensures_blank_line_between_import_and_comment": {
            "name": "test_isort_ensures_blank_line_between_import_and_comment",
            "location": 4483,
            "return": [],
            "arguments": {}
        },
        "test_pyi_formatting_issue_942": {
            "name": "test_pyi_formatting_issue_942",
            "location": 4552,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_move_class_issue_751": {
            "name": "test_move_class_issue_751",
            "location": 4583,
            "return": [],
            "arguments": {}
        },
        "test_python_version": {
            "name": "test_python_version",
            "location": 4608,
            "return": [],
            "arguments": {}
        },
        "test_isort_with_single_character_import": {
            "name": "test_isort_with_single_character_import",
            "location": 4630,
            "return": [],
            "arguments": {}
        },
        "test_isort_nested_imports": {
            "name": "test_isort_nested_imports",
            "location": 4640,
            "return": [],
            "arguments": {}
        },
        "test_isort_off": {
            "name": "test_isort_off",
            "location": 4668,
            "return": [],
            "arguments": {}
        },
        "test_isort_split": {
            "name": "test_isort_split",
            "location": 4682,
            "return": [],
            "arguments": {}
        },
        "test_comment_look_alike": {
            "name": "test_comment_look_alike",
            "location": 4704,
            "return": [],
            "arguments": {}
        },
        "test_cimport_support": {
            "name": "test_cimport_support",
            "location": 4729,
            "return": [],
            "arguments": {}
        },
        "test_cdef_support": {
            "name": "test_cdef_support",
            "location": 5088,
            "return": [],
            "arguments": {}
        },
        "test_top_level_import_order": {
            "name": "test_top_level_import_order",
            "location": 5126,
            "return": [],
            "arguments": {}
        },
        "test_noqa_issue_1065": {
            "name": "test_noqa_issue_1065",
            "location": 5134,
            "return": [],
            "arguments": {}
        },
        "test_single_line_exclusions": {
            "name": "test_single_line_exclusions",
            "location": 5181,
            "return": [],
            "arguments": {}
        },
        "test_nested_comment_handling": {
            "name": "test_nested_comment_handling",
            "location": 5199,
            "return": [],
            "arguments": {}
        },
        "test_comments_top_of_file": {
            "name": "test_comments_top_of_file",
            "location": 5248,
            "return": [],
            "arguments": {}
        },
        "test_multiple_aliases": {
            "name": "test_multiple_aliases",
            "location": 5283,
            "return": [],
            "arguments": {}
        },
        "test_parens_in_comment": {
            "name": "test_parens_in_comment",
            "location": 5293,
            "return": [],
            "arguments": {}
        },
        "test_as_imports_mixed": {
            "name": "test_as_imports_mixed",
            "location": 5303,
            "return": [],
            "arguments": {}
        },
        "test_no_sections_with_future": {
            "name": "test_no_sections_with_future",
            "location": 5314,
            "return": [],
            "arguments": {}
        },
        "test_no_sections_with_as_import": {
            "name": "test_no_sections_with_as_import",
            "location": 5326,
            "return": [],
            "arguments": {}
        },
        "test_no_lines_too_long": {
            "name": "test_no_lines_too_long",
            "location": 5334,
            "return": [],
            "arguments": {}
        },
        "test_python_future_category": {
            "name": "test_python_future_category",
            "location": 5350,
            "return": [],
            "arguments": {}
        },
        "test_combine_star_comments_above": {
            "name": "test_combine_star_comments_above",
            "location": 5423,
            "return": [],
            "arguments": {}
        },
        "test_deprecated_settings": {
            "name": "test_deprecated_settings",
            "location": 5437,
            "return": [],
            "arguments": {}
        },
        "test_deprecated_settings_no_warn_in_quiet_mode": {
            "name": "test_deprecated_settings_no_warn_in_quiet_mode",
            "location": 5443,
            "return": [],
            "arguments": {
                "recwarn": []
            }
        },
        "test_only_sections": {
            "name": "test_only_sections",
            "location": 5449,
            "return": [],
            "arguments": {}
        },
        "test_combine_straight_imports": {
            "name": "test_combine_straight_imports",
            "location": 5489,
            "return": [],
            "arguments": {}
        },
        "test_find_imports_in_code": {
            "name": "test_find_imports_in_code",
            "location": 5509,
            "return": [],
            "arguments": {}
        },
        "test_find_imports_in_stream": {
            "name": "test_find_imports_in_stream",
            "location": 5552,
            "return": [],
            "arguments": {}
        },
        "test_split_on_trailing_comma": {
            "name": "test_split_on_trailing_comma",
            "location": 5567,
            "return": [],
            "arguments": {}
        },
        "test_infinite_loop_in_unmatched_parenthesis": {
            "name": "test_infinite_loop_in_unmatched_parenthesis",
            "location": 5583,
            "return": [],
            "arguments": {}
        },
        "test_find_imports_in_stream.NonSeekableTestStream.seek": {
            "name": "seek",
            "location": 5556,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "test_find_imports_in_stream.NonSeekableTestStream.seekable": {
            "name": "seekable",
            "location": 5559,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/tests/unit/test_literal.py": {
        "test_value_mismatch": {
            "name": "test_value_mismatch",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_invalid_syntax": {
            "name": "test_invalid_syntax",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_invalid_sort_type": {
            "name": "test_invalid_sort_type",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_value_assignment_list": {
            "name": "test_value_assignment_list",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_value_assignment_assignments": {
            "name": "test_value_assignment_assignments",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "test_assignments_invalid_section": {
            "name": "test_assignments_invalid_section",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_main.py": {
        "test_fuzz_sort_imports": {
            "name": "test_fuzz_sort_imports",
            "location": 32,
            "return": [],
            "arguments": {
                "file_name": [],
                "config": [],
                "check": [],
                "ask_to_apply": [],
                "write_to_stdout": []
            }
        },
        "test_sort_imports": {
            "name": "test_sort_imports",
            "location": 42,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_sort_imports_error_handling": {
            "name": "test_sort_imports_error_handling",
            "location": 56,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "mocker": [],
                "capsys": []
            }
        },
        "test_parse_args": {
            "name": "test_parse_args",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "test_ascii_art": {
            "name": "test_ascii_art",
            "location": 85,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_preconvert": {
            "name": "test_preconvert",
            "location": 106,
            "return": [],
            "arguments": {}
        },
        "test_show_files": {
            "name": "test_show_files",
            "location": 114,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmpdir": []
            }
        },
        "test_missing_default_section": {
            "name": "test_missing_default_section",
            "location": 134,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_ran_against_root": {
            "name": "test_ran_against_root",
            "location": 150,
            "return": [],
            "arguments": {}
        },
        "test_main": {
            "name": "test_main",
            "location": 155,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmpdir": []
            }
        },
        "test_isort_filename_overrides": {
            "name": "test_isort_filename_overrides",
            "location": 353,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capsys": []
            }
        },
        "test_isort_float_to_top_overrides": {
            "name": "test_isort_float_to_top_overrides",
            "location": 430,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capsys": []
            }
        },
        "test_isort_with_stdin": {
            "name": "test_isort_with_stdin",
            "location": 477,
            "return": [],
            "arguments": {
                "capsys": []
            }
        },
        "test_unsupported_encodings": {
            "name": "test_unsupported_encodings",
            "location": 870,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capsys": []
            }
        },
        "test_stream_skip_file": {
            "name": "test_stream_skip_file",
            "location": 900,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capsys": []
            }
        },
        "test_only_modified_flag": {
            "name": "test_only_modified_flag",
            "location": 938,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capsys": []
            }
        },
        "test_identify_imports_main": {
            "name": "test_identify_imports_main",
            "location": 1040,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capsys": []
            }
        },
        "test_gitignore": {
            "name": "test_gitignore",
            "location": 1082,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmpdir": []
            }
        },
        "test_multiple_configs": {
            "name": "test_multiple_configs",
            "location": 1217,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmpdir": []
            }
        },
        "test_multiple_src_paths": {
            "name": "test_multiple_src_paths",
            "location": 1350,
            "return": [],
            "arguments": {
                "tmpdir": [],
                "capsys": []
            }
        },
        "test_isort_filename_overrides.build_input_content": {
            "name": "build_input_content",
            "location": 363,
            "return": [],
            "arguments": {}
        },
        "test_gitignore.main_check": {
            "name": "main_check",
            "location": 1089,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "isort-main/tests/unit/test_output.py": {
        "test_fuzz_add_to_line": {
            "name": "test_fuzz_add_to_line",
            "location": 13,
            "return": [],
            "arguments": {
                "comments": [],
                "original_string": [],
                "removed": [],
                "comment_prefix": []
            }
        }
    },
    "isort-main/tests/unit/test_parse.py": {
        "test_file_contents": {
            "name": "test_file_contents",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_fuzz__infer_line_separator": {
            "name": "test_fuzz__infer_line_separator",
            "location": 55,
            "return": [],
            "arguments": {
                "contents": []
            }
        },
        "test_fuzz__strip_syntax": {
            "name": "test_fuzz__strip_syntax",
            "location": 60,
            "return": [],
            "arguments": {
                "import_string": []
            }
        },
        "test_fuzz_import_type": {
            "name": "test_fuzz_import_type",
            "location": 65,
            "return": [],
            "arguments": {
                "line": [],
                "config": []
            }
        },
        "test_fuzz_skip_line": {
            "name": "test_fuzz_skip_line",
            "location": 76,
            "return": [],
            "arguments": {
                "line": [],
                "in_quote": [],
                "index": [],
                "section_comments": [],
                "needs_import": []
            }
        }
    },
    "isort-main/tests/unit/test_place.py": {
        "test_module": {
            "name": "test_module",
            "location": 8,
            "return": [],
            "arguments": {
                "src_path": []
            }
        },
        "test_extra_standard_library": {
            "name": "test_extra_standard_library",
            "location": 17,
            "return": [],
            "arguments": {
                "src_path": []
            }
        },
        "test_no_standard_library_placement": {
            "name": "test_no_standard_library_placement",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_namespace_package_placement": {
            "name": "test_namespace_package_placement",
            "location": 32,
            "return": [],
            "arguments": {
                "examples_path": []
            }
        }
    },
    "isort-main/tests/unit/test_pylama_isort.py": {
        "TestLinter.test_allow": {
            "name": "test_allow",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLinter.test_run": {
            "name": "test_run",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestLinter.test_skip": {
            "name": "test_skip",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        }
    },
    "isort-main/tests/unit/test_regressions.py": {
        "test_isort_duplicating_comments_issue_1264": {
            "name": "test_isort_duplicating_comments_issue_1264",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_moving_comments_issue_726": {
            "name": "test_moving_comments_issue_726",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "test_blank_lined_removed_issue_1275": {
            "name": "test_blank_lined_removed_issue_1275",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "test_blank_lined_removed_issue_1283": {
            "name": "test_blank_lined_removed_issue_1283",
            "location": 89,
            "return": [],
            "arguments": {}
        },
        "test_extra_blank_line_added_nested_imports_issue_1290": {
            "name": "test_extra_blank_line_added_nested_imports_issue_1290",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "test_add_imports_shouldnt_make_isort_unusable_issue_1297": {
            "name": "test_add_imports_shouldnt_make_isort_unusable_issue_1297",
            "location": 132,
            "return": [],
            "arguments": {}
        },
        "test_no_extra_lines_for_imports_in_functions_issue_1277": {
            "name": "test_no_extra_lines_for_imports_in_functions_issue_1277",
            "location": 145,
            "return": [],
            "arguments": {}
        },
        "test_no_extra_blank_lines_in_methods_issue_1293": {
            "name": "test_no_extra_blank_lines_in_methods_issue_1293",
            "location": 163,
            "return": [],
            "arguments": {}
        },
        "test_force_single_line_shouldnt_remove_preceding_comment_lines_issue_1296": {
            "name": "test_force_single_line_shouldnt_remove_preceding_comment_lines_issue_1296",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "test_ensure_new_line_before_comments_mixed_with_ensure_newline_before_comments_1295": {
            "name": "test_ensure_new_line_before_comments_mixed_with_ensure_newline_before_comments_1295",
            "location": 196,
            "return": [],
            "arguments": {}
        },
        "test_trailing_comma_doesnt_introduce_broken_code_with_comment_and_wrap_issue_1302": {
            "name": "test_trailing_comma_doesnt_introduce_broken_code_with_comment_and_wrap_issue_1302",
            "location": 213,
            "return": [],
            "arguments": {}
        },
        "test_ensure_sre_parse_is_identified_as_stdlib_issue_1304": {
            "name": "test_ensure_sre_parse_is_identified_as_stdlib_issue_1304",
            "location": 232,
            "return": [],
            "arguments": {}
        },
        "test_add_imports_shouldnt_move_lower_comments_issue_1300": {
            "name": "test_add_imports_shouldnt_move_lower_comments_issue_1300",
            "location": 241,
            "return": [],
            "arguments": {}
        },
        "test_windows_newline_issue_1277": {
            "name": "test_windows_newline_issue_1277",
            "location": 255,
            "return": [],
            "arguments": {}
        },
        "test_windows_newline_issue_1278": {
            "name": "test_windows_newline_issue_1278",
            "location": 265,
            "return": [],
            "arguments": {}
        },
        "test_check_never_passes_with_indented_headings_issue_1301": {
            "name": "test_check_never_passes_with_indented_headings_issue_1301",
            "location": 276,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_fail_on_long_from_with_dot_issue_1190": {
            "name": "test_isort_shouldnt_fail_on_long_from_with_dot_issue_1190",
            "location": 293,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_add_extra_new_line_when_fass_and_n_issue_1315": {
            "name": "test_isort_shouldnt_add_extra_new_line_when_fass_and_n_issue_1315",
            "location": 320,
            "return": [],
            "arguments": {}
        },
        "test_isort_doesnt_rewrite_import_with_dot_to_from_import_issue_1280": {
            "name": "test_isort_doesnt_rewrite_import_with_dot_to_from_import_issue_1280",
            "location": 354,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_introduce_extra_lines_with_fass_issue_1322": {
            "name": "test_isort_shouldnt_introduce_extra_lines_with_fass_issue_1322",
            "location": 371,
            "return": [],
            "arguments": {}
        },
        "test_comments_should_cause_wrapping_on_long_lines_black_mode_issue_1219": {
            "name": "test_comments_should_cause_wrapping_on_long_lines_black_mode_issue_1219",
            "location": 397,
            "return": [],
            "arguments": {}
        },
        "test_comment_blocks_should_stay_associated_without_extra_lines_issue_1156": {
            "name": "test_comment_blocks_should_stay_associated_without_extra_lines_issue_1156",
            "location": 413,
            "return": [],
            "arguments": {}
        },
        "test_comment_shouldnt_be_duplicated_with_fass_enabled_issue_1329": {
            "name": "test_comment_shouldnt_be_duplicated_with_fass_enabled_issue_1329",
            "location": 438,
            "return": [],
            "arguments": {}
        },
        "test_wrap_mode_equal_to_line_length_with_indendet_imports_issue_1333": {
            "name": "test_wrap_mode_equal_to_line_length_with_indendet_imports_issue_1333",
            "location": 457,
            "return": [],
            "arguments": {}
        },
        "test_isort_skipped_nested_imports_issue_1339": {
            "name": "test_isort_skipped_nested_imports_issue_1339",
            "location": 474,
            "return": [],
            "arguments": {}
        },
        "test_windows_diff_too_large_misrepresentative_issue_1348": {
            "name": "test_windows_diff_too_large_misrepresentative_issue_1348",
            "location": 489,
            "return": [],
            "arguments": {
                "test_path": []
            }
        },
        "test_combine_as_does_not_lose_comments_issue_1321": {
            "name": "test_combine_as_does_not_lose_comments_issue_1321",
            "location": 501,
            "return": [],
            "arguments": {}
        },
        "test_combine_as_does_not_lose_comments_issue_1381": {
            "name": "test_combine_as_does_not_lose_comments_issue_1381",
            "location": 529,
            "return": [],
            "arguments": {}
        },
        "test_incorrect_grouping_when_comments_issue_1396": {
            "name": "test_incorrect_grouping_when_comments_issue_1396",
            "location": 544,
            "return": [],
            "arguments": {}
        },
        "test_reverse_relative_combined_with_force_sort_within_sections_issue_1395": {
            "name": "test_reverse_relative_combined_with_force_sort_within_sections_issue_1395",
            "location": 606,
            "return": [],
            "arguments": {}
        },
        "test_isort_should_be_able_to_add_independent_of_doc_string_placement_issue_1420": {
            "name": "test_isort_should_be_able_to_add_independent_of_doc_string_placement_issue_1420",
            "location": 626,
            "return": [],
            "arguments": {}
        },
        "test_comments_should_never_be_moved_between_imports_issue_1427": {
            "name": "test_comments_should_never_be_moved_between_imports_issue_1427",
            "location": 641,
            "return": [],
            "arguments": {}
        },
        "test_isort_doesnt_misplace_comments_issue_1431": {
            "name": "test_isort_doesnt_misplace_comments_issue_1431",
            "location": 654,
            "return": [],
            "arguments": {}
        },
        "test_isort_doesnt_misplace_add_import_issue_1445": {
            "name": "test_isort_doesnt_misplace_add_import_issue_1445",
            "location": 668,
            "return": [],
            "arguments": {}
        },
        "test_isort_doesnt_mangle_code_when_adding_imports_issue_1444": {
            "name": "test_isort_doesnt_mangle_code_when_adding_imports_issue_1444",
            "location": 700,
            "return": [],
            "arguments": {}
        },
        "test_isort_float_to_top_with_sort_on_off_tests": {
            "name": "test_isort_float_to_top_with_sort_on_off_tests",
            "location": 723,
            "return": [],
            "arguments": {}
        },
        "test_isort_doesnt_float_to_top_correctly_when_imports_not_at_top_issue_1382": {
            "name": "test_isort_doesnt_float_to_top_correctly_when_imports_not_at_top_issue_1382",
            "location": 798,
            "return": [],
            "arguments": {}
        },
        "test_empty_float_to_top_shouldnt_error_issue_1453": {
            "name": "test_empty_float_to_top_shouldnt_error_issue_1453",
            "location": 995,
            "return": [],
            "arguments": {}
        },
        "test_import_sorting_shouldnt_be_endless_with_headers_issue_1454": {
            "name": "test_import_sorting_shouldnt_be_endless_with_headers_issue_1454",
            "location": 1010,
            "return": [],
            "arguments": {}
        },
        "test_isort_should_leave_non_import_from_lines_alone_issue_1488": {
            "name": "test_isort_should_leave_non_import_from_lines_alone_issue_1488",
            "location": 1033,
            "return": [],
            "arguments": {}
        },
        "test_isort_float_to_top_correctly_identifies_single_line_comments_1499": {
            "name": "test_isort_float_to_top_correctly_identifies_single_line_comments_1499",
            "location": 1165,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_mangle_from_multi_line_string_issue_1507": {
            "name": "test_isort_shouldnt_mangle_from_multi_line_string_issue_1507",
            "location": 1242,
            "return": [],
            "arguments": {}
        },
        "test_isort_should_keep_all_as_and_non_as_imports_issue_1523": {
            "name": "test_isort_should_keep_all_as_and_non_as_imports_issue_1523",
            "location": 1282,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_introduce_syntax_error_issue_1539": {
            "name": "test_isort_shouldnt_introduce_syntax_error_issue_1539",
            "location": 1296,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_split_skip_issue_1548": {
            "name": "test_isort_shouldnt_split_skip_issue_1548",
            "location": 1345,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_split_skip_issue_1556": {
            "name": "test_isort_shouldnt_split_skip_issue_1556",
            "location": 1431,
            "return": [],
            "arguments": {}
        },
        "test_isort_losing_imports_vertical_prefix_from_module_import_wrap_mode_issue_1542": {
            "name": "test_isort_losing_imports_vertical_prefix_from_module_import_wrap_mode_issue_1542",
            "location": 1458,
            "return": [],
            "arguments": {}
        },
        "test_isort_adding_second_comma_issue_1621": {
            "name": "test_isort_adding_second_comma_issue_1621",
            "location": 1494,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_duplicate_comments_issue_1631": {
            "name": "test_isort_shouldnt_duplicate_comments_issue_1631",
            "location": 1524,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_add_extra_new_lines_with_import_heading_issue_1670": {
            "name": "test_isort_shouldnt_add_extra_new_lines_with_import_heading_issue_1670",
            "location": 1546,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_add_extra_line_float_to_top_issue_1667": {
            "name": "test_isort_shouldnt_add_extra_line_float_to_top_issue_1667",
            "location": 1577,
            "return": [],
            "arguments": {}
        },
        "test_isort_shouldnt_move_noqa_comment_issue_1594": {
            "name": "test_isort_shouldnt_move_noqa_comment_issue_1594",
            "location": 1594,
            "return": [],
            "arguments": {}
        },
        "test_isort_correctly_handles_unix_vs_linux_newlines_issue_1566": {
            "name": "test_isort_correctly_handles_unix_vs_linux_newlines_issue_1566",
            "location": 1616,
            "return": [],
            "arguments": {}
        },
        "test_isort_treats_src_paths_same_as_from_config_as_cli_issue_1711": {
            "name": "test_isort_treats_src_paths_same_as_from_config_as_cli_issue_1711",
            "location": 1628,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_isort_should_never_quietly_remove_imports_in_hanging_line_mode_issue_1741": {
            "name": "test_isort_should_never_quietly_remove_imports_in_hanging_line_mode_issue_1741",
            "location": 1660,
            "return": [],
            "arguments": {}
        },
        "test_isort_should_never_quietly_remove_imports_in_any_hangin_mode_issue_1741": {
            "name": "test_isort_should_never_quietly_remove_imports_in_any_hangin_mode_issue_1741",
            "location": 1716,
            "return": [],
            "arguments": {
                "multi_line_output": []
            }
        },
        "test_isort_should_keep_multi_noqa_with_star_issue_1744": {
            "name": "test_isort_should_keep_multi_noqa_with_star_issue_1744",
            "location": 1732,
            "return": [],
            "arguments": {}
        },
        "test_isort_should_keep_multiple_noqa_comments_force_single_line_mode_issue_1721": {
            "name": "test_isort_should_keep_multiple_noqa_comments_force_single_line_mode_issue_1721",
            "location": 1787,
            "return": [],
            "arguments": {}
        },
        "test_isort_should_only_add_imports_to_valid_location_issue_1769": {
            "name": "test_isort_should_only_add_imports_to_valid_location_issue_1769",
            "location": 1803,
            "return": [],
            "arguments": {}
        },
        "test_literal_sort_at_top_of_file_issue_1792": {
            "name": "test_literal_sort_at_top_of_file_issue_1792",
            "location": 1833,
            "return": [],
            "arguments": {}
        },
        "test_isort_should_produce_the_same_code_on_subsequent_runs_issue_1799": {
            "name": "test_isort_should_produce_the_same_code_on_subsequent_runs_issue_1799",
            "location": 1874,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "isort-main/tests/unit/test_settings.py": {
        "test_as_list": {
            "name": "test_as_list",
            "location": 110,
            "return": [],
            "arguments": {}
        },
        "_write_simple_settings": {
            "name": "_write_simple_settings",
            "location": 115,
            "return": [],
            "arguments": {
                "tmp_file": []
            }
        },
        "test_find_config": {
            "name": "test_find_config",
            "location": 125,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_find_config_deep": {
            "name": "test_find_config_deep",
            "location": 153,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_get_config_data": {
            "name": "test_get_config_data",
            "location": 167,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_editorconfig_without_sections": {
            "name": "test_editorconfig_without_sections",
            "location": 196,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_get_config_data_with_toml_and_utf8": {
            "name": "test_get_config_data_with_toml_and_utf8",
            "location": 203,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_as_bool": {
            "name": "test_as_bool",
            "location": 228,
            "return": [],
            "arguments": {}
        },
        "test_find_all_configs": {
            "name": "test_find_all_configs",
            "location": 243,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "TestConfig.test_init": {
            "name": "test_init",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_init_unsupported_settings_fails_gracefully": {
            "name": "test_init_unsupported_settings_fails_gracefully",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_known_settings": {
            "name": "test_known_settings",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_invalid_settings_path": {
            "name": "test_invalid_settings_path",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_invalid_pyversion": {
            "name": "test_invalid_pyversion",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_invalid_profile": {
            "name": "test_invalid_profile",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_is_skipped": {
            "name": "test_is_skipped",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_is_supported_filetype": {
            "name": "test_is_supported_filetype",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_is_supported_filetype_ioerror": {
            "name": "test_is_supported_filetype_ioerror",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestConfig.test_is_supported_filetype_shebang": {
            "name": "test_is_supported_filetype_shebang",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestConfig.test_is_supported_filetype_editor_backup": {
            "name": "test_is_supported_filetype_editor_backup",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestConfig.test_is_supported_filetype_defaults": {
            "name": "test_is_supported_filetype_defaults",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestConfig.test_is_supported_filetype_configuration": {
            "name": "test_is_supported_filetype_configuration",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestConfig.test_is_supported_filetype_fifo": {
            "name": "test_is_supported_filetype_fifo",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "TestConfig.test_src_paths_are_combined_and_deduplicated": {
            "name": "test_src_paths_are_combined_and_deduplicated",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConfig.test_src_paths_supports_glob_expansion": {
            "name": "test_src_paths_supports_glob_expansion",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "TestConfig.test_deprecated_multi_line_output": {
            "name": "test_deprecated_multi_line_output",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/tests/unit/test_setuptools_command.py": {
        "test_isort_command_smoke": {
            "name": "test_isort_command_smoke",
            "location": 4,
            "return": [],
            "arguments": {
                "src_dir": []
            }
        }
    },
    "isort-main/tests/unit/test_ticketed_features.py": {
        "test_semicolon_ignored_for_dynamic_lines_after_import_issue_1178": {
            "name": "test_semicolon_ignored_for_dynamic_lines_after_import_issue_1178",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_isort_automatically_removes_duplicate_aliases_issue_1193": {
            "name": "test_isort_automatically_removes_duplicate_aliases_issue_1193",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_isort_enables_floating_imports_to_top_of_module_issue_1228": {
            "name": "test_isort_enables_floating_imports_to_top_of_module_issue_1228",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "test_isort_provides_official_api_for_diff_output_issue_1335": {
            "name": "test_isort_provides_official_api_for_diff_output_issue_1335",
            "location": 159,
            "return": [],
            "arguments": {}
        },
        "test_isort_warns_when_known_sections_dont_match_issue_1331": {
            "name": "test_isort_warns_when_known_sections_dont_match_issue_1331",
            "location": 169,
            "return": [],
            "arguments": {}
        },
        "test_isort_supports_append_only_imports_issue_727": {
            "name": "test_isort_supports_append_only_imports_issue_727",
            "location": 203,
            "return": [],
            "arguments": {}
        },
        "test_isort_supports_shared_profiles_issue_970": {
            "name": "test_isort_supports_shared_profiles_issue_970",
            "location": 230,
            "return": [],
            "arguments": {}
        },
        "test_isort_supports_formatting_plugins_issue_1353": {
            "name": "test_isort_supports_formatting_plugins_issue_1353",
            "location": 240,
            "return": [],
            "arguments": {}
        },
        "test_treating_comments_as_code_issue_1357": {
            "name": "test_treating_comments_as_code_issue_1357",
            "location": 249,
            "return": [],
            "arguments": {}
        },
        "test_isort_literals_issue_1358": {
            "name": "test_isort_literals_issue_1358",
            "location": 369,
            "return": [],
            "arguments": {}
        },
        "test_isort_allows_setting_import_types_issue_1181": {
            "name": "test_isort_allows_setting_import_types_issue_1181",
            "location": 538,
            "return": [],
            "arguments": {}
        },
        "test_isort_enables_deduping_section_headers_issue_953": {
            "name": "test_isort_enables_deduping_section_headers_issue_953",
            "location": 562,
            "return": [],
            "arguments": {}
        },
        "test_isort_doesnt_remove_as_imports_when_combine_star_issue_1380": {
            "name": "test_isort_doesnt_remove_as_imports_when_combine_star_issue_1380",
            "location": 597,
            "return": [],
            "arguments": {}
        },
        "test_isort_support_custom_groups_above_stdlib_that_contain_stdlib_modules_issue_1407": {
            "name": "test_isort_support_custom_groups_above_stdlib_that_contain_stdlib_modules_issue_1407",
            "location": 628,
            "return": [],
            "arguments": {}
        },
        "test_isort_intelligently_places_noqa_comments_issue_1456": {
            "name": "test_isort_intelligently_places_noqa_comments_issue_1456",
            "location": 647,
            "return": [],
            "arguments": {}
        },
        "test_isort_respects_quiet_from_sort_file_api_see_1461": {
            "name": "test_isort_respects_quiet_from_sort_file_api_see_1461",
            "location": 714,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmpdir": []
            }
        },
        "test_isort_should_warn_on_empty_custom_config_issue_1433": {
            "name": "test_isort_should_warn_on_empty_custom_config_issue_1433",
            "location": 776,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_float_to_top_should_respect_existing_newlines_between_imports_issue_1502": {
            "name": "test_float_to_top_should_respect_existing_newlines_between_imports_issue_1502",
            "location": 803,
            "return": [],
            "arguments": {}
        },
        "test_api_to_allow_custom_diff_and_output_stream_1583": {
            "name": "test_api_to_allow_custom_diff_and_output_stream_1583",
            "location": 903,
            "return": [],
            "arguments": {
                "capsys": [],
                "tmpdir": []
            }
        },
        "test_autofix_mixed_indent_imports_1575": {
            "name": "test_autofix_mixed_indent_imports_1575",
            "location": 945,
            "return": [],
            "arguments": {}
        },
        "test_indented_import_headings_issue_1604": {
            "name": "test_indented_import_headings_issue_1604",
            "location": 992,
            "return": [],
            "arguments": {}
        },
        "test_isort_auto_detects_and_ignores_invalid_from_imports_issue_1688": {
            "name": "test_isort_auto_detects_and_ignores_invalid_from_imports_issue_1688",
            "location": 1040,
            "return": [],
            "arguments": {}
        },
        "test_isort_allows_reversing_sort_order_issue_1645": {
            "name": "test_isort_allows_reversing_sort_order_issue_1645",
            "location": 1061,
            "return": [],
            "arguments": {}
        },
        "test_isort_can_push_star_imports_above_others_issue_1504": {
            "name": "test_isort_can_push_star_imports_above_others_issue_1504",
            "location": 1091,
            "return": [],
            "arguments": {}
        },
        "test_isort_can_combine_reverse_sort_with_force_sort_within_sections_issue_1726": {
            "name": "test_isort_can_combine_reverse_sort_with_force_sort_within_sections_issue_1726",
            "location": 1114,
            "return": [],
            "arguments": {}
        },
        "test_isort_can_turn_off_import_adds_with_action_comment_issue_1737": {
            "name": "test_isort_can_turn_off_import_adds_with_action_comment_issue_1737",
            "location": 1147,
            "return": [],
            "arguments": {}
        },
        "test_sort_configurable_sort_issue_1732": {
            "name": "test_sort_configurable_sort_issue_1732",
            "location": 1197,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_utils.py": {
        "test_trie": {
            "name": "test_trie",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_wrap.py": {
        "test_import_statement": {
            "name": "test_import_statement",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/test_wrap_modes.py": {
        "test_wrap_mode_interface": {
            "name": "test_wrap_mode_interface",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_auto_saved": {
            "name": "test_auto_saved",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_backslash_grid": {
            "name": "test_backslash_grid",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "test_vertical_grid_size_near_line_length": {
            "name": "test_vertical_grid_size_near_line_length",
            "location": 100,
            "return": [],
            "arguments": {
                "multi_line_output": [],
                "line_length": [],
                "include_trailing_comma": []
            }
        },
        "test_fuzz_backslash_grid": {
            "name": "test_fuzz_backslash_grid",
            "location": 151,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_grid": {
            "name": "test_fuzz_grid",
            "location": 192,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_hanging_indent": {
            "name": "test_fuzz_hanging_indent",
            "location": 233,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_hanging_indent_with_parentheses": {
            "name": "test_fuzz_hanging_indent_with_parentheses",
            "location": 274,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_noqa": {
            "name": "test_fuzz_noqa",
            "location": 315,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_vertical": {
            "name": "test_fuzz_vertical",
            "location": 356,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_vertical_grid": {
            "name": "test_fuzz_vertical_grid",
            "location": 397,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_vertical_grid_grouped": {
            "name": "test_fuzz_vertical_grid_grouped",
            "location": 438,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_vertical_hanging_indent": {
            "name": "test_fuzz_vertical_hanging_indent",
            "location": 479,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_vertical_hanging_indent_bracket": {
            "name": "test_fuzz_vertical_hanging_indent_bracket",
            "location": 520,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        },
        "test_fuzz_vertical_prefix_from_module_import": {
            "name": "test_fuzz_vertical_prefix_from_module_import",
            "location": 561,
            "return": [],
            "arguments": {
                "statement": [],
                "imports": [],
                "white_space": [],
                "indent": [],
                "line_length": [],
                "comments": [],
                "line_separator": [],
                "comment_prefix": [],
                "include_trailing_comma": [],
                "remove_comments": []
            }
        }
    },
    "isort-main/tests/unit/utils.py": {
        "as_stream": {
            "name": "as_stream",
            "location": 16,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "isort_test": {
            "name": "isort_test",
            "location": 20,
            "return": [],
            "arguments": {
                "code": [],
                "expected_output": []
            }
        },
        "UnseekableTextIOWrapper.seek": {
            "name": "seek",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnreadableStream.readable": {
            "name": "readable",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "isort-main/tests/unit/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/almost-implicit/root/y.py": {},
    "isort-main/tests/unit/example_projects/namespaces/almost-implicit/root/nested/x.py": {},
    "isort-main/tests/unit/example_projects/namespaces/almost-implicit/root/nested/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/implicit/root/nested/x.py": {},
    "isort-main/tests/unit/example_projects/namespaces/implicit/root/nested/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/none/root/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/none/root/nested/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/pkgutil/root/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/pkgutil/root/nested/x.py": {},
    "isort-main/tests/unit/example_projects/namespaces/pkgutil/root/nested/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/pkg_resource/root/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/pkg_resource/root/nested/x.py": {},
    "isort-main/tests/unit/example_projects/namespaces/pkg_resource/root/nested/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/weird_encoding/root/__init__.py": {},
    "isort-main/tests/unit/example_projects/namespaces/weird_encoding/root/nested/__init__.py": {},
    "isort-main/tests/unit/profiles/test_attrs.py": {
        "test_attrs_code_snippet_one": {
            "name": "test_attrs_code_snippet_one",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_attrs_code_snippet_two": {
            "name": "test_attrs_code_snippet_two",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_attrs_code_snippet_three": {
            "name": "test_attrs_code_snippet_three",
            "location": 75,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_black.py": {
        "black_format": {
            "name": "black_format",
            "location": 7,
            "return": [],
            "arguments": {
                "code": [],
                "is_pyi": [],
                "line_length": []
            }
        },
        "black_test": {
            "name": "black_test",
            "location": 22,
            "return": [],
            "arguments": {
                "code": [],
                "expected_output": []
            }
        },
        "test_black_snippet_one": {
            "name": "test_black_snippet_one",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "test_black_snippet_two": {
            "name": "test_black_snippet_two",
            "location": 156,
            "return": [],
            "arguments": {}
        },
        "test_black_snippet_three": {
            "name": "test_black_snippet_three",
            "location": 231,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_django.py": {
        "test_django_snippet_one": {
            "name": "test_django_snippet_one",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_django_snippet_two": {
            "name": "test_django_snippet_two",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "test_django_snippet_three": {
            "name": "test_django_snippet_three",
            "location": 89,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_google.py": {
        "test_google_code_snippet_shared_example": {
            "name": "test_google_code_snippet_shared_example",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_google_code_snippet_one": {
            "name": "test_google_code_snippet_one",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "test_google_code_snippet_two": {
            "name": "test_google_code_snippet_two",
            "location": 235,
            "return": [],
            "arguments": {}
        },
        "test_code_snippet_three": {
            "name": "test_code_snippet_three",
            "location": 319,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_hug.py": {
        "test_hug_code_snippet_one": {
            "name": "test_hug_code_snippet_one",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_hug_code_snippet_two": {
            "name": "test_hug_code_snippet_two",
            "location": 56,
            "return": [],
            "arguments": {}
        },
        "test_hug_code_snippet_three": {
            "name": "test_hug_code_snippet_three",
            "location": 79,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_open_stack.py": {
        "test_open_stack_code_snippet_one": {
            "name": "test_open_stack_code_snippet_one",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_open_stack_code_snippet_two": {
            "name": "test_open_stack_code_snippet_two",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "test_open_stack_code_snippet_three": {
            "name": "test_open_stack_code_snippet_three",
            "location": 86,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_plone.py": {
        "test_plone_code_snippet_one": {
            "name": "test_plone_code_snippet_one",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "test_plone_code_snippet_two": {
            "name": "test_plone_code_snippet_two",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "test_plone_code_snippet_three": {
            "name": "test_plone_code_snippet_three",
            "location": 63,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_pycharm.py": {
        "test_pycharm_snippet_one": {
            "name": "test_pycharm_snippet_one",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/test_wemake.py": {
        "test_wemake_snippet_one": {
            "name": "test_wemake_snippet_one",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_wemake_snippet_two": {
            "name": "test_wemake_snippet_two",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "test_wemake_snippet_three": {
            "name": "test_wemake_snippet_three",
            "location": 66,
            "return": [],
            "arguments": {}
        }
    },
    "isort-main/tests/unit/profiles/__init__.py": {}
}
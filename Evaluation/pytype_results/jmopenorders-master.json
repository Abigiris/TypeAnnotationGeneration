{
    "jmopenorders-master/noxfile.py": {
        "activate_virtualenv_in_precommit_hooks": {
            "name": "activate_virtualenv_in_precommit_hooks",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "session": []
            }
        },
        "precommit": {
            "name": "precommit",
            "location": 89,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "safety": {
            "name": "safety",
            "location": 112,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "mypy": {
            "name": "mypy",
            "location": 120,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "tests": {
            "name": "tests",
            "location": 139,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "coverage": {
            "name": "coverage",
            "location": 160,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "typeguard": {
            "name": "typeguard",
            "location": 173,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "xdoctest": {
            "name": "xdoctest",
            "location": 181,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "docs_build": {
            "name": "docs_build",
            "location": 190,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "docs": {
            "name": "docs",
            "location": 204,
            "return": [],
            "arguments": {
                "session": []
            }
        }
    },
    "jmopenorders-master/docs/conf.py": {},
    "jmopenorders-master/src/jmopenorders/__init__.py": {},
    "jmopenorders-master/src/jmopenorders/__main__.py": {
        "main": {
            "name": "main",
            "location": 58,
            "return": [],
            "arguments": {
                "inputpath": [],
                "outputpath": [],
                "personfile": [],
                "datafile": []
            }
        }
    },
    "jmopenorders-master/src/jmopenorders/api/cleanoutputdir.py": {
        "CleanOutputDir.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "outdir": []
            }
        },
        "CleanOutputDir.clean": {
            "name": "clean",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jmopenorders-master/src/jmopenorders/api/generateorders.py": {
        "GenerateOrders.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dest_dir": []
            }
        },
        "GenerateOrders.create": {
            "name": "create",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "actual_name": [],
                "actual_content": []
            }
        }
    },
    "jmopenorders-master/src/jmopenorders/api/getdata.py": {
        "GetData.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "GetData.get": {
            "name": "get",
            "location": 69,
            "return": [
                "List[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jmopenorders-master/src/jmopenorders/api/getserviceperson.py": {
        "GetServicePerson.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "GetServicePerson.get": {
            "name": "get",
            "location": 54,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jmopenorders-master/src/jmopenorders/api/report.py": {
        "report": {
            "name": "report",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "personfile": [],
                "datafile": [],
                "inputpath": [],
                "outputpath": []
            }
        }
    },
    "jmopenorders-master/src/jmopenorders/api/__init__.py": {},
    "jmopenorders-master/src/jmopenorders/core/logger.py": {
        "Logger.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Logger.start": {
            "name": "start",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level": [],
                "stream": []
            }
        },
        "Logger.stop": {
            "name": "stop",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jmopenorders-master/src/jmopenorders/core/__init__.py": {},
    "jmopenorders-master/tests/test_generate_data.py": {
        "main": {
            "name": "main",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "CreateFakeOrders.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "my_data_path": [],
                "l18n": []
            }
        },
        "CreateFakeOrders.generate_part_person": {
            "name": "generate_part_person",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": []
            }
        },
        "CreateFakeOrders.generate_service_person": {
            "name": "generate_service_person",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": []
            }
        },
        "CreateFakeOrders.generate_header": {
            "name": "generate_header",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CreateFakeOrders.generate_orders": {
            "name": "generate_orders",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "count": [],
                "workshop": []
            }
        },
        "CreateFakeOrders.generate_splitter": {
            "name": "generate_splitter",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workshop": []
            }
        },
        "CreateFakeOrders.csv_output": {
            "name": "csv_output",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "CreateFakeOrders.xlsx_output": {
            "name": "xlsx_output",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "jmopenorders-master/tests/test_jmopenorders.py": {
        "runner": {
            "name": "runner",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "test_main_succeeds": {
            "name": "test_main_succeeds",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "runner": []
            }
        }
    },
    "jmopenorders-master/tests/test_main.py": {
        "runner": {
            "name": "runner",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "test_main_succeeds": {
            "name": "test_main_succeeds",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "runner": []
            }
        }
    },
    "jmopenorders-master/tests/__init__.py": {}
}
{
    "jsoner-master/setup.py": {},
    "jsoner-master/docs/conf.py": {},
    "jsoner-master/jsoner/errors.py": {},
    "jsoner-master/jsoner/registry.py": {
        "import_object": {
            "name": "import_object",
            "location": 185,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        },
        "Registry.registry": {
            "name": "registry",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Registry.add": {
            "name": "add",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Registry.register": {
            "name": "register",
            "location": 58,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Registry.__contains__": {
            "name": "__contains__",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "SubclassRegistry.__getitem__": {
            "name": "__getitem__",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Registry.register.inner": {
            "name": "inner",
            "location": 67,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "jsoner-master/jsoner/serialization.py": {
        "_is_instance_of_type": {
            "name": "_is_instance_of_type",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj_or_type": []
            }
        },
        "obj_spec": {
            "name": "obj_spec",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj_or_type": []
            }
        },
        "json_hook": {
            "name": "json_hook",
            "location": 174,
            "return": [
                "Any"
            ],
            "arguments": {
                "primitive": []
            }
        },
        "maybe_convert_to_obj": {
            "name": "maybe_convert_to_obj",
            "location": 188,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": []
            }
        },
        "DictConvertible.to_dict": {
            "name": "to_dict",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DictConvertible.from_dict": {
            "name": "from_dict",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "data_dict": []
            }
        },
        "DictConvertible.__subclasshook__": {
            "name": "__subclasshook__",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "other_cls": []
            }
        },
        "StrConvertible.to_str": {
            "name": "to_str",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrConvertible.from_str": {
            "name": "from_str",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "json_str": []
            }
        },
        "StrConvertible.__subclasshook__": {
            "name": "__subclasshook__",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "other_cls": []
            }
        },
        "JsonerSerializable.__subclasshook__": {
            "name": "__subclasshook__",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "other_cls": []
            }
        },
        "JsonEncoder.default": {
            "name": "default",
            "location": 147,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "jsoner-master/jsoner/__init__.py": {},
    "jsoner-master/jsoner/tests/test_registry.py": {
        "TestRegistry.test_000_init": {
            "name": "test_000_init",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_001_add": {
            "name": "test_001_add",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_002_add_causes_error_if_key_exists": {
            "name": "test_002_add_causes_error_if_key_exists",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_003_register_decorator": {
            "name": "test_003_register_decorator",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_004_register_same_key_twice": {
            "name": "test_004_register_same_key_twice",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_005_add_none": {
            "name": "test_005_add_none",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_006_get": {
            "name": "test_006_get",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_007_get_key_not_found": {
            "name": "test_007_get_key_not_found",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_000_get_subclass_of_class": {
            "name": "test_000_get_subclass_of_class",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_001_get_subclass_of_object": {
            "name": "test_001_get_subclass_of_object",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_002_register_as_string": {
            "name": "test_002_register_as_string",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_003_register_as_type_and_get_as_string": {
            "name": "test_003_register_as_type_and_get_as_string",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_004_register_normal_string": {
            "name": "test_004_register_normal_string",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_005_register_normal_string": {
            "name": "test_005_register_normal_string",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_006_not_existing_module": {
            "name": "test_006_not_existing_module",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_007_add_integer_as_key": {
            "name": "test_007_add_integer_as_key",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_008_pass_list": {
            "name": "test_008_pass_list",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_009_load_from_str": {
            "name": "test_009_load_from_str",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_010_add_none": {
            "name": "test_010_add_none",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_011_add_none": {
            "name": "test_011_add_none",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_012_contains": {
            "name": "test_012_contains",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_013_contains": {
            "name": "test_013_contains",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_014_contains": {
            "name": "test_014_contains",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSubclassRegistry.test_015_contains": {
            "name": "test_015_contains",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportObject.test_000_import_dummy_object": {
            "name": "test_000_import_dummy_object",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportObject.test_001_invalid_str": {
            "name": "test_001_invalid_str",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportObject.test_001_pass_invalid_module": {
            "name": "test_001_pass_invalid_module",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportObject.test_002_pass_invalid_argument": {
            "name": "test_002_pass_invalid_argument",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRegistry.test_003_register_decorator.foo": {
            "name": "foo",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "TestRegistry.test_004_register_same_key_twice.foo": {
            "name": "foo",
            "location": 42,
            "return": [],
            "arguments": {}
        }
    },
    "jsoner-master/jsoner/tests/test_serialization.py": {
        "TestStrSerializable.test_000_primitive_type": {
            "name": "test_000_primitive_type",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrSerializable.test_001_registered_type": {
            "name": "test_001_registered_type",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrSerializable.test_002_registered_type": {
            "name": "test_002_registered_type",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrSerializable.test_003_registered_type": {
            "name": "test_003_registered_type",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrSerializable.test_004_dict_convertible": {
            "name": "test_004_dict_convertible",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrSerializable.test_005_dict_convertible": {
            "name": "test_005_dict_convertible",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDictConvertible.test_000_dict_convertible": {
            "name": "test_000_dict_convertible",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrConvertible.test_000_str_convertible": {
            "name": "test_000_str_convertible",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrConvertible.test_002_str_convertible": {
            "name": "test_002_str_convertible",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dummy.__eq__": {
            "name": "__eq__",
            "location": 110,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DummyDictConvertible.to_dict": {
            "name": "to_dict",
            "location": 116,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyDictConvertible.from_dict": {
            "name": "from_dict",
            "location": 120,
            "return": [
                "_TDummyDictConvertible@@DummyDictConvertible@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDummyDictConvertible]"
                ],
                "d": []
            }
        },
        "DummyStrConvertible.to_str": {
            "name": "to_str",
            "location": 125,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyStrConvertible.from_str": {
            "name": "from_str",
            "location": 129,
            "return": [
                "_TDummyStrConvertible@@DummyStrConvertible@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDummyStrConvertible]"
                ],
                "s": []
            }
        },
        "TestJsonEncoder.test_000_default_pass_dict": {
            "name": "test_000_default_pass_dict",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_001_default_pass_int": {
            "name": "test_001_default_pass_int",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_002_pass_dict_convertible_object": {
            "name": "test_002_pass_dict_convertible_object",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_003_pass_str_convertible_object": {
            "name": "test_003_pass_str_convertible_object",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_004_in_registry": {
            "name": "test_004_in_registry",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_005_in_registry": {
            "name": "test_005_in_registry",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_006_encode_cls": {
            "name": "test_006_encode_cls",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_007_encode_str": {
            "name": "test_007_encode_str",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_008_not_in_registry": {
            "name": "test_008_not_in_registry",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_000_maybe_convert_to_obj": {
            "name": "test_000_maybe_convert_to_obj",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_001_maybe_convert_to_obj": {
            "name": "test_001_maybe_convert_to_obj",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_002_maybe_convert_to_dict": {
            "name": "test_002_maybe_convert_to_dict",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_003_object_not_found": {
            "name": "test_003_object_not_found",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_005_object_not_found": {
            "name": "test_005_object_not_found",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_006_str_convertible": {
            "name": "test_006_str_convertible",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_007_dict_convertible": {
            "name": "test_007_dict_convertible",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_008_not_registered": {
            "name": "test_008_not_registered",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_009_registered_obj": {
            "name": "test_009_registered_obj",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDecoding.test_010_register_arbitrary_objects": {
            "name": "test_010_register_arbitrary_objects",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonHook.test_000_json_hook": {
            "name": "test_000_json_hook",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonHook.test_001_json_hook": {
            "name": "test_001_json_hook",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonHook.test_002_json_hook": {
            "name": "test_002_json_hook",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonHook.test_003_dict_convertible": {
            "name": "test_003_dict_convertible",
            "location": 352,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonHook.test_004_str_convertible": {
            "name": "test_004_str_convertible",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestJsonEncoder.test_004_in_registry.encode": {
            "name": "encode",
            "location": 180,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "TestJsonEncoder.test_004_in_registry.decode": {
            "name": "decode",
            "location": 184,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "TestDecoding.test_009_registered_obj.decode": {
            "name": "decode",
            "location": 315,
            "return": [],
            "arguments": {
                "data": [],
                "cls": []
            }
        },
        "TestStrSerializable.test_004_dict_convertible.A.to_dict": {
            "name": "to_dict",
            "location": 59,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrSerializable.test_004_dict_convertible.A.from_dict": {
            "name": "from_dict",
            "location": 62,
            "return": [
                "_TDummyDictConvertible@@DummyDictConvertible@@"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "TestDictConvertible.test_000_dict_convertible.A.to_dict": {
            "name": "to_dict",
            "location": 78,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDictConvertible.test_000_dict_convertible.A.from_dict": {
            "name": "from_dict",
            "location": 82,
            "return": [
                "_TDummyDictConvertible@@DummyDictConvertible@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDummyDictConvertible]"
                ],
                "d": []
            }
        },
        "TestStrConvertible.test_000_str_convertible.A.to_str": {
            "name": "to_str",
            "location": 92,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestStrConvertible.test_000_str_convertible.A.from_str": {
            "name": "from_str",
            "location": 96,
            "return": [
                "_TDummyStrConvertible@@DummyStrConvertible@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDummyStrConvertible]"
                ],
                "s": []
            }
        }
    },
    "jsoner-master/jsoner/tests/__init__.py": {}
}
{
    "jsonlog-cli-master/setup.py": {},
    "jsonlog-cli-master/docs/example.py": {},
    "jsonlog-cli-master/jsonlog_cli/cli.py": {
        "main": {
            "name": "main",
            "location": 101,
            "return": [],
            "arguments": {
                "streams": [],
                "config_path": [],
                "log_path": [],
                "pattern_name": [],
                "level_key": [],
                "template": [],
                "_multiline_keys_add": [],
                "_multiline_keys_replace": [],
                "_priority_keys": [],
                "_remove_keys": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/colours.py": {
        "AliasedDict.__getitem__": {
            "name": "__getitem__",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AliasedDict._get_alias": {
            "name": "_get_alias",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "original": [],
                "alias": []
            }
        },
        "Colour.__bool__": {
            "name": "__bool__",
            "location": 43,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Colour.style": {
            "name": "style",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "ColourMap.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "ColourMap.empty": {
            "name": "empty",
            "location": 61,
            "return": [
                "_TColourMap@@ColourMap@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TColourMap]"
                ]
            }
        },
        "ColourMap.default": {
            "name": "default",
            "location": 65,
            "return": [
                "_TColourMap@@ColourMap@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TColourMap]"
                ]
            }
        },
        "ColourMap.get": {
            "name": "get",
            "location": 77,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ColourMap.normalise": {
            "name": "normalise",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/config.py": {
        "ensure_log_path": {
            "name": "ensure_log_path",
            "location": 108,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "path": [
                    "_T0@@"
                ]
            }
        },
        "Config.configure": {
            "name": "configure",
            "location": 81,
            "return": [
                "_TConfig@@Config@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TConfig]"
                ],
                "path": []
            }
        },
        "Config.load": {
            "name": "load",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/errorhandler.py": {
        "ErrorHandler.__enter__": {
            "name": "__enter__",
            "location": 25,
            "return": [
                "_TErrorHandler@@ErrorHandler@@"
            ],
            "arguments": {
                "self": [
                    "_TErrorHandler@@ErrorHandler@@"
                ]
            }
        },
        "ErrorHandler.__exit__": {
            "name": "__exit__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_val": [
                    "Optional[BaseException]"
                ],
                "exc_tb": []
            }
        },
        "ErrorHandler.toggle_normal_state": {
            "name": "toggle_normal_state",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ErrorHandler.toggle_error_state": {
            "name": "toggle_error_state",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ErrorHandler.echo": {
            "name": "echo",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": [],
                "pattern": [],
                "color": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/key.py": {
        "Key.from_strings": {
            "name": "from_strings",
            "location": 16,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": [],
                "strings": []
            }
        },
        "Key.from_string": {
            "name": "from_string",
            "location": 20,
            "return": [
                "_TKey@@Key@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TKey]"
                ],
                "string": []
            }
        },
        "Key.format_key": {
            "name": "format_key",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Key.format_value": {
            "name": "format_value",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Key.format_pair": {
            "name": "format_pair",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [],
                "colour": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/multiline.py": {
        "BufferedJSONStream.__iter__": {
            "name": "__iter__",
            "location": 14,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BufferedJSONStream.reset_buffer": {
            "name": "reset_buffer",
            "location": 41,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BufferedJSONStream.is_valid_json": {
            "name": "is_valid_json",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "text": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/pattern.py": {
        "Pattern.stream": {
            "name": "stream",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "stream": []
            }
        },
        "Pattern.format_record": {
            "name": "format_record",
            "location": 34,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "Pattern.format_message": {
            "name": "format_message",
            "location": 45,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "Pattern.format_multiline": {
            "name": "format_multiline",
            "location": 48,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "Pattern.format_multiline_value": {
            "name": "format_multiline_value",
            "location": 56,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "value": [
                    "_T0@@"
                ]
            }
        },
        "Pattern.highlight_color": {
            "name": "highlight_color",
            "location": 71,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "Pattern.replace": {
            "name": "replace",
            "location": 75,
            "return": [
                "_TPattern@@Pattern@@"
            ],
            "arguments": {
                "self": [
                    "_TPattern@@Pattern@@"
                ]
            }
        },
        "TemplatePattern.format_message": {
            "name": "format_message",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "KeyValuePattern.format_message": {
            "name": "format_message",
            "location": 96,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "KeyValuePattern._record_pairs": {
            "name": "_record_pairs",
            "location": 114,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "record": [],
                "keys": []
            }
        },
        "KeyValuePattern._nested_pairs": {
            "name": "_nested_pairs",
            "location": 129,
            "return": [
                "Generator[(Tuple[(jsonlog_cli.key.Key, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "parent": [],
                "data": []
            }
        },
        "KeyValuePattern.format_key": {
            "name": "format_key",
            "location": 141,
            "return": [
                "str"
            ],
            "arguments": {
                "key": []
            }
        },
        "KeyValuePattern.format_value": {
            "name": "format_value",
            "location": 145,
            "return": [
                "str"
            ],
            "arguments": {
                "value": []
            }
        },
        "KeyValuePattern.remove_keys": {
            "name": "remove_keys",
            "location": 148,
            "return": [
                "_TKeyValuePattern@@KeyValuePattern@@"
            ],
            "arguments": {
                "self": [
                    "_TKeyValuePattern@@KeyValuePattern@@"
                ],
                "keys": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/record.py": {
        "RecordDict.__getattr__": {
            "name": "__getattr__",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Record.__post_init__": {
            "name": "__post_init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Record.from_string": {
            "name": "from_string",
            "location": 33,
            "return": [],
            "arguments": {
                "cls": [],
                "message": []
            }
        },
        "Record.keys": {
            "name": "keys",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Record.extract": {
            "name": "extract",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Record._extract": {
            "name": "_extract",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/text.py": {
        "wrap_lines": {
            "name": "wrap_lines",
            "location": 7,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "lines": [],
                "width": []
            }
        },
        "wrap_and_style_lines": {
            "name": "wrap_and_style_lines",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [],
                "indent": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/__init__.py": {},
    "jsonlog-cli-master/jsonlog_cli/__main__.py": {},
    "jsonlog-cli-master/jsonlog_cli/tests/test_colours.py": {
        "test_colour_map": {
            "name": "test_colour_map",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_colour_map_missing": {
            "name": "test_colour_map_missing",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "jsonlog-cli-master/jsonlog_cli/tests/test_key.py": {
        "test_contains": {
            "name": "test_contains",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_format": {
            "name": "test_format",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "jsonlog-cli-master/jsonlog_cli/tests/test_record.py": {
        "test_examples": {
            "name": "test_examples",
            "location": 59,
            "return": [],
            "arguments": {
                "example": []
            }
        },
        "Example.record": {
            "name": "record",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "jsonlog-cli-master/jsonlog_cli/tests/__init__.py": {}
}
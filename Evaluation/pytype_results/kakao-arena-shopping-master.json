{
    "kakao-arena-shopping-master/avg_checkpoints.py": {
        "checkpoint_exists": {
            "name": "checkpoint_exists",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": []
            }
        },
        "main": {
            "name": "main",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "_": []
            }
        }
    },
    "kakao-arena-shopping-master/normalize.py": {
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "kakao-arena-shopping-master/predict.py": {
        "label_compatibility": {
            "name": "label_compatibility",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "high": [],
                "low": []
            }
        },
        "compute_descendant_matrix": {
            "name": "compute_descendant_matrix",
            "location": 47,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "data_dir": []
            }
        },
        "is_not_padding_example": {
            "name": "is_not_padding_example",
            "location": 95,
            "return": [
                "bool"
            ],
            "arguments": {
                "prediction": []
            }
        },
        "predict_input_fn": {
            "name": "predict_input_fn",
            "location": 100,
            "return": [
                "Any"
            ],
            "arguments": {
                "problem": [],
                "hparams": [],
                "data_dir": [],
                "params": [],
                "config": [],
                "dataset_kwargs": []
            }
        },
        "make_estimator_predict_input_fn": {
            "name": "make_estimator_predict_input_fn",
            "location": 182,
            "return": [
                "Callable[([Any, Any], Any)]"
            ],
            "arguments": {
                "problem": [],
                "hparams": [],
                "data_dir": [],
                "dataset_kwargs": []
            }
        },
        "main": {
            "name": "main",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SequentialGreedy.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": []
            }
        },
        "SequentialGreedy.class_id_to_label": {
            "name": "class_id_to_label",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "class_id": []
            }
        },
        "SequentialGreedy.predict_label_by_logit": {
            "name": "predict_label_by_logit",
            "location": 64,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "logits": []
            }
        },
        "SequentialGreedy.__call__": {
            "name": "__call__",
            "location": 79,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "prediction": []
            }
        },
        "PostProcessor.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "label_predictor": []
            }
        },
        "PostProcessor.__call__": {
            "name": "__call__",
            "location": 89,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "prediction": []
            }
        },
        "predict_input_fn.define_shapes": {
            "name": "define_shapes",
            "location": 132,
            "return": [],
            "arguments": {
                "example": []
            }
        },
        "predict_input_fn.prepare_for_output": {
            "name": "prepare_for_output",
            "location": 163,
            "return": [],
            "arguments": {
                "example": []
            }
        },
        "make_estimator_predict_input_fn.estimator_input_fn": {
            "name": "estimator_input_fn",
            "location": 188,
            "return": [],
            "arguments": {
                "params": [],
                "config": []
            }
        }
    },
    "kakao-arena-shopping-master/reduce_checkpoint_size.py": {
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "kakao-arena-shopping-master/setup.py": {},
    "kakao-arena-shopping-master/text_dump.py": {
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "main.remove_tabs": {
            "name": "remove_tabs",
            "location": 47,
            "return": [],
            "arguments": {
                "s": []
            }
        }
    },
    "kakao-arena-shopping-master/shopping/__init__.py": {},
    "kakao-arena-shopping-master/shopping/data/tokenizer.py": {
        "Token.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "Token.__eq__": {
            "name": "__eq__",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Tokenizer.tokenize": {
            "name": "tokenize",
            "location": 21,
            "return": [
                "Sequence[Token]"
            ],
            "arguments": {
                "self": [],
                "sentence": [
                    "str"
                ]
            }
        },
        "Tokenizer.detokenize": {
            "name": "detokenize",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "Iterable[str]"
                ]
            }
        },
        "SentencePieceTokenizer.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "model_file": [
                    "str"
                ],
                "remove_space_symbol": [
                    "bool"
                ]
            }
        },
        "SentencePieceTokenizer.__deepcopy__": {
            "name": "__deepcopy__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "memo": []
            }
        },
        "SentencePieceTokenizer.tokenize": {
            "name": "tokenize",
            "location": 46,
            "return": [
                "List[Token]"
            ],
            "arguments": {
                "self": [],
                "sentence": [
                    "str"
                ]
            }
        },
        "SentencePieceTokenizer._remove_space_symbol": {
            "name": "_remove_space_symbol",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "s": [
                    "str"
                ]
            }
        },
        "SentencePieceTokenizer.detokenize": {
            "name": "detokenize",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "tokens": [
                    "Iterable[str]"
                ]
            }
        }
    },
    "kakao-arena-shopping-master/shopping/data/vocabulary.py": {
        "Vocabulary.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vocab_list": [
                    "List[str]"
                ],
                "oov_token": [
                    "Optional[str]"
                ]
            }
        },
        "Vocabulary.token_to_id": {
            "name": "token_to_id",
            "location": 32,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str"
                ]
            }
        },
        "Vocabulary.id_to_token": {
            "name": "id_to_token",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "idx": [
                    "int"
                ]
            }
        },
        "Vocabulary.vocab_size": {
            "name": "vocab_size",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vocabulary.store_to_file": {
            "name": "store_to_file",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "Vocabulary.from_file": {
            "name": "from_file",
            "location": 60,
            "return": [
                "_TVocabulary"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVocabulary]"
                ],
                "filename": [
                    "str"
                ],
                "oov_token": [
                    "Optional[str]"
                ]
            }
        },
        "Vocabulary.from_sentence_piece": {
            "name": "from_sentence_piece",
            "location": 73,
            "return": [
                "_TVocabulary"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVocabulary]"
                ],
                "model_path": [
                    "str"
                ],
                "oov_token": [
                    "str"
                ],
                "remove_space_symbol": [
                    "bool"
                ]
            }
        }
    },
    "kakao-arena-shopping-master/shopping/data/__init__.py": {},
    "kakao-arena-shopping-master/shopping/data/datasets/shopping.py": {
        "remove_tabs": {
            "name": "remove_tabs",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "s": []
            }
        },
        "normalize": {
            "name": "normalize",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "text": []
            }
        },
        "decode_utf8_generator": {
            "name": "decode_utf8_generator",
            "location": 55,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "it": []
            }
        },
        "narrow_label": {
            "name": "narrow_label",
            "location": 98,
            "return": [
                "Tuple[(Any, Any, Any, Any)]"
            ],
            "arguments": {
                "label": []
            }
        },
        "load_labels": {
            "name": "load_labels",
            "location": 111,
            "return": [
                "Tuple[(list, Dict[(tuple, int)])]"
            ],
            "arguments": {
                "data_dir": [],
                "narrow": []
            }
        },
        "load_subclasses": {
            "name": "load_subclasses",
            "location": 122,
            "return": [
                "collections.defaultdict[(nothing, Any)]"
            ],
            "arguments": {
                "data_dir": [],
                "narrow": []
            }
        },
        "_load_dev_ids": {
            "name": "_load_dev_ids",
            "location": 159,
            "return": [
                "Set[str]"
            ],
            "arguments": {
                "tmp_dir": []
            }
        },
        "_parse_time": {
            "name": "_parse_time",
            "location": 166,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "s": []
            }
        },
        "weighted_label_accuracy": {
            "name": "weighted_label_accuracy",
            "location": 170,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "compute_score_matrix": {
            "name": "compute_score_matrix",
            "location": 188,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "data_dir": []
            }
        },
        "_randomly_rotate_text": {
            "name": "_randomly_rotate_text",
            "location": 198,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "text": [
                    "_T0"
                ]
            }
        },
        "_remove_model_numbers": {
            "name": "_remove_model_numbers",
            "location": 207,
            "return": [
                "str"
            ],
            "arguments": {
                "text": []
            }
        },
        "_augment_text": {
            "name": "_augment_text",
            "location": 212,
            "return": [
                "str"
            ],
            "arguments": {
                "text": []
            }
        },
        "softmax": {
            "name": "softmax",
            "location": 903,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": []
            }
        },
        "DatasetReader.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_paths": [],
                "div": []
            }
        },
        "DatasetReader.column_generator": {
            "name": "column_generator",
            "location": 81,
            "return": [
                "itertools.chain"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DatasetReader.text_column_generator": {
            "name": "text_column_generator",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DatasetReader.label_generator": {
            "name": "label_generator",
            "location": 90,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatasetReader.size": {
            "name": "size",
            "location": 94,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LabelVocabulary.__init__": {
            "name": "__init__",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "narrow": []
            }
        },
        "LabelVocabulary.id_to_label": {
            "name": "id_to_label",
            "location": 138,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "idx": []
            }
        },
        "LabelVocabulary.label_to_id": {
            "name": "label_to_id",
            "location": 141,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "LabelDecoder.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": []
            }
        },
        "LabelDecoder.decode_label": {
            "name": "decode_label",
            "location": 154,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "ShoppingScore.__init__": {
            "name": "__init__",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "name": []
            }
        },
        "ShoppingScore.select_class_by_logit": {
            "name": "select_class_by_logit",
            "location": 223,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "logits": []
            }
        },
        "ShoppingScore.__call__": {
            "name": "__call__",
            "location": 227,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "predictions": [],
                "labels": [],
                "weights_fn": []
            }
        },
        "RefinedShoppingScore.__init__": {
            "name": "__init__",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "name": []
            }
        },
        "RefinedShoppingScore.select_class_by_logit": {
            "name": "select_class_by_logit",
            "location": 255,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "logits": []
            }
        },
        "LogRealModality.bottom": {
            "name": "bottom",
            "location": 264,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "ShoppingTokenTextEncoder.__init__": {
            "name": "__init__",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tokenizer": [],
                "vocabulary": []
            }
        },
        "ShoppingTokenTextEncoder.encode": {
            "name": "encode",
            "location": 281,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "s": []
            }
        },
        "ShoppingTokenTextEncoder.encode_list": {
            "name": "encode_list",
            "location": 287,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "tokens": []
            }
        },
        "ShoppingTokenTextEncoder.decode": {
            "name": "decode",
            "location": 290,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ids": [],
                "strip_extraneous": []
            }
        },
        "ShoppingTokenTextEncoder.decode_list": {
            "name": "decode_list",
            "location": 294,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "ids": []
            }
        },
        "ShoppingTokenTextEncoder.vocab_size": {
            "name": "vocab_size",
            "location": 300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.generate_encoded_samples": {
            "name": "generate_encoded_samples",
            "location": 327,
            "return": [],
            "arguments": {
                "self": [],
                "data_dir": [],
                "tmp_dir": [],
                "dataset_split": [],
                "input_file": [],
                "augment": []
            }
        },
        "Shopping.already_shuffled": {
            "name": "already_shuffled",
            "location": 356,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.generate_data": {
            "name": "generate_data",
            "location": 359,
            "return": [],
            "arguments": {
                "self": [],
                "data_dir": [],
                "tmp_dir": [],
                "task_id": []
            }
        },
        "Shopping.augmentation_multiplier": {
            "name": "augmentation_multiplier",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping._task_id_to_input_file": {
            "name": "_task_id_to_input_file",
            "location": 414,
            "return": [],
            "arguments": {
                "self": [],
                "tmp_dir": [],
                "task_id": []
            }
        },
        "Shopping._task_id_to_output_split": {
            "name": "_task_id_to_output_split",
            "location": 419,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "Shopping.multiprocess_generate": {
            "name": "multiprocess_generate",
            "location": 434,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.num_generate_tasks": {
            "name": "num_generate_tasks",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.prepare_to_generate": {
            "name": "prepare_to_generate",
            "location": 444,
            "return": [],
            "arguments": {
                "self": [],
                "data_dir": [],
                "tmp_dir": []
            }
        },
        "Shopping.dataset_splits": {
            "name": "dataset_splits",
            "location": 449,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.is_generate_per_split": {
            "name": "is_generate_per_split",
            "location": 463,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.vocab_type": {
            "name": "vocab_type",
            "location": 468,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.oov_token": {
            "name": "oov_token",
            "location": 472,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.get_or_create_vocab": {
            "name": "get_or_create_vocab",
            "location": 475,
            "return": [],
            "arguments": {
                "self": [],
                "data_dir": [],
                "tmp_dir": [],
                "force_get": []
            }
        },
        "Shopping.generate_samples": {
            "name": "generate_samples",
            "location": 488,
            "return": [],
            "arguments": {
                "self": [],
                "data_dir": [],
                "tmp_dir": [],
                "dataset_split": [],
                "input_file": [],
                "augment": []
            }
        },
        "Shopping.dataset_iterator": {
            "name": "dataset_iterator",
            "location": 498,
            "return": [],
            "arguments": {
                "self": [],
                "ds": [],
                "dataset_split": [],
                "label_to_id": [],
                "dev_ids": [],
                "augment": []
            }
        },
        "Shopping.num_classes": {
            "name": "num_classes",
            "location": 543,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.class_labels": {
            "name": "class_labels",
            "location": 547,
            "return": [],
            "arguments": {
                "self": [],
                "data_dir": []
            }
        },
        "Shopping.hparams": {
            "name": "hparams",
            "location": 555,
            "return": [],
            "arguments": {
                "self": [],
                "defaults": [],
                "unused_model_hparams": []
            }
        },
        "Shopping.example_reading_spec": {
            "name": "example_reading_spec",
            "location": 569,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.eval_metrics": {
            "name": "eval_metrics",
            "location": 585,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shopping.eval_metric_fns": {
            "name": "eval_metric_fns",
            "location": 588,
            "return": [],
            "arguments": {
                "self": [],
                "model_hparams": []
            }
        },
        "HierarchicalLabelDecoder.__init__": {
            "name": "__init__",
            "location": 606,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": []
            }
        },
        "HierarchicalLabelDecoder.decode_label": {
            "name": "decode_label",
            "location": 614,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "level": [],
                "label": []
            }
        },
        "HierarchicalLabelVocabulary.__init__": {
            "name": "__init__",
            "location": 620,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "narrow": []
            }
        },
        "HierarchicalLabelVocabulary.level_class_ids": {
            "name": "level_class_ids",
            "location": 623,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "level": []
            }
        },
        "HierarchicalShoppingScore.__init__": {
            "name": "__init__",
            "location": 633,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "name": [],
                "level_weights": [],
                "class_vocab_sizes": []
            }
        },
        "HierarchicalShoppingScore.__call__": {
            "name": "__call__",
            "location": 643,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "predictions": [],
                "labels": [],
                "weights_fn": []
            }
        },
        "HierarchicalShoppingScore1.__init__": {
            "name": "__init__",
            "location": 689,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "name": []
            }
        },
        "HierarchicalShoppingScore2.__init__": {
            "name": "__init__",
            "location": 694,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "name": []
            }
        },
        "HierarchicalShoppingScore3.__init__": {
            "name": "__init__",
            "location": 699,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "name": []
            }
        },
        "HierarchicalShoppingScore4.__init__": {
            "name": "__init__",
            "location": 704,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "name": []
            }
        },
        "HierarchicalShoppingClassLabelModality.__init__": {
            "name": "__init__",
            "location": 711,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HierarchicalShoppingClassLabelModality.targets_weights_fn": {
            "name": "targets_weights_fn",
            "location": 717,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HierarchicalShoppingClassLabelModality.loss": {
            "name": "loss",
            "location": 721,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "top_out": [],
                "targets": [],
                "weights_fn": []
            }
        },
        "HierarchicalShopping.hparams": {
            "name": "hparams",
            "location": 788,
            "return": [],
            "arguments": {
                "self": [],
                "defaults": [],
                "unused_model_hparams": []
            }
        },
        "HierarchicalShopping.eval_metrics": {
            "name": "eval_metrics",
            "location": 794,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HierarchicalShopping.eval_metric_fns": {
            "name": "eval_metric_fns",
            "location": 797,
            "return": [],
            "arguments": {
                "self": [],
                "model_hparams": []
            }
        },
        "HierarchicalShoppingLogImage.hparams": {
            "name": "hparams",
            "location": 809,
            "return": [],
            "arguments": {
                "self": [],
                "defaults": [],
                "unused_model_hparams": []
            }
        },
        "ShoppingPublicLB.already_shuffled": {
            "name": "already_shuffled",
            "location": 818,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShoppingPublicLB._task_id_to_input_file": {
            "name": "_task_id_to_input_file",
            "location": 821,
            "return": [],
            "arguments": {
                "self": [],
                "tmp_dir": [],
                "task_id": []
            }
        },
        "ShoppingPublicLB._task_id_to_output_split": {
            "name": "_task_id_to_output_split",
            "location": 825,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "ShoppingPublicLB.dataset_splits": {
            "name": "dataset_splits",
            "location": 832,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShoppingPrivateLB.already_shuffled": {
            "name": "already_shuffled",
            "location": 840,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShoppingPrivateLB._task_id_to_input_file": {
            "name": "_task_id_to_input_file",
            "location": 843,
            "return": [],
            "arguments": {
                "self": [],
                "tmp_dir": [],
                "task_id": []
            }
        },
        "ShoppingPrivateLB._task_id_to_output_split": {
            "name": "_task_id_to_output_split",
            "location": 847,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "ShoppingPrivateLB.dataset_splits": {
            "name": "dataset_splits",
            "location": 854,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HierarchicalShoppingPublicLB.already_shuffled": {
            "name": "already_shuffled",
            "location": 862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HierarchicalShoppingPublicLB._task_id_to_input_file": {
            "name": "_task_id_to_input_file",
            "location": 865,
            "return": [],
            "arguments": {
                "self": [],
                "tmp_dir": [],
                "task_id": []
            }
        },
        "HierarchicalShoppingPublicLB._task_id_to_output_split": {
            "name": "_task_id_to_output_split",
            "location": 869,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "HierarchicalShoppingPublicLB.dataset_splits": {
            "name": "dataset_splits",
            "location": 876,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HierarchicalShoppingPrivateLB.already_shuffled": {
            "name": "already_shuffled",
            "location": 884,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HierarchicalShoppingPrivateLB._task_id_to_input_file": {
            "name": "_task_id_to_input_file",
            "location": 887,
            "return": [],
            "arguments": {
                "self": [],
                "tmp_dir": [],
                "task_id": []
            }
        },
        "HierarchicalShoppingPrivateLB._task_id_to_output_split": {
            "name": "_task_id_to_output_split",
            "location": 891,
            "return": [],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "HierarchicalShoppingPrivateLB.dataset_splits": {
            "name": "dataset_splits",
            "location": 898,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScoreMax.__init__": {
            "name": "__init__",
            "location": 910,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": []
            }
        },
        "ScoreMax.class_id_to_label": {
            "name": "class_id_to_label",
            "location": 914,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "class_id": []
            }
        },
        "ScoreMax.predict_label_by_logit": {
            "name": "predict_label_by_logit",
            "location": 917,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "logits": []
            }
        },
        "ScoreMax.__call__": {
            "name": "__call__",
            "location": 929,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "prediction": []
            }
        },
        "HierarchicalArgMax.__init__": {
            "name": "__init__",
            "location": 936,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_dir": [],
                "class_vocab_sizes": []
            }
        },
        "HierarchicalArgMax.predict_label_by_logit": {
            "name": "predict_label_by_logit",
            "location": 940,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": [],
                "logits": []
            }
        },
        "HierarchicalArgMax.__call__": {
            "name": "__call__",
            "location": 962,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "prediction": []
            }
        },
        "DatasetReader.__init__.get_div": {
            "name": "get_div",
            "location": 72,
            "return": [],
            "arguments": {
                "file_path": []
            }
        },
        "HierarchicalLabelVocabulary.level_class_ids._fix_pad": {
            "name": "_fix_pad",
            "location": 624,
            "return": [],
            "arguments": {
                "idx": []
            }
        }
    },
    "kakao-arena-shopping-master/shopping/data/datasets/__init__.py": {},
    "kakao-arena-shopping-master/shopping/models/image.py": {
        "basic_fc_relu": {
            "name": "basic_fc_relu",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "hparams": [],
                "x": [],
                "name": []
            }
        },
        "image_only_base": {
            "name": "image_only_base",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "image_only_small": {
            "name": "image_only_small",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "image_only_tall": {
            "name": "image_only_tall",
            "location": 76,
            "return": [],
            "arguments": {}
        },
        "attn": {
            "name": "attn",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "image_feat": [],
                "query": [],
                "hparams": [],
                "name": []
            }
        },
        "mlp": {
            "name": "mlp",
            "location": 128,
            "return": [
                "Any"
            ],
            "arguments": {
                "feature": [],
                "hparams": [],
                "name": []
            }
        },
        "image_attention_base": {
            "name": "image_attention_base",
            "location": 217,
            "return": [],
            "arguments": {}
        },
        "lstm_base_batch_8k_hidden_1k": {
            "name": "lstm_base_batch_8k_hidden_1k",
            "location": 233,
            "return": [],
            "arguments": {}
        },
        "lstm_base_batch_4k_hidden_1k": {
            "name": "lstm_base_batch_4k_hidden_1k",
            "location": 245,
            "return": [],
            "arguments": {}
        },
        "lstm_base_batch_16k_hidden_1k": {
            "name": "lstm_base_batch_16k_hidden_1k",
            "location": 255,
            "return": [],
            "arguments": {}
        },
        "lstm_big": {
            "name": "lstm_big",
            "location": 265,
            "return": [],
            "arguments": {}
        },
        "lstm_big_multistep8": {
            "name": "lstm_big_multistep8",
            "location": 283,
            "return": [],
            "arguments": {}
        },
        "lstm_base_batch_8k_hidden_2k": {
            "name": "lstm_base_batch_8k_hidden_2k",
            "location": 294,
            "return": [],
            "arguments": {}
        },
        "lstm_base_batch_32k_hidden_512": {
            "name": "lstm_base_batch_32k_hidden_512",
            "location": 305,
            "return": [],
            "arguments": {}
        },
        "lstm_tall_ls0": {
            "name": "lstm_tall_ls0",
            "location": 355,
            "return": [],
            "arguments": {}
        },
        "ImageOnly.body": {
            "name": "body",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "features": []
            }
        },
        "ImageAndPrice.body": {
            "name": "body",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "features": []
            }
        },
        "ImageLSTMConcat.body": {
            "name": "body",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "features": []
            }
        },
        "ImageFcAttention.body": {
            "name": "body",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "features": []
            }
        },
        "ImageSelfAttention.body": {
            "name": "body",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "features": []
            }
        }
    },
    "kakao-arena-shopping-master/shopping/models/__init__.py": {}
}
{
    "kerckhoff-server-master/manage.py": {},
    "kerckhoff-server-master/wait_for_postgres.py": {
        "pg_isready": {
            "name": "pg_isready",
            "location": 17,
            "return": [
                "bool"
            ],
            "arguments": {
                "db_url": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/urls.py": {},
    "kerckhoff-server-master/kerckhoff/wsgi.py": {},
    "kerckhoff-server-master/kerckhoff/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/comments/admin.py": {},
    "kerckhoff-server-master/kerckhoff/comments/models.py": {
        "CommentContent.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format": [],
                "text": []
            }
        },
        "CommentContent.get_content": {
            "name": "get_content",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/comments/serializers.py": {
        "CommentContentSerializer.create": {
            "name": "create",
            "location": 13,
            "return": [
                "kerckhoff.comments.models.CommentContent"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "CommentContentSerializer.validate_format": {
            "name": "validate_format",
            "location": 16,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "_T0"
                ]
            }
        },
        "CommentSerializer.create": {
            "name": "create",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "CommentSerializer.update": {
            "name": "update",
            "location": 50,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0"
                ],
                "validated_data": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/comments/views.py": {
        "CommentViewSet.perform_create": {
            "name": "perform_create",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/comments/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/comments/migrations/0001_initial.py": {},
    "kerckhoff-server-master/kerckhoff/comments/migrations/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/config/common.py": {},
    "kerckhoff-server-master/kerckhoff/config/local.py": {},
    "kerckhoff-server-master/kerckhoff/config/production.py": {},
    "kerckhoff-server-master/kerckhoff/config/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/config/fixtures/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/integrations/admin.py": {},
    "kerckhoff-server-master/kerckhoff/integrations/models.py": {
        "AuthData.empty": {
            "name": "empty",
            "location": 33,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "AuthData.get_oauth2_session": {
            "name": "get_oauth2_session",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "AuthData.get_authorization_url": {
            "name": "get_authorization_url",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthData.get_token": {
            "name": "get_token",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ]
            }
        },
        "AuthData.publish": {
            "name": "publish",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WordpressComAuthData.get_authorization_url": {
            "name": "get_authorization_url",
            "location": 71,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WordpressComAuthData.get_token": {
            "name": "get_token",
            "location": 78,
            "return": [
                "_TWordpressComAuthData"
            ],
            "arguments": {
                "self": [
                    "_TWordpressComAuthData"
                ],
                "code": [
                    "str"
                ]
            }
        },
        "WordpressComAuthData.publish": {
            "name": "publish",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Integration.__str__": {
            "name": "__str__",
            "location": 120,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Integration.save": {
            "name": "save",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Integration.auth_data": {
            "name": "auth_data",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Integration.begin_authorization": {
            "name": "begin_authorization",
            "location": 136,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Integration.validate": {
            "name": "validate",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ]
            }
        },
        "Integration.publish": {
            "name": "publish",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package_version": [
                    "kerckhoff.packages.models.PackageVersion"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/integrations/serializers.py": {
        "IntegrationSerializer.get_active": {
            "name": "get_active",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "kerckhoff.integrations.models.Integration"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/integrations/views.py": {
        "IntegrationOAuthView.get": {
            "name": "get",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/integrations/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/integrations/migrations/0001_initial.py": {},
    "kerckhoff-server-master/kerckhoff/integrations/migrations/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/packages/admin.py": {},
    "kerckhoff-server-master/kerckhoff/packages/constants.py": {},
    "kerckhoff-server-master/kerckhoff/packages/exceptions.py": {
        "GoogleDriveNotConfiguredException.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/models.py": {
        "PackageSet.__str__": {
            "name": "__str__",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageSet.get_or_create_gdrive_meta": {
            "name": "get_or_create_gdrive_meta",
            "location": 54,
            "return": [
                "GoogleDriveMeta"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageSet.get_new_packages_from_gdrive": {
            "name": "get_new_packages_from_gdrive",
            "location": 62,
            "return": [
                "List[Package]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.__str__": {
            "name": "__str__",
            "location": 124,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.get_version": {
            "name": "get_version",
            "location": 130,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "number": [
                    "int"
                ]
            }
        },
        "Package.get_all_versions": {
            "name": "get_all_versions",
            "location": 137,
            "return": [
                "List[PackageVersion]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.get_or_create_gdrive_meta": {
            "name": "get_or_create_gdrive_meta",
            "location": 141,
            "return": [
                "GoogleDriveMeta"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.fetch_cache": {
            "name": "fetch_cache",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Package.create_version": {
            "name": "create_version",
            "location": 190,
            "return": [
                "PackageVersion"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "package_version": [
                    "PackageVersion"
                ],
                "updated_package_item_titles": [
                    "List[str]"
                ]
            }
        },
        "Package.publish": {
            "name": "publish",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageVersion.__str__": {
            "name": "__str__",
            "location": 269,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageItem.refresh": {
            "name": "refresh",
            "location": 284,
            "return": [
                "_TPackageItem"
            ],
            "arguments": {
                "self": [
                    "_TPackageItem"
                ]
            }
        },
        "PackageItem.create_from_google_drive_item": {
            "name": "create_from_google_drive_item",
            "location": 293,
            "return": [
                "_TPackageItem"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPackageItem]"
                ],
                "user": [],
                "google_drive_file": [
                    "kerckhoff.packages.operations.models.GoogleDriveFile"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/serializers.py": {
        "PackageItemSerializer.to_representation": {
            "name": "to_representation",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "kerckhoff.packages.models.PackageItem"
                ]
            }
        },
        "CreatePackageVersionSerializer.create": {
            "name": "create",
            "location": 124,
            "return": [
                "kerckhoff.packages.models.PackageVersion"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "CreatePackageVersionSerializer.validate": {
            "name": "validate",
            "location": 133,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "attrs": [
                    "_T0"
                ]
            }
        },
        "RetrievePackageSerializer.to_representation": {
            "name": "to_representation",
            "location": 157,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "instance": []
            }
        },
        "RetrievePackageSerializer.get_version_data": {
            "name": "get_version_data",
            "location": 163,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "kerckhoff.packages.models.Package"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/tasks.py": {
        "sync_gdrive_task": {
            "name": "sync_gdrive_task",
            "location": 8,
            "return": [],
            "arguments": {
                "package_set_slug": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/views.py": {
        "PackageSetViewSet.sync_gdrive": {
            "name": "sync_gdrive",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "slug": []
            }
        },
        "PackageSetViewSet.async_sync_gdrive": {
            "name": "async_sync_gdrive",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "slug": []
            }
        },
        "PackageSetViewSet.integration": {
            "name": "integration",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "slug": []
            }
        },
        "PackageSetCreateAndListViewSet.perform_create": {
            "name": "perform_create",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "PackageViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageViewSet.preview": {
            "name": "preview",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PackageViewSet.publish": {
            "name": "publish",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PackageViewSet.snapshot": {
            "name": "snapshot",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PackageViewSet.versions": {
            "name": "versions",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PackageViewSet.retrieve": {
            "name": "retrieve",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PackageCreateAndListViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 140,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageCreateAndListViewSet.perform_create": {
            "name": "perform_create",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/packages/migrations/0001_initial.py": {},
    "kerckhoff-server-master/kerckhoff/packages/migrations/0002_auto_20190526_2006.py": {},
    "kerckhoff-server-master/kerckhoff/packages/migrations/0003_package_state.py": {},
    "kerckhoff-server-master/kerckhoff/packages/migrations/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/packages/operations/exceptions.py": {
        "OperationFailed.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "responseDict": [
                    "dict"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/operations/google_drive.py": {
        "GoogleDriveOperations.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "GoogleDriveOperations.filter_items": {
            "name": "filter_items",
            "location": 37,
            "return": [
                "Optional[list]"
            ],
            "arguments": {
                "cls": [],
                "items": [
                    "list"
                ],
                "type": [
                    "GoogleDriveOperations.FilterMethod"
                ],
                "extensions": [
                    "Tuple[(str, ...)]"
                ]
            }
        },
        "GoogleDriveOperations.list_folder": {
            "name": "list_folder",
            "location": 49,
            "return": [
                "Tuple[(list, str)]"
            ],
            "arguments": {
                "self": [],
                "gdrive_folder_id": [
                    "str"
                ],
                "all": [
                    "bool"
                ],
                "page_token": [
                    "str"
                ]
            }
        },
        "GoogleDriveOperations.download_item": {
            "name": "download_item",
            "location": 96,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "self": [],
                "gdrive_item": [
                    "kerckhoff.packages.operations.models.GoogleDriveFile"
                ]
            }
        },
        "GoogleDriveOperations._fetch_item_metadata": {
            "name": "_fetch_item_metadata",
            "location": 102,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "self": [],
                "gdrive_id": [
                    "str"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/operations/image_utils.py": {
        "ImageUtils.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "ImageUtils.snapshot_image": {
            "name": "snapshot_image",
            "location": 27,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "google_drive_image_file": [],
                "bucket": [],
                "quality": []
            }
        },
        "ImageUtils._compress_image": {
            "name": "_compress_image",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_path": [],
                "quality": [],
                "mimetype": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/operations/models.py": {
        "infer_format": {
            "name": "infer_format",
            "location": 230,
            "return": [
                "str"
            ],
            "arguments": {
                "file_title": [
                    "str"
                ]
            }
        },
        "ParsedContent.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw": [],
                "format": [
                    "str"
                ]
            }
        },
        "GoogleDriveFile.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "underlying": [
                    "dict"
                ],
                "from_serialized": []
            }
        },
        "GoogleDriveFile.get_download_link": {
            "name": "get_download_link",
            "location": 73,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveFile.get_data_type": {
            "name": "get_data_type",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveFile.to_json": {
            "name": "to_json",
            "location": 79,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveFile.from_json": {
            "name": "from_json",
            "location": 83,
            "return": [
                "_TGoogleDriveFile"
            ],
            "arguments": {
                "cls": [
                    "Type[_TGoogleDriveFile]"
                ],
                "serialized": [
                    "dict"
                ]
            }
        },
        "GoogleDriveFile.snapshot": {
            "name": "snapshot",
            "location": 91,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveTextFile.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "underlying": [
                    "dict"
                ],
                "from_serialized": []
            }
        },
        "GoogleDriveTextFile.get_download_link": {
            "name": "get_download_link",
            "location": 116,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveTextFile.get_data_type": {
            "name": "get_data_type",
            "location": 120,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveTextFile.to_json": {
            "name": "to_json",
            "location": 127,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveTextFile.from_json": {
            "name": "from_json",
            "location": 131,
            "return": [
                "_TGoogleDriveTextFile"
            ],
            "arguments": {
                "cls": [
                    "Type[_TGoogleDriveTextFile]"
                ],
                "serialized": [
                    "dict"
                ]
            }
        },
        "GoogleDriveTextFile.parse_content": {
            "name": "parse_content",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw": [
                    "str"
                ],
                "is_rich": []
            }
        },
        "GoogleDriveImageFile.__init__": {
            "name": "__init__",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "underlying": [
                    "dict"
                ],
                "from_serialized": []
            }
        },
        "GoogleDriveImageFile.get_data_type": {
            "name": "get_data_type",
            "location": 160,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveImageFile.to_json": {
            "name": "to_json",
            "location": 163,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleDriveImageFile.from_json": {
            "name": "from_json",
            "location": 169,
            "return": [
                "_TGoogleDriveImageFile"
            ],
            "arguments": {
                "cls": [
                    "Type[_TGoogleDriveImageFile]"
                ],
                "serialized": [
                    "dict"
                ]
            }
        },
        "GoogleDriveImageFile.snapshot": {
            "name": "snapshot",
            "location": 172,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "S3Item.__init__": {
            "name": "__init__",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "underlying": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/operations/parser.py": {
        "Parser.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._reset": {
            "name": "_reset",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._clear_buffer": {
            "name": "_clear_buffer",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._get_current_ref": {
            "name": "_get_current_ref",
            "location": 46,
            "return": [
                "Dict[(str, Dict[(str, Any)])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._access_or_create": {
            "name": "_access_or_create",
            "location": 66,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "thing": []
            }
        },
        "Parser._set_value": {
            "name": "_set_value",
            "location": 81,
            "return": [
                "Dict[(str, Union[(Dict[(str, _T0)], _T0)])]"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "List[str]"
                ],
                "value": [
                    "_T0"
                ],
                "replace": []
            }
        },
        "Parser._append_freeform_value": {
            "name": "_append_freeform_value",
            "location": 96,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "value": [],
                "key": []
            }
        },
        "Parser._append_string_value": {
            "name": "_append_string_value",
            "location": 102,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "Parser._is_array_type": {
            "name": "_is_array_type",
            "location": 108,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._is_freeform_array": {
            "name": "_is_freeform_array",
            "location": 111,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._handle_list_item": {
            "name": "_handle_list_item",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Parser._handle_pair": {
            "name": "_handle_pair",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Parser._handle_end_multiline": {
            "name": "_handle_end_multiline",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._handle_start_block": {
            "name": "_handle_start_block",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Parser._handle_end_block": {
            "name": "_handle_end_block",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._handle_start_array": {
            "name": "_handle_start_array",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "line": []
            }
        },
        "Parser._handle_end_array": {
            "name": "_handle_end_array",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._handle_skip": {
            "name": "_handle_skip",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._handle_end_skip": {
            "name": "_handle_end_skip",
            "location": 275,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._handle_comment": {
            "name": "_handle_comment",
            "location": 278,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "comment": []
            }
        },
        "Parser._handle_ignore": {
            "name": "_handle_ignore",
            "location": 294,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Parser._handle_command": {
            "name": "_handle_command",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "Parser.get_dict": {
            "name": "get_dict",
            "location": 313,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "document": []
            }
        },
        "Parser.parse": {
            "name": "parse",
            "location": 360,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "input_to_parse": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/operations/s3_utils.py": {
        "get_s3_client": {
            "name": "get_s3_client",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "upload_file": {
            "name": "upload_file",
            "location": 27,
            "return": [
                "Tuple[(str, Any)]"
            ],
            "arguments": {
                "s3_client": [],
                "image_path": [],
                "bucket": [],
                "mimetype": []
            }
        },
        "get_public_link": {
            "name": "get_public_link",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "google_drive_image_file": [],
                "duration": []
            }
        },
        "get_bucket_region": {
            "name": "get_bucket_region",
            "location": 49,
            "return": [
                "Any"
            ],
            "arguments": {
                "s3_client": [],
                "bucket": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/operations/utils.py": {
        "squash_prefix": {
            "name": "squash_prefix",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "prefix": [
                    "str"
                ],
                "to_squash": [
                    "str"
                ]
            }
        },
        "KeepOnlyInterestingSpans._style_is_boring": {
            "name": "_style_is_boring",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "prop": [],
                "value": []
            }
        },
        "KeepOnlyInterestingSpans._reduce_to_interesting_styles": {
            "name": "_reduce_to_interesting_styles",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "KeepOnlyInterestingSpans.__iter__": {
            "name": "__iter__",
            "location": 34,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConvertPTagsToNewlines.__iter__": {
            "name": "__iter__",
            "location": 59,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoveGoogleTrackingFromHrefs.__iter__": {
            "name": "__iter__",
            "location": 70,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "squash_prefix._squash_prefix": {
            "name": "_squash_prefix",
            "location": 94,
            "return": [],
            "arguments": {
                "prefix": [],
                "to_squash": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/packages/operations/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/taskqueues/celery.py": {
        "debug_task": {
            "name": "debug_task",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/taskqueues/tasks.py": {
        "query_result": {
            "name": "query_result",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {
                "task_id": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/taskqueues/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/userprofiles/admin.py": {},
    "kerckhoff-server-master/kerckhoff/userprofiles/models.py": {
        "create_user_profile": {
            "name": "create_user_profile",
            "location": 67,
            "return": [],
            "arguments": {
                "sender": [],
                "instance": [],
                "created": []
            }
        },
        "UserProfile.get_auth_information": {
            "name": "get_auth_information",
            "location": 32,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "provider": [
                    "str"
                ]
            }
        },
        "UserProfile.update_auth_information": {
            "name": "update_auth_information",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "provider": [
                    "str"
                ],
                "auth_info": [
                    "dict"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/userprofiles/roles.py": {},
    "kerckhoff-server-master/kerckhoff/userprofiles/serializers.py": {},
    "kerckhoff-server-master/kerckhoff/userprofiles/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/userprofiles/migrations/0001_initial.py": {},
    "kerckhoff-server-master/kerckhoff/userprofiles/migrations/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/users/admin.py": {},
    "kerckhoff-server-master/kerckhoff/users/models.py": {
        "create_auth_token": {
            "name": "create_auth_token",
            "location": 26,
            "return": [],
            "arguments": {
                "sender": [],
                "instance": [],
                "created": []
            }
        },
        "generate_username": {
            "name": "generate_username",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "firstname": [],
                "lastname": [],
                "index": [
                    "int"
                ]
            }
        },
        "generate_password": {
            "name": "generate_password",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "User.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/permissions.py": {
        "IsUserOrReadOnly.has_object_permission": {
            "name": "has_object_permission",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "view": [],
                "obj": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/serializers.py": {
        "UserSerializer.create": {
            "name": "create",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "UserSerializer.update": {
            "name": "update",
            "location": 28,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0"
                ],
                "validated_data": []
            }
        },
        "CreateUserSerializer.create": {
            "name": "create",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/urls.py": {},
    "kerckhoff-server-master/kerckhoff/users/views.py": {
        "AbstractOAuthView.get": {
            "name": "get",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/users/auth/exceptions.py": {},
    "kerckhoff-server-master/kerckhoff/users/auth/google.py": {
        "GoogleOAuthStrategy.login": {
            "name": "login",
            "location": 45,
            "return": [
                "Tuple[(Any, bool)]"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ]
            }
        },
        "GoogleOAuthStrategy.register": {
            "name": "register",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "profile": [
                    "dict"
                ]
            }
        },
        "GoogleOAuthStrategy.create_oauth2_session": {
            "name": "create_oauth2_session",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "user": []
            }
        },
        "GoogleOAuthStrategy._get_profile": {
            "name": "_get_profile",
            "location": 125,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleOAuthStrategy.create_oauth2_session.token_updater": {
            "name": "token_updater",
            "location": 100,
            "return": [],
            "arguments": {
                "token": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/auth/strategy.py": {
        "OAuthStrategy.login": {
            "name": "login",
            "location": 20,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ]
            }
        },
        "OAuthStrategy.register": {
            "name": "register",
            "location": 23,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "profile": [
                    "dict"
                ]
            }
        },
        "OAuthStrategy.get_authorization_url": {
            "name": "get_authorization_url",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "dict"
                ]
            }
        },
        "OAuthStrategy.get_access_token": {
            "name": "get_access_token",
            "location": 38,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str"
                ],
                "client_secret": [
                    "str"
                ]
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/auth/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/users/migrations/0001_initial.py": {},
    "kerckhoff-server-master/kerckhoff/users/migrations/__init__.py": {},
    "kerckhoff-server-master/kerckhoff/users/test/factories.py": {},
    "kerckhoff-server-master/kerckhoff/users/test/test_serializers.py": {
        "TestCreateUserSerializer.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreateUserSerializer.test_serializer_with_empty_data": {
            "name": "test_serializer_with_empty_data",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreateUserSerializer.test_serializer_with_valid_data": {
            "name": "test_serializer_with_valid_data",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCreateUserSerializer.test_serializer_hashes_password": {
            "name": "test_serializer_hashes_password",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/test/test_views.py": {
        "TestUserListTestCase.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserListTestCase.test_post_request_with_no_data_fails": {
            "name": "test_post_request_with_no_data_fails",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserListTestCase.test_post_request_with_valid_data_succeeds": {
            "name": "test_post_request_with_valid_data_succeeds",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserDetailTestCase.setUp": {
            "name": "setUp",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserDetailTestCase.test_get_request_returns_a_given_user": {
            "name": "test_get_request_returns_a_given_user",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUserDetailTestCase.test_put_request_updates_a_user": {
            "name": "test_put_request_updates_a_user",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "kerckhoff-server-master/kerckhoff/users/test/__init__.py": {}
}
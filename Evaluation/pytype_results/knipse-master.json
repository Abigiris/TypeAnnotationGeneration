{
    "knipse-master/knipse.py": {
        "_iter_files": {
            "name": "_iter_files",
            "location": 31,
            "return": [
                "Generator[(pathlib.Path, Any, None)]"
            ],
            "arguments": {
                "xml": []
            }
        },
        "iterate_catalogs": {
            "name": "iterate_catalogs",
            "location": 141,
            "return": [
                "Generator[(Tuple[(pathlib.Path, Any)], Any, None)]"
            ],
            "arguments": {
                "base_path": []
            }
        },
        "_ls": {
            "name": "_ls",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "_load_catalogs": {
            "name": "_load_catalogs",
            "location": 193,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "args_catalog": [],
                "catalogs_base_path": []
            }
        },
        "_check": {
            "name": "_check",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "_symlink": {
            "name": "_symlink",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "_move": {
            "name": "_move",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "_paths_from_stdin": {
            "name": "_paths_from_stdin",
            "location": 305,
            "return": [
                "Generator[(pathlib.Path, Any, None)]"
            ],
            "arguments": {}
        },
        "_create": {
            "name": "_create",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "_catalogs": {
            "name": "_catalogs",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MissingFilesException.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "missing_files": []
            }
        },
        "MissingFilesException.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Catalog.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "files": []
            }
        },
        "Catalog._update": {
            "name": "_update",
            "location": 50,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "sources": [],
                "destination": []
            }
        },
        "Catalog.update": {
            "name": "update",
            "location": 66,
            "return": [
                "List[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "self": [],
                "sources": [],
                "destination": []
            }
        },
        "Catalog.missing_files": {
            "name": "missing_files",
            "location": 72,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Catalog.__eq__": {
            "name": "__eq__",
            "location": 78,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Catalog.__iter__": {
            "name": "__iter__",
            "location": 85,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Catalog.__len__": {
            "name": "__len__",
            "location": 89,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Catalog.check": {
            "name": "check",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Catalog.to_xml": {
            "name": "to_xml",
            "location": 97,
            "return": [
                "ElementTree.ElementTree"
            ],
            "arguments": {
                "self": []
            }
        },
        "Catalog.create_symlinks": {
            "name": "create_symlinks",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [],
                "force_override": [],
                "index_prefix": []
            }
        },
        "Catalog.write": {
            "name": "write",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "Catalog.load_from_xml": {
            "name": "load_from_xml",
            "location": 123,
            "return": [
                "Catalog"
            ],
            "arguments": {
                "xml": []
            }
        },
        "Catalog.load_from_file": {
            "name": "load_from_file",
            "location": 127,
            "return": [
                "Catalog"
            ],
            "arguments": {
                "fname": []
            }
        },
        "Catalog.load_from_string": {
            "name": "load_from_string",
            "location": 136,
            "return": [
                "Catalog"
            ],
            "arguments": {
                "s": []
            }
        }
    },
    "knipse-master/setup.py": {},
    "knipse-master/tests/test_knipse.py": {
        "create_example_image": {
            "name": "create_example_image",
            "location": 21,
            "return": [
                "_T0"
            ],
            "arguments": {
                "image_path": [
                    "_T0"
                ]
            }
        },
        "create_example_images_iter": {
            "name": "create_example_images_iter",
            "location": 28,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "base_path": []
            }
        },
        "create_example_images": {
            "name": "create_example_images",
            "location": 39,
            "return": [
                "list"
            ],
            "arguments": {
                "base_path": []
            }
        },
        "create_example_catalog": {
            "name": "create_example_catalog",
            "location": 44,
            "return": [
                "_T0"
            ],
            "arguments": {
                "catalog_path": [
                    "_T0"
                ],
                "images": []
            }
        },
        "create_example_catalogs": {
            "name": "create_example_catalogs",
            "location": 50,
            "return": [
                "Generator[(Tuple[(Any, list)], Any, None)]"
            ],
            "arguments": {
                "base_path": [],
                "images": []
            }
        },
        "create_example_images_and_catalogs": {
            "name": "create_example_images_and_catalogs",
            "location": 63,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "base_path": []
            }
        },
        "Testknipse.setUp": {
            "name": "setUp",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_argument_parsing": {
            "name": "test_argument_parsing",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_loading_catalog": {
            "name": "test_loading_catalog",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_loading_paths_with_spaces": {
            "name": "test_loading_paths_with_spaces",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_loading_empty_catalog_file": {
            "name": "test_loading_empty_catalog_file",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_comparing_catalog": {
            "name": "test_comparing_catalog",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_iteration": {
            "name": "test_iteration",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_len": {
            "name": "test_len",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_xml_serialization": {
            "name": "test_xml_serialization",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_checking_catalog": {
            "name": "test_checking_catalog",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_walking_catalogs_folder_structure": {
            "name": "test_walking_catalogs_folder_structure",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_loading_empty_catalogs_while_iterating": {
            "name": "test_loading_empty_catalogs_while_iterating",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_example_images": {
            "name": "test_example_images",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_symlinking": {
            "name": "test_symlinking",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_symlinking_with_index": {
            "name": "test_symlinking_with_index",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testknipse.test_empty_catalog_symlinking": {
            "name": "test_empty_catalog_symlinking",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
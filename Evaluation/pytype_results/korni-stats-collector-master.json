{
    "korni-stats-collector-master/setup.py": {},
    "korni-stats-collector-master/ksc/utils.py": {
        "parse_link_header": {
            "name": "parse_link_header",
            "location": 8,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "link_header": []
            }
        },
        "get_next_link": {
            "name": "get_next_link",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "link_header": []
            }
        },
        "ilen": {
            "name": "ilen",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "iterable": []
            }
        }
    },
    "korni-stats-collector-master/ksc/__init__.py": {},
    "korni-stats-collector-master/ksc/__main__.py": {
        "cli": {
            "name": "cli",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "collect": {
            "name": "collect",
            "location": 26,
            "return": [],
            "arguments": {
                "display": [],
                "no_upload": []
            }
        }
    },
    "korni-stats-collector-master/ksc/collector/base.py": {
        "Collector.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "since": [],
                "until": []
            }
        },
        "Collector.collect": {
            "name": "collect",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Collector.__repr__": {
            "name": "__repr__",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "korni-stats-collector-master/ksc/collector/__init__.py": {},
    "korni-stats-collector-master/ksc/collector/github/collector.py": {
        "raise_for_limit": {
            "name": "raise_for_limit",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "response": []
            }
        },
        "fetch_contributions.filter_pr_open_since": {
            "name": "filter_pr_open_since",
            "location": 71,
            "return": [],
            "arguments": {
                "pr": []
            }
        },
        "fetch_contributions.filter_pr_merged_since": {
            "name": "filter_pr_merged_since",
            "location": 74,
            "return": [],
            "arguments": {
                "pr": []
            }
        },
        "GithubCollector.collect": {
            "name": "collect",
            "location": 339,
            "return": [
                "collector.Result"
            ],
            "arguments": {
                "self": []
            }
        },
        "fetch_list.parse_obj_safe": {
            "name": "parse_obj_safe",
            "location": 237,
            "return": [],
            "arguments": {
                "d": []
            }
        }
    },
    "korni-stats-collector-master/ksc/collector/github/github.py": {
        "PullRequest.is_authored_by": {
            "name": "is_authored_by",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "author": []
            }
        }
    },
    "korni-stats-collector-master/ksc/collector/github/__init__.py": {},
    "korni-stats-collector-master/ksc/collector/model/collector.py": {},
    "korni-stats-collector-master/ksc/collector/model/__init__.py": {},
    "korni-stats-collector-master/ksc/tests/base_collector_test.py": {
        "test_no_arg_constructor": {
            "name": "test_no_arg_constructor",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_since_only_constructor": {
            "name": "test_since_only_constructor",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_until_only_constructor_fails": {
            "name": "test_until_only_constructor_fails",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_if_since_larger_then_until": {
            "name": "test_if_since_larger_then_until",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dates_are_in_utc": {
            "name": "test_dates_are_in_utc",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "MockedCollector.collect": {
            "name": "collect",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "korni-stats-collector-master/ksc/tests/__init__.py": {}
}
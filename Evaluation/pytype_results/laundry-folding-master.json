{
    "laundry-folding-master/main.py": {},
    "laundry-folding-master/python/abb.py": {
        "check_coordinates": {
            "name": "check_coordinates",
            "location": 348,
            "return": [],
            "arguments": {
                "coordinates": []
            }
        },
        "Robot.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "ip": [],
                "port_motion": [],
                "port_logger": []
            }
        },
        "Robot.connect_motion": {
            "name": "connect_motion",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "remote": []
            }
        },
        "Robot.set_units": {
            "name": "set_units",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "linear": [],
                "angular": []
            }
        },
        "Robot.set_cartesian": {
            "name": "set_cartesian",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "pose": []
            }
        },
        "Robot.set_joints": {
            "name": "set_joints",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "joints": []
            }
        },
        "Robot.get_cartesian": {
            "name": "get_cartesian",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.get_joints": {
            "name": "get_joints",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.get_external_axis": {
            "name": "get_external_axis",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.get_robotinfo": {
            "name": "get_robotinfo",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.set_tool": {
            "name": "set_tool",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "tool": []
            }
        },
        "Robot.get_tool": {
            "name": "get_tool",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.set_workobject": {
            "name": "set_workobject",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "work_obj": []
            }
        },
        "Robot.set_speed": {
            "name": "set_speed",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "speed": []
            }
        },
        "Robot.set_zone": {
            "name": "set_zone",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "zone_key": [],
                "point_motion": [],
                "manual_zone": []
            }
        },
        "Robot.buffer_add": {
            "name": "buffer_add",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "pose": []
            }
        },
        "Robot.buffer_set": {
            "name": "buffer_set",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "pose_list": []
            }
        },
        "Robot.clear_buffer": {
            "name": "clear_buffer",
            "location": 253,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.buffer_len": {
            "name": "buffer_len",
            "location": 261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.buffer_execute": {
            "name": "buffer_execute",
            "location": 269,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.move_circular": {
            "name": "move_circular",
            "location": 285,
            "return": [],
            "arguments": {
                "self": [],
                "pose_onarc": [],
                "pose_end": []
            }
        },
        "Robot.set_dio": {
            "name": "set_dio",
            "location": 299,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "id": []
            }
        },
        "Robot.send": {
            "name": "send",
            "location": 309,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "wait_for_response": []
            }
        },
        "Robot.format_pose": {
            "name": "format_pose",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "pose": []
            }
        },
        "Robot.close": {
            "name": "close",
            "location": 335,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.__enter__": {
            "name": "__enter__",
            "location": 341,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Robot.__exit__": {
            "name": "__exit__",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "type": [],
                "value": [],
                "traceback": []
            }
        }
    },
    "laundry-folding-master/python/constants.py": {},
    "laundry-folding-master/python/controller.py": {
        "Controller.perform_setdown": {
            "name": "perform_setdown",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "dest_xy": [],
                "angle": [],
                "pull_distance": [],
                "lift_height": [],
                "right_side_down": []
            }
        },
        "Controller.generate_laydown_coords": {
            "name": "generate_laydown_coords",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "dest_xyz": [],
                "angle": [],
                "height": [],
                "right_side_down": []
            }
        },
        "Controller.perform_pickup": {
            "name": "perform_pickup",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "item_min_x": [],
                "slide_dist": [],
                "lift_height": []
            }
        },
        "Controller.perform_fold__a": {
            "name": "perform_fold__a",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Controller.__init__": {
            "name": "__init__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Controller.set_speed": {
            "name": "set_speed",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "speed_proportion": []
            }
        },
        "Controller.set_quaternion": {
            "name": "set_quaternion",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "quaternion": []
            }
        },
        "Controller.set_xyz": {
            "name": "set_xyz",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "xyz": [],
                "interpolate_steps": []
            }
        },
        "Controller.change_xyz": {
            "name": "change_xyz",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "z": [],
                "interpolate_steps": []
            }
        },
        "Controller.apply_quaternion": {
            "name": "apply_quaternion",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "quaternion": []
            }
        },
        "Controller.set_joints": {
            "name": "set_joints",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "joint_angles": []
            }
        },
        "Controller.move_test": {
            "name": "move_test",
            "location": 155,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "laundry-folding-master/python/helpers.py": {
        "get_robot_controller": {
            "name": "get_robot_controller",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "apply_quaternion": {
            "name": "apply_quaternion",
            "location": 40,
            "return": [],
            "arguments": {
                "base": [],
                "adjustment": []
            }
        },
        "interpolate_movement": {
            "name": "interpolate_movement",
            "location": 57,
            "return": [],
            "arguments": {
                "robot": [],
                "start": [],
                "end": [],
                "steps": [],
                "quaternions": []
            }
        },
        "change_coords": {
            "name": "change_coords",
            "location": 76,
            "return": [],
            "arguments": {
                "change": [],
                "robot": []
            }
        },
        "direction": {
            "name": "direction",
            "location": 89,
            "return": [],
            "arguments": {
                "angle_radians": []
            }
        },
        "vector_to_angle": {
            "name": "vector_to_angle",
            "location": 95,
            "return": [],
            "arguments": {
                "vector": []
            }
        },
        "within_range": {
            "name": "within_range",
            "location": 100,
            "return": [],
            "arguments": {
                "value": [],
                "a": [],
                "b": []
            }
        },
        "fix_angle": {
            "name": "fix_angle",
            "location": 113,
            "return": [],
            "arguments": {
                "value_radians": []
            }
        },
        "rotate": {
            "name": "rotate",
            "location": 121,
            "return": [],
            "arguments": {
                "points": [],
                "angle": []
            }
        },
        "translate": {
            "name": "translate",
            "location": 131,
            "return": [],
            "arguments": {
                "points": [],
                "dx": [],
                "dy": []
            }
        },
        "hitbox_of_path": {
            "name": "hitbox_of_path",
            "location": 138,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "buffer": []
            }
        },
        "rectangle": {
            "name": "rectangle",
            "location": 160,
            "return": [],
            "arguments": {
                "xmin": [],
                "xmax": [],
                "ymin": [],
                "ymax": []
            }
        }
    },
    "laundry-folding-master/python/main.py": {},
    "laundry-folding-master/python/laydown_planning/fold_instructions.py": {
        "FoldInstructions.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "intercept": [],
                "fold_angle": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/laydown_config.py": {
        "LaydownConfiguration.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "y": [],
                "ruler_direction": [],
                "garment_direction": []
            }
        },
        "LaydownConfiguration.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/laydown_path.py": {
        "LaydownPath.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "laydown_config": [],
                "height": [],
                "pull_dist": [],
                "destination_x": []
            }
        },
        "LaydownPath.shift_x": {
            "name": "shift_x",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "amount": []
            }
        },
        "LaydownPath.get_hitboxes": {
            "name": "get_hitboxes",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LaydownPath.__str__": {
            "name": "__str__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/laydown_planner.py": {
        "plan": {
            "name": "plan",
            "location": 10,
            "return": [],
            "arguments": {
                "fold_instructions": []
            }
        },
        "choose_best": {
            "name": "choose_best",
            "location": 31,
            "return": [],
            "arguments": {
                "paths": []
            }
        },
        "within_reach": {
            "name": "within_reach",
            "location": 54,
            "return": [],
            "arguments": {
                "laydown_path": []
            }
        },
        "collisions": {
            "name": "collisions",
            "location": 66,
            "return": [],
            "arguments": {
                "laydown_path": []
            }
        },
        "assign_value": {
            "name": "assign_value",
            "location": 73,
            "return": [],
            "arguments": {
                "laydown_path": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/testing.py": {
        "example_inputdisplay": {
            "name": "example_inputdisplay",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "example_laydown_config_display": {
            "name": "example_laydown_config_display",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "example_laydown_path_display": {
            "name": "example_laydown_path_display",
            "location": 31,
            "return": [],
            "arguments": {}
        },
        "checking_collision_detection": {
            "name": "checking_collision_detection",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "testing_overall_planner": {
            "name": "testing_overall_planner",
            "location": 66,
            "return": [],
            "arguments": {}
        }
    },
    "laundry-folding-master/python/laydown_planning/__init__.py": {},
    "laundry-folding-master/python/laydown_planning/gui/input_display.py": {
        "display_input": {
            "name": "display_input",
            "location": 11,
            "return": [],
            "arguments": {
                "instr": [],
                "filename": [],
                "fileformat": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/gui/laydown_config_display.py": {
        "display_laydown_config": {
            "name": "display_laydown_config",
            "location": 10,
            "return": [],
            "arguments": {
                "config": [],
                "filename": [],
                "fileformat": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/gui/laydown_path_display.py": {
        "display_laydown_path": {
            "name": "display_laydown_path",
            "location": 9,
            "return": [],
            "arguments": {
                "path": [],
                "filename": [],
                "fileformat": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/gui/smart_canvas.py": {
        "SmartCanvas.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "width": [],
                "height": [],
                "background": []
            }
        },
        "SmartCanvas.translation": {
            "name": "translation",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "SmartCanvas.scaling": {
            "name": "scaling",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "SmartCanvas.circle": {
            "name": "circle",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "center": [],
                "radius": [],
                "fill": []
            }
        },
        "SmartCanvas.line": {
            "name": "line",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "start": [],
                "end": [],
                "width": [],
                "fill": []
            }
        },
        "SmartCanvas.polygon": {
            "name": "polygon",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "polygon": [],
                "fill": []
            }
        },
        "SmartCanvas.show": {
            "name": "show",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SmartCanvas.save": {
            "name": "save",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "fileformat": []
            }
        },
        "SmartCanvas._fix_point": {
            "name": "_fix_point",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "SmartCanvas._fix_fill": {
            "name": "_fix_fill",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "fill": []
            }
        }
    },
    "laundry-folding-master/python/laydown_planning/gui/__init__.py": {}
}
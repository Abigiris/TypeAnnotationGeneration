{
    "layer_linter-master/setup.py": {},
    "layer_linter-master/docs/conf.py": {},
    "layer_linter-master/src/layer_linter/cmdline.py": {
        "create_parser": {
            "name": "create_parser",
            "location": 20,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 69,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "_main": {
            "name": "_main",
            "location": 80,
            "return": [
                "int"
            ],
            "arguments": {
                "package_name": [],
                "config_filename": [],
                "is_debug": [],
                "verbosity_count": [],
                "is_quiet": []
            }
        },
        "_normalise_verbosity": {
            "name": "_normalise_verbosity",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "verbosity_count": [],
                "is_quiet": []
            }
        },
        "_get_package": {
            "name": "_get_package",
            "location": 153,
            "return": [
                "layer_linter.module.SafeFilenameModule"
            ],
            "arguments": {
                "package_name": []
            }
        },
        "_get_contracts": {
            "name": "_get_contracts",
            "location": 178,
            "return": [
                "List[layer_linter.contract.Contract]"
            ],
            "arguments": {
                "config_filename": [],
                "package_name": []
            }
        },
        "_print_package_name_error_and_help": {
            "name": "_print_package_name_error_and_help",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "error_text": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/contract.py": {
        "contract_from_yaml": {
            "name": "contract_from_yaml",
            "location": 197,
            "return": [
                "Contract"
            ],
            "arguments": {
                "key": [],
                "data": [],
                "package_name": []
            }
        },
        "get_contracts": {
            "name": "get_contracts",
            "location": 238,
            "return": [
                "List[Contract]"
            ],
            "arguments": {
                "filename": [],
                "package_name": []
            }
        },
        "_validate_container_name": {
            "name": "_validate_container_name",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "container_name": [],
                "package_name": []
            }
        },
        "Layer.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "is_optional": []
            }
        },
        "Layer.__str__": {
            "name": "__str__",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Layer.__repr__": {
            "name": "__repr__",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contract.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "containers": [],
                "layers": [],
                "whitelisted_paths": []
            }
        },
        "Contract.check_dependencies": {
            "name": "check_dependencies",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dependencies": []
            }
        },
        "Contract._check_all_layers_exist_for_all_containers": {
            "name": "_check_all_layers_exist_for_all_containers",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dependencies": []
            }
        },
        "Contract._check_all_layers_exist_for_container": {
            "name": "_check_all_layers_exist_for_container",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "container": [],
                "dependencies": []
            }
        },
        "Contract._check_layer_does_not_import_downstream": {
            "name": "_check_layer_does_not_import_downstream",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "layer": [],
                "container": [],
                "dependencies": []
            }
        },
        "Contract._get_modules_in_layer": {
            "name": "_get_modules_in_layer",
            "location": 104,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "layer": [],
                "container": [],
                "dependencies": []
            }
        },
        "Contract._get_layer_module": {
            "name": "_get_layer_module",
            "location": 123,
            "return": [
                "layer_linter.module.Module"
            ],
            "arguments": {
                "self": [],
                "layer": [],
                "container": []
            }
        },
        "Contract._get_modules_in_downstream_layers": {
            "name": "_get_modules_in_downstream_layers",
            "location": 126,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "layer": [],
                "container": [],
                "dependencies": []
            }
        },
        "Contract._path_is_via_another_layer": {
            "name": "_path_is_via_another_layer",
            "location": 137,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "current_layer": [],
                "container": []
            }
        },
        "Contract._update_illegal_dependencies": {
            "name": "_update_illegal_dependencies",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Contract.is_kept": {
            "name": "is_kept",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Contract._get_layers_downstream_of": {
            "name": "_get_layers_downstream_of",
            "location": 184,
            "return": [
                "reversed"
            ],
            "arguments": {
                "self": [],
                "layer": []
            }
        },
        "Contract.__str__": {
            "name": "__str__",
            "location": 187,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contract.__repr__": {
            "name": "__repr__",
            "location": 190,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/module.py": {
        "Module.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Module.__str__": {
            "name": "__str__",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Module.__repr__": {
            "name": "__repr__",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Module.__eq__": {
            "name": "__eq__",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Module.__hash__": {
            "name": "__hash__",
            "location": 28,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SafeFilenameModule.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "filename": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/report.py": {
        "get_report_class": {
            "name": "get_report_class",
            "location": 13,
            "return": [
                "Type[Union[(NormalReport, VerboseReport)]]"
            ],
            "arguments": {
                "verbosity": []
            }
        },
        "BaseReport.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "graph": []
            }
        },
        "BaseReport.add_contract": {
            "name": "add_contract",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contract": []
            }
        },
        "BaseReport.output": {
            "name": "output",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseReport._output_title": {
            "name": "_output_title",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseReport._output_contracts_analysis": {
            "name": "_output_contracts_analysis",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseReport._output_contract_analysis": {
            "name": "_output_contract_analysis",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contract": []
            }
        },
        "BaseReport._output_contracts_summary": {
            "name": "_output_contracts_summary",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseReport._output_broken_contracts_details": {
            "name": "_output_broken_contracts_details",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuietReport.output": {
            "name": "output",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerboseReport.output": {
            "name": "output",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerboseReport._output_dependencies": {
            "name": "_output_dependencies",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsolePrinter.print_heading": {
            "name": "print_heading",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "text": [],
                "level": [],
                "style": []
            }
        },
        "ConsolePrinter.print": {
            "name": "print",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "text": [],
                "bold": []
            }
        },
        "ConsolePrinter.print_success": {
            "name": "print_success",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "text": [],
                "bold": []
            }
        },
        "ConsolePrinter.print_error": {
            "name": "print_error",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "text": [],
                "bold": []
            }
        },
        "ConsolePrinter.indent_cursor": {
            "name": "indent_cursor",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ConsolePrinter.new_line": {
            "name": "new_line",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ConsolePrinter.print_contract_one_liner": {
            "name": "print_contract_one_liner",
            "location": 219,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "contract": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/__init__.py": {},
    "layer_linter-master/src/layer_linter/__main__.py": {},
    "layer_linter-master/src/layer_linter/dependencies/analysis.py": {
        "DependencyAnalyzer.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "modules": [],
                "package": []
            }
        },
        "DependencyAnalyzer.determine_import_paths": {
            "name": "determine_import_paths",
            "location": 29,
            "return": [
                "List[layer_linter.dependencies.path.ImportPath]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DependencyAnalyzer._determine_import_paths_for_module": {
            "name": "_determine_import_paths_for_module",
            "location": 40,
            "return": [
                "List[layer_linter.dependencies.path.ImportPath]"
            ],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "DependencyAnalyzer._get_imported_modules": {
            "name": "_get_imported_modules",
            "location": 55,
            "return": [
                "List[layer_linter.module.Module]"
            ],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "DependencyAnalyzer._trim_each_to_known_modules": {
            "name": "_trim_each_to_known_modules",
            "location": 122,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "imported_modules": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/dependencies/graph.py": {
        "DependencyGraph.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "DependencyGraph.get_modules_directly_imported_by": {
            "name": "get_modules_directly_imported_by",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "importer": []
            }
        },
        "DependencyGraph.find_path": {
            "name": "find_path",
            "location": 61,
            "return": [
                "Optional[tuple]"
            ],
            "arguments": {
                "self": [],
                "downstream": [],
                "upstream": [],
                "ignore_paths": []
            }
        },
        "DependencyGraph.get_descendants": {
            "name": "get_descendants",
            "location": 91,
            "return": [
                "List[layer_linter.module.SafeFilenameModule]"
            ],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "DependencyGraph._add_path_to_networkx_graph": {
            "name": "_add_path_to_networkx_graph",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_path": []
            }
        },
        "DependencyGraph._remove_path_from_networkx_graph": {
            "name": "_remove_path_from_networkx_graph",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_path": []
            }
        },
        "DependencyGraph._import_path_is_in_networkx_graph": {
            "name": "_import_path_is_in_networkx_graph",
            "location": 108,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "import_path": []
            }
        },
        "DependencyGraph._remove_paths_from_networkx_graph": {
            "name": "_remove_paths_from_networkx_graph",
            "location": 113,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "import_paths": []
            }
        },
        "DependencyGraph._restore_paths_to_networkx_graph": {
            "name": "_restore_paths_to_networkx_graph",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_paths": []
            }
        },
        "DependencyGraph.__contains__": {
            "name": "__contains__",
            "location": 133,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/dependencies/path.py": {
        "ImportPath.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "importer": [],
                "imported": []
            }
        },
        "ImportPath.__str__": {
            "name": "__str__",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportPath.__repr__": {
            "name": "__repr__",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ImportPath.__eq__": {
            "name": "__eq__",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ImportPath.__hash__": {
            "name": "__hash__",
            "location": 31,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/dependencies/scanner.py": {
        "PackageScanner.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "PackageScanner.scan_for_modules": {
            "name": "scan_for_modules",
            "location": 23,
            "return": [
                "List[layer_linter.module.SafeFilenameModule]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageScanner._get_python_files_inside_package": {
            "name": "_get_python_files_inside_package",
            "location": 39,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "directory": []
            }
        },
        "PackageScanner._should_ignore_dir": {
            "name": "_should_ignore_dir",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "directory": []
            }
        },
        "PackageScanner._is_python_file": {
            "name": "_is_python_file",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "PackageScanner._module_name_from_filename": {
            "name": "_module_name_from_filename",
            "location": 78,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "filename_and_path": [],
                "package_directory": []
            }
        }
    },
    "layer_linter-master/src/layer_linter/dependencies/__init__.py": {},
    "layer_linter-master/tests/__init__.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/utils.py": {
        "foo": {
            "name": "foo",
            "location": 4,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/__init__.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/notsupplied/alpha.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/notsupplied/__init__.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/one/alpha.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/one/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/one/gamma.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/one/__init__.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/two/alpha.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/two/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/two/gamma.py": {},
    "layer_linter-master/tests/assets/analyzerpackage/analyzerpackage/two/__init__.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/four.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/one.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/three.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/two.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/__init__.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/is.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/one.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/three.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/two.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/__init__.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/.hidden/hidden.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/.hidden/__init__.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/migrations/migration_1.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/migrations/migration_2.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/migrations/__init__.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/subsubpackage/one.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/subsubpackage/three.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/subsubpackage/two.py": {},
    "layer_linter-master/tests/assets/dependenciespackage/dependenciespackage/subpackage/subsubpackage/__init__.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/three.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/__init__.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/five/alpha.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/five/__init__.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/four/alpha.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/four/__init__.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/alpha.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/beta.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/delta.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/epsilon.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/importer.py": {
        "wrapper": {
            "name": "wrapper",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/__init__.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/gamma/foo.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/one/gamma/__init__.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/two/alpha.py": {},
    "layer_linter-master/tests/assets/differentimporttypes/differentimporttypes/two/__init__.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/__init__.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/one/alpha.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/one/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/failurepackage/failurepackage/one/gamma.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/one/__init__.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/three/alpha.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/three/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/failurepackage/failurepackage/three/gamma.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/three/__init__.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/two/alpha.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/two/beta.py": {},
    "layer_linter-master/tests/assets/failurepackage/failurepackage/two/gamma.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/failurepackage/failurepackage/two/__init__.py": {},
    "layer_linter-master/tests/assets/initfileimports/initfileimports/alpha.py": {},
    "layer_linter-master/tests/assets/initfileimports/initfileimports/__init__.py": {},
    "layer_linter-master/tests/assets/initfileimports/initfileimports/one/alpha.py": {},
    "layer_linter-master/tests/assets/initfileimports/initfileimports/one/__init__.py": {},
    "layer_linter-master/tests/assets/initfileimports/initfileimports/two/__init__.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/four.py": {
        "foo": {
            "name": "foo",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/__init__.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/in/class.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/in/hyphenated-name.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/in/__init__.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/notapackage/orphan/foo.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/notapackage/orphan/__init__.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/one/alpha.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/one/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/one/gamma.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/one/__init__.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/one/delta/green.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/one/delta/red_blue.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/one/delta/__init__.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/two/alpha.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/two/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/two/gamma.py": {},
    "layer_linter-master/tests/assets/scannersuccess/scannersuccess/two/__init__.py": {},
    "layer_linter-master/tests/assets/singlecontractfile/singlecontractfile/__init__.py": {},
    "layer_linter-master/tests/assets/singlecontractfile/singlecontractfile/bar/__init__.py": {},
    "layer_linter-master/tests/assets/singlecontractfile/singlecontractfile/foo/__init__.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/utils.py": {
        "foo": {
            "name": "foo",
            "location": 1,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/successpackage/successpackage/__init__.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/one/alpha.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/one/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/successpackage/successpackage/one/delta.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/one/gamma.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/one/__init__.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/three/alpha.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/three/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/successpackage/successpackage/three/delta.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/three/gamma.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/three/__init__.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/two/alpha.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/two/beta.py": {
        "foo": {
            "name": "foo",
            "location": 3,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/assets/successpackage/successpackage/two/gamma.py": {},
    "layer_linter-master/tests/assets/successpackage/successpackage/two/__init__.py": {},
    "layer_linter-master/tests/functional/test_get_contracts.py": {
        "TestGetContracts.test_happy_path": {
            "name": "test_happy_path",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetContracts.test_container_does_not_exist": {
            "name": "test_container_does_not_exist",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetContracts._initialize_test": {
            "name": "_initialize_test",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_filename": []
            }
        }
    },
    "layer_linter-master/tests/functional/test_main.py": {
        "TestMain.test_success": {
            "name": "test_success",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "verbosity_count": [],
                "is_quiet": [],
                "should_always_fail": []
            }
        },
        "TestMain.test_failure": {
            "name": "test_failure",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "verbosity_count": [],
                "is_quiet": [],
                "should_always_fail": []
            }
        },
        "TestMain.test_specify_config_file": {
            "name": "test_specify_config_file",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "verbosity_count": [],
                "is_quiet": [],
                "should_always_fail": []
            }
        },
        "TestMain.test_missing_container": {
            "name": "test_missing_container",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "verbosity_count": [],
                "is_quiet": [],
                "should_always_fail": []
            }
        },
        "TestMain._chdir_and_add_to_system_path": {
            "name": "_chdir_and_add_to_system_path",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "package_name": []
            }
        }
    },
    "layer_linter-master/tests/functional/__init__.py": {},
    "layer_linter-master/tests/functional/dependencies/test_analysis.py": {
        "TestDependencyAnalyzer.test_success": {
            "name": "test_success",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyAnalyzer.test_all_different_import_types": {
            "name": "test_all_different_import_types",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyAnalyzer.test_import_from_within_init_file": {
            "name": "test_import_from_within_init_file",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyAnalyzer._build_modules": {
            "name": "_build_modules",
            "location": 126,
            "return": [
                "List[layer_linter.module.SafeFilenameModule]"
            ],
            "arguments": {
                "self": [],
                "package_name": [],
                "tuples": []
            }
        },
        "TestDependencyAnalyzer._build_import_paths": {
            "name": "_build_import_paths",
            "location": 145,
            "return": [
                "List[layer_linter.dependencies.path.ImportPath]"
            ],
            "arguments": {
                "self": [],
                "tuples": []
            }
        }
    },
    "layer_linter-master/tests/functional/dependencies/test_graph.py": {
        "test_dependency_graph": {
            "name": "test_dependency_graph",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "layer_linter-master/tests/functional/dependencies/test_scanner.py": {
        "TestPackageScanner.test_success": {
            "name": "test_success",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPackageScanner._get_package_directory": {
            "name": "_get_package_directory",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "package_name": []
            }
        },
        "TestPackageScanner._build_modules": {
            "name": "_build_modules",
            "location": 60,
            "return": [
                "List[layer_linter.module.SafeFilenameModule]"
            ],
            "arguments": {
                "self": [],
                "package_name": [],
                "tuples": []
            }
        }
    },
    "layer_linter-master/tests/functional/dependencies/__init__.py": {},
    "layer_linter-master/tests/unit/test_cmdline.py": {
        "test_normalise_verbosity": {
            "name": "test_normalise_verbosity",
            "location": 20,
            "return": [],
            "arguments": {
                "verbosity": [],
                "is_quiet": [],
                "expected_result": []
            }
        },
        "test_debug": {
            "name": "test_debug",
            "location": 38,
            "return": [],
            "arguments": {
                "mock_logging": [],
                "mock_get_contracts": [],
                "mock_get_package": [],
                "mock_graph": [],
                "mock_get_report_class": [],
                "is_debug": []
            }
        }
    },
    "layer_linter-master/tests/unit/test_contract.py": {
        "StubDependencyGraph.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "descendants": [],
                "paths": [],
                "modules": []
            }
        },
        "StubDependencyGraph.get_descendants": {
            "name": "get_descendants",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "module": []
            }
        },
        "StubDependencyGraph.find_path": {
            "name": "find_path",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "downstream": [],
                "upstream": [],
                "ignore_paths": []
            }
        },
        "StubDependencyGraph.__contains__": {
            "name": "__contains__",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "TestContractCheck.test_kept_contract": {
            "name": "test_kept_contract",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestContractCheck.test_broken_contract": {
            "name": "test_broken_contract",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestContractCheck.test_unchecked_contract_raises_exception": {
            "name": "test_unchecked_contract_raises_exception",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestContractCheck.test_broken_contract_via_other_layer": {
            "name": "test_broken_contract_via_other_layer",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestContractCheck.test_only_shortest_violation_is_reported": {
            "name": "test_only_shortest_violation_is_reported",
            "location": 262,
            "return": [],
            "arguments": {
                "self": [],
                "longer_first": []
            }
        },
        "TestContractCheck.test_missing_contract": {
            "name": "test_missing_contract",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "is_optional": []
            }
        },
        "TestContractFromYAML.test_parentheses_indicate_optional_layer": {
            "name": "test_parentheses_indicate_optional_layer",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_find_spec": []
            }
        },
        "TestContractFromYAML.test_incorrect_whitelisted_path_format": {
            "name": "test_incorrect_whitelisted_path_format",
            "location": 378,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_find_spec": []
            }
        },
        "TestContractFromYAML.test_container_not_in_package": {
            "name": "test_container_not_in_package",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mock_find_spec": []
            }
        }
    },
    "layer_linter-master/tests/unit/test_report.py": {
        "make_kept_contract": {
            "name": "make_kept_contract",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "make_broken_contract": {
            "name": "make_broken_contract",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "StubDependencyGraph.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StubDependencyGraph.get_modules_directly_imported_by": {
            "name": "get_modules_directly_imported_by",
            "location": 20,
            "return": [
                "List[layer_linter.module.Module]"
            ],
            "arguments": {
                "self": [],
                "importer": []
            }
        },
        "make_kept_contract._make_contract": {
            "name": "_make_contract",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "make_broken_contract._make_contract": {
            "name": "_make_contract",
            "location": 44,
            "return": [],
            "arguments": {
                "name": [],
                "illegal_dependencies": []
            }
        },
        "TestReport._report_contracts": {
            "name": "_report_contracts",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "report_class": [],
                "contracts": []
            }
        },
        "TestReport.test_single_kept_contract": {
            "name": "test_single_kept_contract",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "printer": [],
                "report_class": [],
                "make_kept_contract": []
            }
        },
        "TestReport.test_single_broken_contract_direct": {
            "name": "test_single_broken_contract_direct",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "printer": [],
                "report_class": [],
                "make_broken_contract": []
            }
        },
        "TestReport.test_multiple_kept_and_broken_contracts": {
            "name": "test_multiple_kept_and_broken_contracts",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "printer": [],
                "report_class": [],
                "make_kept_contract": [],
                "make_broken_contract": []
            }
        },
        "TestReport.test_single_broken_contract_indirect": {
            "name": "test_single_broken_contract_indirect",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "printer": [],
                "report_class": [],
                "make_broken_contract": []
            }
        },
        "TestReport.test_single_broken_contract_multiple_illegal_dependencies": {
            "name": "test_single_broken_contract_multiple_illegal_dependencies",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "printer": [],
                "report_class": [],
                "make_broken_contract": []
            }
        },
        "TestReport.assert_headings_printed": {
            "name": "assert_headings_printed",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "report_class": [],
                "printer": [],
                "is_successful": []
            }
        },
        "TestReport.assert_dependencies_printed": {
            "name": "assert_dependencies_printed",
            "location": 271,
            "return": [],
            "arguments": {
                "self": [],
                "printer": []
            }
        },
        "TestConsolePrinter.test_print_heading_1": {
            "name": "test_print_heading_1",
            "location": 290,
            "return": [],
            "arguments": {
                "self": [],
                "click": [],
                "style": [],
                "expected_color": []
            }
        },
        "TestConsolePrinter.test_print_heading_2": {
            "name": "test_print_heading_2",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "click": []
            }
        },
        "TestConsolePrinter.test_print_heading_3": {
            "name": "test_print_heading_3",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "click": []
            }
        },
        "TestConsolePrinter.test_print": {
            "name": "test_print",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "click": [],
                "bold": []
            }
        },
        "TestConsolePrinter.test_print_success": {
            "name": "test_print_success",
            "location": 333,
            "return": [],
            "arguments": {
                "self": [],
                "click": [],
                "bold": []
            }
        },
        "TestConsolePrinter.test_print_error": {
            "name": "test_print_error",
            "location": 340,
            "return": [],
            "arguments": {
                "self": [],
                "click": [],
                "bold": []
            }
        },
        "TestConsolePrinter.test_indent_cursor": {
            "name": "test_indent_cursor",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "click": []
            }
        },
        "TestConsolePrinter.test_new_line": {
            "name": "test_new_line",
            "location": 351,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "click": []
            }
        },
        "TestConsolePrinter.test_print_contract_one_liner": {
            "name": "test_print_contract_one_liner",
            "location": 361,
            "return": [],
            "arguments": {
                "self": [],
                "click": [],
                "is_kept": [],
                "whitelisted_path_length": [],
                "expected_label": [],
                "expected_color": []
            }
        }
    },
    "layer_linter-master/tests/unit/__init__.py": {},
    "layer_linter-master/tests/unit/dependencies/test_graph.py": {
        "DependencyAnalyzerStub.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "modules": [],
                "package": []
            }
        },
        "DependencyAnalyzerStub.determine_import_paths": {
            "name": "determine_import_paths",
            "location": 16,
            "return": [
                "List[layer_linter.dependencies.path.ImportPath]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageScannerStub.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "package": []
            }
        },
        "PackageScannerStub.scan_for_modules": {
            "name": "scan_for_modules",
            "location": 31,
            "return": [
                "List[layer_linter.module.Module]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_find_path_direct": {
            "name": "test_find_path_direct",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_find_path_indirect": {
            "name": "test_find_path_indirect",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_find_path_nonexistent": {
            "name": "test_find_path_nonexistent",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_direct_ignore_path_is_ignored": {
            "name": "test_direct_ignore_path_is_ignored",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_indirect_ignore_path_is_ignored": {
            "name": "test_indirect_ignore_path_is_ignored",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_get_descendants_nested": {
            "name": "test_get_descendants_nested",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_get_descendants_none": {
            "name": "test_get_descendants_none",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_module_count": {
            "name": "test_module_count",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_dependency_count": {
            "name": "test_dependency_count",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDependencyGraph.test_contains": {
            "name": "test_contains",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "layer_linter-master/tests/unit/dependencies/test_path.py": {
        "TestImportPath.test_repr": {
            "name": "test_repr",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportPath.test_equals": {
            "name": "test_equals",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestImportPath.test_hash": {
            "name": "test_hash",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "layer_linter-master/tests/unit/dependencies/__init__.py": {}
}
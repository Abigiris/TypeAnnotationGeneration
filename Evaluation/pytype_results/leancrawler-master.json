{
    "leancrawler-master/setup.py": {},
    "leancrawler-master/leancrawler/crawler.py": {
        "strip_name": {
            "name": "strip_name",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "name": []
            }
        },
        "crawl": {
            "name": "crawl",
            "location": 298,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "LeanDecl.from_dict": {
            "name": "from_dict",
            "location": 62,
            "return": [
                "_TLeanDecl"
            ],
            "arguments": {
                "cls": [
                    "typing.Type[_TLeanDecl]"
                ],
                "d": []
            }
        },
        "LeanDecl.user_kind": {
            "name": "user_kind",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LeanDecl.type_uses": {
            "name": "type_uses",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LeanDecl.value_uses": {
            "name": "value_uses",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LeanDecl.uses": {
            "name": "uses",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LeanDecl.__str__": {
            "name": "__str__",
            "location": 125,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LeanLib.__getitem__": {
            "name": "__getitem__",
            "location": 135,
            "return": [
                "LeanDecl"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "LeanLib.__setitem__": {
            "name": "__setitem__",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "LeanDecl"
                ]
            }
        },
        "LeanLib.__delitem__": {
            "name": "__delitem__",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "LeanLib.__contains__": {
            "name": "__contains__",
            "location": 144,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "LeanLib.__iter__": {
            "name": "__iter__",
            "location": 147,
            "return": [
                "Iterator[LeanDecl]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LeanLib.get": {
            "name": "get",
            "location": 150,
            "return": [
                "Optional[LeanDecl]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "default": [
                    "LeanDecl"
                ]
            }
        },
        "LeanLib.from_yaml": {
            "name": "from_yaml",
            "location": 155,
            "return": [
                "_TLeanLib"
            ],
            "arguments": {
                "cls": [
                    "Type[_TLeanLib]"
                ],
                "name": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "LeanLib.load_dump": {
            "name": "load_dump",
            "location": 189,
            "return": [
                "LeanLib"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "LeanLib.dump": {
            "name": "dump",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "LeanLib.prune_foundations": {
            "name": "prune_foundations",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "files": [
                    "Optional[List[str]]"
                ],
                "prefixes": [
                    "Optional[List[str]]"
                ]
            }
        },
        "LeanDeclGraph.from_lib": {
            "name": "from_lib",
            "location": 254,
            "return": [
                "_TLeanDeclGraph"
            ],
            "arguments": {
                "cls": [
                    "Type[_TLeanDeclGraph]"
                ],
                "lean": [
                    "LeanLib"
                ],
                "types_only": [
                    "bool"
                ]
            }
        },
        "LeanDeclGraph.layout": {
            "name": "layout",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": []
            }
        },
        "LeanDeclGraph.component_of": {
            "name": "component_of",
            "location": 289,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LeanDeclGraph.write": {
            "name": "write",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "LeanLib.from_yaml.rself": {
            "name": "rself",
            "location": 171,
            "return": [],
            "arguments": {
                "s": []
            }
        }
    },
    "leancrawler-master/leancrawler/__init__.py": {},
    "leancrawler-master/tests/test_dummy.py": {}
}
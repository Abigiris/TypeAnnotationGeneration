{
    "lets_talk-master/bidirectional-communication-service/src/configs.py": {},
    "lets_talk-master/bidirectional-communication-service/src/main.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/internal_services_communication/via_http/requests_http_client.py": {
        "RequestsHttpClient.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RequestsHttpClient.post": {
            "name": "post",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/message_broker/in_memory/__init__.py": {
        "InMemoryMessageBroker.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InMemoryMessageBroker.publish_message": {
            "name": "publish_message",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/persistent/in_memory/__init__.py": {
        "InMemoryOnlineUsersPersistent.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InMemoryOnlineUsersPersistent.save_online_user": {
            "name": "save_online_user",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InMemoryOnlineUsersPersistent.remove_online_user": {
            "name": "remove_online_user",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InMemoryOnlineUsersPersistent._validate_user_persistent_data": {
            "name": "_validate_user_persistent_data",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/web/sockets/gateway/base.py": {
        "BaseSockets.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSockets.on_connect": {
            "name": "on_connect",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSockets.on_disconnect": {
            "name": "on_disconnect",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/web/sockets/gateway/message.py": {
        "MessageSockets.on_message": {
            "name": "on_message",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/web/sockets/implementation/flask_sockets_implementation/io.py": {
        "get_io": {
            "name": "get_io",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/web/sockets/implementation/flask_sockets_implementation/base/__init__.py": {
        "FlaskBaseSockets.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FlaskBaseSockets.on_connect": {
            "name": "on_connect",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FlaskBaseSockets.on_disconnect": {
            "name": "on_disconnect",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/infrastructure/web/sockets/implementation/flask_sockets_implementation/message/__init__.py": {
        "FlaskMessageSockets.on_message": {
            "name": "on_message",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/usecase/user/add_online_user.py": {
        "AddOnlineUserUseCase.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddOnlineUserUseCase.execute": {
            "name": "execute",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/usecase/user/check_creds.py": {
        "CheckUserCredentialsUseCase.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CheckUserCredentialsUseCase.execute": {
            "name": "execute",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CheckUserCredentialsUseCase.__validate_data": {
            "name": "__validate_data",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/usecase/user/publish_online_user.py": {
        "PublishOnlineUserUseCase.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PublishOnlineUserUseCase.execute": {
            "name": "execute",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/application/usecase/user/remove_online_user.py": {
        "RemoveOnlineUserUseCase.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoveOnlineUserUseCase.execute": {
            "name": "execute",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/domain/entity/error.py": {},
    "lets_talk-master/bidirectional-communication-service/src/domain/entity/message.py": {},
    "lets_talk-master/bidirectional-communication-service/src/domain/entity/success.py": {},
    "lets_talk-master/bidirectional-communication-service/src/domain/entity/user_creds.py": {},
    "lets_talk-master/bidirectional-communication-service/src/domain/entity/user_persistence.py": {},
    "lets_talk-master/bidirectional-communication-service/src/domain/gateway/http_client.py": {
        "HttpClient.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HttpClient.post": {
            "name": "post",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/domain/gateway/message.py": {
        "SendMessage.execute": {
            "name": "execute",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/domain/gateway/message_broker.py": {
        "MessageBroker.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MessageBroker.publish_message": {
            "name": "publish_message",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/domain/gateway/online_users_persistent.py": {
        "OnlineUsersPersistent.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OnlineUsersPersistent.save_online_user": {
            "name": "save_online_user",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OnlineUsersPersistent.remove_online_user": {
            "name": "remove_online_user",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OnlineUsersPersistent._validate_user_persistent_data": {
            "name": "_validate_user_persistent_data",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/src/domain/gateway/user.py": {
        "CheckUserCredentials.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CheckUserCredentials.execute": {
            "name": "execute",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddOnlineUser.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AddOnlineUser.execute": {
            "name": "execute",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoveOnlineUser.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RemoveOnlineUser.execute": {
            "name": "execute",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/tests/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/web/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/web/sockets/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/web/sockets/flask_sockets_implementation/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/web/sockets/flask_sockets_implementation/base/test_base_sockets.py": {
        "test_valid_connection": {
            "name": "test_valid_connection",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_invalid_connection": {
            "name": "test_invalid_connection",
            "location": 47,
            "return": [],
            "arguments": {}
        },
        "test_successfully_disconnected": {
            "name": "test_successfully_disconnected",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "FakeHttpClient.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FakeHttpClient.post": {
            "name": "post",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/web/sockets/flask_sockets_implementation/base/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/web/sockets/flask_sockets_implementation/message/test_send_message.py": {
        "test_valid_send_message_to_all": {
            "name": "test_valid_send_message_to_all",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "FakeHttpClient.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FakeHttpClient.post": {
            "name": "post",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/tests/infrastucture/web/sockets/flask_sockets_implementation/message/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/usecase/__init__.py": {},
    "lets_talk-master/bidirectional-communication-service/tests/usecase/user/test_add_online_user.py": {
        "usecase": {
            "name": "usecase",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "test_valid_add_online_user": {
            "name": "test_valid_add_online_user",
            "location": 20,
            "return": [],
            "arguments": {
                "usecase": []
            }
        },
        "test_invalid_add_online_user": {
            "name": "test_invalid_add_online_user",
            "location": 28,
            "return": [],
            "arguments": {
                "usecase": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/tests/usecase/user/test_check_creds.py": {
        "test_valid_user_credentials_check": {
            "name": "test_valid_user_credentials_check",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_invalid_user_credentials_check": {
            "name": "test_invalid_user_credentials_check",
            "location": 33,
            "return": [],
            "arguments": {}
        },
        "FakeHttpClient.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FakeHttpClient.post": {
            "name": "post",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/tests/usecase/user/test_remove_online_user.py": {
        "usecases": {
            "name": "usecases",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_valid_remove_online_user": {
            "name": "test_valid_remove_online_user",
            "location": 22,
            "return": [],
            "arguments": {
                "usecases": []
            }
        },
        "test_invalid_remove_online_user": {
            "name": "test_invalid_remove_online_user",
            "location": 36,
            "return": [],
            "arguments": {
                "usecases": []
            }
        }
    },
    "lets_talk-master/bidirectional-communication-service/tests/usecase/user/__init__.py": {},
    "lets_talk-master/frontend-cli-app/src/configs.py": {},
    "lets_talk-master/frontend-cli-app/src/loop.py": {
        "loop": {
            "name": "loop",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/frontend-cli-app/src/main.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/frontend-cli-app/src/handlers/chatting.py": {
        "chatting_handler": {
            "name": "chatting_handler",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/frontend-cli-app/src/handlers/login.py": {
        "login_handler": {
            "name": "login_handler",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/frontend-cli-app/src/handlers/logout.py": {
        "logout_handler": {
            "name": "logout_handler",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/frontend-cli-app/src/handlers/register.py": {
        "register_handler": {
            "name": "register_handler",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/frontend-cli-app/src/utils/__init__.py": {
        "get_cli_menu": {
            "name": "get_cli_menu",
            "location": 17,
            "return": [],
            "arguments": {
                "menu_items": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/configs.py": {},
    "lets_talk-master/user-management-service/src/main.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/user-management-service/src/application/infrastructure/persistent/in_memory/in_memory.py": {
        "InMemoryUserDatabaseRepository.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InMemoryUserDatabaseRepository.save_user": {
            "name": "save_user",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InMemoryUserDatabaseRepository.check_user_credentials": {
            "name": "check_user_credentials",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InMemoryUserDatabaseRepository.__does_exist_before": {
            "name": "__does_exist_before",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/application/infrastructure/persistent/mongodb/models.py": {
        "Models.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/application/infrastructure/persistent/mongodb/mongodb.py": {
        "MongoUserDatabaseRepository.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MongoUserDatabaseRepository.save_user": {
            "name": "save_user",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MongoUserDatabaseRepository.check_user_credentials": {
            "name": "check_user_credentials",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MongoUserDatabaseRepository.__does_exist_before": {
            "name": "__does_exist_before",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/application/infrastructure/persistent/mongodb/__init__.py": {},
    "lets_talk-master/user-management-service/src/application/infrastructure/web/rest_gateway/user_rest_gateway.py": {
        "UserJson.from_user": {
            "name": "from_user",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "UserRestApiGateway.Post.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRestApiGateway.Post.register_user": {
            "name": "register_user",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserRestApiGateway.Post.check_user_credentials": {
            "name": "check_user_credentials",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/application/infrastructure/web/rest_implementation/flask_api/api.py": {
        "get_api": {
            "name": "get_api",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/user-management-service/src/application/infrastructure/web/rest_implementation/flask_api/user/post.py": {
        "PostUser.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostUser.register_user": {
            "name": "register_user",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostUser.check_user_credentials": {
            "name": "check_user_credentials",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/application/usecase/user/check_creds.py": {
        "CheckUserCredentialsUseCase.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CheckUserCredentialsUseCase.execute": {
            "name": "execute",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CheckUserCredentialsUseCase.__validate_data": {
            "name": "__validate_data",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/application/usecase/user/create.py": {
        "CreateUserUseCase.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "db_repository": []
            }
        },
        "CreateUserUseCase.execute": {
            "name": "execute",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateUserUseCase.__validate_data": {
            "name": "__validate_data",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/domain/entity/error.py": {},
    "lets_talk-master/user-management-service/src/domain/entity/success.py": {},
    "lets_talk-master/user-management-service/src/domain/entity/user.py": {},
    "lets_talk-master/user-management-service/src/domain/gateway/user.py": {
        "CreateUser.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CreateUser.execute": {
            "name": "execute",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CheckUserCredentials.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CheckUserCredentials.execute": {
            "name": "execute",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/src/domain/gateway/user_database_repository.py": {
        "UserDatabaseRepository.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserDatabaseRepository.save_user": {
            "name": "save_user",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UserDatabaseRepository.check_user_credentials": {
            "name": "check_user_credentials",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lets_talk-master/user-management-service/tests/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/infrastructure/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/infrastructure/web/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/infrastructure/web/rest_implemintation/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/infrastructure/web/rest_implemintation/flask_api/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/infrastructure/web/rest_implemintation/flask_api/user/test_check_user_credentials.py": {
        "api": {
            "name": "api",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_valid_post_user": {
            "name": "test_valid_post_user",
            "location": 24,
            "return": [],
            "arguments": {
                "api": []
            }
        },
        "test_invalid_post_user": {
            "name": "test_invalid_post_user",
            "location": 37,
            "return": [],
            "arguments": {
                "api": []
            }
        }
    },
    "lets_talk-master/user-management-service/tests/application/infrastructure/web/rest_implemintation/flask_api/user/test_post_user.py": {
        "api": {
            "name": "api",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_valid_post_user": {
            "name": "test_valid_post_user",
            "location": 24,
            "return": [],
            "arguments": {
                "api": []
            }
        },
        "test_invalid_post_user": {
            "name": "test_invalid_post_user",
            "location": 37,
            "return": [],
            "arguments": {
                "api": []
            }
        }
    },
    "lets_talk-master/user-management-service/tests/application/infrastructure/web/rest_implemintation/flask_api/user/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/usecase/__init__.py": {},
    "lets_talk-master/user-management-service/tests/application/usecase/user/helper.py": {
        "from_dict_to_user": {
            "name": "from_dict_to_user",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "lets_talk-master/user-management-service/tests/application/usecase/user/test_check_user_credentials_in_memory.py": {
        "usecases": {
            "name": "usecases",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_valid_user_credentials": {
            "name": "test_valid_user_credentials",
            "location": 19,
            "return": [],
            "arguments": {
                "usecases": []
            }
        },
        "test_invalid_user_credentials": {
            "name": "test_invalid_user_credentials",
            "location": 31,
            "return": [],
            "arguments": {
                "usecases": []
            }
        }
    },
    "lets_talk-master/user-management-service/tests/application/usecase/user/test_check_user_credentials_mongodb.py": {
        "usecases": {
            "name": "usecases",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_valid_user_credentials": {
            "name": "test_valid_user_credentials",
            "location": 36,
            "return": [],
            "arguments": {
                "usecases": []
            }
        },
        "test_invalid_user_credentials": {
            "name": "test_invalid_user_credentials",
            "location": 49,
            "return": [],
            "arguments": {
                "usecases": []
            }
        }
    },
    "lets_talk-master/user-management-service/tests/application/usecase/user/test_create_user_in_memory.py": {
        "create_user_usecase": {
            "name": "create_user_usecase",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_valid_create_user": {
            "name": "test_valid_create_user",
            "location": 17,
            "return": [],
            "arguments": {
                "create_user_usecase": []
            }
        },
        "test_invalid_create_user": {
            "name": "test_invalid_create_user",
            "location": 29,
            "return": [],
            "arguments": {
                "create_user_usecase": []
            }
        },
        "test_invalid_create_user_exists_before": {
            "name": "test_invalid_create_user_exists_before",
            "location": 55,
            "return": [],
            "arguments": {
                "create_user_usecase": []
            }
        }
    },
    "lets_talk-master/user-management-service/tests/application/usecase/user/test_create_user_mongodb.py": {
        "create_user_usecase": {
            "name": "create_user_usecase",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_valid_create_user": {
            "name": "test_valid_create_user",
            "location": 35,
            "return": [],
            "arguments": {
                "create_user_usecase": []
            }
        },
        "test_invalid_create_user": {
            "name": "test_invalid_create_user",
            "location": 51,
            "return": [],
            "arguments": {
                "create_user_usecase": []
            }
        },
        "test_invalid_create_user_exists_before": {
            "name": "test_invalid_create_user_exists_before",
            "location": 78,
            "return": [],
            "arguments": {
                "create_user_usecase": []
            }
        }
    },
    "lets_talk-master/user-management-service/tests/application/usecase/user/__init__.py": {}
}
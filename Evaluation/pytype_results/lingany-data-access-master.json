{
    "lingany-data-access-master/lib/loader/database_loader/load_db.py": {
        "main": {
            "name": "main",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "load_languages": {
            "name": "load_languages",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "load_reflections": {
            "name": "load_reflections",
            "location": 53,
            "return": [],
            "arguments": {}
        },
        "load_categories": {
            "name": "load_categories",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "load_training": {
            "name": "load_training",
            "location": 84,
            "return": [],
            "arguments": {}
        },
        "get_files": {
            "name": "get_files",
            "location": 99,
            "return": [],
            "arguments": {
                "p_path": []
            }
        },
        "CSVReader.read": {
            "name": "read",
            "location": 14,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "lingany-data-access-master/lib/loader/lib/sqlutils/setup.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/entity.py": {
        "return_one": {
            "name": "return_one",
            "location": 9,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "return_many": {
            "name": "return_many",
            "location": 15,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "create_one": {
            "name": "create_one",
            "location": 19,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "create_many": {
            "name": "create_many",
            "location": 25,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "Entity.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Entity._key_field": {
            "name": "_key_field",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.uid": {
            "name": "uid",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Entity.fill": {
            "name": "fill",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "Entity.create": {
            "name": "create",
            "location": 58,
            "return": [],
            "arguments": {
                "cls": [],
                "values": []
            }
        },
        "Entity.copy": {
            "name": "copy",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.set_new_id": {
            "name": "set_new_id",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/__init__.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/data_contexts/data_context.py": {
        "DataContext.conn_string": {
            "name": "conn_string",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataContext.execute": {
            "name": "execute",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.callproc": {
            "name": "callproc",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.get_by_id": {
            "name": "get_by_id",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "DataContext.get_all": {
            "name": "get_all",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "DataContext.add": {
            "name": "add",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "DataContext.update": {
            "name": "update",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "DataContext.delete": {
            "name": "delete",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/data_contexts/data_context_factory.py": {
        "DataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/data_contexts/env_data_context_factory.py": {
        "EnvDataContextFactory.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvDataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/data_contexts/postgres_data_context.py": {
        "PostgresDataContext.conn_string": {
            "name": "conn_string",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresDataContext.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "database": [],
                "user": [],
                "password": []
            }
        },
        "PostgresDataContext.execute": {
            "name": "execute",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext.callproc": {
            "name": "callproc",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext._get_connection": {
            "name": "_get_connection",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresDataContext._put_connection": {
            "name": "_put_connection",
            "location": 101,
            "return": [],
            "arguments": {
                "self": [],
                "conn": []
            }
        },
        "PostgresDataContext._create_connection": {
            "name": "_create_connection",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "value": []
            }
        },
        "PostgresDataContext.get_all": {
            "name": "get_all",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "PostgresDataContext.add": {
            "name": "add",
            "location": 117,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "PostgresDataContext.delete": {
            "name": "delete",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "PostgresDataContext.update": {
            "name": "update",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        }
    },
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/data_contexts/__init__.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/errors/foreign_key_violation_error.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/errors/not_null_violation.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/errors/no_data_found_error.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/errors/restrict_violation_error.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/errors/sql_error.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/errors/unique_violation_error.py": {},
    "lingany-data-access-master/lib/loader/lib/sqlutils/sqlutils/errors/__init__.py": {},
    "lingany-data-access-master/lib/translator/test.py": {},
    "lingany-data-access-master/lib/translator/translater.py": {
        "Translator.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "native_language": [],
                "foreign_language": []
            }
        },
        "Translator.translate_word": {
            "name": "translate_word",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "native_language": [],
                "foreign_language": []
            }
        },
        "Translator.translate_text": {
            "name": "translate_text",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "native_language": [],
                "foreign_language": []
            }
        }
    },
    "lingany-data-access-master/lib/translator/__init__.py": {},
    "lingany-data-access-master/lib/translator/models/Params.py": {
        "Params.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "nlang": [],
                "flang": []
            }
        },
        "Params.get_params": {
            "name": "get_params",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "Params.post_params": {
            "name": "post_params",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "text": []
            }
        }
    },
    "lingany-data-access-master/lib/translator/models/__init__.py": {},
    "lingany-data-access-master/manage/data_manager/main.py": {},
    "lingany-data-access-master/manage/data_manager/setup.py": {},
    "lingany-data-access-master/manage/data_manager/__init__.py": {},
    "lingany-data-access-master/manage/data_manager/manager/manager.py": {
        "manage": {
            "name": "manage",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/__init__.py": {},
    "lingany-data-access-master/manage/data_manager/manager/commands/setup_categories.py": {
        "setup": {
            "name": "setup",
            "location": 21,
            "return": [],
            "arguments": {
                "conf": [],
                "languages": [],
                "reflections": []
            }
        },
        "convert_external_categories": {
            "name": "convert_external_categories",
            "location": 29,
            "return": [],
            "arguments": {
                "external": [],
                "languages": [],
                "reflections": []
            }
        },
        "translate_title": {
            "name": "translate_title",
            "location": 46,
            "return": [],
            "arguments": {
                "title": [],
                "languages": []
            }
        },
        "save_categories": {
            "name": "save_categories",
            "location": 64,
            "return": [],
            "arguments": {
                "conf": [],
                "categories": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/commands/setup_reflections.py": {
        "setup": {
            "name": "setup",
            "location": 14,
            "return": [],
            "arguments": {
                "conf": [],
                "languages": []
            }
        },
        "save_new_supported_reflection": {
            "name": "save_new_supported_reflection",
            "location": 21,
            "return": [],
            "arguments": {
                "languages": [],
                "reflections": [],
                "conf": []
            }
        },
        "create_new_supported_reflections": {
            "name": "create_new_supported_reflections",
            "location": 47,
            "return": [],
            "arguments": {
                "languages": [],
                "reflections": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/commands/setup_training.py": {
        "setup": {
            "name": "setup",
            "location": 17,
            "return": [],
            "arguments": {
                "conf": [],
                "categories": []
            }
        },
        "save": {
            "name": "save",
            "location": 22,
            "return": [],
            "arguments": {
                "conf": [],
                "trainings": []
            }
        },
        "create_trainings": {
            "name": "create_trainings",
            "location": 34,
            "return": [],
            "arguments": {
                "categories": []
            }
        },
        "translate_item": {
            "name": "translate_item",
            "location": 50,
            "return": [],
            "arguments": {
                "item": [],
                "native_lang_code": [],
                "foreign_lang_code": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/commands/__init__.py": {},
    "lingany-data-access-master/manage/data_manager/manager/conf/configure.py": {
        "Configure.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [],
            "arguments": {
                "self": [],
                "list_path": [],
                "dict_path": [],
                "output_reflections_path": [],
                "output_categories_path": [],
                "output_training_path": []
            }
        },
        "Configure.list_path": {
            "name": "list_path",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configure.dict_path": {
            "name": "dict_path",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configure.output_reflections_path": {
            "name": "output_reflections_path",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configure.output_categories_path": {
            "name": "output_categories_path",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Configure.output_training_path": {
            "name": "output_training_path",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/conf/env_congigure_facotry.py": {
        "EnvConfigureFactory.create": {
            "name": "create",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/conf/env_yandex_translator_cong_factory.py": {
        "EnvYandexTranslatorConfFactory.create": {
            "name": "create",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/conf/yandex_translator_conf.py": {
        "YandexTranslatorConf.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "key": []
            }
        },
        "YandexTranslatorConf.url": {
            "name": "url",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "YandexTranslatorConf.key": {
            "name": "key",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/conf/__init__.py": {},
    "lingany-data-access-master/manage/data_manager/manager/models/category.py": {
        "Category.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "title": [],
                "reflection": [],
                "items": []
            }
        },
        "Category.uid": {
            "name": "uid",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Category.title": {
            "name": "title",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Category.reflection": {
            "name": "reflection",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Category.items": {
            "name": "items",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/models/external_category.py": {
        "ExternalCategory.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "title": [],
                "items": []
            }
        },
        "ExternalCategory.title": {
            "name": "title",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExternalCategory.items": {
            "name": "items",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/models/language.py": {
        "Language.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "title": [],
                "code": []
            }
        },
        "Language.uid": {
            "name": "uid",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Language.title": {
            "name": "title",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Language.code": {
            "name": "code",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/models/reflection.py": {
        "Reflection.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "title": [],
                "native_lang": [],
                "foreign_lang": []
            }
        },
        "Reflection.uid": {
            "name": "uid",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reflection.title": {
            "name": "title",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reflection.native_lang": {
            "name": "native_lang",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reflection.foreign_lang": {
            "name": "foreign_lang",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/models/training.py": {
        "Training.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "category": [],
                "native_item": [],
                "foreign_item": []
            }
        },
        "Training.uid": {
            "name": "uid",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Training.category": {
            "name": "category",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Training.native_item": {
            "name": "native_item",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Training.foreign_item": {
            "name": "foreign_item",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/models/__init__.py": {},
    "lingany-data-access-master/manage/data_manager/manager/services/category_service.py": {
        "CategoryService.get_supported_categories": {
            "name": "get_supported_categories",
            "location": 14,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/services/language_service.py": {
        "LanguageService.get_supported_languages": {
            "name": "get_supported_languages",
            "location": 11,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/services/reader.py": {
        "CSVReader.read": {
            "name": "read",
            "location": 11,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "LineReader.read": {
            "name": "read",
            "location": 23,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "FolderReader.get_files": {
            "name": "get_files",
            "location": 37,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "FolderReader.get_names": {
            "name": "get_names",
            "location": 41,
            "return": [],
            "arguments": {
                "path": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/services/reflection_service.py": {
        "ReflectionService.get_supported_reflections": {
            "name": "get_supported_reflections",
            "location": 12,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "supported_lang": []
            }
        },
        "ReflectionService.get_reflections_for_native_lang": {
            "name": "get_reflections_for_native_lang",
            "location": 24,
            "return": [],
            "arguments": {
                "cls": [],
                "native_lang_id": [],
                "supported_reflections": []
            }
        },
        "ReflectionService.get_reflection_for_foreign_lang": {
            "name": "get_reflection_for_foreign_lang",
            "location": 33,
            "return": [],
            "arguments": {
                "cls": [],
                "foreign_id": [],
                "native_reflections": []
            }
        },
        "ReflectionService._load_reflection": {
            "name": "_load_reflection",
            "location": 41,
            "return": [],
            "arguments": {
                "cls": [],
                "row": [],
                "supported_lang": []
            }
        },
        "ReflectionService._get_lang_by_id": {
            "name": "_get_lang_by_id",
            "location": 56,
            "return": [],
            "arguments": {
                "cls": [],
                "lang_id": [],
                "supported_lang": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/services/traslator.py": {
        "Translator.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "conf": []
            }
        },
        "Translator.translate_word": {
            "name": "translate_word",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "native_lang_code": [],
                "foreign_lang_code": []
            }
        },
        "Translator.translate_text": {
            "name": "translate_text",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "native_lang_code": [],
                "foreign_lang_code": []
            }
        },
        "Translator._build_lang": {
            "name": "_build_lang",
            "location": 44,
            "return": [],
            "arguments": {
                "cls": [],
                "native_lang_code": [],
                "foreign_lang_code": []
            }
        }
    },
    "lingany-data-access-master/manage/data_manager/manager/services/__init__.py": {},
    "lingany-data-access-master/src/__init__.py": {},
    "lingany-data-access-master/src/api/main.py": {},
    "lingany-data-access-master/src/api/setup.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/setup.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [],
            "arguments": {
                "fname": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/apiutils/base_blueprint.py": {
        "return_one": {
            "name": "return_one",
            "location": 17,
            "return": [],
            "arguments": {
                "model": [],
                "serializer": [],
                "expand": []
            }
        },
        "return_many": {
            "name": "return_many",
            "location": 26,
            "return": [],
            "arguments": {
                "models": [],
                "serializer": [],
                "expand": []
            }
        },
        "BaseBlueprint.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "service": []
            }
        },
        "BaseBlueprint._name": {
            "name": "_name",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._serializer": {
            "name": "_serializer",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint.blueprint": {
            "name": "blueprint",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._return_one": {
            "name": "_return_one",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "BaseBlueprint._return_many": {
            "name": "_return_many",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "models": []
            }
        },
        "BaseBlueprint._get_by_id": {
            "name": "_get_by_id",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "expand": []
            }
        },
        "BaseBlueprint._get_all": {
            "name": "_get_all",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "expand": []
            }
        },
        "BaseBlueprint._add": {
            "name": "_add",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._update": {
            "name": "_update",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._delete": {
            "name": "_delete",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "BaseBlueprint._create_blueprint": {
            "name": "_create_blueprint",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._parse": {
            "name": "_parse",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._add_entity": {
            "name": "_add_entity",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "BaseBlueprint._update_entity": {
            "name": "_update_entity",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/apiutils/request.py": {
        "Request.get": {
            "name": "get",
            "location": 23,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "Request.post": {
            "name": "post",
            "location": 27,
            "return": [],
            "arguments": {
                "url": [],
                "data": [],
                "is_json": [],
                "files": []
            }
        },
        "Request.delete": {
            "name": "delete",
            "location": 32,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "Request.put": {
            "name": "put",
            "location": 36,
            "return": [],
            "arguments": {
                "url": [],
                "data": [],
                "is_json": [],
                "files": []
            }
        },
        "Request.patch": {
            "name": "patch",
            "location": 41,
            "return": [],
            "arguments": {
                "url": [],
                "data": [],
                "is_json": [],
                "files": []
            }
        },
        "Request._prepare_data": {
            "name": "_prepare_data",
            "location": 46,
            "return": [],
            "arguments": {
                "data": [],
                "is_json": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/apiutils/serializer.py": {
        "Serializer.dump": {
            "name": "dump",
            "location": 15,
            "return": [],
            "arguments": {
                "model": [],
                "expand": []
            }
        },
        "Serializer.load": {
            "name": "load",
            "location": 20,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/apiutils/web_api_data_context.py": {
        "WebApiDataContext.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "application_root": []
            }
        },
        "WebApiDataContext.execute": {
            "name": "execute",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "WebApiDataContext.callproc": {
            "name": "callproc",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "WebApiDataContext.conn_string": {
            "name": "conn_string",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebApiDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "WebApiDataContext.get_all": {
            "name": "get_all",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "WebApiDataContext.add": {
            "name": "add",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "WebApiDataContext.update": {
            "name": "update",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "WebApiDataContext.delete": {
            "name": "delete",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/apiutils/__init__.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/setup.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [],
            "arguments": {
                "fname": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/abstract_expand_set.py": {
        "AbstractExpandSet.append": {
            "name": "append",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AbstractExpandSet.contains": {
            "name": "contains",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AbstractExpandSet.extract": {
            "name": "extract",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/converter.py": {
        "Converter.convert": {
            "name": "convert",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/empty_expand_set.py": {
        "EmptyExpandSet.append": {
            "name": "append",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "EmptyExpandSet.contains": {
            "name": "contains",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "EmptyExpandSet.extract": {
            "name": "extract",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/entity.py": {
        "create_one": {
            "name": "create_one",
            "location": 9,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "create_many": {
            "name": "create_many",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "Entity.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Entity._key_field": {
            "name": "_key_field",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.uid": {
            "name": "uid",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.fill": {
            "name": "fill",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "Entity.create": {
            "name": "create",
            "location": 44,
            "return": [],
            "arguments": {
                "cls": [],
                "values": []
            }
        },
        "Entity.copy": {
            "name": "copy",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.set_new_id": {
            "name": "set_new_id",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/expand_item.py": {
        "ExpandItem.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "child": []
            }
        },
        "ExpandItem.name": {
            "name": "name",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItem.child": {
            "name": "child",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItem.load": {
            "name": "load",
            "location": 19,
            "return": [],
            "arguments": {
                "expand": []
            }
        },
        "ExpandItem.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/expand_set.py": {
        "ExpandSet.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "ExpandSet.append": {
            "name": "append",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ExpandSet.contains": {
            "name": "contains",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ExpandSet.load": {
            "name": "load",
            "location": 23,
            "return": [],
            "arguments": {
                "expand": []
            }
        },
        "ExpandSet.extract": {
            "name": "extract",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "ExpandSet.__str__": {
            "name": "__str__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/model.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Model.uid": {
            "name": "uid",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.is_loaded": {
            "name": "is_loaded",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._filled": {
            "name": "_filled",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/repository.py": {
        "Repository.get_by_id": {
            "name": "get_by_id",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Repository.get_all": {
            "name": "get_all",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repository.add": {
            "name": "add",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Repository.update": {
            "name": "update",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Repository.delete": {
            "name": "delete",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/service.py": {
        "Service.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Service.get_by_id": {
            "name": "get_by_id",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "expand": []
            }
        },
        "Service.get_all": {
            "name": "get_all",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "expand": []
            }
        },
        "Service._convert_many": {
            "name": "_convert_many",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "expand": []
            }
        },
        "Service.add": {
            "name": "add",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Service.update": {
            "name": "update",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Service.delete": {
            "name": "delete",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Service._convert": {
            "name": "_convert",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "expand": []
            }
        },
        "Service._clear_cache": {
            "name": "_clear_cache",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/__init__.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/config_data_context_factory.py": {
        "ConfigDataContextFactory.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": []
            }
        },
        "ConfigDataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/data_context.py": {
        "DataContext.conn_string": {
            "name": "conn_string",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataContext.execute": {
            "name": "execute",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.callproc": {
            "name": "callproc",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.get_by_id": {
            "name": "get_by_id",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "DataContext.get_all": {
            "name": "get_all",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "DataContext.add": {
            "name": "add",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "DataContext.update": {
            "name": "update",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "DataContext.delete": {
            "name": "delete",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/data_context_factory.py": {
        "DataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/env_data_context_factory.py": {
        "EnvDataContextFactory.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvDataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/mongo_data_context.py": {
        "MongoDataContext.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "db": [],
                "user": [],
                "pwd": []
            }
        },
        "MongoDataContext.conn_string": {
            "name": "conn_string",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MongoDataContext.execute": {
            "name": "execute",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "MongoDataContext.callproc": {
            "name": "callproc",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "MongoDataContext.add": {
            "name": "add",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "MongoDataContext.update": {
            "name": "update",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "MongoDataContext.delete": {
            "name": "delete",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "MongoDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "MongoDataContext.get_all": {
            "name": "get_all",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/postgres_data_context.py": {
        "PostgresDataContext.conn_string": {
            "name": "conn_string",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresDataContext.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "database": [],
                "user": [],
                "password": []
            }
        },
        "PostgresDataContext.execute": {
            "name": "execute",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext.callproc": {
            "name": "callproc",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "value": []
            }
        },
        "PostgresDataContext.get_all": {
            "name": "get_all",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "PostgresDataContext.add": {
            "name": "add",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "PostgresDataContext.delete": {
            "name": "delete",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "PostgresDataContext.update": {
            "name": "update",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "PostgresDataContext._create_connection": {
            "name": "_create_connection",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/__init__.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/errors/foreign_key_violation_error.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/errors/no_data_found_error.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/errors/restrict_violation_error.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/errors/sql_error.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/errors/unique_violation_error.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/sqlutils/errors/__init__.py": {},
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/tests/expand_item_tests.py": {
        "ExpandItemTestCase.test_expand_item_created": {
            "name": "test_expand_item_created",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItemTestCase.test_expand_children": {
            "name": "test_expand_children",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItemTestCase.test_expand_str_representation": {
            "name": "test_expand_str_representation",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/tests/expand_set_tests.py": {
        "ExpandSetTests.test_expand_set_created": {
            "name": "test_expand_set_created",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_append": {
            "name": "test_expand_set_append",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_with_parent": {
            "name": "test_expand_set_with_parent",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_str_representation": {
            "name": "test_expand_set_str_representation",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_parent_not_exists_on_only_child_specified": {
            "name": "test_parent_not_exists_on_only_child_specified",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_extract_expand_set": {
            "name": "test_extract_expand_set",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/apiutils/lib/sqlutils/tests/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/setup.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [],
            "arguments": {
                "fname": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/base_client.py": {
        "BaseClient.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "loop": [],
                "on_data_received": [],
                "buffer_size": []
            }
        },
        "BaseClient.stop_client": {
            "name": "stop_client",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseClient.set_on_data_received_handler": {
            "name": "set_on_data_received_handler",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "handler": []
            }
        },
        "BaseClient.on_data_received": {
            "name": "on_data_received",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BaseClient._initialize": {
            "name": "_initialize",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseClient._cleanup": {
            "name": "_cleanup",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/network/tcp_client.py": {
        "TcpClient.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "loop": [],
                "on_data_received": [],
                "buffer_size": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/network/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/serial_ports/byte_size.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/serial_ports/parity.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/serial_ports/rt_serial_client.py": {
        "RTSerialClient._initialize": {
            "name": "_initialize",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RTSerialClient._cleanup": {
            "name": "_cleanup",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/serial_ports/serial_client.py": {
        "SerialClient.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "port": [],
                "rate": [],
                "parity": [],
                "stop_bits": [],
                "byte_size": [],
                "loop": [],
                "on_data_received": [],
                "buffer_size": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/serial_ports/stop_bits.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/clients/serial_ports/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/controllers/amqp_controller.py": {
        "AmqpController.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "username": [],
                "password": [],
                "loop": [],
                "exchange_name": [],
                "queue_name": [],
                "route_key": [],
                "is_listener": [],
                "on_message_received": []
            }
        },
        "AmqpController.producer_ready": {
            "name": "producer_ready",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AmqpController.on_message_received": {
            "name": "on_message_received",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "AmqpController.connection_lost_handler": {
            "name": "connection_lost_handler",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "loop": [],
                "context": []
            }
        },
        "AmqpController.main": {
            "name": "main",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/controllers/controller.py": {
        "Controller.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "client": [],
                "loop": []
            }
        },
        "Controller._get_message_id_for": {
            "name": "_get_message_id_for",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Controller._get_request_id_for": {
            "name": "_get_request_id_for",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Controller._split_messages": {
            "name": "_split_messages",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Controller._on_event_received": {
            "name": "_on_event_received",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Controller._on_data_received": {
            "name": "_on_data_received",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Controller.stop": {
            "name": "stop",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/controllers/simple_controller.py": {
        "SimpleController.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "client": [],
                "loop": []
            }
        },
        "SimpleController._get_message_id_for": {
            "name": "_get_message_id_for",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SimpleController._get_request_id_for": {
            "name": "_get_request_id_for",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SimpleController._on_event_received": {
            "name": "_on_event_received",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "SimpleController._split_messages": {
            "name": "_split_messages",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/controllers/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/converters/amqp_converter.py": {
        "AmqpConverter.dump": {
            "name": "dump",
            "location": 10,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "AmqpConverter.load": {
            "name": "load",
            "location": 14,
            "return": [],
            "arguments": {
                "message": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/converters/attribute_converter.py": {
        "AttributeConverter.dump": {
            "name": "dump",
            "location": 10,
            "return": [],
            "arguments": {
                "attribute": []
            }
        },
        "AttributeConverter.load": {
            "name": "load",
            "location": 18,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/converters/message_converter.py": {
        "MessageConverter.dump": {
            "name": "dump",
            "location": 14,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "MessageConverter.load": {
            "name": "load",
            "location": 27,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/converters/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/messages/attribute.py": {
        "Attribute.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "attribute_type_id": [],
                "attribute_value": []
            }
        },
        "Attribute.attribute_type_id": {
            "name": "attribute_type_id",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Attribute.attribute_value": {
            "name": "attribute_value",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/messages/message.py": {
        "Message.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "actor_id": [],
                "actor_type_id": [],
                "occurred": [],
                "category": [],
                "message_type_id": [],
                "source_message_id": [],
                "attributes": []
            }
        },
        "Message.uid": {
            "name": "uid",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.actor_id": {
            "name": "actor_id",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.actor_type_id": {
            "name": "actor_type_id",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.occurred": {
            "name": "occurred",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.category": {
            "name": "category",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.message_type_id": {
            "name": "message_type_id",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.attributes": {
            "name": "attributes",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/messages/message_category.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/messages/__init__.py": {},
    "lingany-data-access-master/src/api/lib/netutils/netutils/publisher/change_publisher.py": {
        "ChangePublisher.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "dispatcher": []
            }
        },
        "ChangePublisher._create_exchange": {
            "name": "_create_exchange",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ChangePublisher.on_create": {
            "name": "on_create",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "payload": []
            }
        },
        "ChangePublisher.on_update": {
            "name": "on_update",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "payload": []
            }
        },
        "ChangePublisher.on_delete": {
            "name": "on_delete",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "payload": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/publisher/dispatcher.py": {
        "Dispatcher.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "amqp_uri": []
            }
        },
        "Dispatcher.amqp_uri": {
            "name": "amqp_uri",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.publish": {
            "name": "publish",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "event_type": [],
                "payload": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/netutils/netutils/publisher/__init__.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/setup.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [],
            "arguments": {
                "fname": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/abstract_expand_set.py": {
        "AbstractExpandSet.append": {
            "name": "append",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AbstractExpandSet.contains": {
            "name": "contains",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AbstractExpandSet.extract": {
            "name": "extract",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/converter.py": {
        "Converter.convert": {
            "name": "convert",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/empty_expand_set.py": {
        "EmptyExpandSet.append": {
            "name": "append",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "EmptyExpandSet.contains": {
            "name": "contains",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "EmptyExpandSet.extract": {
            "name": "extract",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/entity.py": {
        "create_one": {
            "name": "create_one",
            "location": 9,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "create_many": {
            "name": "create_many",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "Entity.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Entity._key_field": {
            "name": "_key_field",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.uid": {
            "name": "uid",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.fill": {
            "name": "fill",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "Entity.create": {
            "name": "create",
            "location": 44,
            "return": [],
            "arguments": {
                "cls": [],
                "values": []
            }
        },
        "Entity.copy": {
            "name": "copy",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.set_new_id": {
            "name": "set_new_id",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/expand_item.py": {
        "ExpandItem.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "child": []
            }
        },
        "ExpandItem.name": {
            "name": "name",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItem.child": {
            "name": "child",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItem.load": {
            "name": "load",
            "location": 19,
            "return": [],
            "arguments": {
                "expand": []
            }
        },
        "ExpandItem.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/expand_set.py": {
        "ExpandSet.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "ExpandSet.append": {
            "name": "append",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ExpandSet.contains": {
            "name": "contains",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ExpandSet.load": {
            "name": "load",
            "location": 23,
            "return": [],
            "arguments": {
                "expand": []
            }
        },
        "ExpandSet.extract": {
            "name": "extract",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "ExpandSet.__str__": {
            "name": "__str__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/model.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Model.uid": {
            "name": "uid",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.is_loaded": {
            "name": "is_loaded",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._filled": {
            "name": "_filled",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/repository.py": {
        "Repository.get_by_id": {
            "name": "get_by_id",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Repository.get_all": {
            "name": "get_all",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repository.add": {
            "name": "add",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Repository.update": {
            "name": "update",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Repository.delete": {
            "name": "delete",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/service.py": {
        "Service.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Service.get_by_id": {
            "name": "get_by_id",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "expand": []
            }
        },
        "Service.get_all": {
            "name": "get_all",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "expand": []
            }
        },
        "Service._convert_many": {
            "name": "_convert_many",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "expand": []
            }
        },
        "Service.add": {
            "name": "add",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Service.update": {
            "name": "update",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Service.delete": {
            "name": "delete",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Service._convert": {
            "name": "_convert",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "expand": []
            }
        },
        "Service._clear_cache": {
            "name": "_clear_cache",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/__init__.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/data_contexts/config_data_context_factory.py": {
        "ConfigDataContextFactory.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": []
            }
        },
        "ConfigDataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/data_contexts/data_context.py": {
        "DataContext.conn_string": {
            "name": "conn_string",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataContext.execute": {
            "name": "execute",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.callproc": {
            "name": "callproc",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.get_by_id": {
            "name": "get_by_id",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "DataContext.get_all": {
            "name": "get_all",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "DataContext.add": {
            "name": "add",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "DataContext.update": {
            "name": "update",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "DataContext.delete": {
            "name": "delete",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/data_contexts/data_context_factory.py": {
        "DataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/data_contexts/env_data_context_factory.py": {
        "EnvDataContextFactory.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvDataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/data_contexts/mongo_data_context.py": {
        "MongoDataContext.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "db": [],
                "user": [],
                "pwd": []
            }
        },
        "MongoDataContext.conn_string": {
            "name": "conn_string",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MongoDataContext.execute": {
            "name": "execute",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "MongoDataContext.callproc": {
            "name": "callproc",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "MongoDataContext.add": {
            "name": "add",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "MongoDataContext.update": {
            "name": "update",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "MongoDataContext.delete": {
            "name": "delete",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "MongoDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "MongoDataContext.get_all": {
            "name": "get_all",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/data_contexts/postgres_data_context.py": {
        "PostgresDataContext.conn_string": {
            "name": "conn_string",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresDataContext.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "database": [],
                "user": [],
                "password": []
            }
        },
        "PostgresDataContext.execute": {
            "name": "execute",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext.callproc": {
            "name": "callproc",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "value": []
            }
        },
        "PostgresDataContext.get_all": {
            "name": "get_all",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "PostgresDataContext.add": {
            "name": "add",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "PostgresDataContext.delete": {
            "name": "delete",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "PostgresDataContext.update": {
            "name": "update",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "PostgresDataContext._create_connection": {
            "name": "_create_connection",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/data_contexts/__init__.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/errors/foreign_key_violation_error.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/errors/no_data_found_error.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/errors/restrict_violation_error.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/errors/sql_error.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/errors/unique_violation_error.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/sqlutils/errors/__init__.py": {},
    "lingany-data-access-master/src/api/lib/sqlutils/tests/expand_item_tests.py": {
        "ExpandItemTestCase.test_expand_item_created": {
            "name": "test_expand_item_created",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItemTestCase.test_expand_children": {
            "name": "test_expand_children",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItemTestCase.test_expand_str_representation": {
            "name": "test_expand_str_representation",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/tests/expand_set_tests.py": {
        "ExpandSetTests.test_expand_set_created": {
            "name": "test_expand_set_created",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_append": {
            "name": "test_expand_set_append",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_with_parent": {
            "name": "test_expand_set_with_parent",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_str_representation": {
            "name": "test_expand_set_str_representation",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_parent_not_exists_on_only_child_specified": {
            "name": "test_parent_not_exists_on_only_child_specified",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_extract_expand_set": {
            "name": "test_extract_expand_set",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lib/sqlutils/tests/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/app.py": {
        "bad_request": {
            "name": "bad_request",
            "location": 27,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "data_not_found": {
            "name": "data_not_found",
            "location": 33,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "restrict_violation": {
            "name": "restrict_violation",
            "location": 39,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "internal_server_error": {
            "name": "internal_server_error",
            "location": 45,
            "return": [],
            "arguments": {
                "error": []
            }
        },
        "simple": {
            "name": "simple",
            "location": 50,
            "return": [],
            "arguments": {
                "env": [],
                "resp": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/application.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Application.register": {
            "name": "register",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "app": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/cache.py": {},
    "lingany-data-access-master/src/api/lingany_api/configuration.py": {
        "Configuration.provide_context": {
            "name": "provide_context",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/ioc.py": {},
    "lingany-data-access-master/src/api/lingany_api/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/blueprints/category_blueprint.py": {
        "CategoryBlueprint.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "service": []
            }
        },
        "CategoryBlueprint._name": {
            "name": "_name",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryBlueprint._serializer": {
            "name": "_serializer",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryBlueprint._create_blueprint": {
            "name": "_create_blueprint",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryBlueprint._create_blueprint._get_by_id": {
            "name": "_get_by_id",
            "location": 31,
            "return": [],
            "arguments": {
                "uid": []
            }
        },
        "CategoryBlueprint._create_blueprint._get_all": {
            "name": "_get_all",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "CategoryBlueprint._create_blueprint._get_categories_for_reflection": {
            "name": "_get_categories_for_reflection",
            "location": 41,
            "return": [],
            "arguments": {
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/blueprints/language_blueprint.py": {
        "LanguageBlueprint.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "service": []
            }
        },
        "LanguageBlueprint._name": {
            "name": "_name",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageBlueprint._serializer": {
            "name": "_serializer",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageBlueprint._create_blueprint": {
            "name": "_create_blueprint",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageBlueprint._create_blueprint._get_by_id": {
            "name": "_get_by_id",
            "location": 31,
            "return": [],
            "arguments": {
                "uid": []
            }
        },
        "LanguageBlueprint._create_blueprint._get_all": {
            "name": "_get_all",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/api/lingany_api/blueprints/reflection_blueprint.py": {
        "ReflectionBlueprint.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "service": []
            }
        },
        "ReflectionBlueprint._name": {
            "name": "_name",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionBlueprint._serializer": {
            "name": "_serializer",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionBlueprint._create_blueprint": {
            "name": "_create_blueprint",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionBlueprint._create_blueprint._get_by_id": {
            "name": "_get_by_id",
            "location": 31,
            "return": [],
            "arguments": {
                "uid": []
            }
        },
        "ReflectionBlueprint._create_blueprint._get_all": {
            "name": "_get_all",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "ReflectionBlueprint._create_blueprint._get_reflection_by_languages": {
            "name": "_get_reflection_by_languages",
            "location": 41,
            "return": [],
            "arguments": {
                "n_id": [],
                "f_id": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/blueprints/training_blueprint.py": {
        "TrainingBlueprint.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "service": []
            }
        },
        "TrainingBlueprint._name": {
            "name": "_name",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingBlueprint._serializer": {
            "name": "_serializer",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingBlueprint._create_blueprint": {
            "name": "_create_blueprint",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingBlueprint._create_blueprint._get_by_id": {
            "name": "_get_by_id",
            "location": 31,
            "return": [],
            "arguments": {
                "uid": []
            }
        },
        "TrainingBlueprint._create_blueprint._get_all": {
            "name": "_get_all",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "TrainingBlueprint._create_blueprint._get_trainings_for_category": {
            "name": "_get_trainings_for_category",
            "location": 41,
            "return": [],
            "arguments": {
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/blueprints/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/converters/category_converter.py": {
        "CategoryConverter.convert": {
            "name": "convert",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/converters/language_converter.py": {
        "LanguageConverter.convert": {
            "name": "convert",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/converters/reflection_converter.py": {
        "ReflectionConverter.convert": {
            "name": "convert",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/converters/training_converter.py": {
        "TrainingConverter.convert": {
            "name": "convert",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/converters/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/models/category.py": {
        "Category.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Category.title": {
            "name": "title",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Category.reflection": {
            "name": "reflection",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Category.fill": {
            "name": "fill",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "title": [],
                "reflection": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/models/language.py": {
        "Language.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Language.title": {
            "name": "title",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Language.fill": {
            "name": "fill",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "title": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/models/reflection.py": {
        "Reflection.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Reflection.title": {
            "name": "title",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reflection.native_language": {
            "name": "native_language",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reflection.foreign_language": {
            "name": "foreign_language",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Reflection.fill": {
            "name": "fill",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "title": [],
                "native_language": [],
                "foreign_language": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/models/training.py": {
        "Training.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Training.category": {
            "name": "category",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Training.native_word": {
            "name": "native_word",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Training.foreign_word": {
            "name": "foreign_word",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Training.fill": {
            "name": "fill",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "category": [],
                "native_word": [],
                "foreign_word": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/models/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/persistance/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/persistance/dto/category_dto.py": {
        "CategoryDTO._key_field": {
            "name": "_key_field",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryDTO.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "reflection_id": [],
                "title": []
            }
        },
        "CategoryDTO.reflection_id": {
            "name": "reflection_id",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryDTO.title": {
            "name": "title",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/dto/language_dto.py": {
        "LanguageDTO._key_field": {
            "name": "_key_field",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageDTO.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "title": []
            }
        },
        "LanguageDTO.title": {
            "name": "title",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/dto/reflection_dto.py": {
        "ReflectionDTO._key_field": {
            "name": "_key_field",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionDTO.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "title": [],
                "native_language_id": [],
                "foreign_language_id": []
            }
        },
        "ReflectionDTO.title": {
            "name": "title",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionDTO.native_language_id": {
            "name": "native_language_id",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionDTO.foreign_language_id": {
            "name": "foreign_language_id",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/dto/training_dto.py": {
        "TrainingDTO._key_field": {
            "name": "_key_field",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingDTO.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "category_id": [],
                "native_word": [],
                "foreign_word": []
            }
        },
        "TrainingDTO.category_id": {
            "name": "category_id",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingDTO.native_word": {
            "name": "native_word",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingDTO.foreign_word": {
            "name": "foreign_word",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/dto/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/persistance/repositories/category_repository.py": {
        "CategoryRepository.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "CategoryRepository.get_by_id": {
            "name": "get_by_id",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "CategoryRepository.get_all": {
            "name": "get_all",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryRepository.get_categories_for_reflection": {
            "name": "get_categories_for_reflection",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "reflection_id": []
            }
        },
        "CategoryRepository.add": {
            "name": "add",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "CategoryRepository.update": {
            "name": "update",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "CategoryRepository.delete": {
            "name": "delete",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/repositories/language_repository.py": {
        "LanguageRepository.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "LanguageRepository.get_by_id": {
            "name": "get_by_id",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "LanguageRepository.get_all": {
            "name": "get_all",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageRepository.add": {
            "name": "add",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "LanguageRepository.update": {
            "name": "update",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "LanguageRepository.delete": {
            "name": "delete",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/repositories/reflection_repository.py": {
        "ReflectionRepository.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "ReflectionRepository.get_by_id": {
            "name": "get_by_id",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "ReflectionRepository.get_all": {
            "name": "get_all",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionRepository.get_reflection_by_languages": {
            "name": "get_reflection_by_languages",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "native_language_id": [],
                "foreign_language_id": []
            }
        },
        "ReflectionRepository.add": {
            "name": "add",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "ReflectionRepository.update": {
            "name": "update",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "ReflectionRepository.delete": {
            "name": "delete",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/repositories/training_repository.py": {
        "TrainingRepository.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "TrainingRepository.get_by_id": {
            "name": "get_by_id",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "TrainingRepository.get_all": {
            "name": "get_all",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingRepository.get_trainings_for_category": {
            "name": "get_trainings_for_category",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "category_id": []
            }
        },
        "TrainingRepository.add": {
            "name": "add",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "TrainingRepository.update": {
            "name": "update",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "TrainingRepository.delete": {
            "name": "delete",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/persistance/repositories/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/serializers/category_serializer.py": {
        "CategorySerializer.dump": {
            "name": "dump",
            "location": 16,
            "return": [],
            "arguments": {
                "model": [],
                "expand": []
            }
        },
        "CategorySerializer.load": {
            "name": "load",
            "location": 34,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/serializers/language_serializer.py": {
        "LanguageSerializer.dump": {
            "name": "dump",
            "location": 16,
            "return": [],
            "arguments": {
                "model": [],
                "expand": []
            }
        },
        "LanguageSerializer.load": {
            "name": "load",
            "location": 33,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/serializers/reflection_serializer.py": {
        "ReflectionSerializer.dump": {
            "name": "dump",
            "location": 16,
            "return": [],
            "arguments": {
                "model": [],
                "expand": []
            }
        },
        "ReflectionSerializer.load": {
            "name": "load",
            "location": 35,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/serializers/training_serializer.py": {
        "TrainingSerializer.dump": {
            "name": "dump",
            "location": 16,
            "return": [],
            "arguments": {
                "model": [],
                "expand": []
            }
        },
        "TrainingSerializer.load": {
            "name": "load",
            "location": 35,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/api/lingany_api/serializers/__init__.py": {},
    "lingany-data-access-master/src/api/lingany_api/services/category_service.py": {
        "CategoryService.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "CategoryService.get_categories_for_reflection": {
            "name": "get_categories_for_reflection",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "reflection_id": [],
                "expand": []
            }
        },
        "CategoryService._convert": {
            "name": "_convert",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "expand": []
            }
        },
        "CategoryService._clear_cache": {
            "name": "_clear_cache",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/api/lingany_api/services/language_service.py": {
        "LanguageService.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "LanguageService._convert": {
            "name": "_convert",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "expand": []
            }
        },
        "LanguageService._clear_cache": {
            "name": "_clear_cache",
            "location": 29,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/api/lingany_api/services/reflection_service.py": {
        "ReflectionService.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "ReflectionService.get_reflection_by_languages": {
            "name": "get_reflection_by_languages",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "native_language_id": [],
                "foreign_language_id": [],
                "expand": []
            }
        },
        "ReflectionService._convert": {
            "name": "_convert",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "expand": []
            }
        },
        "ReflectionService._clear_cache": {
            "name": "_clear_cache",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/api/lingany_api/services/training_service.py": {
        "TrainingService.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "TrainingService.get_trainings_for_category": {
            "name": "get_trainings_for_category",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "category_id": [],
                "expand": []
            }
        },
        "TrainingService._convert": {
            "name": "_convert",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "expand": []
            }
        },
        "TrainingService._clear_cache": {
            "name": "_clear_cache",
            "location": 32,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/api/lingany_api/services/__init__.py": {},
    "lingany-data-access-master/src/tests/__init__.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/setup.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [],
            "arguments": {
                "fname": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/apiutils/base_blueprint.py": {
        "return_one": {
            "name": "return_one",
            "location": 17,
            "return": [],
            "arguments": {
                "model": [],
                "serializer": [],
                "expand": []
            }
        },
        "return_many": {
            "name": "return_many",
            "location": 26,
            "return": [],
            "arguments": {
                "models": [],
                "serializer": [],
                "expand": []
            }
        },
        "BaseBlueprint.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "service": []
            }
        },
        "BaseBlueprint._name": {
            "name": "_name",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._serializer": {
            "name": "_serializer",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint.blueprint": {
            "name": "blueprint",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._return_one": {
            "name": "_return_one",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "BaseBlueprint._return_many": {
            "name": "_return_many",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "models": []
            }
        },
        "BaseBlueprint._get_by_id": {
            "name": "_get_by_id",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "expand": []
            }
        },
        "BaseBlueprint._get_all": {
            "name": "_get_all",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "expand": []
            }
        },
        "BaseBlueprint._add": {
            "name": "_add",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._update": {
            "name": "_update",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._delete": {
            "name": "_delete",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "BaseBlueprint._create_blueprint": {
            "name": "_create_blueprint",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._parse": {
            "name": "_parse",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseBlueprint._add_entity": {
            "name": "_add_entity",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "BaseBlueprint._update_entity": {
            "name": "_update_entity",
            "location": 134,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/apiutils/request.py": {
        "Request.get": {
            "name": "get",
            "location": 23,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "Request.post": {
            "name": "post",
            "location": 27,
            "return": [],
            "arguments": {
                "url": [],
                "data": [],
                "is_json": [],
                "files": []
            }
        },
        "Request.delete": {
            "name": "delete",
            "location": 32,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "Request.put": {
            "name": "put",
            "location": 36,
            "return": [],
            "arguments": {
                "url": [],
                "data": [],
                "is_json": [],
                "files": []
            }
        },
        "Request.patch": {
            "name": "patch",
            "location": 41,
            "return": [],
            "arguments": {
                "url": [],
                "data": [],
                "is_json": [],
                "files": []
            }
        },
        "Request._prepare_data": {
            "name": "_prepare_data",
            "location": 46,
            "return": [],
            "arguments": {
                "data": [],
                "is_json": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/apiutils/serializer.py": {
        "Serializer.dump": {
            "name": "dump",
            "location": 15,
            "return": [],
            "arguments": {
                "model": [],
                "expand": []
            }
        },
        "Serializer.load": {
            "name": "load",
            "location": 20,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/apiutils/web_api_data_context.py": {
        "WebApiDataContext.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "application_root": []
            }
        },
        "WebApiDataContext.execute": {
            "name": "execute",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "WebApiDataContext.callproc": {
            "name": "callproc",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "WebApiDataContext.conn_string": {
            "name": "conn_string",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "WebApiDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "WebApiDataContext.get_all": {
            "name": "get_all",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "WebApiDataContext.add": {
            "name": "add",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "WebApiDataContext.update": {
            "name": "update",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "WebApiDataContext.delete": {
            "name": "delete",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/apiutils/__init__.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/setup.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [],
            "arguments": {
                "fname": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/abstract_expand_set.py": {
        "AbstractExpandSet.append": {
            "name": "append",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AbstractExpandSet.contains": {
            "name": "contains",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "AbstractExpandSet.extract": {
            "name": "extract",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/converter.py": {
        "Converter.convert": {
            "name": "convert",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/empty_expand_set.py": {
        "EmptyExpandSet.append": {
            "name": "append",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "EmptyExpandSet.contains": {
            "name": "contains",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "EmptyExpandSet.extract": {
            "name": "extract",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/entity.py": {
        "create_one": {
            "name": "create_one",
            "location": 9,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "create_many": {
            "name": "create_many",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "Entity.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Entity._key_field": {
            "name": "_key_field",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.uid": {
            "name": "uid",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.fill": {
            "name": "fill",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "values": []
            }
        },
        "Entity.create": {
            "name": "create",
            "location": 44,
            "return": [],
            "arguments": {
                "cls": [],
                "values": []
            }
        },
        "Entity.copy": {
            "name": "copy",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Entity.set_new_id": {
            "name": "set_new_id",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/expand_item.py": {
        "ExpandItem.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "child": []
            }
        },
        "ExpandItem.name": {
            "name": "name",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItem.child": {
            "name": "child",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItem.load": {
            "name": "load",
            "location": 19,
            "return": [],
            "arguments": {
                "expand": []
            }
        },
        "ExpandItem.__str__": {
            "name": "__str__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/expand_set.py": {
        "ExpandSet.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "ExpandSet.append": {
            "name": "append",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ExpandSet.contains": {
            "name": "contains",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "ExpandSet.load": {
            "name": "load",
            "location": 23,
            "return": [],
            "arguments": {
                "expand": []
            }
        },
        "ExpandSet.extract": {
            "name": "extract",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "parent": []
            }
        },
        "ExpandSet.__str__": {
            "name": "__str__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/model.py": {
        "Model.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Model.uid": {
            "name": "uid",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model.is_loaded": {
            "name": "is_loaded",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Model._filled": {
            "name": "_filled",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/repository.py": {
        "Repository.get_by_id": {
            "name": "get_by_id",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Repository.get_all": {
            "name": "get_all",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Repository.add": {
            "name": "add",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Repository.update": {
            "name": "update",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Repository.delete": {
            "name": "delete",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/service.py": {
        "Service.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Service.get_by_id": {
            "name": "get_by_id",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "uid": [],
                "expand": []
            }
        },
        "Service.get_all": {
            "name": "get_all",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "expand": []
            }
        },
        "Service._convert_many": {
            "name": "_convert_many",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "expand": []
            }
        },
        "Service.add": {
            "name": "add",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Service.update": {
            "name": "update",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Service.delete": {
            "name": "delete",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "uid": []
            }
        },
        "Service._convert": {
            "name": "_convert",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "entity": [],
                "expand": []
            }
        },
        "Service._clear_cache": {
            "name": "_clear_cache",
            "location": 61,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/__init__.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/config_data_context_factory.py": {
        "ConfigDataContextFactory.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "config_file": []
            }
        },
        "ConfigDataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/data_context.py": {
        "DataContext.conn_string": {
            "name": "conn_string",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DataContext.execute": {
            "name": "execute",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.callproc": {
            "name": "callproc",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "DataContext.get_by_id": {
            "name": "get_by_id",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "DataContext.get_all": {
            "name": "get_all",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "DataContext.add": {
            "name": "add",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "DataContext.update": {
            "name": "update",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "DataContext.delete": {
            "name": "delete",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/data_context_factory.py": {
        "DataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/env_data_context_factory.py": {
        "EnvDataContextFactory.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnvDataContextFactory.create_data_context": {
            "name": "create_data_context",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/mongo_data_context.py": {
        "MongoDataContext.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "db": [],
                "user": [],
                "pwd": []
            }
        },
        "MongoDataContext.conn_string": {
            "name": "conn_string",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MongoDataContext.execute": {
            "name": "execute",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "MongoDataContext.callproc": {
            "name": "callproc",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "MongoDataContext.add": {
            "name": "add",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "MongoDataContext.update": {
            "name": "update",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "MongoDataContext.delete": {
            "name": "delete",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "MongoDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "MongoDataContext.get_all": {
            "name": "get_all",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/postgres_data_context.py": {
        "PostgresDataContext.conn_string": {
            "name": "conn_string",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostgresDataContext.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "database": [],
                "user": [],
                "password": []
            }
        },
        "PostgresDataContext.execute": {
            "name": "execute",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext.callproc": {
            "name": "callproc",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "cmd": [],
                "params": []
            }
        },
        "PostgresDataContext.get_by_id": {
            "name": "get_by_id",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "value": []
            }
        },
        "PostgresDataContext.get_all": {
            "name": "get_all",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "collection": []
            }
        },
        "PostgresDataContext.add": {
            "name": "add",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "data": []
            }
        },
        "PostgresDataContext.delete": {
            "name": "delete",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "uid": []
            }
        },
        "PostgresDataContext.update": {
            "name": "update",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "collection": [],
                "key": [],
                "data": []
            }
        },
        "PostgresDataContext._create_connection": {
            "name": "_create_connection",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/data_contexts/__init__.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/errors/foreign_key_violation_error.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/errors/no_data_found_error.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/errors/restrict_violation_error.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/errors/sql_error.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/errors/unique_violation_error.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/sqlutils/errors/__init__.py": {},
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/tests/expand_item_tests.py": {
        "ExpandItemTestCase.test_expand_item_created": {
            "name": "test_expand_item_created",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItemTestCase.test_expand_children": {
            "name": "test_expand_children",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandItemTestCase.test_expand_str_representation": {
            "name": "test_expand_str_representation",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/tests/expand_set_tests.py": {
        "ExpandSetTests.test_expand_set_created": {
            "name": "test_expand_set_created",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_append": {
            "name": "test_expand_set_append",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_with_parent": {
            "name": "test_expand_set_with_parent",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_expand_set_str_representation": {
            "name": "test_expand_set_str_representation",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_parent_not_exists_on_only_child_specified": {
            "name": "test_parent_not_exists_on_only_child_specified",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExpandSetTests.test_extract_expand_set": {
            "name": "test_extract_expand_set",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/apiutils/lib/sqlutils/tests/__init__.py": {},
    "lingany-data-access-master/src/tests/lib/testutils/setup.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [],
            "arguments": {
                "fname": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/testutils/testutils/generator.py": {
        "make_str": {
            "name": "make_str",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "lingany-data-access-master/src/tests/lib/testutils/testutils/__init__.py": {},
    "lingany-data-access-master/src/tests/lib/testutils/testutils/stubs/api_stub.py": {
        "ApiStub.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiStub.root": {
            "name": "root",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiStub._generate": {
            "name": "_generate",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiStub._post": {
            "name": "_post",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ApiStub.create": {
            "name": "create",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiStub.update": {
            "name": "update",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "ApiStub.patch": {
            "name": "patch",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "instance_id": [],
                "data": []
            }
        },
        "ApiStub.get_by_id": {
            "name": "get_by_id",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "instance_id": [],
                "expand": []
            }
        },
        "ApiStub.delete": {
            "name": "delete",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "instance_id": []
            }
        },
        "ApiStub.get_all": {
            "name": "get_all",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiStub.clear": {
            "name": "clear",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/testutils/testutils/stubs/api_stub_with_parent.py": {
        "ApiStubWithParent.root": {
            "name": "root",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiStubWithParent._generate": {
            "name": "_generate",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiStubWithParent.create_with_parent": {
            "name": "create_with_parent",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lib/testutils/testutils/stubs/__init__.py": {},
    "lingany-data-access-master/src/tests/lingany_api_tests/__init__.py": {},
    "lingany-data-access-master/src/tests/lingany_api_tests/category/category_stub.py": {
        "CategoryStub.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryStub.root": {
            "name": "root",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryStub._generate": {
            "name": "_generate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryStub.get_instance": {
            "name": "get_instance",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryStub.get_categories_for_reflection": {
            "name": "get_categories_for_reflection",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "reflection_id": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/category/category_tests.py": {
        "CategoryTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "CategoryTestCase.test_fail_create": {
            "name": "test_fail_create",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryTestCase.test_fail_delete": {
            "name": "test_fail_delete",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryTestCase.test_get_by_id": {
            "name": "test_get_by_id",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryTestCase.test_get_all": {
            "name": "test_get_all",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryTestCase.test_get_categories_for_reflection": {
            "name": "test_get_categories_for_reflection",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CategoryTestCase._check": {
            "name": "_check",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "sut": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/category/__init__.py": {},
    "lingany-data-access-master/src/tests/lingany_api_tests/language/language_stub.py": {
        "LanguageStub.root": {
            "name": "root",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageStub._generate": {
            "name": "_generate",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageStub.get_instance": {
            "name": "get_instance",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageStub.get_pair": {
            "name": "get_pair",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/language/language_tests.py": {
        "LanguageTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 13,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "LanguageTestCase.test_fail_create": {
            "name": "test_fail_create",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageTestCase.test_fail_delete": {
            "name": "test_fail_delete",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageTestCase.test_get_by_id": {
            "name": "test_get_by_id",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageTestCase.test_get_all": {
            "name": "test_get_all",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LanguageTestCase._check": {
            "name": "_check",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "sut": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/language/__init__.py": {},
    "lingany-data-access-master/src/tests/lingany_api_tests/reflection/reflection_stub.py": {
        "ReflectionStub.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionStub.root": {
            "name": "root",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionStub._generate": {
            "name": "_generate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionStub.get_instance": {
            "name": "get_instance",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionStub.get_reflection_by_languages": {
            "name": "get_reflection_by_languages",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "native_lang_id": [],
                "foreign_lang_id": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/reflection/reflection_tests.py": {
        "ReflectionTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 16,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "ReflectionTestCase.test_fail_create": {
            "name": "test_fail_create",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionTestCase.test_fail_delete": {
            "name": "test_fail_delete",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionTestCase.test_get_by_id": {
            "name": "test_get_by_id",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionTestCase.test_get_all": {
            "name": "test_get_all",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionTestCase.test_get_reflection_by_languages": {
            "name": "test_get_reflection_by_languages",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ReflectionTestCase._check": {
            "name": "_check",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "sut": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/reflection/__init__.py": {},
    "lingany-data-access-master/src/tests/lingany_api_tests/training/training_stub.py": {
        "TrainingStub.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingStub.root": {
            "name": "root",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingStub._generate": {
            "name": "_generate",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingStub.get_instance": {
            "name": "get_instance",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingStub.get_trainings_for_categories": {
            "name": "get_trainings_for_categories",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "category_id": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/training/training_tests.py": {
        "TrainingTestCase.setUpClass": {
            "name": "setUpClass",
            "location": 15,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "TrainingTestCase.test_fail_create": {
            "name": "test_fail_create",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingTestCase.test_fail_delete": {
            "name": "test_fail_delete",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingTestCase.test_get_by_id": {
            "name": "test_get_by_id",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingTestCase.test_get_all": {
            "name": "test_get_all",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingTestCase.test_get_trainings_for_categories": {
            "name": "test_get_trainings_for_categories",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TrainingTestCase._check": {
            "name": "_check",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "sut": []
            }
        }
    },
    "lingany-data-access-master/src/tests/lingany_api_tests/training/__init__.py": {},
    "lingany-data-access-master/src/tests/tranlator/tranlator_tests.py": {},
    "lingany-data-access-master/src/tests/tranlator/__init__.py": {}
}
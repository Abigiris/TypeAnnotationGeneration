{
    "linkcheck-master/linkcheck.py": {
        "positive_int": {
            "name": "positive_int",
            "location": 24,
            "return": [
                "int"
            ],
            "arguments": {
                "raw": []
            }
        },
        "get_args": {
            "name": "get_args",
            "location": 30,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        },
        "Domain.__init__": {
            "name": "__init__",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "default_scheme": [
                    "str"
                ],
                "netloc": [
                    "str"
                ]
            }
        },
        "Domain.from_url": {
            "name": "from_url",
            "location": 73,
            "return": [
                "_TDomain"
            ],
            "arguments": {
                "cls": [
                    "Type[_TDomain]"
                ],
                "url": [
                    "str"
                ]
            }
        },
        "Domain.url_in_domain": {
            "name": "url_in_domain",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "Links.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Links.unchecked": {
            "name": "unchecked",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Links.pop": {
            "name": "pop",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Links.add": {
            "name": "add",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "link": [
                    "str"
                ]
            }
        },
        "Links.add_many": {
            "name": "add_many",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "links": [
                    "Iterator[str]"
                ]
            }
        },
        "Links.empty": {
            "name": "empty",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Page._post__init__": {
            "name": "_post__init__",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Page.url_is_valid": {
            "name": "url_is_valid",
            "location": 114,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Page.urls": {
            "name": "urls",
            "location": 117,
            "return": [
                "Generator[(str, None, None)]"
            ],
            "arguments": {
                "self": [],
                "domain": [
                    "Domain"
                ]
            }
        },
        "Page.normalize_url": {
            "name": "normalize_url",
            "location": 121,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "href": [
                    "str"
                ]
            }
        },
        "Page.extract_urls": {
            "name": "extract_urls",
            "location": 150,
            "return": [
                "Generator[(str, None, None)]"
            ],
            "arguments": {
                "self": [],
                "hrefs": [
                    "Iterator[str]"
                ]
            }
        },
        "Page.is_full_url": {
            "name": "is_full_url",
            "location": 163,
            "return": [
                "bool"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "Page.extract_hrefs": {
            "name": "extract_hrefs",
            "location": 167,
            "return": [
                "Generator[(str, None, None)]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "Report.__init__": {
            "name": "__init__",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "links": [
                    "Links"
                ]
            }
        },
        "Report.add_bad": {
            "name": "add_bad",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "Report.add_good": {
            "name": "add_good",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "Report.print": {
            "name": "print",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "verbose": [
                    "bool"
                ]
            }
        },
        "Report._print_quiet": {
            "name": "_print_quiet",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Report._print_verbose": {
            "name": "_print_verbose",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LazyRenderSorted.__init__": {
            "name": "__init__",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "coll": [
                    "Iterator"
                ]
            }
        },
        "LazyRenderSorted.__str__": {
            "name": "__str__",
            "location": 210,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EngineBase.__init__": {
            "name": "__init__",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root_url": [
                    "str"
                ],
                "limit": [
                    "Optional[int]"
                ]
            }
        },
        "EngineBase.run": {
            "name": "run",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EngineBase.mk_page": {
            "name": "mk_page",
            "location": 226,
            "return": [
                "Page"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "response": []
            }
        },
        "EngineBase.exit_code": {
            "name": "exit_code",
            "location": 229,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequentialEngine.mk_page": {
            "name": "mk_page",
            "location": 233,
            "return": [
                "Page"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "response": []
            }
        },
        "SequentialEngine.run": {
            "name": "run",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SequentialEngine.fetch_url": {
            "name": "fetch_url",
            "location": 254,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "url": [],
                "domain": []
            }
        },
        "AsyncEngine.run": {
            "name": "run",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Page.normalize_url.is_skippable": {
            "name": "is_skippable",
            "location": 129,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "Page.normalize_url.drop_fragment": {
            "name": "drop_fragment",
            "location": 131,
            "return": [],
            "arguments": {
                "url": []
            }
        }
    },
    "linkcheck-master/test_linkcheck.py": {
        "TestLinks.test_main": {
            "name": "test_main",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDomain.test_main": {
            "name": "test_main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPage.test_extract_hrefs": {
            "name": "test_extract_hrefs",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPage.test_extract_urls": {
            "name": "test_extract_urls",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPage.test_normalize_url": {
            "name": "test_normalize_url",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
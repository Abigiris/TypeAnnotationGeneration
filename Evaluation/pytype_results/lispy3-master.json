{
    "lispy3-master/lis.py": {
        "add_globals": {
            "name": "add_globals",
            "location": 19,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "env": [
                    "_T0@@"
                ]
            }
        },
        "eval": {
            "name": "eval",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": [],
                "env": []
            }
        },
        "read": {
            "name": "read",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "s": []
            }
        },
        "tokenize": {
            "name": "tokenize",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "s": []
            }
        },
        "read_from": {
            "name": "read_from",
            "location": 100,
            "return": [
                "Union[(float, int, list, str)]"
            ],
            "arguments": {
                "tokens": []
            }
        },
        "atom": {
            "name": "atom",
            "location": 117,
            "return": [
                "Union[(float, int, str)]"
            ],
            "arguments": {
                "token": []
            }
        },
        "to_string": {
            "name": "to_string",
            "location": 128,
            "return": [
                "str"
            ],
            "arguments": {
                "exp": []
            }
        },
        "repl": {
            "name": "repl",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "prompt": []
            }
        },
        "Env.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parms": [],
                "args": [],
                "outer": []
            }
        },
        "Env.find": {
            "name": "find",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        }
    },
    "lispy3-master/lispy.py": {
        "Sym": {
            "name": "Sym",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "s": [],
                "symbol_table": []
            }
        },
        "parse": {
            "name": "parse",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "inport": []
            }
        },
        "readchar": {
            "name": "readchar",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "inport": []
            }
        },
        "read": {
            "name": "read",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "inport": []
            }
        },
        "atom": {
            "name": "atom",
            "location": 112,
            "return": [
                "Any"
            ],
            "arguments": {
                "token": []
            }
        },
        "to_string": {
            "name": "to_string",
            "location": 132,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "x": [
                    "_T0@@"
                ]
            }
        },
        "load": {
            "name": "load",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "filename": []
            }
        },
        "repl": {
            "name": "repl",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "prompt": [],
                "inport": [],
                "out": []
            }
        },
        "is_pair": {
            "name": "is_pair",
            "location": 200,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": []
            }
        },
        "cons": {
            "name": "cons",
            "location": 204,
            "return": [
                "list"
            ],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "callcc": {
            "name": "callcc",
            "location": 208,
            "return": [
                "Any"
            ],
            "arguments": {
                "proc": []
            }
        },
        "add_globals": {
            "name": "add_globals",
            "location": 225,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [
                    "_T0@@"
                ]
            }
        },
        "eval": {
            "name": "eval",
            "location": 286,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": [],
                "env": []
            }
        },
        "expand": {
            "name": "expand",
            "location": 327,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": [],
                "toplevel": []
            }
        },
        "require": {
            "name": "require",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "x": [],
                "predicate": [],
                "msg": []
            }
        },
        "expand_quasiquote": {
            "name": "expand_quasiquote",
            "location": 396,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": []
            }
        },
        "let": {
            "name": "let",
            "location": 411,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "Procedure.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parms": [],
                "exp": [],
                "env": []
            }
        },
        "Procedure.__call__": {
            "name": "__call__",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "InPort.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "InPort.next_token": {
            "name": "next_token",
            "location": 62,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "read.read_ahead": {
            "name": "read_ahead",
            "location": 86,
            "return": [],
            "arguments": {
                "token": []
            }
        },
        "Env.__init__": {
            "name": "__init__",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parms": [],
                "args": [],
                "outer": []
            }
        },
        "Env.find": {
            "name": "find",
            "location": 190,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        },
        "callcc.throw": {
            "name": "throw",
            "location": 212,
            "return": [],
            "arguments": {
                "retval": []
            }
        }
    },
    "lispy3-master/main.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "prompt": []
            }
        }
    }
}
{
    "loaf_django-master/manage.py": {},
    "loaf_django-master/config/urls.py": {},
    "loaf_django-master/config/wsgi.py": {},
    "loaf_django-master/config/__init__.py": {},
    "loaf_django-master/config/settings/base.py": {},
    "loaf_django-master/config/settings/local.py": {},
    "loaf_django-master/config/settings/production.py": {},
    "loaf_django-master/config/settings/test.py": {},
    "loaf_django-master/config/settings/__init__.py": {},
    "loaf_django-master/docs/conf.py": {},
    "loaf_django-master/docs/__init__.py": {},
    "loaf_django-master/loaf/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "loaf_django-master/loaf/views.py": {
        "ReactAppView.get": {
            "name": "get",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "loaf_django-master/loaf/__init__.py": {},
    "loaf_django-master/loaf/contrib/__init__.py": {},
    "loaf_django-master/loaf/contrib/sites/__init__.py": {},
    "loaf_django-master/loaf/contrib/sites/migrations/0001_initial.py": {},
    "loaf_django-master/loaf/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "loaf_django-master/loaf/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "loaf_django-master/loaf/contrib/sites/migrations/__init__.py": {},
    "loaf_django-master/loaf/projects/admin.py": {},
    "loaf_django-master/loaf/projects/apps.py": {},
    "loaf_django-master/loaf/projects/models.py": {
        "Project.like_count": {
            "name": "like_count",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Project.comment_count": {
            "name": "comment_count",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Project.member_count": {
            "name": "member_count",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Project.__str__": {
            "name": "__str__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.__str__": {
            "name": "__str__",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Like.__str__": {
            "name": "__str__",
            "location": 80,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Join.project_title": {
            "name": "project_title",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Join.project_caption": {
            "name": "project_caption",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Join.__str__": {
            "name": "__str__",
            "location": 100,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "loaf_django-master/loaf/projects/serializers.py": {},
    "loaf_django-master/loaf/projects/tests.py": {},
    "loaf_django-master/loaf/projects/urls.py": {},
    "loaf_django-master/loaf/projects/views.py": {
        "Projects.get": {
            "name": "get",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "Projects.post": {
            "name": "post",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "LikeProject.get": {
            "name": "get",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "fomat": []
            }
        },
        "LikeProject.post": {
            "name": "post",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "UnLikeProject.delete": {
            "name": "delete",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "ModerateComments.delete": {
            "name": "delete",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "comment_id": [],
                "format": []
            }
        },
        "ProjectDetail.find_own_project": {
            "name": "find_own_project",
            "location": 118,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "project_id": [],
                "user": []
            }
        },
        "ProjectDetail.get": {
            "name": "get",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "ProjectDetail.put": {
            "name": "put",
            "location": 138,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "ProjectDetail.delete": {
            "name": "delete",
            "location": 162,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "CommentOnProject.post": {
            "name": "post",
            "location": 178,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "Comment.delete": {
            "name": "delete",
            "location": 202,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "comment_id": [],
                "format": []
            }
        },
        "JoinProject.get": {
            "name": "get",
            "location": 222,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "fomat": []
            }
        },
        "JoinProject.post": {
            "name": "post",
            "location": 235,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "ProjectsRecommand.get": {
            "name": "get",
            "location": 275,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "AptView.get": {
            "name": "get",
            "location": 285,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "DropMember.post": {
            "name": "post",
            "location": 300,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "join_id": [],
                "format": []
            }
        },
        "OngoingProject.post": {
            "name": "post",
            "location": 314,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "CompletedProject.post": {
            "name": "post",
            "location": 332,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        },
        "PutApt.post": {
            "name": "post",
            "location": 354,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "project_id": [],
                "format": []
            }
        }
    },
    "loaf_django-master/loaf/projects/__init__.py": {},
    "loaf_django-master/loaf/projects/migrations/0001_initial.py": {},
    "loaf_django-master/loaf/projects/migrations/0002_auto_20180907_1749.py": {},
    "loaf_django-master/loaf/projects/migrations/0003_auto_20180908_1750.py": {},
    "loaf_django-master/loaf/projects/migrations/0004_project_apt.py": {},
    "loaf_django-master/loaf/projects/migrations/0005_auto_20180908_2120.py": {},
    "loaf_django-master/loaf/projects/migrations/0006_auto_20180908_2136.py": {},
    "loaf_django-master/loaf/projects/migrations/0007_auto_20180915_1521.py": {},
    "loaf_django-master/loaf/projects/migrations/0008_auto_20181026_1827.py": {},
    "loaf_django-master/loaf/projects/migrations/__init__.py": {},
    "loaf_django-master/loaf/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "sociallogin": []
            }
        }
    },
    "loaf_django-master/loaf/users/admin.py": {
        "MyUserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "loaf_django-master/loaf/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "loaf_django-master/loaf/users/apriori_match_project.py": {},
    "loaf_django-master/loaf/users/apriori_match_user.py": {},
    "loaf_django-master/loaf/users/apriori_project.py": {},
    "loaf_django-master/loaf/users/apriori_user.py": {},
    "loaf_django-master/loaf/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "loaf_django-master/loaf/users/models.py": {
        "User.__str__": {
            "name": "__str__",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.post_count": {
            "name": "post_count",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.followers_count": {
            "name": "followers_count",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.following_count": {
            "name": "following_count",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "loaf_django-master/loaf/users/serializers.py": {
        "SignUpSerializer.get_cleaned_data": {
            "name": "get_cleaned_data",
            "location": 108,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SignUpSerializer.save": {
            "name": "save",
            "location": 117,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "loaf_django-master/loaf/users/urls.py": {},
    "loaf_django-master/loaf/users/views.py": {
        "ExploreUsers.get": {
            "name": "get",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "FollowUser.post": {
            "name": "post",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": []
            }
        },
        "UnFollowUser.post": {
            "name": "post",
            "location": 141,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "user_id": [],
                "format": []
            }
        },
        "Search.get": {
            "name": "get",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "UserProfile.get_user": {
            "name": "get_user",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "UserProfile.get": {
            "name": "get",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "UserProfile.post": {
            "name": "post",
            "location": 98,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "UserFollowers.get": {
            "name": "get",
            "location": 159,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "UserFollowing.get": {
            "name": "get",
            "location": 175,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "ChangePassword.put": {
            "name": "put",
            "location": 192,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "JoinedProject.get": {
            "name": "get",
            "location": 266,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "fomat": []
            }
        },
        "TagUserInfo.get": {
            "name": "get",
            "location": 281,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "UsersRecommand.get_user": {
            "name": "get_user",
            "location": 308,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "UsersRecommand.get": {
            "name": "get",
            "location": 314,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "UsersRecommand.get_match_username": {
            "name": "get_match_username",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "username": [
                    "UsersRecommand"
                ]
            }
        },
        "TagUserProjectInfo.get": {
            "name": "get",
            "location": 339,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "format": []
            }
        },
        "ProjectsRecommand.get_user": {
            "name": "get_user",
            "location": 405,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": []
            }
        },
        "ProjectsRecommand.get": {
            "name": "get",
            "location": 411,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "username": [],
                "format": []
            }
        },
        "ProjectsRecommand.get_match_projectId": {
            "name": "get_match_projectId",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "projectId": [
                    "ProjectsRecommand"
                ]
            }
        }
    },
    "loaf_django-master/loaf/users/__init__.py": {},
    "loaf_django-master/loaf/users/migrations/0001_initial.py": {},
    "loaf_django-master/loaf/users/migrations/0002_auto_20180901_1736.py": {},
    "loaf_django-master/loaf/users/migrations/0003_user_apt_score.py": {},
    "loaf_django-master/loaf/users/migrations/0004_remove_user_apt_score.py": {},
    "loaf_django-master/loaf/users/migrations/0005_auto_20181014_2222.py": {},
    "loaf_django-master/loaf/users/migrations/0006_auto_20181018_0252.py": {},
    "loaf_django-master/loaf/users/migrations/__init__.py": {},
    "loaf_django-master/loaf/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "create": [],
                "extracted": []
            }
        }
    },
    "loaf_django-master/loaf/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "loaf_django-master/loaf/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "loaf_django-master/loaf/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "loaf_django-master/loaf/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        }
    },
    "loaf_django-master/loaf/users/tests/__init__.py": {}
}
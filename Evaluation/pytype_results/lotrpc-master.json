{
    "lotrpc-master/setup.py": {},
    "lotrpc-master/lotrpc/client.py": {
        "ClientIf.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "ClientIf.call": {
            "name": "call",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "ClientIf.asynccall": {
            "name": "asynccall",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "loop": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/clsrv.py": {
        "setupLog": {
            "name": "setupLog",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "verbose": []
            }
        },
        "do_call_pool": {
            "name": "do_call_pool",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {
                "pool": [],
                "cl": [],
                "num": [],
                "method": [],
                "params": []
            }
        },
        "do_call": {
            "name": "do_call",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "cl": [],
                "num": [],
                "method": [],
                "params": []
            }
        },
        "do_call_async": {
            "name": "do_call_async",
            "location": 84,
            "return": [
                "str"
            ],
            "arguments": {
                "cl": [],
                "num": [],
                "method": [],
                "params": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 95,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "listmode": {
            "name": "listmode",
            "location": 101,
            "return": [],
            "arguments": {}
        },
        "server": {
            "name": "server",
            "location": 114,
            "return": [],
            "arguments": {
                "mode": [],
                "addr": [],
                "verbose": [],
                "options": []
            }
        },
        "client": {
            "name": "client",
            "location": 129,
            "return": [],
            "arguments": {
                "mode": [],
                "addr": [],
                "method": [],
                "num": [],
                "params": [],
                "options": [],
                "verbose": []
            }
        },
        "client_pool": {
            "name": "client_pool",
            "location": 145,
            "return": [],
            "arguments": {
                "mode": [],
                "addr": [],
                "method": [],
                "num": [],
                "params": [],
                "options": [],
                "verbose": []
            }
        },
        "client_ppool": {
            "name": "client_ppool",
            "location": 162,
            "return": [],
            "arguments": {
                "mode": [],
                "addr": [],
                "method": [],
                "num": [],
                "params": [],
                "options": [],
                "verbose": []
            }
        },
        "client_async": {
            "name": "client_async",
            "location": 179,
            "return": [],
            "arguments": {
                "mode": [],
                "addr": [],
                "method": [],
                "num": [],
                "params": [],
                "options": [],
                "verbose": []
            }
        },
        "prox": {
            "name": "prox",
            "location": 196,
            "return": [],
            "arguments": {
                "server": [],
                "addr_s": [],
                "client": [],
                "addr_c": [],
                "client_options": [],
                "server_options": [],
                "verbose": [],
                "accesslog": []
            }
        },
        "proxy_auth": {
            "name": "proxy_auth",
            "location": 215,
            "return": [],
            "arguments": {
                "server": [],
                "addr_s": [],
                "client": [],
                "addr_c": [],
                "client_options": [],
                "server_options": [],
                "verbose": []
            }
        },
        "qworker": {
            "name": "qworker",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "q": []
            }
        },
        "qworker2": {
            "name": "qworker2",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "q": [],
                "loop": []
            }
        },
        "benchmark": {
            "name": "benchmark",
            "location": 252,
            "return": [],
            "arguments": {
                "mode": [],
                "addr": [],
                "method": [],
                "loop": [],
                "params": [],
                "options": [],
                "verbose": [],
                "qsize": [],
                "filter": []
            }
        },
        "MyDispatcher.do_sleep": {
            "name": "do_sleep",
            "location": 26,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "params": [
                    "_T0@@"
                ]
            }
        },
        "MyDispatcher.do_hello_sleep": {
            "name": "do_hello_sleep",
            "location": 33,
            "return": [
                "Dict[(str, Union[(float, int)])]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "MyDispatcher.do_Greeter_SayHello": {
            "name": "do_Greeter_SayHello",
            "location": 40,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "MyDispatcher.do_Greeter_SayHelloAgain": {
            "name": "do_Greeter_SayHelloAgain",
            "location": 44,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "MyDispatcher.do_Greeter_SayGoodMorning": {
            "name": "do_Greeter_SayGoodMorning",
            "location": 48,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "MyDispatcher.do_hello": {
            "name": "do_hello",
            "location": 52,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "MyDispatcher.do_hello_world": {
            "name": "do_hello_world",
            "location": 55,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "MyDispatcher.__call__": {
            "name": "__call__",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "benchmark.callapi": {
            "name": "callapi",
            "location": 261,
            "return": [],
            "arguments": {
                "bm": []
            }
        },
        "benchmark.tpcall": {
            "name": "tpcall",
            "location": 269,
            "return": [],
            "arguments": {
                "bm": []
            }
        },
        "benchmark.ppcall": {
            "name": "ppcall",
            "location": 282,
            "return": [],
            "arguments": {
                "bm": []
            }
        },
        "benchmark.asynccall": {
            "name": "asynccall",
            "location": 295,
            "return": [],
            "arguments": {
                "bm": []
            }
        }
    },
    "lotrpc-master/lotrpc/dispatcher.py": {
        "SimpleDispatcher.__call__": {
            "name": "__call__",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/proxy.py": {
        "Proxy.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "server": [],
                "client": []
            }
        },
        "Proxy.serve": {
            "name": "serve",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proxy.paramfilter": {
            "name": "paramfilter",
            "location": 15,
            "return": [
                "Tuple[(_T0, _T1)]"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "_T0@@"
                ],
                "param": [
                    "_T1@@"
                ]
            }
        },
        "Proxy.dispatcher": {
            "name": "dispatcher",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "LoggingProxy.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "server": [],
                "client": []
            }
        },
        "LoggingProxy.dispatcher": {
            "name": "dispatcher",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/proxyauth.py": {
        "LoginProxy.login": {
            "name": "login",
            "location": 20,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "LoginProxy.logout": {
            "name": "logout",
            "location": 37,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {
                "self": [],
                "params": []
            }
        },
        "LoginProxy._check_token": {
            "name": "_check_token",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token": []
            }
        },
        "LoginProxy.dispatcher": {
            "name": "dispatcher",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/rpcgen.py": {
        "cli": {
            "name": "cli",
            "location": 19,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "lex": {
            "name": "lex",
            "location": 27,
            "return": [],
            "arguments": {
                "file": [],
                "verbose": []
            }
        },
        "parse_file": {
            "name": "parse_file",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "file": [],
                "cpp": [],
                "defs": [],
                "verbose": []
            }
        },
        "parse": {
            "name": "parse",
            "location": 56,
            "return": [],
            "arguments": {
                "file": [],
                "cpp": [],
                "defs": [],
                "verbose": []
            }
        },
        "rpcgen": {
            "name": "rpcgen",
            "location": 69,
            "return": [],
            "arguments": {
                "file": [],
                "cpp": [],
                "defs": [],
                "template": [],
                "verbose": []
            }
        },
        "rpcgen_autopep": {
            "name": "rpcgen_autopep",
            "location": 86,
            "return": [],
            "arguments": {
                "file": [],
                "cpp": [],
                "defs": [],
                "template": [],
                "verbose": []
            }
        },
        "rpcgen_help": {
            "name": "rpcgen_help",
            "location": 106,
            "return": [],
            "arguments": {
                "file": [],
                "cpp": [],
                "defs": [],
                "template": [],
                "verbose": []
            }
        }
    },
    "lotrpc-master/lotrpc/server.py": {
        "ServerIf.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "ServerIf.serve": {
            "name": "serve",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        }
    },
    "lotrpc-master/lotrpc/version.py": {},
    "lotrpc-master/lotrpc/__init__.py": {},
    "lotrpc-master/lotrpc/aiojson/rpc.py": {
        "Server.serve": {
            "name": "serve",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "Client.__del__": {
            "name": "__del__",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Server.MyHandler._d1": {
            "name": "_d1",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "Server.MyHandler._lookup_method": {
            "name": "_lookup_method",
            "location": 16,
            "return": [
                "functools.partial"
            ],
            "arguments": {
                "self": [],
                "method_name": []
            }
        }
    },
    "lotrpc-master/lotrpc/aiojson/__init__.py": {},
    "lotrpc-master/lotrpc/aioxml/rpc.py": {
        "Server.serve": {
            "name": "serve",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "Client.__del__": {
            "name": "__del__",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Server.MyHandler._d1": {
            "name": "_d1",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "Server.MyHandler._lookup_method": {
            "name": "_lookup_method",
            "location": 16,
            "return": [
                "functools.partial"
            ],
            "arguments": {
                "self": [],
                "method_name": []
            }
        }
    },
    "lotrpc-master/lotrpc/aioxml/__init__.py": {},
    "lotrpc-master/lotrpc/grpc/rpc.py": {
        "read_desc": {
            "name": "read_desc",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "src": []
            }
        },
        "compile": {
            "name": "compile",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "src": [],
                "dest": []
            }
        },
        "desc2typemap": {
            "name": "desc2typemap",
            "location": 51,
            "return": [
                "Dict[(Any, Dict[(str, Any)])]"
            ],
            "arguments": {
                "desc": []
            }
        },
        "do_import": {
            "name": "do_import",
            "location": 68,
            "return": [
                "Tuple[(module, module)]"
            ],
            "arguments": {
                "src": [],
                "dest": []
            }
        },
        "read_proto": {
            "name": "read_proto",
            "location": 81,
            "return": [
                "Tuple[(Any, Dict[(Any, Dict[(str, Any)])], module, module)]"
            ],
            "arguments": {
                "src": []
            }
        },
        "Server.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Server.mtd": {
            "name": "mtd",
            "location": 105,
            "return": [
                "Any"
            ],
            "arguments": {
                "yourself": [
                    "Server"
                ],
                "myself": [],
                "method": [],
                "typeinfo": [],
                "req": [],
                "context": []
            }
        },
        "Server.serve": {
            "name": "serve",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 152,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/grpc/__init__.py": {},
    "lotrpc-master/lotrpc/json/rpc.py": {
        "Server.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Server.serve": {
            "name": "serve",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fn": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 66,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "Server.Handler.initialize": {
            "name": "initialize",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "Server.Handler.set_default_headers": {
            "name": "set_default_headers",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Server.Handler.post": {
            "name": "post",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "lotrpc-master/lotrpc/json/__init__.py": {},
    "lotrpc-master/lotrpc/mp/rpc.py": {
        "Server.serve": {
            "name": "serve",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "Server.MPServ.__getattr__": {
            "name": "__getattr__",
            "location": 16,
            "return": [
                "functools.partial"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "dflt": []
            }
        }
    },
    "lotrpc-master/lotrpc/mp/__init__.py": {},
    "lotrpc-master/lotrpc/msgpack/rpc.py": {
        "conv": {
            "name": "conv",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "s": [],
                "encoding": []
            }
        },
        "Server.serve": {
            "name": "serve",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "Server.MPServ.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Server.MPServ.initialize": {
            "name": "initialize",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "Server.MPServ.done_async": {
            "name": "done_async",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "responder": [],
                "result": []
            }
        },
        "Server.MPServ.dispatch": {
            "name": "dispatch",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "param": [],
                "responder": []
            }
        }
    },
    "lotrpc-master/lotrpc/msgpack/__init__.py": {},
    "lotrpc-master/lotrpc/sunrpc/parse.py": {
        "t_NEWLINE": {
            "name": "t_NEWLINE",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "t_error": {
            "name": "t_error",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "t_ID": {
            "name": "t_ID",
            "location": 69,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "t": [
                    "_T0@@"
                ]
            }
        },
        "sequence": {
            "name": "sequence",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "t": [],
                "first": [],
                "second": []
            }
        },
        "valmap": {
            "name": "valmap",
            "location": 89,
            "return": [
                "dict"
            ],
            "arguments": {
                "s": []
            }
        },
        "p_statements_1": {
            "name": "p_statements_1",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_statement": {
            "name": "p_statement",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_defconst": {
            "name": "p_defconst",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_defenum": {
            "name": "p_defenum",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_enuments": {
            "name": "p_enuments",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_enument": {
            "name": "p_enument",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_struct": {
            "name": "p_struct",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_structents": {
            "name": "p_structents",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_structent_1": {
            "name": "p_structent_1",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_structent_2": {
            "name": "p_structent_2",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_structent_3": {
            "name": "p_structent_3",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_typeid": {
            "name": "p_typeid",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_typedef_1": {
            "name": "p_typedef_1",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_typedef_2": {
            "name": "p_typedef_2",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_union": {
            "name": "p_union",
            "location": 228,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_cases": {
            "name": "p_cases",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_case": {
            "name": "p_case",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_caselabel_1": {
            "name": "p_caselabel_1",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_caselabel_2": {
            "name": "p_caselabel_2",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_program": {
            "name": "p_program",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_versions": {
            "name": "p_versions",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_version": {
            "name": "p_version",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_procs": {
            "name": "p_procs",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_proc": {
            "name": "p_proc",
            "location": 294,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "p_error": {
            "name": "p_error",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        },
        "parse_file": {
            "name": "parse_file",
            "location": 304,
            "return": [
                "Any"
            ],
            "arguments": {
                "fp": [],
                "debug": [],
                "defines": []
            }
        },
        "get_lexer": {
            "name": "get_lexer",
            "location": 319,
            "return": [
                "Any"
            ],
            "arguments": {
                "fp": []
            }
        }
    },
    "lotrpc-master/lotrpc/sunrpc/rpc.py": {
        "Server.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Server.serve": {
            "name": "serve",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/sunrpc/rpcgen.py": {
        "convert_parsed": {
            "name": "convert_parsed",
            "location": 252,
            "return": [
                "Dict[(str, Union[(list, Dict[(Any, str)])])]"
            ],
            "arguments": {
                "parsed": []
            }
        },
        "generate_proto": {
            "name": "generate_proto",
            "location": 300,
            "return": [
                "Any"
            ],
            "arguments": {
                "parsed": [],
                "tmpl_str": []
            }
        }
    },
    "lotrpc-master/lotrpc/sunrpc/__init__.py": {},
    "lotrpc-master/lotrpc/xml/rpc.py": {
        "Server.serve": {
            "name": "serve",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        },
        "Server.XServ.initialize": {
            "name": "initialize",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "Server.XServ._dispatch": {
            "name": "_dispatch",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/xml/__init__.py": {},
    "lotrpc-master/lotrpc/zero/rpc.py": {
        "ZeroServer.__call__": {
            "name": "__call__",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "MyDict.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": [],
                "kv": []
            }
        },
        "MyDict.do_call": {
            "name": "do_call",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "MyDict.__hasattr__": {
            "name": "__hasattr__",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "MyDict.get": {
            "name": "get",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "k": [],
                "defval": []
            }
        },
        "Server.serve": {
            "name": "serve",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dispatcher": []
            }
        },
        "Client.__init__": {
            "name": "__init__",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "addr": [],
                "params": []
            }
        },
        "Client.call": {
            "name": "call",
            "location": 64,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "params": []
            }
        }
    },
    "lotrpc-master/lotrpc/zero/__init__.py": {}
}
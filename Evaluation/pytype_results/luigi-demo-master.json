{
    "luigi-demo-master/luigi/demo/advanced.py": {
        "CompanyEngineerSalary.output": {
            "name": "output",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CompanyEngineerSalary.requires": {
            "name": "requires",
            "location": 25,
            "return": [
                "demo.simple.AggregatePositions"
            ],
            "arguments": {
                "self": []
            }
        },
        "CompanyEngineerSalary.run": {
            "name": "run",
            "location": 28,
            "return": [
                "Generator[(demo.simple.ProfessionEmployers, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PandasDFDemo.requires": {
            "name": "requires",
            "location": 58,
            "return": [
                "demo.simple.GenerateCustomers"
            ],
            "arguments": {
                "self": []
            }
        },
        "PandasDFDemo.output": {
            "name": "output",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PandasDFDemo.run": {
            "name": "run",
            "location": 64,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomerSalaries.output": {
            "name": "output",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomerSalaries.requires": {
            "name": "requires",
            "location": 86,
            "return": [
                "Dict[(str, Union[(CompanyEngineerSalary, demo.simple.GenerateCustomers)])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomerSalaries.run": {
            "name": "run",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "luigi-demo-master/luigi/demo/news.py": {
        "NewsTopicTask._key": {
            "name": "_key",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NewsTopicTask.params": {
            "name": "params",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DownloadArticles.output": {
            "name": "output",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DownloadArticles.run": {
            "name": "run",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoadArticles.table": {
            "name": "table",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoadArticles.requires": {
            "name": "requires",
            "location": 86,
            "return": [
                "DownloadArticles"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoadArticles.rows": {
            "name": "rows",
            "location": 91,
            "return": [
                "Generator[(Tuple[(Any, Any, Any, Any, Any, Any, Any)], Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseArticles.output": {
            "name": "output",
            "location": 109,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseArticles.requires": {
            "name": "requires",
            "location": 112,
            "return": [
                "DownloadArticles"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParseArticles.run": {
            "name": "run",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountTopicSources.output": {
            "name": "output",
            "location": 135,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountTopicSources.requires": {
            "name": "requires",
            "location": 138,
            "return": [
                "ParseArticles"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountTopicSources.mapper": {
            "name": "mapper",
            "location": 141,
            "return": [
                "Generator[(Tuple[(Any, int)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "CountTopicSources.reducer": {
            "name": "reducer",
            "location": 145,
            "return": [
                "Generator[(Tuple[(_T0, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "_T0"
                ],
                "values": []
            }
        },
        "CountMultiTopicSources.output": {
            "name": "output",
            "location": 155,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountMultiTopicSources.requires": {
            "name": "requires",
            "location": 160,
            "return": [
                "List[CountTopicSources]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CountMultiTopicSources.mapper": {
            "name": "mapper",
            "location": 169,
            "return": [
                "Generator[(Tuple[(Any, int)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "CountMultiTopicSources.reducer": {
            "name": "reducer",
            "location": 173,
            "return": [
                "Generator[(Tuple[(_T0, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "_T0"
                ],
                "values": []
            }
        }
    },
    "luigi-demo-master/luigi/demo/simple.py": {
        "GenerateCustomers.output": {
            "name": "output",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "GenerateCustomers.run": {
            "name": "run",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregatePositions.output": {
            "name": "output",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregatePositions.requires": {
            "name": "requires",
            "location": 49,
            "return": [
                "GenerateCustomers"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregatePositions.mapper": {
            "name": "mapper",
            "location": 52,
            "return": [
                "Generator[(Tuple[(str, int)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "AggregatePositions.reducer": {
            "name": "reducer",
            "location": 57,
            "return": [
                "Generator[(Tuple[(_T0, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "_T0"
                ],
                "values": []
            }
        },
        "ProfessionEmployers.output": {
            "name": "output",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProfessionEmployers.requires": {
            "name": "requires",
            "location": 70,
            "return": [
                "GenerateCustomers"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProfessionEmployers.mapper": {
            "name": "mapper",
            "location": 73,
            "return": [
                "Generator[(Tuple[(str, int)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "ProfessionEmployers.reducer": {
            "name": "reducer",
            "location": 81,
            "return": [
                "Generator[(Tuple[(_T0, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "_T0"
                ],
                "values": []
            }
        },
        "ScientistEmployers.output": {
            "name": "output",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScientistEmployers.requires": {
            "name": "requires",
            "location": 96,
            "return": [
                "List[ProfessionEmployers]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ScientistEmployers.mapper": {
            "name": "mapper",
            "location": 99,
            "return": [
                "Generator[(Tuple[(Any, int)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "ScientistEmployers.reducer": {
            "name": "reducer",
            "location": 103,
            "return": [
                "Generator[(Tuple[(_T0, Any)], Any, None)]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "_T0"
                ],
                "values": []
            }
        }
    },
    "luigi-demo-master/luigi/demo/__init__.py": {}
}
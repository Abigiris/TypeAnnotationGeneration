{
    "luracoin-python-master/luracoin/blocks.py": {
        "Block.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "version": [],
                "height": [],
                "miner": [],
                "prev_block_hash": [],
                "bits": [],
                "nonce": [],
                "timestamp": [],
                "txns": []
            }
        },
        "Block.id": {
            "name": "id",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.header": {
            "name": "header",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.json": {
            "name": "json",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.select_transactions": {
            "name": "select_transactions",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.serialize": {
            "name": "serialize",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.deserialize": {
            "name": "deserialize",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "block_serialized": []
            }
        },
        "Block.is_valid_proof": {
            "name": "is_valid_proof",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.validate": {
            "name": "validate",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.get_blocks_from_file": {
            "name": "get_blocks_from_file",
            "location": 196,
            "return": [],
            "arguments": {
                "cls": [],
                "fileNumber": []
            }
        },
        "Block.last": {
            "name": "last",
            "location": 214,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Block.get": {
            "name": "get",
            "location": 222,
            "return": [],
            "arguments": {
                "cls": [],
                "height": []
            }
        },
        "Block.save": {
            "name": "save",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Block.create": {
            "name": "create",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "propagate": []
            }
        }
    },
    "luracoin-python-master/luracoin/chain.py": {
        "open_database": {
            "name": "open_database",
            "location": 116,
            "return": [
                "Any"
            ],
            "arguments": {
                "database_name": []
            }
        },
        "set_value": {
            "name": "set_value",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "database_name": [],
                "key": [],
                "value": []
            }
        },
        "get_value": {
            "name": "get_value",
            "location": 135,
            "return": [
                "Any"
            ],
            "arguments": {
                "database_name": [],
                "key": []
            }
        },
        "get_blk_file_size": {
            "name": "get_blk_file_size",
            "location": 143,
            "return": [
                "int"
            ],
            "arguments": {
                "file_name": []
            }
        },
        "max_block_size": {
            "name": "max_block_size",
            "location": 154,
            "return": [
                "Dict[(int, int)]"
            ],
            "arguments": {
                "current_height": []
            }
        },
        "get_current_blk_file": {
            "name": "get_current_blk_file",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "current_file_number": []
            }
        },
        "get_current_file_name": {
            "name": "get_current_file_name",
            "location": 165,
            "return": [
                "str"
            ],
            "arguments": {
                "file_number": []
            }
        },
        "next_blk_file": {
            "name": "next_blk_file",
            "location": 170,
            "return": [
                "str"
            ],
            "arguments": {
                "current_blk_file": []
            }
        },
        "blk_file_format": {
            "name": "blk_file_format",
            "location": 180,
            "return": [
                "str"
            ],
            "arguments": {
                "number": []
            }
        },
        "Chain.tip": {
            "name": "tip",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Chain.set_tip": {
            "name": "set_tip",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "height": []
            }
        },
        "Chain.current_file_number": {
            "name": "current_file_number",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Chain.set_current_file_number": {
            "name": "set_current_file_number",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_number": []
            }
        },
        "Chain.get_block_file_number": {
            "name": "get_block_file_number",
            "location": 67,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "height": []
            }
        },
        "Chain.set_block_file_number": {
            "name": "set_block_file_number",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "height": [],
                "file_number": []
            }
        },
        "Chain.get_account": {
            "name": "get_account",
            "location": 91,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "address": []
            }
        },
        "Chain.set_account": {
            "name": "set_account",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [],
                "data": []
            }
        }
    },
    "luracoin-python-master/luracoin/client.py": {
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "mine": {
            "name": "mine",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "generateWallet": {
            "name": "generateWallet",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "save": []
            }
        }
    },
    "luracoin-python-master/luracoin/config.py": {},
    "luracoin-python-master/luracoin/errors.py": {},
    "luracoin-python-master/luracoin/exceptions.py": {},
    "luracoin-python-master/luracoin/explorer.py": {
        "mining_reward": {
            "name": "mining_reward",
            "location": 129,
            "return": [
                "int"
            ],
            "arguments": {
                "height": []
            }
        }
    },
    "luracoin-python-master/luracoin/helpers.py": {
        "bits_to_target": {
            "name": "bits_to_target",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "bits": []
            }
        },
        "sha256d": {
            "name": "sha256d",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "s": []
            }
        },
        "mining_reward": {
            "name": "mining_reward",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "height": []
            }
        },
        "little_endian_to_int": {
            "name": "little_endian_to_int",
            "location": 47,
            "return": [
                "int"
            ],
            "arguments": {
                "little_endian_hex": []
            }
        },
        "is_hex": {
            "name": "is_hex",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "s": []
            }
        },
        "bytes_to_signing_key": {
            "name": "bytes_to_signing_key",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "private_key": []
            }
        }
    },
    "luracoin-python-master/luracoin/pow.py": {
        "proof_of_work": {
            "name": "proof_of_work",
            "location": 1,
            "return": [
                "Any"
            ],
            "arguments": {
                "block": [],
                "starting_at": []
            }
        }
    },
    "luracoin-python-master/luracoin/testing.py": {},
    "luracoin-python-master/luracoin/transactions.py": {
        "build_message": {
            "name": "build_message",
            "location": 203,
            "return": [
                "str"
            ],
            "arguments": {
                "outpoint": [],
                "pub_key": []
            }
        },
        "build_script_sig": {
            "name": "build_script_sig",
            "location": 210,
            "return": [
                "Any"
            ],
            "arguments": {
                "signature": [],
                "public_key": []
            }
        },
        "verify_signature": {
            "name": "verify_signature",
            "location": 217,
            "return": [
                "Any"
            ],
            "arguments": {
                "message": [],
                "public_key": [],
                "signature": []
            }
        },
        "deserialize_unlocking_script": {
            "name": "deserialize_unlocking_script",
            "location": 222,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "unlocking_script": []
            }
        },
        "is_valid_unlocking_script": {
            "name": "is_valid_unlocking_script",
            "location": 234,
            "return": [
                "Any"
            ],
            "arguments": {
                "unlocking_script": [],
                "transaction_serialized": []
            }
        },
        "sign_transaction": {
            "name": "sign_transaction",
            "location": 261,
            "return": [
                "Any"
            ],
            "arguments": {
                "private_key": [],
                "transaction_serialized": []
            }
        },
        "Transaction.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chain": [],
                "nonce": [],
                "fee": [],
                "value": [],
                "to_address": [],
                "unlock_sig": []
            }
        },
        "Transaction.is_coinbase": {
            "name": "is_coinbase",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Transaction.sign": {
            "name": "sign",
            "location": 41,
            "return": [
                "_TTransaction@@Transaction@@"
            ],
            "arguments": {
                "self": [
                    "_TTransaction@@Transaction@@"
                ],
                "private_key": []
            }
        },
        "Transaction.json": {
            "name": "json",
            "location": 49,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Transaction.serialize": {
            "name": "serialize",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "to_sign": []
            }
        },
        "Transaction.deserialize": {
            "name": "deserialize",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serialized_bytes": []
            }
        },
        "Transaction.id": {
            "name": "id",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Transaction.make_msg": {
            "name": "make_msg",
            "location": 98,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Transaction.validate_fields": {
            "name": "validate_fields",
            "location": 105,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "raise_exception": []
            }
        },
        "Transaction.validate": {
            "name": "validate",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "raise_exception": []
            }
        },
        "Transaction.to_transaction_pool": {
            "name": "to_transaction_pool",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Transaction.save": {
            "name": "save",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "block_height": []
            }
        }
    },
    "luracoin-python-master/luracoin/wallet.py": {
        "address_to_pubkey": {
            "name": "address_to_pubkey",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "address": []
            }
        },
        "build_p2pkh": {
            "name": "build_p2pkh",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "address": []
            }
        },
        "generate_random_wallet_input": {
            "name": "generate_random_wallet_input",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "create_wallet": {
            "name": "create_wallet",
            "location": 51,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "generate_wallet": {
            "name": "generate_wallet",
            "location": 68,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "pubkey_to_address": {
            "name": "pubkey_to_address",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "pubkey": []
            }
        }
    },
    "luracoin-python-master/luracoin/__init__.py": {},
    "luracoin-python-master/tests/conftest.py": {
        "init_blockchain": {
            "name": "init_blockchain",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "blockchain": {
            "name": "blockchain",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "run_before_and_after_tests": {
            "name": "run_before_and_after_tests",
            "location": 65,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        }
    },
    "luracoin-python-master/tests/constants.py": {},
    "luracoin-python-master/tests/helpers.py": {
        "add_test_transactions": {
            "name": "add_test_transactions",
            "location": 8,
            "return": [
                "List[luracoin.transactions.Transaction]"
            ],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/test_blockchian.py": {
        "test_block_select_transactions": {
            "name": "test_block_select_transactions",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_block_validate": {
            "name": "test_block_validate",
            "location": 72,
            "return": [],
            "arguments": {
                "blockchain": []
            }
        }
    },
    "luracoin-python-master/tests/test_chain.py": {
        "test_next_blk_file": {
            "name": "test_next_blk_file",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_chain_height": {
            "name": "test_chain_height",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_chain_current_file_number": {
            "name": "test_chain_current_file_number",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_block_file_numbers": {
            "name": "test_block_file_numbers",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_accounts": {
            "name": "test_accounts",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_chain_current_file_number_increase_when_file_surpases_the_max_size_allowed": {
            "name": "test_chain_current_file_number_increase_when_file_surpases_the_max_size_allowed",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_blk_file_size": {
            "name": "test_get_blk_file_size",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/test_helpers.py": {
        "test_bytes_to_signing_key": {
            "name": "test_bytes_to_signing_key",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "blockchain": []
            }
        },
        "test_is_hex": {
            "name": "test_is_hex",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sha256d": {
            "name": "test_sha256d",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "test_bits_to_target": {
            "name": "test_bits_to_target",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mining_reward": {
            "name": "test_mining_reward",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/test_pow.py": {
        "test_proof_of_work": {
            "name": "test_proof_of_work",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/test_wallet.py": {
        "test_build_p2pkh": {
            "name": "test_build_p2pkh",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_generate_random_wallet_input": {
            "name": "test_generate_random_wallet_input",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_generate_wallet": {
            "name": "test_generate_wallet",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_generate_wallet__check_input": {
            "name": "test_generate_wallet__check_input",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_generate_wallet__check_address": {
            "name": "test_generate_wallet__check_address",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_generate_wallet__check_verifying_key": {
            "name": "test_generate_wallet__check_verifying_key",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_generate_wallet__check_public_key": {
            "name": "test_generate_wallet__check_public_key",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_generate_wallet__check_private_key": {
            "name": "test_generate_wallet__check_private_key",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_generate_wallet__check_xprv": {
            "name": "test_generate_wallet__check_xprv",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_generate_wallet__check_seed": {
            "name": "test_generate_wallet__check_seed",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_generate_wallet__check_mnemonic": {
            "name": "test_generate_wallet__check_mnemonic",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "test_generate_wallet": []
            }
        },
        "test_pubkey_to_address": {
            "name": "test_pubkey_to_address",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_create_wallet": {
            "name": "test_create_wallet",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/__init__.py": {},
    "luracoin-python-master/tests/blocks/test_blocks_save.py": {
        "test_block_save": {
            "name": "test_block_save",
            "location": 14,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/blocks/test_blocks_serialize.py": {
        "test_block_serialize__with_one_transaction": {
            "name": "test_block_serialize__with_one_transaction",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "blockchain": []
            }
        },
        "test_block_serialize__with_multiple_transaction": {
            "name": "test_block_serialize__with_multiple_transaction",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/blocks/test_blocks_validate.py": {
        "test_validate": {
            "name": "test_validate",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/chain/test_full_blockchain.py": {
        "test_full_blockchain": {
            "name": "test_full_blockchain",
            "location": 15,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "luracoin-python-master/tests/transactions/test_transactions.py": {
        "test_to_json": {
            "name": "test_to_json",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_transaction_serializer_to_sign": {
            "name": "test_transaction_serializer_to_sign",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_serializer_with_coinbase_signatures": {
            "name": "test_serializer_with_coinbase_signatures",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_signatures": {
            "name": "test_signatures",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        }
    },
    "luracoin-python-master/tests/transactions/test_transactions_validate.py": {
        "test_validate_signatures": {
            "name": "test_validate_signatures",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_modify_transaction_after_signing": {
            "name": "test_modify_transaction_after_signing",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_chain": {
            "name": "test_chain",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_nonce": {
            "name": "test_nonce",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_fee": {
            "name": "test_fee",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_value": {
            "name": "test_value",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_to_address": {
            "name": "test_to_address",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_unlock_sig": {
            "name": "test_unlock_sig",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_staking_transaction": {
            "name": "test_staking_transaction",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
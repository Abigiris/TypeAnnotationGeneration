{
    "lzdeb-master/setup.py": {},
    "lzdeb-master/lzdeb/lzdeb.py": {
        "handle_build": {
            "name": "handle_build",
            "location": 397,
            "return": [
                "int"
            ],
            "arguments": {
                "args": []
            }
        },
        "handle_common": {
            "name": "handle_common",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 413,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "Source.from_data": {
            "name": "from_data",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": []
            }
        },
        "Source.retrieve": {
            "name": "retrieve",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "run_cmd": [],
                "work_dir": []
            }
        },
        "SourceFactory.create_source": {
            "name": "create_source",
            "location": 37,
            "return": [
                "GitSource"
            ],
            "arguments": {
                "data": []
            }
        },
        "GitSource.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [],
                "ref": [],
                "pull_submodules": []
            }
        },
        "GitSource.from_data": {
            "name": "from_data",
            "location": 54,
            "return": [
                "GitSource"
            ],
            "arguments": {
                "data": []
            }
        },
        "GitSource.retrieve": {
            "name": "retrieve",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "run_cmd": [],
                "work_dir": []
            }
        },
        "CommandError.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rc": [],
                "msg": []
            }
        },
        "DockerContainer.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image": [],
                "bootstrap_cmds": []
            }
        },
        "DockerContainer.bootstrap_container": {
            "name": "bootstrap_container",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DockerContainer.program_available": {
            "name": "program_available",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "program": []
            }
        },
        "DockerContainer.start": {
            "name": "start",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "DockerContainer.stop": {
            "name": "stop",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DockerContainer.from_data": {
            "name": "from_data",
            "location": 137,
            "return": [
                "Optional[DockerContainer]"
            ],
            "arguments": {
                "data": []
            }
        },
        "DockerContainer.run_cmd": {
            "name": "run_cmd",
            "location": 143,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "cmd": [],
                "cwd": [],
                "return_output": []
            }
        },
        "DockerContainer.import_file": {
            "name": "import_file",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "src_path": [],
                "dest_path": []
            }
        },
        "DockerContainer.list_files": {
            "name": "list_files",
            "location": 175,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "pattern": []
            }
        },
        "DockerContainer.export_file": {
            "name": "export_file",
            "location": 181,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "src_path": [],
                "dest_dir": []
            }
        },
        "DebInfo.__init__": {
            "name": "__init__",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pkgname": [],
                "pkgversion": [],
                "pkgrelease": [],
                "pkglicense": [],
                "pkggroup": [],
                "maintainer": [],
                "description": [],
                "requires": []
            }
        },
        "DebInfo.from_data": {
            "name": "from_data",
            "location": 221,
            "return": [
                "DebInfo"
            ],
            "arguments": {
                "data": []
            }
        },
        "DebInfo.prepare": {
            "name": "prepare",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "builder": [],
                "work_dir": []
            }
        },
        "DebInfo.cleanup": {
            "name": "cleanup",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DebInfo._get_checkinstall_requires_opt": {
            "name": "_get_checkinstall_requires_opt",
            "location": 245,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DebInfo.debianize_cmd": {
            "name": "debianize_cmd",
            "location": 259,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "cmd": []
            }
        },
        "LzDeb.__init__": {
            "name": "__init__",
            "location": 277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_dir": [],
                "builder": [],
                "validator": [],
                "source": [],
                "deb_info": [],
                "collect_path": [],
                "artifact_type": []
            }
        },
        "LzDeb.build_script": {
            "name": "build_script",
            "location": 296,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.install_script": {
            "name": "install_script",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.validate_script": {
            "name": "validate_script",
            "location": 306,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.from_data": {
            "name": "from_data",
            "location": 311,
            "return": [
                "LzDeb"
            ],
            "arguments": {
                "config_dir": [],
                "data": []
            }
        },
        "LzDeb.from_config_dir": {
            "name": "from_config_dir",
            "location": 320,
            "return": [
                "LzDeb"
            ],
            "arguments": {
                "config_dir": []
            }
        },
        "LzDeb.inject_file": {
            "name": "inject_file",
            "location": 332,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "container": [],
                "file_path": []
            }
        },
        "LzDeb.build": {
            "name": "build",
            "location": 338,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LzDeb.validate": {
            "name": "validate",
            "location": 380,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "deb_file": []
            }
        }
    },
    "lzdeb-master/lzdeb/utils.py": {
        "program_available": {
            "name": "program_available",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "name": []
            }
        },
        "get": {
            "name": "get",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": [],
                "key": [],
                "default": [],
                "required": []
            }
        },
        "container_exec": {
            "name": "container_exec",
            "location": 49,
            "return": [
                "ContainerExec"
            ],
            "arguments": {
                "container": [],
                "cmd": [],
                "stdout": [],
                "stderr": [],
                "stdin": [],
                "tty": [],
                "privileged": [],
                "user": [],
                "detach": [],
                "stream": [],
                "socket": [],
                "environment": [],
                "workdir": []
            }
        },
        "ContainerExec.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "id": [],
                "output": []
            }
        },
        "ContainerExec.inspect": {
            "name": "inspect",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContainerExec.poll": {
            "name": "poll",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContainerExec.communicate": {
            "name": "communicate",
            "location": 33,
            "return": [
                "Tuple[(Any, str)]"
            ],
            "arguments": {
                "self": [],
                "return_output": []
            }
        }
    },
    "lzdeb-master/lzdeb/__init__.py": {},
    "lzdeb-master/test/test_lzdeb.py": {
        "run_cmd": {
            "name": "run_cmd",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "cmd": [],
                "cwd": []
            }
        },
        "TestGitSource.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitSource.test_end_to_end": {
            "name": "test_end_to_end",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGitSource.tearDown": {
            "name": "tearDown",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "lzdeb-master/test/__init__.py": {}
}
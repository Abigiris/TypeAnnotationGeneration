{
    "mailmerger-master/mailmerge.py": {
        "makepdf": {
            "name": "makepdf",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "excelpath": [
                    "str"
                ],
                "mailpath": [
                    "str"
                ]
            }
        },
        "makehtml": {
            "name": "makehtml",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "excelpath": [
                    "str"
                ],
                "mailpath": [
                    "str"
                ]
            }
        },
        "sendemail": {
            "name": "sendemail",
            "location": 24,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "excelpath": [
                    "str"
                ],
                "mailpath": [
                    "str"
                ]
            }
        },
        "runcmds": {
            "name": "runcmds",
            "location": 43,
            "return": [],
            "arguments": {
                "action": [],
                "excelpath": [],
                "mailpath": []
            }
        }
    },
    "mailmerger-master/sendemail.py": {
        "parse_excel": {
            "name": "parse_excel",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": []
            }
        },
        "main": {
            "name": "main",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mailmerger-master/apps/mailagent.py": {
        "MailAgent.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mail_name": []
            }
        },
        "MailAgent.__find_variables": {
            "name": "__find_variables",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "env": [],
                "mail_name": []
            }
        },
        "MailAgent.__mapping_variable": {
            "name": "__mapping_variable",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "template_vars": [],
                "mapping_data": []
            }
        },
        "MailAgent.send_mapped_data_email": {
            "name": "send_mapped_data_email",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mapping_data": []
            }
        }
    },
    "mailmerger-master/apps/__init__.py": {},
    "mailmerger-master/apps/assembler/source.py": {
        "PreMergeSourceAssembler.sheet2source": {
            "name": "sheet2source",
            "location": 8,
            "return": [
                "apps.dto.source.PreMergeSourceDTO"
            ],
            "arguments": {
                "self": [],
                "datasheet": []
            }
        }
    },
    "mailmerger-master/apps/assembler/__init__.py": {},
    "mailmerger-master/apps/dto/source.py": {
        "PreMergeSourceDTO.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "headers": [
                    "List[str]"
                ],
                "dataset": [
                    "List[Dict[(str, Any)]]"
                ]
            }
        },
        "PreMergeSourceDTO.__eq__": {
            "name": "__eq__",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PreMergeSourceDTO.__repr__": {
            "name": "__repr__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mailmerger-master/apps/dto/__init__.py": {},
    "mailmerger-master/apps/services/datasource.py": {
        "PreMergeSourceParsingService.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PreMergeSourceParsingService.parsing_excel": {
            "name": "parsing_excel",
            "location": 16,
            "return": [
                "apps.dto.source.PreMergeSourceDTO"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        }
    },
    "mailmerger-master/apps/services/draftmerge.py": {
        "SourceMergeEmailDraftService.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SourceMergeEmailDraftService.read_draft": {
            "name": "read_draft",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "SourceMergeEmailDraftService.merge2pdf": {
            "name": "merge2pdf",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "draft_content": [
                    "str"
                ],
                "source": [
                    "apps.dto.source.PreMergeSourceDTO"
                ]
            }
        },
        "SourceMergeEmailDraftService.merge2html": {
            "name": "merge2html",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "draft_content": [
                    "str"
                ],
                "source": [
                    "apps.dto.source.PreMergeSourceDTO"
                ]
            }
        },
        "SourceMergeEmailDraftService.merge2send": {
            "name": "merge2send",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "draft_content": [
                    "str"
                ],
                "source": [
                    "apps.dto.source.PreMergeSourceDTO"
                ]
            }
        }
    },
    "mailmerger-master/apps/services/__init__.py": {},
    "mailmerger-master/domain/__init__.py": {},
    "mailmerger-master/domain/models/merger.py": {
        "SourceMerger.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "draft_content": [
                    "str"
                ]
            }
        },
        "SourceMerger._clean_word": {
            "name": "_clean_word",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "str"
                ]
            }
        },
        "SourceMerger._merge_rowset": {
            "name": "_merge_rowset",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "src_headers": [
                    "List[str]"
                ],
                "src_dataset": [
                    "Dict[(str, Any)]"
                ],
                "found_words": [
                    "List[str]"
                ]
            }
        },
        "SourceMerger.merge_source": {
            "name": "merge_source",
            "location": 63,
            "return": [
                "List[domain.models.merged.dataset.MergedSetVO]"
            ],
            "arguments": {
                "self": [],
                "src_headers": [
                    "List[str]"
                ],
                "src_datasets": [
                    "List[Dict[(str, Any)]]"
                ]
            }
        }
    },
    "mailmerger-master/domain/models/__init__.py": {},
    "mailmerger-master/domain/models/merged/dataset.py": {
        "MergedSetVO.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "content": [
                    "str"
                ]
            }
        },
        "MergedSetVO.name": {
            "name": "name",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MergedSetVO.content": {
            "name": "content",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MergedSetVO.__eq__": {
            "name": "__eq__",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "MergedSetVO.__repr__": {
            "name": "__repr__",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mailmerger-master/domain/models/merged/option.py": {},
    "mailmerger-master/domain/models/merged/output.py": {
        "MergedOutputExcutor.output": {
            "name": "output",
            "location": 20,
            "return": [
                "List[domain.models.merged.result.OutputResultVO]"
            ],
            "arguments": {
                "cls": [],
                "option": [
                    "domain.models.merged.option.OutputOption"
                ],
                "merged_sets": [
                    "List[domain.models.merged.dataset.MergedSetVO]"
                ]
            }
        }
    },
    "mailmerger-master/domain/models/merged/result.py": {
        "OutputResultVO.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "success": [
                    "bool"
                ]
            }
        },
        "OutputResultVO.name": {
            "name": "name",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OutputResultVO.success": {
            "name": "success",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OutputResultVO.__eq__": {
            "name": "__eq__",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "OutputResultVO.__repr__": {
            "name": "__repr__",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mailmerger-master/domain/models/merged/__init__.py": {},
    "mailmerger-master/domain/models/sources/draft.py": {
        "EmailDraftReader.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "draftname": [
                    "str"
                ]
            }
        },
        "EmailDraftReader._find_draftpath": {
            "name": "_find_draftpath",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "draftname": [
                    "str"
                ]
            }
        },
        "EmailDraftReader.read": {
            "name": "read",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mailmerger-master/domain/models/sources/excel.py": {
        "ExcelSheetParser.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "ExcelSheetParser._does_excel_format": {
            "name": "_does_excel_format",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "ExcelSheetParser._set_filename": {
            "name": "_set_filename",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "ExcelSheetParser.datasheet": {
            "name": "datasheet",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExcelSheetParser.filename": {
            "name": "filename",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExcelSheetParser.read_sheet": {
            "name": "read_sheet",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sheetname": [
                    "Optional[str]"
                ]
            }
        }
    },
    "mailmerger-master/domain/models/sources/__init__.py": {},
    "mailmerger-master/infra/__init__.py": {},
    "mailmerger-master/infra/emailer/__init__.py": {},
    "mailmerger-master/infra/excepts/codes.py": {},
    "mailmerger-master/infra/excepts/types.py": {
        "ApplicationException.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "infra.excepts.codes.ErrorCodesInfo"
                ],
                "detail": [
                    "Optional[str]"
                ]
            }
        },
        "ApplicationException.error_code": {
            "name": "error_code",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApplicationException.error_message": {
            "name": "error_message",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApplicationException.detail": {
            "name": "detail",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FilePathNotFound.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "infra.excepts.codes.ErrorCodesInfo"
                ],
                "detail": [
                    "Optional[str]"
                ],
                "path": [
                    "Optional[str]"
                ]
            }
        },
        "FilePathNotFound.path": {
            "name": "path",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileFormatError.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "infra.excepts.codes.ErrorCodesInfo"
                ],
                "detail": [
                    "Optional[str]"
                ],
                "path": [
                    "Optional[str]"
                ]
            }
        },
        "FileFormatError.path": {
            "name": "path",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FileContentNotExist.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "infra.excepts.codes.ErrorCodesInfo"
                ],
                "detail": [
                    "Optional[str]"
                ]
            }
        },
        "MergedContentFailed.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": [
                    "infra.excepts.codes.ErrorCodesInfo"
                ],
                "detail": [
                    "Optional[str]"
                ]
            }
        }
    },
    "mailmerger-master/infra/excepts/__init__.py": {},
    "mailmerger-master/infra/logging/factory.py": {
        "LoggerFactory.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoggerFactory.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoggerFactory.show_loggers": {
            "name": "show_loggers",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LoggerFactory._set_formatter": {
            "name": "_set_formatter",
            "location": 31,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "source": [
                    "_T0"
                ],
                "level": [],
                "format": []
            }
        },
        "LoggerFactory._check_extension": {
            "name": "_check_extension",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "LoggerFactory._check_logging_path_dir": {
            "name": "_check_logging_path_dir",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "content": [
                    "dict"
                ]
            }
        },
        "LoggerFactory.load_config": {
            "name": "load_config",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "LoggerFactory.get_logger": {
            "name": "get_logger",
            "location": 80,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "LoggerFactory.make_console": {
            "name": "make_console",
            "location": 83,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "level": [],
                "format": []
            }
        },
        "LoggerFactory.make_file": {
            "name": "make_file",
            "location": 92,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "filepath": [],
                "level": [],
                "format": []
            }
        },
        "LoggerFactory.make_rotating_file": {
            "name": "make_rotating_file",
            "location": 100,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "filepath": [],
                "level": [],
                "format": [],
                "max_bytes": [],
                "backup_count": []
            }
        },
        "LoggerFactory.make_time_rotating_file": {
            "name": "make_time_rotating_file",
            "location": 143,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "filepath": [],
                "level": [],
                "format": [],
                "backup_count": [],
                "when": [],
                "interval": []
            }
        }
    },
    "mailmerger-master/infra/logging/loader.py": {
        "YamlLoader.load": {
            "name": "load",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "JsonLoader.load": {
            "name": "load",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "path": []
            }
        }
    },
    "mailmerger-master/infra/logging/__init__.py": {},
    "mailmerger-master/infra/path/searcher.py": {
        "FilePathSearcher.exist": {
            "name": "exist",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "path": [
                    "str"
                ]
            }
        },
        "FilePathSearcher.fullpath": {
            "name": "fullpath",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "path": [
                    "str"
                ]
            }
        }
    },
    "mailmerger-master/infra/path/__init__.py": {},
    "mailmerger-master/infra/writer/html.py": {
        "HtmlWriter.write": {
            "name": "write",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "filename": [
                    "str"
                ],
                "src": [
                    "str"
                ]
            }
        }
    },
    "mailmerger-master/infra/writer/pdf.py": {
        "PDFWriter.write": {
            "name": "write",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "filename": [
                    "str"
                ],
                "src": [
                    "str"
                ]
            }
        }
    },
    "mailmerger-master/infra/writer/__init__.py": {
        "IWriter.write": {
            "name": "write",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "filename": [
                    "str"
                ],
                "src": [
                    "str"
                ]
            }
        }
    },
    "mailmerger-master/settings/base.py": {},
    "mailmerger-master/settings/dev.py": {},
    "mailmerger-master/settings/prod.py": {},
    "mailmerger-master/settings/__init__.py": {},
    "mailmerger-master/tests/config.py": {},
    "mailmerger-master/tests/conftest.py": {
        "logger": {
            "name": "logger",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "find_sheet_path": {
            "name": "find_sheet_path",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "find_email_template_path": {
            "name": "find_email_template_path",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "find_sheet_path._find_sheet_path": {
            "name": "_find_sheet_path",
            "location": 32,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "find_email_template_path._find_email_template_path": {
            "name": "_find_email_template_path",
            "location": 48,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "mailmerger-master/tests/__init__.py": {},
    "mailmerger-master/tests/apps/__init__.py": {},
    "mailmerger-master/tests/apps/services/test_source_parsing.py": {
        "cn_header_sheet_path": {
            "name": "cn_header_sheet_path",
            "location": 10,
            "return": [],
            "arguments": {
                "find_sheet_path": []
            }
        },
        "TestPreMergeSourceParsingService.test_parsing_excel_result_correct": {
            "name": "test_parsing_excel_result_correct",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "cn_header_sheet_path": [
                    "str"
                ]
            }
        },
        "TestPreMergeSourceParsingService.test_parsing_excel_result_header_data_not_correct": {
            "name": "test_parsing_excel_result_header_data_not_correct",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "cn_header_sheet_path": [
                    "str"
                ]
            }
        },
        "TestPreMergeSourceParsingService.test_parsing_excel_result_header_order_not_correct": {
            "name": "test_parsing_excel_result_header_order_not_correct",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "cn_header_sheet_path": [
                    "str"
                ]
            }
        },
        "TestPreMergeSourceParsingService.test_parsing_excel_result_row_data_not_correct": {
            "name": "test_parsing_excel_result_row_data_not_correct",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "cn_header_sheet_path": [
                    "str"
                ]
            }
        },
        "TestPreMergeSourceParsingService.test_parsing_excel_result_row_order_not_correct": {
            "name": "test_parsing_excel_result_row_order_not_correct",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "cn_header_sheet_path": [
                    "str"
                ]
            }
        }
    },
    "mailmerger-master/tests/apps/services/__init__.py": {},
    "mailmerger-master/tests/domain/test_excel.py": {
        "TestExcelSheetParser.test_file_is_excel_format_and_exist": {
            "name": "test_file_is_excel_format_and_exist",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "find_sheet_path": [
                    "Callable[([str], str)]"
                ]
            }
        },
        "TestExcelSheetParser.test_file_not_exist": {
            "name": "test_file_not_exist",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "find_sheet_path": [
                    "Callable[([str], str)]"
                ]
            }
        },
        "TestExcelSheetParser.test_file_not_excel_format": {
            "name": "test_file_not_excel_format",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "find_sheet_path": [
                    "Callable[([str], str)]"
                ]
            }
        },
        "TestExcelSheetParser.test_read_default_datasheet_correct": {
            "name": "test_read_default_datasheet_correct",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "sheet_filename": [],
                "expected": [],
                "logger": [],
                "find_sheet_path": []
            }
        },
        "TestExcelSheetParser.test_read_default_datasheet_data_not_correct": {
            "name": "test_read_default_datasheet_data_not_correct",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "find_sheet_path": [
                    "Callable[([str], str)]"
                ]
            }
        },
        "TestExcelSheetParser.test_read_default_datasheet_order_not_correct": {
            "name": "test_read_default_datasheet_order_not_correct",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "find_sheet_path": [
                    "Callable[([str], str)]"
                ]
            }
        },
        "TestExcelSheetParser.test_read_sepcific_non_exist_sheetname": {
            "name": "test_read_sepcific_non_exist_sheetname",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "logger": [
                    "logging.Logger"
                ],
                "find_sheet_path": [
                    "Callable[([str], str)]"
                ]
            }
        }
    },
    "mailmerger-master/tests/domain/__init__.py": {}
}
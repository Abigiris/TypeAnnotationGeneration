{
    "mathtools-main/setup.py": {},
    "mathtools-main/mathtools/combinatorics.py": {
        "recurrence": {
            "name": "recurrence",
            "location": 9,
            "return": [
                "generator"
            ],
            "arguments": {
                "start": [],
                "func": []
            }
        },
        "fibonacci_numbers": {
            "name": "fibonacci_numbers",
            "location": 31,
            "return": [
                "generator"
            ],
            "arguments": {}
        },
        "binomial_coefficient": {
            "name": "binomial_coefficient",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "n": [],
                "k": []
            }
        }
    },
    "mathtools-main/mathtools/functional.py": {
        "_is_iterable": {
            "name": "_is_iterable",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "x": []
            }
        },
        "identity": {
            "name": "identity",
            "location": 9,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "x": [
                    "_T0@@"
                ]
            }
        },
        "compose": {
            "name": "compose",
            "location": 13,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [],
                "g": []
            }
        },
        "tuple_params": {
            "name": "tuple_params",
            "location": 26,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "f": []
            }
        },
        "_map_with_args": {
            "name": "_map_with_args",
            "location": 32,
            "return": [
                "Iterator[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "f": [],
                "args": []
            }
        },
        "argmin": {
            "name": "argmin",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "f": [],
                "args": []
            }
        },
        "argmax": {
            "name": "argmax",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "f": [],
                "args": []
            }
        },
        "tuple_params.tupled_f": {
            "name": "tupled_f",
            "location": 28,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "mathtools-main/mathtools/iterable.py": {
        "take": {
            "name": "take",
            "location": 6,
            "return": [
                "list"
            ],
            "arguments": {
                "n": [],
                "iterable": []
            }
        },
        "unzip": {
            "name": "unzip",
            "location": 10,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "tuples": []
            }
        }
    },
    "mathtools-main/mathtools/number_theory.py": {
        "assert_natural": {
            "name": "assert_natural",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "n": []
            }
        },
        "divides": {
            "name": "divides",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "even": {
            "name": "even",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "n": []
            }
        },
        "odd": {
            "name": "odd",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "n": []
            }
        },
        "factor_pairs": {
            "name": "factor_pairs",
            "location": 22,
            "return": [
                "List[Tuple[(int, Any)]]"
            ],
            "arguments": {
                "n": []
            }
        },
        "factors": {
            "name": "factors",
            "location": 27,
            "return": [
                "list"
            ],
            "arguments": {
                "n": []
            }
        },
        "proper_divisors": {
            "name": "proper_divisors",
            "location": 31,
            "return": [
                "list"
            ],
            "arguments": {
                "n": []
            }
        },
        "is_prime": {
            "name": "is_prime",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "n": []
            }
        },
        "_prime_factorization": {
            "name": "_prime_factorization",
            "location": 39,
            "return": [
                "list"
            ],
            "arguments": {
                "n": []
            }
        },
        "prime_factorization": {
            "name": "prime_factorization",
            "location": 46,
            "return": [
                "list"
            ],
            "arguments": {
                "n": []
            }
        },
        "eratosthenes": {
            "name": "eratosthenes",
            "location": 60,
            "return": [
                "List[int]"
            ],
            "arguments": {
                "n": []
            }
        },
        "lcm": {
            "name": "lcm",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "a": [],
                "b": []
            }
        }
    },
    "mathtools-main/mathtools/__init__.py": {
        "product": {
            "name": "product",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "xs": []
            }
        }
    },
    "mathtools-main/tests/test_combinatorics.py": {
        "test_recurrence": {
            "name": "test_recurrence",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_binomial_coefficient": {
            "name": "test_binomial_coefficient",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_recurrence.plus1": {
            "name": "plus1",
            "location": 11,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "test_recurrence.concat": {
            "name": "concat",
            "location": 18,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "z": []
            }
        }
    },
    "mathtools-main/tests/test_functional.py": {
        "f": {
            "name": "f",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": [],
                "y": [],
                "z": []
            }
        },
        "test_argmax": {
            "name": "test_argmax",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_argmin": {
            "name": "test_argmin",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mathtools-main/tests/test_iterable.py": {
        "test_take": {
            "name": "test_take",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unzip": {
            "name": "test_unzip",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mathtools-main/tests/test_mathtools.py": {
        "test_product": {
            "name": "test_product",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mathtools-main/tests/test_number_theory.py": {
        "test_divides": {
            "name": "test_divides",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_even_odd": {
            "name": "test_even_odd",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_is_prime": {
            "name": "test_is_prime",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_factors": {
            "name": "test_factors",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_prime_factorization": {
            "name": "test_prime_factorization",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lcm": {
            "name": "test_lcm",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mathtools-main/tests/__init__.py": {}
}
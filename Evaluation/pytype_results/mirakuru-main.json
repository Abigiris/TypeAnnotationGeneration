{
    "mirakuru-main/setup.py": {},
    "mirakuru-main/src/mirakuru/base.py": {
        "cleanup_subprocesses": {
            "name": "cleanup_subprocesses",
            "location": 74,
            "return": [],
            "arguments": {}
        },
        "SimpleExecutor.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [],
                "cwd": [],
                "shell": [],
                "timeout": [],
                "sleep": [],
                "stop_signal": [],
                "kill_signal": [],
                "expected_returncode": [],
                "envvars": [],
                "stdin": [],
                "stdout": [],
                "stderr": []
            }
        },
        "SimpleExecutor.__enter__": {
            "name": "__enter__",
            "location": 174,
            "return": [
                "_TSimpleExecutor@@SimpleExecutor@@"
            ],
            "arguments": {
                "self": [
                    "_TSimpleExecutor@@SimpleExecutor@@"
                ]
            }
        },
        "SimpleExecutor.__exit__": {
            "name": "__exit__",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_value": [
                    "Optional[BaseException]"
                ],
                "traceback": []
            }
        },
        "SimpleExecutor.running": {
            "name": "running",
            "location": 192,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor._popen_kwargs": {
            "name": "_popen_kwargs",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.start": {
            "name": "start",
            "location": 249,
            "return": [
                "_TSimpleExecutor@@SimpleExecutor@@"
            ],
            "arguments": {
                "self": [
                    "_TSimpleExecutor@@SimpleExecutor@@"
                ]
            }
        },
        "SimpleExecutor._set_timeout": {
            "name": "_set_timeout",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor._clear_process": {
            "name": "_clear_process",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor._kill_all_kids": {
            "name": "_kill_all_kids",
            "location": 284,
            "return": [
                "set"
            ],
            "arguments": {
                "self": [],
                "sig": []
            }
        },
        "SimpleExecutor.stop": {
            "name": "stop",
            "location": 311,
            "return": [
                "_TSimpleExecutor@@SimpleExecutor@@"
            ],
            "arguments": {
                "self": [
                    "_TSimpleExecutor@@SimpleExecutor@@"
                ],
                "stop_signal": [],
                "expected_returncode": []
            }
        },
        "SimpleExecutor.stopped": {
            "name": "stopped",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.kill": {
            "name": "kill",
            "location": 394,
            "return": [
                "_TSimpleExecutor@@SimpleExecutor@@"
            ],
            "arguments": {
                "self": [
                    "_TSimpleExecutor@@SimpleExecutor@@"
                ],
                "wait": [],
                "sig": []
            }
        },
        "SimpleExecutor.output": {
            "name": "output",
            "location": 418,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.err_output": {
            "name": "err_output",
            "location": 424,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.wait_for": {
            "name": "wait_for",
            "location": 430,
            "return": [
                "_TSimpleExecutor@@SimpleExecutor@@"
            ],
            "arguments": {
                "self": [
                    "_TSimpleExecutor@@SimpleExecutor@@"
                ],
                "wait_for": []
            }
        },
        "SimpleExecutor.check_timeout": {
            "name": "check_timeout",
            "location": 452,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.__del__": {
            "name": "__del__",
            "location": 466,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.__repr__": {
            "name": "__repr__",
            "location": 481,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.__str__": {
            "name": "__str__",
            "location": 490,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Executor.pre_start_check": {
            "name": "pre_start_check",
            "location": 500,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Executor.start": {
            "name": "start",
            "location": 510,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Executor.check_subprocess": {
            "name": "check_subprocess",
            "location": 528,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Executor.after_start_check": {
            "name": "after_start_check",
            "location": 550,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimpleExecutor.stop.process_stopped": {
            "name": "process_stopped",
            "location": 347,
            "return": [],
            "arguments": {}
        }
    },
    "mirakuru-main/src/mirakuru/base_env.py": {
        "processes_with_env_psutil": {
            "name": "processes_with_env_psutil",
            "location": 39,
            "return": [
                "set"
            ],
            "arguments": {
                "env_name": [],
                "env_value": []
            }
        },
        "processes_with_env_ps": {
            "name": "processes_with_env_ps",
            "location": 67,
            "return": [
                "Set[int]"
            ],
            "arguments": {
                "env_name": [],
                "env_value": []
            }
        }
    },
    "mirakuru-main/src/mirakuru/compat.py": {},
    "mirakuru-main/src/mirakuru/exceptions.py": {
        "ExecutorError.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "executor": []
            }
        },
        "TimeoutExpired.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "executor": [],
                "timeout": []
            }
        },
        "TimeoutExpired.__str__": {
            "name": "__str__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlreadyRunning.__str__": {
            "name": "__str__",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessExitedWithError.__init__": {
            "name": "__init__",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "executor": [],
                "exit_code": []
            }
        },
        "ProcessExitedWithError.__str__": {
            "name": "__str__",
            "location": 100,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mirakuru-main/src/mirakuru/http.py": {
        "HTTPExecutor.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [],
                "url": [],
                "status": [],
                "method": [],
                "payload": [],
                "headers": []
            }
        },
        "HTTPExecutor.after_start_check": {
            "name": "after_start_check",
            "location": 95,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mirakuru-main/src/mirakuru/output.py": {
        "OutputExecutor.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [],
                "banner": []
            }
        },
        "OutputExecutor.start": {
            "name": "start",
            "location": 65,
            "return": [
                "_TOutputExecutor@@OutputExecutor@@"
            ],
            "arguments": {
                "self": [
                    "_TOutputExecutor@@OutputExecutor@@"
                ]
            }
        },
        "OutputExecutor._wait_for_darwin_output": {
            "name": "_wait_for_darwin_output",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutputExecutor._wait_for_output": {
            "name": "_wait_for_output",
            "location": 139,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutputExecutor.start.await_for_output": {
            "name": "await_for_output",
            "location": 102,
            "return": [],
            "arguments": {}
        }
    },
    "mirakuru-main/src/mirakuru/pid.py": {
        "PidExecutor.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [],
                "filename": []
            }
        },
        "PidExecutor.pre_start_check": {
            "name": "pre_start_check",
            "location": 66,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PidExecutor.after_start_check": {
            "name": "after_start_check",
            "location": 77,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mirakuru-main/src/mirakuru/tcp.py": {
        "TCPExecutor.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [],
                "host": [],
                "port": []
            }
        },
        "TCPExecutor.pre_start_check": {
            "name": "pre_start_check",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TCPExecutor.after_start_check": {
            "name": "after_start_check",
            "location": 82,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mirakuru-main/src/mirakuru/unixsocket.py": {
        "UnixSocketExecutor.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [],
                "socket_name": []
            }
        },
        "UnixSocketExecutor.pre_start_check": {
            "name": "pre_start_check",
            "location": 59,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnixSocketExecutor.after_start_check": {
            "name": "after_start_check",
            "location": 79,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mirakuru-main/src/mirakuru/__init__.py": {},
    "mirakuru-main/tests/retry.py": {
        "retry": {
            "name": "retry",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "func": [],
                "timeout": [],
                "possible_exception": []
            }
        }
    },
    "mirakuru-main/tests/sample_daemon.py": {},
    "mirakuru-main/tests/server_for_tests.py": {
        "SlowServerHandler.do_GET": {
            "name": "do_GET",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowServerHandler.do_HEAD": {
            "name": "do_HEAD",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowServerHandler.timeout_status": {
            "name": "timeout_status",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowServerHandler.count_timeout": {
            "name": "count_timeout",
            "location": 61,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowGetServerHandler.do_GET": {
            "name": "do_GET",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowGetServerHandler.do_HEAD": {
            "name": "do_HEAD",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowPostServerHandler.do_POST": {
            "name": "do_POST",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowPostServerHandler.do_HEAD": {
            "name": "do_HEAD",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowPostKeyServerHandler.do_POST": {
            "name": "do_POST",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SlowPostKeyServerHandler.do_HEAD": {
            "name": "do_HEAD",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mirakuru-main/tests/signals.py": {
        "block_signals": {
            "name": "block_signals",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "block_signals.sighandler": {
            "name": "sighandler",
            "location": 15,
            "return": [],
            "arguments": {
                "signum": [],
                "_": []
            }
        }
    },
    "mirakuru-main/tests/test_base.py": {
        "test_importing_mirakuru": {
            "name": "test_importing_mirakuru",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/unixsocketserver_for_tests.py": {},
    "mirakuru-main/tests/__init__.py": {
        "ps_aux": {
            "name": "ps_aux",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/executors/test_executor.py": {
        "test_running_process": {
            "name": "test_running_process",
            "location": 24,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "test_command": {
            "name": "test_command",
            "location": 38,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "test_custom_signal_stop": {
            "name": "test_custom_signal_stop",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_stop_custom_signal_stop": {
            "name": "test_stop_custom_signal_stop",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_stop_custom_exit_signal_stop": {
            "name": "test_stop_custom_exit_signal_stop",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_stop_custom_exit_signal_context": {
            "name": "test_stop_custom_exit_signal_context",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_running_context": {
            "name": "test_running_context",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_executor_in_context_only": {
            "name": "test_executor_in_context_only",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_context_stopped": {
            "name": "test_context_stopped",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_process_output": {
            "name": "test_process_output",
            "location": 117,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "test_process_output_shell": {
            "name": "test_process_output_shell",
            "location": 127,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "test_start_check_executor": {
            "name": "test_start_check_executor",
            "location": 136,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_stopping_not_yet_running_executor": {
            "name": "test_stopping_not_yet_running_executor",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_forgotten_stop": {
            "name": "test_forgotten_stop",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_executor_raises_if_process_exits_with_error": {
            "name": "test_executor_raises_if_process_exits_with_error",
            "location": 187,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_executor_ignores_processes_exiting_with_0": {
            "name": "test_executor_ignores_processes_exiting_with_0",
            "location": 218,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_executor_methods_returning_self": {
            "name": "test_executor_methods_returning_self",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mirakuru_cleanup": {
            "name": "test_mirakuru_cleanup",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/executors/test_executor_kill.py": {
        "test_custom_signal_kill": {
            "name": "test_custom_signal_kill",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_kill_custom_signal_kill": {
            "name": "test_kill_custom_signal_kill",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_already_closed": {
            "name": "test_already_closed",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_daemons_killing": {
            "name": "test_daemons_killing",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_stopping_brutally": {
            "name": "test_stopping_brutally",
            "location": 79,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_stopping_children_of_stopped_process": {
            "name": "test_stopping_children_of_stopped_process",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_stopping_children_of_stopped_process.raise_os_error": {
            "name": "raise_os_error",
            "location": 112,
            "return": [],
            "arguments": {}
        },
        "test_stopping_children_of_stopped_process.processes_with_env_mock": {
            "name": "processes_with_env_mock",
            "location": 118,
            "return": [],
            "arguments": {}
        },
        "test_already_closed.process_stopped": {
            "name": "process_stopped",
            "location": 49,
            "return": [],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/executors/test_http_executor.py": {
        "connect_to_server": {
            "name": "connect_to_server",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_executor_starts_and_waits": {
            "name": "test_executor_starts_and_waits",
            "location": 37,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_shell_started_server_stops": {
            "name": "test_shell_started_server_stops",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_slow_method_server_starting": {
            "name": "test_slow_method_server_starting",
            "location": 74,
            "return": [],
            "arguments": {
                "method": []
            }
        },
        "test_slow_post_payload_server_starting": {
            "name": "test_slow_post_payload_server_starting",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_slow_method_server_timed_out": {
            "name": "test_slow_method_server_timed_out",
            "location": 118,
            "return": [],
            "arguments": {
                "method": []
            }
        },
        "test_fail_if_other_running": {
            "name": "test_fail_if_other_running",
            "location": 135,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_default_port": {
            "name": "test_default_port",
            "location": 160,
            "return": [],
            "arguments": {}
        },
        "test_http_status_codes": {
            "name": "test_http_status_codes",
            "location": 193,
            "return": [],
            "arguments": {
                "accepted_status": [],
                "expected_timeout": []
            }
        }
    },
    "mirakuru-main/tests/executors/test_output_executor.py": {
        "test_executor_waits_for_process_output": {
            "name": "test_executor_waits_for_process_output",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_executor_waits_for_process_err_output": {
            "name": "test_executor_waits_for_process_err_output",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_executor_dont_start": {
            "name": "test_executor_dont_start",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/executors/test_pid_executor.py": {
        "run_around_tests": {
            "name": "run_around_tests",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_start_and_wait": {
            "name": "test_start_and_wait",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_empty_filename": {
            "name": "test_empty_filename",
            "location": 48,
            "return": [],
            "arguments": {
                "pid_file": []
            }
        },
        "test_if_file_created": {
            "name": "test_if_file_created",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_timeout_error": {
            "name": "test_timeout_error",
            "location": 62,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_fail_if_other_executor_running": {
            "name": "test_fail_if_other_executor_running",
            "location": 72,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/executors/test_tcp_executor.py": {
        "test_start_and_wait": {
            "name": "test_start_and_wait",
            "location": 24,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "caplog": []
            }
        },
        "test_repr_and_str": {
            "name": "test_repr_and_str",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_raises_error_on_timeout": {
            "name": "test_it_raises_error_on_timeout",
            "location": 41,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_fail_if_other_executor_running": {
            "name": "test_fail_if_other_executor_running",
            "location": 52,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/executors/test_unixsocket_executor.py": {
        "test_start_and_wait": {
            "name": "test_start_and_wait",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_start_and_timeout": {
            "name": "test_start_and_timeout",
            "location": 29,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "mirakuru-main/tests/executors/__init__.py": {}
}
{
    "moa-python-master/dependencies.py": {},
    "moa-python-master/setup.py": {},
    "moa-python-master/utils.py": {
        "setup_logger": {
            "name": "setup_logger",
            "location": 10,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "name": [],
                "level": []
            }
        },
        "setup_java_gateway": {
            "name": "setup_java_gateway",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "imports": []
            }
        }
    },
    "moa-python-master/cluster/denstream.py": {
        "DenStreamWithDBSCAN.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dimensions": [],
                "window_range": [],
                "epsilon": [],
                "beta": [],
                "mu": [],
                "number_intialization_points": [],
                "offline_multiplier": [],
                "lambda_": [],
                "processing_speed": []
            }
        },
        "DenStreamWithDBSCAN.window_range": {
            "name": "window_range",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.epsilon": {
            "name": "epsilon",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.beta": {
            "name": "beta",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.mu": {
            "name": "mu",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.number_intialization_points": {
            "name": "number_intialization_points",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.offline_multiplier": {
            "name": "offline_multiplier",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.lambda_": {
            "name": "lambda_",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.processing_speed": {
            "name": "processing_speed",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.labels_": {
            "name": "labels_",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN._generate_header": {
            "name": "_generate_header",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN._initialize_clusterer": {
            "name": "_initialize_clusterer",
            "location": 149,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN._create_instance": {
            "name": "_create_instance",
            "location": 167,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "vector": []
            }
        },
        "DenStreamWithDBSCAN.transform": {
            "name": "transform",
            "location": 180,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "DenStreamWithDBSCAN.partial_fit": {
            "name": "partial_fit",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "X": []
            }
        },
        "DenStreamWithDBSCAN.fit": {
            "name": "fit",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "X": []
            }
        },
        "DenStreamWithDBSCAN.fit_predict": {
            "name": "fit_predict",
            "location": 204,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "y": []
            }
        },
        "DenStreamWithDBSCAN.get_clustering_result": {
            "name": "get_clustering_result",
            "location": 214,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "moa-python-master/cluster/__init__.py": {}
}
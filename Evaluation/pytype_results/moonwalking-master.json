{
    "moonwalking-master/setup.py": {
        "read": {
            "name": "read",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "name": []
            }
        },
        "requirements": {
            "name": "requirements",
            "location": 15,
            "return": [
                "Tuple[(List[str], List[str])]"
            ],
            "arguments": {
                "name": []
            }
        }
    },
    "moonwalking-master/moonwalking/main.py": {
        "Dummycoin.validate_addr": {
            "name": "validate_addr",
            "location": 53,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "_T0"
                ]
            }
        },
        "Dummycoin.create_addr": {
            "name": "create_addr",
            "location": 57,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dummycoin.sign_tx": {
            "name": "sign_tx",
            "location": 93,
            "return": [
                "_T1"
            ],
            "arguments": {
                "self": [],
                "priv": [],
                "tx": [
                    "_T1"
                ]
            }
        },
        "Bitcoin.validate_addr": {
            "name": "validate_addr",
            "location": 108,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "_T0"
                ]
            }
        },
        "Litecoin.validate_addr": {
            "name": "validate_addr",
            "location": 133,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "_T0"
                ]
            }
        },
        "BitcoinCash.validate_addr": {
            "name": "validate_addr",
            "location": 152,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "BitcoinCash.sign_tx": {
            "name": "sign_tx",
            "location": 192,
            "return": [
                "_T1"
            ],
            "arguments": {
                "self": [],
                "priv": [],
                "tx": [
                    "_T1"
                ]
            }
        },
        "BitcoinCash.create_addr": {
            "name": "create_addr",
            "location": 205,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitcoinCash.calc_fee": {
            "name": "calc_fee",
            "location": 210,
            "return": [
                "Any"
            ],
            "arguments": {
                "n_in": [],
                "n_out": []
            }
        },
        "BitcoinCash.to_legacy_address": {
            "name": "to_legacy_address",
            "location": 241,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "BitcoinCash.normalize_decimal": {
            "name": "normalize_decimal",
            "location": 245,
            "return": [
                "Any"
            ],
            "arguments": {
                "d": []
            }
        }
    },
    "moonwalking-master/moonwalking/settings.py": {},
    "moonwalking-master/moonwalking/testing.py": {
        "private_key_to_checksum_address": {
            "name": "private_key_to_checksum_address",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "key": []
            }
        }
    },
    "moonwalking-master/moonwalking/utils.py": {
        "rand_str": {
            "name": "rand_str",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "n": []
            }
        }
    },
    "moonwalking-master/moonwalking/wallets.py": {
        "block": {
            "name": "block",
            "location": 4,
            "return": [
                "moonwalking.blocks.base.BaseBlock"
            ],
            "arguments": {
                "currency": []
            }
        },
        "validate_addr": {
            "name": "validate_addr",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "currency": [],
                "addr": []
            }
        },
        "create_addr": {
            "name": "create_addr",
            "location": 15,
            "return": [
                "Coroutine[(Any, Any, Tuple[(str, str)])]"
            ],
            "arguments": {
                "currency": []
            }
        }
    },
    "moonwalking-master/moonwalking/__init__.py": {},
    "moonwalking-master/moonwalking/blocks/base.py": {
        "BlockBaseError.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BaseBlock.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "BaseBlock.register": {
            "name": "register",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "BaseBlock.validate_addr": {
            "name": "validate_addr",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "str"
                ]
            }
        },
        "BaseBlock.sign_tx": {
            "name": "sign_tx",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "priv": [],
                "tx": []
            }
        }
    },
    "moonwalking-master/moonwalking/blocks/bitcoin_generic.py": {
        "to_string": {
            "name": "to_string",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "v": []
            }
        },
        "BitcoinGeneric.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitcoinGeneric.get_data": {
            "name": "get_data",
            "location": 39,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "BitcoinGeneric.create_addr": {
            "name": "create_addr",
            "location": 53,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BitcoinGeneric.calc_fee": {
            "name": "calc_fee",
            "location": 89,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "self": [],
                "tx": []
            }
        },
        "BitcoinGeneric.calculate_tx_size": {
            "name": "calculate_tx_size",
            "location": 93,
            "return": [
                "int"
            ],
            "arguments": {
                "tx": []
            }
        },
        "BitcoinGeneric.sign_tx": {
            "name": "sign_tx",
            "location": 174,
            "return": [
                "_T1"
            ],
            "arguments": {
                "self": [],
                "priv": [],
                "tx": [
                    "_T1"
                ]
            }
        }
    },
    "moonwalking-master/moonwalking/blocks/ccyhelper.py": {
        "CcyHelper.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ccy": [],
                "use_testnet": []
            }
        },
        "CcyHelper.validate_addr": {
            "name": "validate_addr",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "CcyHelper.validate_btc": {
            "name": "validate_btc",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "CcyHelper.validate_ltc": {
            "name": "validate_ltc",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "CcyHelper.validate_eth": {
            "name": "validate_eth",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "addr": []
            }
        },
        "CcyHelper.validate_bch": {
            "name": "validate_bch",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "addr": []
            }
        },
        "CcyHelper.validate_lnd": {
            "name": "validate_lnd",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "addr": []
            }
        }
    },
    "moonwalking-master/moonwalking/blocks/eth_generic.py": {
        "EthereumGeneric.get_data": {
            "name": "get_data",
            "location": 33,
            "return": [
                "Dict[(str, Union[(list, str, _T0)])]"
            ],
            "arguments": {
                "self": [],
                "method": [
                    "_T0"
                ]
            }
        },
        "EthereumGeneric.make_lnd_transfer_data": {
            "name": "make_lnd_transfer_data",
            "location": 89,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr_to": [],
                "amount": []
            }
        },
        "EthereumGeneric.validate_addr": {
            "name": "validate_addr",
            "location": 108,
            "return": [
                "Optional[_T0]"
            ],
            "arguments": {
                "self": [],
                "addr": [
                    "_T0"
                ]
            }
        },
        "EthereumGeneric.create_addr": {
            "name": "create_addr",
            "location": 112,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "EthereumGeneric.get_contract_addr": {
            "name": "get_contract_addr",
            "location": 117,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "EthereumGeneric.get_method_hash": {
            "name": "get_method_hash",
            "location": 123,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "EthereumGeneric.get_addr_hash": {
            "name": "get_addr_hash",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "addr": []
            }
        },
        "EthereumGeneric.get_amount_hash": {
            "name": "get_amount_hash",
            "location": 135,
            "return": [
                "str"
            ],
            "arguments": {
                "num": []
            }
        },
        "EthereumGeneric.get_method_signature": {
            "name": "get_method_signature",
            "location": 139,
            "return": [
                "str"
            ],
            "arguments": {
                "method_name": []
            }
        },
        "EthereumGeneric.sign_tx": {
            "name": "sign_tx",
            "location": 189,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "priv": [],
                "tx": []
            }
        }
    },
    "moonwalking-master/moonwalking/blocks/exc.py": {
        "BlockBaseError.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "moonwalking-master/moonwalking/blocks/fee.py": {
        "FeeStation.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "currency": []
            }
        }
    },
    "moonwalking-master/moonwalking/blocks/__init__.py": {
        "get": {
            "name": "get",
            "location": 4,
            "return": [
                "moonwalking.blocks.base.BaseBlock"
            ],
            "arguments": {
                "ccy": [
                    "str"
                ]
            }
        }
    },
    "moonwalking-master/tests/conftest.py": {
        "loop": {
            "name": "loop",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "moonwalking-master/tests/test_bch.py": {
        "test_create_addr": {
            "name": "test_create_addr",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "fee_mocker": []
            }
        }
    },
    "moonwalking-master/tests/test_btc.py": {
        "test_create_addr": {
            "name": "test_create_addr",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "fee_mocker": []
            }
        }
    },
    "moonwalking-master/tests/test_btc_mainnet.py": {},
    "moonwalking-master/tests/test_ccyhelper.py": {
        "test_ccyhelper": {
            "name": "test_ccyhelper",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "moonwalking-master/tests/test_eth.py": {
        "test_create_addr": {
            "name": "test_create_addr",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "moonwalking-master/tests/test_eth_mainnet.py": {},
    "moonwalking-master/tests/test_lnd.py": {},
    "moonwalking-master/tests/test_lnd_mainnet.py": {},
    "moonwalking-master/tests/test_ltc.py": {},
    "moonwalking-master/tests/test_ltc_mainnet.py": {},
    "moonwalking-master/tests/__init__.py": {}
}
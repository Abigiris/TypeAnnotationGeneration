{
    "mossbot-master/conftest.py": {
        "config": {
            "name": "config",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "db": {
            "name": "db",
            "location": 27,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "matrix_handler": {
            "name": "matrix_handler",
            "location": 32,
            "return": [],
            "arguments": {
                "config": [],
                "monkeypatch": [],
                "tmpdir": []
            }
        },
        "room": {
            "name": "room",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "gif_image": {
            "name": "gif_image",
            "location": 51,
            "return": [],
            "arguments": {}
        }
    },
    "mossbot-master/deploy.py": {},
    "mossbot-master/mossbot.py": {
        "get_db": {
            "name": "get_db",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_giphy_reaction_url": {
            "name": "get_giphy_reaction_url",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "api_key": [],
                "term": []
            }
        },
        "get_image": {
            "name": "get_image",
            "location": 90,
            "return": [
                "Optional[Dict[(str, Optional[Union[(int, str, io.BytesIO)]])]]"
            ],
            "arguments": {
                "url": []
            }
        },
        "ping": {
            "name": "ping",
            "location": 197,
            "return": [
                "MSG_RETURN"
            ],
            "arguments": {
                "route": [],
                "msg": [],
                "event": []
            }
        },
        "image": {
            "name": "image",
            "location": 209,
            "return": [
                "MSG_RETURN"
            ],
            "arguments": {
                "route": [],
                "msg": [],
                "event": []
            }
        },
        "url_title": {
            "name": "url_title",
            "location": 225,
            "return": [
                "MSG_RETURN"
            ],
            "arguments": {
                "route": [],
                "msg": [],
                "event": []
            }
        },
        "reaction": {
            "name": "reaction",
            "location": 249,
            "return": [
                "MSG_RETURN"
            ],
            "arguments": {
                "route": [],
                "msg": [],
                "event": []
            }
        },
        "replace": {
            "name": "replace",
            "location": 273,
            "return": [
                "MSG_RETURN"
            ],
            "arguments": {
                "route": [],
                "msg": [],
                "event": []
            }
        },
        "weather": {
            "name": "weather",
            "location": 315,
            "return": [
                "MSG_RETURN"
            ],
            "arguments": {
                "route": [],
                "msg": [],
                "event": []
            }
        },
        "main": {
            "name": "main",
            "location": 607,
            "return": [],
            "arguments": {
                "config": [],
                "debug": []
            }
        },
        "MossBot.__init__": {
            "name": "__init__",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MossBot.route": {
            "name": "route",
            "location": 142,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "self": [],
                "route": []
            }
        },
        "MossBot.serve": {
            "name": "serve",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "MatrixHandler.__init__": {
            "name": "__init__",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "MatrixHandler.on_message": {
            "name": "on_message",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "room": [],
                "event": []
            }
        },
        "MatrixHandler.on_invite": {
            "name": "on_invite",
            "location": 442,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "room_id": [],
                "state": []
            }
        },
        "MatrixHandler.listen_forever": {
            "name": "listen_forever",
            "location": 447,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "timeout_ms": []
            }
        },
        "MatrixHandler.start_listener_process": {
            "name": "start_listener_process",
            "location": 460,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout_ms": []
            }
        },
        "MatrixHandler.connect": {
            "name": "connect",
            "location": 469,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "MatrixHandler.write_media": {
            "name": "write_media",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "media_type": [],
                "room": [],
                "url": []
            }
        },
        "MatrixHandler.store_msg": {
            "name": "store_msg",
            "location": 564,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "MossBot.route.decorator": {
            "name": "decorator",
            "location": 145,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "mossbot-master/test_mossbot.py": {
        "test_serve": {
            "name": "test_serve",
            "location": 16,
            "return": [],
            "arguments": {
                "input": [],
                "expected": []
            }
        },
        "test_ping": {
            "name": "test_ping",
            "location": 48,
            "return": [],
            "arguments": {
                "input": [],
                "expected": []
            }
        },
        "test_url_title": {
            "name": "test_url_title",
            "location": 64,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "route": [],
                "html": [],
                "expected": []
            }
        },
        "test_url_title_exception": {
            "name": "test_url_title_exception",
            "location": 72,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "logger_mock": []
            }
        },
        "test_url_exception": {
            "name": "test_url_exception",
            "location": 83,
            "return": [],
            "arguments": {
                "requests_mock": []
            }
        },
        "test_image": {
            "name": "test_image",
            "location": 99,
            "return": [],
            "arguments": {
                "route": [],
                "expected": []
            }
        },
        "test_reaction": {
            "name": "test_reaction",
            "location": 131,
            "return": [],
            "arguments": {
                "get_giphy_reaction_url_mock": [],
                "logger_mock": [],
                "event": [],
                "gif_url": [],
                "expected": []
            }
        },
        "test_reaction_exception": {
            "name": "test_reaction_exception",
            "location": 163,
            "return": [],
            "arguments": {
                "get_giphy_reaction_url_mock": [],
                "logger_mock": [],
                "event": [],
                "gif_url": [],
                "expected": []
            }
        },
        "test_on_message_nothing": {
            "name": "test_on_message_nothing",
            "location": 179,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "store_msg_mock": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_on_message_no_msg": {
            "name": "test_on_message_no_msg",
            "location": 196,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "logger_mock": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_on_message_image": {
            "name": "test_on_message_image",
            "location": 215,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "write_media_mock": [],
                "store_msg_mock": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_on_message_reaction": {
            "name": "test_on_message_reaction",
            "location": 248,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "write_media_mock": [],
                "store_msg_mock": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_get_giphy_reaction_url": {
            "name": "test_get_giphy_reaction_url",
            "location": 319,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "response": [],
                "expected": []
            }
        },
        "test_get_giphy_reaction_url_exception": {
            "name": "test_get_giphy_reaction_url_exception",
            "location": 336,
            "return": [],
            "arguments": {
                "requests_mock": []
            }
        },
        "test_on_message_text": {
            "name": "test_on_message_text",
            "location": 344,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "store_msg_mock": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_on_message_notice": {
            "name": "test_on_message_notice",
            "location": 369,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "store_msg_mock": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_on_message_html": {
            "name": "test_on_message_html",
            "location": 394,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "store_msg_mock": [],
                "matrix_handler": []
            }
        },
        "test_on_message_skip": {
            "name": "test_on_message_skip",
            "location": 425,
            "return": [],
            "arguments": {
                "moss_mock": [],
                "store_msg_mock": [],
                "write_media_mock": [],
                "logger_mock": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_write_media": {
            "name": "test_write_media",
            "location": 478,
            "return": [],
            "arguments": {
                "get_image_mock": [],
                "image_data": [],
                "config": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_write_media_no_image_data": {
            "name": "test_write_media_no_image_data",
            "location": 511,
            "return": [],
            "arguments": {
                "get_image_mock": [],
                "logger_mock": [],
                "config": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_write_media_not_image": {
            "name": "test_write_media_not_image",
            "location": 530,
            "return": [],
            "arguments": {
                "logger_mock": [],
                "config": [],
                "matrix_handler": [],
                "room": []
            }
        },
        "test_get_image_200": {
            "name": "test_get_image_200",
            "location": 547,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "image_mock": [],
                "logger_mock": [],
                "bytesio_mock": []
            }
        },
        "test_get_image_wrong_status_code": {
            "name": "test_get_image_wrong_status_code",
            "location": 583,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "image_mock": [],
                "logger_mock": []
            }
        },
        "test_get_image_exception": {
            "name": "test_get_image_exception",
            "location": 596,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "logger_mock": []
            }
        },
        "test_store_msg": {
            "name": "test_store_msg",
            "location": 722,
            "return": [],
            "arguments": {
                "event": [],
                "db_prefill": [],
                "db_all": [],
                "matrix_handler": []
            }
        },
        "test_store_msg_exception": {
            "name": "test_store_msg_exception",
            "location": 737,
            "return": [],
            "arguments": {
                "db_mock": [],
                "logger_mock": [],
                "matrix_handler": []
            }
        },
        "test_replace": {
            "name": "test_replace",
            "location": 807,
            "return": [],
            "arguments": {
                "get_db_mock": [],
                "db": [],
                "event": [],
                "db_prefill": [],
                "expected": []
            }
        },
        "test_replace_exception": {
            "name": "test_replace_exception",
            "location": 819,
            "return": [],
            "arguments": {
                "get_db_mock": [],
                "logger_mock": []
            }
        },
        "test_get_db": {
            "name": "test_get_db",
            "location": 836,
            "return": [],
            "arguments": {
                "tinydb_mock": []
            }
        },
        "test_weather": {
            "name": "test_weather",
            "location": 875,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "return_data": [],
                "expected": [],
                "config": []
            }
        },
        "test_weather_exception": {
            "name": "test_weather_exception",
            "location": 893,
            "return": [],
            "arguments": {
                "requests_mock": [],
                "logger_mock": [],
                "config": []
            }
        },
        "test_serve.servetest": {
            "name": "servetest",
            "location": 23,
            "return": [],
            "arguments": {
                "route": [],
                "msg": [],
                "event": []
            }
        }
    }
}
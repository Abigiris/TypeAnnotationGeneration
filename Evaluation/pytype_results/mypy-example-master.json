{
    "mypy-example-master/mypy_example/examples.py": {
        "func_with_optional": {
            "name": "func_with_optional",
            "location": 31,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "opt": [
                    "Optional[str]"
                ]
            }
        },
        "add_to_banana": {
            "name": "add_to_banana",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "to_add": [
                    "str"
                ]
            }
        },
        "some_func": {
            "name": "some_func",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "num": [
                    "int"
                ]
            }
        },
        "fib": {
            "name": "fib",
            "location": 59,
            "return": [
                "Iterator[int]"
            ],
            "arguments": {
                "n": [
                    "int"
                ]
            }
        },
        "foo": {
            "name": "foo",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "a": [
                    "str"
                ]
            }
        },
        "Person.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "age": [
                    "int"
                ]
            }
        },
        "Person.rename": {
            "name": "rename",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new": [
                    "str"
                ]
            }
        },
        "Person.describe": {
            "name": "describe",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "mypy-example-master/mypy_example/fancier_examples.py": {
        "complex_dict_consumer": {
            "name": "complex_dict_consumer",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "jawn": [
                    "Optional[Dict[(str, List[Dict[(str, Union[(int, List[int])])]])]]"
                ]
            }
        }
    },
    "mypy-example-master/mypy_example/nltk_examples.py": {},
    "mypy-example-master/mypy_example/__init__.py": {},
    "mypy-example-master/stubs/nltk.py": {
        "word_tokenize": {
            "name": "word_tokenize",
            "location": 4,
            "return": [],
            "arguments": {
                "text": [],
                "language": [],
                "preserve_line": []
            }
        },
        "pos_tag": {
            "name": "pos_tag",
            "location": 7,
            "return": [],
            "arguments": {
                "tokens": [],
                "tagset": [],
                "lang": []
            }
        }
    }
}
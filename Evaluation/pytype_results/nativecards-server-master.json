{
    "nativecards-server-master/conftest.py": {
        "django_db_setup": {
            "name": "django_db_setup",
            "location": 12,
            "return": [],
            "arguments": {
                "django_db_setup": [],
                "django_db_blocker": []
            }
        },
        "admin": {
            "name": "admin",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "user": {
            "name": "user",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "nativecards-server-master/manage.py": {},
    "nativecards-server-master/setup.py": {},
    "nativecards-server-master/cards/admin.py": {
        "AttemptInlineAdmin.get_queryset": {
            "name": "get_queryset",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "CardAdmin.get_form": {
            "name": "get_form",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "change": []
            }
        }
    },
    "nativecards-server-master/cards/apps.py": {},
    "nativecards-server-master/cards/filters.py": {},
    "nativecards-server-master/cards/managers.py": {
        "CardManager.get_random_words": {
            "name": "get_random_words",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "limit": []
            }
        },
        "CardManager.select_random_words": {
            "name": "select_random_words",
            "location": 38,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "words": [],
                "additional": [],
                "limit": []
            }
        },
        "CardManager.get_lesson_new_cards": {
            "name": "get_lesson_new_cards",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "is_latest": [],
                "user": [],
                "deck_id": [],
                "category": [],
                "complete_lte": [],
                "complete_gte": [],
                "ordering": []
            }
        },
        "CardManager.get_lesson_learned_cards": {
            "name": "get_lesson_learned_cards",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "AttemptManager.get_statistics": {
            "name": "get_statistics",
            "location": 113,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "DeckManager.filter_default": {
            "name": "filter_default",
            "location": 177,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "exclude_pk": []
            }
        },
        "DeckManager.get_default": {
            "name": "get_default",
            "location": 187,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "DeckManager.create_default": {
            "name": "create_default",
            "location": 197,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        }
    },
    "nativecards-server-master/cards/models.py": {
        "ImageMixin.get_remote_image": {
            "name": "get_remote_image",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Deck._reset_decks_default_value": {
            "name": "_reset_decks_default_value",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Deck.save": {
            "name": "save",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Card._limit_complete": {
            "name": "_limit_complete",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Card._set_default_deck": {
            "name": "_set_default_deck",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Card.save": {
            "name": "save",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Card.__str__": {
            "name": "__str__",
            "location": 166,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Attempt._set_score": {
            "name": "_set_score",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Attempt.save": {
            "name": "save",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Attempt.__str__": {
            "name": "__str__",
            "location": 231,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/cards/serializers.py": {
        "UserSerializerMixin.filter_field": {
            "name": "filter_field",
            "location": 13,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "fields": [
                    "_T0@@"
                ],
                "key": [],
                "model": []
            }
        },
        "CardSerializer.get_fields": {
            "name": "get_fields",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LessonCardSerializer.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AttemptSerializer.get_fields": {
            "name": "get_fields",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/cards/urls.py": {},
    "nativecards-server-master/cards/views.py": {
        "DeckViewSet.get_query_to_filter": {
            "name": "get_query_to_filter",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CardViewSet.get_serializer_class": {
            "name": "get_serializer_class",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CardViewSet.get_query_to_filter": {
            "name": "get_query_to_filter",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CardViewSet.images": {
            "name": "images",
            "location": 65,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "CardViewSet.translation": {
            "name": "translation",
            "location": 74,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "CardViewSet.synonyms": {
            "name": "synonyms",
            "location": 86,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "CardViewSet.definition": {
            "name": "definition",
            "location": 95,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "CardViewSet.lesson": {
            "name": "lesson",
            "location": 103,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AttemptViewSet.get_query_to_filter": {
            "name": "get_query_to_filter",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AttemptViewSet.statistics": {
            "name": "statistics",
            "location": 131,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "nativecards-server-master/cards/__init__.py": {},
    "nativecards-server-master/cards/lesson/generator.py": {
        "LessonGenerator.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LessonGenerator._set_filter_params_from_query": {
            "name": "_set_filter_params_from_query",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LessonGenerator._get_attempt_forms": {
            "name": "_get_attempt_forms",
            "location": 44,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "LessonGenerator._get_cards": {
            "name": "_get_cards",
            "location": 53,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "LessonGenerator._get_cards_with_choices_and_attempt_form": {
            "name": "_get_cards_with_choices_and_attempt_form",
            "location": 73,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "cards": []
            }
        },
        "LessonGenerator.get_lesson_cards": {
            "name": "get_lesson_cards",
            "location": 89,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/cards/lesson/score.py": {
        "calc_score": {
            "name": "calc_score",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "attempt": []
            }
        }
    },
    "nativecards-server-master/cards/lesson/__init__.py": {},
    "nativecards-server-master/cards/migrations/0001_initial.py": {},
    "nativecards-server-master/cards/migrations/0002_auto_20180819_1154.py": {},
    "nativecards-server-master/cards/migrations/0003_auto_20180820_1043.py": {},
    "nativecards-server-master/cards/migrations/0004_auto_20180821_0721.py": {},
    "nativecards-server-master/cards/migrations/0005_auto_20180821_0851.py": {},
    "nativecards-server-master/cards/migrations/0006_auto_20180821_1229.py": {},
    "nativecards-server-master/cards/migrations/0007_auto_20180822_1315.py": {},
    "nativecards-server-master/cards/migrations/0008_auto_20180822_1322.py": {},
    "nativecards-server-master/cards/migrations/0009_auto_20180907_1435.py": {},
    "nativecards-server-master/cards/migrations/0010_auto_20180910_1134.py": {},
    "nativecards-server-master/cards/migrations/0011_auto_20181001_0738.py": {},
    "nativecards-server-master/cards/migrations/0012_auto_20181003_0902.py": {},
    "nativecards-server-master/cards/migrations/0013_auto_20181003_0917.py": {},
    "nativecards-server-master/cards/migrations/0014_auto_20181003_0931.py": {
        "prepare": {
            "name": "prepare",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "nativecards-server-master/cards/migrations/0015_auto_20181003_0939.py": {
        "get_deck": {
            "name": "get_deck",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "nativecards-server-master/cards/migrations/0016_auto_20181003_0948.py": {},
    "nativecards-server-master/cards/migrations/0017_auto_20181011_1003.py": {},
    "nativecards-server-master/cards/migrations/0018_attempt_hints_count.py": {},
    "nativecards-server-master/cards/migrations/0019_auto_20191203_1144.py": {},
    "nativecards-server-master/cards/migrations/0020_auto_20191204_1111.py": {},
    "nativecards-server-master/cards/migrations/__init__.py": {},
    "nativecards-server-master/cards/test/test_admin.py": {
        "test_card_admin_audio": {
            "name": "test_card_admin_audio",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_card_admin_form": {
            "name": "test_card_admin_form",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        }
    },
    "nativecards-server-master/cards/test/test_attempts.py": {
        "test_attempt_score_calcultaion": {
            "name": "test_attempt_score_calcultaion",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_attempts_list_by_user": {
            "name": "test_attempts_list_by_user",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_attempts_list_by_admin": {
            "name": "test_attempts_list_by_admin",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_attempts_create_by_admin": {
            "name": "test_attempts_create_by_admin",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_attempts_statistics_user": {
            "name": "test_attempts_statistics_user",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_attempts_statistics_admin": {
            "name": "test_attempts_statistics_admin",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "admin": []
            }
        }
    },
    "nativecards-server-master/cards/test/test_cards.py": {
        "test_cards_get_random_words": {
            "name": "test_cards_get_random_words",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": []
            }
        },
        "test_cards_guess_and_set_category": {
            "name": "test_cards_guess_and_set_category",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": []
            }
        },
        "test_cards_default_deck": {
            "name": "test_cards_default_deck",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": []
            }
        },
        "test_cards_limit_complete_deck": {
            "name": "test_cards_limit_complete_deck",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": []
            }
        },
        "test_cards_list_by_user": {
            "name": "test_cards_list_by_user",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cards_list_by_admin": {
            "name": "test_cards_list_by_admin",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_list_word_starts_with": {
            "name": "test_cards_list_word_starts_with",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "admin": []
            }
        },
        "test_cards_list_filter_by_admin": {
            "name": "test_cards_list_filter_by_admin",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_display_by_user": {
            "name": "test_cards_display_by_user",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cards_display_by_admin": {
            "name": "test_cards_display_by_admin",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_display_another_user_by_admin": {
            "name": "test_cards_display_another_user_by_admin",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_create_by_admin": {
            "name": "test_cards_create_by_admin",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_images_by_user": {
            "name": "test_cards_images_by_user",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cards_images_by_admin": {
            "name": "test_cards_images_by_admin",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "mocker": []
            }
        },
        "test_cards_translation_by_user": {
            "name": "test_cards_translation_by_user",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cards_translation_by_admin": {
            "name": "test_cards_translation_by_admin",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "admin": []
            }
        },
        "test_cards_synonyms_by_user": {
            "name": "test_cards_synonyms_by_user",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cards_synonyms_by_admin": {
            "name": "test_cards_synonyms_by_admin",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "mocker": []
            }
        },
        "test_cards_definition_by_user": {
            "name": "test_cards_definition_by_user",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cards_definition_by_admin": {
            "name": "test_cards_definition_by_admin",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "mocker": []
            }
        },
        "test_cards_lesson_by_user": {
            "name": "test_cards_lesson_by_user",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_cards_lesson_ordered": {
            "name": "test_cards_lesson_ordered",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "admin": []
            }
        },
        "test_cards_lesson_complete_gte": {
            "name": "test_cards_lesson_complete_gte",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_lesson_complete_lte": {
            "name": "test_cards_lesson_complete_lte",
            "location": 395,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_lesson_category": {
            "name": "test_cards_lesson_category",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "admin": []
            }
        },
        "test_cards_lesson_latest_days": {
            "name": "test_cards_lesson_latest_days",
            "location": 424,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "admin": []
            }
        },
        "test_cards_lesson_by_admin": {
            "name": "test_cards_lesson_by_admin",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_cards_lesson_not_include_completed_cards": {
            "name": "test_cards_lesson_not_include_completed_cards",
            "location": 467,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": [],
                "admin": []
            }
        }
    },
    "nativecards-server-master/cards/test/test_decks.py": {
        "test_deck_is_default_filter": {
            "name": "test_deck_is_default_filter",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": [],
                "user": []
            }
        },
        "test_deck_is_default_get": {
            "name": "test_deck_is_default_get",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": [],
                "user": []
            }
        },
        "test_deck_is_default_change": {
            "name": "test_deck_is_default_change",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": [],
                "user": []
            }
        },
        "test_deck_get_remote_image": {
            "name": "test_deck_get_remote_image",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "admin": []
            }
        },
        "test_decks_list_by_user": {
            "name": "test_decks_list_by_user",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_decks_list_by_admin": {
            "name": "test_decks_list_by_admin",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_decks_display_by_user": {
            "name": "test_decks_display_by_user",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_decks_display_by_admin": {
            "name": "test_decks_display_by_admin",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_decks_display_another_user_by_admin": {
            "name": "test_decks_display_another_user_by_admin",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_decks_create_by_admin": {
            "name": "test_decks_create_by_admin",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "DeckTestCase.test_deck_api_cache": {
            "name": "test_deck_api_cache",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/cards/test/__init__.py": {},
    "nativecards-server-master/nativecards/admin.py": {
        "ShowAllInlineAdminMixin.get_formset": {
            "name": "get_formset",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ShowAllInlineAdminMixin.all": {
            "name": "all",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SettingsAdminForm.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SettingsAdminForm.clean": {
            "name": "clean",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SettingsAdmin.get_form": {
            "name": "get_form",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "change": []
            }
        },
        "SettingsAdmin.get_form.ModelFormMetaClass.__new__": {
            "name": "__new__",
            "location": 97,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "nativecards-server-master/nativecards/apps.py": {
        "NativecardsConfig.ready": {
            "name": "ready",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/celery_app.py": {},
    "nativecards-server-master/nativecards/fields.py": {
        "LanguageField.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/managers.py": {
        "SettingsManager.get_by_user": {
            "name": "get_by_user",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "SettingsManager.update_by_user": {
            "name": "update_by_user",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        }
    },
    "nativecards-server-master/nativecards/middleware.py": {
        "DisableAdminI18nMiddleware.process_request": {
            "name": "process_request",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "WhodidMiddleware.process_request": {
            "name": "process_request",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "WhodidMiddleware.process_response": {
            "name": "process_response",
            "location": 50,
            "return": [
                "_T1@@"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "response": [
                    "_T1@@"
                ]
            }
        },
        "WhodidMiddleware.mark_whodid": {
            "name": "mark_whodid",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "sender": [],
                "instance": []
            }
        }
    },
    "nativecards-server-master/nativecards/models.py": {
        "CommonInfo.__str__": {
            "name": "__str__",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings.attempts_per_day": {
            "name": "attempts_per_day",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Settings.__str__": {
            "name": "__str__",
            "location": 115,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/pagination.py": {},
    "nativecards-server-master/nativecards/permissions.py": {},
    "nativecards-server-master/nativecards/routers.py": {
        "DefaultRouter.extend": {
            "name": "extend",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/serializers.py": {},
    "nativecards-server-master/nativecards/signals.py": {
        "_clear_cache": {
            "name": "_clear_cache",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "instance": []
            }
        },
        "settings_post_save": {
            "name": "settings_post_save",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "cached_model_post_save": {
            "name": "cached_model_post_save",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "cached_model_pre_delete": {
            "name": "cached_model_pre_delete",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "nativecards-server-master/nativecards/urls.py": {},
    "nativecards-server-master/nativecards/views.py": {
        "SettingsViewSet.get_query_to_filter": {
            "name": "get_query_to_filter",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SettingsViewSet.get": {
            "name": "get",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SettingsViewSet.save": {
            "name": "save",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "nativecards-server-master/nativecards/viewsets.py": {
        "UserFilterViewSetMixin.get_query_to_filter": {
            "name": "get_query_to_filter",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserFilterViewSetMixin.filter_by_user": {
            "name": "filter_by_user",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "UserFilterViewSetMixin.get_queryset": {
            "name": "get_queryset",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/wsgi.py": {},
    "nativecards-server-master/nativecards/__init__.py": {},
    "nativecards-server-master/nativecards/lib/audio.py": {
        "get_audio_filename": {
            "name": "get_audio_filename",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "word": [],
                "ext": []
            }
        },
        "get_audio_url": {
            "name": "get_audio_url",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "filename": []
            }
        },
        "check_audio_path": {
            "name": "check_audio_path",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "filename": []
            }
        },
        "get_audio": {
            "name": "get_audio",
            "location": 39,
            "return": [],
            "arguments": {
                "word": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/cache.py": {
        "save_result": {
            "name": "save_result",
            "location": 12,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "path": []
            }
        },
        "cache_result": {
            "name": "cache_result",
            "location": 37,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "key": []
            }
        },
        "save_result.save_decorator": {
            "name": "save_decorator",
            "location": 16,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "cache_result.cache_decorator": {
            "name": "cache_decorator",
            "location": 42,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "save_result.save_decorator.func_wrapper": {
            "name": "func_wrapper",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "cache_result.cache_decorator.func_wrapper": {
            "name": "func_wrapper",
            "location": 44,
            "return": [],
            "arguments": {}
        }
    },
    "nativecards-server-master/nativecards/lib/dictionary.py": {
        "get_definition": {
            "name": "get_definition",
            "location": 43,
            "return": [],
            "arguments": {
                "word": []
            }
        },
        "guess_category": {
            "name": "guess_category",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "word": []
            }
        },
        "DictionaryManager.word_query": {
            "name": "word_query",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DictionaryManager.is_result_valid": {
            "name": "is_result_valid",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "result": []
            }
        },
        "DictionaryManager.process_result": {
            "name": "process_result",
            "location": 33,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "_T0@@"
                ]
            }
        }
    },
    "nativecards-server-master/nativecards/lib/pixabay.py": {
        "get_images": {
            "name": "get_images",
            "location": 13,
            "return": [],
            "arguments": {
                "word": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/settings.py": {
        "get_chain": {
            "name": "get_chain",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "key": []
            }
        },
        "get_instances": {
            "name": "get_instances",
            "location": 65,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "key": []
            }
        },
        "get": {
            "name": "get",
            "location": 76,
            "return": [
                "Any"
            ],
            "arguments": {
                "key": [],
                "user": []
            }
        },
        "clear_mermory_cache": {
            "name": "clear_mermory_cache",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "Chain.get_result": {
            "name": "get_result",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Chain.check": {
            "name": "check",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Chain.handle": {
            "name": "handle",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/synonyms.py": {
        "get_synonyms": {
            "name": "get_synonyms",
            "location": 64,
            "return": [],
            "arguments": {
                "word": []
            }
        },
        "BigHugeThesaurus.get_result": {
            "name": "get_result",
            "location": 25,
            "return": [
                "Optional[nativecards.lib.dicts.models.DictionaryEntry]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BigHugeThesaurus.get_result.get": {
            "name": "get",
            "location": 34,
            "return": [],
            "arguments": {
                "entry": [],
                "key": [],
                "name": [],
                "keys": [],
                "part_of_speach": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/trans.py": {
        "translate": {
            "name": "translate",
            "location": 135,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "word": [],
                "language": []
            }
        },
        "Translate.supported_languages": {
            "name": "supported_languages",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Translate.check": {
            "name": "check",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "GoogleTrans.get_result": {
            "name": "get_result",
            "location": 49,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Lingualeo.get_result": {
            "name": "get_result",
            "location": 67,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "TranaslationManager._get_from_word": {
            "name": "_get_from_word",
            "location": 89,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TranaslationManager._save_to_word": {
            "name": "_save_to_word",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "translation": []
            }
        },
        "TranaslationManager._get_from_translator": {
            "name": "_get_from_translator",
            "location": 108,
            "return": [
                "Optional[Dict[(str, str)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TranaslationManager.translate": {
            "name": "translate",
            "location": 122,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/__init__.py": {},
    "nativecards-server-master/nativecards/lib/dicts/free_dictionary.py": {
        "FreeDictionary._get_definition_and_examples": {
            "name": "_get_definition_and_examples",
            "location": 21,
            "return": [
                "Optional[nativecards.lib.dicts.models.DictionaryEntry]"
            ],
            "arguments": {
                "soup": []
            }
        },
        "FreeDictionary.get_result": {
            "name": "get_result",
            "location": 49,
            "return": [
                "Optional[nativecards.lib.dicts.models.DictionaryEntry]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/dicts/models.py": {
        "manager_runner": {
            "name": "manager_runner",
            "location": 169,
            "return": [
                "Any"
            ],
            "arguments": {
                "word": [],
                "manager_cls": []
            }
        },
        "DictionaryEntry.add_data_entry": {
            "name": "add_data_entry",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "value": [],
                "part_of_speach": []
            }
        },
        "DictionaryEntry.process_data": {
            "name": "process_data",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DictionaryEntry._clean_data": {
            "name": "_clean_data",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DictionaryEntry.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "definition": [],
                "examples": [],
                "pronunciation": [],
                "transcription": [],
                "synonyms": [],
                "antonyms": []
            }
        },
        "BaseManager.settings_key": {
            "name": "settings_key",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseManager.word_fields": {
            "name": "word_fields",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseManager.word_query": {
            "name": "word_query",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseManager.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "BaseManager._get_from_word": {
            "name": "_get_from_word",
            "location": 117,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseManager._save_to_word": {
            "name": "_save_to_word",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": []
            }
        },
        "BaseManager.get_entry": {
            "name": "get_entry",
            "location": 132,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseManager.is_result_valid": {
            "name": "is_result_valid",
            "location": 141,
            "return": [
                "bool"
            ],
            "arguments": {
                "result": []
            }
        },
        "BaseManager.process_result": {
            "name": "process_result",
            "location": 147,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "_T0@@"
                ]
            }
        },
        "BaseManager._get_from_dictionary": {
            "name": "_get_from_dictionary",
            "location": 154,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/dicts/webster_learners.py": {
        "WebsterLearners._get_audio": {
            "name": "_get_audio",
            "location": 30,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "tree": []
            }
        },
        "WebsterLearners._get_definition": {
            "name": "_get_definition",
            "location": 46,
            "return": [
                "_T1@@"
            ],
            "arguments": {
                "tree": [],
                "entry": [
                    "_T1@@"
                ]
            }
        },
        "WebsterLearners._get_phrasal_verb_definition": {
            "name": "_get_phrasal_verb_definition",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "root": []
            }
        },
        "WebsterLearners._get_phrasal_verb_examples": {
            "name": "_get_phrasal_verb_examples",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "root": []
            }
        },
        "WebsterLearners._get_transcription": {
            "name": "_get_transcription",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "tree": []
            }
        },
        "WebsterLearners._get_examples": {
            "name": "_get_examples",
            "location": 106,
            "return": [
                "_T1@@"
            ],
            "arguments": {
                "tree": [],
                "entry": [
                    "_T1@@"
                ]
            }
        },
        "WebsterLearners._save_audio": {
            "name": "_save_audio",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "audio": [],
                "word": []
            }
        },
        "WebsterLearners._get_word_info": {
            "name": "_get_word_info",
            "location": 143,
            "return": [
                "Optional[nativecards.lib.dicts.models.DictionaryEntry]"
            ],
            "arguments": {
                "self": [],
                "tree": [],
                "word": []
            }
        },
        "WebsterLearners._get_phrasal_verb_info": {
            "name": "_get_phrasal_verb_info",
            "location": 162,
            "return": [
                "Optional[nativecards.lib.dicts.models.DictionaryEntry]"
            ],
            "arguments": {
                "self": [],
                "tree": [],
                "word": []
            }
        },
        "WebsterLearners._make_request": {
            "name": "_make_request",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "WebsterLearners.get_result": {
            "name": "get_result",
            "location": 186,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/dicts/words_api.py": {
        "WordsApi._get_json": {
            "name": "_get_json",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "WordsApi._get_data": {
            "name": "_get_data",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "WordsApi._process_entry": {
            "name": "_process_entry",
            "location": 50,
            "return": [
                "_T1@@"
            ],
            "arguments": {
                "data": [],
                "entry": [
                    "_T1@@"
                ],
                "key": [],
                "part_of_speach": []
            }
        },
        "WordsApi.get_result": {
            "name": "get_result",
            "location": 65,
            "return": [
                "Optional[nativecards.lib.dicts.models.DictionaryEntry]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/dicts/__init__.py": {},
    "nativecards-server-master/nativecards/lib/messengers/mailer.py": {
        "mail_managers": {
            "name": "mail_managers",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "subject": [],
                "data": [],
                "template": []
            }
        },
        "mail_user": {
            "name": "mail_user",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "subject": [],
                "template": [],
                "data": [],
                "email": [],
                "user": []
            }
        }
    },
    "nativecards-server-master/nativecards/lib/messengers/__init__.py": {},
    "nativecards-server-master/nativecards/migrations/0001_initial.py": {},
    "nativecards-server-master/nativecards/migrations/0002_auto_20180824_1254.py": {},
    "nativecards-server-master/nativecards/migrations/0003_auto_20181001_0738.py": {},
    "nativecards-server-master/nativecards/migrations/0004_settings_play_audio_on_open.py": {},
    "nativecards-server-master/nativecards/migrations/0005_auto_20181003_1340.py": {},
    "nativecards-server-master/nativecards/migrations/0006_auto_20181003_1340.py": {},
    "nativecards-server-master/nativecards/migrations/0007_auto_20181011_0746.py": {},
    "nativecards-server-master/nativecards/migrations/0008_settings_lessons_per_day.py": {},
    "nativecards-server-master/nativecards/migrations/0009_auto_20181021_1509.py": {},
    "nativecards-server-master/nativecards/migrations/0010_auto_20181025_1243.py": {},
    "nativecards-server-master/nativecards/migrations/0011_auto_20191121_0917.py": {},
    "nativecards-server-master/nativecards/migrations/0012_settings_language.py": {},
    "nativecards-server-master/nativecards/migrations/0013_auto_20191218_1250.py": {},
    "nativecards-server-master/nativecards/migrations/__init__.py": {},
    "nativecards-server-master/nativecards/settings/custom.py": {},
    "nativecards-server-master/nativecards/settings/env.py": {},
    "nativecards-server-master/nativecards/settings/languages.py": {},
    "nativecards-server-master/nativecards/settings/main.py": {},
    "nativecards-server-master/nativecards/settings/__init__.py": {},
    "nativecards-server-master/nativecards/test/test_admin.py": {
        "test_settings_admin_form": {
            "name": "test_settings_admin_form",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/test_audio.py": {
        "test_get_word_definition": {
            "name": "test_get_word_definition",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_get_definition_errors": {
            "name": "test_get_definition_errors",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nativecards-server-master/nativecards/test/test_cache.py": {
        "test_save_result_decorator": {
            "name": "test_save_result_decorator",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "settings": []
            }
        },
        "test_cache_result_decorator": {
            "name": "test_cache_result_decorator",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_save_result_decorator.test_function": {
            "name": "test_function",
            "location": 22,
            "return": [],
            "arguments": {
                "arg": [],
                "word": []
            }
        },
        "test_cache_result_decorator.test_function": {
            "name": "test_function",
            "location": 43,
            "return": [],
            "arguments": {
                "arg": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/test_dictionary.py": {
        "test_webster_save_audio": {
            "name": "test_webster_save_audio",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_definition_errors_freedict": {
            "name": "test_get_definition_errors_freedict",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_get_word_definition_wordsapi": {
            "name": "test_get_word_definition_wordsapi",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": []
            }
        },
        "test_get_definition_errors_wordsapi": {
            "name": "test_get_definition_errors_wordsapi",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_get_word_definition_freedict": {
            "name": "test_get_word_definition_freedict",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_get_phrasal_word_definition_webster": {
            "name": "test_get_phrasal_word_definition_webster",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_get_word_definition_webster": {
            "name": "test_get_word_definition_webster",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_get_definition_errors_webster": {
            "name": "test_get_definition_errors_webster",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/test_messenger.py": {
        "test_mail_managers": {
            "name": "test_mail_managers",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "mailoutbox": []
            }
        },
        "test_mail_client_by_email": {
            "name": "test_mail_client_by_email",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "mailoutbox": []
            }
        },
        "test_mail_client_by_client": {
            "name": "test_mail_client_by_client",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "mailoutbox": []
            }
        },
        "test_mail_client_by_client.send": {
            "name": "send",
            "location": 45,
            "return": [],
            "arguments": {
                "user": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/test_pixabay.py": {
        "test_get_images": {
            "name": "test_get_images",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_get_images_errors": {
            "name": "test_get_images_errors",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/test_settings.py": {
        "test_settings_chain": {
            "name": "test_settings_chain",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_settings_get_chain": {
            "name": "test_settings_get_chain",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_settings_get_instances_errors": {
            "name": "test_settings_get_instances_errors",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_settings_get_instances": {
            "name": "test_settings_get_instances",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_settings_get_default": {
            "name": "test_settings_get_default",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_settings_get_by_user": {
            "name": "test_settings_get_by_user",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_settings_get_by_admin": {
            "name": "test_settings_get_by_admin",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_settings_update_by_admin": {
            "name": "test_settings_update_by_admin",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "CalcTestCase.test_calc_api_cache": {
            "name": "test_calc_api_cache",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/test_synonyms.py": {
        "test_get_synonyms_wordsapi": {
            "name": "test_get_synonyms_wordsapi",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": []
            }
        },
        "test_get_synonyms_bighuge": {
            "name": "test_get_synonyms_bighuge",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": [],
                "settings": []
            }
        },
        "test_get_synonyms_errors": {
            "name": "test_get_synonyms_errors",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/test_trans.py": {
        "test_translators_supported_languages": {
            "name": "test_translators_supported_languages",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_google_translate": {
            "name": "test_google_translate",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lingualeo_translate": {
            "name": "test_lingualeo_translate",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_translate": {
            "name": "test_translate",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        },
        "test_lingualeo_errors": {
            "name": "test_lingualeo_errors",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "mocker": []
            }
        }
    },
    "nativecards-server-master/nativecards/test/__init__.py": {},
    "nativecards-server-master/users/admin.py": {
        "UserAdmin.get_list_display": {
            "name": "get_list_display",
            "location": 26,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "requset": []
            }
        },
        "UserAdmin.is_verified": {
            "name": "is_verified",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj": []
            }
        }
    },
    "nativecards-server-master/users/apps.py": {
        "UsersConfig.ready": {
            "name": "ready",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/users/jwt.py": {
        "get_user_token": {
            "name": "get_user_token",
            "location": 10,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "nativecards-server-master/users/mailer.py": {
        "send_registration_email": {
            "name": "send_registration_email",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "nativecards-server-master/users/managers.py": {
        "ProfileManager.get_by_code": {
            "name": "get_by_code",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "code": []
            }
        },
        "ProfileManager.create_user": {
            "name": "create_user",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "email": [],
                "password": [],
                "language": []
            }
        }
    },
    "nativecards-server-master/users/models.py": {
        "Profile.__str__": {
            "name": "__str__",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/users/serializers.py": {
        "VerificationSerializer.validate": {
            "name": "validate",
            "location": 21,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "attrs": [
                    "_T0@@"
                ]
            }
        },
        "PasswordSerializer.validate": {
            "name": "validate",
            "location": 39,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "attrs": [
                    "_T0@@"
                ]
            }
        },
        "UserSerializer._validate_email": {
            "name": "_validate_email",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "email": []
            }
        },
        "UserSerializer._validate_password": {
            "name": "_validate_password",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "password": []
            }
        },
        "UserSerializer.validate": {
            "name": "validate",
            "location": 91,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "attrs": [
                    "_T0@@"
                ]
            }
        }
    },
    "nativecards-server-master/users/signals.py": {
        "user_post_save": {
            "name": "user_post_save",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "nativecards-server-master/users/urls.py": {},
    "nativecards-server-master/users/views.py": {
        "UsersViewSet.get_permissions": {
            "name": "get_permissions",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UsersViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UsersViewSet.get": {
            "name": "get",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "UsersViewSet.verification": {
            "name": "verification",
            "location": 44,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "UsersViewSet.password": {
            "name": "password",
            "location": 61,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "UsersViewSet.register": {
            "name": "register",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "nativecards-server-master/users/__init__.py": {},
    "nativecards-server-master/users/migrations/0001_initial.py": {},
    "nativecards-server-master/users/migrations/0002_profile_verification_code.py": {},
    "nativecards-server-master/users/migrations/0003_auto_20181106_1137.py": {},
    "nativecards-server-master/users/migrations/0004_auto_20191121_0917.py": {},
    "nativecards-server-master/users/migrations/__init__.py": {},
    "nativecards-server-master/users/test/test_users.py": {
        "test_default_deck_creation": {
            "name": "test_default_deck_creation",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_user_get_by_user": {
            "name": "test_user_get_by_user",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_user_get_by_admin": {
            "name": "test_user_get_by_admin",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_user_verification_by_user": {
            "name": "test_user_verification_by_user",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_user_change_password_by_user": {
            "name": "test_user_change_password_by_user",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_user_change_password_by_admin": {
            "name": "test_user_change_password_by_admin",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_user_register_by_user": {
            "name": "test_user_register_by_user",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "mailoutbox": []
            }
        },
        "test_admin_jwt_token": {
            "name": "test_admin_jwt_token",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "admin": []
            }
        },
        "test_user_admin_list_display": {
            "name": "test_user_admin_list_display",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "admin_client": []
            }
        },
        "test_user_register_by_user.post": {
            "name": "post",
            "location": 137,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "nativecards-server-master/users/test/__init__.py": {},
    "nativecards-server-master/words/admin.py": {
        "WordAudioMixin.audio": {
            "name": "audio",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj": []
            }
        }
    },
    "nativecards-server-master/words/apps.py": {},
    "nativecards-server-master/words/managers.py": {
        "WordManager.create_or_update": {
            "name": "create_or_update",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": [],
                "entry": [],
                "translation": [],
                "language": [],
                "synonyms": [],
                "antonyms": []
            }
        },
        "WordManager.get_with_definition": {
            "name": "get_with_definition",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "WordManager.get_with_synonyms": {
            "name": "get_with_synonyms",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": []
            }
        },
        "WordManager.get_with_translation": {
            "name": "get_with_translation",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "word": [],
                "language": []
            }
        }
    },
    "nativecards-server-master/words/models.py": {
        "BaseWord._guess_and_set_category": {
            "name": "_guess_and_set_category",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Word.save": {
            "name": "save",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nativecards-server-master/words/views.py": {},
    "nativecards-server-master/words/__init__.py": {},
    "nativecards-server-master/words/migrations/0001_initial.py": {},
    "nativecards-server-master/words/migrations/0002_word_translations.py": {},
    "nativecards-server-master/words/migrations/0003_auto_20191219_1034.py": {},
    "nativecards-server-master/words/migrations/0004_auto_20191219_1222.py": {},
    "nativecards-server-master/words/migrations/__init__.py": {},
    "nativecards-server-master/words/test/test_words.py": {
        "test_word_create_or_update": {
            "name": "test_word_create_or_update",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_word_guess_category": {
            "name": "test_word_guess_category",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nativecards-server-master/words/test/__init__.py": {}
}
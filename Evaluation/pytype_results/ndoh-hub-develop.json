{
    "ndoh-hub-develop/manage.py": {},
    "ndoh-hub-develop/setup.py": {},
    "ndoh-hub-develop/ada/admin.py": {},
    "ndoh-hub-develop/ada/apps.py": {},
    "ndoh-hub-develop/ada/models.py": {
        "RedirectUrl.my_counter": {
            "name": "my_counter",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedirectUrl.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedirectUrl.__str__": {
            "name": "__str__",
            "location": 29,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedirectUrlsEntry.__str__": {
            "name": "__str__",
            "location": 44,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaSelfAssessment.__str__": {
            "name": "__str__",
            "location": 67,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ada/serializers.py": {
        "AdaInputTypeSerializer.validate_value": {
            "name": "validate_value",
            "location": 13,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        },
        "AdaTextTypeSerializer.validate_value": {
            "name": "validate_value",
            "location": 72,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        },
        "StartAssessmentSerializer.validate_value": {
            "name": "validate_value",
            "location": 83,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        },
        "AdaChoiceTypeSerializer.validate_value": {
            "name": "validate_value",
            "location": 88,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0"
                ]
            }
        }
    },
    "ndoh-hub-develop/ada/tasks.py": {
        "start_prototype_survey_flow": {
            "name": "start_prototype_survey_flow",
            "location": 22,
            "return": [],
            "arguments": {
                "whatsappid": []
            }
        },
        "start_topup_flow": {
            "name": "start_topup_flow",
            "location": 39,
            "return": [],
            "arguments": {
                "whatsappid": []
            }
        },
        "post_to_topup_endpoint": {
            "name": "post_to_topup_endpoint",
            "location": 56,
            "return": [],
            "arguments": {
                "whatsappid": []
            }
        },
        "start_pdf_flow": {
            "name": "start_pdf_flow",
            "location": 73,
            "return": [],
            "arguments": {
                "msisdn": [],
                "pdf_media_id": []
            }
        }
    },
    "ndoh-hub-develop/ada/tests_models.py": {
        "TestAppModels.test_RedirectUrl": {
            "name": "test_RedirectUrl",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAppModels.test_RedirectUrlsEntry": {
            "name": "test_RedirectUrlsEntry",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ada/tests_urls.py": {
        "TestUrls.test_ada_hook_redirect_is_resolved": {
            "name": "test_ada_hook_redirect_is_resolved",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUrls.test_ada_hook_is_resolved": {
            "name": "test_ada_hook_is_resolved",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ada/tests_views.py": {
        "TestViews.test_whatsapp_url_error": {
            "name": "test_whatsapp_url_error",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_name_error": {
            "name": "test_name_error",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_no_whatsapp_value": {
            "name": "test_no_whatsapp_value",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_no_query_string": {
            "name": "test_no_query_string",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestViews.test_name_success": {
            "name": "test_name_success",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaHookViewTests.setUp": {
            "name": "setUp",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaHookViewTests.tearDown": {
            "name": "tearDown",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaHookViewTests.test_ada_hook_redirect_success": {
            "name": "test_ada_hook_redirect_success",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaHookViewTests.test_ada_hook_redirect_content": {
            "name": "test_ada_hook_redirect_content",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaHookViewTests.test_ada_hook_redirect_404": {
            "name": "test_ada_hook_redirect_404",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaHookViewTests.test_ada_hook_redirect_404_nameError": {
            "name": "test_ada_hook_redirect_404_nameError",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaSymptomCheckEndpointTests.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 111,
            "return": [],
            "arguments": {
                "self": [],
                "mock_start_rapidpro_flow": []
            }
        },
        "AdaSymptomCheckEndpointTests.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "mock_start_rapidpro_flow": []
            }
        },
        "AdaSymptomCheckEndpointTests.test_successful_flow_start": {
            "name": "test_successful_flow_start",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "mock_start_rapidpro_flow": []
            }
        },
        "AdaSymptomCheckEndpointTests.test_invalid_post_data": {
            "name": "test_invalid_post_data",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "mock_start_rapidpro_topup_flow": []
            }
        },
        "AdaSymptomCheckEndpointTests.test_successful_topup_flow_start": {
            "name": "test_successful_topup_flow_start",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "mock_start_rapidpro_topup_flow": []
            }
        },
        "AdaValidationViewTests.test_input_type": {
            "name": "test_input_type",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaValidationViewTests.test_input_type_error_string": {
            "name": "test_input_type_error_string",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaValidationViewTests.test_input_type_error_integer": {
            "name": "test_input_type_error_integer",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaValidationViewTests.test_input_type_error_regex": {
            "name": "test_input_type_error_regex",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaValidationViewTests.test_choice_type": {
            "name": "test_choice_type",
            "location": 424,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaValidationViewTests.test_text_type": {
            "name": "test_text_type",
            "location": 538,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StartAssessment.test_start_assessment": {
            "name": "test_start_assessment",
            "location": 613,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_endpoint": [],
                "mock_post_to_ada_start_assessment": [],
                "mock_post_to_ada": []
            }
        },
        "AdaAssessmentDialog.test_first_dialog": {
            "name": "test_first_dialog",
            "location": 748,
            "return": [],
            "arguments": {
                "self": [],
                "mock_post_to_ada_start_assessment": [],
                "mock_post_to_ada": []
            }
        },
        "AdaAssessmentDialog.test_next_dialog": {
            "name": "test_next_dialog",
            "location": 840,
            "return": [],
            "arguments": {
                "self": [],
                "mock_post_to_ada": []
            }
        },
        "AdaAssessmentDialog.test_roadblock": {
            "name": "test_roadblock",
            "location": 921,
            "return": [],
            "arguments": {
                "self": [],
                "mock_post_to_ada": []
            }
        },
        "AdaAssessmentReport.test_assessment_report": {
            "name": "test_assessment_report",
            "location": 1088,
            "return": [],
            "arguments": {
                "self": [],
                "mock_post_to_ada": [],
                "mock_pdf_ready": [],
                "mock_get_report": [],
                "mock_upload_turn_media": []
            }
        }
    },
    "ndoh-hub-develop/ada/test_tasks.py": {
        "HandleSubmitShatsappidToRapidpro.test_start_prototype_survey_flow": {
            "name": "test_start_prototype_survey_flow",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleSubmitShatsappidToRapidpro.test_start_topup_flow": {
            "name": "test_start_topup_flow",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleSubmitShatsappidToRapidpro.test_post_to_topup_endpoint": {
            "name": "test_post_to_topup_endpoint",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "mock_post": []
            }
        },
        "HandleSubmitShatsappidToRapidpro.test_start_pdf_flow": {
            "name": "test_start_pdf_flow",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ada/test_utils.py": {
        "TestQuestionsPayload.test_text_type_question": {
            "name": "test_text_type_question",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionsPayload.test_choice_type_question": {
            "name": "test_choice_type_question",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionsPayload.test_input_type_question": {
            "name": "test_input_type_question",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionsPayload.test_input_type_regex": {
            "name": "test_input_type_regex",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionsPayload.test_report_cardtype": {
            "name": "test_report_cardtype",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ada/urls.py": {},
    "ndoh-hub-develop/ada/utils.py": {
        "assessmentkeywords": {
            "name": "assessmentkeywords",
            "location": 17,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "inputTypeKeywords": {
            "name": "inputTypeKeywords",
            "location": 22,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "choiceTypeKeywords": {
            "name": "choiceTypeKeywords",
            "location": 27,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "get_max": {
            "name": "get_max",
            "location": 32,
            "return": [
                "Optional[Tuple[(Any, Any)]]"
            ],
            "arguments": {
                "payload": []
            }
        },
        "get_min": {
            "name": "get_min",
            "location": 41,
            "return": [
                "Optional[Tuple[(Any, Any, str)]]"
            ],
            "arguments": {
                "payload": []
            }
        },
        "build_rp_request": {
            "name": "build_rp_request",
            "location": 58,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "body": []
            }
        },
        "post_to_ada": {
            "name": "post_to_ada",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "body": [],
                "path": [],
                "contact_uuid": []
            }
        },
        "post_to_ada_start_assessment": {
            "name": "post_to_ada_start_assessment",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "body": [],
                "contact_uuid": []
            }
        },
        "format_message": {
            "name": "format_message",
            "location": 108,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "body": []
            }
        },
        "get_endpoint": {
            "name": "get_endpoint",
            "location": 214,
            "return": [
                "Any"
            ],
            "arguments": {
                "payload": []
            }
        },
        "encodeurl": {
            "name": "encodeurl",
            "location": 229,
            "return": [
                "Any"
            ],
            "arguments": {
                "payload": [],
                "url": []
            }
        },
        "get_path": {
            "name": "get_path",
            "location": 235,
            "return": [
                "Any"
            ],
            "arguments": {
                "body": []
            }
        },
        "get_step": {
            "name": "get_step",
            "location": 243,
            "return": [
                "Any"
            ],
            "arguments": {
                "body": []
            }
        },
        "pdf_ready": {
            "name": "pdf_ready",
            "location": 248,
            "return": [
                "bool"
            ],
            "arguments": {
                "data": []
            }
        },
        "pdf_resource": {
            "name": "pdf_resource",
            "location": 256,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": []
            }
        },
        "pdf_endpoint": {
            "name": "pdf_endpoint",
            "location": 264,
            "return": [
                "str"
            ],
            "arguments": {
                "data": []
            }
        },
        "get_report": {
            "name": "get_report",
            "location": 273,
            "return": [
                "bytes"
            ],
            "arguments": {
                "path": [],
                "contact_uuid": []
            }
        },
        "upload_turn_media": {
            "name": "upload_turn_media",
            "location": 282,
            "return": [
                "Any"
            ],
            "arguments": {
                "media": [],
                "content_type": []
            }
        },
        "previous_question": {
            "name": "previous_question",
            "location": 295,
            "return": [
                "Any"
            ],
            "arguments": {
                "body": [],
                "path": [],
                "contact_uuid": []
            }
        },
        "abort_assessment": {
            "name": "abort_assessment",
            "location": 305,
            "return": [
                "Any"
            ],
            "arguments": {
                "body": []
            }
        },
        "get_header": {
            "name": "get_header",
            "location": 317,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "contact_uuid": []
            }
        },
        "get_header_pdf": {
            "name": "get_header_pdf",
            "location": 327,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "contact_uuid": []
            }
        }
    },
    "ndoh-hub-develop/ada/validators.py": {
        "_phone_number": {
            "name": "_phone_number",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "value": [],
                "country": []
            }
        }
    },
    "ndoh-hub-develop/ada/views.py": {
        "clickActivity": {
            "name": "clickActivity",
            "location": 67,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": [],
                "pk": [
                    "int"
                ],
                "whatsappid": [
                    "str"
                ]
            }
        },
        "default_page": {
            "name": "default_page",
            "location": 82,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": [],
                "pk": [
                    "int"
                ]
            }
        },
        "topuprequest": {
            "name": "topuprequest",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": []
            }
        },
        "RapidProStartFlowView.post": {
            "name": "post",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RapidProStartTopupFlowView.post": {
            "name": "post",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PresentationLayerView.post": {
            "name": "post",
            "location": 108,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "StartAssessment.get": {
            "name": "get",
            "location": 128,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NextDialog.get": {
            "name": "get",
            "location": 147,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "PreviousDialog.get": {
            "name": "get",
            "location": 212,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Abort.get": {
            "name": "get",
            "location": 226,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Reports.get": {
            "name": "get",
            "location": 236,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ndoh-hub-develop/ada/__init__.py": {},
    "ndoh-hub-develop/ada/migrations/0001_initial.py": {},
    "ndoh-hub-develop/ada/migrations/0002_auto_20210505_0815.py": {},
    "ndoh-hub-develop/ada/migrations/0003_remove_redirecturl_refresh_url.py": {},
    "ndoh-hub-develop/ada/migrations/0004_auto_20210506_0726.py": {},
    "ndoh-hub-develop/ada/migrations/0005_auto_20210507_1256.py": {},
    "ndoh-hub-develop/ada/migrations/0006_auto_20210510_0507.py": {},
    "ndoh-hub-develop/ada/migrations/0007_remove_redirecturl_url.py": {},
    "ndoh-hub-develop/ada/migrations/0008_redirecturl_url.py": {},
    "ndoh-hub-develop/ada/migrations/0009_redirecturlsentry_parameter.py": {},
    "ndoh-hub-develop/ada/migrations/0010_remove_redirecturl_url.py": {},
    "ndoh-hub-develop/ada/migrations/0011_redirecturl_url.py": {},
    "ndoh-hub-develop/ada/migrations/0012_auto_20210511_0657.py": {},
    "ndoh-hub-develop/ada/migrations/0013_remove_redirecturl_url.py": {},
    "ndoh-hub-develop/ada/migrations/0014_adaselfassessment.py": {},
    "ndoh-hub-develop/ada/migrations/0015_adaselfassessment_roadblock.py": {},
    "ndoh-hub-develop/ada/migrations/0016_auto_20220524_1349.py": {},
    "ndoh-hub-develop/ada/migrations/__init__.py": {},
    "ndoh-hub-develop/changes/apps.py": {},
    "ndoh-hub-develop/changes/models.py": {
        "Change.is_engage_action": {
            "name": "is_engage_action",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Change.__str__": {
            "name": "__str__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/changes/__init__.py": {},
    "ndoh-hub-develop/changes/management/__init__.py": {},
    "ndoh-hub-develop/changes/management/commands/__init__.py": {},
    "ndoh-hub-develop/changes/migrations/0001_initial.py": {},
    "ndoh-hub-develop/changes/migrations/0002_auto_20160802_0612.py": {},
    "ndoh-hub-develop/changes/migrations/0003_auto_20160819_0832.py": {},
    "ndoh-hub-develop/changes/migrations/0004_auto_20160826_1147.py": {},
    "ndoh-hub-develop/changes/migrations/0005_auto_20170601_1354.py": {},
    "ndoh-hub-develop/changes/migrations/0006_auto_20170718_1414.py": {},
    "ndoh-hub-develop/changes/migrations/0007_auto_20180212_0759.py": {},
    "ndoh-hub-develop/changes/migrations/0008_auto_20181015_1002.py": {},
    "ndoh-hub-develop/changes/migrations/0009_add_registrant_id_index_to_changes.py": {},
    "ndoh-hub-develop/changes/migrations/__init__.py": {},
    "ndoh-hub-develop/eventstore/admin.py": {
        "ApproximatePaginator.count": {
            "name": "count",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseEventAdmin.save_model": {
            "name": "save_model",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": [],
                "form": [],
                "change": []
            }
        },
        "ImportErrorInline.has_add_permission": {
            "name": "has_add_permission",
            "location": 200,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ImportErrorInline.has_change_permission": {
            "name": "has_change_permission",
            "location": 203,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ImportErrorInline.has_delete_permission": {
            "name": "has_delete_permission",
            "location": 206,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ImportRowInline.has_add_permission": {
            "name": "has_add_permission",
            "location": 214,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ImportRowInline.has_change_permission": {
            "name": "has_change_permission",
            "location": 217,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "ImportRowInline.has_delete_permission": {
            "name": "has_delete_permission",
            "location": 220,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "MomConnectImportAdmin.get_inline_instances": {
            "name": "get_inline_instances",
            "location": 231,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        },
        "MomConnectImportAdmin.get_readonly_fields": {
            "name": "get_readonly_fields",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "obj": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/apps.py": {},
    "ndoh-hub-develop/eventstore/forms.py": {
        "MomConnectImportForm.normalise_key": {
            "name": "normalise_key",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "MomConnectImportForm.get_id_type": {
            "name": "get_id_type",
            "location": 35,
            "return": [
                "Union[(int, _T0)]"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "_T0"
                ]
            }
        },
        "MomConnectImportForm.get_passport_country": {
            "name": "get_passport_country",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "MomConnectImportForm.get_language": {
            "name": "get_language",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "MomConnectImportForm.create_row": {
            "name": "create_row",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mcimport": [],
                "row_number": [],
                "row_data": []
            }
        },
        "MomConnectImportForm.save": {
            "name": "save",
            "location": 117,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "commit": []
            }
        },
        "TextBooleanField.to_python": {
            "name": "to_python",
            "location": 157,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/hcs_tasks.py": {
        "update_turn_contact": {
            "name": "update_turn_contact",
            "location": 25,
            "return": [],
            "arguments": {
                "msisdn": [],
                "field": [],
                "value": []
            }
        },
        "start_study_c_registration_flow": {
            "name": "start_study_c_registration_flow",
            "location": 56,
            "return": [],
            "arguments": {
                "msisdn": [],
                "test_arm": [],
                "quaratine_arm": [],
                "risk": [],
                "source": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/models.py": {
        "OptOut.__str__": {
            "name": "__str__",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.is_operator_message": {
            "name": "is_operator_message",
            "location": 322,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.has_label": {
            "name": "has_label",
            "location": 336,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "Event.is_hsm_error": {
            "name": "is_hsm_error",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.is_message_expired_error": {
            "name": "is_message_expired_error",
            "location": 394,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.is_whatsapp_failed_delivery_event": {
            "name": "is_whatsapp_failed_delivery_event",
            "location": 401,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Covid19Triage.calculate_risk": {
            "name": "calculate_risk",
            "location": 525,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomization.process_study_b": {
            "name": "process_study_b",
            "location": 593,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomization.get_random_study_b_arm": {
            "name": "get_random_study_b_arm",
            "location": 605,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomization.get_study_totals_per_province": {
            "name": "get_study_totals_per_province",
            "location": 616,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomization.save": {
            "name": "save",
            "location": 632,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileManager.get_or_prefill": {
            "name": "get_or_prefill",
            "location": 638,
            "return": [
                "HealthCheckUserProfile"
            ],
            "arguments": {
                "self": [],
                "msisdn": [
                    "str"
                ]
            }
        },
        "HealthCheckUserProfile.update_from_healthcheck": {
            "name": "update_from_healthcheck",
            "location": 717,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "healthcheck": [
                    "Covid19Triage"
                ]
            }
        },
        "HealthCheckUserProfile.update_post_screening_study_arms": {
            "name": "update_post_screening_study_arms",
            "location": 752,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "risk": [],
                "created_by": []
            }
        },
        "HealthCheckUserProfile.process_study_a": {
            "name": "process_study_a",
            "location": 759,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "created_by": []
            }
        },
        "HealthCheckUserProfile.process_study_c": {
            "name": "process_study_c",
            "location": 772,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "risk": [],
                "created_by": []
            }
        },
        "HealthCheckUserProfile.get_study_totals_per_province": {
            "name": "get_study_totals_per_province",
            "location": 800,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfile.get_random_study_arm": {
            "name": "get_random_study_arm",
            "location": 814,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfile.get_random_study_quarantine_arm": {
            "name": "get_random_study_quarantine_arm",
            "location": 823,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBEOnBehalfOfProfileManager.update_or_create_from_healthcheck": {
            "name": "update_or_create_from_healthcheck",
            "location": 847,
            "return": [
                "DBEOnBehalfOfProfile"
            ],
            "arguments": {
                "self": [],
                "healthcheck": [
                    "Covid19Triage"
                ]
            }
        },
        "ImportError.error": {
            "name": "error",
            "location": 963,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ImportRow.clean": {
            "name": "clean",
            "location": 1048,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfile.update_from_healthcheck.has_value": {
            "name": "has_value",
            "location": 722,
            "return": [],
            "arguments": {
                "v": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/serializers.py": {
        "BaseEventSerializer.create": {
            "name": "create",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "MSISDNField.__init__": {
            "name": "__init__",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MSISDNField.to_representation": {
            "name": "to_representation",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "MSISDNField.to_internal_value": {
            "name": "to_internal_value",
            "location": 137,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Covid19TriageV4Serializer.get_profile": {
            "name": "get_profile",
            "location": 311,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/tasks.py": {
        "store_jembi_request": {
            "name": "store_jembi_request",
            "location": 53,
            "return": [],
            "arguments": {
                "url": [],
                "json_doc": []
            }
        },
        "push_to_jembi_api": {
            "name": "push_to_jembi_api",
            "location": 66,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "get_utc_now": {
            "name": "get_utc_now",
            "location": 94,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {}
        },
        "async_create_flow_start": {
            "name": "async_create_flow_start",
            "location": 106,
            "return": [],
            "arguments": {
                "extra": []
            }
        },
        "update_rapidpro_contact": {
            "name": "update_rapidpro_contact",
            "location": 118,
            "return": [],
            "arguments": {
                "urn": [],
                "fields": []
            }
        },
        "get_rapidpro_contact_by_uuid": {
            "name": "get_rapidpro_contact_by_uuid",
            "location": 130,
            "return": [],
            "arguments": {
                "contact_uuid": []
            }
        },
        "get_rapidpro_contact_by_msisdn": {
            "name": "get_rapidpro_contact_by_msisdn",
            "location": 148,
            "return": [],
            "arguments": {
                "context": [],
                "field": []
            }
        },
        "send_helpdesk_response_to_dhis2": {
            "name": "send_helpdesk_response_to_dhis2",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "delete_contact_pii": {
            "name": "delete_contact_pii",
            "location": 197,
            "return": [],
            "arguments": {
                "contact": []
            }
        },
        "delete_rapidpro_contact_by_uuid": {
            "name": "delete_rapidpro_contact_by_uuid",
            "location": 251,
            "return": [],
            "arguments": {
                "contact_uuid": []
            }
        },
        "archive_turn_conversation": {
            "name": "archive_turn_conversation",
            "location": 272,
            "return": [],
            "arguments": {
                "urn": [],
                "message_id": [],
                "reason": []
            }
        },
        "handle_expired_helpdesk_contacts": {
            "name": "handle_expired_helpdesk_contacts",
            "location": 297,
            "return": [],
            "arguments": {}
        },
        "reset_delivery_failure": {
            "name": "reset_delivery_failure",
            "location": 344,
            "return": [],
            "arguments": {
                "contact_uuid": []
            }
        },
        "validate_momconnect_import": {
            "name": "validate_momconnect_import",
            "location": 366,
            "return": [],
            "arguments": {
                "mcimport_id": []
            }
        },
        "upload_momconnect_import": {
            "name": "upload_momconnect_import",
            "location": 429,
            "return": [],
            "arguments": {
                "mcimport_id": []
            }
        },
        "process_ada_assessment_notification": {
            "name": "process_ada_assessment_notification",
            "location": 515,
            "return": [],
            "arguments": {
                "username": [],
                "id": [],
                "patient_id": [],
                "patient_dob": [],
                "observations": [],
                "timestamp": []
            }
        },
        "post_random_contacts_to_slack_channel": {
            "name": "post_random_contacts_to_slack_channel",
            "location": 597,
            "return": [],
            "arguments": {}
        },
        "get_turn_profile_link": {
            "name": "get_turn_profile_link",
            "location": 624,
            "return": [
                "Any"
            ],
            "arguments": {
                "contact_number": []
            }
        },
        "get_random_contact": {
            "name": "get_random_contact",
            "location": 646,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {}
        },
        "get_text_or_caption_from_turn_message": {
            "name": "get_text_or_caption_from_turn_message",
            "location": 672,
            "return": [
                "str"
            ],
            "arguments": {
                "message": [
                    "dict"
                ]
            }
        },
        "get_timestamp_from_turn_message": {
            "name": "get_timestamp_from_turn_message",
            "location": 704,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "message": [
                    "dict"
                ]
            }
        },
        "get_engage_inbound_and_reply": {
            "name": "get_engage_inbound_and_reply",
            "location": 716,
            "return": [],
            "arguments": {
                "wa_contact_id": [],
                "message_id": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/test_forms.py": {
        "MomConnectImportFormTests.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.tearDown": {
            "name": "tearDown",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_missing_columns": {
            "name": "test_missing_columns",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_file_type": {
            "name": "test_invalid_file_type",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_valid_rows": {
            "name": "test_valid_rows",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_empty_language": {
            "name": "test_empty_language",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_msisdn": {
            "name": "test_invalid_msisdn",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_messaging_consent": {
            "name": "test_invalid_messaging_consent",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_research_consent": {
            "name": "test_invalid_research_consent",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_research_consent_default": {
            "name": "test_research_consent_default",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_previous_optout": {
            "name": "test_invalid_previous_optout",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_previous_optout_default": {
            "name": "test_previous_optout_default",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_facility_code_invalid": {
            "name": "test_facility_code_invalid",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_edd": {
            "name": "test_invalid_edd",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_baby_dob": {
            "name": "test_invalid_baby_dob",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_valid_baby_dob_or_edd": {
            "name": "test_valid_baby_dob_or_edd",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_idtype_said": {
            "name": "test_idtype_said",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_id_number": {
            "name": "test_invalid_id_number",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_idtype_passport": {
            "name": "test_idtype_passport",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_idtype_dob": {
            "name": "test_idtype_dob",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MomConnectImportFormTests.test_invalid_dob": {
            "name": "test_invalid_dob",
            "location": 550,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/test_hcs_tasks.py": {
        "UpdateTurnContactTaskTest.test_update_turn_contact_task": {
            "name": "test_update_turn_contact_task",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/test_models.py": {
        "MessageTests.test_is_operator_message": {
            "name": "test_is_operator_message",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessageTests.test_has_label": {
            "name": "test_has_label",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventTests.test_is_hsm_error": {
            "name": "test_is_hsm_error",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventTests.test_is_message_expired_error": {
            "name": "test_is_message_expired_error",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventTests.test_is_whatsapp_failed_delivery": {
            "name": "test_is_whatsapp_failed_delivery",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileTests.test_update_from_healthcheck": {
            "name": "test_update_from_healthcheck",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileTests.test_get_or_prefill_existing": {
            "name": "test_get_or_prefill_existing",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileTests.test_get_or_prefill_no_values": {
            "name": "test_get_or_prefill_no_values",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileTests.test_get_or_prefill_existing_healthchecks": {
            "name": "test_get_or_prefill_existing_healthchecks",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileTests.test_get_study_totals_per_province": {
            "name": "test_get_study_totals_per_province",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileTests.test_get_random_study_arm": {
            "name": "test_get_random_study_arm",
            "location": 214,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_study_totals_per_province": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_a_whatsapp": {
            "name": "test_update_post_screening_study_arms_a_whatsapp",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_a_ussd": {
            "name": "test_update_post_screening_study_arms_a_ussd",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_c_low": {
            "name": "test_update_post_screening_study_arms_c_low",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_c_moderate": {
            "name": "test_update_post_screening_study_arms_c_moderate",
            "location": 303,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": [],
                "mock_start_study_c_registration_flow": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_c_high": {
            "name": "test_update_post_screening_study_arms_c_high",
            "location": 349,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": [],
                "mock_start_study_c_registration_flow": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_populated": {
            "name": "test_update_post_screening_study_arms_populated",
            "location": 387,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_under_age": {
            "name": "test_update_post_screening_study_arms_under_age",
            "location": 411,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_deactivated": {
            "name": "test_update_post_screening_study_arms_deactivated",
            "location": 438,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": []
            }
        },
        "HealthCheckUserProfileTests.test_update_post_screening_study_arms_whitelist": {
            "name": "test_update_post_screening_study_arms_whitelist",
            "location": 471,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_turn_contact": []
            }
        },
        "HCSStudyBRandomizationTests.test_create_study_b_arm_when_active": {
            "name": "test_create_study_b_arm_when_active",
            "location": 501,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomizationTests.test_get_study_b_totals_per_province": {
            "name": "test_get_study_b_totals_per_province",
            "location": 513,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomizationTests.test_get_random_study_b_arm": {
            "name": "test_get_random_study_b_arm",
            "location": 562,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_study_totals_per_province": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/test_tasks.py": {
        "override_get_today": {
            "name": "override_get_today",
            "location": 16,
            "return": [
                "datetime.date"
            ],
            "arguments": {}
        },
        "HandleOldWaitingForHelpdeskContactsTests.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleOldWaitingForHelpdeskContactsTests.add_rapidpro_contact_list_response": {
            "name": "add_rapidpro_contact_list_response",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contact_id": [],
                "fields": [],
                "urns": []
            }
        },
        "HandleOldWaitingForHelpdeskContactsTests.add_rapidpro_contact_update_response": {
            "name": "add_rapidpro_contact_update_response",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contact_id": [],
                "fields": [],
                "urns": []
            }
        },
        "HandleOldWaitingForHelpdeskContactsTests.test_conversation_expired_disabled": {
            "name": "test_conversation_expired_disabled",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleOldWaitingForHelpdeskContactsTests.test_conversation_expired": {
            "name": "test_conversation_expired",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleOldWaitingForHelpdeskContactsTests.test_conversation_not_expired": {
            "name": "test_conversation_not_expired",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleOldWaitingForHelpdeskContactsTests.test_conversation_fields_not_populated": {
            "name": "test_conversation_fields_not_populated",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleOldWaitingForHelpdeskContactsTests.test_conversation_expired_no_urn": {
            "name": "test_conversation_expired_no_urn",
            "location": 157,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ValidateMomConnectImportTests.test_success": {
            "name": "test_success",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "upload_momconnect_import": []
            }
        },
        "ValidateMomConnectImportTests.test_fail_previously_opted_out": {
            "name": "test_fail_previously_opted_out",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ValidateMomConnectImportTests.test_fail_already_registered": {
            "name": "test_fail_already_registered",
            "location": 274,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ValidateMomConnectImportTests.test_fail_already_registered_postbirth": {
            "name": "test_fail_already_registered_postbirth",
            "location": 321,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadMomConnectImportTests.setUp": {
            "name": "setUp",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadMomConnectImportTests.test_success_sa_id": {
            "name": "test_success_sa_id",
            "location": 394,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadMomConnectImportTests.test_success_passport": {
            "name": "test_success_passport",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadMomConnectImportTests.test_success_dob": {
            "name": "test_success_dob",
            "location": 490,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UploadMomConnectImportTests.test_success_postbirth": {
            "name": "test_success_postbirth",
            "location": 540,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessAdaAssessmentNotificationTests.setUp": {
            "name": "setUp",
            "location": 588,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessAdaAssessmentNotificationTests.test_no_contact": {
            "name": "test_no_contact",
            "location": 593,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessAdaAssessmentNotificationTests.test_no_facility": {
            "name": "test_no_facility",
            "location": 613,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessAdaAssessmentNotificationTests.test_valid": {
            "name": "test_valid",
            "location": 645,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostRandomContactsToSlackTests.setUp": {
            "name": "setUp",
            "location": 720,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostRandomContactsToSlackTests.test_post_random_contacts_to_slack_channel": {
            "name": "test_post_random_contacts_to_slack_channel",
            "location": 734,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PostRandomContactsToSlackTests.test_get_random_contact": {
            "name": "test_get_random_contact",
            "location": 801,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GetTurnContactProfileTests.setUp": {
            "name": "setUp",
            "location": 829,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetTurnContactProfileTests.test_get_turn_profile_link": {
            "name": "test_get_turn_profile_link",
            "location": 834,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GetTurnContactProfileTests.test_get_turn_profile_link_none_contact": {
            "name": "test_get_turn_profile_link_none_contact",
            "location": 862,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SendSlackMessageTests.setUp": {
            "name": "setUp",
            "location": 886,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SendSlackMessageTests.test_send_slack_message": {
            "name": "test_send_slack_message",
            "location": 895,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/test_validators.py": {
        "SAIDNumberTests.test_valid": {
            "name": "test_valid",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SAIDNumberTests.test_invalid_format": {
            "name": "test_invalid_format",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SAIDNumberTests.test_invalid_date": {
            "name": "test_invalid_date",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SAIDNumberTests.test_invalid_male": {
            "name": "test_invalid_male",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SAIDNumberTests.test_invalid_luhn": {
            "name": "test_invalid_luhn",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FacilityCodeTests.test_valid": {
            "name": "test_valid",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FacilityCodeTests.test_invalid": {
            "name": "test_invalid",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/test_views.py": {
        "BaseEventTestCase.test_authentication_required": {
            "name": "test_authentication_required",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseEventTestCase.test_permission_required": {
            "name": "test_permission_required",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OptOutViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OptOutViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OptOutViewSetTests.test_forget_optout": {
            "name": "test_forget_optout",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ForgetContactViewTests.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "mock_forget_contact": []
            }
        },
        "ForgetContactViewTests.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "mock_forget_contact": []
            }
        },
        "ForgetContactViewTests.test_successful_forget": {
            "name": "test_successful_forget",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "mock_forget_contact": []
            }
        },
        "BabySwitchViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BabySwitchViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChannelSwitchViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ChannelSwitchViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MSISDNSwitchViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MSISDNSwitchViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 352,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LanguageSwitchViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LanguageSwitchViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 392,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EddSwitchViewsettests.test_data_validation": {
            "name": "test_data_validation",
            "location": 422,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EddSwitchViewsettests.test_successful_request": {
            "name": "test_successful_request",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BabyDobSwitchViewSettests.test_data_validation": {
            "name": "test_data_validation",
            "location": 456,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BabyDobSwitchViewSettests.test_successful_request": {
            "name": "test_successful_request",
            "location": 463,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedbackViewSettests.test_data_validation": {
            "name": "test_data_validation",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FeedbackViewSettests.test_successful_request": {
            "name": "test_successful_request",
            "location": 497,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IdentificationSwitchViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 525,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "IdentificationSwitchViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 537,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ResearchOptinSwitchViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 575,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ResearchOptinSwitchViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 587,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PublicRegistrationViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 618,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PublicRegistrationViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 630,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrebirthRegistrationViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 664,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrebirthRegistrationViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 676,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PrebirthRegistrationViewSetTests.test_reset_delivery_failures": {
            "name": "test_reset_delivery_failures",
            "location": 727,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PrebirthRegistrationViewSetTests.test_prebirth_other_passport_origin": {
            "name": "test_prebirth_other_passport_origin",
            "location": 806,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTRegistrationViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 845,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTRegistrationViewSetTests.test_successful_pmtct_registration_request": {
            "name": "test_successful_pmtct_registration_request",
            "location": 857,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTRegistrationViewSetTests.test_successful_request_with_null_date_of_birth": {
            "name": "test_successful_request_with_null_date_of_birth",
            "location": 891,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostbirthRegistrationViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 929,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostbirthRegistrationViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 941,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PostbirthRegistrationViewSetTests.test_postbirth_other_passport_origin": {
            "name": "test_postbirth_other_passport_origin",
            "location": 989,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.generate_hmac_signature": {
            "name": "generate_hmac_signature",
            "location": 1028,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "key": []
            }
        },
        "MessagesViewSetTests.test_message_identification_required": {
            "name": "test_message_identification_required",
            "location": 1033,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_message_authentication_required": {
            "name": "test_message_authentication_required",
            "location": 1043,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_message_authentication_errors": {
            "name": "test_message_authentication_errors",
            "location": 1064,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_incorrect_header_request": {
            "name": "test_incorrect_header_request",
            "location": 1094,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_missing_hook_subscription_header": {
            "name": "test_missing_hook_subscription_header",
            "location": 1132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_missing_field_in_inbound_message_request": {
            "name": "test_missing_field_in_inbound_message_request",
            "location": 1153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_outbound_message_validation": {
            "name": "test_outbound_message_validation",
            "location": 1192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_outbound_message_missing_id": {
            "name": "test_outbound_message_missing_id",
            "location": 1212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_successful_inbound_messages_request": {
            "name": "test_successful_inbound_messages_request",
            "location": 1231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_successful_inbound_from_fallback_channel": {
            "name": "test_successful_inbound_from_fallback_channel",
            "location": 1315,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_successful_outbound_messages_request": {
            "name": "test_successful_outbound_messages_request",
            "location": 1348,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_successful_outbound_messages_on_fallback": {
            "name": "test_successful_outbound_messages_on_fallback",
            "location": 1400,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_successful_events_request": {
            "name": "test_successful_events_request",
            "location": 1432,
            "return": [],
            "arguments": {
                "self": [],
                "mock_handle_event": []
            }
        },
        "MessagesViewSetTests.test_successful_events_request_on_fallback_channel": {
            "name": "test_successful_events_request_on_fallback_channel",
            "location": 1472,
            "return": [],
            "arguments": {
                "self": [],
                "mock_handle_event": []
            }
        },
        "MessagesViewSetTests.test_events_request_calls_handle_event": {
            "name": "test_events_request_calls_handle_event",
            "location": 1508,
            "return": [],
            "arguments": {
                "self": [],
                "mock_handle_event": []
            }
        },
        "MessagesViewSetTests.test_signature_required": {
            "name": "test_signature_required",
            "location": 1539,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MessagesViewSetTests.test_signature_valid": {
            "name": "test_signature_valid",
            "location": 1555,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CHWRegistrationViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 1574,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CHWRegistrationViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 1586,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CHWRegistrationViewSetTests.test_chw_other_passport_origin": {
            "name": "test_chw_other_passport_origin",
            "location": 1625,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 1660,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 1673,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_post_screening_study_arms": []
            }
        },
        "Covid19TriageViewSetTests.test_duplicate_request": {
            "name": "test_duplicate_request",
            "location": 1727,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_post_screening_study_arms": []
            }
        },
        "Covid19TriageViewSetTests.test_invalid_location_request": {
            "name": "test_invalid_location_request",
            "location": 1757,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageViewSetTests.test_get_list": {
            "name": "test_get_list",
            "location": 1787,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageViewSetTests.test_creates_user_profile": {
            "name": "test_creates_user_profile",
            "location": 1875,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_post_screening_study_arms": []
            }
        },
        "Covid19TriageViewSetTests.test_creates_dbe_user_profile": {
            "name": "test_creates_dbe_user_profile",
            "location": 1908,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageV2ViewSetTests.test_get_list": {
            "name": "test_get_list",
            "location": 1969,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageV2ViewSetTests.test_returning_user": {
            "name": "test_returning_user",
            "location": 2051,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_post_screening_study_arms": []
            }
        },
        "Covid19TriageV3ViewSetTests.test_get_list": {
            "name": "test_get_list",
            "location": 2107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageV4ViewSetTests.test_get_list": {
            "name": "test_get_list",
            "location": 2192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageV4ViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 2277,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_post_screening_study_arms": []
            }
        },
        "Covid19TriageStartViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 2337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageStartViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 2347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageStartViewSetTests.test_get_list": {
            "name": "test_get_list",
            "location": 2363,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomizationViewSetTests.create_authed_user": {
            "name": "create_authed_user",
            "location": 2396,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomizationViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 2404,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomizationViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 2421,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HCSStudyBRandomizationViewSetTests.test_repeat_request": {
            "name": "test_repeat_request",
            "location": 2441,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileViewSetTests.test_no_data": {
            "name": "test_no_data",
            "location": 2482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HealthCheckUserProfileViewSetTests.test_existing_healthchecks": {
            "name": "test_existing_healthchecks",
            "location": 2497,
            "return": [],
            "arguments": {
                "self": [],
                "mock_update_post_screening_study_arms": []
            }
        },
        "HealthCheckUserProfileViewSetTests.test_existing_profile": {
            "name": "test_existing_profile",
            "location": 2522,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CDUAddressUpdateViewSetTests.test_data_validation": {
            "name": "test_data_validation",
            "location": 2544,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CDUAddressUpdateViewSetTests.test_successful_request": {
            "name": "test_successful_request",
            "location": 2556,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBEOnBehalfOfProfileTests.create_profile": {
            "name": "create_profile",
            "location": 2603,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBEOnBehalfOfProfileTests.test_authentication_required": {
            "name": "test_authentication_required",
            "location": 2617,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBEOnBehalfOfProfileTests.test_permission_required": {
            "name": "test_permission_required",
            "location": 2624,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBEOnBehalfOfProfileTests.test_get_no_filter": {
            "name": "test_get_no_filter",
            "location": 2633,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DBEOnBehalfOfProfileTests.test_get_msisdn_filter": {
            "name": "test_get_msisdn_filter",
            "location": 2650,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSetTests.test_querystring_token_auth": {
            "name": "test_querystring_token_auth",
            "location": 2672,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSetTests.test_validates_request_data": {
            "name": "test_validates_request_data",
            "location": 2687,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSetTests.test_validates_patient_data": {
            "name": "test_validates_patient_data",
            "location": 2706,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSetTests.test_validates_observation_data": {
            "name": "test_validates_observation_data",
            "location": 2738,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSetTests.test_missing_patient_data": {
            "name": "test_missing_patient_data",
            "location": 2772,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSetTests.test_missing_observations": {
            "name": "test_missing_observations",
            "location": 2788,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSetTests.test_valid_data": {
            "name": "test_valid_data",
            "location": 2824,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/test_whatsapp_actions.py": {
        "HandleOutboundTests.test_operator_message": {
            "name": "test_operator_message",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleOperatorMessageTests.test_flow_triggered": {
            "name": "test_flow_triggered",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleInboundTests.test_contact_update": {
            "name": "test_contact_update",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleInboundTests.test_handle_edd_label": {
            "name": "test_handle_edd_label",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleInboundTests.test_handle_edd_label_disabled": {
            "name": "test_handle_edd_label_disabled",
            "location": 171,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UpdateRapidproPreferredChannelTests.test_contact_update_is_called": {
            "name": "test_contact_update_is_called",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleEddLabelTests.test_handle_edd_message": {
            "name": "test_handle_edd_message",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_whatsapp_delivery_failure_error": {
            "name": "test_whatsapp_delivery_failure_error",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_delivery_failure_error": {
            "name": "test_fallback_channel_delivery_failure_error",
            "location": 250,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_delivery_failure_duplicate": {
            "name": "test_fallback_channel_delivery_failure_duplicate",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_delivery_failure_error_more_than_5": {
            "name": "test_fallback_channel_delivery_failure_error_more_than_5",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_delivery_failure_less_than_5": {
            "name": "test_fallback_channel_delivery_failure_less_than_5",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_delivery_failure_optouts_disabled": {
            "name": "test_fallback_channel_delivery_failure_optouts_disabled",
            "location": 342,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_successful_with_no_existing_delivery_failure": {
            "name": "test_fallback_channel_successful_with_no_existing_delivery_failure",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_successful_with_sent_status": {
            "name": "test_fallback_channel_successful_with_sent_status",
            "location": 381,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HandleEventTests.test_fallback_channel_successful_with_existing_delivery_failure": {
            "name": "test_fallback_channel_successful_with_existing_delivery_failure",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/validators.py": {
        "validate_true": {
            "name": "validate_true",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "value": []
            }
        },
        "luhn_verify": {
            "name": "luhn_verify",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "value": []
            }
        },
        "validate_sa_id_number": {
            "name": "validate_sa_id_number",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "value": []
            }
        },
        "validate_facility_code": {
            "name": "validate_facility_code",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "value": []
            }
        },
        "posix_timestamp": {
            "name": "posix_timestamp",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "value": []
            }
        },
        "geographic_coordinate": {
            "name": "geographic_coordinate",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "value": []
            }
        },
        "_phone_number": {
            "name": "_phone_number",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "value": [],
                "country": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/views.py": {
        "CursorPaginationFactory": {
            "name": "CursorPaginationFactory",
            "location": 84,
            "return": [],
            "arguments": {
                "field": []
            }
        },
        "MessagesViewSet.create": {
            "name": "create",
            "location": 129,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "OptOutViewSet.perform_create": {
            "name": "perform_create",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "ForgetContactView.post": {
            "name": "post",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseRegistrationViewSet.perform_create": {
            "name": "perform_create",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "Covid19TriageViewSet.perform_create": {
            "name": "perform_create",
            "location": 373,
            "return": [],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "Covid19TriageViewSet.create": {
            "name": "create",
            "location": 392,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageViewSet.get_throttles": {
            "name": "get_throttles",
            "location": 399,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Covid19TriageV2ViewSet._get_msisdn": {
            "name": "_get_msisdn",
            "location": 423,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Covid19TriageV2ViewSet._update_data": {
            "name": "_update_data",
            "location": 429,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "triage": []
            }
        },
        "Covid19TriageV2ViewSet.create": {
            "name": "create",
            "location": 436,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Covid19TriageV3ViewSet.create": {
            "name": "create",
            "location": 450,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Covid19TriageV4ViewSet.create": {
            "name": "create",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "HCSStudyBRandomizationViewSet.create": {
            "name": "create",
            "location": 478,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "HealthCheckUserProfileViewSet.get_object": {
            "name": "get_object",
            "location": 502,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DBEOnBehalfOfProfileViewSet.get_queryset": {
            "name": "get_queryset",
            "location": 522,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AdaAssessmentNotificationViewSet.create": {
            "name": "create",
            "location": 536,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/whatsapp_actions.py": {
        "handle_outbound": {
            "name": "handle_outbound",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "message": []
            }
        },
        "handle_operator_message": {
            "name": "handle_operator_message",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "message": []
            }
        },
        "handle_inbound": {
            "name": "handle_inbound",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "message": []
            }
        },
        "update_rapidpro_preferred_channel": {
            "name": "update_rapidpro_preferred_channel",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "message": []
            }
        },
        "handle_edd_message": {
            "name": "handle_edd_message",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "message": []
            }
        },
        "handle_event": {
            "name": "handle_event",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/__init__.py": {},
    "ndoh-hub-develop/eventstore/management/commands/migrate_registration_info.py": {
        "Command.handle_channel_migration": {
            "name": "handle_channel_migration",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/management/commands/migrate_to_eventstore.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.execute_with_progress": {
            "name": "execute_with_progress",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func": [],
                "iterator": []
            }
        },
        "Command.handle_public_registration": {
            "name": "handle_public_registration",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reg": []
            }
        },
        "Command.handle_CHW_registration": {
            "name": "handle_CHW_registration",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reg": []
            }
        },
        "Command.handle_prebirth_registration": {
            "name": "handle_prebirth_registration",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reg": []
            }
        },
        "Command.handle_PMTCT_registration": {
            "name": "handle_PMTCT_registration",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reg": []
            }
        },
        "Command.handle_babyswitch_change": {
            "name": "handle_babyswitch_change",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Command.handle_optout_change": {
            "name": "handle_optout_change",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Command.handle_channelswitch_change": {
            "name": "handle_channelswitch_change",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Command.handle_msisdnswitch_change": {
            "name": "handle_msisdnswitch_change",
            "location": 237,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Command.handle_languageswitch_change": {
            "name": "handle_languageswitch_change",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Command.handle_identificationswitch_change": {
            "name": "handle_identificationswitch_change",
            "location": 269,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "change": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/migrations/0001_create_optout.py": {},
    "ndoh-hub-develop/eventstore/migrations/0002_create_babyswitch.py": {},
    "ndoh-hub-develop/eventstore/migrations/0003_create_channelswitch.py": {},
    "ndoh-hub-develop/eventstore/migrations/0004_create_publicregistration.py": {},
    "ndoh-hub-develop/eventstore/migrations/0005_create_prebirthregistration.py": {},
    "ndoh-hub-develop/eventstore/migrations/0006_create_postbirthregistration.py": {},
    "ndoh-hub-develop/eventstore/migrations/0007_denormalise_created_by.py": {
        "populate_createdby_name": {
            "name": "populate_createdby_name",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/migrations/0008_add_chw_registration.py": {},
    "ndoh-hub-develop/eventstore/migrations/0009_auto_20191031_1314.py": {},
    "ndoh-hub-develop/eventstore/migrations/0010_add_external_registration_id.py": {},
    "ndoh-hub-develop/eventstore/migrations/0011_add_message_and_event.py": {},
    "ndoh-hub-develop/eventstore/migrations/0012_add_msisdn_switch.py": {},
    "ndoh-hub-develop/eventstore/migrations/0013_add_language_switch.py": {},
    "ndoh-hub-develop/eventstore/migrations/0014_add_identification_switch.py": {},
    "ndoh-hub-develop/eventstore/migrations/0015_add_research_optin_switch.py": {},
    "ndoh-hub-develop/eventstore/migrations/0016_add_fallback_channel_flag.py": {},
    "ndoh-hub-develop/eventstore/migrations/0017_pmtctregistration.py": {},
    "ndoh-hub-develop/eventstore/migrations/0018_auto_20200205_1033.py": {},
    "ndoh-hub-develop/eventstore/migrations/0019_babydobswitch_eddswitch.py": {},
    "ndoh-hub-develop/eventstore/migrations/0020_auto_20200302_1458.py": {},
    "ndoh-hub-develop/eventstore/migrations/0021_covid19triage.py": {},
    "ndoh-hub-develop/eventstore/migrations/0022_cdu_address_update.py": {},
    "ndoh-hub-develop/eventstore/migrations/0023_cdu_address_update_msisdn.py": {},
    "ndoh-hub-develop/eventstore/migrations/0024_auto_20200407_1242.py": {},
    "ndoh-hub-develop/eventstore/migrations/0025_add_difficulty_breathing.py": {},
    "ndoh-hub-develop/eventstore/migrations/0026_add_whatsapp_fields_covid19triage.py": {
        "set_default": {
            "name": "set_default",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "noop": {
            "name": "noop",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/migrations/0027_normalise_msisdn.py": {
        "normalise_msisdn": {
            "name": "normalise_msisdn",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/migrations/0028_covid19triage_completed_timestamp.py": {
        "set_default": {
            "name": "set_default",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "noop": {
            "name": "noop",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "ndoh-hub-develop/eventstore/migrations/0029_add_index_on_timestamp.py": {},
    "ndoh-hub-develop/eventstore/migrations/0030_add_covid19_confirmed_contact_fields.py": {},
    "ndoh-hub-develop/eventstore/migrations/0031_add_healthcheck_index_msisdn.py": {},
    "ndoh-hub-develop/eventstore/migrations/0032_deliveryfailure_timestamp.py": {},
    "ndoh-hub-develop/eventstore/migrations/0033_add_healthcheck_user_profile.py": {},
    "ndoh-hub-develop/eventstore/migrations/0034_remove_like_indexes.py": {},
    "ndoh-hub-develop/eventstore/migrations/0035_covid19triage_place_of_work.py": {},
    "ndoh-hub-develop/eventstore/migrations/0036_auto_20201007_1040.py": {},
    "ndoh-hub-develop/eventstore/migrations/0037_add_expanded_comorbidities.py": {},
    "ndoh-hub-develop/eventstore/migrations/0038_importerror_importrow_momconnectimport_squashed_0040_small_integer_fields.py": {},
    "ndoh-hub-develop/eventstore/migrations/0039_auto_20210118_0950.py": {},
    "ndoh-hub-develop/eventstore/migrations/0040_momconnectimport_last_uploaded_row.py": {},
    "ndoh-hub-develop/eventstore/migrations/0041_covid19triagestart.py": {},
    "ndoh-hub-develop/eventstore/migrations/0042_auto_20210511_1013.py": {},
    "ndoh-hub-develop/eventstore/migrations/0043_auto_20210511_1316.py": {},
    "ndoh-hub-develop/eventstore/migrations/0044_auto_20210518_1003.py": {},
    "ndoh-hub-develop/eventstore/migrations/0045_momconnectimport_source.py": {},
    "ndoh-hub-develop/eventstore/migrations/0046_auto_20210712_1223.py": {},
    "ndoh-hub-develop/eventstore/migrations/0047_remove_healthcheckuserprofile_hcs_study_c_pilot_arm.py": {},
    "ndoh-hub-develop/eventstore/migrations/0048_auto_20211110_0925.py": {},
    "ndoh-hub-develop/eventstore/migrations/0049_auto_20211202_1220.py": {},
    "ndoh-hub-develop/eventstore/migrations/0050_askfeedback.py": {},
    "ndoh-hub-develop/eventstore/migrations/0051_auto_20211213_1038.py": {},
    "ndoh-hub-develop/eventstore/migrations/0052_auto_20220131_1239.py": {},
    "ndoh-hub-develop/eventstore/migrations/0053_hcsstudybrandomization.py": {},
    "ndoh-hub-develop/eventstore/migrations/__init__.py": {},
    "ndoh-hub-develop/mqr/admin.py": {},
    "ndoh-hub-develop/mqr/apps.py": {},
    "ndoh-hub-develop/mqr/models.py": {},
    "ndoh-hub-develop/mqr/serializers.py": {
        "BaselineSurveyResultSerializer.update": {
            "name": "update",
            "location": 13,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "instance": [
                    "_T0"
                ],
                "validated_data": []
            }
        }
    },
    "ndoh-hub-develop/mqr/urls.py": {},
    "ndoh-hub-develop/mqr/utils.py": {
        "get_week": {
            "name": "get_week",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "subscription_type": [],
                "edd_or_dob_date": []
            }
        },
        "get_tag": {
            "name": "get_tag",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "arm": [],
                "subscription_type": [],
                "edd_or_dob_date": [],
                "sequence": []
            }
        },
        "get_message": {
            "name": "get_message",
            "location": 27,
            "return": [
                "Tuple[(bool, bool, Any, Optional[str])]"
            ],
            "arguments": {
                "page_id": [],
                "tracking_data": []
            }
        },
        "get_message_details": {
            "name": "get_message_details",
            "location": 45,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "tag": [],
                "tracking_data": [],
                "mom_name": []
            }
        },
        "get_next_message": {
            "name": "get_next_message",
            "location": 71,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "edd_or_dob_date": [],
                "subscription_type": [],
                "arm": [],
                "sequence": [],
                "mom_name": [],
                "tracking_data": []
            }
        },
        "get_faq_message": {
            "name": "get_faq_message",
            "location": 107,
            "return": [
                "Optional[Dict[(str, Any)]]"
            ],
            "arguments": {
                "tag": [],
                "faq_number": [],
                "viewed": [
                    "_T2"
                ],
                "tracking_data": []
            }
        },
        "get_faq_menu": {
            "name": "get_faq_menu",
            "location": 125,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "tag": [],
                "viewed": [],
                "bcm": [],
                "menu_offset": []
            }
        },
        "get_next_send_date": {
            "name": "get_next_send_date",
            "location": 151,
            "return": [
                "_datetime.date"
            ],
            "arguments": {}
        },
        "get_first_send_date": {
            "name": "get_first_send_date",
            "location": 155,
            "return": [
                "Any"
            ],
            "arguments": {
                "edd_or_dob_date": []
            }
        },
        "is_study_active_for_weeks_pregnant": {
            "name": "is_study_active_for_weeks_pregnant",
            "location": 164,
            "return": [
                "Any"
            ],
            "arguments": {
                "estimated_delivery_date": []
            }
        },
        "get_facility_province": {
            "name": "get_facility_province",
            "location": 175,
            "return": [
                "Any"
            ],
            "arguments": {
                "facility_code": []
            }
        },
        "get_weeks_pregnant": {
            "name": "get_weeks_pregnant",
            "location": 184,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "estimated_date": []
            }
        },
        "get_age_bucket": {
            "name": "get_age_bucket",
            "location": 202,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "mom_age": []
            }
        }
    },
    "ndoh-hub-develop/mqr/views.py": {
        "RandomStrataArmView.post": {
            "name": "post",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseMessageView.get_tracking_data": {
            "name": "get_tracking_data",
            "location": 90,
            "return": [
                "Dict[(str, Union[(str, _T1)])]"
            ],
            "arguments": {
                "self": [],
                "serializer": [],
                "message_type": [
                    "_T1"
                ]
            }
        },
        "NextMessageView.post": {
            "name": "post",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "FaqView.post": {
            "name": "post",
            "location": 132,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "FaqMenuView.post": {
            "name": "post",
            "location": 156,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaselineSurveyResultViewSet.create": {
            "name": "create",
            "location": 196,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "FirstSendDateView.post": {
            "name": "post",
            "location": 217,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ndoh-hub-develop/mqr/__init__.py": {},
    "ndoh-hub-develop/mqr/migrations/0001_initial.py": {},
    "ndoh-hub-develop/mqr/migrations/0002_baselinesurveyresult.py": {},
    "ndoh-hub-develop/mqr/migrations/0003_auto_20220322_0539.py": {},
    "ndoh-hub-develop/mqr/migrations/0004_auto_20220322_0733.py": {},
    "ndoh-hub-develop/mqr/migrations/0005_auto_20220322_1350.py": {},
    "ndoh-hub-develop/mqr/migrations/0006_auto_20220323_0758.py": {},
    "ndoh-hub-develop/mqr/migrations/0007_auto_20220323_0852.py": {},
    "ndoh-hub-develop/mqr/migrations/0008_auto_20220404_0905.py": {},
    "ndoh-hub-develop/mqr/migrations/0009_auto_20220425_0911.py": {},
    "ndoh-hub-develop/mqr/migrations/__init__.py": {},
    "ndoh-hub-develop/mqr/tests/test_utils.py": {
        "override_get_today": {
            "name": "override_get_today",
            "location": 10,
            "return": [
                "_datetime.date"
            ],
            "arguments": {}
        },
        "get_date": {
            "name": "get_date",
            "location": 14,
            "return": [
                "_datetime.date"
            ],
            "arguments": {
                "d": []
            }
        },
        "TestGetWeek.setUp": {
            "name": "setUp",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetWeek.test_get_weeks": {
            "name": "test_get_weeks",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetTag.setUp": {
            "name": "setUp",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetTag.test_get_tag": {
            "name": "test_get_tag",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetTag.test_get_tag_with_sequence": {
            "name": "test_get_tag_with_sequence",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetMessage.test_get_message_non_template": {
            "name": "test_get_message_non_template",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetMessage.test_get_message_template": {
            "name": "test_get_message_template",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetMessage.test_get_message_template_with_parameters": {
            "name": "test_get_message_template_with_parameters",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetMessageDetails.test_get_message_details_not_found": {
            "name": "test_get_message_details_not_found",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetMessageDetails.test_get_message_details_too_many": {
            "name": "test_get_message_details_too_many",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetMessageDetails.test_get_message_details": {
            "name": "test_get_message_details",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_message": []
            }
        },
        "TestGetNextMessage.setUp": {
            "name": "setUp",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetNextMessage.test_get_next_message": {
            "name": "test_get_next_message",
            "location": 208,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_message_details": []
            }
        },
        "TestGetNextMessage.test_get_next_message_with_sequence": {
            "name": "test_get_next_message_with_sequence",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_message_details": []
            }
        },
        "TestGetNextMessage.test_get_next_message_with_sequence_last": {
            "name": "test_get_next_message_with_sequence_last",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_message_details": []
            }
        },
        "TestGetNextMessage.test_get_next_message_with_sequence_and_existing_prompt": {
            "name": "test_get_next_message_with_sequence_and_existing_prompt",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_message_details": []
            }
        },
        "TestGetFaqMessage.test_get_faq_message": {
            "name": "test_get_faq_message",
            "location": 332,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_message_details": [],
                "mock_get_faq_menu": []
            }
        },
        "TestGetFaqMessage.test_get_faq_message_rcm_bcm": {
            "name": "test_get_faq_message_rcm_bcm",
            "location": 360,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_message_details": [],
                "mock_get_faq_menu": []
            }
        },
        "TestGetFaqMenu.test_get_faq_menu": {
            "name": "test_get_faq_menu",
            "location": 389,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetFaqMenu.test_get_faq_menu_with_viewed": {
            "name": "test_get_faq_menu_with_viewed",
            "location": 407,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetFaqMenu.test_get_faq_menu_bcm": {
            "name": "test_get_faq_menu_bcm",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetFaqMenu.test_get_faq_menu_with_menu_offset": {
            "name": "test_get_faq_menu_with_menu_offset",
            "location": 449,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGetNextSendDate.setUp": {
            "name": "setUp",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetNextSendDate.test_get_next_send_date": {
            "name": "test_get_next_send_date",
            "location": 471,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFirstSendDate.setUp": {
            "name": "setUp",
            "location": 477,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFirstSendDate.test_get_first_send_date_prebirth": {
            "name": "test_get_first_send_date_prebirth",
            "location": 480,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGetFirstSendDate.test_get_first_send_date_postbirth": {
            "name": "test_get_first_send_date_postbirth",
            "location": 484,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIsStudyActiveForWeeksPregnant.test_is_study_active_for_weeks_pregnant": {
            "name": "test_is_study_active_for_weeks_pregnant",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/mqr/tests/test_views.py": {
        "override_get_today": {
            "name": "override_get_today",
            "location": 229,
            "return": [
                "datetime.date"
            ],
            "arguments": {}
        },
        "NextMessageViewTests.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NextMessageViewTests.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NextMessageViewTests.test_next_message": {
            "name": "test_next_message",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_next_message": []
            }
        },
        "NextMessageViewTests.test_next_message_error": {
            "name": "test_next_message_error",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_next_message": []
            }
        },
        "FaqViewTests.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FaqViewTests.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FaqViewTests.test_faq_message": {
            "name": "test_faq_message",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_faq_message": []
            }
        },
        "FaqMenuViewTests.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FaqMenuViewTests.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FaqMenuViewTests.test_faq_menu": {
            "name": "test_faq_menu",
            "location": 206,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_faq_menu": []
            }
        },
        "StrataRandomization.setUp": {
            "name": "setUp",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrataRandomization.test_random_arm_unauthorized_user": {
            "name": "test_random_arm_unauthorized_user",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrataRandomization.test_random_arm": {
            "name": "test_random_arm",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrataRandomization.test_random_arm_exclude": {
            "name": "test_random_arm_exclude",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrataRandomization.test_random_arm_exclude_study_limit": {
            "name": "test_random_arm_exclude_study_limit",
            "location": 300,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StrataRandomization.test_get_random_starta_arm": {
            "name": "test_get_random_starta_arm",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrataRandomization.test_out_of_index_arm": {
            "name": "test_out_of_index_arm",
            "location": 357,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaselineSurveyResultViewTests.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 400,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaselineSurveyResultViewTests.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 404,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaselineSurveyResultViewTests.test_successful_create": {
            "name": "test_successful_create",
            "location": 414,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaselineSurveyResultViewTests.test_successful_update": {
            "name": "test_successful_update",
            "location": 465,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaselineSurveyResultViewTests.test_successful_update_airtime": {
            "name": "test_successful_update_airtime",
            "location": 493,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaselineSurveyResultViewTests.test_get_result_by_msisdn": {
            "name": "test_get_result_by_msisdn",
            "location": 521,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaselineSurveyResultViewTests.test_get_result_by_msisdn_not_found": {
            "name": "test_get_result_by_msisdn_not_found",
            "location": 550,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FirstSendDateViewTests.test_unauthenticated": {
            "name": "test_unauthenticated",
            "location": 565,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FirstSendDateViewTests.test_invalid_data": {
            "name": "test_invalid_data",
            "location": 569,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FirstSendDateViewTests.test_faq_message": {
            "name": "test_faq_message",
            "location": 580,
            "return": [],
            "arguments": {
                "self": [],
                "mock_get_first_send_date": []
            }
        }
    },
    "ndoh-hub-develop/mqr/tests/__init__.py": {},
    "ndoh-hub-develop/ndoh_hub/auth.py": {
        "CachedTokenAuthentication.authenticate_credentials": {
            "name": "authenticate_credentials",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "ndoh-hub-develop/ndoh_hub/celery.py": {
        "debug_task": {
            "name": "debug_task",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ndoh_hub/constants.py": {},
    "ndoh-hub-develop/ndoh_hub/decorators.py": {
        "internal_only": {
            "name": "internal_only",
            "location": 6,
            "return": [
                "Callable"
            ],
            "arguments": {
                "view_func": []
            }
        },
        "internal_only.wrapper": {
            "name": "wrapper",
            "location": 12,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "ndoh-hub-develop/ndoh_hub/settings.py": {},
    "ndoh-hub-develop/ndoh_hub/testsettings.py": {},
    "ndoh-hub-develop/ndoh_hub/test_decorators.py": {
        "InternalOnlyTests.test_internal_access": {
            "name": "test_internal_access",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InternalOnlyTests.test_external_access": {
            "name": "test_external_access",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ndoh_hub/test_utils.py": {
        "TestNormaliseMsisdn.test_normalise_msisdn": {
            "name": "test_normalise_msisdn",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/ndoh_hub/urls.py": {},
    "ndoh-hub-develop/ndoh_hub/utils.py": {
        "get_identity_msisdn": {
            "name": "get_identity_msisdn",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "registrant_id": []
            }
        },
        "validate_signature": {
            "name": "validate_signature",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "request": []
            }
        },
        "is_valid_uuid": {
            "name": "is_valid_uuid",
            "location": 92,
            "return": [
                "Any"
            ],
            "arguments": {
                "id": []
            }
        },
        "is_valid_date": {
            "name": "is_valid_date",
            "location": 96,
            "return": [
                "bool"
            ],
            "arguments": {
                "date": []
            }
        },
        "is_valid_edd_date": {
            "name": "is_valid_edd_date",
            "location": 104,
            "return": [
                "Any"
            ],
            "arguments": {
                "edd": []
            }
        },
        "is_valid_edd": {
            "name": "is_valid_edd",
            "location": 112,
            "return": [
                "bool"
            ],
            "arguments": {
                "date": []
            }
        },
        "is_valid_baby_dob_date": {
            "name": "is_valid_baby_dob_date",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "dob": [
                    "datetime.date"
                ]
            }
        },
        "is_valid_lang": {
            "name": "is_valid_lang",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "lang": []
            }
        },
        "is_valid_msisdn": {
            "name": "is_valid_msisdn",
            "location": 135,
            "return": [
                "Any"
            ],
            "arguments": {
                "msisdn": []
            }
        },
        "is_valid_faccode": {
            "name": "is_valid_faccode",
            "location": 140,
            "return": [
                "bool"
            ],
            "arguments": {
                "faccode": []
            }
        },
        "is_valid_sanc_no": {
            "name": "is_valid_sanc_no",
            "location": 145,
            "return": [
                "bool"
            ],
            "arguments": {
                "sanc_no": []
            }
        },
        "is_valid_persal_no": {
            "name": "is_valid_persal_no",
            "location": 150,
            "return": [
                "bool"
            ],
            "arguments": {
                "persal_no": []
            }
        },
        "is_valid_sa_id_no": {
            "name": "is_valid_sa_id_no",
            "location": 155,
            "return": [
                "bool"
            ],
            "arguments": {
                "sa_id_no": []
            }
        },
        "is_valid_passport_no": {
            "name": "is_valid_passport_no",
            "location": 160,
            "return": [
                "bool"
            ],
            "arguments": {
                "passport_no": []
            }
        },
        "is_valid_passport_origin": {
            "name": "is_valid_passport_origin",
            "location": 165,
            "return": [
                "bool"
            ],
            "arguments": {
                "passport_origin": []
            }
        },
        "is_valid_id_type": {
            "name": "is_valid_id_type",
            "location": 170,
            "return": [
                "bool"
            ],
            "arguments": {
                "id_type": []
            }
        },
        "get_today": {
            "name": "get_today",
            "location": 175,
            "return": [
                "datetime.date"
            ],
            "arguments": {}
        },
        "get_mom_age": {
            "name": "get_mom_age",
            "location": 179,
            "return": [
                "Any"
            ],
            "arguments": {
                "today": [],
                "mom_dob": []
            }
        },
        "get_available_metrics": {
            "name": "get_available_metrics",
            "location": 185,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "json_decode": {
            "name": "json_decode",
            "location": 192,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": []
            }
        },
        "normalise_msisdn": {
            "name": "normalise_msisdn",
            "location": 202,
            "return": [
                "str"
            ],
            "arguments": {
                "msisdn": [
                    "str"
                ]
            }
        },
        "get_random_date": {
            "name": "get_random_date",
            "location": 223,
            "return": [
                "datetime.date"
            ],
            "arguments": {}
        },
        "send_slack_message": {
            "name": "send_slack_message",
            "location": 235,
            "return": [
                "bool"
            ],
            "arguments": {
                "channel": [],
                "text": []
            }
        },
        "TokenAuthQueryString.authenticate": {
            "name": "authenticate",
            "location": 216,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ndoh-hub-develop/ndoh_hub/utils_tests.py": {
        "mock_request_to_jembi_api": {
            "name": "mock_request_to_jembi_api",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "url": []
            }
        },
        "mock_get_identity_by_id": {
            "name": "mock_get_identity_by_id",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_id": [],
                "details": []
            }
        },
        "mock_get_nonexistant_identity_by_id": {
            "name": "mock_get_nonexistant_identity_by_id",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_id": []
            }
        },
        "mock_get_identity_by_msisdn": {
            "name": "mock_get_identity_by_msisdn",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "msisdn": [],
                "identity_id": [],
                "num": []
            }
        },
        "mock_patch_identity": {
            "name": "mock_patch_identity",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_id": []
            }
        },
        "mock_create_identity": {
            "name": "mock_create_identity",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_id": [],
                "details": []
            }
        },
        "mock_get_messageset_by_shortname": {
            "name": "mock_get_messageset_by_shortname",
            "location": 124,
            "return": [
                "int"
            ],
            "arguments": {
                "short_name": []
            }
        },
        "mock_get_messageset": {
            "name": "mock_get_messageset",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "messageset_id": []
            }
        },
        "mock_get_messagesets": {
            "name": "mock_get_messagesets",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {
                "messagesets": []
            }
        },
        "mock_get_schedule": {
            "name": "mock_get_schedule",
            "location": 304,
            "return": [
                "None"
            ],
            "arguments": {
                "schedule_id": []
            }
        },
        "mock_create_servicerating_invite": {
            "name": "mock_create_servicerating_invite",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {
                "identity_id": []
            }
        },
        "mock_push_registration_to_jembi": {
            "name": "mock_push_registration_to_jembi",
            "location": 359,
            "return": [
                "None"
            ],
            "arguments": {
                "ok_response": [],
                "err_response": [],
                "fields": []
            }
        },
        "mock_jembi_json_api_call": {
            "name": "mock_jembi_json_api_call",
            "location": 368,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [],
                "ok_response": [],
                "err_response": [],
                "fields": []
            }
        },
        "mock_junebug_channel_call": {
            "name": "mock_junebug_channel_call",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [],
                "channel_type": []
            }
        },
        "mock_get_active_subscriptions": {
            "name": "mock_get_active_subscriptions",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "identity": [],
                "count": []
            }
        },
        "mock_get_subscriptions": {
            "name": "mock_get_subscriptions",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {
                "querystring": [],
                "results": []
            }
        },
        "mock_update_subscription": {
            "name": "mock_update_subscription",
            "location": 437,
            "return": [
                "None"
            ],
            "arguments": {
                "uuid": []
            }
        },
        "mock_jembi_json_api_call.request_callback": {
            "name": "request_callback",
            "location": 369,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "ndoh-hub-develop/ndoh_hub/wsgi.py": {},
    "ndoh-hub-develop/ndoh_hub/__init__.py": {},
    "ndoh-hub-develop/registrations/admin.py": {},
    "ndoh-hub-develop/registrations/apps.py": {},
    "ndoh-hub-develop/registrations/fields.py": {
        "PhoneNumberField.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhoneNumberField.to_representation": {
            "name": "to_representation",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "PhoneNumberField.to_internal_value": {
            "name": "to_internal_value",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "ndoh-hub-develop/registrations/models.py": {
        "Source.__str__": {
            "name": "__str__",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Registration.__str__": {
            "name": "__str__",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Registration.get_subscription_requests": {
            "name": "get_subscription_requests",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Registration.status": {
            "name": "status",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SubscriptionRequest.serialize_hook": {
            "name": "serialize_hook",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "hook": []
            }
        },
        "SubscriptionRequest.__str__": {
            "name": "__str__",
            "location": 181,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PositionTracker.modified_at": {
            "name": "modified_at",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PositionTracker.__str__": {
            "name": "__str__",
            "location": 219,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "WhatsAppContact.api_format": {
            "name": "api_format",
            "location": 235,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/serializers.py": {},
    "ndoh-hub-develop/registrations/tasks.py": {
        "get_whatsapp_contact": {
            "name": "get_whatsapp_contact",
            "location": 23,
            "return": [],
            "arguments": {
                "msisdn": []
            }
        }
    },
    "ndoh-hub-develop/registrations/test_fields.py": {
        "PhoneNumberFieldTests.test_valid_number": {
            "name": "test_valid_number",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhoneNumberFieldTests.test_country_code": {
            "name": "test_country_code",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhoneNumberFieldTests.test_cannot_parse": {
            "name": "test_cannot_parse",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhoneNumberFieldTests.test_not_possible_number": {
            "name": "test_not_possible_number",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhoneNumberFieldTests.test_not_valid_phone_number": {
            "name": "test_not_valid_phone_number",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PhoneNumberFieldTests.test_to_representation": {
            "name": "test_to_representation",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/test_models.py": {
        "RegistrationTests.test_registration_status_external_id": {
            "name": "test_registration_status_external_id",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationTests.test_registration_status_succeeded": {
            "name": "test_registration_status_succeeded",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationTests.test_registration_status_validation_failed": {
            "name": "test_registration_status_validation_failed",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationTests.test_registration_status_failed": {
            "name": "test_registration_status_failed",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationTests.test_registration_status_processing": {
            "name": "test_registration_status_processing",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WhatsAppContactTests.test_api_format": {
            "name": "test_api_format",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/test_tasks.py": {
        "GetWhatsAppContactTests.test_contact_returned": {
            "name": "test_contact_returned",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GetWhatsAppContactTests.test_contact_not_returned": {
            "name": "test_contact_not_returned",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GetWhatsAppContactTests.test_contact_exists_in_database": {
            "name": "test_contact_exists_in_database",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/test_views.py": {
        "HUBAPITestCase.setUp": {
            "name": "setUp",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AuthenticatedAPITestCase.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FacilityCheckViewTests.test_filter_by_code": {
            "name": "test_filter_by_code",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WhatsAppContactCheckViewTests.setUp": {
            "name": "setUp",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WhatsAppContactCheckViewTests.test_authentication_required": {
            "name": "test_authentication_required",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WhatsAppContactCheckViewTests.test_get_statuses": {
            "name": "test_get_statuses",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "WhatsAppContactCheckViewTests.test_prune_contacts_permission_required": {
            "name": "test_prune_contacts_permission_required",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WhatsAppContactCheckViewTests.test_prune_contacts": {
            "name": "test_prune_contacts",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/urls.py": {},
    "ndoh-hub-develop/registrations/views.py": {
        "FacilityCheckView.get": {
            "name": "get",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "WhatsAppContactCheckViewSet.get_status": {
            "name": "get_status",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blocking": [],
                "msisdn": []
            }
        },
        "WhatsAppContactCheckViewSet.create": {
            "name": "create",
            "location": 116,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "WhatsAppContactCheckViewSet.prune": {
            "name": "prune",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "ndoh-hub-develop/registrations/__init__.py": {},
    "ndoh-hub-develop/registrations/management/__init__.py": {},
    "ndoh-hub-develop/registrations/management/commands/fix_pmtct_registrations.py": {
        "Command.handle": {
            "name": "handle",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.log": {
            "name": "log",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "log": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/jembi_submit_events.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/repopulate_subscriptions.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.log": {
            "name": "log",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "log": []
            }
        },
        "Command.count_subscriptions": {
            "name": "count_subscriptions",
            "location": 124,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "sbm_client": [],
                "registration": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/report_pmtct_registrations.py": {
        "Command.query": {
            "name": "query",
            "location": 11,
            "return": [
                "Generator[(dict, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "query_string": []
            }
        },
        "Command.query_to_csv": {
            "name": "query_to_csv",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": [],
                "column_names": [],
                "query": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/report_pmtct_risks.py": {
        "mk_validator": {
            "name": "mk_validator",
            "location": 19,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "django_validator": []
            }
        },
        "parse_cursor_params": {
            "name": "parse_cursor_params",
            "location": 27,
            "return": [
                "dict"
            ],
            "arguments": {
                "cursor": []
            }
        },
        "mk_validator.validator": {
            "name": "validator",
            "location": 20,
            "return": [],
            "arguments": {
                "inputstr": []
            }
        },
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.get_identity": {
            "name": "get_identity",
            "location": 137,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ids_client": [],
                "identity": []
            }
        },
        "Command.handle.add_to_result": {
            "name": "add_to_result",
            "location": 70,
            "return": [],
            "arguments": {
                "risk": [],
                "reg": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/revalidate_registrations.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.log": {
            "name": "log",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "log": []
            }
        },
        "Command.count_subscriptions": {
            "name": "count_subscriptions",
            "location": 105,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "sbm_client": [],
                "registration": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/service_info_subscriptions.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.service_info_sequence": {
            "name": "service_info_sequence",
            "location": 94,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "short_name": [
                    "str"
                ],
                "sequence": [
                    "int"
                ]
            }
        },
        "Command.identity_has_service_info_subscription": {
            "name": "identity_has_service_info_subscription",
            "location": 139,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "messageset_mapping": [
                    "dict"
                ],
                "identity": [
                    "str"
                ]
            }
        },
        "Command.service_info_sequence.calculate_position": {
            "name": "calculate_position",
            "location": 100,
            "return": [],
            "arguments": {
                "frequency": [],
                "offset": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/teenmomconnect_postbirth_subscriptions.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.extract_contacts_from_workbook": {
            "name": "extract_contacts_from_workbook",
            "location": 26,
            "return": [
                "Generator[(Contact, Any, None)]"
            ],
            "arguments": {
                "file_path": []
            }
        },
        "Command.validate_msisdn": {
            "name": "validate_msisdn",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "msisdn": []
            }
        },
        "Command.validate_language": {
            "name": "validate_language",
            "location": 69,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "language": []
            }
        },
        "Command.create_or_update_identity": {
            "name": "create_or_update_identity",
            "location": 88,
            "return": [
                "Any"
            ],
            "arguments": {
                "msisdn": [],
                "language": []
            }
        },
        "Command._get_messageset": {
            "name": "_get_messageset",
            "location": 117,
            "return": [],
            "arguments": {
                "short_name": []
            }
        },
        "Command.create_subscription_postbirth": {
            "name": "create_subscription_postbirth",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "identity": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/update_initial_sequence.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.log": {
            "name": "log",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level": [],
                "msg": []
            }
        },
        "Command.warning": {
            "name": "warning",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Command.success": {
            "name": "success",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/upload_clinic_codes.py": {
        "Command.add_arguments": {
            "name": "add_arguments",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "Command.normalise_location": {
            "name": "normalise_location",
            "location": 18,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "location": []
            }
        },
        "Command.handle": {
            "name": "handle",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Command.log": {
            "name": "log",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "level": [],
                "msg": []
            }
        },
        "Command.success": {
            "name": "success",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "msg": []
            }
        },
        "Command.normalise_location.fractional_part": {
            "name": "fractional_part",
            "location": 23,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/_utils.py": {
        "validate_and_return_url": {
            "name": "validate_and_return_url",
            "location": 4,
            "return": [
                "_T0"
            ],
            "arguments": {
                "url": [
                    "_T0"
                ]
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/__init__.py": {},
    "ndoh-hub-develop/registrations/management/commands/tests/test_jembi_submit_events.py": {
        "JembiSubmitEventsTests.test_since_filter": {
            "name": "test_since_filter",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "JembiSubmitEventsTests.test_until_filter": {
            "name": "test_until_filter",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "JembiSubmitEventsTests.test_all_filter": {
            "name": "test_all_filter",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "JembiSubmitEventsTests.test_submit_filter": {
            "name": "test_submit_filter",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "JembiSubmitEventsTests.test_submit_event": {
            "name": "test_submit_event",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/tests/test_service_info_subscriptions.py": {
        "ServiceInfoSubscriptionsTests.test_required_parameters": {
            "name": "test_required_parameters",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceInfoSubscriptionsTests.test_identity_has_service_info_subscription_true": {
            "name": "test_identity_has_service_info_subscription_true",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServiceInfoSubscriptionsTests.test_identity_has_service_info_subscription_false": {
            "name": "test_identity_has_service_info_subscription_false",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServiceInfoSubscriptionsTests.test_service_info_subscriptions": {
            "name": "test_service_info_subscriptions",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ServiceInfoSubscriptionsTests.test_service_info_sequence": {
            "name": "test_service_info_sequence",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/tests/test_teenmomconnect_postbirth_subscriptions.py": {
        "randomword": {
            "name": "randomword",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "length": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.generate_workbook": {
            "name": "generate_workbook",
            "location": 29,
            "return": [
                "tempfile._TemporaryFileWrapper[bytes]"
            ],
            "arguments": {
                "contacts": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.generate_identity": {
            "name": "generate_identity",
            "location": 53,
            "return": [
                "Dict[(str, Union[(str, Dict[(str, Union[(str, Dict[(str, Dict[(_T0, Dict[(str, bool)])])], _T1)])])])]"
            ],
            "arguments": {
                "msisdn": [
                    "_T0"
                ],
                "language": [
                    "_T1"
                ]
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_extract_contacts_from_workbook": {
            "name": "test_extract_contacts_from_workbook",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_extract_contacts_from_workbook_multiple_sheets": {
            "name": "test_extract_contacts_from_workbook_multiple_sheets",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_extract_contacts_from_workbook_no_phone_header": {
            "name": "test_extract_contacts_from_workbook_no_phone_header",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_extract_contacts_from_workbook_no_language_header": {
            "name": "test_extract_contacts_from_workbook_no_language_header",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_extract_contacts_from_workbook_no_header": {
            "name": "test_extract_contacts_from_workbook_no_header",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_validate_msisdn": {
            "name": "test_validate_msisdn",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_validate_msisdn_not_parsable": {
            "name": "test_validate_msisdn_not_parsable",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_validate_msisdn_not_possible": {
            "name": "test_validate_msisdn_not_possible",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_validate_msisdn_not_valid": {
            "name": "test_validate_msisdn_not_valid",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_validate_language": {
            "name": "test_validate_language",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_validate_language_invalid": {
            "name": "test_validate_language_invalid",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_validate_language_not_in_seed": {
            "name": "test_validate_language_not_in_seed",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_create_or_update_identity_exists": {
            "name": "test_create_or_update_identity_exists",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_create_or_update_identity_does_not_exist": {
            "name": "test_create_or_update_identity_does_not_exist",
            "location": 221,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_create_or_update_identity_language_incorrect": {
            "name": "test_create_or_update_identity_language_incorrect",
            "location": 239,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_create_subscription_postbirth_existing": {
            "name": "test_create_subscription_postbirth_existing",
            "location": 261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_create_subscription_postbirth_non_existing": {
            "name": "test_create_subscription_postbirth_non_existing",
            "location": 285,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_run_command": {
            "name": "test_run_command",
            "location": 326,
            "return": [],
            "arguments": {
                "self": [],
                "create_subscription_postbirth": [],
                "create_or_update_identity": []
            }
        },
        "TeenMomConnectPostbirthSubscriptionsCommandTests.test_run_command.identity_side_effect": {
            "name": "identity_side_effect",
            "location": 334,
            "return": [],
            "arguments": {
                "msisdn": [],
                "lang": []
            }
        }
    },
    "ndoh-hub-develop/registrations/management/commands/tests/test_upload_clinic_codes.py": {
        "UploadClinicCodesTests.test_successful_upload": {
            "name": "test_successful_upload",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/registrations/migrations/0001_initial.py": {},
    "ndoh-hub-develop/registrations/migrations/0002_auto_20160721_1536.py": {},
    "ndoh-hub-develop/registrations/migrations/0003_auto_20160721_1536.py": {},
    "ndoh-hub-develop/registrations/migrations/0004_auto_20160722_1019.py": {},
    "ndoh-hub-develop/registrations/migrations/0005_rename_limited_authority_to_partial.py": {},
    "ndoh-hub-develop/registrations/migrations/0006_hw_partial_data_migration.py": {
        "move_limited_to_partial": {
            "name": "move_limited_to_partial",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "move_partial_to_limited": {
            "name": "move_partial_to_limited",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "ndoh-hub-develop/registrations/migrations/0007_auto_20170615_1008.py": {},
    "ndoh-hub-develop/registrations/migrations/0008_auto_20170928_1025.py": {},
    "ndoh-hub-develop/registrations/migrations/0009_auto_20171027_0928.py": {},
    "ndoh-hub-develop/registrations/migrations/0010_auto_20180212_0802.py": {},
    "ndoh-hub-develop/registrations/migrations/0011_auto_20180227_1517.py": {},
    "ndoh-hub-develop/registrations/migrations/0012_registration_external_id.py": {},
    "ndoh-hub-develop/registrations/migrations/0013_historicalpositiontracker_positiontracker.py": {},
    "ndoh-hub-develop/registrations/migrations/0014_auto_20180503_1418.py": {
        "create_rthb_nurseconnect_position_tracker": {
            "name": "create_rthb_nurseconnect_position_tracker",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "destroy_rthb_nurseconnect_position_tracker": {
            "name": "destroy_rthb_nurseconnect_position_tracker",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "ndoh-hub-develop/registrations/migrations/0015_auto_20181015_1002.py": {},
    "ndoh-hub-develop/registrations/migrations/0016_add_index_for_registrant_id.py": {},
    "ndoh-hub-develop/registrations/migrations/0017_create_whatsapp_contact.py": {},
    "ndoh-hub-develop/registrations/migrations/0018_add_subscription_check_permission.py": {},
    "ndoh-hub-develop/registrations/migrations/0019_add_whatsapp_postbirth_registration_type.py": {},
    "ndoh-hub-develop/registrations/migrations/0020_add_cclinic_code.py": {},
    "ndoh-hub-develop/registrations/migrations/0021_add_jembi_submission.py": {},
    "ndoh-hub-develop/registrations/migrations/0022_add_whatsapp_contact_v2.py": {},
    "ndoh-hub-develop/registrations/migrations/0023_migrate_wacontact_v1_data.py": {},
    "ndoh-hub-develop/registrations/migrations/0024_delete_whatsappcontact.py": {},
    "ndoh-hub-develop/registrations/migrations/0025_auto_20200921_1117.py": {},
    "ndoh-hub-develop/registrations/migrations/0026_auto_20200922_0946.py": {},
    "ndoh-hub-develop/registrations/migrations/0027_auto_20200922_1041.py": {},
    "ndoh-hub-develop/registrations/migrations/0028_auto_20210121_1406.py": {},
    "ndoh-hub-develop/registrations/migrations/__init__.py": {},
    "ndoh-hub-develop/scripts/add_field_for_stuck_registrations/add_field_to_stuck_registration_contacts.py": {
        "process": {
            "name": "process",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "contact_id": []
            }
        },
        "main": {
            "name": "main",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ndoh-hub-develop/scripts/annotate_identity_data/annotate_identity_data.py": {
        "fetch": {
            "name": "fetch",
            "location": 12,
            "return": [
                "_T1"
            ],
            "arguments": {
                "msisdn": [],
                "row": [
                    "_T1"
                ],
                "fields": []
            }
        },
        "main": {
            "name": "main",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "ndoh-hub-develop/scripts/growgreat_extract/msisdn_from_details.py": {
        "get_msisdn": {
            "name": "get_msisdn",
            "location": 5,
            "return": [
                "Any"
            ],
            "arguments": {
                "details": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/async_archive_chats_step1.py": {
        "can_archive_msg": {
            "name": "can_archive_msg",
            "location": 35,
            "return": [
                "bool"
            ],
            "arguments": {
                "inbound": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/async_archive_chats_step2.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/bulk_archive_chats.py": {
        "get_whatsapp_messages": {
            "name": "get_whatsapp_messages",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "wa_id": []
            }
        },
        "archive_turn_conversation": {
            "name": "archive_turn_conversation",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "wa_id": [],
                "message_id": [],
                "reason": []
            }
        },
        "can_archive_msg": {
            "name": "can_archive_msg",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "inbound": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/collect_information.py": {
        "get_addresses": {
            "name": "get_addresses",
            "location": 11,
            "return": [
                "list"
            ],
            "arguments": {
                "addresses": []
            }
        },
        "process_identity": {
            "name": "process_identity",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "identities": [],
                "id": [],
                "details": [],
                "failed_msgs_count": []
            }
        },
        "process_optout": {
            "name": "process_optout",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "identities": [],
                "id": [],
                "created": [],
                "reason": []
            }
        },
        "process_registration": {
            "name": "process_registration",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "identities": [],
                "id": [],
                "data": []
            }
        },
        "process_change": {
            "name": "process_change",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "identities": [],
                "id": [],
                "action": [],
                "data": [],
                "created": []
            }
        },
        "process_subscription": {
            "name": "process_subscription",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "identities": [],
                "id": [],
                "name": [],
                "created_at": []
            }
        },
        "merge_dicts": {
            "name": "merge_dicts",
            "location": 166,
            "return": [
                "_T0"
            ],
            "arguments": {
                "d1": [
                    "_T0"
                ],
                "d2": []
            }
        },
        "deduplicate_msisdns": {
            "name": "deduplicate_msisdns",
            "location": 175,
            "return": [
                "dict"
            ],
            "arguments": {
                "identities": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/collect_sms_content.py": {
        "create_campaign": {
            "name": "create_campaign",
            "location": 40,
            "return": [
                "dict"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "group": [
                    "str"
                ]
            }
        },
        "create_event": {
            "name": "create_event",
            "location": 49,
            "return": [
                "dict"
            ],
            "arguments": {
                "offset": [
                    "int"
                ],
                "message": [
                    "dict"
                ],
                "label": [
                    "dict"
                ]
            }
        },
        "write_campaign": {
            "name": "write_campaign",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "short_name": [
                    "str"
                ],
                "campaign": [
                    "dict"
                ]
            }
        },
        "get_messages": {
            "name": "get_messages",
            "location": 77,
            "return": [
                "collections.defaultdict"
            ],
            "arguments": {
                "short_name": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/fix_auto_baby_switch_data.py": {
        "in_postbirth_group": {
            "name": "in_postbirth_group",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "contact": []
            }
        },
        "get_contact_msisdn": {
            "name": "get_contact_msisdn",
            "location": 50,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "contact": []
            }
        },
        "get_baby_dob_field": {
            "name": "get_baby_dob_field",
            "location": 56,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "fields": []
            }
        },
        "get_babyswitches": {
            "name": "get_babyswitches",
            "location": 63,
            "return": [
                "dict"
            ],
            "arguments": {
                "conn": []
            }
        },
        "get_optouts": {
            "name": "get_optouts",
            "location": 93,
            "return": [
                "dict"
            ],
            "arguments": {
                "conn": []
            }
        },
        "get_registrations": {
            "name": "get_registrations",
            "location": 123,
            "return": [
                "list"
            ],
            "arguments": {
                "conn": [],
                "babyswitches": [],
                "optouts": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/fix_auto_baby_switch_hub.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/fix_auto_baby_switch_jembi.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/fix_auto_baby_switch_rapidpro.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/fix_contact_urns.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/fix_duplicate_contacts.py": {
        "clear_fields_for_optouts": {
            "name": "clear_fields_for_optouts",
            "location": 34,
            "return": [
                "_T0"
            ],
            "arguments": {
                "contact_fields": [
                    "_T0"
                ]
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/postbirth_contacts_without_events.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/prebirth_contacts_without_events.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/retry_requests.py": {},
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/sync_fallback_channel.py": {
        "get_turn_contact_details": {
            "name": "get_turn_contact_details",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "wa_id": []
            }
        },
        "update_turn_contact_details": {
            "name": "update_turn_contact_details",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "wa_id": [],
                "details": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/test_collect_information.py": {
        "GetAddressesTests.test_ignore_invalid_numbers": {
            "name": "test_ignore_invalid_numbers",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetAddressesTests.test_normalises_numbers": {
            "name": "test_normalises_numbers",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetAddressesTests.test_default": {
            "name": "test_default",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetAddressesTests.test_optout": {
            "name": "test_optout",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GetAddressesTests.test_multiple": {
            "name": "test_multiple",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessIdentityTests.test_all_identity_details_stored": {
            "name": "test_all_identity_details_stored",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessIdentityTests.test_no_fields": {
            "name": "test_no_fields",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessOptOutTests.test_optout_added": {
            "name": "test_optout_added",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessOptOutTests.test_replace_optout": {
            "name": "test_replace_optout",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessOptOutTests.test_skip_optout": {
            "name": "test_skip_optout",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessRegistrationTests.test_all_fields": {
            "name": "test_all_fields",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessRegistrationTests.test_no_overwrite": {
            "name": "test_no_overwrite",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessRegistrationTests.test_no_fields": {
            "name": "test_no_fields",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessChangeTests.test_unknown_action": {
            "name": "test_unknown_action",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessChangeTests.test_optout": {
            "name": "test_optout",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessChangeTests.test_optout_overwrite": {
            "name": "test_optout_overwrite",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessChangeTests.test_optout_no_overwrite": {
            "name": "test_optout_no_overwrite",
            "location": 387,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessChangeTests.test_babyswitch_create": {
            "name": "test_babyswitch_create",
            "location": 403,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessChangeTests.test_babyswitch_add": {
            "name": "test_babyswitch_add",
            "location": 425,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessSubscriptionTests.test_channel_prefer_whatsapp": {
            "name": "test_channel_prefer_whatsapp",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessSubscriptionTests.test_subscription_types": {
            "name": "test_subscription_types",
            "location": 474,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DeduplicateMSISDNsTests.test_info_combined": {
            "name": "test_info_combined",
            "location": 516,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/test_upload_to_rapidpro.py": {
        "FieldsFromContactTests.test_no_fields": {
            "name": "test_no_fields",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FieldsFromContactTests.test_field_values": {
            "name": "test_field_values",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/upload_to_rapidpro.py": {
        "fields_from_contact": {
            "name": "fields_from_contact",
            "location": 14,
            "return": [
                "Dict[(Any, Dict[(str, Any)])]"
            ],
            "arguments": {
                "field_mapping": [],
                "contact": []
            }
        },
        "fields_from_contact.boolean_field": {
            "name": "boolean_field",
            "location": 20,
            "return": [],
            "arguments": {
                "field": [],
                "value": []
            }
        },
        "fields_from_contact.normalize_timestamp": {
            "name": "normalize_timestamp",
            "location": 26,
            "return": [],
            "arguments": {
                "value": []
            }
        },
        "fields_from_contact.datetime_field": {
            "name": "datetime_field",
            "location": 38,
            "return": [],
            "arguments": {
                "field": [],
                "value": []
            }
        },
        "fields_from_contact.string_field": {
            "name": "string_field",
            "location": 43,
            "return": [],
            "arguments": {
                "field": [],
                "value": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_rapidpro/__init__.py": {},
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/base.py": {
        "BaseMigration.get_template_variables": {
            "name": "get_template_variables",
            "location": 10,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "BaseMigration.get_template_name": {
            "name": "get_template_name",
            "location": 13,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "BaseMigration.run": {
            "name": "run",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input": [],
                "output": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/loss.py": {
        "LossMigration.get_template_variables": {
            "name": "get_template_variables",
            "location": 9,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/pmtct_postbirth1.py": {
        "PMTCTPostbirth1Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "PMTCTPostbirth1Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 13,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/pmtct_postbirth2.py": {
        "PMTCTPostbirth2Migration.get_template_name": {
            "name": "get_template_name",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "PMTCTPostbirth2Migration.get_weeks_from_sequence_number": {
            "name": "get_weeks_from_sequence_number",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "PMTCTPostbirth2Migration.get_months_from_sequence_number": {
            "name": "get_months_from_sequence_number",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "PMTCTPostbirth2Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 25,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/pmtct_prebirth1.py": {
        "PMTCTPrebirth1Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "PMTCTPrebirth1Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/pmtct_prebirth2.py": {
        "PMTCTPrebirth2Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "PMTCTPrebirth2Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/pmtct_prebirth3.py": {
        "PMTCTPrebirth3Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "PMTCTPrebirth3Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/postbirth1.py": {
        "Postbirth1Migration.get_template_name": {
            "name": "get_template_name",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Postbirth1Migration.get_weeks_from_sequence_number": {
            "name": "get_weeks_from_sequence_number",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Postbirth1Migration.get_months_from_sequence_number": {
            "name": "get_months_from_sequence_number",
            "location": 17,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Postbirth1Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 21,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/postbirth2.py": {
        "Postbirth2Migration.get_months_from_sequence_number": {
            "name": "get_months_from_sequence_number",
            "location": 11,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Postbirth2Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 18,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/postbirth3.py": {
        "Postbirth3Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 9,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/prebirth1.py": {
        "Prebirth1Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Prebirth1Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/prebirth2.py": {
        "Prebirth2Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Prebirth2Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/prebirth3.py": {
        "Prebirth3Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Prebirth3Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/prebirth4.py": {
        "Prebirth4Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Prebirth4Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/prebirth5.py": {
        "Prebirth5Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Prebirth5Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/prebirth6.py": {
        "Prebirth6Migration.sequence_number_to_weeks": {
            "name": "sequence_number_to_weeks",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sequence_number": []
            }
        },
        "Prebirth6Migration.get_template_variables": {
            "name": "get_template_variables",
            "location": 14,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/public.py": {
        "PublicMigration.get_template_variables": {
            "name": "get_template_variables",
            "location": 9,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/serviceinfo.py": {
        "ServiceInfo.get_template_variables": {
            "name": "get_template_variables",
            "location": 9,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/__init__.py": {},
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_loss.py": {
        "LossMigrationTests.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LossMigrationTests.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_pmtct_postbirth1.py": {
        "TestPMTCTPostbirth1.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPostbirth1.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPostbirth1.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_pmtct_postbirth2.py": {
        "PMTCTPostbirth2MigrationTests.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTPostbirth2MigrationTests.test_get_template_name": {
            "name": "test_get_template_name",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTPostbirth2MigrationTests.test_get_template_variables_up_to_7_weeks": {
            "name": "test_get_template_variables_up_to_7_weeks",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTPostbirth2MigrationTests.test_get_template_variables_over_7_weeks": {
            "name": "test_get_template_variables_over_7_weeks",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTPostbirth2MigrationTests.test_get_weeks_from_sequence_number": {
            "name": "test_get_weeks_from_sequence_number",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PMTCTPostbirth2MigrationTests.test_get_months_from_sequence_number": {
            "name": "test_get_months_from_sequence_number",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_pmtct_prebirth1.py": {
        "TestPMTCTPrebirth1.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPrebirth1.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPrebirth1.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_pmtct_prebirth2.py": {
        "TestPMTCTPrebirth2.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPrebirth2.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPrebirth2.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_pmtct_prebirth3.py": {
        "TestPMTCTPrebirth3.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPrebirth3.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPMTCTPrebirth3.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_postbirth1.py": {
        "Postbirth1MigrationTests.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth1MigrationTests.test_get_template_name": {
            "name": "test_get_template_name",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth1MigrationTests.test_get_template_variables_up_to_7_weeks": {
            "name": "test_get_template_variables_up_to_7_weeks",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth1MigrationTests.test_get_template_variables_over_7_weeks": {
            "name": "test_get_template_variables_over_7_weeks",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth1MigrationTests.test_get_weeks_from_sequence_number": {
            "name": "test_get_weeks_from_sequence_number",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth1MigrationTests.test_get_months_from_sequence_number": {
            "name": "test_get_months_from_sequence_number",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_postbirth2.py": {
        "Postbirth2MigrationTests.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth2MigrationTests.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth2MigrationTests.test_get_months_from_sequence_number": {
            "name": "test_get_months_from_sequence_number",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_postbirth3.py": {
        "Postbirth3MigrationTests.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Postbirth3MigrationTests.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_prebirth1.py": {
        "TestPrebirth1.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrebirth1.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrebirth1.test_prebirth_1": {
            "name": "test_prebirth_1",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_prebirth2.py": {
        "TestPrebirth2.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrebirth2.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPrebirth2.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_prebirth3.py": {
        "Testprebirth3.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth3.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth3.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_prebirth4.py": {
        "Testprebirth4.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth4.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth4.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_prebirth5.py": {
        "Testprebirth5.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth5.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth5.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_prebirth6.py": {
        "Testprebirth6.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth6.test_sequence_number_to_weeks": {
            "name": "test_sequence_number_to_weeks",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Testprebirth6.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_public.py": {
        "PublicMigrationTests.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PublicMigrationTests.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/test_serviceinfo.py": {
        "ServiceInfoTests.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceInfoTests.test_get_template_variables": {
            "name": "test_get_template_variables",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/migrate_to_whatsapp_templates/tests/__init__.py": {},
    "ndoh-hub-develop/scripts/resubmit_jembi_requests/resubmit_recent_jembi_errors.py": {},
    "ndoh-hub-develop/scripts/upload_whatsapp_templates/test_upload_whatsapp_templates.py": {
        "UploadWhatsAppTemplatesTests.test_template_category": {
            "name": "test_template_category",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadWhatsAppTemplatesTests.test_template_body": {
            "name": "test_template_body",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadWhatsAppTemplatesTests.test_template_language": {
            "name": "test_template_language",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadWhatsAppTemplatesTests.test_parse_templates": {
            "name": "test_parse_templates",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UploadWhatsAppTemplatesTests.test_submit_template": {
            "name": "test_submit_template",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/scripts/upload_whatsapp_templates/upload_whatsapp_templates.py": {
        "length_limit": {
            "name": "length_limit",
            "location": 10,
            "return": [
                "Callable[([Any, Any, Any], Any)]"
            ],
            "arguments": {
                "limit": []
            }
        },
        "parse_templates": {
            "name": "parse_templates",
            "location": 48,
            "return": [
                "List[Template]"
            ],
            "arguments": {
                "args": []
            }
        },
        "submit_template": {
            "name": "submit_template",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "args": [],
                "session": [],
                "template": []
            }
        },
        "length_limit.validate_length": {
            "name": "validate_length",
            "location": 11,
            "return": [],
            "arguments": {
                "instance": [],
                "attribute": [],
                "value": []
            }
        }
    },
    "ndoh-hub-develop/seaworthy/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "pytest_report_header": {
            "name": "pytest_report_header",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "config": []
            }
        }
    },
    "ndoh-hub-develop/seaworthy/fixtures.py": {
        "HubContainer.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "db_url": [],
                "image": []
            }
        },
        "HubContainer.base_kwargs": {
            "name": "base_kwargs",
            "location": 16,
            "return": [
                "Dict[(str, Dict[(str, Any)])]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ndoh-hub-develop/seaworthy/test.py": {
        "mime_type": {
            "name": "mime_type",
            "location": 6,
            "return": [
                "str"
            ],
            "arguments": {
                "content_type": []
            }
        },
        "TestHubContainer.test_db_tables_created": {
            "name": "test_db_tables_created",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hub_container": [],
                "postgresql_container": []
            }
        },
        "TestHubContainer.test_admin_page": {
            "name": "test_admin_page",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hub_container": [],
                "postgresql_container": []
            }
        }
    },
    "ndoh-hub-develop/tools/add-identity-to-jembi-csv.py": {}
}
{
    "newstler-master/manage.py": {},
    "newstler-master/setup.py": {
        "next_version": {
            "name": "next_version",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "version": []
            }
        }
    },
    "newstler-master/django_app/admin.py": {},
    "newstler-master/django_app/apps.py": {},
    "newstler-master/django_app/models.py": {
        "UserMetaInformationModel.__str__": {
            "name": "__str__",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsTag.__str__": {
            "name": "__str__",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "NewsItem.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "newstler-master/django_app/__init__.py": {},
    "newstler-master/django_app/migrations/0001_initial.py": {},
    "newstler-master/django_app/migrations/0002_newsitem.py": {},
    "newstler-master/django_app/migrations/0003_auto_20170827_0224.py": {},
    "newstler-master/django_app/migrations/__init__.py": {},
    "newstler-master/newstler_site/config.py": {
        "define_options": {
            "name": "define_options",
            "location": 14,
            "return": [
                "configparser.ConfigParser"
            ],
            "arguments": {}
        }
    },
    "newstler-master/newstler_site/__init__.py": {
        "_version": {
            "name": "_version",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "newstler-master/newstler_site/django_facade/auth.py": {
        "EmailBackend.authenticate": {
            "name": "authenticate",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "email": [],
                "password": []
            }
        }
    },
    "newstler-master/newstler_site/django_facade/forms.py": {
        "RegistrationForm.clean_email": {
            "name": "clean_email",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RegistrationForm.clean_password2": {
            "name": "clean_password2",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "newstler-master/newstler_site/django_facade/handlers.py": {
        "anonymous_required": {
            "name": "anonymous_required",
            "location": 33,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "anonymous_required.decorator": {
            "name": "decorator",
            "location": 36,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "AuthRequestHandler.login_page": {
            "name": "login_page",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "template_name": []
            }
        },
        "AuthRequestHandler.register": {
            "name": "register",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "template_name": []
            }
        },
        "AuthRequestHandler.logout_page": {
            "name": "logout_page",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "NewstlerHandler.index": {
            "name": "index",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "template_name": []
            }
        },
        "NewstlerHandler.news_page": {
            "name": "news_page",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "template_name": []
            }
        },
        "LinkedInHandler.linkedin_endpoint": {
            "name": "linkedin_endpoint",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "newstler-master/newstler_site/django_facade/settings.py": {},
    "newstler-master/newstler_site/django_facade/urls.py": {},
    "newstler-master/newstler_site/django_facade/wsgi.py": {},
    "newstler-master/newstler_site/django_facade/__init__.py": {},
    "newstler-master/newstler_site/external_services/linkedin_client.py": {
        "LinkedInClient.authorization_endpoint": {
            "name": "authorization_endpoint",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LinkedInClient.get_access_token": {
            "name": "get_access_token",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "auth_code": []
            }
        },
        "LinkedInClient.get_user_data": {
            "name": "get_user_data",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LinkedInClient.session": {
            "name": "session",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "access_token": []
            }
        },
        "FakeLinkedInClient.authorization_endpoint": {
            "name": "authorization_endpoint",
            "location": 40,
            "return": [
                "Tuple[(uuid.UUID, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeLinkedInClient.get_access_token": {
            "name": "get_access_token",
            "location": 43,
            "return": [
                "AccessTokenResponse"
            ],
            "arguments": {
                "self": [],
                "auth_code": []
            }
        },
        "FakeLinkedInClient.get_user_data": {
            "name": "get_user_data",
            "location": 46,
            "return": [
                "UserData"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeLinkedInClient.session": {
            "name": "session",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "access_token": []
            }
        },
        "RESTError.__init__": {
            "name": "__init__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error": []
            }
        },
        "RestLinkedInClient.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestLinkedInClient.authorization_endpoint": {
            "name": "authorization_endpoint",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RestLinkedInClient.__validate_response": {
            "name": "__validate_response",
            "location": 84,
            "return": [],
            "arguments": {
                "response": [],
                "expected_codes": []
            }
        },
        "RestLinkedInClient.get_access_token": {
            "name": "get_access_token",
            "location": 89,
            "return": [
                "AccessTokenResponse"
            ],
            "arguments": {
                "self": [],
                "auth_code": []
            }
        },
        "RestLinkedInClient.session": {
            "name": "session",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "access_token": []
            }
        },
        "RestLinkedInClient.get_user_data": {
            "name": "get_user_data",
            "location": 117,
            "return": [
                "Optional[UserData]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "newstler-master/newstler_site/external_services/news_storage.py": {
        "NewsStorage.get_news_by_user_data": {
            "name": "get_news_by_user_data",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user_data": []
            }
        },
        "FakeNewsStorage.get_news_by_user_data": {
            "name": "get_news_by_user_data",
            "location": 26,
            "return": [
                "List[NewsArticle]"
            ],
            "arguments": {
                "self": [],
                "user_data": []
            }
        },
        "DjangoORMBasedStorage.get_news_by_user_data": {
            "name": "get_news_by_user_data",
            "location": 31,
            "return": [
                "Generator[(NewsArticle, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "user_data": []
            }
        }
    },
    "newstler-master/newstler_site/external_services/service_registry.py": {
        "ServiceRegistry.get": {
            "name": "get",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ServiceRegistry.configure": {
            "name": "configure",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "configured": []
            }
        },
        "ServiceRegistry.linkedin": {
            "name": "linkedin",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServiceRegistry.news_storage": {
            "name": "news_storage",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigDrivenServiceRegistry.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": []
            }
        },
        "ConfigDrivenServiceRegistry.linkedin": {
            "name": "linkedin",
            "location": 64,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigDrivenServiceRegistry._cached_linkedin": {
            "name": "_cached_linkedin",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConfigDrivenServiceRegistry.news_storage": {
            "name": "news_storage",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConfigDrivenServiceRegistry._cached_news_storage": {
            "name": "_cached_news_storage",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "newstler-master/newstler_site/external_services/__init__.py": {},
    "newstler-master/newstler_site/tests_newstler_site/conftest.py": {
        "pytest_configure": {
            "name": "pytest_configure",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "make_mock_news_storage": {
            "name": "make_mock_news_storage",
            "location": 28,
            "return": [
                "unittest.mock.NonCallableMock"
            ],
            "arguments": {}
        },
        "news_storage": {
            "name": "news_storage",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "newstler-master/newstler_site/tests_newstler_site/test_news_storage.py": {
        "test_get_news_by_user_data_python": {
            "name": "test_get_news_by_user_data_python",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "newstler-master/newstler_site/tests_newstler_site/__init__.py": {}
}
{
    "nrw-klassen-python-master/01 Datenstrukturklassen/01 linear/list.py": {
        "List.__init__": {
            "name": "__init__",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.is_empty": {
            "name": "is_empty",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.has_access": {
            "name": "has_access",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.next": {
            "name": "next",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.to_first": {
            "name": "to_first",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.to_last": {
            "name": "to_last",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.get_content": {
            "name": "get_content",
            "location": 124,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.set_content": {
            "name": "set_content",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "List.insert": {
            "name": "insert",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "List.append": {
            "name": "append",
            "location": 185,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "List.concat": {
            "name": "concat",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "p_list": []
            }
        },
        "List.remove": {
            "name": "remove",
            "location": 231,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.get_previous": {
            "name": "get_previous",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "p_node": []
            }
        },
        "List.ListNode.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "List.ListNode.get_content": {
            "name": "get_content",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.ListNode.set_content": {
            "name": "set_content",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "List.ListNode.get_next_node": {
            "name": "get_next_node",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "List.ListNode.set_next_node": {
            "name": "set_next_node",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "p_next": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/01 linear/list_tests.py": {
        "TestListNode.test_init": {
            "name": "test_init",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestListNode.test_next": {
            "name": "test_next",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestListNode.test_content": {
            "name": "test_content",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Testlist.test": {
            "name": "test",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Testlist.test_concat": {
            "name": "test_concat",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/01 linear/queue.py": {
        "Queue.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.is_empty": {
            "name": "is_empty",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.enqueue": {
            "name": "enqueue",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "Queue.dequeue": {
            "name": "dequeue",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.front": {
            "name": "front",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.QueueNode.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "Queue.QueueNode.get_next": {
            "name": "get_next",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Queue.QueueNode.set_next": {
            "name": "set_next",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "p_next": []
            }
        },
        "Queue.QueueNode.get_content": {
            "name": "get_content",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/01 linear/queue_tests.py": {
        "TestQueueNode.test_init": {
            "name": "test_init",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQueueNode.test_next": {
            "name": "test_next",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQueueNode.test_content": {
            "name": "test_content",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestQueue.test": {
            "name": "test",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/01 linear/stack.py": {
        "Stack.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stack.is_empty": {
            "name": "is_empty",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stack.push": {
            "name": "push",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "Stack.pop": {
            "name": "pop",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stack.top": {
            "name": "top",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stack.StackNode.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "Stack.StackNode.get_next": {
            "name": "get_next",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Stack.StackNode.set_next": {
            "name": "set_next",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "p_next": []
            }
        },
        "Stack.StackNode.get_content": {
            "name": "get_content",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/01 linear/stack_tests.py": {
        "TestStackNode.test_init": {
            "name": "test_init",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStackNode.test_next": {
            "name": "test_next",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStackNode.test_content": {
            "name": "test_content",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStack.test": {
            "name": "test",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/02 baum/binary_search_tree.py": {
        "BinarySearchTree.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.is_empty": {
            "name": "is_empty",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.insert": {
            "name": "insert",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "BinarySearchTree.get_content": {
            "name": "get_content",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.get_left_tree": {
            "name": "get_left_tree",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.get_right_tree": {
            "name": "get_right_tree",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.remove": {
            "name": "remove",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "BinarySearchTree.search": {
            "name": "search",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "BinarySearchTree.__ancestor_of_small_right": {
            "name": "__ancestor_of_small_right",
            "location": 198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.__get_node_of_left_successor": {
            "name": "__get_node_of_left_successor",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.__get_node_of_right_successor": {
            "name": "__get_node_of_right_successor",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinarySearchTree.BSTNode.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/02 baum/binary_search_tree_test.py": {
        "ComparableInt.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ComparableInt.is_greater": {
            "name": "is_greater",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "ci": []
            }
        },
        "ComparableInt.is_less": {
            "name": "is_less",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "ci": []
            }
        },
        "ComparableInt.is_equal": {
            "name": "is_equal",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "ci": []
            }
        },
        "TestBinarySearchTree.test_init": {
            "name": "test_init",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBinarySearchTree.test": {
            "name": "test",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/02 baum/binary_tree.py": {
        "BinaryTree.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": [],
                "left_tree": [],
                "right_tree": []
            }
        },
        "BinaryTree.is_empty": {
            "name": "is_empty",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinaryTree.set_content": {
            "name": "set_content",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "BinaryTree.get_content": {
            "name": "get_content",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinaryTree.set_left_tree": {
            "name": "set_left_tree",
            "location": 106,
            "return": [],
            "arguments": {
                "self": [],
                "p_tree": []
            }
        },
        "BinaryTree.set_right_tree": {
            "name": "set_right_tree",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "p_tree": []
            }
        },
        "BinaryTree.get_left_tree": {
            "name": "get_left_tree",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinaryTree.get_right_tree": {
            "name": "get_right_tree",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BinaryTree.BTNode.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/02 baum/binary_tree_test.py": {
        "TestBinaryTree.test_init_none": {
            "name": "test_init_none",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBinaryTree.test_init_content": {
            "name": "test_init_content",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBinaryTree.test_init_r_tree": {
            "name": "test_init_r_tree",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBinaryTree.test_init_l_tree": {
            "name": "test_init_l_tree",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/02 baum/comparable_content.py": {
        "ComparableContent.is_greater": {
            "name": "is_greater",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "ComparableContent.is_equal": {
            "name": "is_equal",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        },
        "ComparableContent.is_less": {
            "name": "is_less",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "p_content": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/03 graph/edge.py": {
        "Edge.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "p_vertex": [],
                "p_another_vertex": [],
                "p_weight": []
            }
        },
        "Edge.get_vertices": {
            "name": "get_vertices",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Edge.get_weight": {
            "name": "get_weight",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Edge.set_weight": {
            "name": "set_weight",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "p_weight": []
            }
        },
        "Edge.is_marked": {
            "name": "is_marked",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Edge.set_mark": {
            "name": "set_mark",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "p_mark": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/03 graph/graph.py": {
        "Graph.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Graph.get_vertices": {
            "name": "get_vertices",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Graph.get_edges": {
            "name": "get_edges",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "p_vertex": []
            }
        },
        "Graph.get_vertex": {
            "name": "get_vertex",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "p_id": []
            }
        },
        "Graph.add_vertex": {
            "name": "add_vertex",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "p_vertex": []
            }
        },
        "Graph.add_edge": {
            "name": "add_edge",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "p_edge": []
            }
        },
        "Graph.remove_vertex": {
            "name": "remove_vertex",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "p_vertex": []
            }
        },
        "Graph.remove_edge": {
            "name": "remove_edge",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "p_edge": []
            }
        },
        "Graph.set_all_vertex_marks": {
            "name": "set_all_vertex_marks",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "p_mark": []
            }
        },
        "Graph.set_all_edge_marks": {
            "name": "set_all_edge_marks",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "p_mark": []
            }
        },
        "Graph.all_vertices_marked": {
            "name": "all_vertices_marked",
            "location": 160,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Graph.all_edges_marked": {
            "name": "all_edges_marked",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Graph.get_neighbours": {
            "name": "get_neighbours",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "p_vertex": []
            }
        },
        "Graph.get_edge": {
            "name": "get_edge",
            "location": 205,
            "return": [],
            "arguments": {
                "self": [],
                "p_vertex": [],
                "p_another_vertex": []
            }
        },
        "Graph.is_empty": {
            "name": "is_empty",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/03 graph/graph_tests.py": {
        "TestGraph.test_add_vertex": {
            "name": "test_add_vertex",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGraph.test_add_edge": {
            "name": "test_add_edge",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestGraph.test_remove_vertex": {
            "name": "test_remove_vertex",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/01 Datenstrukturklassen/03 graph/vertex.py": {
        "Vertex.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "p_id": []
            }
        },
        "Vertex.get_id": {
            "name": "get_id",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.is_marked": {
            "name": "is_marked",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Vertex.set_mark": {
            "name": "set_mark",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "p_mark": []
            }
        }
    },
    "nrw-klassen-python-master/02 Datenbankklassen/01 Version fuer MySQL/database_connector.py": {
        "DatabaseConnector.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "p_ip": [],
                "p_port": [],
                "p_database": [],
                "p_username": [],
                "p_password": []
            }
        },
        "DatabaseConnector.execute_statement": {
            "name": "execute_statement",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "p_sql_statement": []
            }
        },
        "DatabaseConnector.get_current_query_result": {
            "name": "get_current_query_result",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnector.get_error_message": {
            "name": "get_error_message",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnector.close": {
            "name": "close",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/02 Datenbankklassen/01 Version fuer MySQL/database_connector_test.py": {
        "TestDatabaseConnector.test": {
            "name": "test",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/02 Datenbankklassen/01 Version fuer MySQL/query_result.py": {
        "QueryResult.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "p_data": [],
                "p_column_names": [],
                "p_column_types": []
            }
        },
        "QueryResult.get_data": {
            "name": "get_data",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_column_names": {
            "name": "get_column_names",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_column_types": {
            "name": "get_column_types",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_row_count": {
            "name": "get_row_count",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_column_count": {
            "name": "get_column_count",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/02 Datenbankklassen/02 Version fuer SQLite/database_connector.py": {
        "DatabaseConnector.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "p_ip": [],
                "p_port": [],
                "p_database": [],
                "p_username": [],
                "p_password": []
            }
        },
        "DatabaseConnector.execute_statement": {
            "name": "execute_statement",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "p_sql_statement": []
            }
        },
        "DatabaseConnector.get_current_query_result": {
            "name": "get_current_query_result",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnector.get_error_message": {
            "name": "get_error_message",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnector.close": {
            "name": "close",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/02 Datenbankklassen/02 Version fuer SQLite/database_connector_test.py": {
        "TestDatabaseConnector.test": {
            "name": "test",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/02 Datenbankklassen/02 Version fuer SQLite/query_result.py": {
        "QueryResult.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "p_data": [],
                "p_column_names": [],
                "p_column_types": []
            }
        },
        "QueryResult.get_data": {
            "name": "get_data",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_column_names": {
            "name": "get_column_names",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_column_types": {
            "name": "get_column_types",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_row_count": {
            "name": "get_row_count",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryResult.get_column_count": {
            "name": "get_column_count",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/03 Netzklassen/client.py": {
        "Client.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "p_ip": [],
                "p_port": []
            }
        },
        "Client.__receive_to_buffer": {
            "name": "__receive_to_buffer",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Client.__send_from_buffer": {
            "name": "__send_from_buffer",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Client.__run": {
            "name": "__run",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Client.close": {
            "name": "close",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Client.is_connected": {
            "name": "is_connected",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Client.send": {
            "name": "send",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "p_message": []
            }
        },
        "Client.process_message": {
            "name": "process_message",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "p_message": []
            }
        }
    },
    "nrw-klassen-python-master/03 Netzklassen/client_test.py": {
        "MyClient.process_message": {
            "name": "process_message",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "p_message": []
            }
        },
        "TestClient.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClient.tearDown": {
            "name": "tearDown",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestClient.test_client": {
            "name": "test_client",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/03 Netzklassen/connection.py": {
        "Connection.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "p_server_ip": [],
                "p_server_port": []
            }
        },
        "Connection.receive": {
            "name": "receive",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Connection.send": {
            "name": "send",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "p_message": []
            }
        },
        "Connection.close": {
            "name": "close",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/03 Netzklassen/connection_test.py": {
        "randomString": {
            "name": "randomString",
            "location": 8,
            "return": [],
            "arguments": {
                "stringLength": []
            }
        },
        "TestConnection.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConnection.tearDown": {
            "name": "tearDown",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConnection.test": {
            "name": "test",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestConnection.test_umlate": {
            "name": "test_umlate",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/03 Netzklassen/echo_test_server.py": {},
    "nrw-klassen-python-master/03 Netzklassen/server.py": {
        "Server.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "p_port": []
            }
        },
        "Server.__run": {
            "name": "__run",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.close": {
            "name": "close",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.is_open": {
            "name": "is_open",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.is_connected_to": {
            "name": "is_connected_to",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": []
            }
        },
        "Server.send": {
            "name": "send",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": [],
                "p_message": []
            }
        },
        "Server.send_to_all": {
            "name": "send_to_all",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "p_message": []
            }
        },
        "Server.close_connection": {
            "name": "close_connection",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": []
            }
        },
        "Server.process_message": {
            "name": "process_message",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": [],
                "process_message": []
            }
        },
        "Server.process_new_connection": {
            "name": "process_new_connection",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": []
            }
        },
        "Server.process_closing_connection": {
            "name": "process_closing_connection",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": []
            }
        },
        "Server.__find_client_handler": {
            "name": "__find_client_handler",
            "location": 152,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": []
            }
        },
        "Server.ClientHandler.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "socket": [],
                "p_ip": [],
                "p_port": []
            }
        },
        "Server.ClientHandler.ip": {
            "name": "ip",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.ClientHandler.port": {
            "name": "port",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.ClientHandler.close": {
            "name": "close",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.ClientHandler.receive": {
            "name": "receive",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Server.ClientHandler.send": {
            "name": "send",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "p_message": []
            }
        },
        "Server.ClientHandler.send_from_buffer": {
            "name": "send_from_buffer",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nrw-klassen-python-master/03 Netzklassen/server_test.py": {
        "MyServer.process_new_connection": {
            "name": "process_new_connection",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": []
            }
        },
        "MyServer.process_message": {
            "name": "process_message",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": [],
                "p_message": []
            }
        },
        "MyServer.process_closing_connection": {
            "name": "process_closing_connection",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "p_client_ip": [],
                "p_client_port": []
            }
        },
        "MyClient.process_message": {
            "name": "process_message",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "p_message": []
            }
        },
        "TestServer.setUp": {
            "name": "setUp",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestServer.tearDown": {
            "name": "tearDown",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestServer.test": {
            "name": "test",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    }
}
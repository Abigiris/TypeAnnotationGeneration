{
    "nycdb-k8s-loader-main/dbtool.py": {
        "get_tables_for_datasets": {
            "name": "get_tables_for_datasets",
            "location": 33,
            "return": [
                "list"
            ],
            "arguments": {
                "names": []
            }
        },
        "validate_and_get_dataset_names": {
            "name": "validate_and_get_dataset_names",
            "location": 43,
            "return": [
                "list"
            ],
            "arguments": {
                "dsnames": []
            }
        },
        "get_rowcounts": {
            "name": "get_rowcounts",
            "location": 61,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "conn": [],
                "table_names": [],
                "schema": []
            }
        },
        "print_rowcounts": {
            "name": "print_rowcounts",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "table_names": [],
                "schema": []
            }
        },
        "show_rowcounts": {
            "name": "show_rowcounts",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "db_url": [],
                "dataset_names": []
            }
        },
        "shell": {
            "name": "shell",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "db_url": []
            }
        },
        "list_lastmod": {
            "name": "list_lastmod",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "db_url": [],
                "dataset_names": []
            }
        },
        "reset_lastmod": {
            "name": "reset_lastmod",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "db_url": [],
                "dataset_names": []
            }
        },
        "grant_schema_read": {
            "name": "grant_schema_read",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "db_url": [],
                "user": [],
                "schema": []
            }
        },
        "generate_random_password": {
            "name": "generate_random_password",
            "location": 139,
            "return": [
                "str"
            ],
            "arguments": {
                "num_chars": []
            }
        },
        "create_user": {
            "name": "create_user",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "db_url": [],
                "user": []
            }
        },
        "main": {
            "name": "main",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [],
                "db_url": []
            }
        }
    },
    "nycdb-k8s-loader-main/k8s_build_jobs.py": {
        "get_env": {
            "name": "get_env",
            "location": 29,
            "return": [
                "Dict[(str, Union[(str, _T0)])]"
            ],
            "arguments": {
                "name": [
                    "_T0@@"
                ]
            }
        },
        "slugify": {
            "name": "slugify",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "name": []
            }
        },
        "main": {
            "name": "main",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "nycdb-k8s-loader-main/load_dataset.py": {
        "create_temp_schema_name": {
            "name": "create_temp_schema_name",
            "location": 68,
            "return": [
                "str"
            ],
            "arguments": {
                "dataset": []
            }
        },
        "get_temp_schema_prefix": {
            "name": "get_temp_schema_prefix",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "dataset": []
            }
        },
        "get_friendly_temp_schema_creation_time": {
            "name": "get_friendly_temp_schema_creation_time",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "name": []
            }
        },
        "get_temp_schemas": {
            "name": "get_temp_schemas",
            "location": 81,
            "return": [
                "list"
            ],
            "arguments": {
                "conn": [],
                "dataset": []
            }
        },
        "get_dataset_tables": {
            "name": "get_dataset_tables",
            "location": 91,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "get_tables_for_dataset": {
            "name": "get_tables_for_dataset",
            "location": 105,
            "return": [
                "list"
            ],
            "arguments": {
                "dataset": []
            }
        },
        "get_urls_for_dataset": {
            "name": "get_urls_for_dataset",
            "location": 112,
            "return": [
                "list"
            ],
            "arguments": {
                "dataset": []
            }
        },
        "get_all_create_function_sql": {
            "name": "get_all_create_function_sql",
            "location": 116,
            "return": [
                "str"
            ],
            "arguments": {
                "root_dir": [],
                "sql_files": []
            }
        },
        "get_all_create_function_sql_for_dataset": {
            "name": "get_all_create_function_sql_for_dataset",
            "location": 134,
            "return": [
                "str"
            ],
            "arguments": {
                "dataset": []
            }
        },
        "run_sql_if_nonempty": {
            "name": "run_sql_if_nonempty",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "sql": [],
                "initial_sql": []
            }
        },
        "collapse_whitespace": {
            "name": "collapse_whitespace",
            "location": 150,
            "return": [
                "str"
            ],
            "arguments": {
                "text": []
            }
        },
        "does_sql_create_functions": {
            "name": "does_sql_create_functions",
            "location": 154,
            "return": [
                "bool"
            ],
            "arguments": {
                "sql": []
            }
        },
        "drop_tables_if_they_exist": {
            "name": "drop_tables_if_they_exist",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "tables": [],
                "schema": []
            }
        },
        "save_and_reapply_permissions": {
            "name": "save_and_reapply_permissions",
            "location": 168,
            "return": [],
            "arguments": {
                "conn": [],
                "tables": [],
                "schema": []
            }
        },
        "ensure_schema_exists": {
            "name": "ensure_schema_exists",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "schema": []
            }
        },
        "create_and_enter_temporary_schema": {
            "name": "create_and_enter_temporary_schema",
            "location": 205,
            "return": [],
            "arguments": {
                "conn": [],
                "schema": []
            }
        },
        "change_table_schemas": {
            "name": "change_table_schemas",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "tables": [],
                "from_schema": [],
                "to_schema": []
            }
        },
        "sanity_check": {
            "name": "sanity_check",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_dbhash": {
            "name": "get_dbhash",
            "location": 253,
            "return": [
                "lib.dbhash.SqlDbHash"
            ],
            "arguments": {
                "conn": []
            }
        },
        "reset_files_if_test": {
            "name": "reset_files_if_test",
            "location": 258,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "dataset": [
                    "_T0@@"
                ],
                "config": []
            }
        },
        "load_dataset": {
            "name": "load_dataset",
            "location": 297,
            "return": [
                "None"
            ],
            "arguments": {
                "dataset": [],
                "config": [],
                "force_check_urls": []
            }
        },
        "init_rollbar": {
            "name": "init_rollbar",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "error_handling": {
            "name": "error_handling",
            "location": 366,
            "return": [],
            "arguments": {
                "dataset": []
            }
        },
        "main": {
            "name": "main",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": []
            }
        },
        "CommandError.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Config.nycdb_args": {
            "name": "nycdb_args",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nycdb-k8s-loader-main/scheduling.py": {
        "get_schedule_for_dataset": {
            "name": "get_schedule_for_dataset",
            "location": 69,
            "return": [
                "Any"
            ],
            "arguments": {
                "dataset": []
            }
        },
        "sanity_check": {
            "name": "sanity_check",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Schedule.k8s": {
            "name": "k8s",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "nycdb-k8s-loader-main/wowutil.py": {
        "run_wow_sql": {
            "name": "run_wow_sql",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "install_db_extensions": {
            "name": "install_db_extensions",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "populate_portfolios_table": {
            "name": "populate_portfolios_table",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "get_hpd_last_updated_date": {
            "name": "get_hpd_last_updated_date",
            "location": 75,
            "return": [
                "Optional[_datetime.datetime]"
            ],
            "arguments": {
                "conn": []
            }
        },
        "update_landlord_search_index": {
            "name": "update_landlord_search_index",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "build": {
            "name": "build",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "db_url": []
            }
        },
        "main": {
            "name": "main",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "argv": [],
                "db_url": []
            }
        }
    },
    "nycdb-k8s-loader-main/lib/dbhash.py": {
        "AbstractDbHash.get": {
            "name": "get",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "AbstractDbHash.__setitem__": {
            "name": "__setitem__",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "AbstractDbHash.__delitem__": {
            "name": "__delitem__",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "AbstractDbHash.__getitem__": {
            "name": "__getitem__",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "AbstractDbHash.__contains__": {
            "name": "__contains__",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "AbstractDbHash.set_or_delete": {
            "name": "set_or_delete",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "DictDbHash.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "DictDbHash.get": {
            "name": "get",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DictDbHash.__setitem__": {
            "name": "__setitem__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "DictDbHash.__delitem__": {
            "name": "__delitem__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SqlDbHash.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "conn": [],
                "table": [],
                "autocommit": []
            }
        },
        "SqlDbHash._init_db": {
            "name": "_init_db",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SqlDbHash._exec_sql": {
            "name": "_exec_sql",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "sql": [],
                "params": []
            }
        },
        "SqlDbHash.__setitem__": {
            "name": "__setitem__",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "SqlDbHash.__delitem__": {
            "name": "__delitem__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SqlDbHash.get": {
            "name": "get",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "nycdb-k8s-loader-main/lib/db_perms.py": {
        "exec_grant_sql": {
            "name": "exec_grant_sql",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "sql": []
            }
        },
        "test_table_exists": {
            "name": "test_table_exists",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "conn": [],
                "table_name": [],
                "schema": []
            }
        },
        "ensure_table_exists": {
            "name": "ensure_table_exists",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "table_name": [],
                "schema": []
            }
        },
        "get_grant_sql": {
            "name": "get_grant_sql",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "conn": [],
                "table_name": [],
                "schema": []
            }
        },
        "get_current_database": {
            "name": "get_current_database",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "conn": []
            }
        },
        "create_readonly_user": {
            "name": "create_readonly_user",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "user": [],
                "password": []
            }
        }
    },
    "nycdb-k8s-loader-main/lib/lastmod.py": {
        "LastmodInfo.read_from_dbhash": {
            "name": "read_from_dbhash",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": [],
                "dbhash": []
            }
        },
        "LastmodInfo.write_to_dbhash": {
            "name": "write_to_dbhash",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dbhash": []
            }
        },
        "LastmodInfo.from_response_headers": {
            "name": "from_response_headers",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "url": [],
                "headers": []
            }
        },
        "LastmodInfo.to_request_headers": {
            "name": "to_request_headers",
            "location": 32,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlModTracker.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "urls": [],
                "dbhash": []
            }
        },
        "UrlModTracker.did_any_urls_change": {
            "name": "did_any_urls_change",
            "location": 49,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "UrlModTracker.update_lastmods": {
            "name": "update_lastmods",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nycdb-k8s-loader-main/lib/parse_created_tables.py": {
        "get_identifiers": {
            "name": "get_identifiers",
            "location": 12,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "stmt": []
            }
        },
        "parse_created_tables": {
            "name": "parse_created_tables",
            "location": 22,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "sql": []
            }
        },
        "_parse_sql_file": {
            "name": "_parse_sql_file",
            "location": 42,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "parse_nycdb_created_tables": {
            "name": "parse_nycdb_created_tables",
            "location": 46,
            "return": [
                "list"
            ],
            "arguments": {
                "filenames": []
            }
        },
        "parse_created_tables_in_dir": {
            "name": "parse_created_tables_in_dir",
            "location": 50,
            "return": [
                "list"
            ],
            "arguments": {
                "root_dir": [],
                "filenames": []
            }
        }
    },
    "nycdb-k8s-loader-main/lib/slack.py": {
        "post_to_webhook": {
            "name": "post_to_webhook",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "payload": []
            }
        },
        "escape": {
            "name": "escape",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "text": []
            }
        },
        "send_payload": {
            "name": "send_payload",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "payload": []
            }
        },
        "sendmsg": {
            "name": "sendmsg",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "text": [],
                "is_safe": [],
                "stdout": []
            }
        },
        "hyperlink": {
            "name": "hyperlink",
            "location": 79,
            "return": [
                "str"
            ],
            "arguments": {
                "href": [],
                "text": []
            }
        }
    },
    "nycdb-k8s-loader-main/lib/__init__.py": {},
    "nycdb-k8s-loader-main/tests/conftest.py": {
        "exec_outside_of_transaction": {
            "name": "exec_outside_of_transaction",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "sql": []
            }
        },
        "drop_db": {
            "name": "drop_db",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "dbname": []
            }
        },
        "create_db": {
            "name": "create_db",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "dbname": []
            }
        },
        "db": {
            "name": "db",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "conn": {
            "name": "conn",
            "location": 76,
            "return": [],
            "arguments": {
                "db": []
            }
        },
        "make_conn": {
            "name": "make_conn",
            "location": 81,
            "return": [
                "psycopg2._psycopg.connection"
            ],
            "arguments": {}
        },
        "slack_outbox": {
            "name": "slack_outbox",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "test_db_env": {
            "name": "test_db_env",
            "location": 95,
            "return": [],
            "arguments": {
                "db": []
            }
        }
    },
    "nycdb-k8s-loader-main/tests/test_dbhash.py": {
        "_test_dbhash_implementation": {
            "name": "_test_dbhash_implementation",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "dbh": []
            }
        },
        "test_sqlite_sqldbhash": {
            "name": "test_sqlite_sqldbhash",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dictdbhash_impl": {
            "name": "test_dictdbhash_impl",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dictdbhash_defaults_to_empty_dict": {
            "name": "test_dictdbhash_defaults_to_empty_dict",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_postgres_sqldbhash": {
            "name": "test_postgres_sqldbhash",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        }
    },
    "nycdb-k8s-loader-main/tests/test_dbtool.py": {
        "test_get_tables_for_datasets_works": {
            "name": "test_get_tables_for_datasets_works",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validate_and_get_dataset_names_works": {
            "name": "test_validate_and_get_dataset_names_works",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validate_and_get_dataset_names_raises_error": {
            "name": "test_validate_and_get_dataset_names_raises_error",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_shell_works": {
            "name": "test_shell_works",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_rowcounts_works": {
            "name": "test_rowcounts_works",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "test_db_env": [],
                "capsys": []
            }
        },
        "load_dbhash": {
            "name": "load_dbhash",
            "location": 50,
            "return": [],
            "arguments": {}
        },
        "test_list_lastmod_works": {
            "name": "test_list_lastmod_works",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "db": [],
                "capsys": []
            }
        },
        "test_reset_lastmod_works": {
            "name": "test_reset_lastmod_works",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "db": [],
                "capsys": []
            }
        },
        "test_list_lastmod_works.list_lastmod": {
            "name": "list_lastmod",
            "location": 57,
            "return": [],
            "arguments": {}
        }
    },
    "nycdb-k8s-loader-main/tests/test_db_perms.py": {
        "test_get_current_database_works": {
            "name": "test_get_current_database_works",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_exec_grant_sql_does_nothing_if_sql_is_empty": {
            "name": "test_exec_grant_sql_does_nothing_if_sql_is_empty",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_grant_sql_raises_error_on_invalid_table": {
            "name": "test_get_grant_sql_raises_error_on_invalid_table",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        },
        "test_get_grant_sql_works": {
            "name": "test_get_grant_sql_works",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": []
            }
        }
    },
    "nycdb-k8s-loader-main/tests/test_k8s_build_jobs.py": {
        "test_build_jobs_works": {
            "name": "test_build_jobs_works",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nycdb-k8s-loader-main/tests/test_lastmod.py": {
        "TestLastmodInfo.test_read_from_dbhash_works": {
            "name": "test_read_from_dbhash_works",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLastmodInfo.test_write_to_dbhash_works": {
            "name": "test_write_to_dbhash_works",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLastmodInfo.test_from_response_headers_works": {
            "name": "test_from_response_headers_works",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLastmodInfo.test_to_request_headers_works": {
            "name": "test_to_request_headers_works",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUrlModTracker.setup": {
            "name": "setup",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUrlModTracker.test_it_updates_lastmods": {
            "name": "test_it_updates_lastmods",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "requests_mock": []
            }
        },
        "TestUrlModTracker.test_it_reports_unchanged_urls": {
            "name": "test_it_reports_unchanged_urls",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "requests_mock": []
            }
        },
        "TestUrlModTracker.test_it_raises_on_bad_http_responses": {
            "name": "test_it_raises_on_bad_http_responses",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "requests_mock": []
            }
        }
    },
    "nycdb-k8s-loader-main/tests/test_load_dataset.py": {
        "test_get_dataset_tables_included_derived_tables": {
            "name": "test_get_dataset_tables_included_derived_tables",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "get_row_counts": {
            "name": "get_row_counts",
            "location": 25,
            "return": [
                "dict"
            ],
            "arguments": {
                "conn": [],
                "dataset": []
            }
        },
        "test_get_urls_for_dataset_works": {
            "name": "test_get_urls_for_dataset_works",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_dataset_specific_test_logic": {
            "name": "run_dataset_specific_test_logic",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "conn": [],
                "dataset": []
            }
        },
        "test_load_dataset_works": {
            "name": "test_load_dataset_works",
            "location": 45,
            "return": [],
            "arguments": {
                "test_db_env": [],
                "dataset": []
            }
        },
        "test_load_dataset_fails_if_no_dataset_provided": {
            "name": "test_load_dataset_fails_if_no_dataset_provided",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "test_db_env": []
            }
        },
        "test_get_tables_for_dataset_raises_error_on_invalid_dataset": {
            "name": "test_get_tables_for_dataset_raises_error_on_invalid_dataset",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_temp_schema_naming_works": {
            "name": "test_temp_schema_naming_works",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_temp_schemas_works": {
            "name": "test_get_temp_schemas_works",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "test_db_env": [],
                "conn": []
            }
        },
        "test_exceptions_send_slack_msg": {
            "name": "test_exceptions_send_slack_msg",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "slack_outbox": []
            }
        },
        "test_unmodified_datasets_are_not_retrieved": {
            "name": "test_unmodified_datasets_are_not_retrieved",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "db": [],
                "requests_mock": [],
                "slack_outbox": []
            }
        },
        "test_does_sql_create_functions_works": {
            "name": "test_does_sql_create_functions_works",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_all_create_function_sql_for_dataset_conforms_to_expectations": {
            "name": "test_get_all_create_function_sql_for_dataset_conforms_to_expectations",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_all_create_function_sql_for_dataset_works": {
            "name": "test_get_all_create_function_sql_for_dataset_works",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nycdb-k8s-loader-main/tests/test_mypy.py": {
        "test_mypy_works": {
            "name": "test_mypy_works",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nycdb-k8s-loader-main/tests/test_parse_created_tables.py": {
        "test_it_returns_empty_list_when_no_tables_are_created": {
            "name": "test_it_returns_empty_list_when_no_tables_are_created",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_parses_create_table_statements": {
            "name": "test_it_parses_create_table_statements",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_parses_create_table_statements_2": {
            "name": "test_it_parses_create_table_statements_2",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_parses_original_create_table_statements_in_wow": {
            "name": "test_it_parses_original_create_table_statements_in_wow",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_parses_2020_create_table_statements_in_wow": {
            "name": "test_it_parses_2020_create_table_statements_in_wow",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_parses_2021_create_table_statements_in_wow": {
            "name": "test_it_parses_2021_create_table_statements_in_wow",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_parses_nycdb_files": {
            "name": "test_it_parses_nycdb_files",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nycdb-k8s-loader-main/tests/test_pyflakes.py": {
        "test_pyflakes_works": {
            "name": "test_pyflakes_works",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "nycdb-k8s-loader-main/tests/test_scheduling.py": {
        "test_k8s_works": {
            "name": "test_k8s_works",
            "location": 15,
            "return": [],
            "arguments": {
                "value": [],
                "expected": []
            }
        }
    },
    "nycdb-k8s-loader-main/tests/test_slack.py": {
        "test_sendmsg_returns_false_when_post_to_webhook_fails": {
            "name": "test_sendmsg_returns_false_when_post_to_webhook_fails",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "requests_mock": [],
                "monkeypatch": []
            }
        },
        "test_sendmsg_returns_true_on_success": {
            "name": "test_sendmsg_returns_true_on_success",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "requests_mock": [],
                "monkeypatch": []
            }
        },
        "test_sendmsg_returns_false_when_settings_are_not_defined": {
            "name": "test_sendmsg_returns_false_when_settings_are_not_defined",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "TestSendMsgPayload.test_text_is_escaped_by_default": {
            "name": "test_text_is_escaped_by_default",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSendMsgPayload.test_text_is_unescaped_if_specified": {
            "name": "test_text_is_unescaped_if_specified",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "nycdb-k8s-loader-main/tests/test_wowutil.py": {
        "load_dependee_datasets": {
            "name": "load_dependee_datasets",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "ensure_wow_works": {
            "name": "ensure_wow_works",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_it_works": {
            "name": "test_it_works",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "db": [],
                "slack_outbox": []
            }
        }
    },
    "nycdb-k8s-loader-main/tests/__init__.py": {}
}
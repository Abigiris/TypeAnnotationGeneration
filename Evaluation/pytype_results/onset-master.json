{
    "onset-master/setup.py": {},
    "onset-master/tasks.py": {
        "venv": {
            "name": "venv",
            "location": 7,
            "return": [],
            "arguments": {
                "c": [],
                "force": []
            }
        },
        "test": {
            "name": "test",
            "location": 17,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "type": {
            "name": "type",
            "location": 23,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "lint": {
            "name": "lint",
            "location": 29,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "isort": {
            "name": "isort",
            "location": 35,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "cover": {
            "name": "cover",
            "location": 41,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "format": {
            "name": "format",
            "location": 48,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "docs": {
            "name": "docs",
            "location": 54,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "hook": {
            "name": "hook",
            "location": 61,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "clean": {
            "name": "clean",
            "location": 67,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "build": {
            "name": "build",
            "location": 85,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "deploy": {
            "name": "deploy",
            "location": 91,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "commit": {
            "name": "commit",
            "location": 97,
            "return": [],
            "arguments": {
                "c": []
            }
        }
    },
    "onset-master/onset/__init__.py": {
        "union": {
            "name": "union",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "set"
                ],
                "t": [
                    "set"
                ]
            }
        },
        "difference": {
            "name": "difference",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "set"
                ],
                "t": [
                    "set"
                ]
            }
        },
        "intersection": {
            "name": "intersection",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "set"
                ],
                "t": [
                    "set"
                ]
            }
        },
        "disjunction": {
            "name": "disjunction",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "s": [
                    "set"
                ],
                "t": [
                    "set"
                ]
            }
        }
    },
    "onset-master/onset/__main__.py": {
        "from_oper": {
            "name": "from_oper",
            "location": 15,
            "return": [
                "Callable[([set, set], None)]"
            ],
            "arguments": {
                "oper": [
                    "str"
                ]
            }
        },
        "from_file": {
            "name": "from_file",
            "location": 35,
            "return": [
                "set"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "onset-master/tests/conftest.py": {},
    "onset-master/tests/test_onset.py": {
        "test_union_with_empty": {
            "name": "test_union_with_empty",
            "location": 13,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_union_with_self": {
            "name": "test_union_with_self",
            "location": 21,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_union_with_subset": {
            "name": "test_union_with_subset",
            "location": 30,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_union_is_superset": {
            "name": "test_union_is_superset",
            "location": 40,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_union_is_commutative": {
            "name": "test_union_is_commutative",
            "location": 48,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_union_is_associative": {
            "name": "test_union_is_associative",
            "location": 58,
            "return": [],
            "arguments": {
                "s": [],
                "t": [],
                "r": []
            }
        },
        "test_difference_on_empty": {
            "name": "test_difference_on_empty",
            "location": 74,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_difference_with_empty": {
            "name": "test_difference_with_empty",
            "location": 82,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_difference_with_self": {
            "name": "test_difference_with_self",
            "location": 90,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_difference_with_subset": {
            "name": "test_difference_with_subset",
            "location": 99,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_difference_not_commutative": {
            "name": "test_difference_not_commutative",
            "location": 109,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_intersection_with_empty": {
            "name": "test_intersection_with_empty",
            "location": 121,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_intersection_with_self": {
            "name": "test_intersection_with_self",
            "location": 129,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_intersection_with_subset": {
            "name": "test_intersection_with_subset",
            "location": 138,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_intersection_is_subset": {
            "name": "test_intersection_is_subset",
            "location": 148,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_intersection_is_commutative": {
            "name": "test_intersection_is_commutative",
            "location": 156,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_intersection_is_associative": {
            "name": "test_intersection_is_associative",
            "location": 166,
            "return": [],
            "arguments": {
                "s": [],
                "t": [],
                "r": []
            }
        },
        "test_disjunction_with_empty": {
            "name": "test_disjunction_with_empty",
            "location": 182,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_disjunction_with_self": {
            "name": "test_disjunction_with_self",
            "location": 190,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "test_disjunction_with_subset": {
            "name": "test_disjunction_with_subset",
            "location": 199,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_disjunction_is_commutative": {
            "name": "test_disjunction_is_commutative",
            "location": 211,
            "return": [],
            "arguments": {
                "s": [],
                "t": []
            }
        },
        "test_disjunction_is_associative": {
            "name": "test_disjunction_is_associative",
            "location": 221,
            "return": [],
            "arguments": {
                "s": [],
                "t": [],
                "r": []
            }
        },
        "OnSet.is_set": {
            "name": "is_set",
            "location": 240,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OnSet.union": {
            "name": "union",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "OnSet.difference": {
            "name": "difference",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "OnSet.intersection": {
            "name": "intersection",
            "location": 252,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "OnSet.disjunction": {
            "name": "disjunction",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        }
    }
}
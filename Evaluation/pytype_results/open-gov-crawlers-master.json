{
    "open-gov-crawlers-master/setup.py": {},
    "open-gov-crawlers-master/public_law/dates.py": {
        "todays_date": {
            "name": "todays_date",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "today": {
            "name": "today",
            "location": 20,
            "return": [
                "_datetime.date"
            ],
            "arguments": {}
        },
        "iso_8601": {
            "name": "iso_8601",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "a_date": [
                    "_datetime.date"
                ]
            }
        },
        "SimpleTimezone.localize": {
            "name": "localize",
            "location": 10,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": [],
                "a_date": [
                    "_datetime.datetime"
                ]
            }
        }
    },
    "open-gov-crawlers-master/public_law/items.py": {
        "Division.number_in_rule_format": {
            "name": "number_in_rule_format",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Rule.division_number": {
            "name": "division_number",
            "location": 53,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/metadata.py": {
        "_make_dc_dict": {
            "name": "_make_dc_dict",
            "location": 87,
            "return": [],
            "arguments": {
                "item_list": []
            }
        },
        "Metadata.as_dublin_core_dict": {
            "name": "as_dublin_core_dict",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.__iter__": {
            "name": "__iter__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.__getitem__": {
            "name": "__getitem__",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "Metadata.__len__": {
            "name": "__len__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.__repr__": {
            "name": "__repr__",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/middlewares.py": {
        "OarSpiderMiddleware.from_crawler": {
            "name": "from_crawler",
            "location": 30,
            "return": [
                "_TOarSpiderMiddleware"
            ],
            "arguments": {
                "cls": [
                    "Type[_TOarSpiderMiddleware]"
                ],
                "crawler": []
            }
        },
        "OarSpiderMiddleware.process_spider_input": {
            "name": "process_spider_input",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_response": [],
                "_spider": []
            }
        },
        "OarSpiderMiddleware.process_spider_output": {
            "name": "process_spider_output",
            "location": 43,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "_response": [],
                "result": [],
                "_spider": []
            }
        },
        "OarSpiderMiddleware.process_spider_exception": {
            "name": "process_spider_exception",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "response": [],
                "exception": [],
                "_spider": []
            }
        },
        "OarSpiderMiddleware.process_start_requests": {
            "name": "process_start_requests",
            "location": 59,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "start_requests": [],
                "_spider": []
            }
        },
        "OarSpiderMiddleware.spider_opened": {
            "name": "spider_opened",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "OarDownloaderMiddleware.from_crawler": {
            "name": "from_crawler",
            "location": 78,
            "return": [
                "_TOarDownloaderMiddleware"
            ],
            "arguments": {
                "cls": [
                    "Type[_TOarDownloaderMiddleware]"
                ],
                "crawler": []
            }
        },
        "OarDownloaderMiddleware.process_request": {
            "name": "process_request",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_request": [],
                "_spider": []
            }
        },
        "OarDownloaderMiddleware.process_response": {
            "name": "process_response",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "_request": [],
                "response": [],
                "_spider": []
            }
        },
        "OarDownloaderMiddleware.process_exception": {
            "name": "process_exception",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "exception": [],
                "spider": []
            }
        },
        "OarDownloaderMiddleware.spider_opened": {
            "name": "spider_opened",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/monitors.py": {},
    "open-gov-crawlers-master/public_law/pipelines.py": {
        "OarPipeline.process_item": {
            "name": "process_item",
            "location": 8,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "_T0"
                ],
                "_spider": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/settings.py": {},
    "open-gov-crawlers-master/public_law/text.py": {},
    "open-gov-crawlers-master/public_law/__init__.py": {},
    "open-gov-crawlers-master/public_law/models/glossary.py": {
        "GlossaryParseResult.__iter__": {
            "name": "__iter__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/models/__init__.py": {},
    "open-gov-crawlers-master/public_law/parsers/__init__.py": {},
    "open-gov-crawlers-master/public_law/parsers/can/doj.py": {},
    "open-gov-crawlers-master/public_law/parsers/can/__init__.py": {},
    "open-gov-crawlers-master/public_law/parsers/int/rome_statute.py": {},
    "open-gov-crawlers-master/public_law/parsers/int/__init__.py": {},
    "open-gov-crawlers-master/public_law/parsers/irl/courts_glossary.py": {
        "parse_glossary": {
            "name": "parse_glossary",
            "location": 24,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "__parse_entries": {
            "name": "__parse_entries",
            "location": 39,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "__raw_entries": {
            "name": "__raw_entries",
            "location": 57,
            "return": [],
            "arguments": {
                "html": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/parsers/nzl/justice_glossary.py": {
        "parse_glossary": {
            "name": "parse_glossary",
            "location": 15,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "__parse_entries": {
            "name": "__parse_entries",
            "location": 30,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "__raw_entries": {
            "name": "__raw_entries",
            "location": 40,
            "return": [],
            "arguments": {
                "html": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/parsers/usa/courts_glossary.py": {
        "parse_glossary": {
            "name": "parse_glossary",
            "location": 14,
            "return": [],
            "arguments": {
                "html": []
            }
        },
        "__parse_entries": {
            "name": "__parse_entries",
            "location": 30,
            "return": [],
            "arguments": {
                "html": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/parsers/usa/georgia.py": {},
    "open-gov-crawlers-master/public_law/parsers/usa/oregon.py": {},
    "open-gov-crawlers-master/public_law/parsers/usa/__init__.py": {},
    "open-gov-crawlers-master/public_law/spiders/__init__.py": {},
    "open-gov-crawlers-master/public_law/spiders/can/doj_glossaries.py": {
        "DojGlossaries.parse": {
            "name": "parse",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/spiders/can/__init__.py": {},
    "open-gov-crawlers-master/public_law/spiders/int/rome_statute.py": {
        "start_page_urls": {
            "name": "start_page_urls",
            "location": 39,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "RomeStatute.parse": {
            "name": "parse",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/spiders/int/__init__.py": {},
    "open-gov-crawlers-master/public_law/spiders/irl/courts_glossary.py": {
        "IRLCourtsGlossary.parse": {
            "name": "parse",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/spiders/irl/__init__.py": {},
    "open-gov-crawlers-master/public_law/spiders/nzl/justice_glossary.py": {
        "NZLJusticeGlossary.parse": {
            "name": "parse",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/spiders/nzl/__init__.py": {},
    "open-gov-crawlers-master/public_law/spiders/usa/georgia_ag_opinions.py": {
        "GeorgiaAgOpinions.parse": {
            "name": "parse",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "GeorgiaAgOpinions.parse_index_page": {
            "name": "parse_index_page",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "GeorgiaAgOpinions.parse_opinion_page": {
            "name": "parse_opinion_page",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/spiders/usa/oregon_regs.py": {
        "new_chapter": {
            "name": "new_chapter",
            "location": 143,
            "return": [],
            "arguments": {
                "db_id": [],
                "number": [],
                "name": []
            }
        },
        "new_division": {
            "name": "new_division",
            "location": 154,
            "return": [],
            "arguments": {
                "db_id": [],
                "number": [],
                "name": []
            }
        },
        "OregonRegs.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "OregonRegs.parse": {
            "name": "parse",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "OregonRegs.parse_search_page": {
            "name": "parse_search_page",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "OregonRegs.parse_chapter_page": {
            "name": "parse_chapter_page",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "OregonRegs.parse_division_page": {
            "name": "parse_division_page",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "OregonRegs.from_crawler": {
            "name": "from_crawler",
            "location": 110,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "OregonRegs.spider_idle": {
            "name": "spider_idle",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "OregonRegs.submit_data": {
            "name": "submit_data",
            "location": 132,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/spiders/usa/uscourts_glossary.py": {
        "USACourtsGlossary.parse": {
            "name": "parse",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/public_law/spiders/usa/__init__.py": {},
    "open-gov-crawlers-master/test/__init__.py": {},
    "open-gov-crawlers-master/test/public_law/dates_test.py": {
        "TestTodaysDate.test_is_in_iso_8601_format": {
            "name": "test_is_in_iso_8601_format",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTodaysDate.test_matches_unix_date_cmd": {
            "name": "test_matches_unix_date_cmd",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/metadata_test.py": {
        "TestMetadata.test_creates_expected_dict_1": {
            "name": "test_creates_expected_dict_1",
            "location": 7,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMetadata.test_creates_expected_dict_2": {
            "name": "test_creates_expected_dict_2",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/text_test.py": {
        "TestNonemptyString.test_supports_value_equality": {
            "name": "test_supports_value_equality",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonemptyString.test_supports_lt": {
            "name": "test_supports_lt",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonemptyString.test_supports_gt": {
            "name": "test_supports_gt",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonemptyString.test_raises_error_if_no_param_given": {
            "name": "test_raises_error_if_no_param_given",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonemptyString.test_raises_error_if_empty_string_given": {
            "name": "test_raises_error_if_empty_string_given",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNonemptyString.test_raises_error_if_non_string_type_given": {
            "name": "test_raises_error_if_non_string_type_given",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/can/doj_test.py": {
        "parsed_fixture": {
            "name": "parsed_fixture",
            "location": 12,
            "return": [],
            "arguments": {
                "filename": [],
                "url": []
            }
        },
        "parsed_glossary": {
            "name": "parsed_glossary",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "parsed_glossary_p11": {
            "name": "parsed_glossary_p11",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "parsed_glossary_glos": {
            "name": "parsed_glossary_glos",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "parsed_glossary_index": {
            "name": "parsed_glossary_index",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "TestParseGlossary.setup": {
            "name": "setup",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_the_name": {
            "name": "test_gets_the_name",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_the_name_when_it_contains_an_anchor": {
            "name": "test_gets_the_name_when_it_contains_an_anchor",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_phrase_does_not_end_with_colon": {
            "name": "test_phrase_does_not_end_with_colon",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_the_name_when_there_is_just_an_h1": {
            "name": "test_gets_the_name_when_there_is_just_an_h1",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_the_url": {
            "name": "test_gets_the_url",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_the_author": {
            "name": "test_gets_the_author",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_the_scrape_date": {
            "name": "test_gets_the_scrape_date",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_the_original_modification_date": {
            "name": "test_gets_the_original_modification_date",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_proper_number_of_entries": {
            "name": "test_gets_proper_number_of_entries",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_gets_a_term_case_1": {
            "name": "test_gets_a_term_case_1",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseGlossary.test_parses_emphasized_text": {
            "name": "test_parses_emphasized_text",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/can/__init__.py": {},
    "open-gov-crawlers-master/test/public_law/parsers/int/rome_statute_test.py": {
        "TestTikaPdf.test_can_use_the_tika_api": {
            "name": "test_can_use_the_tika_api",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestTikaPdf.test_raises_error_when_pdf_not_found": {
            "name": "test_raises_error_when_pdf_not_found",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMetadata.test_gets_the_title": {
            "name": "test_gets_the_title",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestTitle.test_works_correctly": {
            "name": "test_works_correctly",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestModifiedAt.test_works_correctly": {
            "name": "test_works_correctly",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLanguage.test_detects_french": {
            "name": "test_detects_french",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestLanguage.test_detects_english": {
            "name": "test_detects_english",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParts.test_gets_the_name_right_1": {
            "name": "test_gets_the_name_right_1",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParts.test_gets_the_name_right_2": {
            "name": "test_gets_the_name_right_2",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParts.test_gets_the_correct_number_of_parts": {
            "name": "test_gets_the_correct_number_of_parts",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParts.test_gets_the_number_right_1": {
            "name": "test_gets_the_number_right_1",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFootnotes.test_gets_all_of_them": {
            "name": "test_gets_all_of_them",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_returns_the_correct_amount_of_items": {
            "name": "test_returns_the_correct_amount_of_items",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_correct_number_a": {
            "name": "test_gets_correct_number_a",
            "location": 137,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_correct_number_b": {
            "name": "test_gets_correct_number_b",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_correctly_parses_a_complex_number": {
            "name": "test_correctly_parses_a_complex_number",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_handles_numbers_with_supertext": {
            "name": "test_handles_numbers_with_supertext",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_correct_part_number_a": {
            "name": "test_gets_correct_part_number_a",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_correct_part_number_b": {
            "name": "test_gets_correct_part_number_b",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_the_first_name": {
            "name": "test_gets_the_first_name",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_the_last_name": {
            "name": "test_gets_the_last_name",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_handles_a_long_name": {
            "name": "test_handles_a_long_name",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_unnamed_articles_should_have_empty_name_string": {
            "name": "test_unnamed_articles_should_have_empty_name_string",
            "location": 193,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_simple_text": {
            "name": "test_gets_simple_text",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_gets_complex_text": {
            "name": "test_gets_complex_text",
            "location": 216,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_handles_nested_outline": {
            "name": "test_handles_nested_outline",
            "location": 230,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_handles_content_across_page_break": {
            "name": "test_handles_content_across_page_break",
            "location": 246,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_article_5_has_correct_name": {
            "name": "test_article_5_has_correct_name",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_article_5_does_not_repeat_the_name": {
            "name": "test_article_5_does_not_repeat_the_name",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_article_8_has_correct_name": {
            "name": "test_article_8_has_correct_name",
            "location": 293,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_article_8_does_not_repeat_the_name": {
            "name": "test_article_8_does_not_repeat_the_name",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_article_9_has_correct_name": {
            "name": "test_article_9_has_correct_name",
            "location": 303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestArticles.test_article_9_does_not_repeat_the_name": {
            "name": "test_article_9_does_not_repeat_the_name",
            "location": 308,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/int/__init__.py": {},
    "open-gov-crawlers-master/test/public_law/parsers/irl/courts_glossary_test.py": {
        "parsed_fixture": {
            "name": "parsed_fixture",
            "location": 16,
            "return": [],
            "arguments": {
                "filename": [],
                "url": []
            }
        },
        "parsed_glossary": {
            "name": "parsed_glossary",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_gets_the_name": {
            "name": "test_gets_the_name",
            "location": 35,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_url": {
            "name": "test_gets_the_url",
            "location": 39,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_author": {
            "name": "test_gets_the_author",
            "location": 43,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_coverage": {
            "name": "test_gets_coverage",
            "location": 47,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_source_modified_date": {
            "name": "test_gets_the_source_modified_date",
            "location": 51,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_scrape_date": {
            "name": "test_gets_the_scrape_date",
            "location": 55,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_phrase": {
            "name": "test_phrase",
            "location": 59,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_definition": {
            "name": "test_definition",
            "location": 63,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_proper_number_of_entries": {
            "name": "test_gets_proper_number_of_entries",
            "location": 69,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_last_entry": {
            "name": "test_gets_the_last_entry",
            "location": 73,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/irl/__init__.py": {},
    "open-gov-crawlers-master/test/public_law/parsers/nzl/justice_glossary_test.py": {
        "parsed_fixture": {
            "name": "parsed_fixture",
            "location": 15,
            "return": [],
            "arguments": {
                "filename": [],
                "url": []
            }
        },
        "parsed_glossary": {
            "name": "parsed_glossary",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "test_gets_the_name": {
            "name": "test_gets_the_name",
            "location": 34,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_url": {
            "name": "test_gets_the_url",
            "location": 38,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_author": {
            "name": "test_gets_the_author",
            "location": 45,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_coverage": {
            "name": "test_gets_coverage",
            "location": 49,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_source_modified_date": {
            "name": "test_gets_the_source_modified_date",
            "location": 53,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_scrape_date": {
            "name": "test_gets_the_scrape_date",
            "location": 57,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_phrase": {
            "name": "test_phrase",
            "location": 61,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_definition": {
            "name": "test_definition",
            "location": 65,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_proper_number_of_entries": {
            "name": "test_gets_proper_number_of_entries",
            "location": 72,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_last_entry": {
            "name": "test_gets_the_last_entry",
            "location": 76,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/nzl/__init__.py": {},
    "open-gov-crawlers-master/test/public_law/parsers/usa/courts_glossary_test.py": {
        "parsed_fixture": {
            "name": "parsed_fixture",
            "location": 13,
            "return": [],
            "arguments": {
                "filename": [],
                "url": []
            }
        },
        "parsed_glossary": {
            "name": "parsed_glossary",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_gets_the_name": {
            "name": "test_gets_the_name",
            "location": 31,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_url": {
            "name": "test_gets_the_url",
            "location": 35,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_author": {
            "name": "test_gets_the_author",
            "location": 41,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_coverage": {
            "name": "test_gets_coverage",
            "location": 45,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_source_modified_date": {
            "name": "test_gets_the_source_modified_date",
            "location": 49,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_scrape_date": {
            "name": "test_gets_the_scrape_date",
            "location": 53,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_phrase": {
            "name": "test_phrase",
            "location": 57,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_definition": {
            "name": "test_definition",
            "location": 61,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_proper_number_of_entries": {
            "name": "test_gets_proper_number_of_entries",
            "location": 69,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        },
        "test_gets_the_last_entry": {
            "name": "test_gets_the_last_entry",
            "location": 73,
            "return": [],
            "arguments": {
                "parsed_glossary": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/usa/georgia_test.py": {
        "parsed_opinion_fixture": {
            "name": "parsed_opinion_fixture",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "TestOpinionDateToISO8601.test_sample_1": {
            "name": "test_sample_1",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseAgOpinion.setup": {
            "name": "setup",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseAgOpinion.test_gets_the_summary": {
            "name": "test_gets_the_summary",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseAgOpinion.test_gets_the_date": {
            "name": "test_gets_the_date",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseAgOpinion.test_gets_the_full_text": {
            "name": "test_gets_the_full_text",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseAgOpinion.test_gets_the_source_url": {
            "name": "test_gets_the_source_url",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseAgOpinion.test_gets_all_ocga_cites": {
            "name": "test_gets_all_ocga_cites",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/usa/oregon_test.py": {
        "fixture": {
            "name": "fixture",
            "location": 11,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "TestStatuteMeta.test_a_single_chapter_citation": {
            "name": "test_a_single_chapter_citation",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStatuteMeta.test_the_ampersand_separator": {
            "name": "test_the_ampersand_separator",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStatuteMeta.test_parses_a_range_as_a_single_item": {
            "name": "test_parses_a_range_as_a_single_item",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStatuteMeta.test_a_mix_of_ranges_and_single_cites": {
            "name": "test_a_mix_of_ranges_and_single_cites",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStatuteMeta.test_citations_to_the_OR_constitution": {
            "name": "test_citations_to_the_OR_constitution",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStatuteMeta.test_const_cite_without_comma": {
            "name": "test_const_cite_without_comma",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestStatuteMeta.test_const_cite_with_comma_after_article": {
            "name": "test_const_cite_with_comma_after_article",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMetaSections.test_parses_when_all_three_types_are_present": {
            "name": "test_parses_when_all_three_types_are_present",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMetaSections.test_parses_when_only_history_is_present": {
            "name": "test_parses_when_only_history_is_present",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMetaSections.test_parses_when_only_history_and_authority_are_present": {
            "name": "test_parses_when_only_history_and_authority_are_present",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMetaSections.test_parses_when_only_history_and_implements_are_present": {
            "name": "test_parses_when_only_history_and_implements_are_present",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFixture.test_can_access_a_fixture": {
            "name": "test_can_access_a_fixture",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseDivision.test_number_of_rules": {
            "name": "test_number_of_rules",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseDivision.test_rule_numbers": {
            "name": "test_rule_numbers",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseDivision.test_rule_names": {
            "name": "test_rule_names",
            "location": 111,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseDivision.test_rule_text": {
            "name": "test_rule_text",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseDivision.test_rule_authority": {
            "name": "test_rule_authority",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseDivision.test_rule_implements": {
            "name": "test_rule_implements",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestParseDivision.test_rule_history": {
            "name": "test_rule_history",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/test/public_law/parsers/usa/__init__.py": {},
    "open-gov-crawlers-master/typings/pytest/__init__.py": {},
    "open-gov-crawlers-master/typings/pytest/__main__.py": {},
    "open-gov-crawlers-master/typings/pytz/exceptions.py": {},
    "open-gov-crawlers-master/typings/pytz/lazy.py": {
        "LazyDict.__getitem__": {
            "name": "__getitem__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LazyDict.__contains__": {
            "name": "__contains__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LazyDict.__iter__": {
            "name": "__iter__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyDict.__len__": {
            "name": "__len__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyDict.keys": {
            "name": "keys",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LazyList.__new__": {
            "name": "__new__",
            "location": 32,
            "return": [],
            "arguments": {
                "cls": [],
                "fill_iter": []
            }
        },
        "LazySet.__new__": {
            "name": "__new__",
            "location": 43,
            "return": [],
            "arguments": {
                "cls": [],
                "fill_iter": []
            }
        }
    },
    "open-gov-crawlers-master/typings/pytz/reference.py": {
        "first_sunday_on_or_after": {
            "name": "first_sunday_on_or_after",
            "location": 53,
            "return": [],
            "arguments": {
                "dt": []
            }
        },
        "FixedOffset.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "offset": [],
                "name": []
            }
        },
        "FixedOffset.utcoffset": {
            "name": "utcoffset",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "FixedOffset.tzname": {
            "name": "tzname",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "FixedOffset.dst": {
            "name": "dst",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "LocalTimezone.utcoffset": {
            "name": "utcoffset",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "LocalTimezone.dst": {
            "name": "dst",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "LocalTimezone.tzname": {
            "name": "tzname",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "LocalTimezone._isdst": {
            "name": "_isdst",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "USTimeZone.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "hours": [],
                "reprname": [],
                "stdname": [],
                "dstname": []
            }
        },
        "USTimeZone.__repr__": {
            "name": "__repr__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "USTimeZone.tzname": {
            "name": "tzname",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "USTimeZone.utcoffset": {
            "name": "utcoffset",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "USTimeZone.dst": {
            "name": "dst",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        }
    },
    "open-gov-crawlers-master/typings/pytz/tzfile.py": {
        "_byte_string": {
            "name": "_byte_string",
            "location": 8,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "_std_string": {
            "name": "_std_string",
            "location": 13,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "build_tzinfo": {
            "name": "build_tzinfo",
            "location": 17,
            "return": [],
            "arguments": {
                "zone": [],
                "fp": []
            }
        }
    },
    "open-gov-crawlers-master/typings/pytz/tzinfo.py": {
        "memorized_timedelta": {
            "name": "memorized_timedelta",
            "location": 11,
            "return": [],
            "arguments": {
                "seconds": []
            }
        },
        "memorized_datetime": {
            "name": "memorized_datetime",
            "location": 17,
            "return": [],
            "arguments": {
                "seconds": []
            }
        },
        "memorized_ttinfo": {
            "name": "memorized_ttinfo",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "_to_seconds": {
            "name": "_to_seconds",
            "location": 27,
            "return": [],
            "arguments": {
                "td": []
            }
        },
        "unpickler": {
            "name": "unpickler",
            "location": 336,
            "return": [],
            "arguments": {
                "zone": [],
                "utcoffset": [],
                "dstoffset": [],
                "tzname": []
            }
        },
        "BaseTzInfo.__str__": {
            "name": "__str__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StaticTzInfo.fromutc": {
            "name": "fromutc",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "StaticTzInfo.utcoffset": {
            "name": "utcoffset",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "StaticTzInfo.dst": {
            "name": "dst",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "StaticTzInfo.tzname": {
            "name": "tzname",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "StaticTzInfo.localize": {
            "name": "localize",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "StaticTzInfo.normalize": {
            "name": "normalize",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "StaticTzInfo.__repr__": {
            "name": "__repr__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "StaticTzInfo.__reduce__": {
            "name": "__reduce__",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DstTzInfo.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "_inf": [],
                "_tzinfos": []
            }
        },
        "DstTzInfo.fromutc": {
            "name": "fromutc",
            "location": 126,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "DstTzInfo.normalize": {
            "name": "normalize",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "DstTzInfo.localize": {
            "name": "localize",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "DstTzInfo.utcoffset": {
            "name": "utcoffset",
            "location": 238,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "DstTzInfo.dst": {
            "name": "dst",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "DstTzInfo.tzname": {
            "name": "tzname",
            "location": 296,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "DstTzInfo.__repr__": {
            "name": "__repr__",
            "location": 328,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DstTzInfo.__reduce__": {
            "name": "__reduce__",
            "location": 331,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/pytz/__init__.py": {
        "open_resource": {
            "name": "open_resource",
            "location": 42,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "resource_exists": {
            "name": "resource_exists",
            "location": 53,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "timezone": {
            "name": "timezone",
            "location": 58,
            "return": [],
            "arguments": {
                "zone": []
            }
        },
        "_unmunge_zone": {
            "name": "_unmunge_zone",
            "location": 97,
            "return": [],
            "arguments": {
                "zone": []
            }
        },
        "_case_insensitive_zone_lookup": {
            "name": "_case_insensitive_zone_lookup",
            "location": 102,
            "return": [],
            "arguments": {
                "zone": []
            }
        },
        "_UTC": {
            "name": "_UTC",
            "location": 150,
            "return": [],
            "arguments": {}
        },
        "_p": {
            "name": "_p",
            "location": 181,
            "return": [],
            "arguments": {}
        },
        "FixedOffset": {
            "name": "FixedOffset",
            "location": 273,
            "return": [],
            "arguments": {
                "offset": [],
                "_tzinfos": []
            }
        },
        "_test": {
            "name": "_test",
            "location": 328,
            "return": [],
            "arguments": {}
        },
        "ascii": {
            "name": "ascii",
            "location": 29,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "UTC.fromutc": {
            "name": "fromutc",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "UTC.utcoffset": {
            "name": "utcoffset",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "UTC.tzname": {
            "name": "tzname",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "UTC.dst": {
            "name": "dst",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "UTC.__reduce__": {
            "name": "__reduce__",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTC.localize": {
            "name": "localize",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "UTC.normalize": {
            "name": "normalize",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "UTC.__repr__": {
            "name": "__repr__",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UTC.__str__": {
            "name": "__str__",
            "location": 144,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_CountryTimezoneDict.__call__": {
            "name": "__call__",
            "location": 221,
            "return": [],
            "arguments": {
                "self": [],
                "iso3166_code": []
            }
        },
        "_CountryTimezoneDict._fill": {
            "name": "_fill",
            "location": 225,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_CountryNameDict._fill": {
            "name": "_fill",
            "location": 237,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FixedOffset.__init__": {
            "name": "__init__",
            "location": 245,
            "return": [],
            "arguments": {
                "self": [],
                "minutes": []
            }
        },
        "_FixedOffset.utcoffset": {
            "name": "utcoffset",
            "location": 248,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "_FixedOffset.__reduce__": {
            "name": "__reduce__",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FixedOffset.dst": {
            "name": "dst",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "_FixedOffset.tzname": {
            "name": "tzname",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "dt": []
            }
        },
        "_FixedOffset.__repr__": {
            "name": "__repr__",
            "location": 260,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_FixedOffset.localize": {
            "name": "localize",
            "location": 263,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        },
        "_FixedOffset.normalize": {
            "name": "normalize",
            "location": 267,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "is_dst": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/cmdline.py": {
        "execute": {
            "name": "execute",
            "location": 5,
            "return": [],
            "arguments": {
                "argv": [],
                "settings": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/crawler.py": {
        "Crawler.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "spidercls": [],
                "settings": [],
                "init_reactor": []
            }
        },
        "Crawler.crawl": {
            "name": "crawl",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Crawler.stop": {
            "name": "stop",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerRunner.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "settings": []
            }
        },
        "CrawlerRunner.spiders": {
            "name": "spiders",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerRunner.crawl": {
            "name": "crawl",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "crawler_or_spidercls": []
            }
        },
        "CrawlerRunner.create_crawler": {
            "name": "create_crawler",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "crawler_or_spidercls": []
            }
        },
        "CrawlerRunner.stop": {
            "name": "stop",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerRunner.join": {
            "name": "join",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlerProcess.__init__": {
            "name": "__init__",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "settings": [],
                "install_root_handler": []
            }
        },
        "CrawlerProcess.start": {
            "name": "start",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "stop_after_crawl": [],
                "install_signal_handlers": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/dupefilters.py": {
        "BaseDupeFilter.from_settings": {
            "name": "from_settings",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": [],
                "settings": []
            }
        },
        "BaseDupeFilter.request_seen": {
            "name": "request_seen",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseDupeFilter.open": {
            "name": "open",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseDupeFilter.close": {
            "name": "close",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "reason": []
            }
        },
        "BaseDupeFilter.log": {
            "name": "log",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "spider": []
            }
        },
        "RFPDupeFilter.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "debug": []
            }
        },
        "RFPDupeFilter.from_settings": {
            "name": "from_settings",
            "location": 39,
            "return": [],
            "arguments": {
                "cls": [],
                "settings": []
            }
        },
        "RFPDupeFilter.request_seen": {
            "name": "request_seen",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RFPDupeFilter.request_fingerprint": {
            "name": "request_fingerprint",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "RFPDupeFilter.close": {
            "name": "close",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "reason": []
            }
        },
        "RFPDupeFilter.log": {
            "name": "log",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/exceptions.py": {
        "CloseSpider.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "reason": []
            }
        },
        "StopDownload.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UsageError.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/exporters.py": {
        "BaseItemExporter.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseItemExporter.export_item": {
            "name": "export_item",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "BaseItemExporter.serialize_field": {
            "name": "serialize_field",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "name": [],
                "value": []
            }
        },
        "BaseItemExporter.start_exporting": {
            "name": "start_exporting",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseItemExporter.finish_exporting": {
            "name": "finish_exporting",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonLinesItemExporter.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "JsonLinesItemExporter.export_item": {
            "name": "export_item",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "JsonItemExporter.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "JsonItemExporter.start_exporting": {
            "name": "start_exporting",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonItemExporter.finish_exporting": {
            "name": "finish_exporting",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonItemExporter.export_item": {
            "name": "export_item",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "XmlItemExporter.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "XmlItemExporter.start_exporting": {
            "name": "start_exporting",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "XmlItemExporter.export_item": {
            "name": "export_item",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "XmlItemExporter.finish_exporting": {
            "name": "finish_exporting",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CsvItemExporter.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "include_headers_line": [],
                "join_multivalued": [],
                "errors": []
            }
        },
        "CsvItemExporter.serialize_field": {
            "name": "serialize_field",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "name": [],
                "value": []
            }
        },
        "CsvItemExporter.export_item": {
            "name": "export_item",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "PickleItemExporter.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": [],
                "file": [],
                "protocol": []
            }
        },
        "PickleItemExporter.export_item": {
            "name": "export_item",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "MarshalItemExporter.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "MarshalItemExporter.export_item": {
            "name": "export_item",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "PprintItemExporter.__init__": {
            "name": "__init__",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "PprintItemExporter.export_item": {
            "name": "export_item",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "PythonItemExporter.serialize_field": {
            "name": "serialize_field",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "field": [],
                "name": [],
                "value": []
            }
        },
        "PythonItemExporter.export_item": {
            "name": "export_item",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/extension.py": {},
    "open-gov-crawlers-master/typings/scrapy/interfaces.py": {
        "ISpiderLoader.from_settings": {
            "name": "from_settings",
            "location": 8,
            "return": [],
            "arguments": {
                "settings": []
            }
        },
        "ISpiderLoader.load": {
            "name": "load",
            "location": 12,
            "return": [],
            "arguments": {
                "spider_name": []
            }
        },
        "ISpiderLoader.list": {
            "name": "list",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "ISpiderLoader.find_by_request": {
            "name": "find_by_request",
            "location": 22,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/item.py": {
        "ItemMeta.__new__": {
            "name": "__new__",
            "location": 25,
            "return": [],
            "arguments": {
                "mcs": [],
                "class_name": [],
                "bases": [],
                "attrs": []
            }
        },
        "Item.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Item.__getitem__": {
            "name": "__getitem__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Item.__setitem__": {
            "name": "__setitem__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Item.__delitem__": {
            "name": "__delitem__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Item.__getattr__": {
            "name": "__getattr__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Item.__setattr__": {
            "name": "__setattr__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "Item.__len__": {
            "name": "__len__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Item.__iter__": {
            "name": "__iter__",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Item.keys": {
            "name": "keys",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Item.__repr__": {
            "name": "__repr__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Item.copy": {
            "name": "copy",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Item.deepcopy": {
            "name": "deepcopy",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/link.py": {
        "Link.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "text": [],
                "fragment": [],
                "nofollow": []
            }
        },
        "Link.__eq__": {
            "name": "__eq__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Link.__hash__": {
            "name": "__hash__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Link.__repr__": {
            "name": "__repr__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/logformatter.py": {
        "LogFormatter.crawled": {
            "name": "crawled",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": [],
                "spider": []
            }
        },
        "LogFormatter.scraped": {
            "name": "scraped",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "response": [],
                "spider": []
            }
        },
        "LogFormatter.dropped": {
            "name": "dropped",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "exception": [],
                "response": [],
                "spider": []
            }
        },
        "LogFormatter.item_error": {
            "name": "item_error",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "exception": [],
                "response": [],
                "spider": []
            }
        },
        "LogFormatter.spider_error": {
            "name": "spider_error",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "failure": [],
                "request": [],
                "response": [],
                "spider": []
            }
        },
        "LogFormatter.download_error": {
            "name": "download_error",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "failure": [],
                "request": [],
                "spider": [],
                "errmsg": []
            }
        },
        "LogFormatter.from_crawler": {
            "name": "from_crawler",
            "location": 85,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/mail.py": {
        "MailSender.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "smtphost": [],
                "mailfrom": [],
                "smtpuser": [],
                "smtppass": [],
                "smtpport": [],
                "smtptls": [],
                "smtpssl": [],
                "debug": []
            }
        },
        "MailSender.from_settings": {
            "name": "from_settings",
            "location": 17,
            "return": [],
            "arguments": {
                "cls": [],
                "settings": []
            }
        },
        "MailSender.send": {
            "name": "send",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "to": [],
                "subject": [],
                "body": [],
                "cc": [],
                "attachs": [],
                "mimetype": [],
                "charset": [],
                "_callback": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/middleware.py": {
        "MiddlewareManager.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MiddlewareManager.from_settings": {
            "name": "from_settings",
            "location": 17,
            "return": [],
            "arguments": {
                "cls": [],
                "settings": [],
                "crawler": []
            }
        },
        "MiddlewareManager.from_crawler": {
            "name": "from_crawler",
            "location": 21,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "MiddlewareManager.open_spider": {
            "name": "open_spider",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "MiddlewareManager.close_spider": {
            "name": "close_spider",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/pqueues.py": {
        "ScrapyPriorityQueue.from_crawler": {
            "name": "from_crawler",
            "location": 32,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "downstream_queue_cls": [],
                "key": [],
                "startprios": []
            }
        },
        "ScrapyPriorityQueue.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": [],
                "downstream_queue_cls": [],
                "key": [],
                "startprios": []
            }
        },
        "ScrapyPriorityQueue.init_prios": {
            "name": "init_prios",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "startprios": []
            }
        },
        "ScrapyPriorityQueue.qfactory": {
            "name": "qfactory",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "ScrapyPriorityQueue.priority": {
            "name": "priority",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ScrapyPriorityQueue.push": {
            "name": "push",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ScrapyPriorityQueue.pop": {
            "name": "pop",
            "location": 50,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyPriorityQueue.peek": {
            "name": "peek",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyPriorityQueue.close": {
            "name": "close",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyPriorityQueue.__len__": {
            "name": "__len__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DownloaderInterface.__init__": {
            "name": "__init__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": []
            }
        },
        "DownloaderInterface.stats": {
            "name": "stats",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "possible_slots": []
            }
        },
        "DownloaderInterface.get_slot_key": {
            "name": "get_slot_key",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DownloaderAwarePriorityQueue.from_crawler": {
            "name": "from_crawler",
            "location": 88,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "downstream_queue_cls": [],
                "key": [],
                "startprios": []
            }
        },
        "DownloaderAwarePriorityQueue.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": [],
                "downstream_queue_cls": [],
                "key": [],
                "slot_startprios": []
            }
        },
        "DownloaderAwarePriorityQueue.pqfactory": {
            "name": "pqfactory",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "slot": [],
                "startprios": []
            }
        },
        "DownloaderAwarePriorityQueue.pop": {
            "name": "pop",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DownloaderAwarePriorityQueue.push": {
            "name": "push",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "DownloaderAwarePriorityQueue.peek": {
            "name": "peek",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DownloaderAwarePriorityQueue.close": {
            "name": "close",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DownloaderAwarePriorityQueue.__len__": {
            "name": "__len__",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DownloaderAwarePriorityQueue.__contains__": {
            "name": "__contains__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "slot": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/resolver.py": {
        "CachingThreadedResolver.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "reactor": [],
                "cache_size": [],
                "timeout": []
            }
        },
        "CachingThreadedResolver.from_crawler": {
            "name": "from_crawler",
            "location": 19,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "reactor": []
            }
        },
        "CachingThreadedResolver.install_on_reactor": {
            "name": "install_on_reactor",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CachingThreadedResolver.getHostByName": {
            "name": "getHostByName",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "timeout": []
            }
        },
        "HostResolution.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "HostResolution.cancel": {
            "name": "cancel",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_CachingResolutionReceiver.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "resolutionReceiver": [],
                "hostName": []
            }
        },
        "_CachingResolutionReceiver.resolutionBegan": {
            "name": "resolutionBegan",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "resolution": []
            }
        },
        "_CachingResolutionReceiver.addressResolved": {
            "name": "addressResolved",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "address": []
            }
        },
        "_CachingResolutionReceiver.resolutionComplete": {
            "name": "resolutionComplete",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CachingHostnameResolver.__init__": {
            "name": "__init__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "reactor": [],
                "cache_size": []
            }
        },
        "CachingHostnameResolver.from_crawler": {
            "name": "from_crawler",
            "location": 66,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "reactor": []
            }
        },
        "CachingHostnameResolver.install_on_reactor": {
            "name": "install_on_reactor",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CachingHostnameResolver.resolveHostName": {
            "name": "resolveHostName",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "resolutionReceiver": [],
                "hostName": [],
                "portNumber": [],
                "addressTypes": [],
                "transportSemantics": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/responsetypes.py": {
        "ResponseTypes.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResponseTypes.from_mimetype": {
            "name": "from_mimetype",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "mimetype": []
            }
        },
        "ResponseTypes.from_content_type": {
            "name": "from_content_type",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "content_type": [],
                "content_encoding": []
            }
        },
        "ResponseTypes.from_content_disposition": {
            "name": "from_content_disposition",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "content_disposition": []
            }
        },
        "ResponseTypes.from_headers": {
            "name": "from_headers",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "headers": []
            }
        },
        "ResponseTypes.from_filename": {
            "name": "from_filename",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "ResponseTypes.from_body": {
            "name": "from_body",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "body": []
            }
        },
        "ResponseTypes.from_args": {
            "name": "from_args",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "headers": [],
                "url": [],
                "filename": [],
                "body": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/robotstxt.py": {
        "decode_robotstxt": {
            "name": "decode_robotstxt",
            "location": 8,
            "return": [],
            "arguments": {
                "robotstxt_body": [],
                "spider": [],
                "to_native_str_type": []
            }
        },
        "RobotParser.from_crawler": {
            "name": "from_crawler",
            "location": 14,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "robotstxt_body": []
            }
        },
        "RobotParser.allowed": {
            "name": "allowed",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "user_agent": []
            }
        },
        "PythonRobotParser.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "robotstxt_body": [],
                "spider": []
            }
        },
        "PythonRobotParser.from_crawler": {
            "name": "from_crawler",
            "location": 45,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "robotstxt_body": []
            }
        },
        "PythonRobotParser.allowed": {
            "name": "allowed",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "user_agent": []
            }
        },
        "ReppyRobotParser.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [],
            "arguments": {
                "self": [],
                "robotstxt_body": [],
                "spider": []
            }
        },
        "ReppyRobotParser.from_crawler": {
            "name": "from_crawler",
            "location": 58,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "robotstxt_body": []
            }
        },
        "ReppyRobotParser.allowed": {
            "name": "allowed",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "user_agent": []
            }
        },
        "RerpRobotParser.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "robotstxt_body": [],
                "spider": []
            }
        },
        "RerpRobotParser.from_crawler": {
            "name": "from_crawler",
            "location": 71,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "robotstxt_body": []
            }
        },
        "RerpRobotParser.allowed": {
            "name": "allowed",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "user_agent": []
            }
        },
        "ProtegoRobotParser.__init__": {
            "name": "__init__",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "robotstxt_body": [],
                "spider": []
            }
        },
        "ProtegoRobotParser.from_crawler": {
            "name": "from_crawler",
            "location": 84,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": [],
                "robotstxt_body": []
            }
        },
        "ProtegoRobotParser.allowed": {
            "name": "allowed",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "user_agent": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/shell.py": {
        "inspect_response": {
            "name": "inspect_response",
            "location": 32,
            "return": [],
            "arguments": {
                "response": [],
                "spider": []
            }
        },
        "Shell.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": [],
                "update_vars": [],
                "code": []
            }
        },
        "Shell.start": {
            "name": "start",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "request": [],
                "response": [],
                "spider": [],
                "redirect": []
            }
        },
        "Shell.fetch": {
            "name": "fetch",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "request_or_url": [],
                "spider": [],
                "redirect": []
            }
        },
        "Shell.populate_vars": {
            "name": "populate_vars",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "request": [],
                "spider": []
            }
        },
        "Shell.print_help": {
            "name": "print_help",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Shell.get_help": {
            "name": "get_help",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/signalmanager.py": {
        "SignalManager.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": [],
                "sender": []
            }
        },
        "SignalManager.connect": {
            "name": "connect",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "receiver": [],
                "signal": []
            }
        },
        "SignalManager.disconnect": {
            "name": "disconnect",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "receiver": [],
                "signal": []
            }
        },
        "SignalManager.send_catch_log": {
            "name": "send_catch_log",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "signal": []
            }
        },
        "SignalManager.send_catch_log_deferred": {
            "name": "send_catch_log_deferred",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "signal": []
            }
        },
        "SignalManager.disconnect_all": {
            "name": "disconnect_all",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "signal": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/signals.py": {},
    "open-gov-crawlers-master/typings/scrapy/spiderloader.py": {
        "SpiderLoader.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "settings": []
            }
        },
        "SpiderLoader.from_settings": {
            "name": "from_settings",
            "location": 18,
            "return": [],
            "arguments": {
                "cls": [],
                "settings": []
            }
        },
        "SpiderLoader.load": {
            "name": "load",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "spider_name": []
            }
        },
        "SpiderLoader.find_by_request": {
            "name": "find_by_request",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SpiderLoader.list": {
            "name": "list",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/squeues.py": {},
    "open-gov-crawlers-master/typings/scrapy/statscollectors.py": {
        "StatsCollector.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": []
            }
        },
        "StatsCollector.get_value": {
            "name": "get_value",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": [],
                "spider": []
            }
        },
        "StatsCollector.get_stats": {
            "name": "get_stats",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "StatsCollector.set_value": {
            "name": "set_value",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "spider": []
            }
        },
        "StatsCollector.set_stats": {
            "name": "set_stats",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "stats": [],
                "spider": []
            }
        },
        "StatsCollector.inc_value": {
            "name": "inc_value",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "count": [],
                "start": [],
                "spider": []
            }
        },
        "StatsCollector.max_value": {
            "name": "max_value",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "spider": []
            }
        },
        "StatsCollector.min_value": {
            "name": "min_value",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "spider": []
            }
        },
        "StatsCollector.clear_stats": {
            "name": "clear_stats",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "StatsCollector.open_spider": {
            "name": "open_spider",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "StatsCollector.close_spider": {
            "name": "close_spider",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "spider": [],
                "reason": []
            }
        },
        "MemoryStatsCollector.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": []
            }
        },
        "DummyStatsCollector.get_value": {
            "name": "get_value",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": [],
                "spider": []
            }
        },
        "DummyStatsCollector.set_value": {
            "name": "set_value",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "spider": []
            }
        },
        "DummyStatsCollector.set_stats": {
            "name": "set_stats",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "stats": [],
                "spider": []
            }
        },
        "DummyStatsCollector.inc_value": {
            "name": "inc_value",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "count": [],
                "start": [],
                "spider": []
            }
        },
        "DummyStatsCollector.max_value": {
            "name": "max_value",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "spider": []
            }
        },
        "DummyStatsCollector.min_value": {
            "name": "min_value",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/__init__.py": {},
    "open-gov-crawlers-master/typings/scrapy/__main__.py": {},
    "open-gov-crawlers-master/typings/scrapy/commands/__init__.py": {
        "ScrapyCommand.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyCommand.set_crawler": {
            "name": "set_crawler",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": []
            }
        },
        "ScrapyCommand.syntax": {
            "name": "syntax",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyCommand.short_desc": {
            "name": "short_desc",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyCommand.long_desc": {
            "name": "long_desc",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyCommand.help": {
            "name": "help",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ScrapyCommand.add_options": {
            "name": "add_options",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "ScrapyCommand.process_options": {
            "name": "process_options",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "opts": []
            }
        },
        "ScrapyCommand.run": {
            "name": "run",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "opts": []
            }
        },
        "BaseRunSpiderCommand.add_options": {
            "name": "add_options",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "parser": []
            }
        },
        "BaseRunSpiderCommand.process_options": {
            "name": "process_options",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "args": [],
                "opts": []
            }
        },
        "ScrapyHelpFormatter.__init__": {
            "name": "__init__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "prog": [],
                "indent_increment": [],
                "max_help_position": [],
                "width": []
            }
        },
        "ScrapyHelpFormatter.format_part_strings": {
            "name": "format_part_strings",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "part_strings": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/contracts/__init__.py": {
        "Contract.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "Contract.add_pre_hook": {
            "name": "add_pre_hook",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "results": []
            }
        },
        "Contract.add_post_hook": {
            "name": "add_post_hook",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "results": []
            }
        },
        "Contract.adjust_request_args": {
            "name": "adjust_request_args",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "ContractsManager.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "contracts": []
            }
        },
        "ContractsManager.tested_methods_from_spidercls": {
            "name": "tested_methods_from_spidercls",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "spidercls": []
            }
        },
        "ContractsManager.extract_contracts": {
            "name": "extract_contracts",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "method": []
            }
        },
        "ContractsManager.from_spider": {
            "name": "from_spider",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "spider": [],
                "results": []
            }
        },
        "ContractsManager.from_method": {
            "name": "from_method",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "results": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/core/engine.py": {
        "Slot.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "start_requests": [],
                "close_if_idle": [],
                "nextcall": [],
                "scheduler": []
            }
        },
        "Slot.add_request": {
            "name": "add_request",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Slot.remove_request": {
            "name": "remove_request",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Slot.close": {
            "name": "close",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": [],
                "spider_closed_callback": []
            }
        },
        "ExecutionEngine.start": {
            "name": "start",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.stop": {
            "name": "stop",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.close": {
            "name": "close",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.pause": {
            "name": "pause",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.unpause": {
            "name": "unpause",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.spider_is_idle": {
            "name": "spider_is_idle",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "ExecutionEngine.crawl": {
            "name": "crawl",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "spider": []
            }
        },
        "ExecutionEngine.download": {
            "name": "download",
            "location": 65,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "spider": []
            }
        },
        "ExecutionEngine.open_spider": {
            "name": "open_spider",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "spider": [],
                "start_requests": [],
                "close_if_idle": []
            }
        },
        "ExecutionEngine.close_spider": {
            "name": "close_spider",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "spider": [],
                "reason": []
            }
        },
        "ExecutionEngine.open_spiders": {
            "name": "open_spiders",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.has_capacity": {
            "name": "has_capacity",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExecutionEngine.schedule": {
            "name": "schedule",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/core/scheduler.py": {
        "BaseSchedulerMeta.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 17,
            "return": [],
            "arguments": {
                "cls": [],
                "instance": []
            }
        },
        "BaseSchedulerMeta.__subclasscheck__": {
            "name": "__subclasscheck__",
            "location": 20,
            "return": [],
            "arguments": {
                "cls": [],
                "subclass": []
            }
        },
        "BaseScheduler.from_crawler": {
            "name": "from_crawler",
            "location": 42,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "BaseScheduler.open": {
            "name": "open",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "BaseScheduler.close": {
            "name": "close",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "reason": []
            }
        },
        "BaseScheduler.has_pending_requests": {
            "name": "has_pending_requests",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseScheduler.enqueue_request": {
            "name": "enqueue_request",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "BaseScheduler.next_request": {
            "name": "next_request",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "dupefilter": [],
                "jobdir": [],
                "dqclass": [],
                "mqclass": [],
                "logunser": [],
                "stats": [],
                "pqclass": [],
                "crawler": []
            }
        },
        "Scheduler.from_crawler": {
            "name": "from_crawler",
            "location": 158,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "Scheduler.has_pending_requests": {
            "name": "has_pending_requests",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.open": {
            "name": "open",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "Scheduler.close": {
            "name": "close",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "reason": []
            }
        },
        "Scheduler.enqueue_request": {
            "name": "enqueue_request",
            "location": 182,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Scheduler.next_request": {
            "name": "next_request",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scheduler.__len__": {
            "name": "__len__",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/core/scraper.py": {
        "Slot.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "max_active_size": []
            }
        },
        "Slot.add_response_request": {
            "name": "add_response_request",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "request": []
            }
        },
        "Slot.next_response_request_deferred": {
            "name": "next_response_request_deferred",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Slot.finish_response": {
            "name": "finish_response",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "request": []
            }
        },
        "Slot.is_idle": {
            "name": "is_idle",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Slot.needs_backout": {
            "name": "needs_backout",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scraper.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": []
            }
        },
        "Scraper.open_spider": {
            "name": "open_spider",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "Scraper.close_spider": {
            "name": "close_spider",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "spider": []
            }
        },
        "Scraper.is_idle": {
            "name": "is_idle",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scraper.enqueue_scrape": {
            "name": "enqueue_scrape",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "request": [],
                "spider": []
            }
        },
        "Scraper.call_spider": {
            "name": "call_spider",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "request": [],
                "spider": []
            }
        },
        "Scraper.handle_spider_error": {
            "name": "handle_spider_error",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "_failure": [],
                "request": [],
                "response": [],
                "spider": []
            }
        },
        "Scraper.handle_spider_output": {
            "name": "handle_spider_output",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "result": [],
                "request": [],
                "response": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/core/spidermw.py": {
        "SpiderMiddlewareManager.scrape_response": {
            "name": "scrape_response",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "scrape_func": [],
                "response": [],
                "request": [],
                "spider": []
            }
        },
        "SpiderMiddlewareManager.process_start_requests": {
            "name": "process_start_requests",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "start_requests": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/core/__init__.py": {},
    "open-gov-crawlers-master/typings/scrapy/downloadermiddlewares/__init__.py": {},
    "open-gov-crawlers-master/typings/scrapy/extensions/__init__.py": {},
    "open-gov-crawlers-master/typings/scrapy/http/common.py": {
        "obsolete_setter": {
            "name": "obsolete_setter",
            "location": 5,
            "return": [],
            "arguments": {
                "setter": [],
                "attrname": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/http/headers.py": {
        "Headers.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "seq": [],
                "encoding": []
            }
        },
        "Headers.normkey": {
            "name": "normkey",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Headers.normvalue": {
            "name": "normvalue",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Headers.__getitem__": {
            "name": "__getitem__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Headers.get": {
            "name": "get",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "def_val": []
            }
        },
        "Headers.getlist": {
            "name": "getlist",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "def_val": []
            }
        },
        "Headers.setlist": {
            "name": "setlist",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "list_": []
            }
        },
        "Headers.setlistdefault": {
            "name": "setlistdefault",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default_list": []
            }
        },
        "Headers.appendlist": {
            "name": "appendlist",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Headers.items": {
            "name": "items",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Headers.values": {
            "name": "values",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Headers.to_string": {
            "name": "to_string",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Headers.to_unicode_dict": {
            "name": "to_unicode_dict",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Headers.__copy__": {
            "name": "__copy__",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/http/__init__.py": {},
    "open-gov-crawlers-master/typings/scrapy/http/request/form.py": {
        "FormRequest.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FormRequest.from_response": {
            "name": "from_response",
            "location": 23,
            "return": [],
            "arguments": {
                "cls": [],
                "response": [],
                "formname": [],
                "formid": [],
                "formnumber": [],
                "formdata": [],
                "clickdata": [],
                "dont_click": [],
                "formxpath": [],
                "formcss": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/http/request/json_request.py": {
        "JsonRequest.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonRequest.dumps_kwargs": {
            "name": "dumps_kwargs",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JsonRequest.replace": {
            "name": "replace",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/http/request/rpc.py": {
        "XmlRpcRequest.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/http/request/__init__.py": {
        "Request.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "callback": [],
                "method": [],
                "headers": [],
                "body": [],
                "cookies": [],
                "meta": [],
                "encoding": [],
                "priority": [],
                "dont_filter": [],
                "errback": [],
                "flags": [],
                "cb_kwargs": []
            }
        },
        "Request.cb_kwargs": {
            "name": "cb_kwargs",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.meta": {
            "name": "meta",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.encoding": {
            "name": "encoding",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.__str__": {
            "name": "__str__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.copy": {
            "name": "copy",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.replace": {
            "name": "replace",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.from_curl": {
            "name": "from_curl",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": [],
                "curl_command": [],
                "ignore_unknown_options": []
            }
        },
        "Request.to_dict": {
            "name": "to_dict",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/http/response/html.py": {},
    "open-gov-crawlers-master/typings/scrapy/http/response/text.py": {
        "TextResponse.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextResponse.encoding": {
            "name": "encoding",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextResponse.json": {
            "name": "json",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextResponse.text": {
            "name": "text",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextResponse.urljoin": {
            "name": "urljoin",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "TextResponse.selector": {
            "name": "selector",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TextResponse.xpath": {
            "name": "xpath",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "TextResponse.css": {
            "name": "css",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "TextResponse.follow": {
            "name": "follow",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "callback": [],
                "method": [],
                "headers": [],
                "body": [],
                "cookies": [],
                "meta": [],
                "encoding": [],
                "priority": [],
                "dont_filter": [],
                "errback": [],
                "cb_kwargs": [],
                "flags": []
            }
        },
        "TextResponse.follow_all": {
            "name": "follow_all",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "urls": [],
                "callback": [],
                "method": [],
                "headers": [],
                "body": [],
                "cookies": [],
                "meta": [],
                "encoding": [],
                "priority": [],
                "dont_filter": [],
                "errback": [],
                "cb_kwargs": [],
                "flags": [],
                "css": [],
                "xpath": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/http/response/xml.py": {},
    "open-gov-crawlers-master/typings/scrapy/http/response/__init__.py": {
        "Response.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "status": [],
                "headers": [],
                "body": [],
                "flags": [],
                "request": [],
                "certificate": [],
                "ip_address": [],
                "protocol": []
            }
        },
        "Response.cb_kwargs": {
            "name": "cb_kwargs",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.meta": {
            "name": "meta",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.__str__": {
            "name": "__str__",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.copy": {
            "name": "copy",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.replace": {
            "name": "replace",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.urljoin": {
            "name": "urljoin",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "Response.text": {
            "name": "text",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.css": {
            "name": "css",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.xpath": {
            "name": "xpath",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Response.follow": {
            "name": "follow",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "callback": [],
                "method": [],
                "headers": [],
                "body": [],
                "cookies": [],
                "meta": [],
                "encoding": [],
                "priority": [],
                "dont_filter": [],
                "errback": [],
                "cb_kwargs": [],
                "flags": []
            }
        },
        "Response.follow_all": {
            "name": "follow_all",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "urls": [],
                "callback": [],
                "method": [],
                "headers": [],
                "body": [],
                "cookies": [],
                "meta": [],
                "encoding": [],
                "priority": [],
                "dont_filter": [],
                "errback": [],
                "cb_kwargs": [],
                "flags": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/linkextractors/lxmlhtml.py": {
        "LxmlParserLinkExtractor.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "tag": [],
                "attr": [],
                "process": [],
                "unique": [],
                "strip": [],
                "canonicalized": []
            }
        },
        "LxmlParserLinkExtractor.extract_links": {
            "name": "extract_links",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "LxmlLinkExtractor.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "allow": [],
                "deny": [],
                "allow_domains": [],
                "deny_domains": [],
                "restrict_xpaths": [],
                "tags": [],
                "attrs": [],
                "canonicalize": [],
                "unique": [],
                "process_value": [],
                "deny_extensions": [],
                "restrict_css": [],
                "strip": [],
                "restrict_text": []
            }
        },
        "LxmlLinkExtractor.extract_links": {
            "name": "extract_links",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/linkextractors/__init__.py": {
        "FilteringLinkExtractor.__new__": {
            "name": "__new__",
            "location": 26,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "FilteringLinkExtractor.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "link_extractor": [],
                "allow": [],
                "deny": [],
                "allow_domains": [],
                "deny_domains": [],
                "restrict_xpaths": [],
                "canonicalize": [],
                "deny_extensions": [],
                "restrict_css": [],
                "restrict_text": []
            }
        },
        "FilteringLinkExtractor.matches": {
            "name": "matches",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "url": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/loader/__init__.py": {
        "ItemLoader.__init__": {
            "name": "__init__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "selector": [],
                "response": [],
                "parent": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/pipelines/__init__.py": {
        "ItemPipelineManager.process_item": {
            "name": "process_item",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "item": [],
                "spider": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/selector/unified.py": {
        "Selector.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "text": [],
                "type": [],
                "root": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/selector/__init__.py": {},
    "open-gov-crawlers-master/typings/scrapy/settings/default_settings.py": {},
    "open-gov-crawlers-master/typings/scrapy/settings/__init__.py": {
        "get_settings_priority": {
            "name": "get_settings_priority",
            "location": 13,
            "return": [],
            "arguments": {
                "priority": []
            }
        },
        "iter_default_settings": {
            "name": "iter_default_settings",
            "location": 348,
            "return": [],
            "arguments": {}
        },
        "overridden_settings": {
            "name": "overridden_settings",
            "location": 352,
            "return": [],
            "arguments": {
                "settings": []
            }
        },
        "SettingsAttribute.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "priority": []
            }
        },
        "SettingsAttribute.set": {
            "name": "set",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "priority": []
            }
        },
        "SettingsAttribute.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSettings.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "values": [],
                "priority": []
            }
        },
        "BaseSettings.__getitem__": {
            "name": "__getitem__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "opt_name": []
            }
        },
        "BaseSettings.__contains__": {
            "name": "__contains__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseSettings.get": {
            "name": "get",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "BaseSettings.getbool": {
            "name": "getbool",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "BaseSettings.getint": {
            "name": "getint",
            "location": 100,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "BaseSettings.getfloat": {
            "name": "getfloat",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "BaseSettings.getlist": {
            "name": "getlist",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "BaseSettings.getdict": {
            "name": "getdict",
            "location": 140,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "default": []
            }
        },
        "BaseSettings.getwithbase": {
            "name": "getwithbase",
            "location": 158,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseSettings.getpriority": {
            "name": "getpriority",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseSettings.maxpriority": {
            "name": "maxpriority",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSettings.__setitem__": {
            "name": "__setitem__",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "BaseSettings.set": {
            "name": "set",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": [],
                "priority": []
            }
        },
        "BaseSettings.setdict": {
            "name": "setdict",
            "location": 209,
            "return": [],
            "arguments": {
                "self": [],
                "values": [],
                "priority": []
            }
        },
        "BaseSettings.setmodule": {
            "name": "setmodule",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "module": [],
                "priority": []
            }
        },
        "BaseSettings.update": {
            "name": "update",
            "location": 229,
            "return": [],
            "arguments": {
                "self": [],
                "values": [],
                "priority": []
            }
        },
        "BaseSettings.delete": {
            "name": "delete",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "priority": []
            }
        },
        "BaseSettings.__delitem__": {
            "name": "__delitem__",
            "location": 256,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BaseSettings.copy": {
            "name": "copy",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSettings.freeze": {
            "name": "freeze",
            "location": 271,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSettings.frozencopy": {
            "name": "frozencopy",
            "location": 281,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSettings.__iter__": {
            "name": "__iter__",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSettings.__len__": {
            "name": "__len__",
            "location": 292,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseSettings.copy_to_dict": {
            "name": "copy_to_dict",
            "location": 295,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_DictProxy.__init__": {
            "name": "__init__",
            "location": 313,
            "return": [],
            "arguments": {
                "self": [],
                "settings": [],
                "priority": []
            }
        },
        "_DictProxy.__len__": {
            "name": "__len__",
            "location": 316,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_DictProxy.__getitem__": {
            "name": "__getitem__",
            "location": 319,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "_DictProxy.__setitem__": {
            "name": "__setitem__",
            "location": 322,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "v": []
            }
        },
        "_DictProxy.__delitem__": {
            "name": "__delitem__",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "_DictProxy.__iter__": {
            "name": "__iter__",
            "location": 328,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "v": []
            }
        },
        "Settings.__init__": {
            "name": "__init__",
            "location": 343,
            "return": [],
            "arguments": {
                "self": [],
                "values": [],
                "priority": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/spidermiddlewares/__init__.py": {},
    "open-gov-crawlers-master/typings/scrapy/spiders/crawl.py": {
        "Rule.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "link_extractor": [],
                "callback": [],
                "cb_kwargs": [],
                "follow": [],
                "process_links": [],
                "process_request": [],
                "errback": []
            }
        },
        "CrawlSpider.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CrawlSpider.parse_start_url": {
            "name": "parse_start_url",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "CrawlSpider.process_results": {
            "name": "process_results",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "results": []
            }
        },
        "CrawlSpider.from_crawler": {
            "name": "from_crawler",
            "location": 33,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/spiders/feed.py": {
        "XMLFeedSpider.process_results": {
            "name": "process_results",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "results": []
            }
        },
        "XMLFeedSpider.adapt_response": {
            "name": "adapt_response",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "XMLFeedSpider.parse_node": {
            "name": "parse_node",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "selector": []
            }
        },
        "XMLFeedSpider.parse_nodes": {
            "name": "parse_nodes",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "nodes": []
            }
        },
        "CSVFeedSpider.process_results": {
            "name": "process_results",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "results": []
            }
        },
        "CSVFeedSpider.adapt_response": {
            "name": "adapt_response",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "CSVFeedSpider.parse_row": {
            "name": "parse_row",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "response": [],
                "row": []
            }
        },
        "CSVFeedSpider.parse_rows": {
            "name": "parse_rows",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/spiders/sitemap.py": {
        "regex": {
            "name": "regex",
            "location": 28,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "iterloc": {
            "name": "iterloc",
            "location": 31,
            "return": [],
            "arguments": {
                "it": [],
                "alt": []
            }
        },
        "SitemapSpider.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SitemapSpider.start_requests": {
            "name": "start_requests",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SitemapSpider.sitemap_filter": {
            "name": "sitemap_filter",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "entries": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/spiders/__init__.py": {
        "Spider.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Spider.logger": {
            "name": "logger",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spider.log": {
            "name": "log",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "level": []
            }
        },
        "Spider.from_crawler": {
            "name": "from_crawler",
            "location": 43,
            "return": [],
            "arguments": {
                "cls": [],
                "crawler": []
            }
        },
        "Spider.start_requests": {
            "name": "start_requests",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Spider.parse": {
            "name": "parse",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "response": []
            }
        },
        "Spider.update_settings": {
            "name": "update_settings",
            "location": 53,
            "return": [],
            "arguments": {
                "cls": [],
                "settings": []
            }
        },
        "Spider.handles_request": {
            "name": "handles_request",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": [],
                "request": []
            }
        },
        "Spider.close": {
            "name": "close",
            "location": 61,
            "return": [],
            "arguments": {
                "spider": [],
                "reason": []
            }
        },
        "Spider.__str__": {
            "name": "__str__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/asyncgen.py": {},
    "open-gov-crawlers-master/typings/scrapy/utils/conf.py": {
        "build_component_list": {
            "name": "build_component_list",
            "location": 5,
            "return": [],
            "arguments": {
                "compdict": [],
                "custom": [],
                "convert": []
            }
        },
        "arglist_to_dict": {
            "name": "arglist_to_dict",
            "location": 9,
            "return": [],
            "arguments": {
                "arglist": []
            }
        },
        "closest_scrapy_cfg": {
            "name": "closest_scrapy_cfg",
            "location": 15,
            "return": [],
            "arguments": {
                "path": [],
                "prevpath": []
            }
        },
        "init_env": {
            "name": "init_env",
            "location": 21,
            "return": [],
            "arguments": {
                "project": [],
                "set_syspath": []
            }
        },
        "get_config": {
            "name": "get_config",
            "location": 28,
            "return": [],
            "arguments": {
                "use_closest": []
            }
        },
        "get_sources": {
            "name": "get_sources",
            "location": 32,
            "return": [],
            "arguments": {
                "use_closest": []
            }
        },
        "feed_complete_default_values_from_settings": {
            "name": "feed_complete_default_values_from_settings",
            "location": 35,
            "return": [],
            "arguments": {
                "feed": [],
                "settings": []
            }
        },
        "feed_process_params_from_cli": {
            "name": "feed_process_params_from_cli",
            "location": 38,
            "return": [],
            "arguments": {
                "settings": [],
                "output": [],
                "output_format": [],
                "overwrite_output": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/console.py": {
        "get_shell_embed_func": {
            "name": "get_shell_embed_func",
            "location": 6,
            "return": [],
            "arguments": {
                "shells": [],
                "known_shells": []
            }
        },
        "start_python_console": {
            "name": "start_python_console",
            "location": 12,
            "return": [],
            "arguments": {
                "namespace": [],
                "banner": [],
                "shells": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/curl.py": {
        "curl_to_request_kwargs": {
            "name": "curl_to_request_kwargs",
            "location": 15,
            "return": [],
            "arguments": {
                "curl_command": [],
                "ignore_unknown_options": []
            }
        },
        "CurlParser.error": {
            "name": "error",
            "location": 8,
            "return": [],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/datatypes.py": {
        "CaselessDict.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "seq": []
            }
        },
        "CaselessDict.__getitem__": {
            "name": "__getitem__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaselessDict.__setitem__": {
            "name": "__setitem__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "CaselessDict.__delitem__": {
            "name": "__delitem__",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaselessDict.__contains__": {
            "name": "__contains__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaselessDict.__copy__": {
            "name": "__copy__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaselessDict.normkey": {
            "name": "normkey",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaselessDict.normvalue": {
            "name": "normvalue",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "CaselessDict.get": {
            "name": "get",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "def_val": []
            }
        },
        "CaselessDict.setdefault": {
            "name": "setdefault",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "def_val": []
            }
        },
        "CaselessDict.update": {
            "name": "update",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "seq": []
            }
        },
        "CaselessDict.fromkeys": {
            "name": "fromkeys",
            "location": 54,
            "return": [],
            "arguments": {
                "cls": [],
                "keys": [],
                "value": []
            }
        },
        "CaselessDict.pop": {
            "name": "pop",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "LocalCache.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "limit": []
            }
        },
        "LocalCache.__setitem__": {
            "name": "__setitem__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "LocalWeakReferencedCache.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "limit": []
            }
        },
        "LocalWeakReferencedCache.__setitem__": {
            "name": "__setitem__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "LocalWeakReferencedCache.__getitem__": {
            "name": "__getitem__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "SequenceExclude.__init__": {
            "name": "__init__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "seq": []
            }
        },
        "SequenceExclude.__contains__": {
            "name": "__contains__",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/decorators.py": {
        "deprecated": {
            "name": "deprecated",
            "location": 5,
            "return": [],
            "arguments": {
                "use_instead": []
            }
        },
        "defers": {
            "name": "defers",
            "location": 11,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "inthread": {
            "name": "inthread",
            "location": 15,
            "return": [],
            "arguments": {
                "func": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/defer.py": {
        "defer_fail": {
            "name": "defer_fail",
            "location": 13,
            "return": [],
            "arguments": {
                "_failure": []
            }
        },
        "defer_succeed": {
            "name": "defer_succeed",
            "location": 22,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "defer_result": {
            "name": "defer_result",
            "location": 31,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "mustbe_deferred": {
            "name": "mustbe_deferred",
            "location": 34,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "parallel": {
            "name": "parallel",
            "location": 40,
            "return": [],
            "arguments": {
                "iterable": [],
                "count": [],
                "callable": []
            }
        },
        "process_chain": {
            "name": "process_chain",
            "location": 48,
            "return": [],
            "arguments": {
                "callbacks": [],
                "input": []
            }
        },
        "process_chain_both": {
            "name": "process_chain_both",
            "location": 52,
            "return": [],
            "arguments": {
                "callbacks": [],
                "errbacks": [],
                "input": []
            }
        },
        "process_parallel": {
            "name": "process_parallel",
            "location": 56,
            "return": [],
            "arguments": {
                "callbacks": [],
                "input": []
            }
        },
        "iter_errback": {
            "name": "iter_errback",
            "location": 62,
            "return": [],
            "arguments": {
                "iterable": [],
                "errback": []
            }
        },
        "deferred_from_coro": {
            "name": "deferred_from_coro",
            "location": 68,
            "return": [],
            "arguments": {
                "o": []
            }
        },
        "deferred_f_from_coro_f": {
            "name": "deferred_f_from_coro_f",
            "location": 72,
            "return": [],
            "arguments": {
                "coro_f": []
            }
        },
        "maybeDeferred_coro": {
            "name": "maybeDeferred_coro",
            "location": 80,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "deferred_to_future": {
            "name": "deferred_to_future",
            "location": 84,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "maybe_deferred_to_future": {
            "name": "maybe_deferred_to_future",
            "location": 104,
            "return": [],
            "arguments": {
                "d": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/deprecate.py": {
        "attribute": {
            "name": "attribute",
            "location": 6,
            "return": [],
            "arguments": {
                "obj": [],
                "oldattr": [],
                "newattr": [],
                "version": []
            }
        },
        "create_deprecated_class": {
            "name": "create_deprecated_class",
            "location": 9,
            "return": [],
            "arguments": {
                "name": [],
                "new_class": [],
                "clsdict": [],
                "warn_category": [],
                "warn_once": [],
                "old_class_path": [],
                "new_class_path": [],
                "subclass_warn_message": [],
                "instance_warn_message": []
            }
        },
        "update_classpath": {
            "name": "update_classpath",
            "location": 40,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "method_is_overridden": {
            "name": "method_is_overridden",
            "location": 44,
            "return": [],
            "arguments": {
                "subclass": [],
                "base_class": [],
                "method_name": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/gz.py": {
        "read1": {
            "name": "read1",
            "location": 8,
            "return": [],
            "arguments": {
                "gzf": [],
                "size": []
            }
        },
        "gunzip": {
            "name": "gunzip",
            "location": 11,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "gzip_magic_number": {
            "name": "gzip_magic_number",
            "location": 18,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/httpobj.py": {
        "urlparse_cached": {
            "name": "urlparse_cached",
            "location": 12,
            "return": [],
            "arguments": {
                "request_or_response": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/iterators.py": {
        "xmliter": {
            "name": "xmliter",
            "location": 6,
            "return": [],
            "arguments": {
                "obj": [],
                "nodename": []
            }
        },
        "xmliter_lxml": {
            "name": "xmliter_lxml",
            "location": 17,
            "return": [],
            "arguments": {
                "obj": [],
                "nodename": [],
                "namespace": [],
                "prefix": []
            }
        },
        "csviter": {
            "name": "csviter",
            "location": 29,
            "return": [],
            "arguments": {
                "obj": [],
                "delimiter": [],
                "headers": [],
                "encoding": [],
                "quotechar": []
            }
        },
        "_StreamReader.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "_StreamReader.read": {
            "name": "read",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "n": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/job.py": {
        "job_dir": {
            "name": "job_dir",
            "location": 8,
            "return": [],
            "arguments": {
                "settings": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/log.py": {
        "failure_to_exc_info": {
            "name": "failure_to_exc_info",
            "location": 9,
            "return": [],
            "arguments": {
                "failure": []
            }
        },
        "configure_logging": {
            "name": "configure_logging",
            "location": 33,
            "return": [],
            "arguments": {
                "settings": [],
                "install_root_handler": []
            }
        },
        "install_scrapy_root_handler": {
            "name": "install_scrapy_root_handler",
            "location": 59,
            "return": [],
            "arguments": {
                "settings": []
            }
        },
        "get_scrapy_root_handler": {
            "name": "get_scrapy_root_handler",
            "location": 62,
            "return": [],
            "arguments": {}
        },
        "log_scrapy_info": {
            "name": "log_scrapy_info",
            "location": 66,
            "return": [],
            "arguments": {
                "settings": []
            }
        },
        "log_reactor_info": {
            "name": "log_reactor_info",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "logformatter_adapter": {
            "name": "logformatter_adapter",
            "location": 99,
            "return": [],
            "arguments": {
                "logkws": []
            }
        },
        "TopLevelFormatter.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "loggers": []
            }
        },
        "TopLevelFormatter.filter": {
            "name": "filter",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        },
        "StreamLogger.__init__": {
            "name": "__init__",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "logger": [],
                "log_level": []
            }
        },
        "StreamLogger.write": {
            "name": "write",
            "location": 81,
            "return": [],
            "arguments": {
                "self": [],
                "buf": []
            }
        },
        "StreamLogger.flush": {
            "name": "flush",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LogCounterHandler.__init__": {
            "name": "__init__",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "crawler": []
            }
        },
        "LogCounterHandler.emit": {
            "name": "emit",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "record": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/misc.py": {
        "arg_to_iter": {
            "name": "arg_to_iter",
            "location": 9,
            "return": [],
            "arguments": {
                "arg": []
            }
        },
        "load_object": {
            "name": "load_object",
            "location": 17,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "walk_modules": {
            "name": "walk_modules",
            "location": 28,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "extract_regex": {
            "name": "extract_regex",
            "location": 37,
            "return": [],
            "arguments": {
                "regex": [],
                "text": [],
                "encoding": []
            }
        },
        "md5sum": {
            "name": "md5sum",
            "location": 46,
            "return": [],
            "arguments": {
                "file": []
            }
        },
        "rel_has_nofollow": {
            "name": "rel_has_nofollow",
            "location": 56,
            "return": [],
            "arguments": {
                "rel": []
            }
        },
        "create_instance": {
            "name": "create_instance",
            "location": 60,
            "return": [],
            "arguments": {
                "objcls": [],
                "settings": [],
                "crawler": []
            }
        },
        "set_environ": {
            "name": "set_environ",
            "location": 80,
            "return": [],
            "arguments": {}
        },
        "walk_callable": {
            "name": "walk_callable",
            "location": 86,
            "return": [],
            "arguments": {
                "node": []
            }
        },
        "is_generator_with_return_value": {
            "name": "is_generator_with_return_value",
            "location": 93,
            "return": [],
            "arguments": {
                "callable": []
            }
        },
        "warn_on_generator_with_return_value": {
            "name": "warn_on_generator_with_return_value",
            "location": 100,
            "return": [],
            "arguments": {
                "spider": [],
                "callable": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/ossignal.py": {
        "install_shutdown_handlers": {
            "name": "install_shutdown_handlers",
            "location": 6,
            "return": [],
            "arguments": {
                "function": [],
                "override_sigint": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/project.py": {
        "inside_project": {
            "name": "inside_project",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "project_data_dir": {
            "name": "project_data_dir",
            "location": 10,
            "return": [],
            "arguments": {
                "project": []
            }
        },
        "data_path": {
            "name": "data_path",
            "location": 14,
            "return": [],
            "arguments": {
                "path": [],
                "createdir": []
            }
        },
        "get_project_settings": {
            "name": "get_project_settings",
            "location": 21,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/python.py": {
        "flatten": {
            "name": "flatten",
            "location": 12,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "iflatten": {
            "name": "iflatten",
            "location": 31,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "is_listlike": {
            "name": "is_listlike",
            "location": 37,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "unique": {
            "name": "unique",
            "location": 60,
            "return": [],
            "arguments": {
                "list_": [],
                "key": []
            }
        },
        "to_unicode": {
            "name": "to_unicode",
            "location": 64,
            "return": [],
            "arguments": {
                "text": [],
                "encoding": [],
                "errors": []
            }
        },
        "to_bytes": {
            "name": "to_bytes",
            "location": 69,
            "return": [],
            "arguments": {
                "text": [],
                "encoding": [],
                "errors": []
            }
        },
        "to_native_str": {
            "name": "to_native_str",
            "location": 75,
            "return": [],
            "arguments": {
                "text": [],
                "encoding": [],
                "errors": []
            }
        },
        "re_rsearch": {
            "name": "re_rsearch",
            "location": 79,
            "return": [],
            "arguments": {
                "pattern": [],
                "text": [],
                "chunk_size": []
            }
        },
        "memoizemethod_noargs": {
            "name": "memoizemethod_noargs",
            "location": 94,
            "return": [],
            "arguments": {
                "method": []
            }
        },
        "binary_is_text": {
            "name": "binary_is_text",
            "location": 101,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "get_func_args": {
            "name": "get_func_args",
            "location": 107,
            "return": [],
            "arguments": {
                "func": [],
                "stripself": []
            }
        },
        "get_spec": {
            "name": "get_spec",
            "location": 111,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "equal_attributes": {
            "name": "equal_attributes",
            "location": 134,
            "return": [],
            "arguments": {
                "obj1": [],
                "obj2": [],
                "attributes": []
            }
        },
        "retry_on_eintr": {
            "name": "retry_on_eintr",
            "location": 148,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "without_none_values": {
            "name": "without_none_values",
            "location": 152,
            "return": [],
            "arguments": {
                "iterable": []
            }
        },
        "global_object_name": {
            "name": "global_object_name",
            "location": 160,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "WeakKeyCache.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [],
            "arguments": {
                "self": [],
                "default_factory": []
            }
        },
        "WeakKeyCache.__getitem__": {
            "name": "__getitem__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "garbage_collect": {
            "name": "garbage_collect",
            "location": 175,
            "return": [],
            "arguments": {}
        },
        "MutableChain.__init__": {
            "name": "__init__",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MutableChain.extend": {
            "name": "extend",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MutableChain.__iter__": {
            "name": "__iter__",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MutableChain.__next__": {
            "name": "__next__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MutableChain.next": {
            "name": "next",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/reactor.py": {
        "listen_tcp": {
            "name": "listen_tcp",
            "location": 5,
            "return": [],
            "arguments": {
                "portrange": [],
                "host": [],
                "factory": []
            }
        },
        "install_reactor": {
            "name": "install_reactor",
            "location": 27,
            "return": [],
            "arguments": {
                "reactor_path": [],
                "event_loop_path": []
            }
        },
        "verify_installed_reactor": {
            "name": "verify_installed_reactor",
            "location": 33,
            "return": [],
            "arguments": {
                "reactor_path": []
            }
        },
        "is_asyncio_reactor_installed": {
            "name": "is_asyncio_reactor_installed",
            "location": 39,
            "return": [],
            "arguments": {}
        },
        "CallLaterOnce.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "func": []
            }
        },
        "CallLaterOnce.schedule": {
            "name": "schedule",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "delay": []
            }
        },
        "CallLaterOnce.cancel": {
            "name": "cancel",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallLaterOnce.__call__": {
            "name": "__call__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/request.py": {
        "request_fingerprint": {
            "name": "request_fingerprint",
            "location": 15,
            "return": [],
            "arguments": {
                "request": [],
                "include_headers": [],
                "keep_fragments": []
            }
        },
        "request_authenticate": {
            "name": "request_authenticate",
            "location": 49,
            "return": [],
            "arguments": {
                "request": [],
                "username": [],
                "password": []
            }
        },
        "request_httprepr": {
            "name": "request_httprepr",
            "location": 55,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "referer_str": {
            "name": "referer_str",
            "location": 63,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "request_from_dict": {
            "name": "request_from_dict",
            "location": 67,
            "return": [],
            "arguments": {
                "d": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/response.py": {
        "get_base_url": {
            "name": "get_base_url",
            "location": 18,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "get_meta_refresh": {
            "name": "get_meta_refresh",
            "location": 23,
            "return": [],
            "arguments": {
                "response": [],
                "ignore_tags": []
            }
        },
        "response_status_message": {
            "name": "response_status_message",
            "location": 27,
            "return": [],
            "arguments": {
                "status": []
            }
        },
        "response_httprepr": {
            "name": "response_httprepr",
            "location": 33,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "open_in_browser": {
            "name": "open_in_browser",
            "location": 40,
            "return": [],
            "arguments": {
                "response": [],
                "_openfunc": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/serialize.py": {
        "ScrapyJSONEncoder.default": {
            "name": "default",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "o": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/signal.py": {
        "send_catch_log": {
            "name": "send_catch_log",
            "location": 7,
            "return": [],
            "arguments": {
                "signal": [],
                "sender": []
            }
        },
        "send_catch_log_deferred": {
            "name": "send_catch_log_deferred",
            "location": 13,
            "return": [],
            "arguments": {
                "signal": [],
                "sender": []
            }
        },
        "disconnect_all": {
            "name": "disconnect_all",
            "location": 20,
            "return": [],
            "arguments": {
                "signal": [],
                "sender": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/sitemap.py": {
        "sitemap_urls_from_robots": {
            "name": "sitemap_urls_from_robots",
            "location": 22,
            "return": [],
            "arguments": {
                "robots_text": [],
                "base_url": []
            }
        },
        "Sitemap.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "xmltext": []
            }
        },
        "Sitemap.__iter__": {
            "name": "__iter__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/spider.py": {
        "iterate_spider_output": {
            "name": "iterate_spider_output",
            "location": 8,
            "return": [],
            "arguments": {
                "result": []
            }
        },
        "iter_spider_classes": {
            "name": "iter_spider_classes",
            "location": 11,
            "return": [],
            "arguments": {
                "module": []
            }
        },
        "spidercls_for_request": {
            "name": "spidercls_for_request",
            "location": 17,
            "return": [],
            "arguments": {
                "spider_loader": [],
                "request": [],
                "default_spidercls": [],
                "log_none": [],
                "log_multiple": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/ssl.py": {
        "ffi_buf_to_string": {
            "name": "ffi_buf_to_string",
            "location": 6,
            "return": [],
            "arguments": {
                "buf": []
            }
        },
        "x509name_to_string": {
            "name": "x509name_to_string",
            "location": 9,
            "return": [],
            "arguments": {
                "x509name": []
            }
        },
        "get_temp_key_info": {
            "name": "get_temp_key_info",
            "location": 12,
            "return": [],
            "arguments": {
                "ssl_object": []
            }
        },
        "get_openssl_version": {
            "name": "get_openssl_version",
            "location": 15,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/trackref.py": {
        "format_live_refs": {
            "name": "format_live_refs",
            "location": 28,
            "return": [],
            "arguments": {
                "ignore": []
            }
        },
        "print_live_refs": {
            "name": "print_live_refs",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "get_oldest": {
            "name": "get_oldest",
            "location": 36,
            "return": [],
            "arguments": {
                "class_name": []
            }
        },
        "iter_all": {
            "name": "iter_all",
            "location": 40,
            "return": [],
            "arguments": {
                "class_name": []
            }
        },
        "object_ref.__new__": {
            "name": "__new__",
            "location": 23,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/url.py": {
        "url_is_from_any_domain": {
            "name": "url_is_from_any_domain",
            "location": 14,
            "return": [],
            "arguments": {
                "url": [],
                "domains": []
            }
        },
        "url_is_from_spider": {
            "name": "url_is_from_spider",
            "location": 18,
            "return": [],
            "arguments": {
                "url": [],
                "spider": []
            }
        },
        "url_has_any_extension": {
            "name": "url_has_any_extension",
            "location": 22,
            "return": [],
            "arguments": {
                "url": [],
                "extensions": []
            }
        },
        "parse_url": {
            "name": "parse_url",
            "location": 25,
            "return": [],
            "arguments": {
                "url": [],
                "encoding": []
            }
        },
        "escape_ajax": {
            "name": "escape_ajax",
            "location": 31,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "add_http_if_no_scheme": {
            "name": "add_http_if_no_scheme",
            "location": 56,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "guess_scheme": {
            "name": "guess_scheme",
            "location": 60,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "strip_url": {
            "name": "strip_url",
            "location": 65,
            "return": [],
            "arguments": {
                "url": [],
                "strip_credentials": [],
                "strip_default_port": [],
                "origin_only": [],
                "strip_fragment": []
            }
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/versions.py": {
        "scrapy_components_versions": {
            "name": "scrapy_components_versions",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/scrapy/utils/__init__.py": {},
    "open-gov-crawlers-master/typings/tika/config.py": {
        "getParsers": {
            "name": "getParsers",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "getMimeTypes": {
            "name": "getMimeTypes",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "getDetectors": {
            "name": "getDetectors",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/tika/detector.py": {
        "from_file": {
            "name": "from_file",
            "location": 5,
            "return": [],
            "arguments": {
                "filename": [],
                "config_path": [],
                "requestOptions": []
            }
        },
        "from_buffer": {
            "name": "from_buffer",
            "location": 10,
            "return": [],
            "arguments": {
                "string": [],
                "config_path": [],
                "requestOptions": []
            }
        }
    },
    "open-gov-crawlers-master/typings/tika/language.py": {
        "from_file": {
            "name": "from_file",
            "location": 5,
            "return": [],
            "arguments": {
                "filename": [],
                "requestOptions": []
            }
        },
        "from_buffer": {
            "name": "from_buffer",
            "location": 10,
            "return": [],
            "arguments": {
                "string": [],
                "requestOptions": []
            }
        }
    },
    "open-gov-crawlers-master/typings/tika/parser.py": {
        "from_file": {
            "name": "from_file",
            "location": 7,
            "return": [],
            "arguments": {
                "filename": [],
                "serverEndpoint": [],
                "service": [],
                "xmlContent": [],
                "headers": [],
                "config_path": [],
                "requestOptions": []
            }
        },
        "from_buffer": {
            "name": "from_buffer",
            "location": 20,
            "return": [],
            "arguments": {
                "string": [],
                "serverEndpoint": [],
                "xmlContent": [],
                "headers": [],
                "config_path": [],
                "requestOptions": []
            }
        }
    },
    "open-gov-crawlers-master/typings/tika/tika.py": {
        "echo2": {
            "name": "echo2",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "warn": {
            "name": "warn",
            "location": 45,
            "return": [],
            "arguments": {}
        },
        "die": {
            "name": "die",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "runCommand": {
            "name": "runCommand",
            "location": 51,
            "return": [],
            "arguments": {
                "cmd": [],
                "option": [],
                "urlOrPaths": [],
                "port": [],
                "outDir": [],
                "serverHost": [],
                "tikaServerJar": [],
                "verbose": [],
                "encode": []
            }
        },
        "getPaths": {
            "name": "getPaths",
            "location": 56,
            "return": [],
            "arguments": {
                "urlOrPaths": []
            }
        },
        "parseAndSave": {
            "name": "parseAndSave",
            "location": 61,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPaths": [],
                "outDir": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "metaExtension": [],
                "services": []
            }
        },
        "parse": {
            "name": "parse",
            "location": 66,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPaths": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": [],
                "rawResponse": []
            }
        },
        "parse1": {
            "name": "parse1",
            "location": 71,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPath": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": [],
                "rawResponse": [],
                "headers": [],
                "config_path": [],
                "requestOptions": []
            }
        },
        "detectLang": {
            "name": "detectLang",
            "location": 76,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPaths": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": []
            }
        },
        "detectLang1": {
            "name": "detectLang1",
            "location": 81,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPath": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": [],
                "requestOptions": []
            }
        },
        "doTranslate": {
            "name": "doTranslate",
            "location": 86,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPaths": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": []
            }
        },
        "doTranslate1": {
            "name": "doTranslate1",
            "location": 91,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPath": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": [],
                "requestOptions": []
            }
        },
        "detectType": {
            "name": "detectType",
            "location": 98,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPaths": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": []
            }
        },
        "detectType1": {
            "name": "detectType1",
            "location": 103,
            "return": [],
            "arguments": {
                "option": [],
                "urlOrPath": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": [],
                "config_path": [],
                "requestOptions": []
            }
        },
        "getConfig": {
            "name": "getConfig",
            "location": 108,
            "return": [],
            "arguments": {
                "option": [],
                "serverEndpoint": [],
                "verbose": [],
                "tikaServerJar": [],
                "responseMimeType": [],
                "services": [],
                "requestOptions": []
            }
        },
        "callServer": {
            "name": "callServer",
            "location": 113,
            "return": [],
            "arguments": {
                "verb": [],
                "serverEndpoint": [],
                "service": [],
                "data": [],
                "headers": [],
                "verbose": [],
                "tikaServerJar": [],
                "httpVerbs": [],
                "classpath": [],
                "rawResponse": [],
                "config_path": [],
                "requestOptions": []
            }
        },
        "checkTikaServer": {
            "name": "checkTikaServer",
            "location": 118,
            "return": [],
            "arguments": {
                "scheme": [],
                "serverHost": [],
                "port": [],
                "tikaServerJar": [],
                "classpath": [],
                "config_path": []
            }
        },
        "checkJarSig": {
            "name": "checkJarSig",
            "location": 123,
            "return": [],
            "arguments": {
                "tikaServerJar": [],
                "jarPath": []
            }
        },
        "startServer": {
            "name": "startServer",
            "location": 128,
            "return": [],
            "arguments": {
                "tikaServerJar": [],
                "java_path": [],
                "java_args": [],
                "serverHost": [],
                "port": [],
                "classpath": [],
                "config_path": []
            }
        },
        "killServer": {
            "name": "killServer",
            "location": 134,
            "return": [],
            "arguments": {}
        },
        "toFilename": {
            "name": "toFilename",
            "location": 139,
            "return": [],
            "arguments": {
                "url": []
            }
        },
        "getRemoteFile": {
            "name": "getRemoteFile",
            "location": 144,
            "return": [],
            "arguments": {
                "urlOrPath": [],
                "destPath": []
            }
        },
        "getRemoteJar": {
            "name": "getRemoteJar",
            "location": 149,
            "return": [],
            "arguments": {
                "urlOrPath": [],
                "destPath": []
            }
        },
        "checkPortIsOpen": {
            "name": "checkPortIsOpen",
            "location": 154,
            "return": [],
            "arguments": {
                "remoteServerHost": [],
                "port": []
            }
        },
        "main": {
            "name": "main",
            "location": 159,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "open-gov-crawlers-master/typings/tika/translate.py": {
        "from_file": {
            "name": "from_file",
            "location": 5,
            "return": [],
            "arguments": {
                "filename": [],
                "srcLang": [],
                "destLang": [],
                "serverEndpoint": [],
                "requestOptions": []
            }
        },
        "from_buffer": {
            "name": "from_buffer",
            "location": 10,
            "return": [],
            "arguments": {
                "string": [],
                "srcLang": [],
                "destLang": [],
                "serverEndpoint": [],
                "requestOptions": []
            }
        },
        "auto_from_file": {
            "name": "auto_from_file",
            "location": 15,
            "return": [],
            "arguments": {
                "filename": [],
                "destLang": [],
                "serverEndpoint": [],
                "requestOptions": []
            }
        },
        "auto_from_buffer": {
            "name": "auto_from_buffer",
            "location": 20,
            "return": [],
            "arguments": {
                "string": [],
                "destLang": [],
                "serverEndpoint": [],
                "requestOptions": []
            }
        }
    },
    "open-gov-crawlers-master/typings/tika/unpack.py": {
        "from_file": {
            "name": "from_file",
            "location": 6,
            "return": [],
            "arguments": {
                "filename": [],
                "serverEndpoint": [],
                "requestOptions": []
            }
        },
        "from_buffer": {
            "name": "from_buffer",
            "location": 12,
            "return": [],
            "arguments": {
                "string": [],
                "serverEndpoint": [],
                "requestOptions": []
            }
        }
    },
    "open-gov-crawlers-master/typings/tika/__init__.py": {
        "initVM": {
            "name": "initVM",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/tika/tests/__init__.py": {},
    "open-gov-crawlers-master/typings/titlecase/tests.py": {
        "test_initials_regex": {
            "name": "test_initials_regex",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_initials_regex_2": {
            "name": "test_initials_regex_2",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_initials_regex_3": {
            "name": "test_initials_regex_3",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "check_input_matches_expected_output": {
            "name": "check_input_matches_expected_output",
            "location": 19,
            "return": [],
            "arguments": {
                "in_": [],
                "out": []
            }
        },
        "test_at_and_t": {
            "name": "test_at_and_t",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "test_input_output": {
            "name": "test_input_output",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_callback": {
            "name": "test_callback",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_set_small_word_list": {
            "name": "test_set_small_word_list",
            "location": 33,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/titlecase/__init__.py": {
        "_mark_immutable": {
            "name": "_mark_immutable",
            "location": 38,
            "return": [],
            "arguments": {
                "text": []
            }
        },
        "set_small_word_list": {
            "name": "set_small_word_list",
            "location": 39,
            "return": [],
            "arguments": {
                "small": []
            }
        },
        "titlecase": {
            "name": "titlecase",
            "location": 40,
            "return": [],
            "arguments": {
                "text": [],
                "callback": [],
                "small_first_last": []
            }
        },
        "cmd": {
            "name": "cmd",
            "location": 55,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/toolz/compatibility.py": {},
    "open-gov-crawlers-master/typings/toolz/dicttoolz.py": {
        "merge": {
            "name": "merge",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "merge_with": {
            "name": "merge_with",
            "location": 22,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "valmap": {
            "name": "valmap",
            "location": 39,
            "return": [],
            "arguments": {
                "func": [],
                "d": [],
                "factory": []
            }
        },
        "keymap": {
            "name": "keymap",
            "location": 52,
            "return": [],
            "arguments": {
                "func": [],
                "d": [],
                "factory": []
            }
        },
        "itemmap": {
            "name": "itemmap",
            "location": 65,
            "return": [],
            "arguments": {
                "func": [],
                "d": [],
                "factory": []
            }
        },
        "valfilter": {
            "name": "valfilter",
            "location": 78,
            "return": [],
            "arguments": {
                "predicate": [],
                "d": [],
                "factory": []
            }
        },
        "keyfilter": {
            "name": "keyfilter",
            "location": 93,
            "return": [],
            "arguments": {
                "predicate": [],
                "d": [],
                "factory": []
            }
        },
        "itemfilter": {
            "name": "itemfilter",
            "location": 108,
            "return": [],
            "arguments": {
                "predicate": [],
                "d": [],
                "factory": []
            }
        },
        "assoc": {
            "name": "assoc",
            "location": 126,
            "return": [],
            "arguments": {
                "d": [],
                "key": [],
                "value": [],
                "factory": []
            }
        },
        "dissoc": {
            "name": "dissoc",
            "location": 138,
            "return": [],
            "arguments": {
                "d": []
            }
        },
        "assoc_in": {
            "name": "assoc_in",
            "location": 153,
            "return": [],
            "arguments": {
                "d": [],
                "keys": [],
                "value": [],
                "factory": []
            }
        },
        "update_in": {
            "name": "update_in",
            "location": 167,
            "return": [],
            "arguments": {
                "d": [],
                "keys": [],
                "func": [],
                "default": [],
                "factory": []
            }
        },
        "get_in": {
            "name": "get_in",
            "location": 203,
            "return": [],
            "arguments": {
                "keys": [],
                "coll": [],
                "default": [],
                "no_default": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/functoolz.py": {
        "identity": {
            "name": "identity",
            "location": 8,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "apply": {
            "name": "apply",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "thread_first": {
            "name": "thread_first",
            "location": 29,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "thread_last": {
            "name": "thread_last",
            "location": 55,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "instanceproperty": {
            "name": "instanceproperty",
            "location": 86,
            "return": [],
            "arguments": {
                "fget": [],
                "fset": [],
                "fdel": [],
                "doc": [],
                "classval": []
            }
        },
        "memoize": {
            "name": "memoize",
            "location": 210,
            "return": [],
            "arguments": {
                "func": [],
                "cache": [],
                "key": []
            }
        },
        "compose": {
            "name": "compose",
            "location": 297,
            "return": [],
            "arguments": {}
        },
        "compose_left": {
            "name": "compose_left",
            "location": 317,
            "return": [],
            "arguments": {}
        },
        "pipe": {
            "name": "pipe",
            "location": 337,
            "return": [],
            "arguments": {
                "data": []
            }
        },
        "complement": {
            "name": "complement",
            "location": 359,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "do": {
            "name": "do",
            "location": 405,
            "return": [],
            "arguments": {
                "func": [],
                "x": []
            }
        },
        "flip": {
            "name": "flip",
            "location": 430,
            "return": [],
            "arguments": {
                "func": [],
                "a": [],
                "b": []
            }
        },
        "return_none": {
            "name": "return_none",
            "location": 455,
            "return": [],
            "arguments": {
                "exc": []
            }
        },
        "num_required_args": {
            "name": "num_required_args",
            "location": 506,
            "return": [],
            "arguments": {
                "func": [],
                "sigspec": []
            }
        },
        "has_varargs": {
            "name": "has_varargs",
            "location": 509,
            "return": [],
            "arguments": {
                "func": [],
                "sigspec": []
            }
        },
        "has_keywords": {
            "name": "has_keywords",
            "location": 512,
            "return": [],
            "arguments": {
                "func": [],
                "sigspec": []
            }
        },
        "is_valid_args": {
            "name": "is_valid_args",
            "location": 515,
            "return": [],
            "arguments": {
                "func": [],
                "args": [],
                "kwargs": [],
                "sigspec": []
            }
        },
        "is_partial_args": {
            "name": "is_partial_args",
            "location": 518,
            "return": [],
            "arguments": {
                "func": [],
                "args": [],
                "kwargs": [],
                "sigspec": []
            }
        },
        "is_arity": {
            "name": "is_arity",
            "location": 521,
            "return": [],
            "arguments": {
                "n": [],
                "func": [],
                "sigspec": []
            }
        },
        "InstanceProperty.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "fget": [],
                "fset": [],
                "fdel": [],
                "doc": [],
                "classval": []
            }
        },
        "InstanceProperty.__get__": {
            "name": "__get__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "type": []
            }
        },
        "InstanceProperty.__reduce__": {
            "name": "__reduce__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.__init__": {
            "name": "__init__",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.func": {
            "name": "func",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.__signature__": {
            "name": "__signature__",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.args": {
            "name": "args",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.keywords": {
            "name": "keywords",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.func_name": {
            "name": "func_name",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.__str__": {
            "name": "__str__",
            "location": 177,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.__repr__": {
            "name": "__repr__",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.__hash__": {
            "name": "__hash__",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.__eq__": {
            "name": "__eq__",
            "location": 186,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "curry.__ne__": {
            "name": "__ne__",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "curry.__call__": {
            "name": "__call__",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.bind": {
            "name": "bind",
            "location": 195,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.call": {
            "name": "call",
            "location": 198,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "curry.__get__": {
            "name": "__get__",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "owner": []
            }
        },
        "curry.__reduce__": {
            "name": "__reduce__",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Compose.__init__": {
            "name": "__init__",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "funcs": []
            }
        },
        "Compose.__call__": {
            "name": "__call__",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Compose.__getstate__": {
            "name": "__getstate__",
            "location": 261,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Compose.__setstate__": {
            "name": "__setstate__",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "Compose.__doc__": {
            "name": "__doc__",
            "location": 268,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Compose.__name__": {
            "name": "__name__",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Compose.__repr__": {
            "name": "__repr__",
            "location": 275,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Compose.__eq__": {
            "name": "__eq__",
            "location": 278,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Compose.__ne__": {
            "name": "__ne__",
            "location": 281,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Compose.__hash__": {
            "name": "__hash__",
            "location": 284,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Compose.__get__": {
            "name": "__get__",
            "location": 287,
            "return": [],
            "arguments": {
                "self": [],
                "obj": [],
                "objtype": []
            }
        },
        "Compose.__signature__": {
            "name": "__signature__",
            "location": 291,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "juxt.__init__": {
            "name": "__init__",
            "location": 391,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "juxt.__call__": {
            "name": "__call__",
            "location": 394,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "juxt.__getstate__": {
            "name": "__getstate__",
            "location": 397,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "juxt.__setstate__": {
            "name": "__setstate__",
            "location": 400,
            "return": [],
            "arguments": {
                "self": [],
                "state": []
            }
        },
        "excepts.__init__": {
            "name": "__init__",
            "location": 488,
            "return": [],
            "arguments": {
                "self": [],
                "exc": [],
                "func": [],
                "handler": []
            }
        },
        "excepts.__call__": {
            "name": "__call__",
            "location": 491,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "excepts.__doc__": {
            "name": "__doc__",
            "location": 495,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "excepts.__name__": {
            "name": "__name__",
            "location": 499,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/itertoolz.py": {
        "remove": {
            "name": "remove",
            "location": 6,
            "return": [],
            "arguments": {
                "predicate": [],
                "seq": []
            }
        },
        "accumulate": {
            "name": "accumulate",
            "location": 16,
            "return": [],
            "arguments": {
                "binop": [],
                "seq": [],
                "initial": []
            }
        },
        "groupby": {
            "name": "groupby",
            "location": 45,
            "return": [],
            "arguments": {
                "key": [],
                "seq": []
            }
        },
        "merge_sorted": {
            "name": "merge_sorted",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "interleave": {
            "name": "interleave",
            "location": 90,
            "return": [],
            "arguments": {
                "seqs": []
            }
        },
        "unique": {
            "name": "unique",
            "location": 105,
            "return": [],
            "arguments": {
                "seq": [],
                "key": []
            }
        },
        "isiterable": {
            "name": "isiterable",
            "location": 120,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "isdistinct": {
            "name": "isdistinct",
            "location": 132,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "take": {
            "name": "take",
            "location": 147,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "tail": {
            "name": "tail",
            "location": 159,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "drop": {
            "name": "drop",
            "location": 171,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "take_nth": {
            "name": "take_nth",
            "location": 183,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "first": {
            "name": "first",
            "location": 191,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "second": {
            "name": "second",
            "location": 199,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "nth": {
            "name": "nth",
            "location": 207,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "last": {
            "name": "last",
            "location": 215,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "get": {
            "name": "get",
            "location": 224,
            "return": [],
            "arguments": {
                "ind": [],
                "seq": [],
                "default": []
            }
        },
        "concat": {
            "name": "concat",
            "location": 259,
            "return": [],
            "arguments": {
                "seqs": []
            }
        },
        "concatv": {
            "name": "concatv",
            "location": 276,
            "return": [],
            "arguments": {}
        },
        "mapcat": {
            "name": "mapcat",
            "location": 287,
            "return": [],
            "arguments": {
                "func": [],
                "seqs": []
            }
        },
        "cons": {
            "name": "cons",
            "location": 296,
            "return": [],
            "arguments": {
                "el": [],
                "seq": []
            }
        },
        "interpose": {
            "name": "interpose",
            "location": 304,
            "return": [],
            "arguments": {
                "el": [],
                "seq": []
            }
        },
        "frequencies": {
            "name": "frequencies",
            "location": 312,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "reduceby": {
            "name": "reduceby",
            "location": 324,
            "return": [],
            "arguments": {
                "key": [],
                "binop": [],
                "seq": [],
                "init": []
            }
        },
        "iterate": {
            "name": "iterate",
            "location": 387,
            "return": [],
            "arguments": {
                "func": [],
                "x": []
            }
        },
        "sliding_window": {
            "name": "sliding_window",
            "location": 414,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "partition": {
            "name": "partition",
            "location": 430,
            "return": [],
            "arguments": {
                "n": [],
                "seq": [],
                "pad": []
            }
        },
        "partition_all": {
            "name": "partition_all",
            "location": 450,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "count": {
            "name": "count",
            "location": 466,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "pluck": {
            "name": "pluck",
            "location": 478,
            "return": [],
            "arguments": {
                "ind": [],
                "seqs": [],
                "default": []
            }
        },
        "getter": {
            "name": "getter",
            "location": 503,
            "return": [],
            "arguments": {
                "index": []
            }
        },
        "join": {
            "name": "join",
            "location": 506,
            "return": [],
            "arguments": {
                "leftkey": [],
                "leftseq": [],
                "rightkey": [],
                "rightseq": [],
                "left_default": [],
                "right_default": []
            }
        },
        "diff": {
            "name": "diff",
            "location": 566,
            "return": [],
            "arguments": {}
        },
        "topk": {
            "name": "topk",
            "location": 585,
            "return": [],
            "arguments": {
                "k": [],
                "seq": [],
                "key": []
            }
        },
        "peek": {
            "name": "peek",
            "location": 603,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "peekn": {
            "name": "peekn",
            "location": 618,
            "return": [],
            "arguments": {
                "n": [],
                "seq": []
            }
        },
        "random_sample": {
            "name": "random_sample",
            "location": 633,
            "return": [],
            "arguments": {
                "prob": [],
                "seq": [],
                "random_state": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/recipes.py": {
        "countby": {
            "name": "countby",
            "location": 6,
            "return": [],
            "arguments": {
                "key": [],
                "seq": []
            }
        },
        "partitionby": {
            "name": "partitionby",
            "location": 21,
            "return": [],
            "arguments": {
                "func": [],
                "seq": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/utils.py": {
        "raises": {
            "name": "raises",
            "location": 5,
            "return": [],
            "arguments": {
                "err": [],
                "lamda": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/_signatures.py": {
        "num_pos_args": {
            "name": "num_pos_args",
            "location": 20,
            "return": [],
            "arguments": {
                "sigspec": []
            }
        },
        "get_exclude_keywords": {
            "name": "get_exclude_keywords",
            "location": 24,
            "return": [],
            "arguments": {
                "num_pos_only": [],
                "sigspec": []
            }
        },
        "signature_or_spec": {
            "name": "signature_or_spec",
            "location": 28,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "expand_sig": {
            "name": "expand_sig",
            "location": 31,
            "return": [],
            "arguments": {
                "sig": []
            }
        },
        "create_signature_registry": {
            "name": "create_signature_registry",
            "location": 51,
            "return": [],
            "arguments": {
                "module_info": [],
                "signatures": []
            }
        },
        "check_valid": {
            "name": "check_valid",
            "location": 54,
            "return": [],
            "arguments": {
                "sig": [],
                "args": [],
                "kwargs": []
            }
        },
        "check_partial": {
            "name": "check_partial",
            "location": 58,
            "return": [],
            "arguments": {
                "sig": [],
                "args": [],
                "kwargs": []
            }
        },
        "check_arity": {
            "name": "check_arity",
            "location": 62,
            "return": [],
            "arguments": {
                "n": [],
                "sig": []
            }
        },
        "check_varargs": {
            "name": "check_varargs",
            "location": 65,
            "return": [],
            "arguments": {
                "sig": []
            }
        },
        "check_keywords": {
            "name": "check_keywords",
            "location": 68,
            "return": [],
            "arguments": {
                "sig": []
            }
        },
        "check_required_args": {
            "name": "check_required_args",
            "location": 71,
            "return": [],
            "arguments": {
                "sig": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/_version.py": {
        "get_versions": {
            "name": "get_versions",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/toolz/__init__.py": {},
    "open-gov-crawlers-master/typings/toolz/curried/exceptions.py": {
        "merge_with": {
            "name": "merge_with",
            "location": 9,
            "return": [],
            "arguments": {
                "func": [],
                "d": []
            }
        },
        "merge": {
            "name": "merge",
            "location": 13,
            "return": [],
            "arguments": {
                "d": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/curried/operator.py": {
        "should_curry": {
            "name": "should_curry",
            "location": 5,
            "return": [],
            "arguments": {
                "f": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/curried/__init__.py": {},
    "open-gov-crawlers-master/typings/toolz/sandbox/core.py": {
        "unzip": {
            "name": "unzip",
            "location": 81,
            "return": [],
            "arguments": {
                "seq": []
            }
        },
        "EqualityHashKey.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "item": []
            }
        },
        "EqualityHashKey.__hash__": {
            "name": "__hash__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EqualityHashKey.__eq__": {
            "name": "__eq__",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EqualityHashKey.__ne__": {
            "name": "__ne__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "EqualityHashKey.__str__": {
            "name": "__str__",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EqualityHashKey.__repr__": {
            "name": "__repr__",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/sandbox/parallel.py": {
        "fold": {
            "name": "fold",
            "location": 5,
            "return": [],
            "arguments": {
                "binop": [],
                "seq": [],
                "default": [],
                "map": [],
                "chunksize": [],
                "combine": []
            }
        }
    },
    "open-gov-crawlers-master/typings/toolz/sandbox/__init__.py": {},
    "open-gov-crawlers-master/typings/vcr/cassette.py": {
        "CassetteContextDecorator.from_args": {
            "name": "from_args",
            "location": 27,
            "return": [],
            "arguments": {
                "cls": [],
                "cassette_class": []
            }
        },
        "CassetteContextDecorator.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "cls": [],
                "args_getter": []
            }
        },
        "CassetteContextDecorator.__enter__": {
            "name": "__enter__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CassetteContextDecorator.__exit__": {
            "name": "__exit__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CassetteContextDecorator.__call__": {
            "name": "__call__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "function": [],
                "instance": [],
                "args": [],
                "kwargs": []
            }
        },
        "CassetteContextDecorator.get_function_name": {
            "name": "get_function_name",
            "location": 44,
            "return": [],
            "arguments": {
                "function": []
            }
        },
        "Cassette.load": {
            "name": "load",
            "location": 52,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Cassette.use_arg_getter": {
            "name": "use_arg_getter",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": [],
                "arg_getter": []
            }
        },
        "Cassette.use": {
            "name": "use",
            "location": 61,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Cassette.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "path": [],
                "serializer": [],
                "persister": [],
                "record_mode": [],
                "match_on": [],
                "before_record_request": [],
                "before_record_response": [],
                "custom_patches": [],
                "inject": [],
                "allow_playback_repeats": []
            }
        },
        "Cassette.play_count": {
            "name": "play_count",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.all_played": {
            "name": "all_played",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.requests": {
            "name": "requests",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.responses": {
            "name": "responses",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.write_protected": {
            "name": "write_protected",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.append": {
            "name": "append",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "response": []
            }
        },
        "Cassette.filter_request": {
            "name": "filter_request",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Cassette.can_play_response_for": {
            "name": "can_play_response_for",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Cassette.play_response": {
            "name": "play_response",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Cassette.responses_of": {
            "name": "responses_of",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Cassette.rewind": {
            "name": "rewind",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.find_requests_with_most_matches": {
            "name": "find_requests_with_most_matches",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Cassette.__str__": {
            "name": "__str__",
            "location": 129,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.__len__": {
            "name": "__len__",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Cassette.__contains__": {
            "name": "__contains__",
            "location": 136,
            "return": [],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/config.py": {
        "VCR.is_test_method": {
            "name": "is_test_method",
            "location": 7,
            "return": [],
            "arguments": {
                "method_name": [],
                "function": []
            }
        },
        "VCR.ensure_suffix": {
            "name": "ensure_suffix",
            "location": 11,
            "return": [],
            "arguments": {
                "suffix": []
            }
        },
        "VCR.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "path_transformer": [],
                "before_record_request": [],
                "custom_patches": [],
                "filter_query_parameters": [],
                "ignore_hosts": [],
                "record_mode": [],
                "ignore_localhost": [],
                "filter_headers": [],
                "before_record_response": [],
                "filter_post_data_parameters": [],
                "match_on": [],
                "before_record": [],
                "inject_cassette": [],
                "serializer": [],
                "cassette_library_dir": [],
                "func_path_generator": [],
                "decode_compressed_response": []
            }
        },
        "VCR.use_cassette": {
            "name": "use_cassette",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "VCR.get_merged_config": {
            "name": "get_merged_config",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCR.register_serializer": {
            "name": "register_serializer",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "serializer": []
            }
        },
        "VCR.register_matcher": {
            "name": "register_matcher",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "matcher": []
            }
        },
        "VCR.register_persister": {
            "name": "register_persister",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "persister": []
            }
        },
        "VCR.test_case": {
            "name": "test_case",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "predicate": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/errors.py": {
        "CannotOverwriteExistingCassetteException.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/filters.py": {
        "replace_headers": {
            "name": "replace_headers",
            "location": 5,
            "return": [],
            "arguments": {
                "request": [],
                "replacements": []
            }
        },
        "remove_headers": {
            "name": "remove_headers",
            "location": 14,
            "return": [],
            "arguments": {
                "request": [],
                "headers_to_remove": []
            }
        },
        "replace_query_parameters": {
            "name": "replace_query_parameters",
            "location": 20,
            "return": [],
            "arguments": {
                "request": [],
                "replacements": []
            }
        },
        "remove_query_parameters": {
            "name": "remove_query_parameters",
            "location": 31,
            "return": [],
            "arguments": {
                "request": [],
                "query_parameters_to_remove": []
            }
        },
        "replace_post_data_parameters": {
            "name": "replace_post_data_parameters",
            "location": 37,
            "return": [],
            "arguments": {
                "request": [],
                "replacements": []
            }
        },
        "remove_post_data_parameters": {
            "name": "remove_post_data_parameters",
            "location": 48,
            "return": [],
            "arguments": {
                "request": [],
                "post_data_parameters_to_remove": []
            }
        },
        "decode_response": {
            "name": "decode_response",
            "location": 54,
            "return": [],
            "arguments": {
                "response": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/matchers.py": {
        "method": {
            "name": "method",
            "location": 6,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "uri": {
            "name": "uri",
            "location": 9,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "host": {
            "name": "host",
            "location": 12,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "scheme": {
            "name": "scheme",
            "location": 15,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "port": {
            "name": "port",
            "location": 18,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "path": {
            "name": "path",
            "location": 21,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "query": {
            "name": "query",
            "location": 24,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "raw_body": {
            "name": "raw_body",
            "location": 27,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "body": {
            "name": "body",
            "location": 30,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "headers": {
            "name": "headers",
            "location": 33,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": []
            }
        },
        "requests_match": {
            "name": "requests_match",
            "location": 39,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": [],
                "matchers": []
            }
        },
        "get_matchers_results": {
            "name": "get_matchers_results",
            "location": 42,
            "return": [],
            "arguments": {
                "r1": [],
                "r2": [],
                "matchers": []
            }
        },
        "get_assertion_message": {
            "name": "get_assertion_message",
            "location": 50,
            "return": [],
            "arguments": {
                "assertion_details": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/migration.py": {
        "preprocess_yaml": {
            "name": "preprocess_yaml",
            "location": 18,
            "return": [],
            "arguments": {
                "cassette": []
            }
        },
        "build_uri": {
            "name": "build_uri",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "migrate_json": {
            "name": "migrate_json",
            "location": 25,
            "return": [],
            "arguments": {
                "in_fp": [],
                "out_fp": []
            }
        },
        "migrate_yml": {
            "name": "migrate_yml",
            "location": 28,
            "return": [],
            "arguments": {
                "in_fp": [],
                "out_fp": []
            }
        },
        "migrate": {
            "name": "migrate",
            "location": 31,
            "return": [],
            "arguments": {
                "file_path": [],
                "migration_fn": []
            }
        },
        "try_migrate": {
            "name": "try_migrate",
            "location": 34,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "main": {
            "name": "main",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "open-gov-crawlers-master/typings/vcr/patch.py": {
        "reset_patchers": {
            "name": "reset_patchers",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "force_reset": {
            "name": "force_reset",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "CassettePatcherBuilder.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "cassette": []
            }
        },
        "CassettePatcherBuilder.build": {
            "name": "build",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConnectionRemover.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "connection_class": []
            }
        },
        "ConnectionRemover.add_connection_to_pool_entry": {
            "name": "add_connection_to_pool_entry",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "pool": [],
                "connection": []
            }
        },
        "ConnectionRemover.remove_connection_to_pool_entry": {
            "name": "remove_connection_to_pool_entry",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "pool": [],
                "connection": []
            }
        },
        "ConnectionRemover.__enter__": {
            "name": "__enter__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConnectionRemover.__exit__": {
            "name": "__exit__",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/record_mode.py": {},
    "open-gov-crawlers-master/typings/vcr/request.py": {
        "Request.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "uri": [],
                "body": [],
                "headers": []
            }
        },
        "Request.headers": {
            "name": "headers",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Request.body": {
            "name": "body",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Request.add_header": {
            "name": "add_header",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Request.scheme": {
            "name": "scheme",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.host": {
            "name": "host",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.port": {
            "name": "port",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.path": {
            "name": "path",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.query": {
            "name": "query",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.url": {
            "name": "url",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.protocol": {
            "name": "protocol",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.__str__": {
            "name": "__str__",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Request.__repr__": {
            "name": "__repr__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HeadersDict.__setitem__": {
            "name": "__setitem__",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/serialize.py": {
        "deserialize": {
            "name": "deserialize",
            "location": 6,
            "return": [],
            "arguments": {
                "cassette_string": [],
                "serializer": []
            }
        },
        "serialize": {
            "name": "serialize",
            "location": 9,
            "return": [],
            "arguments": {
                "cassette_dict": [],
                "serializer": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/util.py": {
        "partition_dict": {
            "name": "partition_dict",
            "location": 60,
            "return": [],
            "arguments": {
                "predicate": [],
                "dictionary": []
            }
        },
        "compose": {
            "name": "compose",
            "location": 63,
            "return": [],
            "arguments": {}
        },
        "read_body": {
            "name": "read_body",
            "location": 66,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "auto_decorate": {
            "name": "auto_decorate",
            "location": 69,
            "return": [],
            "arguments": {
                "decorator": [],
                "predicate": []
            }
        },
        "CaseInsensitiveDict.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "CaseInsensitiveDict.__setitem__": {
            "name": "__setitem__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "CaseInsensitiveDict.__getitem__": {
            "name": "__getitem__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaseInsensitiveDict.__delitem__": {
            "name": "__delitem__",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "CaseInsensitiveDict.__iter__": {
            "name": "__iter__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.__len__": {
            "name": "__len__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.lower_items": {
            "name": "lower_items",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.__eq__": {
            "name": "__eq__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "CaseInsensitiveDict.copy": {
            "name": "copy",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CaseInsensitiveDict.__repr__": {
            "name": "__repr__",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/_handle_coroutine.py": {},
    "open-gov-crawlers-master/typings/vcr/__init__.py": {},
    "open-gov-crawlers-master/typings/vcr/persisters/filesystem.py": {
        "FilesystemPersister.load_cassette": {
            "name": "load_cassette",
            "location": 7,
            "return": [],
            "arguments": {
                "cls": [],
                "cassette_path": [],
                "serializer": []
            }
        },
        "FilesystemPersister.save_cassette": {
            "name": "save_cassette",
            "location": 11,
            "return": [],
            "arguments": {
                "cassette_path": [],
                "cassette_dict": [],
                "serializer": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/persisters/__init__.py": {},
    "open-gov-crawlers-master/typings/vcr/serializers/compat.py": {
        "convert_to_bytes": {
            "name": "convert_to_bytes",
            "location": 5,
            "return": [],
            "arguments": {
                "resp": []
            }
        },
        "convert_to_unicode": {
            "name": "convert_to_unicode",
            "location": 8,
            "return": [],
            "arguments": {
                "resp": []
            }
        },
        "convert_body_to_bytes": {
            "name": "convert_body_to_bytes",
            "location": 11,
            "return": [],
            "arguments": {
                "resp": []
            }
        },
        "convert_body_to_unicode": {
            "name": "convert_body_to_unicode",
            "location": 25,
            "return": [],
            "arguments": {
                "resp": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/serializers/jsonserializer.py": {
        "deserialize": {
            "name": "deserialize",
            "location": 5,
            "return": [],
            "arguments": {
                "cassette_string": []
            }
        },
        "serialize": {
            "name": "serialize",
            "location": 8,
            "return": [],
            "arguments": {
                "cassette_dict": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/serializers/yamlserializer.py": {
        "deserialize": {
            "name": "deserialize",
            "location": 5,
            "return": [],
            "arguments": {
                "cassette_string": []
            }
        },
        "serialize": {
            "name": "serialize",
            "location": 8,
            "return": [],
            "arguments": {
                "cassette_dict": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/serializers/__init__.py": {},
    "open-gov-crawlers-master/typings/vcr/stubs/aiohttp_stubs.py": {
        "build_response": {
            "name": "build_response",
            "location": 36,
            "return": [],
            "arguments": {
                "vcr_request": [],
                "vcr_response": [],
                "history": []
            }
        },
        "play_responses": {
            "name": "play_responses",
            "location": 39,
            "return": [],
            "arguments": {
                "cassette": [],
                "vcr_request": [],
                "kwargs": []
            }
        },
        "vcr_request": {
            "name": "vcr_request",
            "location": 54,
            "return": [],
            "arguments": {
                "cassette": [],
                "real_request": []
            }
        },
        "MockClientResponse.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "request_info": []
            }
        },
        "MockClientResponse.release": {
            "name": "release",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MockClientResponse.content": {
            "name": "content",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/stubs/boto3_stubs.py": {
        "VCRRequestsHTTPSConnection.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/stubs/boto_stubs.py": {},
    "open-gov-crawlers-master/typings/vcr/stubs/compat.py": {
        "get_header": {
            "name": "get_header",
            "location": 5,
            "return": [],
            "arguments": {
                "message": [],
                "name": []
            }
        },
        "get_header_items": {
            "name": "get_header_items",
            "location": 8,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "get_headers": {
            "name": "get_headers",
            "location": 11,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "get_httpmessage": {
            "name": "get_httpmessage",
            "location": 14,
            "return": [],
            "arguments": {
                "headers": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/stubs/httplib2_stubs.py": {
        "VCRHTTPConnectionWithTimeout.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPSConnectionWithTimeout.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/stubs/httpx_stubs.py": {
        "async_vcr_send": {
            "name": "async_vcr_send",
            "location": 7,
            "return": [],
            "arguments": {
                "cassette": [],
                "real_send": []
            }
        },
        "sync_vcr_send": {
            "name": "sync_vcr_send",
            "location": 10,
            "return": [],
            "arguments": {
                "cassette": [],
                "real_send": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/stubs/requests_stubs.py": {},
    "open-gov-crawlers-master/typings/vcr/stubs/tornado_stubs.py": {
        "vcr_fetch_impl": {
            "name": "vcr_fetch_impl",
            "location": 6,
            "return": [],
            "arguments": {
                "cassette": [],
                "real_fetch_impl": []
            }
        }
    },
    "open-gov-crawlers-master/typings/vcr/stubs/urllib3_stubs.py": {},
    "open-gov-crawlers-master/typings/vcr/stubs/__init__.py": {
        "parse_headers": {
            "name": "parse_headers",
            "location": 36,
            "return": [],
            "arguments": {
                "header_list": []
            }
        },
        "serialize_headers": {
            "name": "serialize_headers",
            "location": 43,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "VCRFakeSocket.close": {
            "name": "close",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRFakeSocket.settimeout": {
            "name": "settimeout",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRFakeSocket.fileno": {
            "name": "fileno",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "recorded_response": []
            }
        },
        "VCRHTTPResponse.closed": {
            "name": "closed",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.read": {
            "name": "read",
            "location": 57,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.readall": {
            "name": "readall",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.readinto": {
            "name": "readinto",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.readline": {
            "name": "readline",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.readlines": {
            "name": "readlines",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.seekable": {
            "name": "seekable",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.tell": {
            "name": "tell",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.isatty": {
            "name": "isatty",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.seek": {
            "name": "seek",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.close": {
            "name": "close",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.getcode": {
            "name": "getcode",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.isclosed": {
            "name": "isclosed",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.info": {
            "name": "info",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.getheaders": {
            "name": "getheaders",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRHTTPResponse.getheader": {
            "name": "getheader",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "header": [],
                "default": []
            }
        },
        "VCRHTTPResponse.readable": {
            "name": "readable",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRConnection.request": {
            "name": "request",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "body": [],
                "headers": []
            }
        },
        "VCRConnection.putrequest": {
            "name": "putrequest",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "method": [],
                "url": []
            }
        },
        "VCRConnection.putheader": {
            "name": "putheader",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "header": []
            }
        },
        "VCRConnection.send": {
            "name": "send",
            "location": 124,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "VCRConnection.close": {
            "name": "close",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRConnection.endheaders": {
            "name": "endheaders",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "message_body": []
            }
        },
        "VCRConnection.getresponse": {
            "name": "getresponse",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "VCRConnection.set_debuglevel": {
            "name": "set_debuglevel",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRConnection.connect": {
            "name": "connect",
            "location": 150,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRConnection.sock": {
            "name": "sock",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "VCRConnection.__init__": {
            "name": "__init__",
            "location": 167,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VCRConnection.__setattr__": {
            "name": "__setattr__",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "value": []
            }
        },
        "VCRConnection.__getattr__": {
            "name": "__getattr__",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    }
}
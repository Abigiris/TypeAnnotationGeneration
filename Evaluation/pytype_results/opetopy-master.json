{
    "opetopy-master/docs/conf.py": {},
    "opetopy-master/opetopy/common.py": {
        "AbstractRuleInstance._toTex": {
            "name": "_toTex",
            "location": 17,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractRuleInstance.eval": {
            "name": "eval",
            "location": 20,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractRuleInstance.toTex": {
            "name": "toTex",
            "location": 27,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "DerivationError.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scope": [],
                "message": []
            }
        },
        "DerivationError.__str__": {
            "name": "__str__",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/opetopy/NamedOpetope.py": {
        "point": {
            "name": "point",
            "location": 850,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "name": []
            }
        },
        "shift": {
            "name": "shift",
            "location": 859,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "seq": [
                    "_T0@@"
                ],
                "name": []
            }
        },
        "degen": {
            "name": "degen",
            "location": 877,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "seq": [
                    "_T0@@"
                ]
            }
        },
        "degenfill": {
            "name": "degenfill",
            "location": 896,
            "return": [
                "Any"
            ],
            "arguments": {
                "seq": [],
                "name": []
            }
        },
        "graft": {
            "name": "graft",
            "location": 904,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "seqt": [],
                "seqx": [],
                "name": []
            }
        },
        "Arrow": {
            "name": "Arrow",
            "location": 1200,
            "return": [
                "Shift"
            ],
            "arguments": {
                "pointName": [],
                "arrowName": []
            }
        },
        "OpetopicInteger": {
            "name": "OpetopicInteger",
            "location": 1208,
            "return": [
                "Union[(DegenFill, Shift)]"
            ],
            "arguments": {
                "n": [],
                "pointName": [],
                "arrowName": [],
                "cellName": []
            }
        },
        "Variable.__eq__": {
            "name": "__eq__",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Variable.__hash__": {
            "name": "__hash__",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Variable.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "dim": []
            }
        },
        "Variable.__ne__": {
            "name": "__ne__",
            "location": 48,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Variable.__repr__": {
            "name": "__repr__",
            "location": 53,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Variable.__str__": {
            "name": "__str__",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Variable.toTex": {
            "name": "toTex",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Term.__contains__": {
            "name": "__contains__",
            "location": 85,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        },
        "Term.__eq__": {
            "name": "__eq__",
            "location": 124,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "var": [],
                "degen": []
            }
        },
        "Term.__ne__": {
            "name": "__ne__",
            "location": 154,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Term.__repr__": {
            "name": "__repr__",
            "location": 157,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Term.__str__": {
            "name": "__str__",
            "location": 160,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Term.dimension": {
            "name": "dimension",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Term.graftTuples": {
            "name": "graftTuples",
            "location": 187,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Term.isVariable": {
            "name": "isVariable",
            "location": 205,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Term.toTex": {
            "name": "toTex",
            "location": 212,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Term.variables": {
            "name": "variables",
            "location": 229,
            "return": [
                "set"
            ],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "Type.__contains__": {
            "name": "__contains__",
            "location": 259,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        },
        "Type.__init__": {
            "name": "__init__",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "terms": []
            }
        },
        "Type.__repr__": {
            "name": "__repr__",
            "location": 296,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.__str__": {
            "name": "__str__",
            "location": 299,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.toTex": {
            "name": "toTex",
            "location": 302,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.variables": {
            "name": "variables",
            "location": 308,
            "return": [
                "set"
            ],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "Typing.__hash__": {
            "name": "__hash__",
            "location": 332,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Typing.__init__": {
            "name": "__init__",
            "location": 335,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "term": [],
                "type": []
            }
        },
        "Typing.__repr__": {
            "name": "__repr__",
            "location": 344,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Typing.__str__": {
            "name": "__str__",
            "location": 347,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Typing.toTex": {
            "name": "toTex",
            "location": 350,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.__add__": {
            "name": "__add__",
            "location": 358,
            "return": [
                "_TContext@@Context@@"
            ],
            "arguments": {
                "self": [
                    "_TContext@@Context@@"
                ],
                "typing": []
            }
        },
        "Context.__and__": {
            "name": "__and__",
            "location": 379,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Context.__contains__": {
            "name": "__contains__",
            "location": 390,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        },
        "Context.__getitem__": {
            "name": "__getitem__",
            "location": 401,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Context.__or__": {
            "name": "__or__",
            "location": 413,
            "return": [
                "_TContext@@Context@@"
            ],
            "arguments": {
                "self": [
                    "_TContext@@Context@@"
                ],
                "other": []
            }
        },
        "Context.__repr__": {
            "name": "__repr__",
            "location": 423,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.__str__": {
            "name": "__str__",
            "location": 426,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.graftTuples": {
            "name": "graftTuples",
            "location": 429,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.source": {
            "name": "source",
            "location": 443,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "var": [],
                "k": []
            }
        },
        "Context.toTex": {
            "name": "toTex",
            "location": 469,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.typeOf": {
            "name": "typeOf",
            "location": 475,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        },
        "Context.variables": {
            "name": "variables",
            "location": 489,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "EquationalTheory.__add__": {
            "name": "__add__",
            "location": 508,
            "return": [
                "_TEquationalTheory@@EquationalTheory@@"
            ],
            "arguments": {
                "self": [
                    "_TEquationalTheory@@EquationalTheory@@"
                ],
                "eq": []
            }
        },
        "EquationalTheory.__init__": {
            "name": "__init__",
            "location": 538,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EquationalTheory.__or__": {
            "name": "__or__",
            "location": 541,
            "return": [
                "_TEquationalTheory@@EquationalTheory@@"
            ],
            "arguments": {
                "self": [
                    "_TEquationalTheory@@EquationalTheory@@"
                ],
                "other": []
            }
        },
        "EquationalTheory.__repr__": {
            "name": "__repr__",
            "location": 552,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EquationalTheory.__str__": {
            "name": "__str__",
            "location": 555,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "EquationalTheory._index": {
            "name": "_index",
            "location": 561,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "a": []
            }
        },
        "EquationalTheory.classOf": {
            "name": "classOf",
            "location": 572,
            "return": [
                "set"
            ],
            "arguments": {
                "self": [],
                "a": [
                    "_T0@@"
                ]
            }
        },
        "EquationalTheory.equal": {
            "name": "equal",
            "location": 582,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "EquationalTheory.isIn": {
            "name": "isIn",
            "location": 593,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "var": [],
                "term": []
            }
        },
        "EquationalTheory.toTex": {
            "name": "toTex",
            "location": 605,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OCMT.__init__": {
            "name": "__init__",
            "location": 624,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "theory": [],
                "context": []
            }
        },
        "OCMT.__repr__": {
            "name": "__repr__",
            "location": 628,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OCMT.__str__": {
            "name": "__str__",
            "location": 631,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OCMT.equal": {
            "name": "equal",
            "location": 635,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "t": [],
                "u": []
            }
        },
        "OCMT.isIn": {
            "name": "isIn",
            "location": 666,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "var": [],
                "term": []
            }
        },
        "OCMT.source": {
            "name": "source",
            "location": 676,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "var": [],
                "k": []
            }
        },
        "OCMT.target": {
            "name": "target",
            "location": 684,
            "return": [
                "Variable"
            ],
            "arguments": {
                "self": [],
                "var": [],
                "k": []
            }
        },
        "OCMT.toTex": {
            "name": "toTex",
            "location": 697,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "OCMT.typeOf": {
            "name": "typeOf",
            "location": 701,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        },
        "Sequent.__init__": {
            "name": "__init__",
            "location": 725,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "theory": [],
                "context": [],
                "typing": []
            }
        },
        "Sequent.__repr__": {
            "name": "__repr__",
            "location": 730,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.__str__": {
            "name": "__str__",
            "location": 733,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.graft": {
            "name": "graft",
            "location": 738,
            "return": [
                "Union[(_T0, _T2)]"
            ],
            "arguments": {
                "self": [],
                "t": [
                    "_T0@@"
                ],
                "x": [],
                "u": [
                    "_T2@@"
                ]
            }
        },
        "Sequent.substitute": {
            "name": "substitute",
            "location": 775,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "u": [
                    "_T0@@"
                ],
                "s": [],
                "a": []
            }
        },
        "Sequent.toTex": {
            "name": "toTex",
            "location": 839,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RuleInstance.eval": {
            "name": "eval",
            "location": 1006,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__init__": {
            "name": "__init__",
            "location": 1021,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Point.__repr__": {
            "name": "__repr__",
            "location": 1024,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__str__": {
            "name": "__str__",
            "location": 1027,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point._toTex": {
            "name": "_toTex",
            "location": 1030,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.eval": {
            "name": "eval",
            "location": 1039,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__init__": {
            "name": "__init__",
            "location": 1054,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "Degen.__repr__": {
            "name": "__repr__",
            "location": 1061,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__str__": {
            "name": "__str__",
            "location": 1064,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen._toTex": {
            "name": "_toTex",
            "location": 1067,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.eval": {
            "name": "eval",
            "location": 1077,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__init__": {
            "name": "__init__",
            "location": 1094,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "name": []
            }
        },
        "Shift.__repr__": {
            "name": "__repr__",
            "location": 1098,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__str__": {
            "name": "__str__",
            "location": 1101,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift._toTex": {
            "name": "_toTex",
            "location": 1104,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.eval": {
            "name": "eval",
            "location": 1114,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill.__init__": {
            "name": "__init__",
            "location": 1126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "name": []
            }
        },
        "DegenFill.__repr__": {
            "name": "__repr__",
            "location": 1130,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill.__str__": {
            "name": "__str__",
            "location": 1133,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill._toTex": {
            "name": "_toTex",
            "location": 1136,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill.eval": {
            "name": "eval",
            "location": 1144,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__init__": {
            "name": "__init__",
            "location": 1157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": [],
                "a": []
            }
        },
        "Graft.__repr__": {
            "name": "__repr__",
            "location": 1169,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__str__": {
            "name": "__str__",
            "location": 1174,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft._toTex": {
            "name": "_toTex",
            "location": 1179,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.eval": {
            "name": "eval",
            "location": 1190,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpetopicInteger.toTex": {
            "name": "toTex",
            "location": 1232,
            "return": [],
            "arguments": {
                "i": []
            }
        }
    },
    "opetopy-master/opetopy/NamedOpetopicSet.py": {
        "repres": {
            "name": "repres",
            "location": 16,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "seq": []
            }
        },
        "sum": {
            "name": "sum",
            "location": 77,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "ocmt1": [],
                "ocmt2": []
            }
        },
        "glue": {
            "name": "glue",
            "location": 92,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "ocmt": [
                    "_T0@@"
                ],
                "aName": [],
                "bName": []
            }
        },
        "zero": {
            "name": "zero",
            "location": 125,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {}
        },
        "RuleInstance.eval": {
            "name": "eval",
            "location": 137,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repr.__init__": {
            "name": "__init__",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "Repr.__repr__": {
            "name": "__repr__",
            "location": 155,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repr.__str__": {
            "name": "__str__",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repr._toTex": {
            "name": "_toTex",
            "location": 161,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Repr.eval": {
            "name": "eval",
            "location": 171,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum.__init__": {
            "name": "__init__",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": []
            }
        },
        "Sum.__repr__": {
            "name": "__repr__",
            "location": 193,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum.__str__": {
            "name": "__str__",
            "location": 197,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum._toTex": {
            "name": "_toTex",
            "location": 201,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum.eval": {
            "name": "eval",
            "location": 211,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue.__init__": {
            "name": "__init__",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "a": [],
                "b": []
            }
        },
        "Glue.__repr__": {
            "name": "__repr__",
            "location": 229,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue.__str__": {
            "name": "__str__",
            "location": 234,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue._toTex": {
            "name": "_toTex",
            "location": 239,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue.eval": {
            "name": "eval",
            "location": 250,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Zero._toTex": {
            "name": "_toTex",
            "location": 263,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Zero.eval": {
            "name": "eval",
            "location": 278,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "self": []
            }
        },
        "Zero._toTex.__repr__": {
            "name": "__repr__",
            "location": 272,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Zero._toTex.__str__": {
            "name": "__str__",
            "location": 275,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/opetopy/NamedOpetopicSetM.py": {
        "point": {
            "name": "point",
            "location": 18,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "name": []
            }
        },
        "degen": {
            "name": "degen",
            "location": 29,
            "return": [
                "NamedOpetope.Sequent"
            ],
            "arguments": {
                "ocmt": [],
                "name": []
            }
        },
        "pd": {
            "name": "pd",
            "location": 43,
            "return": [
                "NamedOpetope.Sequent"
            ],
            "arguments": {
                "ocmt": [],
                "name": []
            }
        },
        "graft": {
            "name": "graft",
            "location": 54,
            "return": [
                "NamedOpetope.Sequent"
            ],
            "arguments": {
                "seqt": [],
                "seqx": [],
                "name": []
            }
        },
        "shift": {
            "name": "shift",
            "location": 64,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "seq": [],
                "name": []
            }
        },
        "zero": {
            "name": "zero",
            "location": 103,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {}
        },
        "sum": {
            "name": "sum",
            "location": 112,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "ocmt1": [],
                "ocmt2": []
            }
        },
        "glue": {
            "name": "glue",
            "location": 122,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "ocmt": [
                    "_T0@@"
                ],
                "aName": [],
                "bName": []
            }
        },
        "RuleInstance.eval": {
            "name": "eval",
            "location": 135,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__init__": {
            "name": "__init__",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Point.__repr__": {
            "name": "__repr__",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__str__": {
            "name": "__str__",
            "location": 156,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point._toTex": {
            "name": "_toTex",
            "location": 159,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.eval": {
            "name": "eval",
            "location": 168,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__init__": {
            "name": "__init__",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "name": []
            }
        },
        "Degen.__repr__": {
            "name": "__repr__",
            "location": 192,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__str__": {
            "name": "__str__",
            "location": 195,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen._toTex": {
            "name": "_toTex",
            "location": 198,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.eval": {
            "name": "eval",
            "location": 208,
            "return": [
                "NamedOpetope.Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pd.__init__": {
            "name": "__init__",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "name": []
            }
        },
        "Pd.__repr__": {
            "name": "__repr__",
            "location": 238,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pd.__str__": {
            "name": "__str__",
            "location": 241,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pd._toTex": {
            "name": "_toTex",
            "location": 244,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Pd.eval": {
            "name": "eval",
            "location": 254,
            "return": [
                "NamedOpetope.Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__init__": {
            "name": "__init__",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": [],
                "a": []
            }
        },
        "Graft.__repr__": {
            "name": "__repr__",
            "location": 287,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__str__": {
            "name": "__str__",
            "location": 292,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft._toTex": {
            "name": "_toTex",
            "location": 297,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.eval": {
            "name": "eval",
            "location": 308,
            "return": [
                "NamedOpetope.Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__init__": {
            "name": "__init__",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "name": []
            }
        },
        "Shift.__repr__": {
            "name": "__repr__",
            "location": 338,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__str__": {
            "name": "__str__",
            "location": 341,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift._toTex": {
            "name": "_toTex",
            "location": 344,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.eval": {
            "name": "eval",
            "location": 354,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "self": []
            }
        },
        "Zero._toTex": {
            "name": "_toTex",
            "location": 367,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Zero.eval": {
            "name": "eval",
            "location": 382,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum.__init__": {
            "name": "__init__",
            "location": 394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": []
            }
        },
        "Sum.__repr__": {
            "name": "__repr__",
            "location": 404,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum.__str__": {
            "name": "__str__",
            "location": 408,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum._toTex": {
            "name": "_toTex",
            "location": 412,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sum.eval": {
            "name": "eval",
            "location": 422,
            "return": [
                "NamedOpetope.OCMT"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue.__init__": {
            "name": "__init__",
            "location": 444,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "a": [],
                "b": []
            }
        },
        "Glue.__repr__": {
            "name": "__repr__",
            "location": 449,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue.__str__": {
            "name": "__str__",
            "location": 454,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue._toTex": {
            "name": "_toTex",
            "location": 459,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Glue.eval": {
            "name": "eval",
            "location": 470,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill.__init__": {
            "name": "__init__",
            "location": 491,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "dname": [],
                "fname": []
            }
        },
        "DegenFill.__repr__": {
            "name": "__repr__",
            "location": 494,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill.__str__": {
            "name": "__str__",
            "location": 497,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill._toTex": {
            "name": "_toTex",
            "location": 500,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DegenFill.eval": {
            "name": "eval",
            "location": 508,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Zero._toTex.__repr__": {
            "name": "__repr__",
            "location": 376,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Zero._toTex.__str__": {
            "name": "__str__",
            "location": 379,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/opetopy/UnnamedOpetope.py": {
        "point": {
            "name": "point",
            "location": 837,
            "return": [
                "Sequent"
            ],
            "arguments": {}
        },
        "degen": {
            "name": "degen",
            "location": 845,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "seq": []
            }
        },
        "shift": {
            "name": "shift",
            "location": 858,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "seq": []
            }
        },
        "graft": {
            "name": "graft",
            "location": 875,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "seq1": [],
                "seq2": [],
                "addr": []
            }
        },
        "address": {
            "name": "address",
            "location": 1070,
            "return": [
                "Any"
            ],
            "arguments": {
                "lst": [],
                "dim": []
            }
        },
        "Arrow": {
            "name": "Arrow",
            "location": 1129,
            "return": [
                "Shift"
            ],
            "arguments": {}
        },
        "OpetopicInteger": {
            "name": "OpetopicInteger",
            "location": 1136,
            "return": [
                "Union[(Degen, Graft, Shift)]"
            ],
            "arguments": {
                "n": []
            }
        },
        "OpetopicTree": {
            "name": "OpetopicTree",
            "location": 1151,
            "return": [
                "Union[(Degen, Graft, Shift)]"
            ],
            "arguments": {
                "tree": []
            }
        },
        "ProofTree": {
            "name": "ProofTree",
            "location": 1189,
            "return": [
                "Union[(Degen, Graft, Point, Shift)]"
            ],
            "arguments": {
                "p": []
            }
        },
        "Address.__add__": {
            "name": "__add__",
            "location": 47,
            "return": [
                "_TAddress@@Address@@"
            ],
            "arguments": {
                "self": [
                    "_TAddress@@Address@@"
                ],
                "other": []
            }
        },
        "Address.__eq__": {
            "name": "__eq__",
            "location": 69,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Address.__hash__": {
            "name": "__hash__",
            "location": 85,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Address.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dim": []
            }
        },
        "Address.__lt__": {
            "name": "__lt__",
            "location": 101,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Address.__mul__": {
            "name": "__mul__",
            "location": 121,
            "return": [
                "_TAddress@@Address@@"
            ],
            "arguments": {
                "self": [
                    "_TAddress@@Address@@"
                ],
                "other": []
            }
        },
        "Address.__repr__": {
            "name": "__repr__",
            "location": 139,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Address.__str__": {
            "name": "__str__",
            "location": 143,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Address.epsilon": {
            "name": "epsilon",
            "location": 155,
            "return": [
                "Address"
            ],
            "arguments": {
                "dim": []
            }
        },
        "Address.edgeDecomposition": {
            "name": "edgeDecomposition",
            "location": 163,
            "return": [
                "Tuple[(Address, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Address.isEpsilon": {
            "name": "isEpsilon",
            "location": 176,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Address.fromList": {
            "name": "fromList",
            "location": 184,
            "return": [
                "Any"
            ],
            "arguments": {
                "l": [],
                "dim": []
            }
        },
        "Address.fromListOfAddresses": {
            "name": "fromListOfAddresses",
            "location": 209,
            "return": [
                "Any"
            ],
            "arguments": {
                "l": []
            }
        },
        "Address.shift": {
            "name": "shift",
            "location": 223,
            "return": [
                "_TAddress@@Address@@"
            ],
            "arguments": {
                "self": [
                    "_TAddress@@Address@@"
                ],
                "n": []
            }
        },
        "Address.substitution": {
            "name": "substitution",
            "location": 241,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "a": [
                    "_T0@@"
                ],
                "b": [],
                "c": []
            }
        },
        "Address.toTex": {
            "name": "toTex",
            "location": 269,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.__add__": {
            "name": "__add__",
            "location": 290,
            "return": [
                "_TContext@@Context@@"
            ],
            "arguments": {
                "self": [
                    "_TContext@@Context@@"
                ],
                "other": []
            }
        },
        "Context.__call__": {
            "name": "__call__",
            "location": 337,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "Context.__eq__": {
            "name": "__eq__",
            "location": 351,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Context.__init__": {
            "name": "__init__",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dim": []
            }
        },
        "Context.__ne__": {
            "name": "__ne__",
            "location": 373,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Context.__repr__": {
            "name": "__repr__",
            "location": 376,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.__str__": {
            "name": "__str__",
            "location": 379,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.__sub__": {
            "name": "__sub__",
            "location": 392,
            "return": [
                "_TContext@@Context@@"
            ],
            "arguments": {
                "self": [
                    "_TContext@@Context@@"
                ],
                "addr": []
            }
        },
        "Context.definedOnLeaf": {
            "name": "definedOnLeaf",
            "location": 407,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "Context.leaves": {
            "name": "leaves",
            "location": 413,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.toTex": {
            "name": "toTex",
            "location": 419,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Preopetope.__add__": {
            "name": "__add__",
            "location": 437,
            "return": [
                "_TPreopetope@@Preopetope@@"
            ],
            "arguments": {
                "self": [
                    "_TPreopetope@@Preopetope@@"
                ],
                "t": []
            }
        },
        "Preopetope.__eq__": {
            "name": "__eq__",
            "location": 477,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Preopetope.__init__": {
            "name": "__init__",
            "location": 500,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dim": []
            }
        },
        "Preopetope.__repr__": {
            "name": "__repr__",
            "location": 514,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Preopetope.__str__": {
            "name": "__str__",
            "location": 517,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Preopetope.__sub__": {
            "name": "__sub__",
            "location": 540,
            "return": [
                "_TPreopetope@@Preopetope@@"
            ],
            "arguments": {
                "self": [
                    "_TPreopetope@@Preopetope@@"
                ],
                "addr": []
            }
        },
        "Preopetope.degenerate": {
            "name": "degenerate",
            "location": 556,
            "return": [
                "Preopetope"
            ],
            "arguments": {
                "q": []
            }
        },
        "Preopetope.empty": {
            "name": "empty",
            "location": 569,
            "return": [
                "Preopetope"
            ],
            "arguments": {}
        },
        "Preopetope.fromDictOfPreopetopes": {
            "name": "fromDictOfPreopetopes",
            "location": 576,
            "return": [
                "Preopetope"
            ],
            "arguments": {
                "d": []
            }
        },
        "Preopetope.grafting": {
            "name": "grafting",
            "location": 592,
            "return": [
                "Any"
            ],
            "arguments": {
                "p": [],
                "addr": [],
                "q": []
            }
        },
        "Preopetope.improperGrafting": {
            "name": "improperGrafting",
            "location": 628,
            "return": [
                "Any"
            ],
            "arguments": {
                "p": [],
                "addr": [],
                "q": []
            }
        },
        "Preopetope.leafAddresses": {
            "name": "leafAddresses",
            "location": 637,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Preopetope.nodeAddresses": {
            "name": "nodeAddresses",
            "location": 648,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "Preopetope.point": {
            "name": "point",
            "location": 655,
            "return": [
                "Preopetope"
            ],
            "arguments": {}
        },
        "Preopetope.source": {
            "name": "source",
            "location": 661,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "Preopetope.substitution": {
            "name": "substitution",
            "location": 670,
            "return": [
                "Union[(Preopetope, _T3)]"
            ],
            "arguments": {
                "p": [],
                "addr": [],
                "ctx": [],
                "q": [
                    "_T3@@"
                ]
            }
        },
        "Preopetope.toDict": {
            "name": "toDict",
            "location": 732,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Preopetope.toTex": {
            "name": "toTex",
            "location": 754,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.__init__": {
            "name": "__init__",
            "location": 790,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "s": [],
                "t": []
            }
        },
        "Sequent.__eq__": {
            "name": "__eq__",
            "location": 810,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Sequent.__ne__": {
            "name": "__ne__",
            "location": 818,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Sequent.__repr__": {
            "name": "__repr__",
            "location": 821,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.__str__": {
            "name": "__str__",
            "location": 824,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.toTex": {
            "name": "toTex",
            "location": 832,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RuleInstance.eval": {
            "name": "eval",
            "location": 907,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__repr__": {
            "name": "__repr__",
            "location": 919,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__str__": {
            "name": "__str__",
            "location": 922,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point._toTex": {
            "name": "_toTex",
            "location": 925,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.eval": {
            "name": "eval",
            "location": 934,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__init__": {
            "name": "__init__",
            "location": 949,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "Degen.__repr__": {
            "name": "__repr__",
            "location": 956,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__str__": {
            "name": "__str__",
            "location": 959,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen._toTex": {
            "name": "_toTex",
            "location": 962,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.eval": {
            "name": "eval",
            "location": 972,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__init__": {
            "name": "__init__",
            "location": 988,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "Shift.__repr__": {
            "name": "__repr__",
            "location": 995,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__str__": {
            "name": "__str__",
            "location": 998,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift._toTex": {
            "name": "_toTex",
            "location": 1001,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.eval": {
            "name": "eval",
            "location": 1011,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__init__": {
            "name": "__init__",
            "location": 1028,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p1": [],
                "p2": [],
                "addr": []
            }
        },
        "Graft.__repr__": {
            "name": "__repr__",
            "location": 1041,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__str__": {
            "name": "__str__",
            "location": 1046,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft._toTex": {
            "name": "_toTex",
            "location": 1051,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.eval": {
            "name": "eval",
            "location": 1061,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "address.dimension": {
            "name": "dimension",
            "location": 1083,
            "return": [],
            "arguments": {
                "k": []
            }
        },
        "OpetopicTree.toDict": {
            "name": "toDict",
            "location": 1160,
            "return": [
                "dict"
            ],
            "arguments": {
                "lst": []
            }
        }
    },
    "opetopy-master/opetopy/UnnamedOpetopicCategory.py": {
        "isTargetUniversal": {
            "name": "isTargetUniversal",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "t": []
            }
        },
        "isSourceUniversal": {
            "name": "isSourceUniversal",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "t": [],
                "addr": []
            }
        },
        "tfill": {
            "name": "tfill",
            "location": 110,
            "return": [
                "UnnamedOpetopicSet.Sequent"
            ],
            "arguments": {
                "seq": [],
                "targetName": [],
                "fillerName": []
            }
        },
        "tuniv": {
            "name": "tuniv",
            "location": 188,
            "return": [
                "UnnamedOpetopicSet.Sequent"
            ],
            "arguments": {
                "seq": [],
                "tuCell": [],
                "cell": [],
                "factorizationName": [],
                "fillerName": []
            }
        },
        "suniv": {
            "name": "suniv",
            "location": 252,
            "return": [
                "UnnamedOpetopicSet.Sequent"
            ],
            "arguments": {
                "seq": [],
                "suCellName": [],
                "cellName": [],
                "addr": [],
                "factorizationName": [],
                "fillerName": []
            }
        },
        "tclose": {
            "name": "tclose",
            "location": 361,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "seq": [
                    "_T0@@"
                ],
                "tuCell": []
            }
        },
        "Type.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [],
                "target": []
            }
        },
        "Type.__repr__": {
            "name": "__repr__",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.isSourceUniversal": {
            "name": "isSourceUniversal",
            "location": 70,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "Type.isTargetUniversal": {
            "name": "isTargetUniversal",
            "location": 76,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "TFill.__init__": {
            "name": "__init__",
            "location": 449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "targetName": [],
                "fillerName": []
            }
        },
        "TFill.__str__": {
            "name": "__str__",
            "location": 455,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TFill.__repr__": {
            "name": "__repr__",
            "location": 460,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TFill._toTex": {
            "name": "_toTex",
            "location": 465,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TFill.eval": {
            "name": "eval",
            "location": 474,
            "return": [
                "UnnamedOpetopicSet.Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "TUniv.__init__": {
            "name": "__init__",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "tuCell": [],
                "cell": [],
                "factorizationName": [],
                "fillerName": []
            }
        },
        "TUniv.__str__": {
            "name": "__str__",
            "location": 498,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TUniv.__repr__": {
            "name": "__repr__",
            "location": 503,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TUniv._toTex": {
            "name": "_toTex",
            "location": 508,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TUniv.eval": {
            "name": "eval",
            "location": 517,
            "return": [
                "UnnamedOpetopicSet.Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "SUniv.__init__": {
            "name": "__init__",
            "location": 535,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "suCellName": [],
                "cellName": [],
                "addr": [],
                "factorizationName": [],
                "fillerName": []
            }
        },
        "SUniv.__str__": {
            "name": "__str__",
            "location": 545,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SUniv.__repr__": {
            "name": "__repr__",
            "location": 550,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SUniv._toTex": {
            "name": "_toTex",
            "location": 555,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SUniv.eval": {
            "name": "eval",
            "location": 564,
            "return": [
                "UnnamedOpetopicSet.Sequent"
            ],
            "arguments": {
                "self": []
            }
        },
        "TClose.__init__": {
            "name": "__init__",
            "location": 578,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "tuCell": []
            }
        },
        "TClose.__str__": {
            "name": "__str__",
            "location": 583,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TClose.__repr__": {
            "name": "__repr__",
            "location": 587,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TClose._toTex": {
            "name": "_toTex",
            "location": 591,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TClose.eval": {
            "name": "eval",
            "location": 600,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/opetopy/UnnamedOpetopicSet.py": {
        "point": {
            "name": "point",
            "location": 510,
            "return": [
                "Any"
            ],
            "arguments": {
                "seq": [],
                "name": []
            }
        },
        "degen": {
            "name": "degen",
            "location": 546,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "seq": [
                    "_T0@@"
                ],
                "name": []
            }
        },
        "graft": {
            "name": "graft",
            "location": 559,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "seq": [
                    "_T0@@"
                ],
                "pd": []
            }
        },
        "shift": {
            "name": "shift",
            "location": 598,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "seq": [],
                "targetName": [],
                "name": []
            }
        },
        "pastingDiagram": {
            "name": "pastingDiagram",
            "location": 850,
            "return": [
                "PastingDiagram"
            ],
            "arguments": {
                "shapeProof": [],
                "args": []
            }
        },
        "Variable.__eq__": {
            "name": "__eq__",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Variable.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "shapeProof": []
            }
        },
        "Variable.__ne__": {
            "name": "__ne__",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Variable.__repr__": {
            "name": "__repr__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Variable.__str__": {
            "name": "__str__",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Variable.dimension": {
            "name": "dimension",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Variable.shape": {
            "name": "shape",
            "location": 63,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Variable.shapeTarget": {
            "name": "shapeTarget",
            "location": 72,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Variable.toTex": {
            "name": "toTex",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PastingDiagram.__eq__": {
            "name": "__eq__",
            "location": 110,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PastingDiagram.__getitem__": {
            "name": "__getitem__",
            "location": 118,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "PastingDiagram.__ne__": {
            "name": "__ne__",
            "location": 136,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "PastingDiagram.__repr__": {
            "name": "__repr__",
            "location": 139,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PastingDiagram.__str__": {
            "name": "__str__",
            "location": 142,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PastingDiagram.degeneracyVariable": {
            "name": "degeneracyVariable",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PastingDiagram.degeneratePastingDiagram": {
            "name": "degeneratePastingDiagram",
            "location": 172,
            "return": [
                "PastingDiagram"
            ],
            "arguments": {
                "shapeProof": [],
                "degeneracy": []
            }
        },
        "PastingDiagram.point": {
            "name": "point",
            "location": 193,
            "return": [
                "PastingDiagram"
            ],
            "arguments": {}
        },
        "PastingDiagram.nonDegeneratePastingDiagram": {
            "name": "nonDegeneratePastingDiagram",
            "location": 201,
            "return": [
                "PastingDiagram"
            ],
            "arguments": {
                "shapeProof": [],
                "nodes": []
            }
        },
        "PastingDiagram.shape": {
            "name": "shape",
            "location": 223,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PastingDiagram.shapeTarget": {
            "name": "shapeTarget",
            "location": 232,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PastingDiagram.source": {
            "name": "source",
            "location": 241,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "addr": []
            }
        },
        "PastingDiagram.toTex": {
            "name": "toTex",
            "location": 257,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.__eq__": {
            "name": "__eq__",
            "location": 290,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Type.__init__": {
            "name": "__init__",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": [],
                "target": []
            }
        },
        "Type.__ne__": {
            "name": "__ne__",
            "location": 315,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Type.__repr__": {
            "name": "__repr__",
            "location": 318,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.__str__": {
            "name": "__str__",
            "location": 325,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Type.toTex": {
            "name": "toTex",
            "location": 332,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Typing.__init__": {
            "name": "__init__",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "variable": [],
                "type": []
            }
        },
        "Typing.__repr__": {
            "name": "__repr__",
            "location": 365,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Typing.__str__": {
            "name": "__str__",
            "location": 368,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Typing.toTex": {
            "name": "toTex",
            "location": 371,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.__add__": {
            "name": "__add__",
            "location": 380,
            "return": [
                "_TContext@@Context@@"
            ],
            "arguments": {
                "self": [
                    "_TContext@@Context@@"
                ],
                "typing": []
            }
        },
        "Context.__contains__": {
            "name": "__contains__",
            "location": 395,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "var": []
            }
        },
        "Context.__getitem__": {
            "name": "__getitem__",
            "location": 406,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Context.__repr__": {
            "name": "__repr__",
            "location": 417,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.__str__": {
            "name": "__str__",
            "location": 420,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.source": {
            "name": "source",
            "location": 423,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "addr": []
            }
        },
        "Context.target": {
            "name": "target",
            "location": 430,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Context.toTex": {
            "name": "toTex",
            "location": 448,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Context.variableNames": {
            "name": "variableNames",
            "location": 451,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.__getitem__": {
            "name": "__getitem__",
            "location": 474,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Sequent.__init__": {
            "name": "__init__",
            "location": 483,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.__repr__": {
            "name": "__repr__",
            "location": 490,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.__str__": {
            "name": "__str__",
            "location": 493,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sequent.toTex": {
            "name": "toTex",
            "location": 503,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RuleInstance.eval": {
            "name": "eval",
            "location": 677,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__init__": {
            "name": "__init__",
            "location": 694,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "name": []
            }
        },
        "Point.__repr__": {
            "name": "__repr__",
            "location": 699,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.__str__": {
            "name": "__str__",
            "location": 706,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point._toTex": {
            "name": "_toTex",
            "location": 713,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Point.eval": {
            "name": "eval",
            "location": 730,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__init__": {
            "name": "__init__",
            "location": 749,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "name": []
            }
        },
        "Degen.__repr__": {
            "name": "__repr__",
            "location": 753,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.__str__": {
            "name": "__str__",
            "location": 756,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen._toTex": {
            "name": "_toTex",
            "location": 759,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Degen.eval": {
            "name": "eval",
            "location": 769,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__init__": {
            "name": "__init__",
            "location": 785,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "pd": []
            }
        },
        "Graft.__repr__": {
            "name": "__repr__",
            "location": 789,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.__str__": {
            "name": "__str__",
            "location": 792,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft._toTex": {
            "name": "_toTex",
            "location": 795,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Graft.eval": {
            "name": "eval",
            "location": 805,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__init__": {
            "name": "__init__",
            "location": 822,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "targetName": [],
                "name": []
            }
        },
        "Shift.__repr__": {
            "name": "__repr__",
            "location": 827,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.__str__": {
            "name": "__str__",
            "location": 830,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift._toTex": {
            "name": "_toTex",
            "location": 833,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Shift.eval": {
            "name": "eval",
            "location": 843,
            "return": [
                "Sequent"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/opetopy/__init__.py": {},
    "opetopy-master/tests/test_namedopetope_classic.py": {},
    "opetopy-master/tests/test_namedopetope_point.py": {},
    "opetopy-master/tests/test_namedopetopicsetm_example.py": {},
    "opetopy-master/tests/test_namedopetopicset_example.py": {},
    "opetopy-master/tests/test_unnamedopetope_arrow.py": {},
    "opetopy-master/tests/test_unnamedopetope_classic.py": {},
    "opetopy-master/tests/test_unnamedopetope_decision_valid.py": {},
    "opetopy-master/tests/test_unnamedopetope_opetopicinteger.py": {},
    "opetopy-master/tests/test_unnamedopetopiccategory_suniv.py": {},
    "opetopy-master/tests/test_unnamedopetopiccategory_tclose.py": {},
    "opetopy-master/tests/test_unnamedopetopiccategory_tfill.py": {},
    "opetopy-master/tests/test_unnamedopetopiccategory_tuniv.py": {},
    "opetopy-master/tests/test_unnamedopetopicset_arrow.py": {},
    "opetopy-master/tests/test_unnamedopetopicset_classic.py": {},
    "opetopy-master/tests/unittest_namedopetope.py": {
        "Test_NamedOpetope_Variable.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Variable.test___eq__": {
            "name": "test___eq__",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Variable.test___init__": {
            "name": "test___init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Term.setUp": {
            "name": "setUp",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Term.test___contains__": {
            "name": "test___contains__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Term.test___eq__": {
            "name": "test___eq__",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Term.test_dim": {
            "name": "test_dim",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Term.test_graftTuples": {
            "name": "test_graftTuples",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Term.test_isVariable": {
            "name": "test_isVariable",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Term.test_variables": {
            "name": "test_variables",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Type.setUp": {
            "name": "setUp",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Type.test___contains__": {
            "name": "test___contains__",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Type.test___init__": {
            "name": "test___init__",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Type.test_variables": {
            "name": "test_variables",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Typing.test___init__": {
            "name": "test___init__",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Context.setUp": {
            "name": "setUp",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Context.test___add__": {
            "name": "test___add__",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Context.test___contains__": {
            "name": "test___contains__",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Context.test_source": {
            "name": "test_source",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Context.test_typeOf": {
            "name": "test_typeOf",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_EquationalTheory.setUp": {
            "name": "setUp",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_EquationalTheory.test___add__": {
            "name": "test___add__",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_EquationalTheory.test___or__": {
            "name": "test___or__",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_EquationalTheory.test_classOf": {
            "name": "test_classOf",
            "location": 345,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_EquationalTheory.test_equal": {
            "name": "test_equal",
            "location": 409,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_EquationalTheory.test_isIn": {
            "name": "test_isIn",
            "location": 425,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Sequent.setUp": {
            "name": "setUp",
            "location": 466,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Sequent.test_equal": {
            "name": "test_equal",
            "location": 514,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Sequent.test_graft": {
            "name": "test_graft",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_Sequent.test_substitute": {
            "name": "test_substitute",
            "location": 551,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_InferenceRules.setUp": {
            "name": "setUp",
            "location": 586,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_InferenceRules.test_point": {
            "name": "test_point",
            "location": 589,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_InferenceRules.test_shift": {
            "name": "test_shift",
            "location": 595,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_InferenceRules.test_degen": {
            "name": "test_degen",
            "location": 598,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_InferenceRules.test_degenshift": {
            "name": "test_degenshift",
            "location": 608,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetope_InferenceRules.test_graft": {
            "name": "test_graft",
            "location": 611,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/tests/unittest_namedopetopicset.py": {
        "Test_NamedOpetopicSet_InferenceRules.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSet_InferenceRules.test_repres": {
            "name": "test_repres",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSet_InferenceRules.test_sum": {
            "name": "test_sum",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSet_InferenceRules.test_glue": {
            "name": "test_glue",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSet_InferenceRules.test_zero": {
            "name": "test_zero",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/tests/unittest_namedopetopicsetm.py": {
        "Test_NamedOpetopicSetM_InferenceRules.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_point": {
            "name": "test_point",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_degen": {
            "name": "test_degen",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_pd": {
            "name": "test_pd",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_graft": {
            "name": "test_graft",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_shift": {
            "name": "test_shift",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_zero": {
            "name": "test_zero",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_sum": {
            "name": "test_sum",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_NamedOpetopicSetM_InferenceRules.test_glue": {
            "name": "test_glue",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/tests/unittest_unnamedopetope.py": {
        "Test_UnnamedOpetope_Address.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test___add__": {
            "name": "test___add__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test___eq__": {
            "name": "test___eq__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test___init__": {
            "name": "test___init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test___lt__": {
            "name": "test___lt__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test___mul__": {
            "name": "test___mul__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test___str__": {
            "name": "test___str__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test_epsilon": {
            "name": "test_epsilon",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test_isEpsilon": {
            "name": "test_isEpsilon",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test_edgeDecomposition": {
            "name": "test_edgeDecomposition",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test_fromListOfAddresses": {
            "name": "test_fromListOfAddresses",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test_fromList": {
            "name": "test_fromList",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test_shift": {
            "name": "test_shift",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Address.test_substitution": {
            "name": "test_substitution",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Context.setUp": {
            "name": "setUp",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Context.test___add__": {
            "name": "test___add__",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Context.test___call__": {
            "name": "test___call__",
            "location": 210,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Context.test___eq__": {
            "name": "test___eq__",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Context.test___init__": {
            "name": "test___init__",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Context.test___sub__": {
            "name": "test___sub__",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.setUp": {
            "name": "setUp",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test___add__": {
            "name": "test___add__",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test___eq__": {
            "name": "test___eq__",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test___init__": {
            "name": "test___init__",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test___sub__": {
            "name": "test___sub__",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_degenerate": {
            "name": "test_degenerate",
            "location": 316,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_empty": {
            "name": "test_empty",
            "location": 324,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_fromDictOfPreopetopes": {
            "name": "test_fromDictOfPreopetopes",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_grafting": {
            "name": "test_grafting",
            "location": 350,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_improperGrafting": {
            "name": "test_improperGrafting",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_leafAddresses": {
            "name": "test_leafAddresses",
            "location": 407,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_nodeAddresses": {
            "name": "test_nodeAddresses",
            "location": 418,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_point": {
            "name": "test_point",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_source": {
            "name": "test_source",
            "location": 436,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_substitution": {
            "name": "test_substitution",
            "location": 447,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Preopetope.test_toDict": {
            "name": "test_toDict",
            "location": 472,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_InferenceRules.setUp": {
            "name": "setUp",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_InferenceRules.test_point": {
            "name": "test_point",
            "location": 485,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_InferenceRules.test_degen": {
            "name": "test_degen",
            "location": 491,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_InferenceRules.test_shift": {
            "name": "test_shift",
            "location": 505,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_InferenceRules.test_graft": {
            "name": "test_graft",
            "location": 523,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Utils.setUp": {
            "name": "setUp",
            "location": 552,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Utils.test_address": {
            "name": "test_address",
            "location": 555,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Utils.test_OpetopicTree": {
            "name": "test_OpetopicTree",
            "location": 573,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetope_Utils.test_ProofTree": {
            "name": "test_ProofTree",
            "location": 590,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "opetopy-master/tests/unittest_unnamedopetopicset.py": {
        "Test_UnnamedOpetopicSet_Variable.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Variable.test___eq__": {
            "name": "test___eq__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Variable.test_shape": {
            "name": "test_shape",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Variable.test_shapeTarget": {
            "name": "test_shapeTarget",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_PastingDiagram.setUp": {
            "name": "setUp",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_PastingDiagram.test___eq__": {
            "name": "test___eq__",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_PastingDiagram.test___getitem__": {
            "name": "test___getitem__",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_PastingDiagram.test_degeneratePastingDiagram": {
            "name": "test_degeneratePastingDiagram",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_PastingDiagram.test_point": {
            "name": "test_point",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_PastingDiagram.test_nonDegeneratePastingDiagram": {
            "name": "test_nonDegeneratePastingDiagram",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Type.setUp": {
            "name": "setUp",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Type.test___init__": {
            "name": "test___init__",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Typing.setUp": {
            "name": "setUp",
            "location": 185,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Typing.test___init__": {
            "name": "test___init__",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Context.setUp": {
            "name": "setUp",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Context.test___add__": {
            "name": "test___add__",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Context.test___contains__": {
            "name": "test___contains__",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Context.test___getitem__": {
            "name": "test___getitem__",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Context.test_source": {
            "name": "test_source",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_Context.test_target": {
            "name": "test_target",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_InferenceRules.setUp": {
            "name": "setUp",
            "location": 274,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_InferenceRules.type_arrow": {
            "name": "type_arrow",
            "location": 300,
            "return": [
                "UnnamedOpetopicSet.Type"
            ],
            "arguments": {
                "self": [],
                "src": [],
                "tgt": []
            }
        },
        "Test_UnnamedOpetopicSet_InferenceRules.test_degen": {
            "name": "test_degen",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_InferenceRules.test_shift": {
            "name": "test_shift",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_InferenceRules.test_graft": {
            "name": "test_graft",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Test_UnnamedOpetopicSet_InferenceRules.test_point": {
            "name": "test_point",
            "location": 371,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "otus-django-hasker-master/manage.py": {},
    "otus-django-hasker-master/api/apps.py": {},
    "otus-django-hasker-master/api/permissions.py": {
        "IsOwnerOrReadOnly.has_object_permission": {
            "name": "has_object_permission",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "view": [],
                "obj": []
            }
        },
        "IsOwnerOfQuestionOrReadOnly.has_object_permission": {
            "name": "has_object_permission",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "view": [],
                "answer": []
            }
        }
    },
    "otus-django-hasker-master/api/serializers.py": {
        "QuestionTagsField.get_attribute": {
            "name": "get_attribute",
            "location": 10,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "question": []
            }
        },
        "QuestionTagsField.run_validation": {
            "name": "run_validation",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "UserSerializer.get_photo_big_url": {
            "name": "get_photo_big_url",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "UserSerializer.get_photo_small_url": {
            "name": "get_photo_small_url",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "QuestionSerializer.create": {
            "name": "create",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "validated_data": []
            }
        },
        "AnswerVoteSerializer.validate": {
            "name": "validate",
            "location": 103,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0@@"
                ]
            }
        },
        "QuestionVoteSerializer.validate": {
            "name": "validate",
            "location": 123,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "_T0@@"
                ]
            }
        }
    },
    "otus-django-hasker-master/api/urls.py": {},
    "otus-django-hasker-master/api/views.py": {
        "QuestionsTagFilter.filter_queryset": {
            "name": "filter_queryset",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "QuestionsOrderingFilter.filter_queryset": {
            "name": "filter_queryset",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "queryset": [],
                "view": []
            }
        },
        "QuestionsAPIView.perform_create": {
            "name": "perform_create",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "QuestionsAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 72,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionDetailsAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 84,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionVotesAPIView.initial": {
            "name": "initial",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "QuestionVotesAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionVotesAPIView.perform_create": {
            "name": "perform_create",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "QuestionVoteDetailsAPIView.initial": {
            "name": "initial",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "QuestionVoteDetailsAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 128,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersAPIView.initial": {
            "name": "initial",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AnswersAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 146,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersAPIView.perform_create": {
            "name": "perform_create",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "AnswerDetailsAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 164,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswerDetailsAPIView.perform_update": {
            "name": "perform_update",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "AnswerVotesAPIView.initial": {
            "name": "initial",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AnswerVotesAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 197,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswerVotesAPIView.perform_create": {
            "name": "perform_create",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serializer": []
            }
        },
        "AnswerVoteDetailsAPIView.initial": {
            "name": "initial",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "AnswerVoteDetailsAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 222,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/api/__init__.py": {},
    "otus-django-hasker-master/api/migrations/__init__.py": {},
    "otus-django-hasker-master/api/tests/test_answers.py": {
        "AnswersTests.test_answers_get": {
            "name": "test_answers_get",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_answers_post_unauthorized": {
            "name": "test_answers_post_unauthorized",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_answers_post_authorized": {
            "name": "test_answers_post_authorized",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_answer_vote_change_unauthorized": {
            "name": "test_answer_vote_change_unauthorized",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_answer_vote_change_not_owner": {
            "name": "test_answer_vote_change_not_owner",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_answer_vote_change_owner": {
            "name": "test_answer_vote_change_owner",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_accept_answer_unauthorized": {
            "name": "test_accept_answer_unauthorized",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_accept_answer_not_question_owner": {
            "name": "test_accept_answer_not_question_owner",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AnswersTests.test_accept_answer_question_owner": {
            "name": "test_accept_answer_question_owner",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/api/tests/test_questions.py": {
        "QuestionsTests.test_questions_get": {
            "name": "test_questions_get",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_questions_get_search": {
            "name": "test_questions_get_search",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_questions_get_tag": {
            "name": "test_questions_get_tag",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_questions_post_unauthorized": {
            "name": "test_questions_post_unauthorized",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_questions_post_authorized": {
            "name": "test_questions_post_authorized",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_question_details": {
            "name": "test_question_details",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_question_votes_get": {
            "name": "test_question_votes_get",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_question_votes_post_unauthorized": {
            "name": "test_question_votes_post_unauthorized",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_question_votes_post_authorized": {
            "name": "test_question_votes_post_authorized",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_question_vote_change_unauthorized": {
            "name": "test_question_vote_change_unauthorized",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_question_vote_change_not_owner": {
            "name": "test_question_vote_change_not_owner",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTests.test_question_vote_change_owner": {
            "name": "test_question_vote_change_owner",
            "location": 191,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/api/tests/__init__.py": {},
    "otus-django-hasker-master/config/settings.py": {},
    "otus-django-hasker-master/config/urls.py": {},
    "otus-django-hasker-master/config/wsgi.py": {},
    "otus-django-hasker-master/config/__init__.py": {},
    "otus-django-hasker-master/questions/admin.py": {},
    "otus-django-hasker-master/questions/apps.py": {
        "QuestionsConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/questions/forms.py": {
        "AskForm.clean_tags": {
            "name": "clean_tags",
            "location": 23,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VoteForm.__init__": {
            "name": "__init__",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VoteForm.clean_target_id": {
            "name": "clean_target_id",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/questions/models.py": {
        "AbstractPost.vote": {
            "name": "vote",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "value": []
            }
        },
        "AnswerVote.__str__": {
            "name": "__str__",
            "location": 85,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Answer.__str__": {
            "name": "__str__",
            "location": 100,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Answer.mark": {
            "name": "mark",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Answer.unmark": {
            "name": "unmark",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionVote.__str__": {
            "name": "__str__",
            "location": 145,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.__str__": {
            "name": "__str__",
            "location": 158,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Question.trending": {
            "name": "trending",
            "location": 162,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "count": []
            }
        },
        "Question.add_tags": {
            "name": "add_tags",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tags": [],
                "user": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 195,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/questions/signals.py": {
        "answer_created": {
            "name": "answer_created",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "instance": [],
                "created": [],
                "raw": []
            }
        },
        "answer_deleted": {
            "name": "answer_deleted",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "instance": []
            }
        },
        "vote_created": {
            "name": "vote_created",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "instance": [],
                "created": [],
                "raw": []
            }
        },
        "vote_deleted": {
            "name": "vote_deleted",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "sender": [],
                "instance": []
            }
        }
    },
    "otus-django-hasker-master/questions/urls.py": {},
    "otus-django-hasker-master/questions/utils.py": {
        "send_notification_about_new_answer": {
            "name": "send_notification_about_new_answer",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "request": [],
                "to": [],
                "question_id": []
            }
        }
    },
    "otus-django-hasker-master/questions/views.py": {
        "TrendingMixin.get_context_data": {
            "name": "get_context_data",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Ask.form_valid": {
            "name": "form_valid",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "QuestionDetail.dispatch": {
            "name": "dispatch",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionDetail.form_invalid": {
            "name": "form_invalid",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "QuestionDetail.form_valid": {
            "name": "form_valid",
            "location": 91,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "QuestionDetail.get_context_data": {
            "name": "get_context_data",
            "location": 112,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionDetail.get_queryset": {
            "name": "get_queryset",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionDetail.post": {
            "name": "post",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Questions.get_queryset": {
            "name": "get_queryset",
            "location": 145,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsSearch.get": {
            "name": "get",
            "location": 164,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsSearch.get_queryset": {
            "name": "get_queryset",
            "location": 178,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsSearch.get_context_data": {
            "name": "get_context_data",
            "location": 185,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionsTag.get_queryset": {
            "name": "get_queryset",
            "location": 194,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionVote.dispatch": {
            "name": "dispatch",
            "location": 209,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionVote.get_form_kwargs": {
            "name": "get_form_kwargs",
            "location": 214,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "QuestionVote.form_invalid": {
            "name": "form_invalid",
            "location": 220,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "QuestionVote.form_valid": {
            "name": "form_valid",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "AnswerMark.post": {
            "name": "post",
            "location": 247,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/questions/__init__.py": {},
    "otus-django-hasker-master/questions/migrations/0001_initial.py": {},
    "otus-django-hasker-master/questions/migrations/0002_auto_20190825_1247.py": {},
    "otus-django-hasker-master/questions/migrations/0003_auto_20190825_1834.py": {},
    "otus-django-hasker-master/questions/migrations/0004_auto_20190902_0802.py": {},
    "otus-django-hasker-master/questions/migrations/0005_auto_20190905_0822.py": {},
    "otus-django-hasker-master/questions/migrations/0006_auto_20190907_0958.py": {},
    "otus-django-hasker-master/questions/migrations/0007_postgres_trigram.py": {},
    "otus-django-hasker-master/questions/migrations/0008_auto_20190911_0715.py": {},
    "otus-django-hasker-master/questions/migrations/0009_question_number_of_answers.py": {},
    "otus-django-hasker-master/questions/migrations/__init__.py": {},
    "otus-django-hasker-master/questions/tests/fixtures.py": {
        "CreateDataMixin.setUpClass": {
            "name": "setUpClass",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "CreateDataMixin.create_user": {
            "name": "create_user",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "CreateDataMixin.create_question": {
            "name": "create_question",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "user": []
            }
        },
        "CreateDataMixin.create_answer": {
            "name": "create_answer",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "question": [],
                "user": []
            }
        }
    },
    "otus-django-hasker-master/questions/tests/test_forms.py": {
        "random_tags": {
            "name": "random_tags",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "n": []
            }
        },
        "TestAskForm.test_invalid_form": {
            "name": "test_invalid_form",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAskForm.test_number_of_tags": {
            "name": "test_number_of_tags",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVoteForm.test_vote_for_answer": {
            "name": "test_vote_for_answer",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVoteForm.test_vote_for_answer_invalid_target_id": {
            "name": "test_vote_for_answer_invalid_target_id",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVoteForm.test_vote_for_answer_invalid_vote": {
            "name": "test_vote_for_answer_invalid_vote",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVoteForm.test_vote_for_question": {
            "name": "test_vote_for_question",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/questions/tests/test_models.py": {
        "TestAnswer.test_mark": {
            "name": "test_mark",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswer.test_unmark": {
            "name": "test_unmark",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerVote.test_answer_vote": {
            "name": "test_answer_vote",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerVote.test_answer_number_of_votes": {
            "name": "test_answer_number_of_votes",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerVote.test_rating_signals": {
            "name": "test_rating_signals",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestion.test_trending": {
            "name": "test_trending",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestion.test_add_tags": {
            "name": "test_add_tags",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestion.test_number_of_votes_signals": {
            "name": "test_number_of_votes_signals",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestion.test_number_of_answers_signals": {
            "name": "test_number_of_answers_signals",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionVote.test_question_vote": {
            "name": "test_question_vote",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionVote.test_rating_signals": {
            "name": "test_rating_signals",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/questions/tests/test_views.py": {
        "TestAskView.test_GET_unauthorised": {
            "name": "test_GET_unauthorised",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAskView.test_GET_authorised": {
            "name": "test_GET_authorised",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAskView.test_POST_unauthorized": {
            "name": "test_POST_unauthorized",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAskView.test_POST_authorized": {
            "name": "test_POST_authorized",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionDetail.test_GET_unauthorized": {
            "name": "test_GET_unauthorized",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionDetail.test_GET_authorized": {
            "name": "test_GET_authorized",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionDetail.test_POST_unauthorized": {
            "name": "test_POST_unauthorized",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionDetail.test_POST_authorized": {
            "name": "test_POST_authorized",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionSearch.test_empty_query": {
            "name": "test_empty_query",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionSearch.test_search": {
            "name": "test_search",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestQuestionSearch.test_query_with_tag": {
            "name": "test_query_with_tag",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVote.setUpClass": {
            "name": "setUpClass",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestVote.test_GET_unauthorized": {
            "name": "test_GET_unauthorized",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVote.test_GET_authorized": {
            "name": "test_GET_authorized",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVote.test_POST_unauthorized": {
            "name": "test_POST_unauthorized",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVote.test_POST_authorized_invalid": {
            "name": "test_POST_authorized_invalid",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVote.test_POST_authorized_valid": {
            "name": "test_POST_authorized_valid",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerMark.test_GET_unauthorized": {
            "name": "test_GET_unauthorized",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerMark.test_POST_unauthorized": {
            "name": "test_POST_unauthorized",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerMark.test_invalid_answer_id": {
            "name": "test_invalid_answer_id",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerMark.test_not_owner": {
            "name": "test_not_owner",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestAnswerMark.test_valid": {
            "name": "test_valid",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/questions/tests/__init__.py": {},
    "otus-django-hasker-master/users/admin.py": {},
    "otus-django-hasker-master/users/apps.py": {},
    "otus-django-hasker-master/users/forms.py": {},
    "otus-django-hasker-master/users/models.py": {
        "user_photo_path": {
            "name": "user_photo_path",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "instance": [],
                "filename": []
            }
        },
        "user_photo_size_validator": {
            "name": "user_photo_size_validator",
            "location": 24,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "photo": [
                    "_T0@@"
                ]
            }
        },
        "User.save": {
            "name": "save",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.create_thumbnail": {
            "name": "create_thumbnail",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "save": []
            }
        },
        "User.get_photo_url": {
            "name": "get_photo_url",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.get_thumb_url": {
            "name": "get_thumb_url",
            "location": 66,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/users/views.py": {
        "LogIn.post": {
            "name": "post",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "LogIn.form_valid": {
            "name": "form_valid",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "LogIn.get_form_kwargs": {
            "name": "get_form_kwargs",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "LogOut.post": {
            "name": "post",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SignUp.dispatch": {
            "name": "dispatch",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SignUp.form_valid": {
            "name": "form_valid",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings.form_valid": {
            "name": "form_valid",
            "location": 76,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings.form_invalid": {
            "name": "form_invalid",
            "location": 82,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Settings.get_object": {
            "name": "get_object",
            "location": 86,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "queryset": []
            }
        }
    },
    "otus-django-hasker-master/users/__init__.py": {},
    "otus-django-hasker-master/users/migrations/0001_initial.py": {},
    "otus-django-hasker-master/users/migrations/0002_auto_20190831_0734.py": {},
    "otus-django-hasker-master/users/migrations/0003_user_photo.py": {},
    "otus-django-hasker-master/users/migrations/0004_user_thumb.py": {},
    "otus-django-hasker-master/users/migrations/0005_auto_20190914_0948.py": {},
    "otus-django-hasker-master/users/migrations/__init__.py": {},
    "otus-django-hasker-master/users/tests/test_views.py": {
        "CreateDataMixin.setUpClass": {
            "name": "setUpClass",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "TestLogIn.test_GET_unauthorized": {
            "name": "test_GET_unauthorized",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLogIn.test_GET_authorized": {
            "name": "test_GET_authorized",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLogIn.test_POST_authorized": {
            "name": "test_POST_authorized",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLogIn.test_POST_unauthorized": {
            "name": "test_POST_unauthorized",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLogOut.test_POST_unauthorized": {
            "name": "test_POST_unauthorized",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLogOut.test_POST_authorized": {
            "name": "test_POST_authorized",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignUp.test_GET_unauthorized": {
            "name": "test_GET_unauthorized",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignUp.test_GET_authorized": {
            "name": "test_GET_authorized",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignUp.test_POST_authorized": {
            "name": "test_POST_authorized",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSignUp.test_POST_registration": {
            "name": "test_POST_registration",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSettings.test_GET_unauthorized": {
            "name": "test_GET_unauthorized",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSettings.test_GET_authorized": {
            "name": "test_GET_authorized",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSettings.test_POST_unauthorized": {
            "name": "test_POST_unauthorized",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSettings.test_POST_authorized": {
            "name": "test_POST_authorized",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "otus-django-hasker-master/users/tests/__init__.py": {}
}
{
    "pip-shims-main/noxfile.py": {
        "tests": {
            "name": "tests",
            "location": 28,
            "return": [],
            "arguments": {
                "session": [],
                "pip": []
            }
        },
        "docs": {
            "name": "docs",
            "location": 35,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "package": {
            "name": "package",
            "location": 41,
            "return": [],
            "arguments": {
                "session": []
            }
        },
        "_current_version": {
            "name": "_current_version",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_prebump": {
            "name": "_prebump",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "version": []
            }
        },
        "_write_version": {
            "name": "_write_version",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "v": []
            }
        },
        "bump_version": {
            "name": "bump_version",
            "location": 71,
            "return": [],
            "arguments": {
                "session": []
            }
        }
    },
    "pip-shims-main/setup.py": {},
    "pip-shims-main/docs/conf.py": {
        "read": {
            "name": "read",
            "location": 25,
            "return": [
                "str"
            ],
            "arguments": {
                "root": []
            }
        },
        "find_version": {
            "name": "find_version",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "pip-shims-main/src/pip_shims/compat.py": {
        "resolve_possible_shim": {
            "name": "resolve_possible_shim",
            "location": 277,
            "return": [
                "Optional[Callable]"
            ],
            "arguments": {
                "target": [
                    "Union[(Callable, TShimmedPath, TShimmedPathCollection)]"
                ]
            }
        },
        "temp_environ": {
            "name": "temp_environ",
            "location": 289,
            "return": [],
            "arguments": {}
        },
        "get_tracker": {
            "name": "get_tracker",
            "location": 300,
            "return": [],
            "arguments": {
                "tracker_creator": [],
                "tracker_type": []
            }
        },
        "ensure_resolution_dirs": {
            "name": "ensure_resolution_dirs",
            "location": 327,
            "return": [],
            "arguments": {}
        },
        "wheel_cache": {
            "name": "wheel_cache",
            "location": 352,
            "return": [],
            "arguments": {
                "cache_dir": [],
                "format_control": [],
                "wheel_cache_provider": [],
                "format_control_provider": [],
                "tempdir_manager_provider": []
            }
        },
        "partial_command": {
            "name": "partial_command",
            "location": 372,
            "return": [
                "Union[(functools.partial, Type[TCommandInstance])]"
            ],
            "arguments": {
                "shimmed_path": [
                    "type"
                ],
                "cmd_mapping": [
                    "Optional[Union[(Dict[(str, Union[(Tuple[(str, str, str)], TCommandInstance)])], TShimmedPath, TShimmedPathCollection)]]"
                ]
            }
        },
        "get_session": {
            "name": "get_session",
            "location": 421,
            "return": [
                "TSession"
            ],
            "arguments": {
                "install_cmd_provider": [],
                "install_cmd": [],
                "options": []
            }
        },
        "populate_options": {
            "name": "populate_options",
            "location": 441,
            "return": [
                "Tuple[(Dict[(str, Any)], Any)]"
            ],
            "arguments": {
                "install_command": [],
                "options": []
            }
        },
        "get_requirement_set": {
            "name": "get_requirement_set",
            "location": 470,
            "return": [
                "Any"
            ],
            "arguments": {
                "install_command": [],
                "req_set_provider": [],
                "build_dir": [],
                "src_dir": [],
                "download_dir": [],
                "wheel_download_dir": [],
                "session": [],
                "wheel_cache": [],
                "upgrade": [],
                "upgrade_strategy": [],
                "ignore_installed": [],
                "ignore_dependencies": [],
                "force_reinstall": [],
                "use_user_site": [],
                "isolated": [],
                "ignore_requires_python": [],
                "require_hashes": [],
                "cache_dir": [],
                "options": [],
                "install_cmd_provider": [],
                "wheel_cache_provider": []
            }
        },
        "get_package_finder": {
            "name": "get_package_finder",
            "location": 579,
            "return": [
                "TFinder"
            ],
            "arguments": {
                "install_cmd": [],
                "options": [],
                "session": [],
                "platform": [],
                "python_versions": [],
                "abi": [],
                "implementation": [],
                "target_python": [],
                "ignore_requires_python": [],
                "target_python_builder": [],
                "install_cmd_provider": []
            }
        },
        "shim_unpack": {
            "name": "shim_unpack",
            "location": 696,
            "return": [
                "Any"
            ],
            "arguments": {
                "unpack_fn": [],
                "download_dir": [],
                "tempdir_manager_provider": [],
                "ireq": [],
                "link": [],
                "location": [],
                "hashes": [],
                "progress_bar": [],
                "only_download": [],
                "downloader_provider": [],
                "session": [],
                "verbosity": []
            }
        },
        "_ensure_finder": {
            "name": "_ensure_finder",
            "location": 776,
            "return": [
                "Any"
            ],
            "arguments": {
                "finder": [],
                "finder_provider": [],
                "install_cmd": [],
                "options": [],
                "session": []
            }
        },
        "make_preparer": {
            "name": "make_preparer",
            "location": 801,
            "return": [],
            "arguments": {
                "preparer_fn": [],
                "build_tracker_fn": [],
                "req_tracker_fn": [],
                "build_dir": [],
                "src_dir": [],
                "download_dir": [],
                "wheel_download_dir": [],
                "progress_bar": [],
                "build_isolation": [],
                "session": [],
                "finder": [],
                "options": [],
                "require_hashes": [],
                "use_user_site": [],
                "req_tracker": [],
                "build_tracker": [],
                "install_cmd_provider": [],
                "downloader_provider": [],
                "install_cmd": [],
                "finder_provider": [],
                "verbosity": [],
                "check_build_deps": []
            }
        },
        "_ensure_wheel_cache": {
            "name": "_ensure_wheel_cache",
            "location": 961,
            "return": [],
            "arguments": {
                "wheel_cache": [],
                "wheel_cache_provider": [],
                "format_control": [],
                "format_control_provider": [],
                "options": [],
                "cache_dir": []
            }
        },
        "get_ireq_output_path": {
            "name": "get_ireq_output_path",
            "location": 985,
            "return": [
                "Any"
            ],
            "arguments": {
                "wheel_cache": [],
                "ireq": []
            }
        },
        "get_resolver": {
            "name": "get_resolver",
            "location": 992,
            "return": [
                "Any"
            ],
            "arguments": {
                "resolver_fn": [],
                "install_req_provider": [],
                "format_control_provider": [],
                "wheel_cache_provider": [],
                "finder": [],
                "upgrade_strategy": [],
                "force_reinstall": [],
                "ignore_dependencies": [],
                "ignore_requires_python": [],
                "ignore_installed": [],
                "use_user_site": [],
                "isolated": [],
                "wheel_cache": [],
                "preparer": [],
                "session": [],
                "options": [],
                "make_install_req": [],
                "install_cmd_provider": [],
                "install_cmd": [],
                "use_pep517": []
            }
        },
        "resolve": {
            "name": "resolve",
            "location": 1173,
            "return": [
                "Any"
            ],
            "arguments": {
                "ireq": [],
                "reqset_provider": [],
                "req_tracker_provider": [],
                "install_cmd_provider": [],
                "install_command": [],
                "finder_provider": [],
                "resolver_provider": [],
                "wheel_cache_provider": [],
                "format_control_provider": [],
                "make_preparer_provider": [],
                "tempdir_manager_provider": [],
                "options": [],
                "session": [],
                "resolver": [],
                "finder": [],
                "upgrade_strategy": [],
                "force_reinstall": [],
                "ignore_dependencies": [],
                "ignore_requires_python": [],
                "ignore_installed": [],
                "use_user_site": [],
                "isolated": [],
                "build_dir": [],
                "source_dir": [],
                "download_dir": [],
                "cache_dir": [],
                "wheel_download_dir": [],
                "wheel_cache": [],
                "require_hashes": [],
                "check_supported_wheels": []
            }
        },
        "build_wheel": {
            "name": "build_wheel",
            "location": 1434,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "req": [],
                "reqset": [],
                "output_dir": [],
                "preparer": [],
                "wheel_cache": [],
                "build_options": [],
                "global_options": [],
                "check_binary_allowed": [],
                "no_clean": [],
                "session": [],
                "finder": [],
                "install_command": [],
                "req_tracker": [],
                "build_dir": [],
                "src_dir": [],
                "download_dir": [],
                "wheel_download_dir": [],
                "cache_dir": [],
                "use_user_site": [],
                "use_pep517": [],
                "verify": [],
                "editable": [],
                "format_control_provider": [],
                "wheel_cache_provider": [],
                "preparer_provider": [],
                "wheel_builder_provider": [],
                "build_one_provider": [],
                "build_one_inside_env_provider": [],
                "build_many_provider": [],
                "install_command_provider": [],
                "finder_provider": [],
                "reqset_provider": []
            }
        },
        "SearchScope.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "find_links": [],
                "index_urls": []
            }
        },
        "SearchScope.create": {
            "name": "create",
            "location": 72,
            "return": [
                "_TSearchScope"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSearchScope]"
                ],
                "find_links": [],
                "index_urls": []
            }
        },
        "SelectionPreferences.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "allow_yanked": [],
                "allow_all_prereleases": [],
                "format_control": [],
                "prefer_binary": [],
                "ignore_requires_python": []
            }
        },
        "TargetPython.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "platform": [],
                "py_version_info": [],
                "abi": [],
                "implementation": []
            }
        },
        "TargetPython.get_tags": {
            "name": "get_tags",
            "location": 120,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CandidatePreferences.__init__": {
            "name": "__init__",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prefer_binary": [],
                "allow_all_prereleases": []
            }
        },
        "LinkCollector.__init__": {
            "name": "__init__",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": [],
                "search_scope": []
            }
        },
        "CandidateEvaluator.create": {
            "name": "create",
            "location": 149,
            "return": [
                "_TCandidateEvaluator"
            ],
            "arguments": {
                "cls": [
                    "Type[_TCandidateEvaluator]"
                ],
                "project_name": [],
                "target_python": [],
                "prefer_binary": [],
                "allow_all_prereleases": [],
                "specifier": [],
                "hashes": []
            }
        },
        "CandidateEvaluator.__init__": {
            "name": "__init__",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "project_name": [],
                "supported_tags": [],
                "specifier": [],
                "prefer_binary": [],
                "allow_all_prereleases": [],
                "hashes": []
            }
        },
        "LinkEvaluator.__init__": {
            "name": "__init__",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "allow_yanked": [],
                "project_name": [],
                "canonical_name": [],
                "formats": [],
                "target_python": [],
                "ignore_requires_python": [],
                "ignore_compatibility": []
            }
        },
        "Wheel.__init__": {
            "name": "__init__",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "Wheel.get_formatted_file_tags": {
            "name": "get_formatted_file_tags",
            "location": 244,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Wheel.support_index_min": {
            "name": "support_index_min",
            "location": 251,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "tags": [
                    "list"
                ]
            }
        },
        "Wheel.supported": {
            "name": "supported",
            "location": 267,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "tags": [
                    "list"
                ]
            }
        }
    },
    "pip-shims-main/src/pip_shims/environment.py": {
        "get_base_import_path": {
            "name": "get_base_import_path",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_pip_version": {
            "name": "get_pip_version",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "import_path": []
            }
        },
        "is_type_checking": {
            "name": "is_type_checking",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "pip-shims-main/src/pip_shims/models.py": {
        "pip_version_lookup": {
            "name": "pip_version_lookup",
            "location": 173,
            "return": [
                "PipVersion"
            ],
            "arguments": {
                "version": [
                    "str"
                ]
            }
        },
        "lookup_current_pip_version": {
            "name": "lookup_current_pip_version",
            "location": 186,
            "return": [
                "PipVersion"
            ],
            "arguments": {}
        },
        "import_pip": {
            "name": "import_pip",
            "location": 714,
            "return": [
                "module"
            ],
            "arguments": {}
        },
        "PipVersion.__init__": {
            "name": "__init__",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "version": [
                    "str"
                ],
                "round_prereleases_up": [
                    "bool"
                ],
                "base_import_path": [
                    "Optional[str]"
                ],
                "vendor_import_path": [
                    "str"
                ]
            }
        },
        "PipVersion.version_tuple": {
            "name": "version_tuple",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipVersion.version_key": {
            "name": "version_key",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipVersion.is_valid": {
            "name": "is_valid",
            "location": 106,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "compared_to": [
                    "PipVersion"
                ]
            }
        },
        "PipVersion.__len__": {
            "name": "__len__",
            "location": 110,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersion.__getitem__": {
            "name": "__getitem__",
            "location": 114,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "PipVersion._parse": {
            "name": "_parse",
            "location": 117,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersion.__hash__": {
            "name": "__hash__",
            "location": 121,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersion.__str__": {
            "name": "__str__",
            "location": 125,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersion.__repr__": {
            "name": "__repr__",
            "location": 129,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersion.__gt__": {
            "name": "__gt__",
            "location": 140,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "PipVersion"
                ]
            }
        },
        "PipVersion.__lt__": {
            "name": "__lt__",
            "location": 144,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "PipVersion"
                ]
            }
        },
        "PipVersion.__le__": {
            "name": "__le__",
            "location": 148,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "PipVersion"
                ]
            }
        },
        "PipVersion.__ge__": {
            "name": "__ge__",
            "location": 152,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "PipVersion"
                ]
            }
        },
        "PipVersion.__ne__": {
            "name": "__ne__",
            "location": 156,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "PipVersion.__eq__": {
            "name": "__eq__",
            "location": 162,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "object"
                ]
            }
        },
        "PipVersionRange.__init__": {
            "name": "__init__",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start": [
                    "PipVersion"
                ],
                "end": [
                    "PipVersion"
                ]
            }
        },
        "PipVersionRange.__str__": {
            "name": "__str__",
            "location": 202,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersionRange.base_import_paths": {
            "name": "base_import_paths",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipVersionRange.vendor_import_paths": {
            "name": "vendor_import_paths",
            "location": 212,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PipVersionRange.is_valid": {
            "name": "is_valid",
            "location": 216,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersionRange.__contains__": {
            "name": "__contains__",
            "location": 220,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "PipVersion"
                ]
            }
        },
        "PipVersionRange.__getitem__": {
            "name": "__getitem__",
            "location": 226,
            "return": [
                "PipVersion"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "int"
                ]
            }
        },
        "PipVersionRange.__len__": {
            "name": "__len__",
            "location": 230,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "PipVersionRange.__lt__": {
            "name": "__lt__",
            "location": 234,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": [
                    "PipVersionRange"
                ]
            }
        },
        "PipVersionRange.__hash__": {
            "name": "__hash__",
            "location": 242,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.__init__": {
            "name": "__init__",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "import_target": [],
                "import_type": [],
                "version_range": [],
                "provided_methods": [],
                "provided_functions": [],
                "provided_classmethods": [],
                "provided_contextmanagers": [],
                "provided_mixins": [],
                "default_args": []
            }
        },
        "ShimmedPath._as_tuple": {
            "name": "_as_tuple",
            "location": 294,
            "return": [
                "Tuple[(str, PipVersionRange, str, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.alias": {
            "name": "alias",
            "location": 298,
            "return": [
                "_TShimmedPath"
            ],
            "arguments": {
                "self": [
                    "_TShimmedPath"
                ],
                "aliases": [
                    "List[str]"
                ]
            }
        },
        "ShimmedPath._import_module": {
            "name": "_import_module",
            "location": 304,
            "return": [
                "Optional[module]"
            ],
            "arguments": {
                "cls": [],
                "module": [
                    "str"
                ]
            }
        },
        "ShimmedPath._parse_provides_dict": {
            "name": "_parse_provides_dict",
            "location": 319,
            "return": [
                "Dict[(str, Callable)]"
            ],
            "arguments": {
                "cls": [],
                "provides": [],
                "prepend_arg_to_callables": []
            }
        },
        "ShimmedPath._update_default_kwargs": {
            "name": "_update_default_kwargs",
            "location": 350,
            "return": [
                "Tuple[(Optional[module], Union[(module, type)])]"
            ],
            "arguments": {
                "self": [],
                "parent": [
                    "Optional[module]"
                ],
                "provided": [
                    "Union[(module, type)]"
                ]
            }
        },
        "ShimmedPath._ensure_functions": {
            "name": "_ensure_functions",
            "location": 362,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "provided": [
                    "Optional[Union[(module, type)]]"
                ]
            }
        },
        "ShimmedPath._ensure_methods": {
            "name": "_ensure_methods",
            "location": 372,
            "return": [
                "type"
            ],
            "arguments": {
                "self": [],
                "provided": [
                    "type"
                ]
            }
        },
        "ShimmedPath.is_class": {
            "name": "is_class",
            "location": 405,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.is_module": {
            "name": "is_module",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.is_method": {
            "name": "is_method",
            "location": 415,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.is_function": {
            "name": "is_function",
            "location": 420,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.is_contextmanager": {
            "name": "is_contextmanager",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.is_attribute": {
            "name": "is_attribute",
            "location": 430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.__contains__": {
            "name": "__contains__",
            "location": 434,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "pip_version": [
                    "str"
                ]
            }
        },
        "ShimmedPath.is_valid": {
            "name": "is_valid",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.sort_order": {
            "name": "sort_order",
            "location": 444,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath._shim_base": {
            "name": "_shim_base",
            "location": 448,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "attribute_name": [
                    "str"
                ]
            }
        },
        "ShimmedPath._apply_aliases": {
            "name": "_apply_aliases",
            "location": 453,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "target": []
            }
        },
        "ShimmedPath._shim_parent": {
            "name": "_shim_parent",
            "location": 460,
            "return": [
                "Tuple[(Optional[module], Any)]"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "attribute_name": [
                    "str"
                ]
            }
        },
        "ShimmedPath.update_sys_modules": {
            "name": "update_sys_modules",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ]
            }
        },
        "ShimmedPath.shim_class": {
            "name": "shim_class",
            "location": 476,
            "return": [
                "type"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "attribute_name": [
                    "str"
                ]
            }
        },
        "ShimmedPath.shim_module": {
            "name": "shim_module",
            "location": 491,
            "return": [
                "module"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "attribute_name": [
                    "str"
                ]
            }
        },
        "ShimmedPath.shim_function": {
            "name": "shim_function",
            "location": 508,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "attribute_name": [
                    "str"
                ]
            }
        },
        "ShimmedPath.shim_attribute": {
            "name": "shim_attribute",
            "location": 512,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "attribute_name": []
            }
        },
        "ShimmedPath.shim_contextmanager": {
            "name": "shim_contextmanager",
            "location": 516,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "imported": [
                    "Optional[module]"
                ],
                "attribute_name": [
                    "str"
                ]
            }
        },
        "ShimmedPath.shimmed": {
            "name": "shimmed",
            "location": 526,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.shim": {
            "name": "shim",
            "location": 532,
            "return": [
                "Union[(module, Callable, ContextManager)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath.calculated_module_path": {
            "name": "calculated_module_path",
            "location": 548,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPath._import": {
            "name": "_import",
            "location": 553,
            "return": [
                "Optional[module]"
            ],
            "arguments": {
                "self": [],
                "prefix": [
                    "Optional[str]"
                ]
            }
        },
        "ShimmedPath.__hash__": {
            "name": "__hash__",
            "location": 562,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPathCollection.__init__": {
            "name": "__init__",
            "location": 571,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "import_type": [
                    "int"
                ],
                "paths": [
                    "Optional[typing.Sequence[ShimmedPath]]"
                ]
            }
        },
        "ShimmedPathCollection.register": {
            "name": "register",
            "location": 593,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPathCollection.get_registry": {
            "name": "get_registry",
            "location": 598,
            "return": [
                "Dict[(str, ShimmedPathCollection)]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ShimmedPathCollection.add_path": {
            "name": "add_path",
            "location": 602,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "ShimmedPath"
                ]
            }
        },
        "ShimmedPathCollection.set_default": {
            "name": "set_default",
            "location": 606,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "default": []
            }
        },
        "ShimmedPathCollection.set_default_args": {
            "name": "set_default_args",
            "location": 616,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "callable_name": [
                    "str"
                ]
            }
        },
        "ShimmedPathCollection.provide_function": {
            "name": "provide_function",
            "location": 620,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "fn": [
                    "Union[(ShimmedPath, ShimmedPathCollection, Callable)]"
                ]
            }
        },
        "ShimmedPathCollection.provide_method": {
            "name": "provide_method",
            "location": 626,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "fn": [
                    "Union[(ShimmedPath, ShimmedPathCollection, property, Callable)]"
                ]
            }
        },
        "ShimmedPathCollection.alias": {
            "name": "alias",
            "location": 632,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aliases": [
                    "List[str]"
                ]
            }
        },
        "ShimmedPathCollection.add_mixin": {
            "name": "add_mixin",
            "location": 645,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mixin": [
                    "Optional[Union[(ShimmedPathCollection, type)]]"
                ]
            }
        },
        "ShimmedPathCollection.create_path": {
            "name": "create_path",
            "location": 652,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "import_path": [
                    "str"
                ],
                "version_start": [
                    "str"
                ],
                "version_end": [
                    "Optional[str]"
                ]
            }
        },
        "ShimmedPathCollection._sort_paths": {
            "name": "_sort_paths",
            "location": 676,
            "return": [
                "List[ShimmedPath]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPathCollection._get_top_path": {
            "name": "_get_top_path",
            "location": 680,
            "return": [
                "Optional[ShimmedPath]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPathCollection.traverse": {
            "name": "traverse",
            "location": 685,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "shim": []
            }
        },
        "ShimmedPathCollection.shim": {
            "name": "shim",
            "location": 692,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShimmedPathCollection.pre_shim": {
            "name": "pre_shim",
            "location": 709,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fn": [
                    "Callable"
                ]
            }
        }
    },
    "pip-shims-main/src/pip_shims/shims.py": {
        "_shims.parse_version": {
            "name": "parse_version",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "version": []
            }
        },
        "_shims.__dir__": {
            "name": "__dir__",
            "location": 27,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "_shims._new": {
            "name": "_new",
            "location": 44,
            "return": [
                "_T_shims"
            ],
            "arguments": {
                "cls": [
                    "Type[_T_shims]"
                ]
            }
        },
        "_shims.__all__": {
            "name": "__all__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_shims.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_shims.__getattr__": {
            "name": "__getattr__",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pip-shims-main/src/pip_shims/utils.py": {
        "make_method": {
            "name": "make_method",
            "location": 66,
            "return": [
                "typing.Callable"
            ],
            "arguments": {
                "fn": [
                    "typing.Callable"
                ]
            }
        },
        "make_classmethod": {
            "name": "make_classmethod",
            "location": 76,
            "return": [
                "typing.Callable"
            ],
            "arguments": {
                "fn": [
                    "typing.Callable"
                ]
            }
        },
        "memoize": {
            "name": "memoize",
            "location": 86,
            "return": [
                "typing.Callable"
            ],
            "arguments": {
                "obj": []
            }
        },
        "_parse": {
            "name": "_parse",
            "location": 101,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "parse_version": {
            "name": "parse_version",
            "location": 109,
            "return": [],
            "arguments": {
                "version": []
            }
        },
        "split_package": {
            "name": "split_package",
            "location": 117,
            "return": [],
            "arguments": {
                "module": [],
                "subimport": []
            }
        },
        "get_method_args": {
            "name": "get_method_args",
            "location": 146,
            "return": [
                "Tuple[(typing.Callable, Optional[inspect.Arguments])]"
            ],
            "arguments": {
                "target_method": [
                    "typing.Callable"
                ]
            }
        },
        "set_default_kwargs": {
            "name": "set_default_kwargs",
            "location": 167,
            "return": [
                "Union[(module, type)]"
            ],
            "arguments": {
                "basecls": [
                    "Union[(module, type)]"
                ],
                "method": [
                    "typing.Callable"
                ]
            }
        },
        "ensure_function": {
            "name": "ensure_function",
            "location": 197,
            "return": [
                "typing.Callable"
            ],
            "arguments": {
                "parent": [],
                "funcname": [
                    "str"
                ],
                "func": [
                    "typing.Callable"
                ]
            }
        },
        "add_mixin_to_class": {
            "name": "add_mixin_to_class",
            "location": 234,
            "return": [
                "type"
            ],
            "arguments": {
                "basecls": [
                    "type"
                ],
                "mixins": [
                    "List[type]"
                ]
            }
        },
        "fallback_is_file_url": {
            "name": "fallback_is_file_url",
            "location": 258,
            "return": [
                "bool"
            ],
            "arguments": {
                "link": []
            }
        },
        "fallback_is_artifact": {
            "name": "fallback_is_artifact",
            "location": 263,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "fallback_is_vcs": {
            "name": "fallback_is_vcs",
            "location": 268,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "resolve_possible_shim": {
            "name": "resolve_possible_shim",
            "location": 273,
            "return": [
                "Optional[typing.Callable]"
            ],
            "arguments": {
                "target": [
                    "Union[(typing.Callable, TShimmedPath, TShimmedPathCollection)]"
                ]
            }
        },
        "nullcontext": {
            "name": "nullcontext",
            "location": 283,
            "return": [],
            "arguments": {}
        },
        "has_property": {
            "name": "has_property",
            "location": 291,
            "return": [
                "bool"
            ],
            "arguments": {
                "target": [],
                "name": [
                    "str"
                ]
            }
        },
        "apply_alias": {
            "name": "apply_alias",
            "location": 298,
            "return": [
                "Any"
            ],
            "arguments": {
                "imported": [
                    "Optional[Union[(module, type)]]"
                ],
                "target": []
            }
        },
        "suppress_setattr": {
            "name": "suppress_setattr",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "attr": [],
                "value": [],
                "filter_none": []
            }
        },
        "get_allowed_args": {
            "name": "get_allowed_args",
            "location": 377,
            "return": [
                "Tuple[(List[str], Dict[(str, Any)])]"
            ],
            "arguments": {
                "fn_or_class": [
                    "typing.Callable"
                ]
            }
        },
        "call_function_with_correct_args": {
            "name": "call_function_with_correct_args",
            "location": 400,
            "return": [
                "Any"
            ],
            "arguments": {
                "fn": [
                    "typing.Callable"
                ]
            }
        },
        "filter_allowed_args": {
            "name": "filter_allowed_args",
            "location": 428,
            "return": [
                "Tuple[(list, Dict[(str, Any)])]"
            ],
            "arguments": {
                "fn": [
                    "typing.Callable"
                ]
            }
        },
        "BaseMethod.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func_base": [
                    "typing.Callable"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "BaseMethod.__call__": {
            "name": "__call__",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseClassMethod.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "func_base": [
                    "typing.Callable"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "BaseClassMethod.__call__": {
            "name": "__call__",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "cls": [
                    "type"
                ]
            }
        },
        "make_method.method_creator": {
            "name": "method_creator",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "make_classmethod.classmethod_creator": {
            "name": "classmethod_creator",
            "location": 79,
            "return": [],
            "arguments": {}
        },
        "memoize.memoizer": {
            "name": "memoizer",
            "location": 91,
            "return": [],
            "arguments": {}
        }
    },
    "pip-shims-main/src/pip_shims/__init__.py": {},
    "pip-shims-main/tasks/__init__.py": {
        "_get_git_root": {
            "name": "_get_git_root",
            "location": 21,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "_get_branch": {
            "name": "_get_branch",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "clean": {
            "name": "clean",
            "location": 30,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "_read_version": {
            "name": "_read_version",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_read_text_version": {
            "name": "_read_text_version",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_write_version": {
            "name": "_write_version",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "v": []
            }
        },
        "_render_log": {
            "name": "_render_log",
            "location": 77,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "_bump_release": {
            "name": "_bump_release",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "version": [],
                "type_": [],
                "log": []
            }
        },
        "_prebump": {
            "name": "_prebump",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "version": [],
                "prebump": [],
                "log": []
            }
        },
        "build": {
            "name": "build",
            "location": 133,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "get_next_version": {
            "name": "get_next_version",
            "location": 138,
            "return": [],
            "arguments": {
                "ctx": [],
                "type_": [],
                "log": []
            }
        },
        "bump_version": {
            "name": "bump_version",
            "location": 149,
            "return": [],
            "arguments": {
                "ctx": [],
                "type_": [],
                "log": [],
                "dry_run": []
            }
        },
        "generate_news": {
            "name": "generate_news",
            "location": 157,
            "return": [],
            "arguments": {
                "ctx": [],
                "yes": [],
                "dry_run": []
            }
        },
        "get_changelog": {
            "name": "get_changelog",
            "location": 167,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "tag_release": {
            "name": "tag_release",
            "location": 174,
            "return": [],
            "arguments": {
                "ctx": [],
                "version": [],
                "type_": [],
                "yes": [],
                "dry_run": []
            }
        },
        "release": {
            "name": "release",
            "location": 194,
            "return": [],
            "arguments": {
                "ctx": [],
                "version": [],
                "type_": [],
                "yes": [],
                "dry_run": []
            }
        },
        "full_release": {
            "name": "full_release",
            "location": 222,
            "return": [],
            "arguments": {
                "ctx": [],
                "type_": [],
                "repo": [],
                "prebump": [],
                "yes": []
            }
        },
        "build_docs": {
            "name": "build_docs",
            "location": 257,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "clean_mdchangelog": {
            "name": "clean_mdchangelog",
            "location": 273,
            "return": [],
            "arguments": {
                "ctx": []
            }
        }
    },
    "pip-shims-main/tests/conftest.py": {
        "PipCommand": {
            "name": "PipCommand",
            "location": 12,
            "return": [],
            "arguments": {}
        }
    },
    "pip-shims-main/tests/test_instances.py": {
        "test_strip_extras": {
            "name": "test_strip_extras",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cmdoptions": {
            "name": "test_cmdoptions",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_command": {
            "name": "test_command",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "PipCommand": []
            }
        },
        "test_configparser": {
            "name": "test_configparser",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "PipCommand": []
            }
        },
        "test_exceptions": {
            "name": "test_exceptions",
            "location": 116,
            "return": [],
            "arguments": {
                "exceptionclass": [],
                "baseclass": []
            }
        },
        "test_favorite_hash": {
            "name": "test_favorite_hash",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_format_control": {
            "name": "test_format_control",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_installed": {
            "name": "test_get_installed",
            "location": 140,
            "return": [],
            "arguments": {}
        },
        "test_link_and_ireq": {
            "name": "test_link_and_ireq",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_path_and_url": {
            "name": "test_path_and_url",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cache_dir": {
            "name": "test_cache_dir",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "PipCommand": []
            }
        },
        "test_is_installable": {
            "name": "test_is_installable",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_parse_version": {
            "name": "test_parse_version",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_archive_file": {
            "name": "test_archive_file",
            "location": 192,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pip_version": {
            "name": "test_pip_version",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_resolution": {
            "name": "test_resolution",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [],
                "PipCommand": []
            }
        },
        "test_abstract_dist": {
            "name": "test_abstract_dist",
            "location": 352,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_safe_file_cache": {
            "name": "test_safe_file_cache",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_frozen_req": {
            "name": "test_frozen_req",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wheel_cache": {
            "name": "test_wheel_cache",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_vcs_support": {
            "name": "test_vcs_support",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wheel": {
            "name": "test_wheel",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wheelbuilder": {
            "name": "test_wheelbuilder",
            "location": 389,
            "return": [
                "None"
            ],
            "arguments": {
                "tmpdir": [],
                "PipCommand": []
            }
        },
        "test_get_packagefinder": {
            "name": "test_get_packagefinder",
            "location": 496,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_resolve": {
            "name": "test_resolve",
            "location": 522,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pypi": {
            "name": "test_pypi",
            "location": 529,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dev_pkgs": {
            "name": "test_dev_pkgs",
            "location": 533,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_stdlib_pkgs": {
            "name": "test_stdlib_pkgs",
            "location": 539,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_session": {
            "name": "test_get_session",
            "location": 545,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_build_wheel": {
            "name": "test_build_wheel",
            "location": 551,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pip-shims-main/tests/__init__.py": {}
}
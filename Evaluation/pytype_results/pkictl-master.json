{
    "pkictl-master/setup.py": {},
    "pkictl-master/pkictl/cli.py": {
        "custom_formatter": {
            "name": "custom_formatter",
            "location": 4,
            "return": [
                "argparse.HelpFormatter"
            ],
            "arguments": {
                "prog": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        }
    },
    "pkictl-master/pkictl/models.py": {
        "CertificateAuthority.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "baseurl": [],
                "manifest": []
            }
        },
        "CertificateAuthority.spec": {
            "name": "spec",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CertificateAuthority.backend": {
            "name": "backend",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CertificateAuthority.ttl": {
            "name": "ttl",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CertificateAuthority.config_url": {
            "name": "config_url",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CertificateAuthority.ca_urls": {
            "name": "ca_urls",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RootCA.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "baseurl": [],
                "manifest": []
            }
        },
        "RootCA.url": {
            "name": "url",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "baseurl": [],
                "manifest": []
            }
        },
        "IntermediateCA.issuer": {
            "name": "issuer",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.kv_engine": {
            "name": "kv_engine",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.catype": {
            "name": "catype",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.csr": {
            "name": "csr",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "IntermediateCA.cert": {
            "name": "cert",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "IntermediateCA.private_key": {
            "name": "private_key",
            "location": 90,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "IntermediateCA.url": {
            "name": "url",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.crl_config_url": {
            "name": "crl_config_url",
            "location": 98,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.issuer_sign_url": {
            "name": "issuer_sign_url",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.set_signed_url": {
            "name": "set_signed_url",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.kv_engine_url": {
            "name": "kv_engine_url",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.spec": {
            "name": "spec",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.crl_config": {
            "name": "crl_config",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.roles": {
            "name": "roles",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntermediateCA.policies": {
            "name": "policies",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KeyValueEngine.__init__": {
            "name": "__init__",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "baseurl": [],
                "manifest": []
            }
        },
        "KeyValueEngine.spec": {
            "name": "spec",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "KeyValueEngine.url": {
            "name": "url",
            "location": 158,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pkictl-master/pkictl/pkictl.py": {
        "main": {
            "name": "main",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pkictl-master/pkictl/schemas.py": {},
    "pkictl-master/pkictl/utils.py": {
        "output_message": {
            "name": "output_message",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "msg": [
                    "str"
                ],
                "err": [
                    "bool"
                ]
            }
        },
        "exit_with_message": {
            "name": "exit_with_message",
            "location": 18,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "msg": [
                    "str"
                ]
            }
        },
        "get_from_environment": {
            "name": "get_from_environment",
            "location": 22,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "get_manifest_files": {
            "name": "get_manifest_files",
            "location": 33,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "directory": [
                    "str"
                ]
            }
        },
        "read_manifest_file": {
            "name": "read_manifest_file",
            "location": 39,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "get_validated_manifests": {
            "name": "get_validated_manifests",
            "location": 54,
            "return": [
                "Tuple[(List[dict], List[dict], List[dict])]"
            ],
            "arguments": {
                "documents": [
                    "List[dict]"
                ]
            }
        },
        "write_vault_master_keys": {
            "name": "write_vault_master_keys",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "master_keys": [
                    "List[str]"
                ],
                "file": [
                    "str"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "write_vault_root_token": {
            "name": "write_vault_root_token",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "root_token": [
                    "str"
                ],
                "file": [
                    "str"
                ],
                "debug": [
                    "bool"
                ]
            }
        },
        "get_issuer_index": {
            "name": "get_issuer_index",
            "location": 108,
            "return": [
                "Optional[int]"
            ],
            "arguments": {
                "array": [
                    "List[dict]"
                ],
                "key": [
                    "str"
                ],
                "value": [
                    "str"
                ]
            }
        },
        "sort_intermediate_certificate_authorities": {
            "name": "sort_intermediate_certificate_authorities",
            "location": 115,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "intermediates": [
                    "List[dict]"
                ]
            }
        }
    },
    "pkictl-master/pkictl/vault.py": {
        "VaultClient.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "baseurl": [],
                "token": [],
                "verify_ssl": [],
                "debugging": []
            }
        },
        "VaultClient.headers": {
            "name": "headers",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VaultClient.request": {
            "name": "request",
            "location": 19,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "self": [],
                "method": [],
                "url": [],
                "headers": [],
                "json": []
            }
        },
        "VaultClient.healthcheck": {
            "name": "healthcheck",
            "location": 43,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VaultClient.initialize_server": {
            "name": "initialize_server",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "log_file": [],
                "token_file": []
            }
        },
        "VaultClient.unseal_server": {
            "name": "unseal_server",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VaultClient.mount_kv_engine": {
            "name": "mount_kv_engine",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "kvengine": []
            }
        },
        "VaultClient.store_ca_private_key": {
            "name": "store_ca_private_key",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.mount_pki_engine": {
            "name": "mount_pki_engine",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.check_existing_ca": {
            "name": "check_existing_ca",
            "location": 135,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "ca": [],
                "quiet": []
            }
        },
        "VaultClient.create_root_ca": {
            "name": "create_root_ca",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.configure_ca_urls": {
            "name": "configure_ca_urls",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.set_crl_configuration": {
            "name": "set_crl_configuration",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.create_intermediate_ca": {
            "name": "create_intermediate_ca",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.sign_intermediate_ca": {
            "name": "sign_intermediate_ca",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.set_intermediate_ca": {
            "name": "set_intermediate_ca",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.configure_ca_roles": {
            "name": "configure_ca_roles",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        },
        "VaultClient.configure_ca_policies": {
            "name": "configure_ca_policies",
            "location": 250,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ca": []
            }
        }
    },
    "pkictl-master/pkictl/__init__.py": {},
    "pkictl-master/pkictl/__main__.py": {},
    "pkictl-master/pkictl/tests/helper.py": {
        "capture_stdout": {
            "name": "capture_stdout",
            "location": 18,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "create_test_http_server": {
            "name": "create_test_http_server",
            "location": 44,
            "return": [
                "http.server.HTTPServer"
            ],
            "arguments": {}
        },
        "get_test_root_ca": {
            "name": "get_test_root_ca",
            "location": 53,
            "return": [
                "pkictl.models.RootCA"
            ],
            "arguments": {
                "baseurl": []
            }
        },
        "get_test_intermediate_ca": {
            "name": "get_test_intermediate_ca",
            "location": 59,
            "return": [
                "pkictl.models.IntermediateCA"
            ],
            "arguments": {
                "baseurl": []
            }
        },
        "get_test_kv_engine": {
            "name": "get_test_kv_engine",
            "location": 65,
            "return": [
                "pkictl.models.KeyValueEngine"
            ],
            "arguments": {
                "baseurl": []
            }
        },
        "serialize_json": {
            "name": "serialize_json",
            "location": 71,
            "return": [
                "bytes"
            ],
            "arguments": {
                "data": []
            }
        },
        "TestHandler.do_GET": {
            "name": "do_GET",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pkictl-master/pkictl/tests/test_cli.py": {
        "TestCLI.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCLI.test_cli": {
            "name": "test_cli",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCLI.test_init_subcommand": {
            "name": "test_init_subcommand",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestCLI.test_apply_subcommand": {
            "name": "test_apply_subcommand",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pkictl-master/pkictl/tests/test_models.py": {
        "TestRootCA.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRootCA.test_root_ca": {
            "name": "test_root_ca",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntermediateCA.setUp": {
            "name": "setUp",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestIntermediateCA.test_intermediate_ca": {
            "name": "test_intermediate_ca",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeyValueEngine.setUp": {
            "name": "setUp",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestKeyValueEngine.test_keyvalue_engine": {
            "name": "test_keyvalue_engine",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pkictl-master/pkictl/tests/test_schemas.py": {
        "TestSchemas.test_root_schema_valid": {
            "name": "test_root_schema_valid",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemas.test_root_schema_invalid": {
            "name": "test_root_schema_invalid",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemas.test_intermediate_schema_valid": {
            "name": "test_intermediate_schema_valid",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemas.test_intermediate_schema_invalid": {
            "name": "test_intermediate_schema_invalid",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemas.test_schema_from_file": {
            "name": "test_schema_from_file",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemas.test_schema_from_multidoc_file": {
            "name": "test_schema_from_multidoc_file",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemas.test_kvengine_schema_valid": {
            "name": "test_kvengine_schema_valid",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSchemas.test_kvengine_schema_invalid": {
            "name": "test_kvengine_schema_invalid",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pkictl-master/pkictl/tests/test_utils.py": {
        "TestUtils.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_output_message": {
            "name": "test_output_message",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_exit_with_message": {
            "name": "test_exit_with_message",
            "location": 27,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_from_environment_vault_address": {
            "name": "test_get_from_environment_vault_address",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_from_environment_vault_token": {
            "name": "test_get_from_environment_vault_token",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_from_environment_vault_skip_verify": {
            "name": "test_get_from_environment_vault_skip_verify",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_manifest_files": {
            "name": "test_get_manifest_files",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_read_manifest_file": {
            "name": "test_read_manifest_file",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_read_manifest_file_nonexistant": {
            "name": "test_read_manifest_file_nonexistant",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_read_manifest_file_invalid_yaml": {
            "name": "test_read_manifest_file_invalid_yaml",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_read_manifest_file_permission_denied": {
            "name": "test_read_manifest_file_permission_denied",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_validated_manifests": {
            "name": "test_get_validated_manifests",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_validated_manifests_missing_kv_engine": {
            "name": "test_get_validated_manifests_missing_kv_engine",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_get_validated_manifests_unsupported": {
            "name": "test_get_validated_manifests_unsupported",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_write_vault_master_keys": {
            "name": "test_write_vault_master_keys",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_write_vault_master_keys_debug": {
            "name": "test_write_vault_master_keys_debug",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_write_vault_master_keys_failed": {
            "name": "test_write_vault_master_keys_failed",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_write_vault_root_token": {
            "name": "test_write_vault_root_token",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_write_vault_root_token_failed": {
            "name": "test_write_vault_root_token_failed",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_write_vault_root_token_debug": {
            "name": "test_write_vault_root_token_debug",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUtils.test_sort_intermediate_certificate_authorities": {
            "name": "test_sort_intermediate_certificate_authorities",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pkictl-master/pkictl/tests/test_vault.py": {
        "TestVaultClient.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_vault_header": {
            "name": "test_vault_header",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_health_check": {
            "name": "test_health_check",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_initialize_server": {
            "name": "test_initialize_server",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_unseal_server": {
            "name": "test_unseal_server",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_mount_kv_engine": {
            "name": "test_mount_kv_engine",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_mount_kv_engine_exists": {
            "name": "test_mount_kv_engine_exists",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_mount_kv_engine_fail": {
            "name": "test_mount_kv_engine_fail",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_store_ca_pkey": {
            "name": "test_store_ca_pkey",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_store_ca_pkey_fail": {
            "name": "test_store_ca_pkey_fail",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_mount_pki_engine": {
            "name": "test_mount_pki_engine",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_mount_pki_engine_fail": {
            "name": "test_mount_pki_engine_fail",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_check_existing_ca": {
            "name": "test_check_existing_ca",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_create_root_ca": {
            "name": "test_create_root_ca",
            "location": 154,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_create_root_ca_fail": {
            "name": "test_create_root_ca_fail",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_configure_ca_urls": {
            "name": "test_configure_ca_urls",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_configure_ca_urls_fail": {
            "name": "test_configure_ca_urls_fail",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_set_crl_configuration": {
            "name": "test_set_crl_configuration",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_set_crl_configuration_fail": {
            "name": "test_set_crl_configuration_fail",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_create_intermediate_ca": {
            "name": "test_create_intermediate_ca",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_create_intermediate_ca_fail": {
            "name": "test_create_intermediate_ca_fail",
            "location": 223,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_sign_intermediate_ca": {
            "name": "test_sign_intermediate_ca",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_sign_intermediate_ca_fail": {
            "name": "test_sign_intermediate_ca_fail",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_set_intermediate_ca": {
            "name": "test_set_intermediate_ca",
            "location": 259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_set_intermediate_ca_fail": {
            "name": "test_set_intermediate_ca_fail",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_configure_ca_roles": {
            "name": "test_configure_ca_roles",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_configure_ca_roles_multiple": {
            "name": "test_configure_ca_roles_multiple",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_configure_ca_roles_fail": {
            "name": "test_configure_ca_roles_fail",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_configure_ca_policies": {
            "name": "test_configure_ca_policies",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClient.test_configure_ca_policies_fail": {
            "name": "test_configure_ca_policies_fail",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClientRequests.setUp": {
            "name": "setUp",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClientRequests.tearDown": {
            "name": "tearDown",
            "location": 338,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClientRequests.test_request_200": {
            "name": "test_request_200",
            "location": 342,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClientRequests.test_request_debugging": {
            "name": "test_request_debugging",
            "location": 348,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClientRequests.test_request_timeout": {
            "name": "test_request_timeout",
            "location": 356,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClientRequests.test_request_403": {
            "name": "test_request_403",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestVaultClientRequests.test_request_404": {
            "name": "test_request_404",
            "location": 370,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pkictl-master/pkictl/tests/__init__.py": {}
}
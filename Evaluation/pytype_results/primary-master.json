{
    "primary-master/.ipython/profile_default/ipython_kernel_config.py": {},
    "primary-master/.jupyter/jupyter_notebook_config.py": {},
    "primary-master/analysis/opportunity.py": {
        "opportunity_sizes": {
            "name": "opportunity_sizes",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "start": [
                    "datetime.date"
                ],
                "end": [
                    "datetime.date"
                ],
                "aov": []
            }
        }
    },
    "primary-master/analysis/subscription_opp.py": {
        "orders_per_year": {
            "name": "orders_per_year",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "subscription_op_size": {
            "name": "subscription_op_size",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "users": [],
                "margin": [],
                "shipping": []
            }
        },
        "subscription_op_size.new_subscription_orders": {
            "name": "new_subscription_orders",
            "location": 44,
            "return": [],
            "arguments": {
                "orders_per_year": []
            }
        }
    },
    "primary-master/analysis/user_paths.py": {
        "user_paths": {
            "name": "user_paths",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "users": [],
                "start": [
                    "datetime.date"
                ],
                "end": [
                    "datetime.date"
                ],
                "event_names": [
                    "List[str]"
                ],
                "palette": [
                    "Dict[(str, str)]"
                ],
                "x_jitter": [
                    "float"
                ],
                "y_jitter": [
                    "float"
                ],
                "title": [
                    "str"
                ]
            }
        },
        "_jitter": {
            "name": "_jitter",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "df": [],
                "col": [
                    "str"
                ],
                "jitter": [
                    "float"
                ]
            }
        }
    },
    "primary-master/analysis/viz.py": {
        "order_frequency": {
            "name": "order_frequency",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "order_frequency_over_time": {
            "name": "order_frequency_over_time",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "common_products": {
            "name": "common_products",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "transactions": []
            }
        },
        "quality_onetimers": {
            "name": "quality_onetimers",
            "location": 183,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "guest_users": {
            "name": "guest_users",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "transactions": []
            }
        },
        "sales": {
            "name": "sales",
            "location": 283,
            "return": [
                "None"
            ],
            "arguments": {
                "transactions": []
            }
        },
        "units_per_order": {
            "name": "units_per_order",
            "location": 337,
            "return": [
                "None"
            ],
            "arguments": {
                "transactions": []
            }
        },
        "products_per_bag": {
            "name": "products_per_bag",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {
                "start": [
                    "datetime.date"
                ],
                "end": [
                    "datetime.date"
                ]
            }
        },
        "days_between_events_by_lifetime_orders": {
            "name": "days_between_events_by_lifetime_orders",
            "location": 373,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "pilot_user_heatmap": {
            "name": "pilot_user_heatmap",
            "location": 401,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "marketing_opt_out": {
            "name": "marketing_opt_out",
            "location": 435,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "picks_waitlist_user_heatmap": {
            "name": "picks_waitlist_user_heatmap",
            "location": 494,
            "return": [
                "None"
            ],
            "arguments": {
                "users": []
            }
        },
        "kids_rate_heatmap": {
            "name": "kids_rate_heatmap",
            "location": 528,
            "return": [
                "Any"
            ],
            "arguments": {
                "users": []
            }
        }
    },
    "primary-master/analysis/__init__.py": {},
    "primary-master/etl/events.py": {
        "get_events": {
            "name": "get_events",
            "location": 14,
            "return": [],
            "arguments": {
                "users": [],
                "start": [],
                "end": []
            }
        },
        "_rename_events": {
            "name": "_rename_events",
            "location": 37,
            "return": [],
            "arguments": {
                "events": []
            }
        }
    },
    "primary-master/etl/general.py": {
        "coerce_types": {
            "name": "coerce_types",
            "location": 10,
            "return": [],
            "arguments": {
                "data": [],
                "types": []
            }
        }
    },
    "primary-master/etl/transactions.py": {
        "get_transactions": {
            "name": "get_transactions",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "_calculate_fields": {
            "name": "_calculate_fields",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "transactions": []
            }
        }
    },
    "primary-master/etl/users.py": {
        "get_users": {
            "name": "get_users",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "_get_users_from_looker_export": {
            "name": "_get_users_from_looker_export",
            "location": 43,
            "return": [],
            "arguments": {}
        },
        "_aggregate_looker_fields": {
            "name": "_aggregate_looker_fields",
            "location": 48,
            "return": [],
            "arguments": {
                "users": []
            }
        },
        "_rename_fields": {
            "name": "_rename_fields",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "users": []
            }
        },
        "_join_user_list": {
            "name": "_join_user_list",
            "location": 66,
            "return": [],
            "arguments": {
                "users": [],
                "file": [],
                "column": []
            }
        },
        "_cast_fields": {
            "name": "_cast_fields",
            "location": 88,
            "return": [],
            "arguments": {
                "users": []
            }
        },
        "_calculate_frequency_fields": {
            "name": "_calculate_frequency_fields",
            "location": 105,
            "return": [
                "Any"
            ],
            "arguments": {
                "users": []
            }
        },
        "_calculate_buckets": {
            "name": "_calculate_buckets",
            "location": 112,
            "return": [
                "Any"
            ],
            "arguments": {
                "users": []
            }
        },
        "_join_mixpanel_stats": {
            "name": "_join_mixpanel_stats",
            "location": 146,
            "return": [],
            "arguments": {
                "users": []
            }
        },
        "_join_first_order_facts": {
            "name": "_join_first_order_facts",
            "location": 170,
            "return": [],
            "arguments": {
                "users": []
            }
        }
    },
    "primary-master/etl/__init__.py": {},
    "primary-master/lib/constants.py": {
        "Enum.ALL": {
            "name": "ALL",
            "location": 9,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Enum.indicator": {
            "name": "indicator",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "col": [
                    "str"
                ]
            }
        },
        "TransactionColumns.types": {
            "name": "types",
            "location": 47,
            "return": [
                "Dict[(str, Type[float])]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "EventColumns.types": {
            "name": "types",
            "location": 77,
            "return": [
                "Dict[(str, Type[Union[(str, _datetime.datetime)]])]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Events.palette": {
            "name": "palette",
            "location": 90,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "UserColumns.types": {
            "name": "types",
            "location": 139,
            "return": [
                "Dict[(str, Type[int])]"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "primary-master/lib/google.py": {
        "_get_google_client": {
            "name": "_get_google_client",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "df_to_google": {
            "name": "df_to_google",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": [],
                "spreadsheet": [
                    "str"
                ],
                "worksheet": [
                    "str"
                ]
            }
        },
        "google_to_df": {
            "name": "google_to_df",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "spreadsheet": [
                    "str"
                ],
                "worksheet": [
                    "str"
                ]
            }
        }
    },
    "primary-master/lib/looker.py": {
        "looker_to_df": {
            "name": "looker_to_df",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "look_id": [
                    "str"
                ]
            }
        },
        "Looker.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "look_id": [
                    "str"
                ]
            }
        },
        "Looker._auth": {
            "name": "_auth",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Looker._get_metadata": {
            "name": "_get_metadata",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Looker.get_data": {
            "name": "get_data",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "format": [],
                "limit": []
            }
        },
        "Looker.get_viz": {
            "name": "get_viz",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "width": [],
                "height": []
            }
        }
    },
    "primary-master/lib/settings.py": {},
    "primary-master/lib/sql.py": {
        "sql_to_df": {
            "name": "sql_to_df",
            "location": 20,
            "return": [],
            "arguments": {
                "sql": [],
                "use_cache": []
            }
        },
        "_cached_sql_to_df": {
            "name": "_cached_sql_to_df",
            "location": 38,
            "return": [],
            "arguments": {
                "sql": []
            }
        },
        "_get_conneciton": {
            "name": "_get_conneciton",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "primary-master/lib/viz.py": {
        "init_plt": {
            "name": "init_plt",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "primary-master/lib/__init__.py": {},
    "primary-master/tests/__init__.py": {},
    "primary-master/tests/analysis/__init__.py": {},
    "primary-master/tests/etl/test_events.py": {
        "EventsTest.test_events": {
            "name": "test_events",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "sql_mock": []
            }
        }
    },
    "primary-master/tests/etl/test_users_.py": {
        "UsersTest.test_get_users_from_looker_export": {
            "name": "test_get_users_from_looker_export",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "read_csv_mock": []
            }
        },
        "UsersTest.test_users": {
            "name": "test_users",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "_get_users_from_looker_export_mock": [],
                "sql_to_df_mock": [],
                "read_csv_mock": []
            }
        },
        "UsersTest.test_calculate_frequency_fields": {
            "name": "test_calculate_frequency_fields",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UsersTest.test_join": {
            "name": "test_join",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "sql_to_df_mock": []
            }
        }
    },
    "primary-master/tests/etl/__init__.py": {},
    "primary-master/tests/lib/__init__.py": {}
}
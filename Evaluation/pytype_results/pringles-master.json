{
    "pringles-master/setup.py": {},
    "pringles-master/docs/conf.py": {},
    "pringles-master/pringles/__init__.py": {},
    "pringles-master/pringles/backends/web_display.py": {
        "_get_static_files_path": {
            "name": "_get_static_files_path",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "ipython_inline_display": {
            "name": "ipython_inline_display",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "model": []
            }
        },
        "ServerThread.run": {
            "name": "run",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ServerThread.join": {
            "name": "join",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WebApplication.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url_prefix": []
            }
        },
        "WebApplication.initialize": {
            "name": "initialize",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "url_prefix": [],
                "port": [],
                "address": []
            }
        },
        "WebApplication._get_random_free_port": {
            "name": "_get_random_free_port",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "ServerThread.run.healthcheck": {
            "name": "healthcheck",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "WebApplication.HealthcheckHandler.get": {
            "name": "get",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pringles-master/pringles/backends/__init__.py": {},
    "pringles-master/pringles/models/errors.py": {
        "AtomicNameIsKeywordException.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "atomic_name": []
            }
        }
    },
    "pringles-master/pringles/models/models.py": {
        "AtomicModelBuilder.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomicModelBuilder.with_name": {
            "name": "with_name",
            "location": 22,
            "return": [
                "_TAtomicModelBuilder@@AtomicModelBuilder@@"
            ],
            "arguments": {
                "self": [
                    "_TAtomicModelBuilder@@AtomicModelBuilder@@"
                ],
                "name": []
            }
        },
        "AtomicModelBuilder.with_input_port": {
            "name": "with_input_port",
            "location": 26,
            "return": [
                "_TAtomicModelBuilder@@AtomicModelBuilder@@"
            ],
            "arguments": {
                "self": [
                    "_TAtomicModelBuilder@@AtomicModelBuilder@@"
                ],
                "name": []
            }
        },
        "AtomicModelBuilder.with_output_port": {
            "name": "with_output_port",
            "location": 30,
            "return": [
                "_TAtomicModelBuilder@@AtomicModelBuilder@@"
            ],
            "arguments": {
                "self": [
                    "_TAtomicModelBuilder@@AtomicModelBuilder@@"
                ],
                "name": []
            }
        },
        "AtomicModelBuilder.build": {
            "name": "build",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Model.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Model.__str__": {
            "name": "__str__",
            "location": 57,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "Model.add_outport": {
            "name": "add_outport",
            "location": 60,
            "return": [
                "_TModel@@Model@@"
            ],
            "arguments": {
                "self": [
                    "_TModel@@Model@@"
                ],
                "name": []
            }
        },
        "Model.add_inport": {
            "name": "add_inport",
            "location": 65,
            "return": [
                "_TModel@@Model@@"
            ],
            "arguments": {
                "self": [
                    "_TModel@@Model@@"
                ],
                "name": []
            }
        },
        "Model.get_port": {
            "name": "get_port",
            "location": 70,
            "return": [
                "Union[(InPort, OutPort)]"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Port.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "owner": []
            }
        },
        "Port.__str__": {
            "name": "__str__",
            "location": 87,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Port.get_identifier_for": {
            "name": "get_identifier_for",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "model": []
            }
        },
        "Link.__init__": {
            "name": "__init__",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_port": [],
                "to_port": []
            }
        },
        "ExtInputLink.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_port": [],
                "to_port": []
            }
        },
        "ExtOutputLink.__init__": {
            "name": "__init__",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_port": [],
                "to_port": []
            }
        },
        "IntLink.__init__": {
            "name": "__init__",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_port": [],
                "to_port": []
            }
        },
        "Atomic.__init__": {
            "name": "__init__",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Atomic.__str__": {
            "name": "__str__",
            "location": 140,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Atomic.get_abstract_model_name": {
            "name": "get_abstract_model_name",
            "location": 143,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Coupled.__init__": {
            "name": "__init__",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "subcomponents": []
            }
        },
        "Coupled.__str__": {
            "name": "__str__",
            "location": 155,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Coupled.add_internal_coupling": {
            "name": "add_internal_coupling",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "Coupled.add_external_input_coupling": {
            "name": "add_external_input_coupling",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "Coupled.add_external_output_coupling": {
            "name": "add_external_output_coupling",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "link": []
            }
        },
        "Coupled.add_coupling": {
            "name": "add_coupling",
            "location": 168,
            "return": [
                "_TCoupled@@Coupled@@"
            ],
            "arguments": {
                "self": [
                    "_TCoupled@@Coupled@@"
                ],
                "from_port": [],
                "to_port": []
            }
        },
        "Coupled.do_add_coupling": {
            "name": "do_add_coupling",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "from_port": [],
                "to_port": []
            }
        },
        "Coupled._repr_html_": {
            "name": "_repr_html_",
            "location": 203,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pringles-master/pringles/models/__init__.py": {},
    "pringles-master/pringles/serializers/json.py": {
        "JsonSerializer.outport_to_dict": {
            "name": "outport_to_dict",
            "location": 10,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "port": []
            }
        },
        "JsonSerializer.inport_to_dict": {
            "name": "inport_to_dict",
            "location": 18,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "port": []
            }
        },
        "JsonSerializer.atomic_to_dict": {
            "name": "atomic_to_dict",
            "location": 26,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "cls": [],
                "atomic": []
            }
        },
        "JsonSerializer.coupled_to_dict": {
            "name": "coupled_to_dict",
            "location": 37,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "cls": [],
                "coupled": []
            }
        },
        "JsonSerializer.model_to_dict": {
            "name": "model_to_dict",
            "location": 74,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "cls": [],
                "model": []
            }
        },
        "JsonSerializer.serialize": {
            "name": "serialize",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "model": []
            }
        }
    },
    "pringles-master/pringles/serializers/ma.py": {
        "MaSerializer.atomic_to_ma": {
            "name": "atomic_to_ma",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "atomic": []
            }
        },
        "MaSerializer.coupled_to_ma": {
            "name": "coupled_to_ma",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "coupled": []
            }
        },
        "MaSerializer.model_to_ma": {
            "name": "model_to_ma",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "model": []
            }
        },
        "MaSerializer.serialize": {
            "name": "serialize",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "model": []
            }
        }
    },
    "pringles-master/pringles/serializers/__init__.py": {},
    "pringles-master/pringles/simulator/errors.py": {
        "DuplicatedAtomicException.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "pringles-master/pringles/simulator/events.py": {
        "Event.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time": [],
                "port": [],
                "value": []
            }
        },
        "Event.serialize": {
            "name": "serialize",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pringles-master/pringles/simulator/registry.py": {
        "AtomicRegistry.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user_models_dir": [],
                "autodiscover": []
            }
        },
        "AtomicRegistry._add_atomic_class_as_attribute": {
            "name": "_add_atomic_class_as_attribute",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "atomic_class": []
            }
        },
        "AtomicRegistry.get_by_name": {
            "name": "get_by_name",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "AtomicRegistry._discover_atomics": {
            "name": "_discover_atomics",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomicRegistry._discover_user_atomics": {
            "name": "_discover_user_atomics",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomicRegistry._discover_boostrapped_atomics": {
            "name": "_discover_boostrapped_atomics",
            "location": 79,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomicRegistry._discover_files_that_match_predicate": {
            "name": "_discover_files_that_match_predicate",
            "location": 84,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "folder": [],
                "file_predicate": []
            }
        },
        "AtomicRegistry._discover_user_atomics.filter_by_extension": {
            "name": "filter_by_extension",
            "location": 74,
            "return": [],
            "arguments": {
                "filename": []
            }
        }
    },
    "pringles-master/pringles/simulator/simulation.py": {
        "SimulationResult.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "process_result": [],
                "main_log_path": [],
                "output_path": []
            }
        },
        "SimulationResult.successful": {
            "name": "successful",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SimulationResult._parse_value": {
            "name": "_parse_value",
            "location": 48,
            "return": [
                "Union[(float, tuple)]"
            ],
            "arguments": {
                "value": []
            }
        },
        "SimulationResult._parse_output_file": {
            "name": "_parse_output_file",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "file_path": []
            }
        },
        "SimulationResult._parse_main_log_file": {
            "name": "_parse_main_log_file",
            "location": 67,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "cls": [],
                "file_path": []
            }
        },
        "SimulationResult.plot_port": {
            "name": "plot_port",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "logname": [],
                "portname": [],
                "axes": [],
                "index": []
            }
        },
        "SimulationResult.get_process_output": {
            "name": "get_process_output",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Simulation.__init__": {
            "name": "__init__",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "top_model": [],
                "duration": [],
                "events": [],
                "use_simulator_logs": [],
                "use_simulator_out": [],
                "working_dir": [],
                "override_logged_messages": []
            }
        },
        "Simulation.top_model": {
            "name": "top_model",
            "location": 172,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.events": {
            "name": "events",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.duration": {
            "name": "duration",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.use_simulator_logs": {
            "name": "use_simulator_logs",
            "location": 196,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.use_simulator_out": {
            "name": "use_simulator_out",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.override_logged_messages": {
            "name": "override_logged_messages",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.working_dir": {
            "name": "working_dir",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.output_dir": {
            "name": "output_dir",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "val": []
            }
        },
        "Simulation.result": {
            "name": "result",
            "location": 236,
            "return": [],
            "arguments": {
                "self": [],
                "aResult": []
            }
        },
        "Simulation.make_output_dir": {
            "name": "make_output_dir",
            "location": 241,
            "return": [
                "str"
            ],
            "arguments": {
                "working_dir": []
            }
        },
        "Simulation.was_executed": {
            "name": "was_executed",
            "location": 248,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Simulation.to_pickle": {
            "name": "to_pickle",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Simulation.read_pickle": {
            "name": "read_pickle",
            "location": 257,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "Simulation._assert_top_model_named_top": {
            "name": "_assert_top_model_named_top",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "top_model": []
            }
        }
    },
    "pringles-master/pringles/simulator/simulator.py": {
        "Simulator.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cdpp_bin_path": [],
                "user_models_dir": [],
                "autodiscover": []
            }
        },
        "Simulator.run_simulation": {
            "name": "run_simulation",
            "location": 28,
            "return": [
                "pringles.simulator.simulation.SimulationResult"
            ],
            "arguments": {
                "self": [],
                "simulation": []
            }
        },
        "Simulator.get_registry": {
            "name": "get_registry",
            "location": 72,
            "return": [
                "pringles.simulator.registry.AtomicRegistry"
            ],
            "arguments": {
                "self": []
            }
        },
        "Simulator.dump_events_in_file": {
            "name": "dump_events_in_file",
            "location": 76,
            "return": [
                "Any"
            ],
            "arguments": {
                "events": [],
                "simulation_wd": []
            }
        },
        "Simulator._new_working_file_named": {
            "name": "_new_working_file_named",
            "location": 85,
            "return": [
                "Any"
            ],
            "arguments": {
                "working_dir": [],
                "file_name": []
            }
        },
        "Simulator.dump_model_in_file": {
            "name": "dump_model_in_file",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "model": [],
                "custom_wd": []
            }
        },
        "Simulator.find_executable_route": {
            "name": "find_executable_route",
            "location": 97,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "cdpp_bin_path": []
            }
        }
    },
    "pringles-master/pringles/simulator/__init__.py": {},
    "pringles-master/pringles/utils/discovery.py": {
        "AtomicMetadata.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "input_ports": [],
                "output_ports": []
            }
        },
        "AtomicMetadata.__eq__": {
            "name": "__eq__",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "AtomicMetadataExtractor.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "AtomicMetadataExtractor._initialize_parser": {
            "name": "_initialize_parser",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AtomicMetadataExtractor._do_extract_from_file": {
            "name": "_do_extract_from_file",
            "location": 66,
            "return": [
                "AtomicMetadata"
            ],
            "arguments": {
                "self": [],
                "file_source": []
            }
        },
        "AtomicMetadataExtractor._do_extract_from_string": {
            "name": "_do_extract_from_string",
            "location": 77,
            "return": [
                "AtomicMetadata"
            ],
            "arguments": {
                "self": [],
                "string_source": []
            }
        },
        "AtomicMetadataExtractor.extract": {
            "name": "extract",
            "location": 95,
            "return": [
                "AtomicMetadata"
            ],
            "arguments": {
                "self": []
            }
        },
        "CppCommentsLexer.__init__": {
            "name": "__init__",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "CppCommentsLexer._peek": {
            "name": "_peek",
            "location": 111,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "CppCommentsLexer._advance": {
            "name": "_advance",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "CppCommentsLexer.lex": {
            "name": "lex",
            "location": 117,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CppCommentsLexer._lex_comment_pushing_symbols": {
            "name": "_lex_comment_pushing_symbols",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CppCommentsLexer._push_lexed_comment": {
            "name": "_push_lexed_comment",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CppCommentsLexer._lex_till_inside_comment": {
            "name": "_lex_till_inside_comment",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pringles-master/pringles/utils/errors.py": {},
    "pringles-master/pringles/utils/plotting.py": {
        "__vtime_formatter": {
            "name": "__vtime_formatter",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [],
                "pos": []
            }
        },
        "vtime_decorate": {
            "name": "vtime_decorate",
            "location": 13,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "ax": [
                    "_T0@@"
                ]
            }
        },
        "new_vtime_aware_axes": {
            "name": "new_vtime_aware_axes",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "pringles-master/pringles/utils/vtime.py": {
        "VirtualTime.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hours": [],
                "minutes": [],
                "seconds": [],
                "milliseconds": [],
                "remainder": []
            }
        },
        "VirtualTime.of_seconds": {
            "name": "of_seconds",
            "location": 22,
            "return": [
                "_TVirtualTime@@VirtualTime@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVirtualTime]"
                ],
                "seconds": []
            }
        },
        "VirtualTime.of_minutes": {
            "name": "of_minutes",
            "location": 29,
            "return": [
                "_TVirtualTime@@VirtualTime@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVirtualTime]"
                ],
                "minutes": []
            }
        },
        "VirtualTime.of_hours": {
            "name": "of_hours",
            "location": 35,
            "return": [
                "_TVirtualTime@@VirtualTime@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVirtualTime]"
                ],
                "hours": []
            }
        },
        "VirtualTime.parse": {
            "name": "parse",
            "location": 39,
            "return": [
                "_TVirtualTime@@VirtualTime@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVirtualTime]"
                ],
                "timestr": []
            }
        },
        "VirtualTime.from_number": {
            "name": "from_number",
            "location": 46,
            "return": [
                "Optional[VirtualTime]"
            ],
            "arguments": {
                "cls": [],
                "num": []
            }
        },
        "VirtualTime._to_number": {
            "name": "_to_number",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "VirtualTime.__float__": {
            "name": "__float__",
            "location": 68,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "VirtualTime.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VirtualTime.__gt__": {
            "name": "__gt__",
            "location": 75,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "VirtualTime.__lt__": {
            "name": "__lt__",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "VirtualTime.__le__": {
            "name": "__le__",
            "location": 81,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "VirtualTime.__ge__": {
            "name": "__ge__",
            "location": 84,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "VirtualTime.__repr__": {
            "name": "__repr__",
            "location": 87,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "VirtualTime.__eq__": {
            "name": "__eq__",
            "location": 91,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "VirtualTime.__hash__": {
            "name": "__hash__",
            "location": 96,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pringles-master/pringles/utils/__init__.py": {},
    "pringles-master/tests/conftest.py": {
        "empty_coupled": {
            "name": "empty_coupled",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "a_simulator": {
            "name": "a_simulator",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "queue_top_model_with_events": {
            "name": "queue_top_model_with_events",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "pringles-master/tests/test_atomic_metadata_extractor.py": {
        "extract_metadata_from_string": {
            "name": "extract_metadata_from_string",
            "location": 8,
            "return": [
                "pringles.utils.discovery.AtomicMetadata"
            ],
            "arguments": {
                "source": []
            }
        },
        "test_no_metadata_fails": {
            "name": "test_no_metadata_fails",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_just_model_name_in_metadata": {
            "name": "test_just_model_name_in_metadata",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_supported_model_names": {
            "name": "test_supported_model_names",
            "location": 33,
            "return": [],
            "arguments": {
                "name": []
            }
        },
        "test_single_output_port_extracted_correctly": {
            "name": "test_single_output_port_extracted_correctly",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_multiple_ports_are_extracted_correctly": {
            "name": "test_multiple_ports_are_extracted_correctly",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_model_cpp_file_with_metadata_is_parsed_correctly": {
            "name": "test_model_cpp_file_with_metadata_is_parsed_correctly",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pringles-master/tests/test_events.py": {
        "test_event_serialized_correctly": {
            "name": "test_event_serialized_correctly",
            "location": 15,
            "return": [],
            "arguments": {
                "event": [],
                "expected_serialization": []
            }
        }
    },
    "pringles-master/tests/test_model_ipython_display.py": {
        "_start_web_display_backend": {
            "name": "_start_web_display_backend",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_requester": {
            "name": "test_requester",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "test_simple_model_display": {
            "name": "test_simple_model_display",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "test_requester": [],
                "queue_top_model_with_events": []
            }
        },
        "test_web_backed_is_alive": {
            "name": "test_web_backed_is_alive",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "test_requester": []
            }
        },
        "test_static_is_served": {
            "name": "test_static_is_served",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "test_requester": []
            }
        },
        "test_static_is_served_from_subfolder": {
            "name": "test_static_is_served_from_subfolder",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "test_requester": []
            }
        },
        "test_json_representation_is_embedded_raw_in_ipython_representation": {
            "name": "test_json_representation_is_embedded_raw_in_ipython_representation",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "test_requester": [],
                "queue_top_model_with_events": []
            }
        },
        "_start_server": {
            "name": "_start_server",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "TimeoutRequester.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base_url": [],
                "timeout": []
            }
        },
        "TimeoutRequester.get": {
            "name": "get",
            "location": 12,
            "return": [
                "requests.models.Response"
            ],
            "arguments": {
                "self": [],
                "uri": []
            }
        }
    },
    "pringles-master/tests/test_model_metadata_and_instanciation_integration.py": {
        "simulator_with_rocket_on_registry": {
            "name": "simulator_with_rocket_on_registry",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_extract_metadata_and_instantiate_is_coherent": {
            "name": "test_extract_metadata_and_instantiate_is_coherent",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "simulator_with_rocket_on_registry": []
            }
        },
        "test_registry_get_by_name_method": {
            "name": "test_registry_get_by_name_method",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "simulator_with_rocket_on_registry": []
            }
        },
        "test_registry_get_by_name_non_existing_atomic": {
            "name": "test_registry_get_by_name_non_existing_atomic",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "simulator_with_rocket_on_registry": []
            }
        }
    },
    "pringles-master/tests/test_model_translation.py": {
        "empty_top_model_generator": {
            "name": "empty_top_model_generator",
            "location": 8,
            "return": [
                "pringles.models.models.Coupled"
            ],
            "arguments": {}
        },
        "interacciones_poblacion_model_generator": {
            "name": "interacciones_poblacion_model_generator",
            "location": 12,
            "return": [
                "pringles.models.models.Coupled"
            ],
            "arguments": {}
        },
        "test_model_is_translated_into_ma_correctly": {
            "name": "test_model_is_translated_into_ma_correctly",
            "location": 38,
            "return": [],
            "arguments": {
                "model_generator_func": [],
                "expected_ma_file": []
            }
        },
        "test_non_existing_port": {
            "name": "test_non_existing_port",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dynamically_built_atomics_are_added_to_module_namespace": {
            "name": "test_dynamically_built_atomics_are_added_to_module_namespace",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_dynamically_building_of_atomic_fail_when_name_is_module_member": {
            "name": "test_dynamically_building_of_atomic_fail_when_name_is_module_member",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pringles-master/tests/test_simulation.py": {
        "test_to_pickle_generates_file_in_output_dir": {
            "name": "test_to_pickle_generates_file_in_output_dir",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "queue_top_model_with_events": []
            }
        },
        "test_to_pickle_and_read_pickle_gets_the_same_simulation": {
            "name": "test_to_pickle_and_read_pickle_gets_the_same_simulation",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "queue_top_model_with_events": []
            }
        },
        "test_simulation_with_top_model_not_named_top_raises": {
            "name": "test_simulation_with_top_model_not_named_top_raises",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "queue_top_model_with_events": []
            }
        },
        "test_top_model_and_events_of_simulation_are_immutable": {
            "name": "test_top_model_and_events_of_simulation_are_immutable",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "queue_top_model_with_events": [],
                "empty_coupled": []
            }
        },
        "test_simulation_options_are_immutable": {
            "name": "test_simulation_options_are_immutable",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "queue_top_model_with_events": []
            }
        }
    },
    "pringles-master/tests/test_simulator.py": {
        "test_simulator_discovers_default_cdpp_atomics": {
            "name": "test_simulator_discovers_default_cdpp_atomics",
            "location": 25,
            "return": [],
            "arguments": {
                "expected_atomic_name": []
            }
        },
        "test_simulator_executable_found_in_library_defined_dir": {
            "name": "test_simulator_executable_found_in_library_defined_dir",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_simulator_executable_not_found_raises": {
            "name": "test_simulator_executable_not_found_raises",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_exception_raised_in_simulation": {
            "name": "test_no_exception_raised_in_simulation",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "a_simulator": [],
                "queue_top_model_with_events": []
            }
        },
        "test_process_stdout_is_returned_correctly": {
            "name": "test_process_stdout_is_returned_correctly",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "a_simulator": [],
                "queue_top_model_with_events": []
            }
        },
        "test_run_simulation_in_custom_wd": {
            "name": "test_run_simulation_in_custom_wd",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "a_simulator": [],
                "queue_top_model_with_events": []
            }
        },
        "test_parse_output_file_float_values": {
            "name": "test_parse_output_file_float_values",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parse_output_file_tuple_values": {
            "name": "test_parse_output_file_tuple_values",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pringles-master/tests/test_utils.py": {
        "test_time_string_parsed_correctly": {
            "name": "test_time_string_parsed_correctly",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_time_string_parsed_correctly_with_float_remainder": {
            "name": "test_time_string_parsed_correctly_with_float_remainder",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_virtual_time_comparison": {
            "name": "test_virtual_time_comparison",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sting_representation_has_fixed_length": {
            "name": "test_sting_representation_has_fixed_length",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_virtual_times_representing_samee_value_should_be_equal": {
            "name": "test_virtual_times_representing_samee_value_should_be_equal",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_virtual_time_from_to_number_roundtrip": {
            "name": "test_virtual_time_from_to_number_roundtrip",
            "location": 54,
            "return": [],
            "arguments": {
                "seconds_value": []
            }
        },
        "test_virtual_time_from_float_should_work_for_values_over_zero": {
            "name": "test_virtual_time_from_float_should_work_for_values_over_zero",
            "location": 60,
            "return": [],
            "arguments": {
                "float_vtime_value": []
            }
        },
        "test_complex_time_from_to_number_roudntrip": {
            "name": "test_complex_time_from_to_number_roudntrip",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pringles-master/tests/__init__.py": {}
}
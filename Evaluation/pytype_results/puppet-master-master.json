{
    "puppet-master-master/conf.py": {},
    "puppet-master-master/run_tests.py": {
        "do_call": {
            "name": "do_call",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "run_mypy": {
            "name": "run_mypy",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "run_flake8": {
            "name": "run_flake8",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "puppet-master-master/setup.py": {},
    "puppet-master-master/upload.py": {
        "upload": {
            "name": "upload",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "version_exists": {
            "name": "version_exists",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "puppet-master-master/puppetmaster/assertions.py": {
        "AssertionsMixin.assert_in_css_selector": {
            "name": "assert_in_css_selector",
            "location": 8,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "css_selector": [],
                "message": []
            }
        },
        "AssertionsMixin.assert_in_page_source": {
            "name": "assert_in_page_source",
            "location": 17,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "AssertionsMixin.assert_on_page": {
            "name": "assert_on_page",
            "location": 23,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "url_path": []
            }
        }
    },
    "puppet-master-master/puppetmaster/core.py": {
        "BasePuppetMaster.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BasePuppetMaster.server_url": {
            "name": "server_url",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasePuppetMaster.create_driver": {
            "name": "create_driver",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "SeleniumTestsMixin.login_automatically": {
            "name": "login_automatically",
            "location": 44,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestsMixin.setUp": {
            "name": "setUp",
            "location": 47,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestsMixin.tearDown": {
            "name": "tearDown",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestsMixin.initiate_database": {
            "name": "initiate_database",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestsMixin.switch_to_next_window": {
            "name": "switch_to_next_window",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SeleniumTestCase.server_url": {
            "name": "server_url",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumLiveServerTestCase.server_url": {
            "name": "server_url",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumLiveServerTestCase.create_user": {
            "name": "create_user",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SeleniumLiveServerTestCase.login_automatically": {
            "name": "login_automatically",
            "location": 114,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "puppet-master-master/puppetmaster/exceptions.py": {},
    "puppet-master-master/puppetmaster/form_filling.py": {
        "FormFillingInterface.fill_input_with_value": {
            "name": "fill_input_with_value",
            "location": 29,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "input_el": [],
                "value": []
            }
        },
        "FormFillingInterface.fill_date_input": {
            "name": "fill_date_input",
            "location": 32,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "input_el": [],
                "value": []
            }
        },
        "FormFillingInterface.fill_checkbox": {
            "name": "fill_checkbox",
            "location": 35,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "input_el": [],
                "value": []
            }
        },
        "FormFillingInterface.fill_time_input": {
            "name": "fill_time_input",
            "location": 38,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "input_el": [],
                "value": []
            }
        },
        "FormFillingInterface.submit_form": {
            "name": "submit_form",
            "location": 41,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "FormFillingInterface.fill_form_and_submit": {
            "name": "fill_form_and_submit",
            "location": 44,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "form_selector": []
            }
        },
        "FormFillingMixin.fill_input_with_value": {
            "name": "fill_input_with_value",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "input_el": [],
                "value": []
            }
        },
        "FormFillingMixin.get_input_name": {
            "name": "get_input_name",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "input_el": []
            }
        },
        "FormFillingMixin.is_valid_date": {
            "name": "is_valid_date",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "value": []
            }
        },
        "FormFillingMixin.get_value_with_type": {
            "name": "get_value_with_type",
            "location": 70,
            "return": [
                "Tuple[(Any, str)]"
            ],
            "arguments": {
                "self": [],
                "input_el": []
            }
        },
        "FormFillingMixin.fill_input": {
            "name": "fill_input",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_el": []
            }
        },
        "FormFillingMixin.iterate_react_select_options": {
            "name": "iterate_react_select_options",
            "location": 102,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "select": []
            }
        },
        "FormFillingMixin.react_select_option": {
            "name": "react_select_option",
            "location": 111,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "select": []
            }
        },
        "FormFillingMixin.fill_checkbox": {
            "name": "fill_checkbox",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_el": [],
                "values": []
            }
        },
        "FormFillingMixin.select_first": {
            "name": "select_first",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "driver": [],
                "select": []
            }
        },
        "FormFillingMixin.select_first_from_dropdown": {
            "name": "select_first_from_dropdown",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "driver": [],
                "select": []
            }
        },
        "FormFillingMixin.get_form_inputs": {
            "name": "get_form_inputs",
            "location": 150,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "FormFillingMixin.get_form_textareas": {
            "name": "get_form_textareas",
            "location": 157,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "FormFillingMixin.fill_form": {
            "name": "fill_form",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "FormFillingMixin.submit_form": {
            "name": "submit_form",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        },
        "FormFillingMixin.fill_form_and_submit": {
            "name": "fill_form_and_submit",
            "location": 174,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "form_selector": []
            }
        }
    },
    "puppet-master-master/puppetmaster/middleware.py": {
        "AutoLoginMiddleware.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "get_response": []
            }
        },
        "AutoLoginMiddleware.__call__": {
            "name": "__call__",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "puppet-master-master/puppetmaster/waiter.py": {
        "WaiterInterface._wait": {
            "name": "_wait",
            "location": 18,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "condition": [],
                "timeout": []
            }
        },
        "WaiterInterface.wait": {
            "name": "wait",
            "location": 23,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "condition": [],
                "timeout": []
            }
        },
        "WaiterInterface.wait_for_elements": {
            "name": "wait_for_elements",
            "location": 28,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "selector": [],
                "timeout": []
            }
        },
        "WaiterInterface.wait_for_element": {
            "name": "wait_for_element",
            "location": 31,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "selector": [],
                "timeout": []
            }
        },
        "WaiterInterface.make_screenshot": {
            "name": "make_screenshot",
            "location": 34,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "id_iter": []
            }
        },
        "WaiterMixin.make_screenshot": {
            "name": "make_screenshot",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id_iter": []
            }
        },
        "WaiterMixin._wait": {
            "name": "_wait",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "condition": [],
                "timeout": []
            }
        },
        "WaiterMixin.wait": {
            "name": "wait",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "condition": [],
                "timeout": [],
                "max_tries": []
            }
        },
        "WaiterMixin.wait_for_element": {
            "name": "wait_for_element",
            "location": 69,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "selector": [],
                "timeout": []
            }
        },
        "WaiterMixin.wait_for_elements": {
            "name": "wait_for_elements",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "selector": [],
                "timeout": []
            }
        }
    },
    "puppet-master-master/puppetmaster/__init__.py": {},
    "puppet-master-master/puppetmaster/kobotoolbox/assertions.py": {
        "KobotoolboxAssertionsMixin.assert_in_enketo_notification": {
            "name": "assert_in_enketo_notification",
            "location": 8,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": [],
                "timeout": []
            }
        },
        "KobotoolboxAssertionsMixin.assert_in_kpi_notifications": {
            "name": "assert_in_kpi_notifications",
            "location": 17,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "message": [],
                "timeout": []
            }
        }
    },
    "puppet-master-master/puppetmaster/kobotoolbox/core.py": {
        "KobotoolboxSeleniumMixin.login_automatically": {
            "name": "login_automatically",
            "location": 23,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "KobotoolboxSeleniumMixin.log_in_as_user": {
            "name": "log_in_as_user",
            "location": 26,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "KobotoolboxSeleniumMixin.verify_email": {
            "name": "verify_email",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "username": []
            }
        },
        "KobotoolboxSeleniumMixin.select_form": {
            "name": "select_form",
            "location": 38,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "form_name": []
            }
        },
        "KobotoolboxSeleniumMixin.select_tab_in_form_view": {
            "name": "select_tab_in_form_view",
            "location": 46,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "tab_name": []
            }
        },
        "KobotoolboxSeleniumMixin.select_side_tab_in_form_view": {
            "name": "select_side_tab_in_form_view",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tab_name": []
            }
        }
    },
    "puppet-master-master/puppetmaster/kobotoolbox/form_filling.py": {
        "EnketoFormFillingMixin._fill_date_input": {
            "name": "_fill_date_input",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "virtual_date_input": [],
                "date": [],
                "classname": []
            }
        },
        "EnketoFormFillingMixin.fill_date_input": {
            "name": "fill_date_input",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_el": [],
                "date": []
            }
        },
        "EnketoFormFillingMixin.fill_time_input": {
            "name": "fill_time_input",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "input_el": [],
                "time": []
            }
        },
        "EnketoFormFillingMixin.submit_form": {
            "name": "submit_form",
            "location": 40,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        }
    },
    "puppet-master-master/puppetmaster/kobotoolbox/__init__.py": {}
}
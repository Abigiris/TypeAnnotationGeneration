{
    "pyapp-master/setup.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner1.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner10.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner11.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner2.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner3.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner4.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner5.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner6.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner7.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner8.py": {},
    "pyapp-master/src/atcoder/beginner_tutorial/beginner9.py": {},
    "pyapp-master/src/tasks/api.py": {
        "add": {
            "name": "add",
            "location": 24,
            "return": [
                "int"
            ],
            "arguments": {
                "task": [
                    "Task"
                ]
            }
        },
        "get": {
            "name": "get",
            "location": 46,
            "return": [
                "Task"
            ],
            "arguments": {
                "task_id": [
                    "int"
                ]
            }
        },
        "list_tasks": {
            "name": "list_tasks",
            "location": 56,
            "return": [
                "List[Task]"
            ],
            "arguments": {
                "owner": []
            }
        },
        "count": {
            "name": "count",
            "location": 65,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "update": {
            "name": "update",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "task_id": [
                    "int"
                ],
                "task": [
                    "Task"
                ]
            }
        },
        "delete": {
            "name": "delete",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "task_id": []
            }
        },
        "delete_all": {
            "name": "delete_all",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "unique_id": {
            "name": "unique_id",
            "location": 104,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "start_tasks_db": {
            "name": "start_tasks_db",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "db_path": [
                    "str"
                ],
                "db_type": [
                    "str"
                ]
            }
        },
        "stop_tasks_db": {
            "name": "stop_tasks_db",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyapp-master/src/tasks/cli.py": {
        "tasks_cli": {
            "name": "tasks_cli",
            "location": 13,
            "return": [],
            "arguments": {}
        },
        "add": {
            "name": "add",
            "location": 21,
            "return": [],
            "arguments": {
                "summary": [],
                "owner": []
            }
        },
        "delete": {
            "name": "delete",
            "location": 29,
            "return": [],
            "arguments": {
                "task_id": []
            }
        },
        "list_tasks": {
            "name": "list_tasks",
            "location": 38,
            "return": [],
            "arguments": {
                "owner": []
            }
        },
        "update": {
            "name": "update",
            "location": 64,
            "return": [],
            "arguments": {
                "task_id": [],
                "owner": [],
                "summary": [],
                "done": []
            }
        },
        "count": {
            "name": "count",
            "location": 71,
            "return": [],
            "arguments": {}
        },
        "_tasks_db": {
            "name": "_tasks_db",
            "location": 79,
            "return": [],
            "arguments": {}
        }
    },
    "pyapp-master/src/tasks/config.py": {
        "get_config": {
            "name": "get_config",
            "location": 14,
            "return": [
                "TasksConfig"
            ],
            "arguments": {}
        }
    },
    "pyapp-master/src/tasks/tasksdb_pymongo.py": {
        "start_tasks_db": {
            "name": "start_tasks_db",
            "location": 96,
            "return": [
                "TasksDB_MongoDB"
            ],
            "arguments": {
                "db_path": []
            }
        },
        "TasksDB_MongoDB.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_path": []
            }
        },
        "TasksDB_MongoDB.add": {
            "name": "add",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TasksDB_MongoDB.get": {
            "name": "get",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "TasksDB_MongoDB.list_tasks": {
            "name": "list_tasks",
            "location": 35,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "owner": []
            }
        },
        "TasksDB_MongoDB.count": {
            "name": "count",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_MongoDB.update": {
            "name": "update",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task_id": [],
                "task": []
            }
        },
        "TasksDB_MongoDB.delete": {
            "name": "delete",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "TasksDB_MongoDB.unique_id": {
            "name": "unique_id",
            "location": 53,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_MongoDB.delete_all": {
            "name": "delete_all",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_MongoDB.stop_tasks_db": {
            "name": "stop_tasks_db",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_MongoDB._start_mongod": {
            "name": "_start_mongod",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_path": []
            }
        },
        "TasksDB_MongoDB._stop_mongod": {
            "name": "_stop_mongod",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_MongoDB._connect": {
            "name": "_connect",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_MongoDB._disconnect": {
            "name": "_disconnect",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyapp-master/src/tasks/tasksdb_tinydb.py": {
        "start_tasks_db": {
            "name": "start_tasks_db",
            "location": 66,
            "return": [
                "TasksDB_TinyDB"
            ],
            "arguments": {
                "db_path": []
            }
        },
        "TasksDB_TinyDB.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_path": []
            }
        },
        "TasksDB_TinyDB.add": {
            "name": "add",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TasksDB_TinyDB.get": {
            "name": "get",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "TasksDB_TinyDB.list_tasks": {
            "name": "list_tasks",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "owner": []
            }
        },
        "TasksDB_TinyDB.count": {
            "name": "count",
            "location": 38,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_TinyDB.update": {
            "name": "update",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task_id": [],
                "task": []
            }
        },
        "TasksDB_TinyDB.delete": {
            "name": "delete",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task_id": []
            }
        },
        "TasksDB_TinyDB.delete_all": {
            "name": "delete_all",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_TinyDB.unique_id": {
            "name": "unique_id",
            "location": 54,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksDB_TinyDB.stop_tasks_db": {
            "name": "stop_tasks_db",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyapp-master/src/tasks/__init__.py": {},
    "pyapp-master/tests/conftest.py": {
        "tasks_db": {
            "name": "tasks_db",
            "location": 7,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "tasks_just_a_few": {
            "name": "tasks_just_a_few",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "tasks_mult_per_owner": {
            "name": "tasks_mult_per_owner",
            "location": 28,
            "return": [],
            "arguments": {}
        },
        "db_with_3_tasks": {
            "name": "db_with_3_tasks",
            "location": 42,
            "return": [],
            "arguments": {
                "tasks_db": [],
                "tasks_just_a_few": []
            }
        },
        "db_with_multi_per_owner": {
            "name": "db_with_multi_per_owner",
            "location": 47,
            "return": [],
            "arguments": {
                "tasks_db": [],
                "tasks_mult_per_owner": []
            }
        }
    },
    "pyapp-master/tests/test_fixtures.py": {
        "a_tuple": {
            "name": "a_tuple",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_a_tuple": {
            "name": "test_a_tuple",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "a_tuple": []
            }
        }
    },
    "pyapp-master/tests/test_scope.py": {
        "func_scope": {
            "name": "func_scope",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "mod_scope": {
            "name": "mod_scope",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "sess_scope": {
            "name": "sess_scope",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "class_scope": {
            "name": "class_scope",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_1": {
            "name": "test_1",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "sess_scope": [],
                "mod_scope": [],
                "func_scope": []
            }
        },
        "test_2": {
            "name": "test_2",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "sess_scope": [],
                "mod_scope": [],
                "func_scope": []
            }
        },
        "TestSomething.test_3": {
            "name": "test_3",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestSomething.test_4": {
            "name": "test_4",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pyapp-master/tests/func/test_add.py": {
        "test_add_increases_count": {
            "name": "test_add_increases_count",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "db_with_3_tasks": []
            }
        }
    },
    "pyapp-master/tests/func/test_add_variety.py": {
        "test_add_1": {
            "name": "test_add_1",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_2": {
            "name": "test_add_2",
            "location": 30,
            "return": [],
            "arguments": {
                "task": []
            }
        },
        "test_add_4": {
            "name": "test_add_4",
            "location": 38,
            "return": [],
            "arguments": {
                "task": []
            }
        },
        "test_add_5": {
            "name": "test_add_5",
            "location": 45,
            "return": [],
            "arguments": {
                "task": []
            }
        },
        "equivalent": {
            "name": "equivalent",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "t1": [
                    "tasks.api.Task"
                ],
                "t2": [
                    "tasks.api.Task"
                ]
            }
        },
        "initialized_task_db": {
            "name": "initialized_task_db",
            "location": 59,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "TestAdd.test_equivalent": {
            "name": "test_equivalent",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "TestAdd.test_valid_id": {
            "name": "test_valid_id",
            "location": 74,
            "return": [],
            "arguments": {
                "self": [],
                "task": []
            }
        }
    },
    "pyapp-master/tests/func/test_api_exceptions.py": {
        "TestUpdate.test_bad_id": {
            "name": "test_bad_id",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestUpdate.test_bad_task": {
            "name": "test_bad_task",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyapp-master/tests/func/__init__.py": {},
    "pyapp-master/tests/unit/test_one.py": {
        "initialized_tasks_db": {
            "name": "initialized_tasks_db",
            "location": 7,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "test_defaults": {
            "name": "test_defaults",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_member_across": {
            "name": "test_member_across",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_asdict": {
            "name": "test_asdict",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_replace": {
            "name": "test_replace",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_default_param": {
            "name": "test_default_param",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_raises": {
            "name": "test_raises",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_returns_valid_id": {
            "name": "test_add_returns_valid_id",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyapp-master/tests/unit/__init__.py": {}
}
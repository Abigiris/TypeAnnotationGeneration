{
    "pybuses-master/setup.py": {},
    "pybuses-master/examples/command_bus_basic.py": {
        "sandwich_maker": {
            "name": "sandwich_maker",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "command": []
            }
        },
        "MakeSandwich.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ingredients": []
            }
        }
    },
    "pybuses-master/examples/command_bus_middlewares.py": {
        "sandwich_maker": {
            "name": "sandwich_maker",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "command": []
            }
        },
        "example_middleware": {
            "name": "example_middleware",
            "location": 21,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "MakeSandwich.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ingredients": []
            }
        }
    },
    "pybuses-master/examples/command_bus_with_attrs.py": {
        "example_handler": {
            "name": "example_handler",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "command": []
            }
        }
    },
    "pybuses-master/examples/command_bus_with_dataclasses.py": {
        "handler": {
            "name": "handler",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "command": []
            }
        }
    },
    "pybuses-master/examples/event_bus_basic.py": {
        "handler": {
            "name": "handler",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "payment_made": []
            }
        },
        "PaymentMade.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": [],
                "who": []
            }
        }
    },
    "pybuses-master/pybuses/command_bus.py": {
        "CommandBus.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "middlewares": []
            }
        },
        "CommandBus.subscribe": {
            "name": "subscribe",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listener": []
            }
        },
        "CommandBus.handle": {
            "name": "handle",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": []
            }
        }
    },
    "pybuses-master/pybuses/event_bus.py": {
        "EventBus.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventBus.subscribe": {
            "name": "subscribe",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "listener": []
            }
        },
        "EventBus.post": {
            "name": "post",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "pybuses-master/pybuses/foundation.py": {
        "get_subscribed": {
            "name": "get_subscribed",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "listener": []
            }
        }
    },
    "pybuses-master/pybuses/types.py": {},
    "pybuses-master/pybuses/__init__.py": {},
    "pybuses-master/tests/conftest.py": {
        "exemplary_command": {
            "name": "exemplary_command",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "exemplary_command.Example.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "exemplary_command.Example.__repr__": {
            "name": "__repr__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pybuses-master/tests/test_command_bus.py": {
        "command_bus": {
            "name": "command_bus",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_should_execute_command": {
            "name": "test_should_execute_command",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "command_bus": [],
                "exemplary_command": []
            }
        },
        "test_should_raise_exception_if_handler_has_not_been_registered": {
            "name": "test_should_raise_exception_if_handler_has_not_been_registered",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "command_bus": [],
                "exemplary_command": []
            }
        },
        "test_should_not_allow_for_multiple_handlers": {
            "name": "test_should_not_allow_for_multiple_handlers",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "command_bus": [],
                "exemplary_command": []
            }
        },
        "create_middleware_and_mock": {
            "name": "create_middleware_and_mock",
            "location": 50,
            "return": [
                "Tuple[(Callable[(..., contextlib._GeneratorContextManager)], mock.Mock)]"
            ],
            "arguments": {}
        },
        "test_should_call_middleware": {
            "name": "test_should_call_middleware",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "exemplary_command": []
            }
        },
        "test_should_call_whole_chain": {
            "name": "test_should_call_whole_chain",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "exemplary_command": []
            }
        },
        "test_should_execute_command.handler": {
            "name": "handler",
            "location": 18,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "test_should_not_allow_for_multiple_handlers.handler": {
            "name": "handler",
            "location": 41,
            "return": [],
            "arguments": {
                "_command": []
            }
        },
        "create_middleware_and_mock.my_middleware": {
            "name": "my_middleware",
            "location": 54,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "test_should_call_middleware.handler": {
            "name": "handler",
            "location": 66,
            "return": [],
            "arguments": {
                "_command": []
            }
        },
        "test_should_call_whole_chain.handler": {
            "name": "handler",
            "location": 83,
            "return": [],
            "arguments": {
                "_command": []
            }
        }
    },
    "pybuses-master/tests/test_event_bus.py": {
        "event_bus": {
            "name": "event_bus",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "event_class": {
            "name": "event_class",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_should_run_listener": {
            "name": "test_should_run_listener",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "event_bus": [],
                "event_class": []
            }
        },
        "test_should_not_allow_adding_invalid_subscriber": {
            "name": "test_should_not_allow_adding_invalid_subscriber",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "event_bus": [],
                "event_class": []
            }
        },
        "test_should_support_methods": {
            "name": "test_should_support_methods",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "event_bus": [],
                "event_class": []
            }
        },
        "test_should_run_listener.handler": {
            "name": "handler",
            "location": 26,
            "return": [],
            "arguments": {
                "event": []
            }
        },
        "test_should_not_allow_adding_invalid_subscriber.invalid_handler": {
            "name": "invalid_handler",
            "location": 37,
            "return": [],
            "arguments": {
                "_event": [],
                "_another_arg": []
            }
        },
        "test_should_support_methods.SomeClass.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_should_support_methods.SomeClass.some_listener": {
            "name": "some_listener",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "pybuses-master/tests/__init__.py": {}
}
{
    "pycon-2019-master/manage.py": {},
    "pycon-2019-master/config/urls.py": {},
    "pycon-2019-master/config/wsgi.py": {},
    "pycon-2019-master/config/__init__.py": {},
    "pycon-2019-master/config/settings/base.py": {},
    "pycon-2019-master/config/settings/local.py": {},
    "pycon-2019-master/config/settings/production.py": {},
    "pycon-2019-master/config/settings/test.py": {},
    "pycon-2019-master/config/settings/__init__.py": {},
    "pycon-2019-master/docs/conf.py": {},
    "pycon-2019-master/docs/__init__.py": {},
    "pycon-2019-master/pycon/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 9,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "user": {
            "name": "user",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "request_factory": {
            "name": "request_factory",
            "location": 19,
            "return": [],
            "arguments": {}
        }
    },
    "pycon-2019-master/pycon/__init__.py": {},
    "pycon-2019-master/pycon/apiv1/admin.py": {},
    "pycon-2019-master/pycon/apiv1/apps.py": {},
    "pycon-2019-master/pycon/apiv1/models.py": {},
    "pycon-2019-master/pycon/apiv1/serializers.py": {
        "SpeakerSerializer.get_image": {
            "name": "get_image",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "SponsorSerializer.get_image": {
            "name": "get_image",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "pycon-2019-master/pycon/apiv1/tests.py": {},
    "pycon-2019-master/pycon/apiv1/urls.py": {},
    "pycon-2019-master/pycon/apiv1/views.py": {
        "KeynoteListAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "NormalSpeakerListAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SponsorListAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SponsorTypeListAPIView.get_queryset": {
            "name": "get_queryset",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/apiv1/__init__.py": {},
    "pycon-2019-master/pycon/apiv1/migrations/__init__.py": {},
    "pycon-2019-master/pycon/contrib/__init__.py": {},
    "pycon-2019-master/pycon/contrib/sites/__init__.py": {},
    "pycon-2019-master/pycon/contrib/sites/migrations/0001_initial.py": {},
    "pycon-2019-master/pycon/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "pycon-2019-master/pycon/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "pycon-2019-master/pycon/contrib/sites/migrations/__init__.py": {},
    "pycon-2019-master/pycon/core/admin.py": {},
    "pycon-2019-master/pycon/core/apps.py": {},
    "pycon-2019-master/pycon/core/models.py": {},
    "pycon-2019-master/pycon/core/tests.py": {},
    "pycon-2019-master/pycon/core/views.py": {
        "HomePageView.get_context_data": {
            "name": "get_context_data",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/core/__init__.py": {},
    "pycon-2019-master/pycon/core/migrations/__init__.py": {},
    "pycon-2019-master/pycon/core/templatetags/core_tags.py": {
        "blend_class": {
            "name": "blend_class",
            "location": 9,
            "return": [],
            "arguments": {
                "seed": []
            }
        }
    },
    "pycon-2019-master/pycon/core/templatetags/__init__.py": {},
    "pycon-2019-master/pycon/proposals/admin.py": {},
    "pycon-2019-master/pycon/proposals/apps.py": {},
    "pycon-2019-master/pycon/proposals/models.py": {
        "Proposal.__str__": {
            "name": "__str__",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/proposals/tests.py": {},
    "pycon-2019-master/pycon/proposals/urls.py": {},
    "pycon-2019-master/pycon/proposals/views.py": {
        "ProposalCreateView.form_valid": {
            "name": "form_valid",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "form": []
            }
        }
    },
    "pycon-2019-master/pycon/proposals/__init__.py": {},
    "pycon-2019-master/pycon/proposals/migrations/0001_initial.py": {},
    "pycon-2019-master/pycon/proposals/migrations/__init__.py": {},
    "pycon-2019-master/pycon/schedule/admin.py": {},
    "pycon-2019-master/pycon/schedule/apps.py": {},
    "pycon-2019-master/pycon/schedule/models.py": {
        "ProgramSchedule.__str__": {
            "name": "__str__",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.__str__": {
            "name": "__str__",
            "location": 69,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Event.time_display": {
            "name": "time_display",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/schedule/tests.py": {},
    "pycon-2019-master/pycon/schedule/views.py": {},
    "pycon-2019-master/pycon/schedule/__init__.py": {},
    "pycon-2019-master/pycon/schedule/migrations/0001_initial.py": {},
    "pycon-2019-master/pycon/schedule/migrations/__init__.py": {},
    "pycon-2019-master/pycon/speakers/admin.py": {},
    "pycon-2019-master/pycon/speakers/apps.py": {},
    "pycon-2019-master/pycon/speakers/models.py": {
        "Speaker.__str__": {
            "name": "__str__",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/speakers/tests.py": {},
    "pycon-2019-master/pycon/speakers/views.py": {},
    "pycon-2019-master/pycon/speakers/__init__.py": {},
    "pycon-2019-master/pycon/speakers/migrations/0001_initial.py": {},
    "pycon-2019-master/pycon/speakers/migrations/0002_auto_20190118_2133.py": {},
    "pycon-2019-master/pycon/speakers/migrations/__init__.py": {},
    "pycon-2019-master/pycon/sponsors/admin.py": {},
    "pycon-2019-master/pycon/sponsors/apps.py": {},
    "pycon-2019-master/pycon/sponsors/models.py": {
        "SponsorType.__str__": {
            "name": "__str__",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Sponsor.__str__": {
            "name": "__str__",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/sponsors/tests.py": {},
    "pycon-2019-master/pycon/sponsors/views.py": {},
    "pycon-2019-master/pycon/sponsors/__init__.py": {},
    "pycon-2019-master/pycon/sponsors/migrations/0001_initial.py": {},
    "pycon-2019-master/pycon/sponsors/migrations/0002_sorting.py": {},
    "pycon-2019-master/pycon/sponsors/migrations/0003_set_blankable_fields.py": {},
    "pycon-2019-master/pycon/sponsors/migrations/__init__.py": {},
    "pycon-2019-master/pycon/users/adapters.py": {
        "AccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "SocialAccountAdapter.is_open_for_signup": {
            "name": "is_open_for_signup",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "sociallogin": []
            }
        }
    },
    "pycon-2019-master/pycon/users/admin.py": {},
    "pycon-2019-master/pycon/users/apps.py": {
        "UsersAppConfig.ready": {
            "name": "ready",
            "location": 9,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/users/forms.py": {
        "UserCreationForm.clean_username": {
            "name": "clean_username",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/users/models.py": {
        "User.get_absolute_url": {
            "name": "get_absolute_url",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/users/urls.py": {},
    "pycon-2019-master/pycon/users/views.py": {
        "UserUpdateView.get_success_url": {
            "name": "get_success_url",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserUpdateView.get_object": {
            "name": "get_object",
            "location": 37,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserRedirectView.get_redirect_url": {
            "name": "get_redirect_url",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/users/__init__.py": {},
    "pycon-2019-master/pycon/users/migrations/0001_initial.py": {},
    "pycon-2019-master/pycon/users/migrations/__init__.py": {},
    "pycon-2019-master/pycon/users/tests/factories.py": {
        "UserFactory.password": {
            "name": "password",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "create": [],
                "extracted": []
            }
        }
    },
    "pycon-2019-master/pycon/users/tests/test_forms.py": {
        "TestUserCreationForm.test_clean_username": {
            "name": "test_clean_username",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pycon-2019-master/pycon/users/tests/test_models.py": {
        "test_user_get_absolute_url": {
            "name": "test_user_get_absolute_url",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        }
    },
    "pycon-2019-master/pycon/users/tests/test_urls.py": {
        "test_detail": {
            "name": "test_detail",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "user": []
            }
        },
        "test_list": {
            "name": "test_list",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_update": {
            "name": "test_update",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_redirect": {
            "name": "test_redirect",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pycon-2019-master/pycon/users/tests/test_views.py": {
        "TestUserUpdateView.test_get_success_url": {
            "name": "test_get_success_url",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserUpdateView.test_get_object": {
            "name": "test_get_object",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        },
        "TestUserRedirectView.test_get_redirect_url": {
            "name": "test_get_redirect_url",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "request_factory": []
            }
        }
    },
    "pycon-2019-master/pycon/users/tests/__init__.py": {}
}
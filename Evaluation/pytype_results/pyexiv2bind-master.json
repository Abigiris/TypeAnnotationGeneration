{
    "pyexiv2bind-master/conanfile.py": {
        "pyexiv2bind.requirements": {
            "name": "requirements",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "pyexiv2bind.imports": {
            "name": "imports",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyexiv2bind-master/setup.py": {
        "AbsCMakePlatform.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "clib_builder": []
            }
        },
        "AbsCMakePlatform.platform_specific_configs": {
            "name": "platform_specific_configs",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "WinCMakelib.platform_specific_configs": {
            "name": "platform_specific_configs",
            "location": 64,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnixCMakePlatform.platform_specific_configs": {
            "name": "platform_specific_configs",
            "location": 69,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OSXCMakelib.platform_specific_configs": {
            "name": "platform_specific_configs",
            "location": 74,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OSXCMakelib.get_cmake_osx_sysroot": {
            "name": "get_cmake_osx_sysroot",
            "location": 83,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        },
        "LinuxCMakePlatform.platform_specific_configs": {
            "name": "platform_specific_configs",
            "location": 91,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildCMakeLib.package_dir": {
            "name": "package_dir",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BuildCMakeLib.initialize_options": {
            "name": "initialize_options",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildCMakeLib.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "BuildCMakeLib.finalize_options": {
            "name": "finalize_options",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildCMakeLib.run": {
            "name": "run",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildCMakeLib.build_extension": {
            "name": "build_extension",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "BuildCMakeLib.configure_cmake": {
            "name": "configure_cmake",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extension": []
            }
        },
        "BuildCMakeLib.find_target": {
            "name": "find_target",
            "location": 206,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "target_name": [],
                "build_type": []
            }
        },
        "BuildCMakeLib.build_cmake": {
            "name": "build_cmake",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extension": []
            }
        },
        "BuildCMakeLib.build_install_cmake": {
            "name": "build_install_cmake",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "extension": []
            }
        },
        "BuildExiv2.__init__": {
            "name": "__init__",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "BuildExiv2.run": {
            "name": "run",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyexiv2bind-master/builders/conan_libs.py": {
        "update_extension4": {
            "name": "update_extension4",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "extension": [],
                "text_md": []
            }
        },
        "update_extension3": {
            "name": "update_extension3",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "extension": [],
                "text_md": []
            }
        },
        "ConanBuildInfoParser.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fp": []
            }
        },
        "ConanBuildInfoParser.parse": {
            "name": "parse",
            "location": 18,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConanBuildInfoParser.iter_subject_chunk": {
            "name": "iter_subject_chunk",
            "location": 26,
            "return": [
                "Generator[(list, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsConanBuildInfo.parse": {
            "name": "parse",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "ConanBuildInfoTXT.parse": {
            "name": "parse",
            "location": 48,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "AbsResultTester.__init__": {
            "name": "__init__",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "compiler": []
            }
        },
        "AbsResultTester.test_shared_libs": {
            "name": "test_shared_libs",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "libs_dir": []
            }
        },
        "AbsResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "MacResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "WindowsResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "LinuxResultTester.test_binary_dependents": {
            "name": "test_binary_dependents",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "file_path": []
            }
        },
        "CompilerInfoAdder.__init__": {
            "name": "__init__",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "build_ext_cmd": []
            }
        },
        "CompilerInfoAdder.add_libs": {
            "name": "add_libs",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "libs": []
            }
        },
        "CompilerInfoAdder.add_lib_dirs": {
            "name": "add_lib_dirs",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lib_dirs": []
            }
        },
        "CompilerInfoAdder.add_include_dirs": {
            "name": "add_include_dirs",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "include_dirs": []
            }
        },
        "BuildConan.initialize_options": {
            "name": "initialize_options",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildConan.__init__": {
            "name": "__init__",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dist": []
            }
        },
        "BuildConan.finalize_options": {
            "name": "finalize_options",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildConan.getConanBuildInfo": {
            "name": "getConanBuildInfo",
            "location": 169,
            "return": [
                "Any"
            ],
            "arguments": {
                "root_dir": []
            }
        },
        "BuildConan._get_deps": {
            "name": "_get_deps",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "build_dir": [],
                "conan_cache": []
            }
        },
        "BuildConan.run": {
            "name": "run",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConanBuildMetadata.__init__": {
            "name": "__init__",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "ConanBuildMetadata.deps": {
            "name": "deps",
            "location": 299,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConanBuildMetadata.dep": {
            "name": "dep",
            "location": 302,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "dep": []
            }
        }
    },
    "pyexiv2bind-master/builders/deps.py": {
        "parse_dumpbin_deps": {
            "name": "parse_dumpbin_deps",
            "location": 8,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "file": []
            }
        },
        "remove_system_dlls": {
            "name": "remove_system_dlls",
            "location": 23,
            "return": [
                "list"
            ],
            "arguments": {
                "dlls": []
            }
        },
        "get_win_deps": {
            "name": "get_win_deps",
            "location": 38,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "dll_name": [],
                "output_file": [],
                "compiler": []
            }
        }
    },
    "pyexiv2bind-master/builders/local_backend.py": {
        "build_sdist": {
            "name": "build_sdist",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {
                "sdist_directory": [],
                "config_settings": []
            }
        },
        "build_wheel": {
            "name": "build_wheel",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "wheel_directory": [],
                "config_settings": [],
                "metadata_directory": []
            }
        },
        "get_requires_for_build_sdist": {
            "name": "get_requires_for_build_sdist",
            "location": 12,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "config_settings": []
            }
        },
        "prepare_metadata_for_build_wheel": {
            "name": "prepare_metadata_for_build_wheel",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "metadata_directory": [],
                "config_settings": []
            }
        },
        "get_requires_for_build_wheel": {
            "name": "get_requires_for_build_wheel",
            "location": 20,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "config_settings": []
            }
        }
    },
    "pyexiv2bind-master/builders/pybind11_builder.py": {
        "get_so_handler": {
            "name": "get_so_handler",
            "location": 355,
            "return": [
                "Union[(AudidWheelsHandlerStrategy, DllHandlerStrategy, MacholibStrategy, NullHandlerStrategy)]"
            ],
            "arguments": {
                "shared_library": [],
                "context": [],
                "system_name": []
            }
        },
        "BuildPybind11Extension.initialize_options": {
            "name": "initialize_options",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.finalize_options": {
            "name": "finalize_options",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.find_deps": {
            "name": "find_deps",
            "location": 30,
            "return": [
                "Optional[Union[(bytes, str)]]"
            ],
            "arguments": {
                "self": [],
                "lib": [],
                "search_paths": []
            }
        },
        "BuildPybind11Extension._get_path_dirs": {
            "name": "_get_path_dirs",
            "location": 45,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.get_library_paths": {
            "name": "get_library_paths",
            "location": 52,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.extra_lib_dirs": {
            "name": "extra_lib_dirs",
            "location": 69,
            "return": [
                "Generator[(str, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.run": {
            "name": "run",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildPybind11Extension.resolve_shared_library": {
            "name": "resolve_shared_library",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dll_name": [],
                "search_paths": []
            }
        },
        "BuildPybind11Extension.find_missing_libraries": {
            "name": "find_missing_libraries",
            "location": 103,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "BuildPybind11Extension.build_extension": {
            "name": "build_extension",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ext": []
            }
        },
        "AbsSoHandler.__init__": {
            "name": "__init__",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "library_file": [],
                "context": []
            }
        },
        "AbsSoHandler.set_compiler": {
            "name": "set_compiler",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "compiler": []
            }
        },
        "AbsSoHandler.is_system_file": {
            "name": "is_system_file",
            "location": 129,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "filename": []
            }
        },
        "AbsSoHandler.get_deps": {
            "name": "get_deps",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbsSoHandler.resolve": {
            "name": "resolve",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search_paths": []
            }
        },
        "NullHandlerStrategy.get_deps": {
            "name": "get_deps",
            "location": 161,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MacholibStrategy.get_system_files": {
            "name": "get_system_files",
            "location": 174,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MacholibStrategy.get_deps": {
            "name": "get_deps",
            "location": 179,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "MacholibStrategy.is_system_file": {
            "name": "is_system_file",
            "location": 190,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "filename": []
            }
        },
        "MacholibStrategy.resolve": {
            "name": "resolve",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search_path": []
            }
        },
        "AudidWheelsHandlerStrategy.get_deps": {
            "name": "get_deps",
            "location": 234,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DllHandlerStrategy.__init__": {
            "name": "__init__",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "library_file": [],
                "context": []
            }
        },
        "DllHandlerStrategy.resolve": {
            "name": "resolve",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "search_paths": []
            }
        },
        "DllHandlerStrategy.find_lib": {
            "name": "find_lib",
            "location": 264,
            "return": [
                "Optional[Union[(bytes, str)]]"
            ],
            "arguments": {
                "self": [],
                "lib": [],
                "search_paths": []
            }
        },
        "DllHandlerStrategy.is_system_file": {
            "name": "is_system_file",
            "location": 277,
            "return": [
                "bool"
            ],
            "arguments": {
                "cls": [],
                "filename": []
            }
        },
        "DllHandlerStrategy.get_deps": {
            "name": "get_deps",
            "location": 306,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DllHandlerStrategy.resolve_shared_library": {
            "name": "resolve_shared_library",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dll_name": [],
                "search_paths": []
            }
        },
        "DllHandlerStrategy.parse_dumpbin_deps": {
            "name": "parse_dumpbin_deps",
            "location": 340,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "cls": [],
                "file": []
            }
        }
    },
    "pyexiv2bind-master/builders/__init__.py": {},
    "pyexiv2bind-master/docs/source/conf.py": {
        "get_project_metadata": {
            "name": "get_project_metadata",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "pyexiv2bind-master/py3exiv2bind/icc.py": {
        "build_ICC_data": {
            "name": "build_ICC_data",
            "location": 29,
            "return": [
                "ICC_data"
            ],
            "arguments": {
                "value": [],
                "lookup_table": [],
                "restrict": []
            }
        },
        "build_ICC_friendly_names": {
            "name": "build_ICC_friendly_names",
            "location": 43,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "icc_data": [
                    "_T0@@"
                ],
                "lookup_table": [],
                "restrict": []
            }
        },
        "build_ICC_empty_data": {
            "name": "build_ICC_empty_data",
            "location": 59,
            "return": [
                "ICC_data"
            ],
            "arguments": {
                "raw_data": []
            }
        },
        "add_decoded_value": {
            "name": "add_decoded_value",
            "location": 74,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "icc_data": [
                    "_T0@@"
                ],
                "data": []
            }
        },
        "unpack_binary": {
            "name": "unpack_binary",
            "location": 148,
            "return": [
                "Any"
            ],
            "arguments": {
                "data": []
            }
        },
        "_parse_header": {
            "name": "_parse_header",
            "location": 153,
            "return": [
                "ICC_Profile_Header"
            ],
            "arguments": {
                "raw_data": []
            }
        },
        "_decode_header": {
            "name": "_decode_header",
            "location": 176,
            "return": [
                "ICC_Profile_Header"
            ],
            "arguments": {
                "parsed": []
            }
        },
        "_map_header_strings": {
            "name": "_map_header_strings",
            "location": 255,
            "return": [
                "ICC_Profile_Header"
            ],
            "arguments": {
                "parsed": []
            }
        },
        "unpack_header": {
            "name": "unpack_header",
            "location": 282,
            "return": [
                "ICC_Profile_Header"
            ],
            "arguments": {
                "raw_data": []
            }
        },
        "ICC_data.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ICC_data.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyexiv2bind-master/py3exiv2bind/image.py": {
        "Image.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Image.metadata": {
            "name": "metadata",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Image.icc": {
            "name": "icc",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyexiv2bind-master/py3exiv2bind/__init__.py": {},
    "pyexiv2bind-master/tests/conftest.py": {
        "download_images": {
            "name": "download_images",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [],
                "destination": [],
                "download_path": []
            }
        },
        "sample_images_readonly": {
            "name": "sample_images_readonly",
            "location": 25,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "sample_images": {
            "name": "sample_images",
            "location": 44,
            "return": [],
            "arguments": {
                "tmpdir_factory": [],
                "sample_images_readonly": []
            }
        }
    },
    "pyexiv2bind-master/tests/test_core.py": {
        "test_exiv_version": {
            "name": "test_exiv_version",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_set_dpi_on_jp2": {
            "name": "test_set_dpi_on_jp2",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_set_dpi_on_tiff": {
            "name": "test_set_dpi_on_tiff",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        }
    },
    "pyexiv2bind-master/tests/test_icc.py": {
        "test_icc_file": {
            "name": "test_icc_file",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_icc_on_jp2_file": {
            "name": "test_icc_on_jp2_file",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        }
    },
    "pyexiv2bind-master/tests/test_image.py": {
        "test_invalid_file": {
            "name": "test_invalid_file",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_image2_filename": {
            "name": "test_image2_filename",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_image2_pixelHeight": {
            "name": "test_image2_pixelHeight",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_image2_pixelWidth": {
            "name": "test_image2_pixelWidth",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_image2_exif": {
            "name": "test_image2_exif",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_image2_iptc": {
            "name": "test_image2_iptc",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        },
        "test_image_get_icc_data": {
            "name": "test_image_get_icc_data",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "sample_images": []
            }
        }
    },
    "pyexiv2bind-master/utilities/upload_docs.py": {
        "locate_documentation_files": {
            "name": "locate_documentation_files",
            "location": 7,
            "return": [
                "Generator[(Tuple[(Any, Any)], Any, None)]"
            ],
            "arguments": {
                "root_path": []
            }
        },
        "get_arg_parser": {
            "name": "get_arg_parser",
            "location": 15,
            "return": [
                "argparse.ArgumentParser"
            ],
            "arguments": {}
        },
        "remove_files_from_directory": {
            "name": "remove_files_from_directory",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "root": []
            }
        },
        "main": {
            "name": "main",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
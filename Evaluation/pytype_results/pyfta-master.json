{
    "pyfta-master/pyfta/containers.py": {
        "ContainerBase.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_type": [],
                "how_many_to_create": [],
                "allowed_types": []
            }
        },
        "ContainerBase.resolve": {
            "name": "resolve",
            "location": 16,
            "return": [
                "pyfta.randgen.RandomList"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyfta-master/pyfta/exceptions.py": {
        "NoTypeAnnotationsFound.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "pyfta-master/pyfta/pyfta.py": {
        "get_types_and_defaults": {
            "name": "get_types_and_defaults",
            "location": 19,
            "return": [
                "Tuple[(Dict[(str, Any)], Any)]"
            ],
            "arguments": {
                "func": [],
                "klass": []
            }
        },
        "get_params": {
            "name": "get_params",
            "location": 64,
            "return": [
                "dict"
            ],
            "arguments": {
                "type_signatures": [],
                "defaults": []
            }
        },
        "resolve_signature": {
            "name": "resolve_signature",
            "location": 82,
            "return": [
                "Any"
            ],
            "arguments": {
                "signature": []
            }
        },
        "PyftaMetaClass.__call__": {
            "name": "__call__",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [
                    "PyftaMetaClass"
                ]
            }
        }
    },
    "pyfta-master/pyfta/randgen.py": {
        "RandomBase.generate": {
            "name": "generate",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomString.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chars": [],
                "prefix": [],
                "suffix": [],
                "length": []
            }
        },
        "RandomString.generate": {
            "name": "generate",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomInt.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lower_limit": [],
                "upper_limit": []
            }
        },
        "RandomInt.generate": {
            "name": "generate",
            "location": 35,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomFloat.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lower_limit": [],
                "upper_limit": []
            }
        },
        "RandomFloat.generate": {
            "name": "generate",
            "location": 47,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomBool.generate": {
            "name": "generate",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "RandomGenerator.__init__": {
            "name": "__init__",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data_type": []
            }
        },
        "RandomGenerator.from_data_type": {
            "name": "from_data_type",
            "location": 65,
            "return": [
                "Union[(float, int, str)]"
            ],
            "arguments": {
                "cls": [],
                "data_type": []
            }
        },
        "RandomList.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "how_many_to_create": [],
                "allowed_types": []
            }
        },
        "RandomList.generate": {
            "name": "generate",
            "location": 80,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyfta-master/pyfta/__init__.py": {},
    "pyfta-master/tests/test_builtin_types.py": {
        "test_get_correct_value_based_on_type": {
            "name": "test_get_correct_value_based_on_type",
            "location": 10,
            "return": [],
            "arguments": {
                "data_type": []
            }
        }
    },
    "pyfta-master/tests/__init__.py": {}
}
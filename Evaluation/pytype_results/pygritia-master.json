{
    "pygritia-master/pavement.py": {
        "env": {
            "name": "env",
            "location": 58,
            "return": [],
            "arguments": {}
        },
        "test": {
            "name": "test",
            "location": 72,
            "return": [],
            "arguments": {}
        },
        "typecheck": {
            "name": "typecheck",
            "location": 85,
            "return": [],
            "arguments": {}
        },
        "lint": {
            "name": "lint",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "shell": {
            "name": "shell",
            "location": 112,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "nvim": {
            "name": "nvim",
            "location": 121,
            "return": [],
            "arguments": {}
        },
        "html": {
            "name": "html",
            "location": 130,
            "return": [],
            "arguments": {}
        },
        "sdist": {
            "name": "sdist",
            "location": 147,
            "return": [],
            "arguments": {}
        },
        "env.pathify": {
            "name": "pathify",
            "location": 62,
            "return": [],
            "arguments": {
                "key": []
            }
        }
    },
    "pygritia-master/paverlib/doctools.py": {
        "_get_paths": {
            "name": "_get_paths",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "apidoc": {
            "name": "apidoc",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "html": {
            "name": "html",
            "location": 68,
            "return": [],
            "arguments": {}
        }
    },
    "pygritia-master/paverlib/__init__.py": {},
    "pygritia-master/pygritia/attr.py": {
        "Attr.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Attr.evaluate": {
            "name": "evaluate",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "Attr.update": {
            "name": "update",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "AttrMixin.__getattribute__": {
            "name": "__getattribute__",
            "location": 44,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "AttrMixin.__setattr__": {
            "name": "__setattr__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "val": []
            }
        }
    },
    "pygritia-master/pygritia/binary.py": {
        "BinaryMixin.__lt__": {
            "name": "__lt__",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BinaryMixin.__le__": {
            "name": "__le__",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BinaryMixin.__eq__": {
            "name": "__eq__",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BinaryMixin.__ne__": {
            "name": "__ne__",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BinaryMixin.__gt__": {
            "name": "__gt__",
            "location": 36,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BinaryMixin.__ge__": {
            "name": "__ge__",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "BinaryMixin.__add__": {
            "name": "__add__",
            "location": 44,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__sub__": {
            "name": "__sub__",
            "location": 48,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__mul__": {
            "name": "__mul__",
            "location": 52,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__matmul__": {
            "name": "__matmul__",
            "location": 56,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__div__": {
            "name": "__div__",
            "location": 60,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__truediv__": {
            "name": "__truediv__",
            "location": 64,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__floordiv__": {
            "name": "__floordiv__",
            "location": 68,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__mod__": {
            "name": "__mod__",
            "location": 72,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__divmod__": {
            "name": "__divmod__",
            "location": 76,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__pow__": {
            "name": "__pow__",
            "location": 80,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__lshift__": {
            "name": "__lshift__",
            "location": 84,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__rshift__": {
            "name": "__rshift__",
            "location": 88,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__and__": {
            "name": "__and__",
            "location": 92,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__xor__": {
            "name": "__xor__",
            "location": 96,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "BinaryMixin.__or__": {
            "name": "__or__",
            "location": 100,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        }
    },
    "pygritia-master/pygritia/call.py": {
        "lazy_call": {
            "name": "lazy_call",
            "location": 59,
            "return": [
                "_T"
            ],
            "arguments": {
                "func": [
                    "_T"
                ]
            }
        },
        "Call.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Call.evaluate": {
            "name": "evaluate",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "CallMixin.__call__": {
            "name": "__call__",
            "location": 53,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ]
            }
        },
        "lazy_call.wrapped": {
            "name": "wrapped",
            "location": 78,
            "return": [],
            "arguments": {}
        }
    },
    "pygritia-master/pygritia/cases.py": {
        "If": {
            "name": "If",
            "location": 72,
            "return": [
                "Optional[_T]"
            ],
            "arguments": {
                "cond": [
                    "bool"
                ],
                "value": [
                    "_T"
                ]
            }
        },
        "IfThenElse": {
            "name": "IfThenElse",
            "location": 76,
            "return": [
                "Union[(_T, _U)]"
            ],
            "arguments": {
                "cond": [
                    "bool"
                ],
                "true": [
                    "_T"
                ],
                "false": [
                    "_U"
                ]
            }
        },
        "Case": {
            "name": "Case",
            "location": 80,
            "return": [
                "_U"
            ],
            "arguments": {
                "cond": [
                    "_T"
                ],
                "cases": [
                    "Mapping[(_T, _U)]"
                ],
                "default": [
                    "_U"
                ]
            }
        },
        "is_none": {
            "name": "is_none",
            "location": 85,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj": []
            }
        },
        "Ensure": {
            "name": "Ensure",
            "location": 89,
            "return": [
                "_T"
            ],
            "arguments": {
                "obj": [
                    "Optional[_T]"
                ],
                "default": [
                    "_T"
                ]
            }
        },
        "CasesAction.__str__": {
            "name": "__str__",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CasesAction.evaluate": {
            "name": "evaluate",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "CasesAction.update": {
            "name": "update",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        }
    },
    "pygritia-master/pygritia/cast.py": {
        "lazy_cast": {
            "name": "lazy_cast",
            "location": 42,
            "return": [
                "_U"
            ],
            "arguments": {
                "target_type": [
                    "Callable[([_T], _U)]"
                ],
                "expr": [
                    "_T"
                ],
                "expr_type": [
                    "Optional[Callable[([_U], _T)]]"
                ]
            }
        },
        "CastAction.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CastAction.evaluate": {
            "name": "evaluate",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "CastAction.update": {
            "name": "update",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "val": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        }
    },
    "pygritia-master/pygritia/core.py": {
        "evaluate": {
            "name": "evaluate",
            "location": 113,
            "return": [
                "_T"
            ],
            "arguments": {
                "expr": [
                    "_T"
                ],
                "namespace": [
                    "Mapping[(Union[(LazyMixin, str)], Any)]"
                ]
            }
        },
        "update": {
            "name": "update",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "expr": [
                    "_T"
                ],
                "val": [
                    "_T"
                ],
                "namespace": [
                    "Mapping[(Union[(LazyMixin, str)], Any)]"
                ]
            }
        },
        "repr_": {
            "name": "repr_",
            "location": 154,
            "return": [
                "str"
            ],
            "arguments": {
                "expr": []
            }
        },
        "LazyAction.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LazyAction.evaluate": {
            "name": "evaluate",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(LazyMixin, str)], Any)]"
                ]
            }
        },
        "LazyAction.update": {
            "name": "update",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [],
                "namespace": [
                    "Mapping[(Union[(LazyMixin, str)], Any)]"
                ]
            }
        },
        "LazyMeta.register_factory": {
            "name": "register_factory",
            "location": 50,
            "return": [
                "Type[LazyMixin]"
            ],
            "arguments": {
                "cls": [],
                "lazy_factory": [
                    "Type[LazyMixin]"
                ]
            }
        },
        "LazyMeta.create": {
            "name": "create",
            "location": 63,
            "return": [
                "LazyMixin"
            ],
            "arguments": {
                "cls": [],
                "action": [
                    "LazyAction"
                ],
                "origin": [
                    "Optional[LazyMixin]"
                ]
            }
        },
        "LazyMixin.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "LazyMixin.__init__": {
            "name": "__init__",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "LazyAction"
                ],
                "origin": [
                    "Optional[LazyMixin]"
                ]
            }
        },
        "LazyMixin.__str__": {
            "name": "__str__",
            "location": 101,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LazyMixin.__repr__": {
            "name": "__repr__",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LazyMixin.__init_subclass__.__hash__": {
            "name": "__hash__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pygritia-master/pygritia/item.py": {
        "Item.__str__": {
            "name": "__str__",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Item.evaluate": {
            "name": "evaluate",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "Item.update": {
            "name": "update",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "val": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "ItemMixin.__getitem__": {
            "name": "__getitem__",
            "location": 45,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "idx": []
            }
        }
    },
    "pygritia-master/pygritia/lazy.py": {
        "symbol": {
            "name": "symbol",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "pygritia-master/pygritia/ops.py": {
        "lazy_operator": {
            "name": "lazy_operator",
            "location": 45,
            "return": [
                "_T"
            ],
            "arguments": {
                "method": [
                    "_T"
                ]
            }
        },
        "lazy_roperator": {
            "name": "lazy_roperator",
            "location": 59,
            "return": [
                "_T"
            ],
            "arguments": {
                "method": [
                    "_T"
                ]
            }
        },
        "Operator.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Operator.evaluate": {
            "name": "evaluate",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        },
        "lazy_operator.wrapped": {
            "name": "wrapped",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "lazy_roperator.wrapped": {
            "name": "wrapped",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "pygritia-master/pygritia/prop.py": {
        "LazyProp.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "pygritia.core.LazyAction"
                ],
                "origin": [
                    "Optional[pygritia.core.LazyMixin]"
                ]
            }
        },
        "LazyProp.__get__": {
            "name": "__get__",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "inst": [],
                "owner": [
                    "type"
                ]
            }
        },
        "LazyProp.__set__": {
            "name": "__set__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inst": [],
                "value": []
            }
        }
    },
    "pygritia-master/pygritia/rbinary.py": {
        "ReversedBinaryMixin.__radd__": {
            "name": "__radd__",
            "location": 20,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rsub__": {
            "name": "__rsub__",
            "location": 24,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rmul__": {
            "name": "__rmul__",
            "location": 28,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rmatmul__": {
            "name": "__rmatmul__",
            "location": 32,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rdiv__": {
            "name": "__rdiv__",
            "location": 36,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rtruediv__": {
            "name": "__rtruediv__",
            "location": 40,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rfloordiv__": {
            "name": "__rfloordiv__",
            "location": 44,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rmod__": {
            "name": "__rmod__",
            "location": 48,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rdivmod__": {
            "name": "__rdivmod__",
            "location": 52,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rpow__": {
            "name": "__rpow__",
            "location": 56,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rlshift__": {
            "name": "__rlshift__",
            "location": 60,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rrshift__": {
            "name": "__rrshift__",
            "location": 64,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rand__": {
            "name": "__rand__",
            "location": 68,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__rxor__": {
            "name": "__rxor__",
            "location": 72,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        },
        "ReversedBinaryMixin.__ror__": {
            "name": "__ror__",
            "location": 76,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ],
                "other": []
            }
        }
    },
    "pygritia-master/pygritia/symbols.py": {
        "Symbol.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Symbol.__hash__": {
            "name": "__hash__",
            "location": 23,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Symbol.evaluate": {
            "name": "evaluate",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "namespace": [
                    "Mapping[(Union[(str, pygritia.core.LazyMixin)], Any)]"
                ]
            }
        }
    },
    "pygritia-master/pygritia/unary.py": {
        "UnaryMixin.__neg__": {
            "name": "__neg__",
            "location": 14,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ]
            }
        },
        "UnaryMixin.__pos__": {
            "name": "__pos__",
            "location": 18,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ]
            }
        },
        "UnaryMixin.__abs__": {
            "name": "__abs__",
            "location": 22,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ]
            }
        },
        "UnaryMixin.__invert__": {
            "name": "__invert__",
            "location": 26,
            "return": [
                "Lazy"
            ],
            "arguments": {
                "self": [
                    "Lazy"
                ]
            }
        }
    },
    "pygritia-master/pygritia/util.py": {},
    "pygritia-master/pygritia/__init__.py": {},
    "pygritia-master/sphinx/source/conf.py": {},
    "pygritia-master/tests/test_basic.py": {
        "test_dummy_eval_update": {
            "name": "test_dummy_eval_update",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_symbol": {
            "name": "test_symbol",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_operator": {
            "name": "test_operator",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_attr": {
            "name": "test_attr",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_inner_attr": {
            "name": "test_inner_attr",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_item": {
            "name": "test_item",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_call": {
            "name": "test_call",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lazy_call": {
            "name": "test_lazy_call",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lazy_callable": {
            "name": "test_lazy_callable",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_this": {
            "name": "test_this",
            "location": 126,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_lazy_call.my_func": {
            "name": "my_func",
            "location": 102,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "test_lazy_callable.MyCallable.__call__": {
            "name": "__call__",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "pygritia-master/tests/test_cases.py": {
        "test_if": {
            "name": "test_if",
            "location": 6,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_if_then_else": {
            "name": "test_if_then_else",
            "location": 20,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_case": {
            "name": "test_case",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ensure": {
            "name": "test_ensure",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pygritia-master/tests/test_cast.py": {
        "test_casting": {
            "name": "test_casting",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_implicit_casting": {
            "name": "test_implicit_casting",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pygritia-master/tests/test_internal.py": {
        "test_lazy_action": {
            "name": "test_lazy_action",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lazy_operator": {
            "name": "test_lazy_operator",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lazy_factory": {
            "name": "test_lazy_factory",
            "location": 32,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_lazy_action.DumbAction.__str__": {
            "name": "__str__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    }
}
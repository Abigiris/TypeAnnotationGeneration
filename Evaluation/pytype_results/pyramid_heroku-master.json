{
    "pyramid_heroku-master/pyramid_heroku/client_addr.py": {
        "includeme": {
            "name": "includeme",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "ClientAddr.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [],
                "registry": []
            }
        },
        "ClientAddr.__call__": {
            "name": "__call__",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "ClientAddr.remove_ignored_ips": {
            "name": "remove_ignored_ips",
            "location": 64,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "ips": []
            }
        },
        "ClientAddr.get_ip_networks_from_url": {
            "name": "get_ip_networks_from_url",
            "location": 79,
            "return": [
                "List[Union[(ipaddress.IPv4Network, ipaddress.IPv6Network)]]"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "ClientAddr.get_cloudflare_ip_networks": {
            "name": "get_cloudflare_ip_networks",
            "location": 92,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/heroku.py": {
        "Heroku.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "app_name": [
                    "str"
                ],
                "ini_file": [
                    "str"
                ]
            }
        },
        "Heroku.auth_key": {
            "name": "auth_key",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heroku.scale_down": {
            "name": "scale_down",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Heroku.scale_up": {
            "name": "scale_up",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Heroku.formation": {
            "name": "formation",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heroku.get_maintenance": {
            "name": "get_maintenance",
            "location": 77,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Heroku.set_maintenance": {
            "name": "set_maintenance",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": [
                    "bool"
                ]
            }
        },
        "Heroku.parse_response": {
            "name": "parse_response",
            "location": 89,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "self": [],
                "res": [
                    "requests.models.Response"
                ]
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/herokuapp_access.py": {
        "includeme": {
            "name": "includeme",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "HerokuappAccess.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [],
                "registry": []
            }
        },
        "HerokuappAccess.__call__": {
            "name": "__call__",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/host.py": {
        "includeme": {
            "name": "includeme",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        },
        "Host.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "handler": [],
                "registry": []
            }
        },
        "Host.__call__": {
            "name": "__call__",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/maintenance.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyramid_heroku-master/pyramid_heroku/migrate.py": {
        "needs_migrate": {
            "name": "needs_migrate",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "heroku": [
                    "pyramid_heroku.heroku.Heroku"
                ]
            }
        },
        "alembic": {
            "name": "alembic",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "heroku": [
                    "pyramid_heroku.heroku.Heroku"
                ]
            }
        },
        "migrate": {
            "name": "migrate",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "heroku": [
                    "pyramid_heroku.heroku.Heroku"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyramid_heroku-master/pyramid_heroku/__init__.py": {
        "shell": {
            "name": "shell",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "cmd": [
                    "str"
                ]
            }
        },
        "safe_eval": {
            "name": "safe_eval",
            "location": 27,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        },
        "expandvars_dict": {
            "name": "expandvars_dict",
            "location": 47,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "settings": [
                    "Dict[(str, str)]"
                ]
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/test_client_addr.py": {
        "TestClientAddrTween.wrap_logger": {
            "name": "wrap_logger",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "_": [],
                "__": [],
                "event_dict": []
            }
        },
        "TestClientAddrTween.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.tearDown": {
            "name": "tearDown",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_direct_access": {
            "name": "test_direct_access",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_proxy_access": {
            "name": "test_proxy_access",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_spaces": {
            "name": "test_spaces",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_cloudflare_ip_ignored": {
            "name": "test_cloudflare_ip_ignored",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_cloudflare_ipv6_ignored": {
            "name": "test_cloudflare_ipv6_ignored",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_invalid_ips": {
            "name": "test_invalid_ips",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_cloudflare_ipv4_6_ignored": {
            "name": "test_cloudflare_ipv4_6_ignored",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestClientAddrTween.test_cloudflare_ip_list_get_error": {
            "name": "test_cloudflare_ip_list_get_error",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/test_heroku.py": {
        "TestHeroku.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHeroku.test_default_formation": {
            "name": "test_default_formation",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "out": []
            }
        },
        "TestHeroku.test_scale_down": {
            "name": "test_scale_down",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "out": []
            }
        },
        "TestHeroku.test_scale_up": {
            "name": "test_scale_up",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "out": []
            }
        },
        "TestHeroku.test_get_maintenance": {
            "name": "test_get_maintenance",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestHeroku.test_maintenance_on": {
            "name": "test_maintenance_on",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "out": []
            }
        },
        "TestHeroku.test_maintenance_off": {
            "name": "test_maintenance_off",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "out": []
            }
        },
        "TestHeroku.test_set_maintanence_fail": {
            "name": "test_set_maintanence_fail",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "pr": [],
                "out": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/test_herokuapp_access.py": {
        "TestHerokuappAccessTween.wrap_logger": {
            "name": "wrap_logger",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "_": [],
                "__": [],
                "event_dict": []
            }
        },
        "TestHerokuappAccessTween.setUp": {
            "name": "setUp",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuappAccessTween.tearDown": {
            "name": "tearDown",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuappAccessTween.test_whitelisted_ip": {
            "name": "test_whitelisted_ip",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuappAccessTween.test_non_whitelisted_ip": {
            "name": "test_non_whitelisted_ip",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuappAccessTween.test_other_hostname": {
            "name": "test_other_hostname",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuappAccessTween.test_herokuapp_whitelist_not_set": {
            "name": "test_herokuapp_whitelist_not_set",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuappAccessTween.test_herokuapp_whitelist_empty": {
            "name": "test_herokuapp_whitelist_empty",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/test_host.py": {
        "TestHostTween.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHostTween.tearDown": {
            "name": "tearDown",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHostTween.test_direct_access": {
            "name": "test_direct_access",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHostTween.test_proxy_access": {
            "name": "test_proxy_access",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/test_maintenance.py": {
        "TestHerokuMaintenance.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuMaintenance.test_default_values": {
            "name": "test_default_values",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuMaintenance.test_migrate_on": {
            "name": "test_migrate_on",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "sess": [],
                "Heroku": []
            }
        },
        "TestHerokuMaintenance.test_migrate_off": {
            "name": "test_migrate_off",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "sess": [],
                "Heroku": []
            }
        },
        "TestHerokuMaintenance.test_maintenance_non_zero": {
            "name": "test_maintenance_non_zero",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "ses": [],
                "out": [],
                "sub": []
            }
        },
        "TestHerokuMaintenance.test_default_values.assert_args": {
            "name": "assert_args",
            "location": 21,
            "return": [],
            "arguments": {
                "args": [],
                "called_with": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/test_migrate.py": {
        "TestHerokuMigrate.setUp": {
            "name": "setUp",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuMigrate.test_default_values": {
            "name": "test_default_values",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestHerokuMigrate.test_needs_migrate": {
            "name": "test_needs_migrate",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "sub": []
            }
        },
        "TestHerokuMigrate.test_does_not_need_migrate": {
            "name": "test_does_not_need_migrate",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "sub": []
            }
        },
        "TestHerokuMigrate.test_alembic": {
            "name": "test_alembic",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "sub": []
            }
        },
        "TestHerokuMigrate.test_migrate_skip": {
            "name": "test_migrate_skip",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "sleep": [],
                "out": [],
                "sub": []
            }
        },
        "TestHerokuMigrate.test_migrate_with_maintenance_mode": {
            "name": "test_migrate_with_maintenance_mode",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "ses": [],
                "sleep": [],
                "out": [],
                "sub": []
            }
        },
        "TestHerokuMigrate.test_migrate_skip_setting_maintenance_mode": {
            "name": "test_migrate_skip_setting_maintenance_mode",
            "location": 157,
            "return": [],
            "arguments": {
                "self": [],
                "ses": [],
                "sleep": [],
                "out": [],
                "sub": []
            }
        },
        "TestHerokuMigrate.test_migrate_non_zero": {
            "name": "test_migrate_non_zero",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "ses": [],
                "sleep": [],
                "out": [],
                "sub": []
            }
        },
        "TestHerokuMigrate.test_default_values.assert_args": {
            "name": "assert_args",
            "location": 23,
            "return": [],
            "arguments": {
                "args": [],
                "called_with": []
            }
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/test_utils.py": {
        "test_safe_eval": {
            "name": "test_safe_eval",
            "location": 6,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_expandvars_dict": {
            "name": "test_expandvars_dict",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyramid_heroku-master/pyramid_heroku/tests/__init__.py": {}
}
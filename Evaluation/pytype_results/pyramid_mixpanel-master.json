{
    "pyramid_mixpanel-master/setup.py": {
        "VerifyVersionCommand.run": {
            "name": "run",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/consumer.py": {
        "MockedConsumer.send": {
            "name": "send",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str"
                ],
                "json_message": [
                    "str"
                ]
            }
        },
        "MockedConsumer.flush": {
            "name": "flush",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PoliteBufferedConsumer.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "use_structlog": [
                    "bool"
                ]
            }
        },
        "PoliteBufferedConsumer.flush": {
            "name": "flush",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueuedConsumer.send": {
            "name": "send",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint": [
                    "str"
                ],
                "json_message": [
                    "str"
                ]
            }
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/query.py": {
        "MixpanelQuery.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "settings": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "MixpanelQuery.jql": {
            "name": "jql",
            "location": 19,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "jql": [
                    "str"
                ]
            }
        },
        "MixpanelQuery.profile_by_email": {
            "name": "profile_by_email",
            "location": 36,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "str"
                ]
            }
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/track.py": {
        "distinct_id_is_required": {
            "name": "distinct_id_is_required",
            "location": 27,
            "return": [
                "Callable"
            ],
            "arguments": {
                "function": [
                    "Callable"
                ]
            }
        },
        "mixpanel_init": {
            "name": "mixpanel_init",
            "location": 414,
            "return": [
                "MixpanelTrack"
            ],
            "arguments": {
                "request": []
            }
        },
        "mixpanel_flush": {
            "name": "mixpanel_flush",
            "location": 458,
            "return": [
                "None"
            ],
            "arguments": {
                "event": []
            }
        },
        "distinct_id_is_required.wrapper": {
            "name": "wrapper",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "MixpanelTrack._resolve_events": {
            "name": "_resolve_events",
            "location": 57,
            "return": [
                "pyramid_mixpanel.Events"
            ],
            "arguments": {
                "dotted_name": [
                    "object"
                ]
            }
        },
        "MixpanelTrack._resolve_event_properties": {
            "name": "_resolve_event_properties",
            "location": 74,
            "return": [
                "pyramid_mixpanel.EventProperties"
            ],
            "arguments": {
                "dotted_name": [
                    "object"
                ]
            }
        },
        "MixpanelTrack._resolve_profile_properties": {
            "name": "_resolve_profile_properties",
            "location": 93,
            "return": [
                "pyramid_mixpanel.ProfileProperties"
            ],
            "arguments": {
                "dotted_name": [
                    "object"
                ]
            }
        },
        "MixpanelTrack._resolve_profile_meta_properties": {
            "name": "_resolve_profile_meta_properties",
            "location": 112,
            "return": [
                "pyramid_mixpanel.ProfileMetaProperties"
            ],
            "arguments": {
                "dotted_name": [
                    "object"
                ]
            }
        },
        "MixpanelTrack._resolve_consumer": {
            "name": "_resolve_consumer",
            "location": 131,
            "return": [
                "Any"
            ],
            "arguments": {
                "dotted_name": [
                    "object"
                ],
                "use_structlog": [
                    "bool"
                ]
            }
        },
        "MixpanelTrack.__init__": {
            "name": "__init__",
            "location": 151,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "settings": [
                    "Dict[(str, Optional[Union[(int, str)]])]"
                ],
                "distinct_id": [],
                "global_event_props": []
            }
        },
        "MixpanelTrack.track": {
            "name": "track",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "props": [],
                "skip_customerio": []
            }
        },
        "MixpanelTrack.profile_set": {
            "name": "profile_set",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "props": [],
                "meta": [],
                "skip_customerio": []
            }
        },
        "MixpanelTrack.people_append": {
            "name": "people_append",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "props": [],
                "meta": []
            }
        },
        "MixpanelTrack.people_union": {
            "name": "people_union",
            "location": 351,
            "return": [],
            "arguments": {
                "self": [],
                "props": [],
                "meta": []
            }
        },
        "MixpanelTrack.profile_increment": {
            "name": "profile_increment",
            "location": 381,
            "return": [],
            "arguments": {
                "self": [],
                "props": []
            }
        },
        "MixpanelTrack.profile_track_charge": {
            "name": "profile_track_charge",
            "location": 394,
            "return": [],
            "arguments": {
                "self": [],
                "amount": [],
                "props": []
            }
        },
        "mixpanel_flush.flush": {
            "name": "flush",
            "location": 461,
            "return": [],
            "arguments": {
                "request": [],
                "response": []
            }
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/__init__.py": {
        "includeme": {
            "name": "includeme",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "config": []
            }
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/tests/test_consumers.py": {
        "test_MockedConsumer": {
            "name": "test_MockedConsumer",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_MockedConsumer_drop_system_properties": {
            "name": "test_MockedConsumer_drop_system_properties",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_PoliteBufferedConsumer": {
            "name": "test_PoliteBufferedConsumer",
            "location": 95,
            "return": [],
            "arguments": {
                "flush": []
            }
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/tests/test_functional.py": {
        "hello": {
            "name": "hello",
            "location": 23,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "bye": {
            "name": "bye",
            "location": 38,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "app": {
            "name": "app",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "settings": []
            }
        },
        "test_MockedConsumer": {
            "name": "test_MockedConsumer",
            "location": 62,
            "return": [],
            "arguments": {
                "_make_insert_id": []
            }
        },
        "test_PoliteBufferedConsumer": {
            "name": "test_PoliteBufferedConsumer",
            "location": 110,
            "return": [],
            "arguments": {
                "_make_insert_id": []
            }
        },
        "test_header_event_props": {
            "name": "test_header_event_props",
            "location": 230,
            "return": [],
            "arguments": {
                "_make_insert_id": []
            }
        },
        "test_request_mixpanel_not_used": {
            "name": "test_request_mixpanel_not_used",
            "location": 337,
            "return": [],
            "arguments": {
                "flush": []
            }
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/tests/test_query.py": {
        "test_zero_results": {
            "name": "test_zero_results",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_too_many_results": {
            "name": "test_too_many_results",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_profile_by_email": {
            "name": "test_profile_by_email",
            "location": 44,
            "return": [],
            "arguments": {}
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/tests/test_track.py": {
        "test_mixpanel_init_distinct_id": {
            "name": "test_mixpanel_init_distinct_id",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_consumers": {
            "name": "test_init_consumers",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_events": {
            "name": "test_init_events",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_event_properties": {
            "name": "test_init_event_properties",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_mixpanel_init_customerio": {
            "name": "test_mixpanel_init_customerio",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_profile_properties": {
            "name": "test_init_profile_properties",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_profile_meta_properties": {
            "name": "test_init_profile_meta_properties",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_track": {
            "name": "test_track",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_track_customerio": {
            "name": "test_track_customerio",
            "location": 426,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_track_guards": {
            "name": "test_track_guards",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_set": {
            "name": "test_profile_set",
            "location": 510,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_set_customerio": {
            "name": "test_profile_set_customerio",
            "location": 547,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_set_guards": {
            "name": "test_profile_set_guards",
            "location": 595,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_set_date": {
            "name": "test_profile_set_date",
            "location": 630,
            "return": [],
            "arguments": {}
        },
        "test_people_append": {
            "name": "test_people_append",
            "location": 677,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_people_append_guards": {
            "name": "test_people_append_guards",
            "location": 714,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_people_union": {
            "name": "test_people_union",
            "location": 748,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_people_union_guards": {
            "name": "test_people_union_guards",
            "location": 785,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_increment": {
            "name": "test_profile_increment",
            "location": 834,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_increment_guards": {
            "name": "test_profile_increment_guards",
            "location": 855,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_track_charge": {
            "name": "test_profile_track_charge",
            "location": 877,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_profile_track_charge_guards": {
            "name": "test_profile_track_charge_guards",
            "location": 914,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "pyramid_mixpanel-master/pyramid_mixpanel/tests/__init__.py": {}
}
{
    "pyro-master/build.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": [
                    "argparse.Namespace"
                ]
            }
        },
        "Application.__setattr__": {
            "name": "__setattr__",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "object"
                ]
            }
        },
        "Application._clean_dist_folder": {
            "name": "_clean_dist_folder",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application._build_zip_archive": {
            "name": "_build_zip_archive",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Application.exec_process": {
            "name": "exec_process",
            "location": 123,
            "return": [
                "int"
            ],
            "arguments": {
                "cmd": [
                    "list"
                ],
                "env": [
                    "dict"
                ]
            }
        },
        "Application.run": {
            "name": "run",
            "location": 135,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/Anonymizer.py": {
        "Anonymizer._randomize_str": {
            "name": "_randomize_str",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "size": [
                    "int"
                ],
                "uppercase": [
                    "bool"
                ]
            }
        },
        "Anonymizer.anonymize_script": {
            "name": "anonymize_script",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Application.py": {
        "Application.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parser": [
                    "argparse.ArgumentParser"
                ]
            }
        },
        "Application._try_fix_input_path": {
            "name": "_try_fix_input_path",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "input_path": [
                    "str"
                ]
            }
        },
        "Application._validate_project_file": {
            "name": "_validate_project_file",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "ppj": [
                    "pyro.PapyrusProject.PapyrusProject"
                ]
            }
        },
        "Application._validate_project_paths": {
            "name": "_validate_project_paths",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "ppj": [
                    "pyro.PapyrusProject.PapyrusProject"
                ]
            }
        },
        "Application.run": {
            "name": "run",
            "location": 97,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/BuildFacade.py": {
        "BuildFacade.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ppj": [
                    "pyro.PapyrusProject.PapyrusProject"
                ]
            }
        },
        "BuildFacade._find_modified_scripts": {
            "name": "_find_modified_scripts",
            "location": 51,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildFacade._limit_priority": {
            "name": "_limit_priority",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BuildFacade.try_compile": {
            "name": "try_compile",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildFacade.try_anonymize": {
            "name": "try_anonymize",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildFacade.try_pack": {
            "name": "try_pack",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BuildFacade.try_zip": {
            "name": "try_zip",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/CaseInsensitiveList.py": {
        "CaseInsensitiveList.__contains__": {
            "name": "__contains__",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "object"
                ]
            }
        },
        "CaseInsensitiveList.append": {
            "name": "append",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "object"
                ]
            }
        }
    },
    "pyro-master/pyro/CommandArguments.py": {
        "CommandArguments.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandArguments.append": {
            "name": "append",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "CommandArguments.clear": {
            "name": "clear",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandArguments.join": {
            "name": "join",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "delimiter": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Comparators.py": {
        "startswith": {
            "name": "startswith",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "ignorecase": [
                    "bool"
                ]
            }
        },
        "endswith": {
            "name": "endswith",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "ignorecase": [
                    "bool"
                ]
            }
        },
        "is_command_node": {
            "name": "is_command_node",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_folder_node": {
            "name": "is_folder_node",
            "location": 51,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_import_node": {
            "name": "is_import_node",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_include_node": {
            "name": "is_include_node",
            "location": 59,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_match_node": {
            "name": "is_match_node",
            "location": 63,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_package_node": {
            "name": "is_package_node",
            "location": 67,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_script_node": {
            "name": "is_script_node",
            "location": 71,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_variable_node": {
            "name": "is_variable_node",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_zipfile_node": {
            "name": "is_zipfile_node",
            "location": 79,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        },
        "is_namespace_path": {
            "name": "is_namespace_path",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "node": []
            }
        }
    },
    "pyro-master/pyro/Constant.py": {
        "Constant.items": {
            "name": "items",
            "location": 7,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Constant.keys": {
            "name": "keys",
            "location": 11,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Constant.values": {
            "name": "values",
            "location": 15,
            "return": [
                "list"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Constant.get": {
            "name": "get",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": [],
                "field_name": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Constants.py": {},
    "pyro-master/pyro/PackageManager.py": {
        "PackageManager.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ppj": [
                    "pyro.PapyrusProject.PapyrusProject"
                ]
            }
        },
        "PackageManager._can_compress_package": {
            "name": "_can_compress_package",
            "location": 50,
            "return": [
                "bool"
            ],
            "arguments": {
                "containing_folder": [
                    "str"
                ]
            }
        },
        "PackageManager._check_write_permission": {
            "name": "_check_write_permission",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "PackageManager._match": {
            "name": "_match",
            "location": 77,
            "return": [
                "generator"
            ],
            "arguments": {
                "root_dir": [
                    "str"
                ],
                "file_pattern": [
                    "str"
                ]
            }
        },
        "PackageManager._generate_include_paths": {
            "name": "_generate_include_paths",
            "location": 89,
            "return": [
                "generator"
            ],
            "arguments": {
                "includes_node": [],
                "root_path": [
                    "str"
                ],
                "zip_mode": [
                    "bool"
                ]
            }
        },
        "PackageManager._fix_package_extension": {
            "name": "_fix_package_extension",
            "location": 183,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "package_name": [
                    "str"
                ]
            }
        },
        "PackageManager._fix_zip_extension": {
            "name": "_fix_zip_extension",
            "location": 188,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "zip_name": [
                    "str"
                ]
            }
        },
        "PackageManager._try_resolve_project_relative_path": {
            "name": "_try_resolve_project_relative_path",
            "location": 193,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "path": [
                    "str"
                ]
            }
        },
        "PackageManager.build_commands": {
            "name": "build_commands",
            "location": 201,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "containing_folder": [
                    "str"
                ],
                "output_path": [
                    "str"
                ]
            }
        },
        "PackageManager.create_packages": {
            "name": "create_packages",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageManager.create_zip": {
            "name": "create_zip",
            "location": 305,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/PapyrusProject.py": {
        "PapyrusProject.__init__": {
            "name": "__init__",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "pyro.ProjectOptions.ProjectOptions"
                ]
            }
        },
        "PapyrusProject.try_initialize_remotes": {
            "name": "try_initialize_remotes",
            "location": 181,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject.try_populate_imports": {
            "name": "try_populate_imports",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject.try_set_game_type": {
            "name": "try_set_game_type",
            "location": 256,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject.find_missing_scripts": {
            "name": "find_missing_scripts",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject.try_set_game_path": {
            "name": "try_set_game_path",
            "location": 280,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject.remote_paths": {
            "name": "remote_paths",
            "location": 286,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._parse_variables": {
            "name": "_parse_variables",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "variables_node": []
            }
        },
        "PapyrusProject._update_attributes": {
            "name": "_update_attributes",
            "location": 334,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parent_node": []
            }
        },
        "PapyrusProject._calculate_object_name": {
            "name": "_calculate_object_name",
            "location": 415,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "psc_path": [
                    "str"
                ]
            }
        },
        "PapyrusProject._can_remove_folder": {
            "name": "_can_remove_folder",
            "location": 419,
            "return": [
                "bool"
            ],
            "arguments": {
                "import_path": [
                    "str"
                ],
                "object_name": [
                    "str"
                ],
                "script_path": [
                    "str"
                ]
            }
        },
        "PapyrusProject._find_missing_script_paths": {
            "name": "_find_missing_script_paths",
            "location": 425,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._get_import_paths": {
            "name": "_get_import_paths",
            "location": 438,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._get_implicit_folder_imports": {
            "name": "_get_implicit_folder_imports",
            "location": 473,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._get_implicit_script_imports": {
            "name": "_get_implicit_script_imports",
            "location": 490,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._get_pex_paths": {
            "name": "_get_pex_paths",
            "location": 511,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._get_psc_paths": {
            "name": "_get_psc_paths",
            "location": 526,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._get_remote_path": {
            "name": "_get_remote_path",
            "location": 568,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "PapyrusProject.try_fix_namespace_path": {
            "name": "try_fix_namespace_path",
            "location": 602,
            "return": [
                "None"
            ],
            "arguments": {
                "node": []
            }
        },
        "PapyrusProject._get_script_paths_from_folders_node": {
            "name": "_get_script_paths_from_folders_node",
            "location": 607,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._get_script_paths_from_scripts_node": {
            "name": "_get_script_paths_from_scripts_node",
            "location": 673,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject._try_exclude_unmodified_scripts": {
            "name": "_try_exclude_unmodified_scripts",
            "location": 696,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject.build_commands": {
            "name": "build_commands",
            "location": 727,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "PapyrusProject.try_run_event": {
            "name": "try_run_event",
            "location": 790,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": [
                    "Union[(pyro.Enums.Event.AnonymizeEvent, pyro.Enums.Event.BuildEvent, pyro.Enums.Event.CompileEvent, pyro.Enums.Event.ImportEvent, pyro.Enums.Event.PackageEvent, pyro.Enums.Event.ZipEvent)]"
                ]
            }
        },
        "PapyrusProject.__init__.bool_attr": {
            "name": "bool_attr",
            "location": 120,
            "return": [],
            "arguments": {
                "element": [],
                "attr_name": []
            }
        },
        "PapyrusProject._get_implicit_folder_imports.try_append_path": {
            "name": "try_append_path",
            "location": 480,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "PapyrusProject._get_psc_paths.add_object_name": {
            "name": "add_object_name",
            "location": 530,
            "return": [],
            "arguments": {
                "p": []
            }
        }
    },
    "pyro-master/pyro/PathHelper.py": {
        "PathHelper.calculate_relative_object_name": {
            "name": "calculate_relative_object_name",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "script_path": [
                    "str"
                ],
                "import_paths": [
                    "list"
                ]
            }
        },
        "PathHelper.find_script_paths_from_folder": {
            "name": "find_script_paths_from_folder",
            "location": 35,
            "return": [
                "generator"
            ],
            "arguments": {
                "root_dir": [
                    "str"
                ]
            }
        },
        "PathHelper.uniqify": {
            "name": "uniqify",
            "location": 44,
            "return": [
                "list"
            ],
            "arguments": {
                "items": [
                    "Iterable"
                ]
            }
        },
        "PathHelper.find_index_of_ancestor_import_path": {
            "name": "find_index_of_ancestor_import_path",
            "location": 49,
            "return": [
                "int"
            ],
            "arguments": {
                "implicit_path": [
                    "str"
                ],
                "import_paths": [
                    "list"
                ]
            }
        },
        "PathHelper.merge_implicit_import_paths": {
            "name": "merge_implicit_import_paths",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "implicit_paths": [
                    "list"
                ],
                "import_paths": [
                    "list"
                ]
            }
        },
        "PathHelper.url2pathname": {
            "name": "url2pathname",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "url_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/PexHeader.py": {
        "PexHeader.read": {
            "name": "read",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "f": [],
                "name": [
                    "str"
                ],
                "length": [
                    "int"
                ]
            }
        }
    },
    "pyro-master/pyro/PexReader.py": {
        "PexReader.get_header": {
            "name": "get_header",
            "location": 11,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "PexReader.dump": {
            "name": "dump",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/PexTypes.py": {},
    "pyro-master/pyro/ProcessManager.py": {
        "ProcessManager._format_time": {
            "name": "_format_time",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "hours": [
                    "decimal.Decimal"
                ],
                "minutes": [
                    "decimal.Decimal"
                ],
                "seconds": [
                    "decimal.Decimal"
                ]
            }
        },
        "ProcessManager.run_event": {
            "name": "run_event",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "event_node": [],
                "project_path": [
                    "str"
                ]
            }
        },
        "ProcessManager.run_command": {
            "name": "run_command",
            "location": 47,
            "return": [
                "pyro.Enums.ProcessState.ProcessState"
            ],
            "arguments": {
                "command": [
                    "str"
                ],
                "cwd": [
                    "str"
                ],
                "env": [
                    "dict"
                ]
            }
        },
        "ProcessManager.run_bsarch": {
            "name": "run_bsarch",
            "location": 76,
            "return": [
                "pyro.Enums.ProcessState.ProcessState"
            ],
            "arguments": {
                "command": [
                    "str"
                ]
            }
        },
        "ProcessManager.run_compiler": {
            "name": "run_compiler",
            "location": 141,
            "return": [
                "pyro.Enums.ProcessState.ProcessState"
            ],
            "arguments": {
                "command": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/ProjectBase.py": {
        "ProjectBase.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "pyro.ProjectOptions.ProjectOptions"
                ]
            }
        },
        "ProjectBase.__setattr__": {
            "name": "__setattr__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "object"
                ]
            }
        },
        "ProjectBase._get_path": {
            "name": "_get_path",
            "location": 51,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "ProjectBase.parse": {
            "name": "parse",
            "location": 66,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "value": [
                    "str"
                ]
            }
        },
        "ProjectBase.get_worker_limit": {
            "name": "get_worker_limit",
            "location": 76,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_compiler_path": {
            "name": "get_compiler_path",
            "location": 94,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_flags_path": {
            "name": "get_flags_path",
            "location": 104,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_output_path": {
            "name": "get_output_path",
            "location": 123,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_game_path": {
            "name": "get_game_path",
            "location": 134,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "game_type": [
                    "str"
                ]
            }
        },
        "ProjectBase.get_registry_path": {
            "name": "get_registry_path",
            "location": 150,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "game_type": [
                    "str"
                ]
            }
        },
        "ProjectBase.get_installed_path": {
            "name": "get_installed_path",
            "location": 163,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "game_type": [
                    "str"
                ]
            }
        },
        "ProjectBase.get_bsarch_path": {
            "name": "get_bsarch_path",
            "location": 202,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_package_path": {
            "name": "get_package_path",
            "location": 208,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_temp_path": {
            "name": "get_temp_path",
            "location": 214,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_zip_output_path": {
            "name": "get_zip_output_path",
            "location": 221,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_remote_temp_path": {
            "name": "get_remote_temp_path",
            "location": 228,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase._get_game_type_from_path": {
            "name": "_get_game_type_from_path",
            "location": 234,
            "return": [
                "str"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "ProjectBase.get_game_type": {
            "name": "get_game_type",
            "location": 247,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectBase.get_log_path": {
            "name": "get_log_path",
            "location": 288,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/ProjectOptions.py": {
        "ProjectOptions.__post_init__": {
            "name": "__post_init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProjectOptions.__setattr__": {
            "name": "__setattr__",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": [
                    "object"
                ]
            }
        }
    },
    "pyro-master/pyro/PyroArgumentParser.py": {
        "PyroArgumentParser.format_help": {
            "name": "format_help",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/PyroRawDescriptionHelpFormatter.py": {
        "PyroRawDescriptionHelpFormatter.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "prog": [
                    "str"
                ],
                "indent_increment": [
                    "int"
                ],
                "max_help_position": [
                    "int"
                ],
                "width": [
                    "int"
                ]
            }
        },
        "PyroRawDescriptionHelpFormatter._format_action_invocation": {
            "name": "_format_action_invocation",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "argparse.Action"
                ]
            }
        },
        "PyroRawDescriptionHelpFormatter._get_default_metavar_for_optional": {
            "name": "_get_default_metavar_for_optional",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "action": [
                    "argparse.Action"
                ]
            }
        }
    },
    "pyro-master/pyro/setup.py": {},
    "pyro-master/pyro/StringTemplate.py": {},
    "pyro-master/pyro/TimeElapsed.py": {
        "TimeElapsed.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeElapsed.average": {
            "name": "average",
            "location": 13,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "self": [],
                "dividend": [
                    "int"
                ]
            }
        },
        "TimeElapsed.value": {
            "name": "value",
            "location": 21,
            "return": [
                "decimal.Decimal"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/XmlHelper.py": {
        "XmlHelper.strip_xml_comments": {
            "name": "strip_xml_comments",
            "location": 11,
            "return": [
                "io.StringIO"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "XmlHelper.validate_schema": {
            "name": "validate_schema",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "namespace": [
                    "str"
                ],
                "program_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/XmlRoot.py": {
        "XmlRoot.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element_tree": []
            }
        },
        "XmlRoot.find": {
            "name": "find",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "XmlRoot.get": {
            "name": "get",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "default": []
            }
        }
    },
    "pyro-master/pyro/__main__.py": {},
    "pyro-master/pyro/Enums/Event.py": {},
    "pyro-master/pyro/Enums/ProcessState.py": {},
    "pyro-master/pyro/Performance/CompileData.py": {
        "CompileData.__post_init__": {
            "name": "__post_init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CompileData.failed_count": {
            "name": "failed_count",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CompileData.to_string": {
            "name": "to_string",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/Performance/PackageData.py": {
        "PackageData.__post_init__": {
            "name": "__post_init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PackageData.to_string": {
            "name": "to_string",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/Performance/ZippingData.py": {
        "ZippingData.__post_init__": {
            "name": "__post_init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ZippingData.to_string": {
            "name": "to_string",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "pyro-master/pyro/Remotes/BitbucketRemote.py": {
        "BitbucketRemote._fetch_payloads": {
            "name": "_fetch_payloads",
            "location": 15,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": [],
                "request_url": [
                    "str"
                ]
            }
        },
        "BitbucketRemote.fetch_contents": {
            "name": "fetch_contents",
            "location": 40,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "output_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Remotes/GenericRemote.py": {
        "GenericRemote.fetch_contents": {
            "name": "fetch_contents",
            "location": 12,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "output_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Remotes/GiteaRemote.py": {
        "GiteaRemote.download_file": {
            "name": "download_file",
            "location": 20,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "file": [
                    "tuple"
                ]
            }
        },
        "GiteaRemote.fetch_contents": {
            "name": "fetch_contents",
            "location": 35,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "output_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Remotes/GitHubRemote.py": {
        "GitHubRemote.download_file": {
            "name": "download_file",
            "location": 20,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "file": [
                    "tuple"
                ]
            }
        },
        "GitHubRemote.fetch_contents": {
            "name": "fetch_contents",
            "location": 35,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "output_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Remotes/RemoteBase.py": {
        "RemoteBase.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoteBase.create_local_path": {
            "name": "create_local_path",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "RemoteBase.extract_request_args": {
            "name": "extract_request_args",
            "location": 54,
            "return": [
                "pyro.Remotes.RemoteUri.RemoteUri"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "RemoteBase.validate_url": {
            "name": "validate_url",
            "location": 119,
            "return": [
                "bool"
            ],
            "arguments": {
                "url": [
                    "str"
                ]
            }
        },
        "RemoteBase.find_access_token": {
            "name": "find_access_token",
            "location": 130,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "schemeless_url": [
                    "str"
                ]
            }
        },
        "RemoteBase.fetch_contents": {
            "name": "fetch_contents",
            "location": 139,
            "return": [
                "generator"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ],
                "output_path": [
                    "str"
                ]
            }
        }
    },
    "pyro-master/pyro/Remotes/RemoteUri.py": {}
}
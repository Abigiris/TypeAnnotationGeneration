{
    "python-alerta-client-master/setup.py": {
        "read": {
            "name": "read",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "filename": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/api.py": {
        "Client.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint": [],
                "key": [],
                "secret": [],
                "token": [],
                "username": [],
                "password": [],
                "timeout": [],
                "ssl_verify": [],
                "ssl_cert": [],
                "ssl_key": [],
                "headers": [],
                "debug": []
            }
        },
        "Client.send_alert": {
            "name": "send_alert",
            "location": 47,
            "return": [
                "Tuple[(Any, Optional[alertaclient.models.alert.Alert], Any)]"
            ],
            "arguments": {
                "self": [],
                "resource": [],
                "event": []
            }
        },
        "Client.get_alert": {
            "name": "get_alert",
            "location": 72,
            "return": [
                "alertaclient.models.alert.Alert"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.set_status": {
            "name": "set_status",
            "location": 75,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "status": [],
                "text": [],
                "timeout": []
            }
        },
        "Client.action": {
            "name": "action",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "action": [],
                "text": [],
                "timeout": []
            }
        },
        "Client.tag_alert": {
            "name": "tag_alert",
            "location": 91,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "tags": []
            }
        },
        "Client.untag_alert": {
            "name": "untag_alert",
            "location": 94,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "tags": []
            }
        },
        "Client.update_attributes": {
            "name": "update_attributes",
            "location": 97,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "attributes": []
            }
        },
        "Client.delete_alert": {
            "name": "delete_alert",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.search": {
            "name": "search",
            "location": 106,
            "return": [
                "List[alertaclient.models.alert.Alert]"
            ],
            "arguments": {
                "self": [],
                "query": [],
                "page": [],
                "page_size": []
            }
        },
        "Client.get_alerts": {
            "name": "get_alerts",
            "location": 109,
            "return": [
                "List[alertaclient.models.alert.Alert]"
            ],
            "arguments": {
                "self": [],
                "query": [],
                "page": [],
                "page_size": []
            }
        },
        "Client.get_history": {
            "name": "get_history",
            "location": 113,
            "return": [
                "List[alertaclient.models.history.RichHistory]"
            ],
            "arguments": {
                "self": [],
                "query": [],
                "page": [],
                "page_size": []
            }
        },
        "Client.get_count": {
            "name": "get_count",
            "location": 117,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.get_top10_count": {
            "name": "get_top10_count",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.get_top10_flapping": {
            "name": "get_top10_flapping",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.get_top10_standing": {
            "name": "get_top10_standing",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.get_environments": {
            "name": "get_environments",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.get_services": {
            "name": "get_services",
            "location": 137,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.get_groups": {
            "name": "get_groups",
            "location": 141,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.get_tags": {
            "name": "get_tags",
            "location": 145,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.alert_note": {
            "name": "alert_note",
            "location": 149,
            "return": [
                "alertaclient.models.note.Note"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "text": []
            }
        },
        "Client.get_alert_notes": {
            "name": "get_alert_notes",
            "location": 156,
            "return": [
                "List[alertaclient.models.note.Note]"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "page": [],
                "page_size": []
            }
        },
        "Client.update_alert_note": {
            "name": "update_alert_note",
            "location": 160,
            "return": [
                "alertaclient.models.note.Note"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "note_id": [],
                "text": []
            }
        },
        "Client.delete_alert_note": {
            "name": "delete_alert_note",
            "location": 167,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "note_id": []
            }
        },
        "Client.create_blackout": {
            "name": "create_blackout",
            "location": 171,
            "return": [
                "alertaclient.models.blackout.Blackout"
            ],
            "arguments": {
                "self": [],
                "environment": [],
                "service": [],
                "resource": [],
                "event": [],
                "group": [],
                "tags": [],
                "origin": [],
                "customer": [],
                "start": [],
                "duration": [],
                "text": []
            }
        },
        "Client.get_blackout": {
            "name": "get_blackout",
            "location": 189,
            "return": [
                "alertaclient.models.blackout.Blackout"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.get_blackouts": {
            "name": "get_blackouts",
            "location": 192,
            "return": [
                "List[alertaclient.models.blackout.Blackout]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.update_blackout": {
            "name": "update_blackout",
            "location": 196,
            "return": [
                "alertaclient.models.blackout.Blackout"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.delete_blackout": {
            "name": "delete_blackout",
            "location": 214,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.create_customer": {
            "name": "create_customer",
            "location": 218,
            "return": [
                "alertaclient.models.customer.Customer"
            ],
            "arguments": {
                "self": [],
                "customer": [],
                "match": []
            }
        },
        "Client.get_customer": {
            "name": "get_customer",
            "location": 226,
            "return": [
                "alertaclient.models.customer.Customer"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.get_customers": {
            "name": "get_customers",
            "location": 229,
            "return": [
                "List[alertaclient.models.customer.Customer]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.update_customer": {
            "name": "update_customer",
            "location": 233,
            "return": [
                "alertaclient.models.customer.Customer"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.delete_customer": {
            "name": "delete_customer",
            "location": 241,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.heartbeat": {
            "name": "heartbeat",
            "location": 245,
            "return": [
                "alertaclient.models.heartbeat.Heartbeat"
            ],
            "arguments": {
                "self": [],
                "origin": [],
                "tags": [],
                "attributes": [],
                "timeout": [],
                "customer": []
            }
        },
        "Client.get_heartbeat": {
            "name": "get_heartbeat",
            "location": 257,
            "return": [
                "alertaclient.models.heartbeat.Heartbeat"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.get_heartbeats": {
            "name": "get_heartbeats",
            "location": 260,
            "return": [
                "List[alertaclient.models.heartbeat.Heartbeat]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.delete_heartbeat": {
            "name": "delete_heartbeat",
            "location": 264,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.create_key": {
            "name": "create_key",
            "location": 268,
            "return": [
                "alertaclient.models.key.ApiKey"
            ],
            "arguments": {
                "self": [],
                "username": [],
                "scopes": [],
                "expires": [],
                "text": [],
                "customer": []
            }
        },
        "Client.get_key": {
            "name": "get_key",
            "location": 281,
            "return": [
                "alertaclient.models.key.ApiKey"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.get_keys": {
            "name": "get_keys",
            "location": 284,
            "return": [
                "List[alertaclient.models.key.ApiKey]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.update_key": {
            "name": "update_key",
            "location": 288,
            "return": [
                "alertaclient.models.key.ApiKey"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.delete_key": {
            "name": "delete_key",
            "location": 298,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.create_perm": {
            "name": "create_perm",
            "location": 302,
            "return": [
                "alertaclient.models.permission.Permission"
            ],
            "arguments": {
                "self": [],
                "role": [],
                "scopes": []
            }
        },
        "Client.get_perm": {
            "name": "get_perm",
            "location": 310,
            "return": [
                "alertaclient.models.permission.Permission"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.get_perms": {
            "name": "get_perms",
            "location": 313,
            "return": [
                "List[alertaclient.models.permission.Permission]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.update_perm": {
            "name": "update_perm",
            "location": 317,
            "return": [
                "alertaclient.models.permission.Permission"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.delete_perm": {
            "name": "delete_perm",
            "location": 325,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.get_scopes": {
            "name": "get_scopes",
            "location": 328,
            "return": [
                "List[alertaclient.models.enums.Scope]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.signup": {
            "name": "signup",
            "location": 333,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "email": [],
                "password": [],
                "status": [],
                "attributes": [],
                "text": []
            }
        },
        "Client.create_user": {
            "name": "create_user",
            "location": 344,
            "return": [
                "alertaclient.models.user.User"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "email": [],
                "password": [],
                "status": [],
                "roles": [],
                "attributes": [],
                "text": [],
                "email_verified": []
            }
        },
        "Client.get_user": {
            "name": "get_user",
            "location": 358,
            "return": [
                "alertaclient.models.user.User"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.get_user_groups": {
            "name": "get_user_groups",
            "location": 361,
            "return": [
                "List[alertaclient.models.group.Group]"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.get_me": {
            "name": "get_me",
            "location": 365,
            "return": [
                "alertaclient.models.user.User"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.get_me_attributes": {
            "name": "get_me_attributes",
            "location": 368,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.get_users": {
            "name": "get_users",
            "location": 371,
            "return": [
                "List[alertaclient.models.user.User]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.update_user": {
            "name": "update_user",
            "location": 375,
            "return": [
                "alertaclient.models.user.User"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.update_me": {
            "name": "update_me",
            "location": 389,
            "return": [
                "alertaclient.models.user.User"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.update_user_attributes": {
            "name": "update_user_attributes",
            "location": 401,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "attributes": []
            }
        },
        "Client.update_me_attributes": {
            "name": "update_me_attributes",
            "location": 407,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "attributes": []
            }
        },
        "Client.delete_user": {
            "name": "delete_user",
            "location": 413,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.login": {
            "name": "login",
            "location": 417,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "username": [],
                "password": []
            }
        },
        "Client.token": {
            "name": "token",
            "location": 424,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "provider": [],
                "data": []
            }
        },
        "Client.userinfo": {
            "name": "userinfo",
            "location": 436,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.config": {
            "name": "config",
            "location": 439,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.create_group": {
            "name": "create_group",
            "location": 443,
            "return": [
                "alertaclient.models.group.Group"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "text": []
            }
        },
        "Client.get_group": {
            "name": "get_group",
            "location": 451,
            "return": [
                "alertaclient.models.group.Group"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.get_group_users": {
            "name": "get_group_users",
            "location": 454,
            "return": [
                "List[alertaclient.models.user.User]"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.get_users_groups": {
            "name": "get_users_groups",
            "location": 458,
            "return": [
                "List[alertaclient.models.group.Group]"
            ],
            "arguments": {
                "self": [],
                "query": []
            }
        },
        "Client.update_group": {
            "name": "update_group",
            "location": 462,
            "return": [
                "alertaclient.models.group.Group"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.add_user_to_group": {
            "name": "add_user_to_group",
            "location": 470,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "group_id": [],
                "user_id": []
            }
        },
        "Client.remove_user_from_group": {
            "name": "remove_user_from_group",
            "location": 473,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "group_id": [],
                "user_id": []
            }
        },
        "Client.delete_group": {
            "name": "delete_group",
            "location": 476,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "id": []
            }
        },
        "Client.mgmt_status": {
            "name": "mgmt_status",
            "location": 480,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Client.housekeeping": {
            "name": "housekeeping",
            "location": 483,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expired_delete_hours": [],
                "info_delete_hours": []
            }
        },
        "ApiKeyAuth.__init__": {
            "name": "__init__",
            "location": 498,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api_key": [],
                "auth_token": []
            }
        },
        "ApiKeyAuth.__call__": {
            "name": "__call__",
            "location": 502,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "_T0"
                ]
            }
        },
        "TokenAuth.__init__": {
            "name": "__init__",
            "location": 509,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "auth_token": []
            }
        },
        "TokenAuth.__call__": {
            "name": "__call__",
            "location": 512,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "r": [
                    "_T0"
                ]
            }
        },
        "HTTPClient.__init__": {
            "name": "__init__",
            "location": 522,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint": [],
                "key": [],
                "secret": [],
                "token": [],
                "username": [],
                "password": [],
                "timeout": [],
                "ssl_verify": [],
                "ssl_cert": [],
                "ssl_key": [],
                "headers": [],
                "debug": []
            }
        },
        "HTTPClient.default_headers": {
            "name": "default_headers",
            "location": 562,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {}
        },
        "HTTPClient.get": {
            "name": "get",
            "location": 568,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "query": []
            }
        },
        "HTTPClient.post": {
            "name": "post",
            "location": 582,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "HTTPClient.put": {
            "name": "put",
            "location": 591,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "data": []
            }
        },
        "HTTPClient.delete": {
            "name": "delete",
            "location": 600,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "HTTPClient._handle_error": {
            "name": "_handle_error",
            "location": 609,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "response": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/cli.py": {
        "cli": {
            "name": "cli",
            "location": 48,
            "return": [],
            "arguments": {
                "ctx": [],
                "config_file": [],
                "profile": [],
                "endpoint_url": [],
                "output": [],
                "color": [],
                "debug": []
            }
        },
        "AlertaCLI.list_commands": {
            "name": "list_commands",
            "location": 20,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "AlertaCLI.get_command": {
            "name": "get_command",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "name": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_file": [],
                "config_override": []
            }
        },
        "Config.get_config_for_profle": {
            "name": "get_config_for_profle",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "profile": []
            }
        },
        "Config.get_remote_config": {
            "name": "get_remote_config",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "endpoint": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/exceptions.py": {},
    "python-alerta-client-master/alertaclient/top.py": {
        "Screen.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "client": [],
                "timezone": []
            }
        },
        "Screen.run": {
            "name": "run",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Screen.main": {
            "name": "main",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "stdscr": []
            }
        },
        "Screen.update": {
            "name": "update",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Screen._addstr": {
            "name": "_addstr",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "y": [],
                "x": [],
                "line": [],
                "attr": []
            }
        },
        "Screen._key_press": {
            "name": "_key_press",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Screen.update.short_sev": {
            "name": "short_sev",
            "location": 97,
            "return": [],
            "arguments": {
                "severity": []
            }
        },
        "Screen.update.color": {
            "name": "color",
            "location": 100,
            "return": [],
            "arguments": {
                "severity": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/utils.py": {
        "build_query": {
            "name": "build_query",
            "location": 44,
            "return": [
                "List[tuple]"
            ],
            "arguments": {
                "filters": []
            }
        },
        "action_progressbar": {
            "name": "action_progressbar",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "action": [],
                "ids": [],
                "label": [],
                "text": [],
                "timeout": []
            }
        },
        "origin": {
            "name": "origin",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "CustomJsonEncoder.default": {
            "name": "default",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "DateTime.parse": {
            "name": "parse",
            "location": 23,
            "return": [
                "Optional[datetime.datetime]"
            ],
            "arguments": {
                "date_str": []
            }
        },
        "DateTime.iso8601": {
            "name": "iso8601",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "dt": []
            }
        },
        "DateTime.localtime": {
            "name": "localtime",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "dt": [],
                "timezone": [],
                "fmt": []
            }
        },
        "action_progressbar.show_skipped": {
            "name": "show_skipped",
            "location": 51,
            "return": [],
            "arguments": {
                "id": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/version.py": {},
    "python-alerta-client-master/alertaclient/__init__.py": {},
    "python-alerta-client-master/alertaclient/__main__.py": {},
    "python-alerta-client-master/alertaclient/auth/azure.py": {
        "login": {
            "name": "login",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "client": [],
                "azure_tenant": [],
                "client_id": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/auth/github.py": {
        "login": {
            "name": "login",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "client": [],
                "github_url": [],
                "client_id": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/auth/gitlab.py": {
        "login": {
            "name": "login",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "client": [],
                "gitlab_url": [],
                "client_id": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/auth/google.py": {
        "login": {
            "name": "login",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "client": [],
                "username": [],
                "client_id": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/auth/hmac.py": {},
    "python-alerta-client-master/alertaclient/auth/oidc.py": {
        "login": {
            "name": "login",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "client": [],
                "oidc_auth_url": [],
                "client_id": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/auth/token.py": {
        "HTTPServerHandler.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "address": [],
                "server": [],
                "xsrf_token": []
            }
        },
        "HTTPServerHandler.do_GET": {
            "name": "do_GET",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HTTPServerHandler.log_message": {
            "name": "log_message",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format": []
            }
        },
        "TokenHandler.get_access_token": {
            "name": "get_access_token",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "xsrf_token": []
            }
        },
        "Jwt.parse": {
            "name": "parse",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "jwt": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/auth/utils.py": {
        "machine": {
            "name": "machine",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "endpoint": []
            }
        },
        "get_token": {
            "name": "get_token",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "endpoint": []
            }
        },
        "save_token": {
            "name": "save_token",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "endpoint": [],
                "username": [],
                "token": []
            }
        },
        "clear_token": {
            "name": "clear_token",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "endpoint": []
            }
        },
        "dump_netrc": {
            "name": "dump_netrc",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "merge": {
            "name": "merge",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "dict1": [],
                "dict2": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/auth/__init__.py": {},
    "python-alerta-client-master/alertaclient/commands/cmd_ack.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_action.py": {
        "cli": {
            "name": "cli",
            "location": 13,
            "return": [],
            "arguments": {
                "obj": [],
                "action": [],
                "ids": [],
                "query": [],
                "filters": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_alerts.py": {
        "cli": {
            "name": "cli",
            "location": 13,
            "return": [],
            "arguments": {
                "obj": [],
                "environments": [],
                "services": [],
                "groups": [],
                "tags": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_blackout.py": {
        "cli": {
            "name": "cli",
            "location": 20,
            "return": [],
            "arguments": {
                "obj": [],
                "environment": [],
                "service": [],
                "resource": [],
                "event": [],
                "group": [],
                "tags": [],
                "origin": [],
                "customer": [],
                "start": [],
                "duration": [],
                "text": [],
                "delete": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_blackouts.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {
                "obj": [],
                "purge": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_close.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_config.py": {
        "cli": {
            "name": "cli",
            "location": 6,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_customer.py": {
        "cli": {
            "name": "cli",
            "location": 11,
            "return": [],
            "arguments": {
                "obj": [],
                "customer": [],
                "match": [],
                "delete": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_customers.py": {
        "cli": {
            "name": "cli",
            "location": 9,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_delete.py": {
        "cli": {
            "name": "cli",
            "location": 11,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_group.py": {
        "cli": {
            "name": "cli",
            "location": 15,
            "return": [],
            "arguments": {
                "obj": [],
                "id": [],
                "name": [],
                "text": [],
                "user": [],
                "users": [],
                "delete": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_groups.py": {
        "cli": {
            "name": "cli",
            "location": 9,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_heartbeat.py": {
        "cli": {
            "name": "cli",
            "location": 19,
            "return": [],
            "arguments": {
                "obj": [],
                "origin": [],
                "environment": [],
                "severity": [],
                "service": [],
                "group": [],
                "tags": [],
                "timeout": [],
                "customer": [],
                "delete": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_heartbeats.py": {
        "cli": {
            "name": "cli",
            "location": 16,
            "return": [],
            "arguments": {
                "obj": [],
                "alert": [],
                "severity": [],
                "timeout": [],
                "purge": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_help.py": {
        "cli": {
            "name": "cli",
            "location": 6,
            "return": [],
            "arguments": {
                "ctx": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_history.py": {
        "cli": {
            "name": "cli",
            "location": 14,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_housekeeping.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {
                "obj": [],
                "expired": [],
                "info": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_key.py": {
        "cli": {
            "name": "cli",
            "location": 16,
            "return": [],
            "arguments": {
                "obj": [],
                "api_key": [],
                "username": [],
                "scopes": [],
                "duration": [],
                "text": [],
                "customer": [],
                "delete": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_keys.py": {
        "cli": {
            "name": "cli",
            "location": 16,
            "return": [],
            "arguments": {
                "obj": [],
                "alert": [],
                "maxage": [],
                "severity": [],
                "timeout": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_login.py": {
        "cli": {
            "name": "cli",
            "location": 14,
            "return": [],
            "arguments": {
                "obj": [],
                "username": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_logout.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_me.py": {
        "cli": {
            "name": "cli",
            "location": 13,
            "return": [],
            "arguments": {
                "obj": [],
                "name": [],
                "email": [],
                "password": [],
                "status": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_note.py": {
        "cli": {
            "name": "cli",
            "location": 13,
            "return": [],
            "arguments": {
                "obj": [],
                "alert_ids": [],
                "query": [],
                "filters": [],
                "text": [],
                "delete": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_notes.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {
                "obj": [],
                "alert_id": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_perm.py": {
        "cli": {
            "name": "cli",
            "location": 11,
            "return": [],
            "arguments": {
                "obj": [],
                "role": [],
                "scopes": [],
                "delete": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_perms.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {
                "obj": [],
                "scopes": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_query.py": {
        "cli": {
            "name": "cli",
            "location": 27,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "display": [],
                "from_date": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_raw.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_revoke.py": {
        "cli": {
            "name": "cli",
            "location": 9,
            "return": [],
            "arguments": {
                "ctx": [],
                "api_key": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_scopes.py": {
        "cli": {
            "name": "cli",
            "location": 9,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_send.py": {
        "cli": {
            "name": "cli",
            "location": 26,
            "return": [],
            "arguments": {
                "obj": [],
                "resource": [],
                "event": [],
                "environment": [],
                "severity": [],
                "correlate": [],
                "service": [],
                "group": [],
                "value": [],
                "text": [],
                "tags": [],
                "attributes": [],
                "origin": [],
                "type": [],
                "timeout": [],
                "raw_data": [],
                "customer": []
            }
        },
        "cli.send_alert": {
            "name": "send_alert",
            "location": 30,
            "return": [],
            "arguments": {
                "resource": [],
                "event": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_shelve.py": {
        "cli": {
            "name": "cli",
            "location": 13,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "timeout": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_signup.py": {
        "cli": {
            "name": "cli",
            "location": 15,
            "return": [],
            "arguments": {
                "obj": [],
                "name": [],
                "email": [],
                "password": [],
                "status": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_status.py": {
        "cli": {
            "name": "cli",
            "location": 7,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_tag.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "tags": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_token.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {
                "obj": [],
                "decode": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_top.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_unack.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_unshelve.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "text": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_untag.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "tags": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_update.py": {
        "cli": {
            "name": "cli",
            "location": 12,
            "return": [],
            "arguments": {
                "obj": [],
                "ids": [],
                "query": [],
                "filters": [],
                "attributes": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_uptime.py": {
        "cli": {
            "name": "cli",
            "location": 8,
            "return": [],
            "arguments": {
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_user.py": {
        "cli": {
            "name": "cli",
            "location": 34,
            "return": [],
            "arguments": {
                "obj": [],
                "id": [],
                "name": [],
                "email": [],
                "password": [],
                "status": [],
                "roles": [],
                "text": [],
                "email_verified": [],
                "groups": [],
                "delete": []
            }
        },
        "CommandWithOptionalPassword.parse_args": {
            "name": "parse_args",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "args": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_users.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {
                "obj": [],
                "roles": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_version.py": {
        "cli": {
            "name": "cli",
            "location": 10,
            "return": [],
            "arguments": {
                "ctx": [],
                "obj": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_watch.py": {
        "cli": {
            "name": "cli",
            "location": 16,
            "return": [],
            "arguments": {
                "ctx": [],
                "ids": [],
                "query": [],
                "filters": [],
                "details": [],
                "interval": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/cmd_whoami.py": {
        "cli": {
            "name": "cli",
            "location": 7,
            "return": [],
            "arguments": {
                "obj": [],
                "show_userinfo": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/commands/__init__.py": {},
    "python-alerta-client-master/alertaclient/models/alert.py": {
        "Alert.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resource": [],
                "event": []
            }
        },
        "Alert.__repr__": {
            "name": "__repr__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Alert.parse": {
            "name": "parse",
            "location": 53,
            "return": [
                "_TAlert"
            ],
            "arguments": {
                "cls": [
                    "Type[_TAlert]"
                ],
                "json": []
            }
        },
        "Alert.get_id": {
            "name": "get_id",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "short": []
            }
        },
        "Alert.tabular": {
            "name": "tabular",
            "location": 99,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/blackout.py": {
        "Blackout.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "environment": []
            }
        },
        "Blackout.__repr__": {
            "name": "__repr__",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Blackout.parse": {
            "name": "parse",
            "location": 94,
            "return": [
                "_TBlackout"
            ],
            "arguments": {
                "cls": [
                    "Type[_TBlackout]"
                ],
                "json": []
            }
        },
        "Blackout.tabular": {
            "name": "tabular",
            "location": 118,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/customer.py": {
        "Customer.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "match": [],
                "customer": []
            }
        },
        "Customer.__repr__": {
            "name": "__repr__",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Customer.parse": {
            "name": "parse",
            "location": 13,
            "return": [
                "_TCustomer"
            ],
            "arguments": {
                "cls": [
                    "Type[_TCustomer]"
                ],
                "json": []
            }
        },
        "Customer.tabular": {
            "name": "tabular",
            "location": 20,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/enums.py": {
        "Scope.action": {
            "name": "action",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scope.resource": {
            "name": "resource",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scope.from_str": {
            "name": "from_str",
            "location": 48,
            "return": [
                "Scope"
            ],
            "arguments": {
                "action": [
                    "str"
                ],
                "resource": [
                    "str"
                ]
            }
        },
        "Scope.tabular": {
            "name": "tabular",
            "location": 62,
            "return": [
                "Dict[(str, Scope)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/group.py": {
        "Group.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "text": [
                    "str"
                ]
            }
        },
        "Group.__repr__": {
            "name": "__repr__",
            "location": 37,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Group.parse": {
            "name": "parse",
            "location": 42,
            "return": [
                "_TGroup"
            ],
            "arguments": {
                "cls": [
                    "Type[_TGroup]"
                ],
                "json": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Group.tabular": {
            "name": "tabular",
            "location": 50,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/heartbeat.py": {
        "Heartbeat.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "origin": [],
                "tags": [],
                "create_time": [],
                "timeout": [],
                "customer": []
            }
        },
        "Heartbeat.latency": {
            "name": "latency",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat.since": {
            "name": "since",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat.__repr__": {
            "name": "__repr__",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Heartbeat.parse": {
            "name": "parse",
            "location": 41,
            "return": [
                "_THeartbeat"
            ],
            "arguments": {
                "cls": [
                    "Type[_THeartbeat]"
                ],
                "json": []
            }
        },
        "Heartbeat.tabular": {
            "name": "tabular",
            "location": 63,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/history.py": {
        "History.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "id": [],
                "event": []
            }
        },
        "History.__repr__": {
            "name": "__repr__",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RichHistory.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "resource": [],
                "event": []
            }
        },
        "RichHistory.__repr__": {
            "name": "__repr__",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RichHistory.parse": {
            "name": "parse",
            "location": 51,
            "return": [
                "_TRichHistory"
            ],
            "arguments": {
                "cls": [
                    "Type[_TRichHistory]"
                ],
                "json": []
            }
        },
        "RichHistory.tabular": {
            "name": "tabular",
            "location": 76,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/key.py": {
        "ApiKey.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "user": [],
                "scopes": [],
                "text": [],
                "expire_time": [],
                "customer": []
            }
        },
        "ApiKey.type": {
            "name": "type",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ApiKey.__repr__": {
            "name": "__repr__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiKey.parse": {
            "name": "parse",
            "location": 26,
            "return": [
                "_TApiKey"
            ],
            "arguments": {
                "cls": [
                    "builtins.type[_TApiKey]"
                ],
                "json": []
            }
        },
        "ApiKey.scopes_to_type": {
            "name": "scopes_to_type",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "scopes": []
            }
        },
        "ApiKey.tabular": {
            "name": "tabular",
            "location": 48,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/note.py": {
        "Note.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [],
                "user": [],
                "note_type": []
            }
        },
        "Note.parse": {
            "name": "parse",
            "location": 21,
            "return": [
                "_TNote"
            ],
            "arguments": {
                "cls": [
                    "Type[_TNote]"
                ],
                "json": []
            }
        },
        "Note.__repr__": {
            "name": "__repr__",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Note.tabular": {
            "name": "tabular",
            "location": 39,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/permission.py": {
        "Permission.__init__": {
            "name": "__init__",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "match": [],
                "scopes": []
            }
        },
        "Permission.__repr__": {
            "name": "__repr__",
            "location": 8,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Permission.parse": {
            "name": "parse",
            "location": 13,
            "return": [
                "_TPermission"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPermission]"
                ],
                "json": []
            }
        },
        "Permission.tabular": {
            "name": "tabular",
            "location": 23,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/user.py": {
        "User.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "email": [],
                "roles": [],
                "text": []
            }
        },
        "User.domain": {
            "name": "domain",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.__repr__": {
            "name": "__repr__",
            "location": 26,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "User.parse": {
            "name": "parse",
            "location": 32,
            "return": [
                "_TUser"
            ],
            "arguments": {
                "cls": [
                    "Type[_TUser]"
                ],
                "json": []
            }
        },
        "User.tabular": {
            "name": "tabular",
            "location": 47,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        }
    },
    "python-alerta-client-master/alertaclient/models/__init__.py": {},
    "python-alerta-client-master/examples/send.py": {},
    "python-alerta-client-master/tests/__init__.py": {},
    "python-alerta-client-master/tests/integration/test_alerts.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_alert": {
            "name": "test_alert",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_alert_notes": {
            "name": "test_alert_notes",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_blackouts.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_blackout": {
            "name": "test_blackout",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_customers.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_customer": {
            "name": "test_customer",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_groups.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_group": {
            "name": "test_group",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_heartbeats.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_heartbeat": {
            "name": "test_heartbeat",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_history.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_alert": {
            "name": "test_alert",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_history": {
            "name": "test_history",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_keys.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_key": {
            "name": "test_key",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_notes.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_notes": {
            "name": "test_notes",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_permissions.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_permission": {
            "name": "test_permission",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/test_users.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_user": {
            "name": "test_user",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/integration/__init__.py": {},
    "python-alerta-client-master/tests/unit/test_alerts.py": {
        "AlertTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlertTestCase.test_alert": {
            "name": "test_alert",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_blackouts.py": {
        "BlackoutTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BlackoutTestCase.test_blackout": {
            "name": "test_blackout",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_commands.py": {
        "CommandsTestCase.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandsTestCase.test_heartbeat_cmd": {
            "name": "test_heartbeat_cmd",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "CommandsTestCase.test_heartbeats_cmd": {
            "name": "test_heartbeats_cmd",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "CommandsTestCase.test_whoami_cmd": {
            "name": "test_whoami_cmd",
            "location": 190,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_config.py": {
        "mod_env": {
            "name": "mod_env",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "CommandsTestCase.setUp": {
            "name": "setUp",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommandsTestCase.test_env_vars": {
            "name": "test_env_vars",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_customers.py": {
        "CustomerTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomerTestCase.test_customer": {
            "name": "test_customer",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_groups.py": {
        "GroupTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GroupTestCase.test_group": {
            "name": "test_group",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_heartbeats.py": {
        "HeartbeatTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HeartbeatTestCase.test_heartbeat": {
            "name": "test_heartbeat",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_history.py": {
        "HistoryTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HistoryTestCase.test_history": {
            "name": "test_history",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_http_client.py": {
        "HttpClientTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HttpClientTestCase.test_query_string": {
            "name": "test_query_string",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_keys.py": {
        "ApiKeyTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApiKeyTestCase.test_key": {
            "name": "test_key",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_notes.py": {
        "NotesTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NotesTestCase.test_add_note": {
            "name": "test_add_note",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_permissions.py": {
        "PermissionTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "PermissionTestCase.test_permission": {
            "name": "test_permission",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_remoteconfig.py": {
        "RemoteConfigTestCase.setUp": {
            "name": "setUp",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoteConfigTestCase.test_config_success": {
            "name": "test_config_success",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "RemoteConfigTestCase.test_config_timeout": {
            "name": "test_config_timeout",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "RemoteConfigTestCase.test_config_not_found": {
            "name": "test_config_not_found",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "RemoteConfigTestCase.test_config_not_json": {
            "name": "test_config_not_json",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/test_users.py": {
        "UserTestCase.setUp": {
            "name": "setUp",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserTestCase.test_user": {
            "name": "test_user",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        }
    },
    "python-alerta-client-master/tests/unit/__init__.py": {}
}
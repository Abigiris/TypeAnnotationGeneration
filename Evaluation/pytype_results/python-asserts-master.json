{
    "python-asserts-master/test_asserts.py": {
        "_assert_raises_assertion": {
            "name": "_assert_raises_assertion",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "expected_message": []
            }
        },
        "Box.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initial_value": []
            }
        },
        "_DummyObject.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "_DummyObject.__repr__": {
            "name": "__repr__",
            "location": 59,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_fail__default_message": {
            "name": "test_fail__default_message",
            "location": 96,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_fail__with_message": {
            "name": "test_fail__with_message",
            "location": 100,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_true__truthy_value": {
            "name": "test_assert_true__truthy_value",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_true__falsy_value__default_message": {
            "name": "test_assert_true__falsy_value__default_message",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_true__falsy_value__custom_message": {
            "name": "test_assert_true__falsy_value__custom_message",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_false__falsy_value": {
            "name": "test_assert_false__falsy_value",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_false__truthy_value__default_message": {
            "name": "test_assert_false__truthy_value__default_message",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_false__truthy_value__custom_message": {
            "name": "test_assert_false__truthy_value__custom_message",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_boolean_true__true": {
            "name": "test_assert_boolean_true__true",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_boolean_true__false__custom_message": {
            "name": "test_assert_boolean_true__false__custom_message",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_boolean_true__truthy__default_message": {
            "name": "test_assert_boolean_true__truthy__default_message",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_boolean_false__false": {
            "name": "test_assert_boolean_false__false",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_boolean_false__true__default_message": {
            "name": "test_assert_boolean_false__true__default_message",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_boolean_false__falsy__custom_message": {
            "name": "test_assert_boolean_false__falsy__custom_message",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_none__none": {
            "name": "test_assert_is_none__none",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_none__string__default_message": {
            "name": "test_assert_is_none__string__default_message",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_none__int__custom_message": {
            "name": "test_assert_is_none__int__custom_message",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_not_none__string": {
            "name": "test_assert_is_not_none__string",
            "location": 171,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_not_none__none__default_message": {
            "name": "test_assert_is_not_none__none__default_message",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_not_none__none__custom_message": {
            "name": "test_assert_is_not_none__none__custom_message",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_equal__equal_strings": {
            "name": "test_assert_equal__equal_strings",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_equal__equal_objects": {
            "name": "test_assert_equal__equal_objects",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_equal__not_equal__default_message": {
            "name": "test_assert_equal__not_equal__default_message",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_equal__not_equal__custom_message": {
            "name": "test_assert_equal__not_equal__custom_message",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_equal__dict": {
            "name": "test_assert_equal__dict",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_equal__not_equal": {
            "name": "test_assert_not_equal__not_equal",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_equal__equal__default_message": {
            "name": "test_assert_not_equal__equal__default_message",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_equal__equal__custom_message": {
            "name": "test_assert_not_equal__equal__custom_message",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__same": {
            "name": "test_assert_almost_equal__same",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__similar__defaults": {
            "name": "test_assert_almost_equal__similar__defaults",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__similar__places": {
            "name": "test_assert_almost_equal__similar__places",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__similar__delta": {
            "name": "test_assert_almost_equal__similar__delta",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__similar__delta_reverse": {
            "name": "test_assert_almost_equal__similar__delta_reverse",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__not_similar__default_message": {
            "name": "test_assert_almost_equal__not_similar__default_message",
            "location": 236,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__not_similar__places__default_message": {
            "name": "test_assert_almost_equal__not_similar__places__default_message",
            "location": 240,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__not_similar__delta__default_message": {
            "name": "test_assert_almost_equal__not_similar__delta__default_message",
            "location": 244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__not_similar__delta_reverse": {
            "name": "test_assert_almost_equal__not_similar__delta_reverse",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__not_similar__custom_message": {
            "name": "test_assert_almost_equal__not_similar__custom_message",
            "location": 252,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__not_similar__places__custom_message": {
            "name": "test_assert_almost_equal__not_similar__places__custom_message",
            "location": 258,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__not_similar__delta__custom_message": {
            "name": "test_assert_almost_equal__not_similar__delta__custom_message",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__wrong_types": {
            "name": "test_assert_almost_equal__wrong_types",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__places_and_delta": {
            "name": "test_assert_almost_equal__places_and_delta",
            "location": 284,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__delta_eq_0": {
            "name": "test_assert_almost_equal__delta_eq_0",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_almost_equal__delta_lt_0": {
            "name": "test_assert_almost_equal__delta_lt_0",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__same": {
            "name": "test_assert_not_almost_equal__same",
            "location": 310,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__similar__defaults": {
            "name": "test_assert_not_almost_equal__similar__defaults",
            "location": 314,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__similar__places": {
            "name": "test_assert_not_almost_equal__similar__places",
            "location": 318,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__similar__delta": {
            "name": "test_assert_not_almost_equal__similar__delta",
            "location": 322,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__similar__delta_reverse": {
            "name": "test_assert_not_almost_equal__similar__delta_reverse",
            "location": 326,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__not_similar": {
            "name": "test_assert_not_almost_equal__not_similar",
            "location": 330,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__not_similar__delta": {
            "name": "test_assert_not_almost_equal__not_similar__delta",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__not_similar__delta_reverse": {
            "name": "test_assert_not_almost_equal__not_similar__delta_reverse",
            "location": 336,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__similar__custom_message": {
            "name": "test_assert_not_almost_equal__similar__custom_message",
            "location": 339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__similar__places__custom_message": {
            "name": "test_assert_not_almost_equal__similar__places__custom_message",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__similar__delta__custom_message": {
            "name": "test_assert_not_almost_equal__similar__delta__custom_message",
            "location": 360,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__wrong_types": {
            "name": "test_assert_not_almost_equal__wrong_types",
            "location": 369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_almost_equal__places_and_delta": {
            "name": "test_assert_not_almost_equal__places_and_delta",
            "location": 377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_not_assert_almost_equal__delta_eq_0": {
            "name": "test_not_assert_almost_equal__delta_eq_0",
            "location": 385,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_not_assert_almost_equal__delta_lt_0": {
            "name": "test_not_assert_almost_equal__delta_lt_0",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__empty_dicts": {
            "name": "test_assert_dict_equal__empty_dicts",
            "location": 403,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__dicts_are_equal": {
            "name": "test_assert_dict_equal__dicts_are_equal",
            "location": 406,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__one_key_missing_from_right": {
            "name": "test_assert_dict_equal__one_key_missing_from_right",
            "location": 409,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__multiple_keys_missing_from_right": {
            "name": "test_assert_dict_equal__multiple_keys_missing_from_right",
            "location": 413,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__one_key_missing_from_left": {
            "name": "test_assert_dict_equal__one_key_missing_from_left",
            "location": 419,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__multiple_keys_missing_from_left": {
            "name": "test_assert_dict_equal__multiple_keys_missing_from_left",
            "location": 423,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__values_do_not_match": {
            "name": "test_assert_dict_equal__values_do_not_match",
            "location": 427,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__not_string_keys": {
            "name": "test_assert_dict_equal__not_string_keys",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__message_precedence": {
            "name": "test_assert_dict_equal__message_precedence",
            "location": 441,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__custom_key_message": {
            "name": "test_assert_dict_equal__custom_key_message",
            "location": 452,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_equal__custom_value_message": {
            "name": "test_assert_dict_equal__custom_value_message",
            "location": 464,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__empty_dicts": {
            "name": "test_assert_dict_superset__empty_dicts",
            "location": 477,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__dicts_are_equal": {
            "name": "test_assert_dict_superset__dicts_are_equal",
            "location": 480,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__dicts_is_superset": {
            "name": "test_assert_dict_superset__dicts_is_superset",
            "location": 483,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__one_key_missing_from_right": {
            "name": "test_assert_dict_superset__one_key_missing_from_right",
            "location": 486,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__multiple_keys_missing_from_right": {
            "name": "test_assert_dict_superset__multiple_keys_missing_from_right",
            "location": 490,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__values_do_not_match": {
            "name": "test_assert_dict_superset__values_do_not_match",
            "location": 496,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__not_string_keys": {
            "name": "test_assert_dict_superset__not_string_keys",
            "location": 500,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__message_precedence": {
            "name": "test_assert_dict_superset__message_precedence",
            "location": 506,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__custom_key_message": {
            "name": "test_assert_dict_superset__custom_key_message",
            "location": 510,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_dict_superset__custom_value_message": {
            "name": "test_assert_dict_superset__custom_value_message",
            "location": 521,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_less": {
            "name": "test_assert_less",
            "location": 534,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_less_equal": {
            "name": "test_assert_less_equal",
            "location": 545,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_greater": {
            "name": "test_assert_greater",
            "location": 557,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_greater_equal": {
            "name": "test_assert_greater_equal",
            "location": 568,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_regex__matches_string": {
            "name": "test_assert_regex__matches_string",
            "location": 582,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_regex__matches_regex": {
            "name": "test_assert_regex__matches_regex",
            "location": 585,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_regex__does_not_match_string__default_message": {
            "name": "test_assert_regex__does_not_match_string__default_message",
            "location": 589,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_regex__does_not_match_regex__default_message": {
            "name": "test_assert_regex__does_not_match_regex__default_message",
            "location": 595,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_regex__does_not_match_string__custom_message": {
            "name": "test_assert_regex__does_not_match_string__custom_message",
            "location": 602,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_regex__does_not_match_regex__custom_message": {
            "name": "test_assert_regex__does_not_match_regex__custom_message",
            "location": 611,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is__same": {
            "name": "test_assert_is__same",
            "location": 621,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is__not_same__default_message": {
            "name": "test_assert_is__not_same__default_message",
            "location": 625,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is__equal_but_not_same__custom_message": {
            "name": "test_assert_is__equal_but_not_same__custom_message",
            "location": 629,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_not__not_same": {
            "name": "test_assert_is_not__not_same",
            "location": 637,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_not__same__default_message": {
            "name": "test_assert_is_not__same__default_message",
            "location": 642,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_not__same__custom_message": {
            "name": "test_assert_is_not__same__custom_message",
            "location": 647,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_in__contains": {
            "name": "test_assert_in__contains",
            "location": 654,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_in__does_not_contain__default_message": {
            "name": "test_assert_in__does_not_contain__default_message",
            "location": 657,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_in__does_not_contain__custom_message": {
            "name": "test_assert_in__does_not_contain__custom_message",
            "location": 661,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_in__does_not_contain": {
            "name": "test_assert_not_in__does_not_contain",
            "location": 667,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_in__does_contain__default_message": {
            "name": "test_assert_not_in__does_contain__default_message",
            "location": 670,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_in__does_contain__custom_message": {
            "name": "test_assert_not_in__does_contain__custom_message",
            "location": 674,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__equal": {
            "name": "test_assert_count_equal__equal",
            "location": 680,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__equal_differing_types": {
            "name": "test_assert_count_equal__equal_differing_types",
            "location": 684,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__ignore_order": {
            "name": "test_assert_count_equal__ignore_order",
            "location": 688,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__missing_from_sequence1": {
            "name": "test_assert_count_equal__missing_from_sequence1",
            "location": 692,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__multiple_missing_from_sequence1": {
            "name": "test_assert_count_equal__multiple_missing_from_sequence1",
            "location": 696,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__respect_duplicates": {
            "name": "test_assert_count_equal__respect_duplicates",
            "location": 700,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__missing_from_sequence2": {
            "name": "test_assert_count_equal__missing_from_sequence2",
            "location": 704,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__missing_from_both": {
            "name": "test_assert_count_equal__missing_from_both",
            "location": 708,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_count_equal__custom_message": {
            "name": "test_assert_count_equal__custom_message",
            "location": 713,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_between__within_range": {
            "name": "test_assert_between__within_range",
            "location": 719,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_between__too_low__default_message": {
            "name": "test_assert_between__too_low__default_message",
            "location": 724,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_between__too_high__custom_message": {
            "name": "test_assert_between__too_high__custom_message",
            "location": 728,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest._is_instance_message": {
            "name": "_is_instance_message",
            "location": 734,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "expr": [],
                "expected_type": [],
                "real_type": []
            }
        },
        "AssertTest.test_assert_is_instance__single_type": {
            "name": "test_assert_is_instance__single_type",
            "location": 743,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_instance__multiple_types": {
            "name": "test_assert_is_instance__multiple_types",
            "location": 747,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_instance__default_message": {
            "name": "test_assert_is_instance__default_message",
            "location": 750,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_instance__custom_message_single_type": {
            "name": "test_assert_is_instance__custom_message_single_type",
            "location": 757,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_is_instance__custom_message_multiple_types": {
            "name": "test_assert_is_instance__custom_message_multiple_types",
            "location": 766,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest._not_is_instance_message": {
            "name": "_not_is_instance_message",
            "location": 781,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "AssertTest.test_assert_not_is_instance__single_type": {
            "name": "test_assert_not_is_instance__single_type",
            "location": 792,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_is_instance__multiple_types": {
            "name": "test_assert_not_is_instance__multiple_types",
            "location": 795,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_is_instance__default_message": {
            "name": "test_assert_not_is_instance__default_message",
            "location": 798,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_is_instance__custom_message__single_type": {
            "name": "test_assert_not_is_instance__custom_message__single_type",
            "location": 804,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_not_is_instance__custom_message__multiple_types": {
            "name": "test_assert_not_is_instance__custom_message__multiple_types",
            "location": 811,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_has_attr__has_attribute": {
            "name": "test_assert_has_attr__has_attribute",
            "location": 820,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_has_attr__does_not_have_attribute__default_message": {
            "name": "test_assert_has_attr__does_not_have_attribute__default_message",
            "location": 824,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_has_attr__does_not_have_attribute__custom_message": {
            "name": "test_assert_has_attr__does_not_have_attribute__custom_message",
            "location": 829,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now__close": {
            "name": "test_assert_datetime_about_now__close",
            "location": 837,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now__none__default_message": {
            "name": "test_assert_datetime_about_now__none__default_message",
            "location": 840,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now__none__custom_message": {
            "name": "test_assert_datetime_about_now__none__custom_message",
            "location": 845,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now__too_low": {
            "name": "test_assert_datetime_about_now__too_low",
            "location": 853,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now__too_high": {
            "name": "test_assert_datetime_about_now__too_high",
            "location": 858,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now__default_message": {
            "name": "test_assert_datetime_about_now__default_message",
            "location": 863,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now__custom_message": {
            "name": "test_assert_datetime_about_now__custom_message",
            "location": 872,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now_utc__close": {
            "name": "test_assert_datetime_about_now_utc__close",
            "location": 886,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now_utc__none__default_message": {
            "name": "test_assert_datetime_about_now_utc__none__default_message",
            "location": 889,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now_utc__none__custom_message": {
            "name": "test_assert_datetime_about_now_utc__none__custom_message",
            "location": 894,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now_utc__too_low": {
            "name": "test_assert_datetime_about_now_utc__too_low",
            "location": 902,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now_utc__too_high": {
            "name": "test_assert_datetime_about_now_utc__too_high",
            "location": 907,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now_utc__default_message": {
            "name": "test_assert_datetime_about_now_utc__default_message",
            "location": 912,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_datetime_about_now_utc__custom_message": {
            "name": "test_assert_datetime_about_now_utc__custom_message",
            "location": 921,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__raises_right_exception": {
            "name": "test_assert_raises__raises_right_exception",
            "location": 935,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__exc_val": {
            "name": "test_assert_raises__exc_val",
            "location": 939,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__exc_val_within_context": {
            "name": "test_assert_raises__exc_val_within_context",
            "location": 945,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__raises_subclass": {
            "name": "test_assert_raises__raises_subclass",
            "location": 950,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__exception_not_raised__default_message": {
            "name": "test_assert_raises__exception_not_raised__default_message",
            "location": 957,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__exception_not_raised__custom_message": {
            "name": "test_assert_raises__exception_not_raised__custom_message",
            "location": 962,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__wrong_exception_raised": {
            "name": "test_assert_raises__wrong_exception_raised",
            "location": 970,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__add_test_called": {
            "name": "test_assert_raises__add_test_called",
            "location": 981,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises__add_test_not_called": {
            "name": "test_assert_raises__add_test_not_called",
            "location": 993,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__raises_right_exception": {
            "name": "test_assert_raises_regex__raises_right_exception",
            "location": 1006,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__raises_right_exception__compiled": {
            "name": "test_assert_raises_regex__raises_right_exception__compiled",
            "location": 1010,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__exception_not_raised__default_message": {
            "name": "test_assert_raises_regex__exception_not_raised__default_message",
            "location": 1014,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__exception_not_raised__custom_message": {
            "name": "test_assert_raises_regex__exception_not_raised__custom_message",
            "location": 1019,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__no_message__default_message": {
            "name": "test_assert_raises_regex__no_message__default_message",
            "location": 1026,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__no_message__custom_message": {
            "name": "test_assert_raises_regex__no_message__custom_message",
            "location": 1031,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__wrong_exception_raised": {
            "name": "test_assert_raises_regex__wrong_exception_raised",
            "location": 1038,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__wrong_error__default_message": {
            "name": "test_assert_raises_regex__wrong_error__default_message",
            "location": 1049,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__wrong_error__pattern_default_message": {
            "name": "test_assert_raises_regex__wrong_error__pattern_default_message",
            "location": 1054,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_regex__wrong_error__custom_message": {
            "name": "test_assert_raises_regex__wrong_error__custom_message",
            "location": 1059,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_errno__right_errno": {
            "name": "test_assert_raises_errno__right_errno",
            "location": 1071,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_errno__no_exception_raised__default_message": {
            "name": "test_assert_raises_errno__no_exception_raised__default_message",
            "location": 1075,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_errno__no_exception_raised__custom_message": {
            "name": "test_assert_raises_errno__no_exception_raised__custom_message",
            "location": 1080,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_errno__wrong_class_raised": {
            "name": "test_assert_raises_errno__wrong_class_raised",
            "location": 1090,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_errno__wrong_errno__default_message": {
            "name": "test_assert_raises_errno__wrong_errno__default_message",
            "location": 1105,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_raises_errno__wrong_errno__custom_message": {
            "name": "test_assert_raises_errno__wrong_errno__custom_message",
            "location": 1110,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_succeeds__no_exception_raised": {
            "name": "test_assert_succeeds__no_exception_raised",
            "location": 1122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_succeeds__expected_exception__default_message": {
            "name": "test_assert_succeeds__expected_exception__default_message",
            "location": 1126,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_succeeds__expected_exception__custom_message": {
            "name": "test_assert_succeeds__expected_exception__custom_message",
            "location": 1131,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_succeeds__unexpected_exception": {
            "name": "test_assert_succeeds__unexpected_exception",
            "location": 1142,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__default_message": {
            "name": "test_assert_warns__default_message",
            "location": 1153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__custom_message": {
            "name": "test_assert_warns__custom_message",
            "location": 1158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__warned": {
            "name": "test_assert_warns__warned",
            "location": 1165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__not_warned": {
            "name": "test_assert_warns__not_warned",
            "location": 1170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__wrong_type": {
            "name": "test_assert_warns__wrong_type",
            "location": 1175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__multiple_warnings": {
            "name": "test_assert_warns__multiple_warnings",
            "location": 1180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__warning_handler_deinstalled_on_success": {
            "name": "test_assert_warns__warning_handler_deinstalled_on_success",
            "location": 1187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__warning_handler_deinstalled_on_failure": {
            "name": "test_assert_warns__warning_handler_deinstalled_on_failure",
            "location": 1196,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__add_test_called": {
            "name": "test_assert_warns__add_test_called",
            "location": 1208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns__add_test_not_called": {
            "name": "test_assert_warns__add_test_not_called",
            "location": 1221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__warned": {
            "name": "test_assert_warns_regex__warned",
            "location": 1234,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__warning_text_matches_in_the_middle": {
            "name": "test_assert_warns_regex__warning_text_matches_in_the_middle",
            "location": 1239,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__not_warned": {
            "name": "test_assert_warns_regex__not_warned",
            "location": 1244,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__wrong_type": {
            "name": "test_assert_warns_regex__wrong_type",
            "location": 1249,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__wrong_message": {
            "name": "test_assert_warns_regex__wrong_message",
            "location": 1254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__multiple_warnings": {
            "name": "test_assert_warns_regex__multiple_warnings",
            "location": 1259,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__warning_handler_deinstalled_on_success": {
            "name": "test_assert_warns_regex__warning_handler_deinstalled_on_success",
            "location": 1268,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__warning_handler_deinstalled_on_failure": {
            "name": "test_assert_warns_regex__warning_handler_deinstalled_on_failure",
            "location": 1277,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__not_issued__default_message": {
            "name": "test_assert_warns_regex__not_issued__default_message",
            "location": 1289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__not_issued__custom_message": {
            "name": "test_assert_warns_regex__not_issued__custom_message",
            "location": 1296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__wrong_message__default_message": {
            "name": "test_assert_warns_regex__wrong_message__default_message",
            "location": 1306,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_warns_regex__wrong_message__custom_message": {
            "name": "test_assert_warns_regex__wrong_message__custom_message",
            "location": 1313,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__different_types": {
            "name": "test_assert_json_subset__different_types",
            "location": 1325,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__empty_objects": {
            "name": "test_assert_json_subset__empty_objects",
            "location": 1329,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__objects_equal": {
            "name": "test_assert_json_subset__objects_equal",
            "location": 1333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__one_key_missing_from_first_object": {
            "name": "test_assert_json_subset__one_key_missing_from_first_object",
            "location": 1339,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__one_key_missing_from_second_object": {
            "name": "test_assert_json_subset__one_key_missing_from_second_object",
            "location": 1343,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__multiple_keys_missing_from_second_object": {
            "name": "test_assert_json_subset__multiple_keys_missing_from_second_object",
            "location": 1347,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__value_differs": {
            "name": "test_assert_json_subset__value_differs",
            "location": 1355,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__empty_lists": {
            "name": "test_assert_json_subset__empty_lists",
            "location": 1359,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__different_sized_lists": {
            "name": "test_assert_json_subset__different_sized_lists",
            "location": 1363,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__different_list_values": {
            "name": "test_assert_json_subset__different_list_values",
            "location": 1369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__fundamental_types_differ": {
            "name": "test_assert_json_subset__fundamental_types_differ",
            "location": 1373,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__fundamental_values_differ": {
            "name": "test_assert_json_subset__fundamental_values_differ",
            "location": 1377,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__none": {
            "name": "test_assert_json_subset__none",
            "location": 1381,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__compare_int_and_float": {
            "name": "test_assert_json_subset__compare_int_and_float",
            "location": 1389,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__unsupported_type": {
            "name": "test_assert_json_subset__unsupported_type",
            "location": 1394,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__subtypes": {
            "name": "test_assert_json_subset__subtypes",
            "location": 1399,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__second_is_string": {
            "name": "test_assert_json_subset__second_is_string",
            "location": 1404,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__second_is_unsupported_json_string": {
            "name": "test_assert_json_subset__second_is_unsupported_json_string",
            "location": 1408,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__second_is_invalid_json_string": {
            "name": "test_assert_json_subset__second_is_invalid_json_string",
            "location": 1415,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__second_is_bytes": {
            "name": "test_assert_json_subset__second_is_bytes",
            "location": 1423,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__second_is_latin1_bytes": {
            "name": "test_assert_json_subset__second_is_latin1_bytes",
            "location": 1427,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__invalid_type": {
            "name": "test_assert_json_subset__invalid_type",
            "location": 1431,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__element_name_not_str": {
            "name": "test_assert_json_subset__element_name_not_str",
            "location": 1437,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertTest.test_assert_json_subset__existence_check": {
            "name": "test_assert_json_subset__existence_check",
            "location": 1443,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_assert_raises_assertion.Context.__enter__": {
            "name": "__enter__",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_assert_raises_assertion.Context.__exit__": {
            "name": "__exit__",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        },
        "AssertTest.test_assert_raises__add_test_called.extra_test": {
            "name": "extra_test",
            "location": 984,
            "return": [],
            "arguments": {
                "exc": []
            }
        },
        "AssertTest.test_assert_raises__add_test_not_called.extra_test": {
            "name": "extra_test",
            "location": 996,
            "return": [],
            "arguments": {
                "_": []
            }
        },
        "AssertTest.test_assert_warns__add_test_called.extra_test": {
            "name": "extra_test",
            "location": 1211,
            "return": [],
            "arguments": {
                "warning": []
            }
        },
        "AssertTest.test_assert_warns__add_test_not_called.extra_test": {
            "name": "extra_test",
            "location": 1224,
            "return": [],
            "arguments": {
                "_": []
            }
        },
        "AssertTest.test_assert_equal__equal_objects.MyClass.__eq__": {
            "name": "__eq__",
            "location": 189,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "python-asserts-master/asserts/__init__.py": {
        "fail": {
            "name": "fail",
            "location": 31,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "msg": []
            }
        },
        "assert_true": {
            "name": "assert_true",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "expr": [],
                "msg_fmt": []
            }
        },
        "assert_false": {
            "name": "assert_false",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "expr": [],
                "msg_fmt": []
            }
        },
        "assert_boolean_true": {
            "name": "assert_boolean_true",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "expr": [],
                "msg_fmt": []
            }
        },
        "assert_boolean_false": {
            "name": "assert_boolean_false",
            "location": 100,
            "return": [
                "None"
            ],
            "arguments": {
                "expr": [],
                "msg_fmt": []
            }
        },
        "assert_is_none": {
            "name": "assert_is_none",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "expr": [],
                "msg_fmt": []
            }
        },
        "assert_is_not_none": {
            "name": "assert_is_not_none",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "expr": [],
                "msg_fmt": []
            }
        },
        "assert_equal": {
            "name": "assert_equal",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_not_equal": {
            "name": "assert_not_equal",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_almost_equal": {
            "name": "assert_almost_equal",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": [],
                "places": [],
                "delta": []
            }
        },
        "assert_not_almost_equal": {
            "name": "assert_not_almost_equal",
            "location": 249,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": [],
                "places": [],
                "delta": []
            }
        },
        "assert_dict_equal": {
            "name": "assert_dict_equal",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "key_msg_fmt": [],
                "value_msg_fmt": []
            }
        },
        "assert_dict_superset": {
            "name": "assert_dict_superset",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "key_msg_fmt": [],
                "value_msg_fmt": []
            }
        },
        "assert_less": {
            "name": "assert_less",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_less_equal": {
            "name": "assert_less_equal",
            "location": 468,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_greater": {
            "name": "assert_greater",
            "location": 489,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_greater_equal": {
            "name": "assert_greater_equal",
            "location": 509,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_regex": {
            "name": "assert_regex",
            "location": 530,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [],
                "regex": [],
                "msg_fmt": []
            }
        },
        "assert_is": {
            "name": "assert_is",
            "location": 554,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_is_not": {
            "name": "assert_is_not",
            "location": 576,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_in": {
            "name": "assert_in",
            "location": 598,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_not_in": {
            "name": "assert_not_in",
            "location": 618,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": [],
                "msg_fmt": []
            }
        },
        "assert_count_equal": {
            "name": "assert_count_equal",
            "location": 637,
            "return": [
                "None"
            ],
            "arguments": {
                "sequence1": [],
                "sequence2": [],
                "msg_fmt": []
            }
        },
        "assert_between": {
            "name": "assert_between",
            "location": 696,
            "return": [
                "None"
            ],
            "arguments": {
                "lower_bound": [],
                "upper_bound": [],
                "expr": [],
                "msg_fmt": []
            }
        },
        "assert_is_instance": {
            "name": "assert_is_instance",
            "location": 724,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "cls": [],
                "msg_fmt": []
            }
        },
        "assert_not_is_instance": {
            "name": "assert_not_is_instance",
            "location": 747,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "cls": [],
                "msg_fmt": []
            }
        },
        "assert_has_attr": {
            "name": "assert_has_attr",
            "location": 768,
            "return": [
                "None"
            ],
            "arguments": {
                "obj": [],
                "attribute": [],
                "msg_fmt": []
            }
        },
        "assert_datetime_about_now": {
            "name": "assert_datetime_about_now",
            "location": 791,
            "return": [
                "None"
            ],
            "arguments": {
                "actual": [],
                "msg_fmt": []
            }
        },
        "assert_datetime_about_now_utc": {
            "name": "assert_datetime_about_now_utc",
            "location": 817,
            "return": [
                "None"
            ],
            "arguments": {
                "actual": [],
                "msg_fmt": []
            }
        },
        "assert_raises": {
            "name": "assert_raises",
            "location": 962,
            "return": [
                "AssertRaisesContext"
            ],
            "arguments": {
                "exception": [],
                "msg_fmt": []
            }
        },
        "assert_raises_regex": {
            "name": "assert_raises_regex",
            "location": 992,
            "return": [
                "AssertRaisesRegexContext"
            ],
            "arguments": {
                "exception": [],
                "regex": [],
                "msg_fmt": []
            }
        },
        "assert_raises_errno": {
            "name": "assert_raises_errno",
            "location": 1047,
            "return": [
                "AssertRaisesErrnoContext"
            ],
            "arguments": {
                "exception": [],
                "errno": [],
                "msg_fmt": []
            }
        },
        "assert_succeeds": {
            "name": "assert_succeeds",
            "location": 1087,
            "return": [
                "Any"
            ],
            "arguments": {
                "exception": [],
                "msg_fmt": []
            }
        },
        "assert_warns": {
            "name": "assert_warns",
            "location": 1229,
            "return": [
                "AssertWarnsContext"
            ],
            "arguments": {
                "warning_type": [],
                "msg_fmt": []
            }
        },
        "assert_warns_regex": {
            "name": "assert_warns_regex",
            "location": 1259,
            "return": [
                "AssertWarnsRegexContext"
            ],
            "arguments": {
                "warning_type": [],
                "regex": [],
                "msg_fmt": []
            }
        },
        "assert_json_subset": {
            "name": "assert_json_subset",
            "location": 1296,
            "return": [
                "None"
            ],
            "arguments": {
                "first": [],
                "second": []
            }
        },
        "assert_count_equal.compare": {
            "name": "compare",
            "location": 663,
            "return": [],
            "arguments": {}
        },
        "assert_count_equal.build_message": {
            "name": "build_message",
            "location": 673,
            "return": [],
            "arguments": {}
        },
        "AssertRaisesContext.__init__": {
            "name": "__init__",
            "location": 880,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exception": [],
                "msg_fmt": []
            }
        },
        "AssertRaisesContext.__enter__": {
            "name": "__enter__",
            "location": 888,
            "return": [
                "_TAssertRaisesContext@@AssertRaisesContext@@"
            ],
            "arguments": {
                "self": [
                    "_TAssertRaisesContext@@AssertRaisesContext@@"
                ]
            }
        },
        "AssertRaisesContext.__exit__": {
            "name": "__exit__",
            "location": 891,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_val": [
                    "Optional[BaseException]"
                ],
                "exc_tb": []
            }
        },
        "AssertRaisesContext.format_message": {
            "name": "format_message",
            "location": 902,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "default_msg": []
            }
        },
        "AssertRaisesContext.add_test": {
            "name": "add_test",
            "location": 909,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cb": []
            }
        },
        "AssertRaisesContext.exc_val": {
            "name": "exc_val",
            "location": 920,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AssertRaisesRegexContext.__init__": {
            "name": "__init__",
            "location": 930,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exception": [],
                "pattern": [],
                "msg_fmt": []
            }
        },
        "AssertRaisesRegexContext.format_message": {
            "name": "format_message",
            "location": 934,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "default_msg": []
            }
        },
        "AssertRaisesErrnoContext.__init__": {
            "name": "__init__",
            "location": 948,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exception": [],
                "expected_errno": [],
                "msg_fmt": []
            }
        },
        "AssertRaisesErrnoContext.format_message": {
            "name": "format_message",
            "location": 952,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "default_msg": []
            }
        },
        "assert_raises_regex.test": {
            "name": "test",
            "location": 1016,
            "return": [],
            "arguments": {
                "exc": []
            }
        },
        "assert_raises_errno.check_errno": {
            "name": "check_errno",
            "location": 1069,
            "return": [],
            "arguments": {
                "exc": []
            }
        },
        "AssertWarnsContext.__init__": {
            "name": "__init__",
            "location": 1168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "warning_class": [],
                "msg_fmt": []
            }
        },
        "AssertWarnsContext.__enter__": {
            "name": "__enter__",
            "location": 1175,
            "return": [
                "_TAssertWarnsContext@@AssertWarnsContext@@"
            ],
            "arguments": {
                "self": [
                    "_TAssertWarnsContext@@AssertWarnsContext@@"
                ]
            }
        },
        "AssertWarnsContext.__exit__": {
            "name": "__exit__",
            "location": 1180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_val": [
                    "Optional[BaseException]"
                ],
                "exc_tb": []
            }
        },
        "AssertWarnsContext.format_message": {
            "name": "format_message",
            "location": 1185,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "AssertWarnsContext._is_expected_warning": {
            "name": "_is_expected_warning",
            "location": 1193,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "warning": []
            }
        },
        "AssertWarnsContext.add_test": {
            "name": "add_test",
            "location": 1198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cb": []
            }
        },
        "AssertWarnsRegexContext.__init__": {
            "name": "__init__",
            "location": 1213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "warning_class": [],
                "pattern": [],
                "msg_fmt": []
            }
        },
        "AssertWarnsRegexContext.format_message": {
            "name": "format_message",
            "location": 1217,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "assert_warns_regex.test": {
            "name": "test",
            "location": 1282,
            "return": [],
            "arguments": {
                "warning": []
            }
        },
        "_JSONComparer.__init__": {
            "name": "__init__",
            "location": 1369,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "expected": [],
                "actual": []
            }
        },
        "_JSONComparer.assert_": {
            "name": "assert_",
            "location": 1374,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._assert_types_are_equal": {
            "name": "_assert_types_are_equal",
            "location": 1383,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._types_differ": {
            "name": "_types_differ",
            "location": 1387,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._assert_dicts_equal": {
            "name": "_assert_dicts_equal",
            "location": 1398,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._assert_all_expected_keys_in_actual_dict": {
            "name": "_assert_all_expected_keys_in_actual_dict",
            "location": 1408,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._assert_no_wrong_keys": {
            "name": "_assert_no_wrong_keys",
            "location": 1413,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._assert_dict_values_equal": {
            "name": "_assert_dict_values_equal",
            "location": 1422,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._expected_key_names": {
            "name": "_expected_key_names",
            "location": 1428,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._assert_arrays_equal": {
            "name": "_assert_arrays_equal",
            "location": 1437,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._assert_json_value_equals_with_item": {
            "name": "_assert_json_value_equals_with_item",
            "location": 1443,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "_JSONComparer._assert_fundamental_values_equal": {
            "name": "_assert_fundamental_values_equal",
            "location": 1449,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._raise_different_values": {
            "name": "_raise_different_values",
            "location": 1453,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._raise_different_sizes": {
            "name": "_raise_different_sizes",
            "location": 1458,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONComparer._raise_missing_element": {
            "name": "_raise_missing_element",
            "location": 1466,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "keys": []
            }
        },
        "_JSONComparer._raise_assertion_error": {
            "name": "_raise_assertion_error",
            "location": 1480,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "format_": []
            }
        },
        "_JSONPath.__init__": {
            "name": "__init__",
            "location": 1492,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "_JSONPath.__str__": {
            "name": "__str__",
            "location": 1495,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "_JSONPath.append": {
            "name": "append",
            "location": 1498,
            "return": [
                "_T_JSONPath@@_JSONPath@@"
            ],
            "arguments": {
                "self": [
                    "_T_JSONPath@@_JSONPath@@"
                ],
                "item": []
            }
        },
        "Exists.__init__": {
            "name": "__init__",
            "location": 1504,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "member_name": []
            }
        },
        "assert_succeeds._AssertSucceeds.__enter__": {
            "name": "__enter__",
            "location": 1121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "assert_succeeds._AssertSucceeds.__exit__": {
            "name": "__exit__",
            "location": 1124,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_val": [],
                "exc_tb": []
            }
        }
    }
}
{
    "python-bulletproofs-master/src/main.py": {},
    "python-bulletproofs-master/src/__init__.py": {},
    "python-bulletproofs-master/src/innerproduct/inner_product_prover.py": {
        "NIProver.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "g": [],
                "h": [],
                "u": [],
                "P": [],
                "c": [],
                "a": [],
                "b": [],
                "group": [],
                "seed": []
            }
        },
        "NIProver.prove": {
            "name": "prove",
            "location": 25,
            "return": [
                "src.innerproduct.inner_product_verifier.Proof1"
            ],
            "arguments": {
                "self": []
            }
        },
        "FastNIProver2.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "g": [],
                "h": [],
                "u": [],
                "P": [],
                "a": [],
                "b": [],
                "group": [],
                "transcript": []
            }
        },
        "FastNIProver2.prove": {
            "name": "prove",
            "location": 70,
            "return": [
                "src.innerproduct.inner_product_verifier.Proof2"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/innerproduct/inner_product_verifier.py": {
        "Proof1.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "u_new": [],
                "P_new": [],
                "proof2": [],
                "transcript": []
            }
        },
        "Verifier1.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "g": [],
                "h": [],
                "u": [],
                "P": [],
                "c": [],
                "proof1": []
            }
        },
        "Verifier1.assertThat": {
            "name": "assertThat",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "Verifier1.verify_transcript": {
            "name": "verify_transcript",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Verifier1.verify": {
            "name": "verify",
            "location": 44,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proof2.__init__": {
            "name": "__init__",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "xs": [],
                "Ls": [],
                "Rs": [],
                "transcript": [],
                "start_transcript": []
            }
        },
        "Verifier2.__init__": {
            "name": "__init__",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "g": [],
                "h": [],
                "u": [],
                "P": [],
                "proof": []
            }
        },
        "Verifier2.assertThat": {
            "name": "assertThat",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "Verifier2.get_ss": {
            "name": "get_ss",
            "location": 91,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "xs": []
            }
        },
        "Verifier2.verify_transcript": {
            "name": "verify_transcript",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Verifier2.verify": {
            "name": "verify",
            "location": 127,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/innerproduct/__init__.py": {},
    "python-bulletproofs-master/src/pippenger/group.py": {
        "Group.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "unit": [],
                "order": []
            }
        },
        "Group.mult": {
            "name": "mult",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "Group.square": {
            "name": "square",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "MultIntModP.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "p": [],
                "order": []
            }
        },
        "MultIntModP.mult": {
            "name": "mult",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "EC.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "curve": []
            }
        },
        "EC.mult": {
            "name": "mult",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        }
    },
    "python-bulletproofs-master/src/pippenger/modp.py": {
        "ModP.reset": {
            "name": "reset",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "ModP.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "p": []
            }
        },
        "ModP.__add__": {
            "name": "__add__",
            "location": 12,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "y": []
            }
        },
        "ModP.__mul__": {
            "name": "__mul__",
            "location": 18,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "y": []
            }
        },
        "ModP.__sub__": {
            "name": "__sub__",
            "location": 25,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "y": []
            }
        },
        "ModP.__pow__": {
            "name": "__pow__",
            "location": 31,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "n": []
            }
        },
        "ModP.__neg__": {
            "name": "__neg__",
            "location": 43,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ]
            }
        },
        "ModP.__eq__": {
            "name": "__eq__",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "ModP.__str__": {
            "name": "__str__",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModP.__repr__": {
            "name": "__repr__",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/pippenger/pippenger.py": {
        "subset_of": {
            "name": "subset_of",
            "location": 5,
            "return": [
                "Any"
            ],
            "arguments": {
                "l": []
            }
        },
        "Pippenger.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group": []
            }
        },
        "Pippenger._pow2powof2": {
            "name": "_pow2powof2",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "g": [],
                "j": []
            }
        },
        "Pippenger.multiexp": {
            "name": "multiexp",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "gs": [],
                "es": []
            }
        },
        "Pippenger._multiexp_bin": {
            "name": "_multiexp_bin",
            "location": 63,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "gs": [],
                "es": []
            }
        },
        "Pippenger._multiexp_bin.set_sub": {
            "name": "set_sub",
            "location": 75,
            "return": [],
            "arguments": {
                "sub": []
            }
        }
    },
    "python-bulletproofs-master/src/pippenger/__init__.py": {},
    "python-bulletproofs-master/src/rangeproofs/rangeproof_aggreg_prover.py": {
        "AggregNIRangeProver.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vs": [],
                "n": [],
                "g": [],
                "h": [],
                "gs": [],
                "hs": [],
                "gammas": [],
                "u": [],
                "group": [],
                "seed": []
            }
        },
        "AggregNIRangeProver.prove": {
            "name": "prove",
            "location": 36,
            "return": [
                "src.rangeproofs.rangeproof_verifier.Proof"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregNIRangeProver._get_polynomial_coeffs": {
            "name": "_get_polynomial_coeffs",
            "location": 117,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "aL": [],
                "aR": [],
                "sL": [],
                "sR": [],
                "y": [],
                "z": []
            }
        },
        "AggregNIRangeProver._final_compute": {
            "name": "_final_compute",
            "location": 132,
            "return": [
                "Tuple[(Any, Any, Any, list, list)]"
            ],
            "arguments": {
                "self": [],
                "aL": [],
                "aR": [],
                "sL": [],
                "sR": [],
                "y": [],
                "z": [],
                "x": [],
                "tau1": [],
                "tau2": [],
                "alpha": [],
                "rho": []
            }
        }
    },
    "python-bulletproofs-master/src/rangeproofs/rangeproof_aggreg_verifier.py": {
        "Proof.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "taux": [],
                "mu": [],
                "t_hat": [],
                "T1": [],
                "T2": [],
                "A": [],
                "S": [],
                "innerProof": [],
                "transcript": []
            }
        },
        "AggregRangeVerifier.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "Vs": [],
                "g": [],
                "h": [],
                "gs": [],
                "hs": [],
                "u": [],
                "proof": []
            }
        },
        "AggregRangeVerifier.assertThat": {
            "name": "assertThat",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "AggregRangeVerifier.verify_transcript": {
            "name": "verify_transcript",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregRangeVerifier.verify": {
            "name": "verify",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregRangeVerifier._getP": {
            "name": "_getP",
            "location": 96,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "z": [],
                "A": [],
                "S": [],
                "gs": [],
                "hsp": [],
                "n": [],
                "m": []
            }
        }
    },
    "python-bulletproofs-master/src/rangeproofs/rangeproof_prover.py": {
        "NIRangeProver.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "v": [],
                "n": [],
                "g": [],
                "h": [],
                "gs": [],
                "hs": [],
                "gamma": [],
                "u": [],
                "group": [],
                "seed": []
            }
        },
        "NIRangeProver.prove": {
            "name": "prove",
            "location": 35,
            "return": [
                "src.rangeproofs.rangeproof_verifier.Proof"
            ],
            "arguments": {
                "self": []
            }
        },
        "NIRangeProver._get_polynomial_coeffs": {
            "name": "_get_polynomial_coeffs",
            "location": 93,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "aL": [],
                "aR": [],
                "sL": [],
                "sR": [],
                "y": [],
                "z": []
            }
        },
        "NIRangeProver._final_compute": {
            "name": "_final_compute",
            "location": 103,
            "return": [
                "Tuple[(Any, Any, Any, list, list)]"
            ],
            "arguments": {
                "self": [],
                "aL": [],
                "aR": [],
                "sL": [],
                "sR": [],
                "y": [],
                "z": [],
                "x": [],
                "tau1": [],
                "tau2": [],
                "alpha": [],
                "rho": []
            }
        }
    },
    "python-bulletproofs-master/src/rangeproofs/rangeproof_verifier.py": {
        "Proof.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "taux": [],
                "mu": [],
                "t_hat": [],
                "T1": [],
                "T2": [],
                "A": [],
                "S": [],
                "innerProof": [],
                "transcript": []
            }
        },
        "RangeVerifier.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "V": [],
                "g": [],
                "h": [],
                "gs": [],
                "hs": [],
                "u": [],
                "proof": []
            }
        },
        "RangeVerifier.assertThat": {
            "name": "assertThat",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "expr": []
            }
        },
        "RangeVerifier.verify_transcript": {
            "name": "verify_transcript",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RangeVerifier.verify": {
            "name": "verify",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "RangeVerifier._getP": {
            "name": "_getP",
            "location": 88,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "z": [],
                "A": [],
                "S": [],
                "gs": [],
                "hsp": [],
                "n": []
            }
        }
    },
    "python-bulletproofs-master/src/rangeproofs/__init__.py": {},
    "python-bulletproofs-master/src/tests/test_aggreg_rangeproofs.py": {
        "AggregRangeProofTest.test_different_seeds": {
            "name": "test_different_seeds",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregRangeProofTest.test_different_n_and_vs": {
            "name": "test_different_n_and_vs",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregRangeProofTest.test_different_m": {
            "name": "test_different_m",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregRangeProofTest.test_prover_cheating_false_vs": {
            "name": "test_prover_cheating_false_vs",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregRangeProofTest.test_prover_cheating_false_commitment": {
            "name": "test_prover_cheating_false_commitment",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/tests/test_innerprod.py": {
        "Protocol2Test.test_protocol_2": {
            "name": "test_protocol_2",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol2Test.test_prover_cheating_false_P_protocol2": {
            "name": "test_prover_cheating_false_P_protocol2",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol2Test.test_prover_cheating_false_a_protocol2": {
            "name": "test_prover_cheating_false_a_protocol2",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol2Test.test_prover_cheating_false_b_protocol2": {
            "name": "test_prover_cheating_false_b_protocol2",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol2Test.test_prover_cheating_false_u_protocol2": {
            "name": "test_prover_cheating_false_u_protocol2",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_different_seeds": {
            "name": "test_different_seeds",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_different_N": {
            "name": "test_different_N",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_prover_cheating_false_c": {
            "name": "test_prover_cheating_false_c",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_prover_cheating_false_P": {
            "name": "test_prover_cheating_false_P",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_prover_cheating_false_a": {
            "name": "test_prover_cheating_false_a",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_prover_cheating_false_b": {
            "name": "test_prover_cheating_false_b",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_prover_cheating_false_u": {
            "name": "test_prover_cheating_false_u",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_prover_cheating_false_transcript1": {
            "name": "test_prover_cheating_false_transcript1",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InnerProductArgumentTest.test_prover_cheating_false_transcript2": {
            "name": "test_prover_cheating_false_transcript2",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/tests/test_rangeproofs.py": {
        "RangeProofTest.test_different_seeds": {
            "name": "test_different_seeds",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RangeProofTest.test_different_n_and_v": {
            "name": "test_different_n_and_v",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RangeProofTest.test_prover_cheating_false_v": {
            "name": "test_prover_cheating_false_v",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RangeProofTest.test_prover_cheating_false_commitment": {
            "name": "test_prover_cheating_false_commitment",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RangeProofTest.test_prover_cheating_false_transcript1": {
            "name": "test_prover_cheating_false_transcript1",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/tests/test_utils.py": {
        "HashTest.test_mod_hash": {
            "name": "test_mod_hash",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "HashTest.test_elliptic_hash": {
            "name": "test_elliptic_hash",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConversionTest.test_point_to_bytes": {
            "name": "test_point_to_bytes",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConversionTest.test_point_to_b64": {
            "name": "test_point_to_b64",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/tests/__init__.py": {},
    "python-bulletproofs-master/src/utils/commitments.py": {
        "commitment": {
            "name": "commitment",
            "location": 5,
            "return": [
                "Any"
            ],
            "arguments": {
                "g": [],
                "h": [],
                "x": [],
                "r": []
            }
        },
        "vector_commitment": {
            "name": "vector_commitment",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "g": [],
                "h": [],
                "a": [],
                "b": []
            }
        },
        "_mult": {
            "name": "_mult",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "a": [],
                "g": []
            }
        },
        "_inv": {
            "name": "_inv",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "g": []
            }
        }
    },
    "python-bulletproofs-master/src/utils/elliptic_curve_hash.py": {
        "elliptic_hash": {
            "name": "elliptic_hash",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {
                "msg": [],
                "CURVE": []
            }
        }
    },
    "python-bulletproofs-master/src/utils/transcript.py": {
        "Transcript.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "seed": []
            }
        },
        "Transcript.add_point": {
            "name": "add_point",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "g": []
            }
        },
        "Transcript.add_list_points": {
            "name": "add_list_points",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gs": []
            }
        },
        "Transcript.add_number": {
            "name": "add_number",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "Transcript.get_modp": {
            "name": "get_modp",
            "location": 31,
            "return": [
                "src.utils.utils.ModP"
            ],
            "arguments": {
                "self": [],
                "p": []
            }
        }
    },
    "python-bulletproofs-master/src/utils/utils.py": {
        "egcd": {
            "name": "egcd",
            "location": 15,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {
                "a": [],
                "b": [
                    "_T1@@"
                ]
            }
        },
        "mod_hash": {
            "name": "mod_hash",
            "location": 84,
            "return": [
                "ModP"
            ],
            "arguments": {
                "msg": [],
                "p": [],
                "non_zero": []
            }
        },
        "point_to_bytes": {
            "name": "point_to_bytes",
            "location": 100,
            "return": [
                "bytes"
            ],
            "arguments": {
                "g": []
            }
        },
        "point_to_b64": {
            "name": "point_to_b64",
            "location": 109,
            "return": [
                "bytes"
            ],
            "arguments": {
                "g": []
            }
        },
        "b64_to_point": {
            "name": "b64_to_point",
            "location": 114,
            "return": [
                "Any"
            ],
            "arguments": {
                "s": []
            }
        },
        "bytes_to_point": {
            "name": "bytes_to_point",
            "location": 119,
            "return": [
                "Any"
            ],
            "arguments": {
                "b": []
            }
        },
        "inner_product": {
            "name": "inner_product",
            "location": 134,
            "return": [
                "Any"
            ],
            "arguments": {
                "a": [],
                "b": []
            }
        },
        "ModP.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "p": []
            }
        },
        "ModP.__add__": {
            "name": "__add__",
            "location": 31,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "y": []
            }
        },
        "ModP.__radd__": {
            "name": "__radd__",
            "location": 37,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "y": []
            }
        },
        "ModP.__mul__": {
            "name": "__mul__",
            "location": 40,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "ModP.__sub__": {
            "name": "__sub__",
            "location": 48,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "y": []
            }
        },
        "ModP.__rsub__": {
            "name": "__rsub__",
            "location": 54,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "y": []
            }
        },
        "ModP.__pow__": {
            "name": "__pow__",
            "location": 57,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ],
                "n": []
            }
        },
        "ModP.__mod__": {
            "name": "__mod__",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ModP.__neg__": {
            "name": "__neg__",
            "location": 63,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ]
            }
        },
        "ModP.inv": {
            "name": "inv",
            "location": 66,
            "return": [
                "_TModP@@ModP@@"
            ],
            "arguments": {
                "self": [
                    "_TModP@@ModP@@"
                ]
            }
        },
        "ModP.__eq__": {
            "name": "__eq__",
            "location": 74,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "ModP.__str__": {
            "name": "__str__",
            "location": 77,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ModP.__repr__": {
            "name": "__repr__",
            "location": 80,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python-bulletproofs-master/src/utils/__init__.py": {}
}
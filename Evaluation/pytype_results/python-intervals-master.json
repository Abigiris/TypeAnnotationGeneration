{
    "python-intervals-master/intervals/comparable.py": {
        "Comparable.__eq__": {
            "name": "__eq__",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Comparable.__lt__": {
            "name": "__lt__",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Comparable.__gt__": {
            "name": "__gt__",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Comparable.__le__": {
            "name": "__le__",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Comparable.__ge__": {
            "name": "__ge__",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "python-intervals-master/intervals/endpoint.py": {
        "Endpoint.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Endpoint.__eq__": {
            "name": "__eq__",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Endpoint.__lt__": {
            "name": "__lt__",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Endpoint.__gt__": {
            "name": "__gt__",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Endpoint.__le__": {
            "name": "__le__",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Endpoint.__ge__": {
            "name": "__ge__",
            "location": 50,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "python-intervals-master/intervals/infinity.py": {
        "Infinity.__lt__": {
            "name": "__lt__",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Infinity.__gt__": {
            "name": "__gt__",
            "location": 15,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Infinity.__le__": {
            "name": "__le__",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Infinity.__ge__": {
            "name": "__ge__",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "python-intervals-master/intervals/__init__.py": {
        "IntervalProtocol.__contains__": {
            "name": "__contains__",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "object": []
            }
        },
        "Interval.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "intervals": []
            }
        },
        "Interval.__contains__": {
            "name": "__contains__",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "object": []
            }
        },
        "Interval.__repr__": {
            "name": "__repr__",
            "location": 30,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingleInterval.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "left": [],
                "right": []
            }
        },
        "SingleInterval.__repr__": {
            "name": "__repr__",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "SingleInterval.__eq__": {
            "name": "__eq__",
            "location": 60,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SingleInterval.__lt__": {
            "name": "__lt__",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SingleInterval.__gt__": {
            "name": "__gt__",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SingleInterval.__le__": {
            "name": "__le__",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SingleInterval.__ge__": {
            "name": "__ge__",
            "location": 85,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SingleInterval.__contains__": {
            "name": "__contains__",
            "location": 92,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SingleInterval.__or__": {
            "name": "__or__",
            "location": 99,
            "return": [
                "Union[(Interval[intervals.comparable.Comparable], SingleInterval[intervals.comparable.Comparable])]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "SingleInterval.__and__": {
            "name": "__and__",
            "location": 110,
            "return": [
                "Union[(Interval[intervals.comparable.Comparable], SingleInterval[intervals.comparable.Comparable])]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        }
    },
    "python-intervals-master/tests/__init__.py": {
        "test_cmp_helper": {
            "name": "test_cmp_helper",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "case": [],
                "value1": [],
                "value2": []
            }
        },
        "test_cmp_close_interval": {
            "name": "test_cmp_close_interval",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "case": [],
                "value1": [],
                "value2": []
            }
        },
        "test_cmp_open_interval": {
            "name": "test_cmp_open_interval",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "case": [],
                "value1": [],
                "value2": []
            }
        },
        "test_helper_equality": {
            "name": "test_helper_equality",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "case": [],
                "value1": [],
                "value2": []
            }
        },
        "test_interval_boundary": {
            "name": "test_interval_boundary",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "case": [],
                "value1": [],
                "value2": []
            }
        },
        "TestSingleInterval.test_cmp": {
            "name": "test_cmp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleInterval.test_contains": {
            "name": "test_contains",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleInterval.test_or": {
            "name": "test_or",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestSingleInterval.test_and": {
            "name": "test_and",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEndpoint.test_basics": {
            "name": "test_basics",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEndpoint.test_inf": {
            "name": "test_inf",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestInfinity.test_cmp": {
            "name": "test_cmp",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestComparable.test_type_example": {
            "name": "test_type_example",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "python-max-ones-genetic-algorithm-master/app.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python-max-ones-genetic-algorithm-master/src/analysis.py": {
        "total_fitness": {
            "name": "total_fitness",
            "location": 21,
            "return": [
                "float"
            ],
            "arguments": {
                "pop": [
                    "List[List[bool]]"
                ]
            }
        },
        "avg_fitness": {
            "name": "avg_fitness",
            "location": 25,
            "return": [
                "float"
            ],
            "arguments": {
                "pop": [
                    "List[List[bool]]"
                ]
            }
        },
        "max_fitness": {
            "name": "max_fitness",
            "location": 29,
            "return": [
                "float"
            ],
            "arguments": {
                "pop": [
                    "List[List[bool]]"
                ]
            }
        },
        "gens_to_population": {
            "name": "gens_to_population",
            "location": 38,
            "return": [
                "Dict[(int, List[str])]"
            ],
            "arguments": {
                "generations": [
                    "List[List[List[bool]]]"
                ]
            }
        },
        "gens_to_max_fitness": {
            "name": "gens_to_max_fitness",
            "location": 42,
            "return": [
                "Dict[(int, float)]"
            ],
            "arguments": {
                "generations": [
                    "List[List[List[bool]]]"
                ]
            }
        },
        "gens_to_avg_fitness": {
            "name": "gens_to_avg_fitness",
            "location": 46,
            "return": [
                "Dict[(int, float)]"
            ],
            "arguments": {
                "generations": [
                    "List[List[List[bool]]]"
                ]
            }
        },
        "gens_to_complete_analysis": {
            "name": "gens_to_complete_analysis",
            "location": 50,
            "return": [
                "Dict[(int, Dict[(str, Union[(float, List[str])])])]"
            ],
            "arguments": {
                "generations": [
                    "List[List[List[bool]]]"
                ]
            }
        },
        "aggregate": {
            "name": "aggregate",
            "location": 68,
            "return": [
                "Dict[(str, Union[(float, int, str)])]"
            ],
            "arguments": {
                "generations": [
                    "List[List[List[bool]]]"
                ]
            }
        },
        "write_analysis": {
            "name": "write_analysis",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "generations": [
                    "List[List[List[bool]]]"
                ],
                "config": [
                    "src.config.Config"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "_generate_file_name": {
            "name": "_generate_file_name",
            "location": 113,
            "return": [
                "str"
            ],
            "arguments": {
                "dir_path": [
                    "str"
                ],
                "prefix": [
                    "str"
                ],
                "extension": [
                    "str"
                ]
            }
        },
        "generate_run_file_name": {
            "name": "generate_run_file_name",
            "location": 119,
            "return": [
                "str"
            ],
            "arguments": {
                "dir_path": [
                    "str"
                ]
            }
        },
        "graph": {
            "name": "graph",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {
                "generations": [
                    "List[List[List[bool]]]"
                ],
                "path": [
                    "str"
                ]
            }
        },
        "generate_graph_file_name": {
            "name": "generate_graph_file_name",
            "location": 145,
            "return": [
                "str"
            ],
            "arguments": {
                "dir_path": [
                    "str"
                ]
            }
        }
    },
    "python-max-ones-genetic-algorithm-master/src/config.py": {
        "read": {
            "name": "read",
            "location": 16,
            "return": [
                "Config"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        }
    },
    "python-max-ones-genetic-algorithm-master/src/models.py": {
        "normalize_bitchar": {
            "name": "normalize_bitchar",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "c": [
                    "str"
                ]
            }
        },
        "normalize_individualstr": {
            "name": "normalize_individualstr",
            "location": 16,
            "return": [
                "List[bool]"
            ],
            "arguments": {
                "ind": [
                    "str"
                ]
            }
        },
        "normalize_populationstr": {
            "name": "normalize_populationstr",
            "location": 20,
            "return": [
                "List[List[bool]]"
            ],
            "arguments": {
                "ps": [
                    "List[str]"
                ]
            }
        },
        "stringify_bit": {
            "name": "stringify_bit",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "bit": [
                    "bool"
                ]
            }
        },
        "stringify_individual": {
            "name": "stringify_individual",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "ind": [
                    "List[bool]"
                ]
            }
        },
        "stringify_population": {
            "name": "stringify_population",
            "location": 32,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "pop": [
                    "List[List[bool]]"
                ]
            }
        }
    },
    "python-max-ones-genetic-algorithm-master/src/operators.py": {
        "gen_individual": {
            "name": "gen_individual",
            "location": 12,
            "return": [
                "List[bool]"
            ],
            "arguments": {
                "num_genes": [
                    "int"
                ]
            }
        },
        "gen_population": {
            "name": "gen_population",
            "location": 16,
            "return": [
                "List[List[bool]]"
            ],
            "arguments": {}
        },
        "fitness": {
            "name": "fitness",
            "location": 25,
            "return": [
                "float"
            ],
            "arguments": {
                "ind": [
                    "List[bool]"
                ]
            }
        },
        "mutate": {
            "name": "mutate",
            "location": 34,
            "return": [
                "List[bool]"
            ],
            "arguments": {
                "ind": [
                    "List[bool]"
                ]
            }
        },
        "crossover": {
            "name": "crossover",
            "location": 43,
            "return": [
                "Tuple[(List[bool], List[bool])]"
            ],
            "arguments": {
                "ind1": [
                    "List[bool]"
                ],
                "ind2": [
                    "List[bool]"
                ]
            }
        },
        "compete": {
            "name": "compete",
            "location": 60,
            "return": [
                "List[bool]"
            ],
            "arguments": {
                "inds": [
                    "List[List[bool]]"
                ]
            }
        },
        "tournament": {
            "name": "tournament",
            "location": 66,
            "return": [
                "List[List[bool]]"
            ],
            "arguments": {
                "pop": [
                    "List[List[bool]]"
                ]
            }
        }
    },
    "python-max-ones-genetic-algorithm-master/src/pipeline.py": {
        "generation": {
            "name": "generation",
            "location": 11,
            "return": [
                "List[List[bool]]"
            ],
            "arguments": {
                "pop": [
                    "List[List[bool]]"
                ]
            }
        },
        "run_ga": {
            "name": "run_ga",
            "location": 28,
            "return": [
                "List[List[List[bool]]]"
            ],
            "arguments": {}
        }
    },
    "python-max-ones-genetic-algorithm-master/src/__init__.py": {}
}
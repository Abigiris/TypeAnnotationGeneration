{
    "python_entity_framework-master/entity_framework/abstract_entity_tree.py": {
        "_is_generic": {
            "name": "_is_generic",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "field_type": []
            }
        },
        "_get_wrapped_type": {
            "name": "_get_wrapped_type",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "wrapped_type": []
            }
        },
        "_is_field_optional": {
            "name": "_is_field_optional",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "field_type": []
            }
        },
        "_is_nested_entity_or_vo": {
            "name": "_is_nested_entity_or_vo",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "field_type": []
            }
        },
        "_is_optional_entity_or_vo": {
            "name": "_is_optional_entity_or_vo",
            "location": 28,
            "return": [
                "bool"
            ],
            "arguments": {
                "field_type": []
            }
        },
        "_is_identity": {
            "name": "_is_identity",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "field_type": []
            }
        },
        "_is_list_of_entities_or_vos": {
            "name": "_is_list_of_entities_or_vos",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "field_type": []
            }
        },
        "build": {
            "name": "build",
            "location": 168,
            "return": [
                "AbstractEntityTree"
            ],
            "arguments": {
                "root": []
            }
        },
        "Visitor.traverse_from": {
            "name": "traverse_from",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Visitor.visit_field": {
            "name": "visit_field",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Visitor.leave_field": {
            "name": "leave_field",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "Visitor.visit_entity": {
            "name": "visit_entity",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Visitor.leave_entity": {
            "name": "leave_entity",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "Visitor.visit_value_object": {
            "name": "visit_value_object",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "Visitor.leave_value_object": {
            "name": "leave_value_object",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "Visitor.visit_list_of_entities": {
            "name": "visit_list_of_entities",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "Visitor.leave_list_of_entities": {
            "name": "leave_list_of_entities",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "Visitor.visit_list_of_value_objects": {
            "name": "visit_list_of_value_objects",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "list_of_value_objects": []
            }
        },
        "Visitor.leave_list_of_value_objects": {
            "name": "leave_list_of_value_objects",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "list_of_value_objects": []
            }
        },
        "Visitor.noop": {
            "name": "noop",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "NodeMeta.__new__": {
            "name": "__new__",
            "location": 88,
            "return": [
                "Any"
            ],
            "arguments": {
                "mcs": [
                    "Type[NodeMeta]"
                ],
                "name": [],
                "bases": [],
                "namespace": []
            }
        },
        "Node.accept": {
            "name": "accept",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "Node.farewell": {
            "name": "farewell",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "FieldNode.accept": {
            "name": "accept",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "FieldNode.farewell": {
            "name": "farewell",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "EntityNode.accept": {
            "name": "accept",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "EntityNode.farewell": {
            "name": "farewell",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "ValueObjectNode.accept": {
            "name": "accept",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "ValueObjectNode.farewell": {
            "name": "farewell",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "ListOfEntitiesNode.accept": {
            "name": "accept",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "ListOfEntitiesNode.farewell": {
            "name": "farewell",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "ListOfValueObjectsNode.accept": {
            "name": "accept",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "ListOfValueObjectsNode.farewell": {
            "name": "farewell",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "AbstractEntityTree.__iter__": {
            "name": "__iter__",
            "location": 156,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "build.parse_node": {
            "name": "parse_node",
            "location": 170,
            "return": [],
            "arguments": {
                "current_root": [],
                "name": []
            }
        },
        "AbstractEntityTree.__iter__.iterate_dfs": {
            "name": "iterate_dfs",
            "location": 157,
            "return": [],
            "arguments": {}
        }
    },
    "python_entity_framework-master/entity_framework/entity.py": {
        "_is_nested_entity": {
            "name": "_is_nested_entity",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "field_type": []
            }
        },
        "Identity.is_identity": {
            "name": "is_identity",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [
                    "Type[Identity]"
                ],
                "field": []
            }
        },
        "EntityMeta.__new__": {
            "name": "__new__",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "mcs": [
                    "Type[EntityMeta]"
                ],
                "name": [],
                "bases": [],
                "namespace": []
            }
        },
        "ValueObjectMeta.__new__": {
            "name": "__new__",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "mcs": [
                    "Type[ValueObjectMeta]"
                ],
                "name": [],
                "bases": [],
                "namespace": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/registry.py": {},
    "python_entity_framework-master/entity_framework/repository.py": {
        "RepositoryMeta.__new__": {
            "name": "__new__",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "mcs": [
                    "Type[RepositoryMeta]"
                ],
                "name": [],
                "bases": [],
                "namespace": [],
                "tvars": [],
                "args": [],
                "origin": [],
                "extra": [],
                "orig_bases": []
            }
        },
        "ReadOnlyRepository.prepare": {
            "name": "prepare",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "Type[ReadOnlyRepository]"
                ]
            }
        },
        "ReadOnlyRepository.get": {
            "name": "get",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identity": []
            }
        },
        "Repository.prepare": {
            "name": "prepare",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [
                    "Type[Repository]"
                ]
            }
        },
        "Repository.get": {
            "name": "get",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "identity": []
            }
        },
        "Repository.save": {
            "name": "save",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/__init__.py": {},
    "python_entity_framework-master/entity_framework/storages/__init__.py": {},
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/native_type_to_column.py": {
        "convert": {
            "name": "convert",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "arg": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/registry.py": {},
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/types.py": {
        "to_storage": {
            "name": "to_storage",
            "location": 12,
            "return": [],
            "arguments": {
                "argument": []
            }
        },
        "_": {
            "name": "_",
            "location": 17,
            "return": [],
            "arguments": {
                "argument": []
            }
        },
        "from_storage": {
            "name": "from_storage",
            "location": 24,
            "return": [
                "Union[(uuid.UUID, _T0)]"
            ],
            "arguments": {
                "argument": [
                    "_T0@@"
                ],
                "field": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/__init__.py": {
        "SqlAlchemyRepo.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "session": []
            }
        },
        "SqlAlchemyRepo.prepare": {
            "name": "prepare",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": [],
                "entity_cls": []
            }
        },
        "SqlAlchemyRepo.query": {
            "name": "query",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SqlAlchemyRepo.get": {
            "name": "get",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "identity": []
            }
        },
        "SqlAlchemyRepo.save": {
            "name": "save",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/constructing_model/raw_model.py": {
        "RawModel.append_column": {
            "name": "append_column",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "column": []
            }
        },
        "RawModel.append_relationship": {
            "name": "append_relationship",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "related_model_name": [],
                "nullable": []
            }
        },
        "RawModel.materialize": {
            "name": "materialize",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/constructing_model/visitor.py": {
        "ModelConstructingVisitor.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "base": [],
                "registry": []
            }
        },
        "ModelConstructingVisitor._prefix": {
            "name": "_prefix",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelConstructingVisitor.current_entity": {
            "name": "current_entity",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelConstructingVisitor.visit_field": {
            "name": "visit_field",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "ModelConstructingVisitor.visit_entity": {
            "name": "visit_entity",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "ModelConstructingVisitor.leave_entity": {
            "name": "leave_entity",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "ModelConstructingVisitor.visit_value_object": {
            "name": "visit_value_object",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "ModelConstructingVisitor.leave_value_object": {
            "name": "leave_value_object",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "ModelConstructingVisitor.visit_list_of_entities": {
            "name": "visit_list_of_entities",
            "location": 92,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "ModelConstructingVisitor.leave_list_of_entities": {
            "name": "leave_list_of_entities",
            "location": 95,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "ModelConstructingVisitor.visit_list_of_value_objects": {
            "name": "visit_list_of_value_objects",
            "location": 98,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "ModelConstructingVisitor.leave_list_of_value_objects": {
            "name": "leave_list_of_value_objects",
            "location": 101,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/constructing_model/__init__.py": {},
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/populating_aggregates/visitor.py": {
        "PopulatingAggregateVisitor.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_result": []
            }
        },
        "PopulatingAggregateVisitor._prefix": {
            "name": "_prefix",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PopulatingAggregateVisitor.result": {
            "name": "result",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PopulatingAggregateVisitor.visit_field": {
            "name": "visit_field",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "PopulatingAggregateVisitor.visit_entity": {
            "name": "visit_entity",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "PopulatingAggregateVisitor.leave_entity": {
            "name": "leave_entity",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "PopulatingAggregateVisitor.visit_value_object": {
            "name": "visit_value_object",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "PopulatingAggregateVisitor.leave_value_object": {
            "name": "leave_value_object",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "PopulatingAggregateVisitor._stack_complex_object": {
            "name": "_stack_complex_object",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vo_or_entity": []
            }
        },
        "PopulatingAggregateVisitor._construct_complex_object": {
            "name": "_construct_complex_object",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vo_or_entity": []
            }
        },
        "PopulatingAggregateVisitor.visit_list_of_entities": {
            "name": "visit_list_of_entities",
            "location": 81,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "PopulatingAggregateVisitor.leave_list_of_entities": {
            "name": "leave_list_of_entities",
            "location": 84,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "PopulatingAggregateVisitor.visit_list_of_value_objects": {
            "name": "visit_list_of_value_objects",
            "location": 87,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_value_objects": []
            }
        },
        "PopulatingAggregateVisitor.leave_list_of_value_objects": {
            "name": "leave_list_of_value_objects",
            "location": 90,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_value_objects": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/populating_aggregates/__init__.py": {},
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/populating_model/visitor.py": {
        "ModelPopulatingVisitor.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "aggregate": [],
                "registry": []
            }
        },
        "ModelPopulatingVisitor._prefix": {
            "name": "_prefix",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPopulatingVisitor.result": {
            "name": "result",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ModelPopulatingVisitor.visit_field": {
            "name": "visit_field",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "field": []
            }
        },
        "ModelPopulatingVisitor.visit_entity": {
            "name": "visit_entity",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "ModelPopulatingVisitor.leave_entity": {
            "name": "leave_entity",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "ModelPopulatingVisitor.visit_value_object": {
            "name": "visit_value_object",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "ModelPopulatingVisitor.leave_value_object": {
            "name": "leave_value_object",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "value_object": []
            }
        },
        "ModelPopulatingVisitor._stack_complex_object": {
            "name": "_stack_complex_object",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vo_or_entity": []
            }
        },
        "ModelPopulatingVisitor._construct_model": {
            "name": "_construct_model",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "ModelPopulatingVisitor.visit_list_of_entities": {
            "name": "visit_list_of_entities",
            "location": 93,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "ModelPopulatingVisitor.leave_list_of_entities": {
            "name": "leave_list_of_entities",
            "location": 96,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_entities": []
            }
        },
        "ModelPopulatingVisitor.visit_list_of_value_objects": {
            "name": "visit_list_of_value_objects",
            "location": 99,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_value_objects": []
            }
        },
        "ModelPopulatingVisitor.leave_list_of_value_objects": {
            "name": "leave_list_of_value_objects",
            "location": 102,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "list_of_value_objects": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/populating_model/__init__.py": {},
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/querying/visitor.py": {
        "QueryBuildingVisitor.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "registry": []
            }
        },
        "QueryBuildingVisitor.query": {
            "name": "query",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "QueryBuildingVisitor.visit_entity": {
            "name": "visit_entity",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        },
        "QueryBuildingVisitor.leave_entity": {
            "name": "leave_entity",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entity": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/storages/sqlalchemy/querying/__init__.py": {},
    "python_entity_framework-master/entity_framework/tests/conftest.py": {
        "pytest_addoption": {
            "name": "pytest_addoption",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/tests/test_entity.py": {
        "test_entity_allows_one_with_identity": {
            "name": "test_entity_allows_one_with_identity",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_entity_enforces_identity": {
            "name": "test_entity_enforces_identity",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_entity_allows_multiple_identities": {
            "name": "test_entity_allows_multiple_identities",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_value_object_without_identity": {
            "name": "test_value_object_without_identity",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_value_object_with_identity": {
            "name": "test_value_object_with_identity",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_vo_can_be_nested_inside_another_vo": {
            "name": "test_vo_can_be_nested_inside_another_vo",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_entity_can_not_be_nested_inside_vo": {
            "name": "test_entity_can_not_be_nested_inside_vo",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optional_entity_can_not_be_nested_inside_vo": {
            "name": "test_optional_entity_can_not_be_nested_inside_vo",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_entity_framework-master/entity_framework/tests/__init__.py": {},
    "python_entity_framework-master/entity_framework/tests/abstract_entity_tree/test_build.py": {
        "test_builds_simple_flat_entity": {
            "name": "test_builds_simple_flat_entity",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_builds_aggregate_with_embedded_entity_and_value_object": {
            "name": "test_builds_aggregate_with_embedded_entity_and_value_object",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_builds_aggregate_with_list_of_value_objects": {
            "name": "test_builds_aggregate_with_list_of_value_objects",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_optional_nested_entity_makes_all_its_fields_optional": {
            "name": "test_optional_nested_entity_makes_all_its_fields_optional",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "python_entity_framework-master/entity_framework/tests/abstract_entity_tree/test_visitor.py": {
        "tree": {
            "name": "tree",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "test_iterates_tree": {
            "name": "test_iterates_tree",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "tree": []
            }
        },
        "Scribe.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scribe.visit_field": {
            "name": "visit_field",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        },
        "Scribe.leave_field": {
            "name": "leave_field",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "node": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/tests/abstract_entity_tree/__init__.py": {},
    "python_entity_framework-master/entity_framework/tests/storages/conftest.py": {
        "engine": {
            "name": "engine",
            "location": 7,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/tests/storages/__init__.py": {},
    "python_entity_framework-master/entity_framework/tests/storages/sqlalchemy/conftest.py": {
        "sa_base": {
            "name": "sa_base",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "session": {
            "name": "session",
            "location": 15,
            "return": [],
            "arguments": {
                "sa_base": [],
                "engine": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/tests/storages/sqlalchemy/test_nested_value_objects.py": {
        "sa_repo": {
            "name": "sa_repo",
            "location": 35,
            "return": [],
            "arguments": {
                "sa_base": []
            }
        },
        "test_gets_exemplary_data": {
            "name": "test_gets_exemplary_data",
            "location": 56,
            "return": [],
            "arguments": {
                "sa_repo": [],
                "session": [],
                "tables": [],
                "entities": [],
                "rows": [],
                "expected_aggregate": []
            }
        },
        "test_saves_exemplary_data": {
            "name": "test_saves_exemplary_data",
            "location": 95,
            "return": [],
            "arguments": {
                "sa_repo": [],
                "session": [],
                "aggregate": [],
                "expected_db_data": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/tests/storages/sqlalchemy/test_one_level_nested_entities.py": {
        "sa_repo": {
            "name": "sa_repo",
            "location": 43,
            "return": [],
            "arguments": {
                "sa_base": []
            }
        },
        "test_gets_exemplary_data": {
            "name": "test_gets_exemplary_data",
            "location": 71,
            "return": [],
            "arguments": {
                "sa_repo": [],
                "session": [],
                "tables": [],
                "entities": [],
                "rows": [],
                "expected_aggregate": []
            }
        },
        "test_saves_exemplary_data": {
            "name": "test_saves_exemplary_data",
            "location": 110,
            "return": [],
            "arguments": {
                "sa_repo": [],
                "session": [],
                "aggregate": [],
                "expected_db_data": []
            }
        },
        "Subscriber.subscribe": {
            "name": "subscribe",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "subscription": []
            }
        }
    },
    "python_entity_framework-master/entity_framework/tests/storages/sqlalchemy/__init__.py": {}
}
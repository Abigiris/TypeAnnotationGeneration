{
    "rem-master/data-streamer/remdata/changestream.py": {
        "send_changes.init_stream": {
            "name": "init_stream",
            "location": 39,
            "return": [],
            "arguments": {}
        }
    },
    "rem-master/data-streamer/remdata/core.py": {
        "make_app": {
            "name": "make_app",
            "location": 25,
            "return": [],
            "arguments": {
                "mongo_uri": [],
                "es_hosts": [],
                "db_name": []
            }
        },
        "setup_routes": {
            "name": "setup_routes",
            "location": 46,
            "return": [],
            "arguments": {
                "app": [],
                "mongo_db": [],
                "es_client": []
            }
        },
        "make_ws_handler": {
            "name": "make_ws_handler",
            "location": 57,
            "return": [],
            "arguments": {
                "handler": [],
                "encoder": []
            }
        }
    },
    "rem-master/data-streamer/remdata/dataaccess.py": {},
    "rem-master/data-streamer/remdata/json.py": {
        "maybe_convert_to_object_id": {
            "name": "maybe_convert_to_object_id",
            "location": 26,
            "return": [],
            "arguments": {
                "oid": []
            }
        },
        "BSONDocForJSON.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "raw_doc": []
            }
        },
        "BSONDocForJSON.__json__": {
            "name": "__json__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "JSONEncoder.encode": {
            "name": "encode",
            "location": 45,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "JSONEncoder.decode": {
            "name": "decode",
            "location": 53,
            "return": [],
            "arguments": {
                "data": []
            }
        }
    },
    "rem-master/data-streamer/remdata/media.py": {},
    "rem-master/data-streamer/remdata/message.py": {
        "SocketMessage.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "socket": [],
                "encoder": []
            }
        },
        "SocketMessage.req_id": {
            "name": "req_id",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SocketMessage.get": {
            "name": "get",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "default": []
            }
        },
        "SocketMessage.logger": {
            "name": "logger",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "rem-master/data-streamer/remdata/search.py": {},
    "rem-master/data-streamer/remdata/__init__.py": {},
    "rem-master/data-streamer/remdata/__main__.py": {},
    "rem-master/data-streamer/remdata/inttest/test_changestream.py": {},
    "rem-master/data-streamer/remdata/inttest/test_dataaccess.py": {},
    "rem-master/data-streamer/remdata/inttest/test_media.py": {},
    "rem-master/data-streamer/remdata/inttest/test_search.py": {},
    "rem-master/data-streamer/remdata/inttest/util.py": {},
    "rem-master/data-streamer/remdata/inttest/__init__.py": {},
    "rem-master/models/fieldnames.py": {
        "generate_json_schema": {
            "name": "generate_json_schema",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "camel_case_to_snake_case": {
            "name": "camel_case_to_snake_case",
            "location": 31,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "make_constants": {
            "name": "make_constants",
            "location": 35,
            "return": [],
            "arguments": {
                "schema": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/adapter.py": {
        "register": {
            "name": "register",
            "location": 13,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "county_shapefile_dir": {
            "name": "county_shapefile_dir",
            "location": 25,
            "return": [],
            "arguments": {
                "county": [],
                "state": []
            }
        },
        "shapefile_path": {
            "name": "shapefile_path",
            "location": 29,
            "return": [],
            "arguments": {
                "county": [],
                "state": [],
                "shapefile_name": []
            }
        },
        "get_county_adapter": {
            "name": "get_county_adapter",
            "location": 33,
            "return": [],
            "arguments": {
                "county": [],
                "state": []
            }
        },
        "get_parcel_data_by_pin": {
            "name": "get_parcel_data_by_pin",
            "location": 42,
            "return": [],
            "arguments": {
                "county": [],
                "state": [],
                "pin_number": []
            }
        },
        "AdapterMeta.__new__": {
            "name": "__new__",
            "location": 19,
            "return": [],
            "arguments": {
                "mcs": [],
                "clsname": [],
                "bases": [],
                "attrs": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/exceptions.py": {
        "ParcelDataError.__str__": {
            "name": "__str__",
            "location": 2,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/grpc.py": {
        "serve": {
            "name": "serve",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "GISService.GetParcelInfo": {
            "name": "GetParcelInfo",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "context": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/shapefile.py": {
        "load_shapefile": {
            "name": "load_shapefile",
            "location": 12,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "get_features_by_field": {
            "name": "get_features_by_field",
            "location": 27,
            "return": [],
            "arguments": {
                "data_source": [],
                "field_name": [],
                "field_value": []
            }
        },
        "get_feature_fields_as_dict": {
            "name": "get_feature_fields_as_dict",
            "location": 47,
            "return": [],
            "arguments": {
                "feature": []
            }
        },
        "get_geometry_as_wgs84_wkt": {
            "name": "get_geometry_as_wgs84_wkt",
            "location": 64,
            "return": [],
            "arguments": {
                "feature": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/util.py": {
        "single_quote_if_string": {
            "name": "single_quote_if_string",
            "location": 7,
            "return": [],
            "arguments": {
                "val": []
            }
        },
        "merge_wkts": {
            "name": "merge_wkts",
            "location": 17,
            "return": [],
            "arguments": {
                "wkts": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/__init__.py": {},
    "rem-master/parceldata/remparceldata/__main__.py": {},
    "rem-master/parceldata/remparceldata/adapters/bladen_nc.py": {
        "BladenNCAdapter.normalize_pin": {
            "name": "normalize_pin",
            "location": 15,
            "return": [],
            "arguments": {
                "pin": []
            }
        },
        "BladenNCAdapter.owner_name_from_parcel_fields": {
            "name": "owner_name_from_parcel_fields",
            "location": 19,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "BladenNCAdapter.acreage_from_parcel_fields": {
            "name": "acreage_from_parcel_fields",
            "location": 23,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "BladenNCAdapter.street_address_from_parcel_fields": {
            "name": "street_address_from_parcel_fields",
            "location": 27,
            "return": [],
            "arguments": {
                "fields": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/adapters/cumberland_nc.py": {
        "CumberlandNCAdapter.normalize_pin": {
            "name": "normalize_pin",
            "location": 12,
            "return": [],
            "arguments": {
                "pin": []
            }
        },
        "CumberlandNCAdapter.owner_name_from_parcel_fields": {
            "name": "owner_name_from_parcel_fields",
            "location": 17,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "CumberlandNCAdapter.acreage_from_parcel_fields": {
            "name": "acreage_from_parcel_fields",
            "location": 21,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "CumberlandNCAdapter.street_address_from_parcel_fields": {
            "name": "street_address_from_parcel_fields",
            "location": 25,
            "return": [],
            "arguments": {
                "fields": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/adapters/pender_nc.py": {
        "PenderNCAdapter.normalize_pin": {
            "name": "normalize_pin",
            "location": 12,
            "return": [],
            "arguments": {
                "pin": []
            }
        },
        "PenderNCAdapter.owner_name_from_parcel_fields": {
            "name": "owner_name_from_parcel_fields",
            "location": 16,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "PenderNCAdapter.acreage_from_parcel_fields": {
            "name": "acreage_from_parcel_fields",
            "location": 20,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "PenderNCAdapter.street_address_from_parcel_fields": {
            "name": "street_address_from_parcel_fields",
            "location": 24,
            "return": [],
            "arguments": {
                "fields": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/adapters/robeson_nc.py": {
        "RobesonNCAdapter.normalize_pin": {
            "name": "normalize_pin",
            "location": 12,
            "return": [],
            "arguments": {
                "pin": []
            }
        },
        "RobesonNCAdapter.owner_name_from_parcel_fields": {
            "name": "owner_name_from_parcel_fields",
            "location": 16,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "RobesonNCAdapter.acreage_from_parcel_fields": {
            "name": "acreage_from_parcel_fields",
            "location": 20,
            "return": [],
            "arguments": {
                "fields": []
            }
        },
        "RobesonNCAdapter.street_address_from_parcel_fields": {
            "name": "street_address_from_parcel_fields",
            "location": 24,
            "return": [],
            "arguments": {
                "fields": []
            }
        }
    },
    "rem-master/parceldata/remparceldata/adapters/__init__.py": {},
    "rem-master/protobuf/python/setup.py": {},
    "rem-master/protobuf/python/remprotobuf/gis_pb2.py": {},
    "rem-master/protobuf/python/remprotobuf/gis_pb2_grpc.py": {
        "add_GISServicer_to_server": {
            "name": "add_GISServicer_to_server",
            "location": 36,
            "return": [],
            "arguments": {
                "servicer": [],
                "server": []
            }
        },
        "GISStub.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "channel": []
            }
        },
        "GISServicer.GetParcelInfo": {
            "name": "GetParcelInfo",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "request": [],
                "context": []
            }
        }
    },
    "rem-master/protobuf/python/remprotobuf/__init__.py": {},
    "rem-master/pycommon/setup.py": {},
    "rem-master/pycommon/remcommon/fieldnames_gen.py": {},
    "rem-master/pycommon/remcommon/log.py": {
        "FieldLogger.process": {
            "name": "process",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "msg": [],
                "kwargs": []
            }
        },
        "FieldLogger.copy": {
            "name": "copy",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "rem-master/pycommon/remcommon/models_gen.py": {
        "from_str": {
            "name": "from_str",
            "location": 37,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "from_none": {
            "name": "from_none",
            "location": 42,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "from_union": {
            "name": "from_union",
            "location": 47,
            "return": [],
            "arguments": {
                "fs": [],
                "x": []
            }
        },
        "from_datetime": {
            "name": "from_datetime",
            "location": 56,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "from_list": {
            "name": "from_list",
            "location": 60,
            "return": [],
            "arguments": {
                "f": [],
                "x": []
            }
        },
        "to_class": {
            "name": "to_class",
            "location": 65,
            "return": [],
            "arguments": {
                "c": [],
                "x": []
            }
        },
        "from_float": {
            "name": "from_float",
            "location": 70,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "to_enum": {
            "name": "to_enum",
            "location": 75,
            "return": [],
            "arguments": {
                "c": [],
                "x": []
            }
        },
        "to_float": {
            "name": "to_float",
            "location": 80,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "from_int": {
            "name": "from_int",
            "location": 85,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "from_dict": {
            "name": "from_dict",
            "location": 90,
            "return": [],
            "arguments": {
                "f": [],
                "x": []
            }
        },
        "from_bool": {
            "name": "from_bool",
            "location": 95,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "collection_name_from_dict": {
            "name": "collection_name_from_dict",
            "location": 798,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "collection_name_to_dict": {
            "name": "collection_name_to_dict",
            "location": 802,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "common_from_dict": {
            "name": "common_from_dict",
            "location": 806,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "common_to_dict": {
            "name": "common_to_dict",
            "location": 810,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "insurance_policy_from_dict": {
            "name": "insurance_policy_from_dict",
            "location": 814,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "insurance_policy_to_dict": {
            "name": "insurance_policy_to_dict",
            "location": 818,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "lease_from_dict": {
            "name": "lease_from_dict",
            "location": 822,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "lease_to_dict": {
            "name": "lease_to_dict",
            "location": 826,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "media_from_dict": {
            "name": "media_from_dict",
            "location": 830,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "media_to_dict": {
            "name": "media_to_dict",
            "location": 834,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "mongo_doc_from_dict": {
            "name": "mongo_doc_from_dict",
            "location": 838,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "mongo_doc_to_dict": {
            "name": "mongo_doc_to_dict",
            "location": 842,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "note_from_dict": {
            "name": "note_from_dict",
            "location": 846,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "note_to_dict": {
            "name": "note_to_dict",
            "location": 850,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "party_from_dict": {
            "name": "party_from_dict",
            "location": 854,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "party_to_dict": {
            "name": "party_to_dict",
            "location": 858,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "property_from_dict": {
            "name": "property_from_dict",
            "location": 862,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "property_to_dict": {
            "name": "property_to_dict",
            "location": 866,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "user_from_dict": {
            "name": "user_from_dict",
            "location": 870,
            "return": [],
            "arguments": {
                "s": []
            }
        },
        "user_to_dict": {
            "name": "user_to_dict",
            "location": 874,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "OID.from_dict": {
            "name": "from_dict",
            "location": 121,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "OID.to_dict": {
            "name": "to_dict",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InsurancePolicy.from_dict": {
            "name": "from_dict",
            "location": 152,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "InsurancePolicy.to_dict": {
            "name": "to_dict",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Note.from_dict": {
            "name": "from_dict",
            "location": 208,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Note.to_dict": {
            "name": "to_dict",
            "location": 221,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lease.from_dict": {
            "name": "from_dict",
            "location": 265,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Lease.to_dict": {
            "name": "to_dict",
            "location": 283,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Metadata.from_dict": {
            "name": "from_dict",
            "location": 308,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Metadata.to_dict": {
            "name": "to_dict",
            "location": 314,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Media.from_dict": {
            "name": "from_dict",
            "location": 344,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Media.to_dict": {
            "name": "to_dict",
            "location": 361,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MongoDoc.from_dict": {
            "name": "from_dict",
            "location": 394,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "MongoDoc.to_dict": {
            "name": "to_dict",
            "location": 404,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Party.from_dict": {
            "name": "from_dict",
            "location": 447,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Party.to_dict": {
            "name": "to_dict",
            "location": 466,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Owner.from_dict": {
            "name": "from_dict",
            "location": 492,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Owner.to_dict": {
            "name": "to_dict",
            "location": 498,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineItem.from_dict": {
            "name": "from_dict",
            "location": 518,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "LineItem.to_dict": {
            "name": "to_dict",
            "location": 524,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Payment.from_dict": {
            "name": "from_dict",
            "location": 537,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Payment.to_dict": {
            "name": "to_dict",
            "location": 543,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TaxBill.from_dict": {
            "name": "from_dict",
            "location": 561,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "TaxBill.to_dict": {
            "name": "to_dict",
            "location": 572,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TaxPropInfo.from_dict": {
            "name": "from_dict",
            "location": 601,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "TaxPropInfo.to_dict": {
            "name": "to_dict",
            "location": 618,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Property.from_dict": {
            "name": "from_dict",
            "location": 675,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "Property.to_dict": {
            "name": "to_dict",
            "location": 707,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "User.from_dict": {
            "name": "from_dict",
            "location": 763,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "User.to_dict": {
            "name": "to_dict",
            "location": 780,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "rem-master/pycommon/remcommon/watch.py": {
        "claim_coll": {
            "name": "claim_coll",
            "location": 46,
            "return": [],
            "arguments": {
                "db": []
            }
        }
    },
    "rem-master/pycommon/remcommon/__init__.py": {},
    "rem-master/pycommon/remcommon/inttest/test_watch.py": {
        "test_multiple_instances_coordinate.has_length": {
            "name": "has_length",
            "location": 134,
            "return": [],
            "arguments": {
                "le": []
            }
        }
    },
    "rem-master/pycommon/remcommon/inttest/__init__.py": {},
    "rem-master/pycommon/remtesting/containers.py": {
        "docker_client": {
            "name": "docker_client",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "tcp_socket_open": {
            "name": "tcp_socket_open",
            "location": 31,
            "return": [],
            "arguments": {
                "host": [],
                "port": []
            }
        },
        "container_ip": {
            "name": "container_ip",
            "location": 40,
            "return": [],
            "arguments": {
                "container": []
            }
        }
    },
    "rem-master/pycommon/remtesting/es.py": {},
    "rem-master/pycommon/remtesting/mongo.py": {},
    "rem-master/pycommon/remtesting/util.py": {
        "asyncify": {
            "name": "asyncify",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "rem-master/pycommon/remtesting/wait.py": {
        "wait_for": {
            "name": "wait_for",
            "location": 11,
            "return": [],
            "arguments": {
                "test_func": [],
                "timeout_seconds": []
            }
        }
    },
    "rem-master/pycommon/remtesting/__init__.py": {},
    "rem-master/search/remsearch/es.py": {},
    "rem-master/search/remsearch/text.py": {},
    "rem-master/search/remsearch/tikaclient.py": {
        "TikaClient.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "session": [],
                "host": [],
                "port": []
            }
        }
    },
    "rem-master/search/remsearch/watch.py": {
        "is_gridfs_collection": {
            "name": "is_gridfs_collection",
            "location": 100,
            "return": [],
            "arguments": {
                "collection": []
            }
        }
    },
    "rem-master/search/remsearch/__init__.py": {},
    "rem-master/search/remsearch/__main__.py": {},
    "rem-master/search/remsearch/inttest/test_files.py": {},
    "rem-master/search/remsearch/inttest/test_indexer.py": {},
    "rem-master/search/remsearch/inttest/util.py": {},
    "rem-master/search/remsearch/inttest/__init__.py": {},
    "rem-master/tax-info/remtaxinfo/constants.py": {},
    "rem-master/tax-info/remtaxinfo/fetch.py": {
        "Updater.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "mongo_db": [],
                "http_session": []
            }
        }
    },
    "rem-master/tax-info/remtaxinfo/watch.py": {},
    "rem-master/tax-info/remtaxinfo/__init__.py": {},
    "rem-master/tax-info/remtaxinfo/__main__.py": {},
    "rem-master/tax-info/remtaxinfo/adapters/cumberland_nc.py": {},
    "rem-master/tax-info/remtaxinfo/adapters/__init__.py": {},
    "rem-master/tax-info/remtaxinfo/adapters/tests/fixtures.py": {
        "load_fixture": {
            "name": "load_fixture",
            "location": 4,
            "return": [],
            "arguments": {
                "file_name": []
            }
        }
    },
    "rem-master/tax-info/remtaxinfo/adapters/tests/test_cumberland_nc.py": {},
    "rem-master/tax-info/remtaxinfo/adapters/tests/__init__.py": {},
    "rem-master/tax-info/remtaxinfo/util/adapter.py": {
        "adapter": {
            "name": "adapter",
            "location": 23,
            "return": [],
            "arguments": {
                "county": [],
                "state": []
            }
        },
        "get": {
            "name": "get",
            "location": 36,
            "return": [],
            "arguments": {
                "county": [],
                "state": []
            }
        },
        "adapter.decorator": {
            "name": "decorator",
            "location": 28,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "rem-master/tax-info/remtaxinfo/util/conversion.py": {
        "parse_currency_to_cents": {
            "name": "parse_currency_to_cents",
            "location": 7,
            "return": [],
            "arguments": {
                "amount": []
            }
        }
    },
    "rem-master/tax-info/remtaxinfo/util/models.py": {},
    "rem-master/tax-info/remtaxinfo/util/tables.py": {
        "parse_simple_vertical_table": {
            "name": "parse_simple_vertical_table",
            "location": 8,
            "return": [],
            "arguments": {
                "table": []
            }
        },
        "parse_simple_horizontal_table": {
            "name": "parse_simple_horizontal_table",
            "location": 19,
            "return": [],
            "arguments": {
                "table": [],
                "skip_columns": [],
                "skip_rows": []
            }
        },
        "parse_horizontal_table": {
            "name": "parse_horizontal_table",
            "location": 28,
            "return": [],
            "arguments": {
                "table": [],
                "skip_columns": [],
                "skip_rows": []
            }
        },
        "parse_2d_table": {
            "name": "parse_2d_table",
            "location": 45,
            "return": [],
            "arguments": {
                "table": [],
                "skip_columns": [],
                "skip_rows": [],
                "transpose": []
            }
        },
        "transpose_nested_dicts": {
            "name": "transpose_nested_dicts",
            "location": 74,
            "return": [],
            "arguments": {
                "di": []
            }
        }
    },
    "rem-master/tax-info/remtaxinfo/util/__init__.py": {},
    "rem-master/tax-info/remtaxinfo/util/tests/test_tables.py": {
        "test_parse_2d_table": {
            "name": "test_parse_2d_table",
            "location": 99,
            "return": [],
            "arguments": {
                "html": [],
                "transpose": [],
                "expected": []
            }
        },
        "test_transpose_nested_dicts": {
            "name": "test_transpose_nested_dicts",
            "location": 103,
            "return": [],
            "arguments": {}
        }
    },
    "rem-master/tax-info/remtaxinfo/util/tests/__init__.py": {},
    "rem-master/thumbnailer/remthumbnailer/server.py": {
        "make_app": {
            "name": "make_app",
            "location": 18,
            "return": [],
            "arguments": {
                "mongo_uri": [],
                "db_name": []
            }
        }
    },
    "rem-master/thumbnailer/remthumbnailer/__init__.py": {},
    "rem-master/thumbnailer/remthumbnailer/__main__.py": {}
}
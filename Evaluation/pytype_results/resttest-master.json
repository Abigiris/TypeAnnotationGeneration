{
    "resttest-master/setup.py": {},
    "resttest-master/resttest/main.py": {
        "main": {
            "name": "main",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "RestTest.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestTest.get_port": {
            "name": "get_port",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RestTest.run": {
            "name": "run",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "port": [
                    "int"
                ],
                "name": [
                    "Optional[str]"
                ]
            }
        },
        "RestTest._run_test_case": {
            "name": "_run_test_case",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "port": [
                    "int"
                ],
                "name": [
                    "str"
                ]
            }
        },
        "RestTest._run_all": {
            "name": "_run_all",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "port": [
                    "int"
                ]
            }
        }
    },
    "resttest-master/resttest/models.py": {
        "Env.fromdict": {
            "name": "fromdict",
            "location": 12,
            "return": [
                "_TEnv"
            ],
            "arguments": {
                "cls": [
                    "Type[_TEnv]"
                ],
                "port": [
                    "int"
                ],
                "raw": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Request.fromdict": {
            "name": "fromdict",
            "location": 26,
            "return": [
                "_TRequest"
            ],
            "arguments": {
                "cls": [
                    "Type[_TRequest]"
                ],
                "raw": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "Response.fromdict": {
            "name": "fromdict",
            "location": 41,
            "return": [
                "_TResponse"
            ],
            "arguments": {
                "cls": [
                    "Type[_TResponse]"
                ],
                "raw": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "EnvUpdate.fromdict": {
            "name": "fromdict",
            "location": 51,
            "return": [
                "_TEnvUpdate"
            ],
            "arguments": {
                "cls": [
                    "Type[_TEnvUpdate]"
                ],
                "raw": [
                    "Dict[(str, Any)]"
                ]
            }
        },
        "TestCase.fromdict": {
            "name": "fromdict",
            "location": 63,
            "return": [
                "_TTestCase"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTestCase]"
                ],
                "raw": [
                    "Dict[(str, Any)]"
                ]
            }
        }
    },
    "resttest-master/resttest/__init__.py": {},
    "resttest-master/resttest/service/random_port.py": {
        "get_random_port": {
            "name": "get_random_port",
            "location": 6,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "_find_unused_port": {
            "name": "_find_unused_port",
            "location": 19,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "resttest-master/resttest/service/reader.py": {
        "Reader.read_env": {
            "name": "read_env",
            "location": 18,
            "return": [
                "resttest.models.Env"
            ],
            "arguments": {
                "self": [],
                "port": [
                    "int"
                ]
            }
        },
        "Reader.read_test_case": {
            "name": "read_test_case",
            "location": 22,
            "return": [
                "resttest.models.TestCase"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "Reader.read_test_cases": {
            "name": "read_test_cases",
            "location": 26,
            "return": [
                "List[resttest.models.TestCase]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileReader.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "test_dir": [
                    "str"
                ]
            }
        },
        "FileReader.read_env": {
            "name": "read_env",
            "location": 34,
            "return": [
                "resttest.models.Env"
            ],
            "arguments": {
                "self": [],
                "port": [
                    "int"
                ]
            }
        },
        "FileReader.read_test_case": {
            "name": "read_test_case",
            "location": 38,
            "return": [
                "resttest.models.TestCase"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "FileReader.read_test_cases": {
            "name": "read_test_cases",
            "location": 43,
            "return": [
                "List[resttest.models.TestCase]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileReader._read_file": {
            "name": "_read_file",
            "location": 47,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "FileReader._append_suffix": {
            "name": "_append_suffix",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ]
            }
        },
        "FileReader._get_test_case_names": {
            "name": "_get_test_case_names",
            "location": 57,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileReader._sort_filenames": {
            "name": "_sort_filenames",
            "location": 65,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "filenames": [
                    "List[str]"
                ]
            }
        },
        "FileReader._number_filenames": {
            "name": "_number_filenames",
            "location": 70,
            "return": [
                "List[NumberedFilename]"
            ],
            "arguments": {
                "self": [],
                "filenames": [
                    "List[str]"
                ]
            }
        }
    },
    "resttest-master/resttest/service/rpc_service.py": {
        "make_request": {
            "name": "make_request",
            "location": 14,
            "return": [
                "resttest.models.Response"
            ],
            "arguments": {
                "req": [
                    "resttest.models.Request"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_make_path": {
            "name": "_make_path",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "req": [
                    "resttest.models.Request"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_make_request_without_body": {
            "name": "_make_request_without_body",
            "location": 28,
            "return": [
                "resttest.models.Response"
            ],
            "arguments": {
                "req": [
                    "resttest.models.Request"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_make_request_with_body": {
            "name": "_make_request_with_body",
            "location": 35,
            "return": [
                "resttest.models.Response"
            ],
            "arguments": {
                "req": [
                    "resttest.models.Request"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_make_headers": {
            "name": "_make_headers",
            "location": 45,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "env": [
                    "resttest.models.Env"
                ],
                "req": [
                    "resttest.models.Request"
                ]
            }
        },
        "_map_response": {
            "name": "_map_response",
            "location": 52,
            "return": [
                "resttest.models.Response"
            ],
            "arguments": {
                "resp": [
                    "requests.models.Response"
                ]
            }
        }
    },
    "resttest-master/resttest/service/template_util.py": {
        "resolve_dict": {
            "name": "resolve_dict",
            "location": 10,
            "return": [
                "dict"
            ],
            "arguments": {
                "env": [
                    "resttest.models.Env"
                ],
                "body": [
                    "dict"
                ]
            }
        },
        "resolve_value": {
            "name": "resolve_value",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "env": [
                    "resttest.models.Env"
                ],
                "val": [
                    "str"
                ]
            }
        }
    },
    "resttest-master/resttest/service/test_service.py": {
        "run_tests": {
            "name": "run_tests",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "test_cases": [
                    "List[resttest.models.TestCase]"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_run_test": {
            "name": "_run_test",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "number": [
                    "int"
                ],
                "test_case": [
                    "resttest.models.TestCase"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_assert_response": {
            "name": "_assert_response",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "test_case": [
                    "resttest.models.TestCase"
                ],
                "actual": [
                    "resttest.models.Response"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_assert_body": {
            "name": "_assert_body",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "test_case": [
                    "resttest.models.TestCase"
                ],
                "actual": [
                    "resttest.models.Response"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_assert_body_content": {
            "name": "_assert_body_content",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "test_case": [
                    "resttest.models.TestCase"
                ],
                "expected": [
                    "Dict[(str, Any)]"
                ],
                "actual": [
                    "Dict[(str, str)]"
                ]
            }
        },
        "_update_env": {
            "name": "_update_env",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "response_body": [
                    "Dict[(str, str)]"
                ],
                "updates": [
                    "List[resttest.models.EnvUpdate]"
                ],
                "env": [
                    "resttest.models.Env"
                ]
            }
        },
        "_fail": {
            "name": "_fail",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "test_case": [
                    "resttest.models.TestCase"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "_log_test_time": {
            "name": "_log_test_time",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "start_time": [
                    "float"
                ]
            }
        }
    },
    "resttest-master/resttest/service/__init__.py": {}
}
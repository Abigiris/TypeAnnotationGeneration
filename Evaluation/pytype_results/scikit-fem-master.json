{
    "scikit-fem-master/docs/conf.py": {},
    "scikit-fem-master/docs/examples/ex01.py": {
        "laplace": {
            "name": "laplace",
            "location": 19,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "_": []
            }
        },
        "rhs": {
            "name": "rhs",
            "location": 25,
            "return": [],
            "arguments": {
                "v": [],
                "_": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 40,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex02.py": {
        "bilinf": {
            "name": "bilinf",
            "location": 89,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "bilinf.C": {
            "name": "C",
            "location": 95,
            "return": [],
            "arguments": {
                "T": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex03.py": {
        "mass": {
            "name": "mass",
            "location": 29,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 50,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex04.py": {
        "bilin_mortar": {
            "name": "bilin_mortar",
            "location": 110,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "gap": {
            "name": "gap",
            "location": 118,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "lin_mortar": {
            "name": "lin_mortar",
            "location": 124,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 196,
            "return": [],
            "arguments": {}
        },
        "proj_cauchy": {
            "name": "proj_cauchy",
            "location": 167,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "mass": {
            "name": "mass",
            "location": 171,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex05.py": {
        "facetbilinf": {
            "name": "facetbilinf",
            "location": 32,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "facetlinf": {
            "name": "facetlinf",
            "location": 39,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex06.py": {},
    "scikit-fem-master/docs/examples/ex07.py": {
        "dgform": {
            "name": "dgform",
            "location": 16,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "p": []
            }
        },
        "nitscheform": {
            "name": "nitscheform",
            "location": 23,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "p": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 37,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex08.py": {
        "visualize": {
            "name": "visualize",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex09.py": {
        "build_pc_amgsa": {
            "name": "build_pc_amgsa",
            "location": 70,
            "return": [],
            "arguments": {
                "A": []
            }
        },
        "build_pc_amgcl": {
            "name": "build_pc_amgcl",
            "location": 82,
            "return": [],
            "arguments": {
                "A": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex10.py": {
        "jacobian": {
            "name": "jacobian",
            "location": 15,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "p": []
            }
        },
        "rhs": {
            "name": "rhs",
            "location": 23,
            "return": [],
            "arguments": {
                "v": [],
                "p": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex11.py": {},
    "scikit-fem-master/docs/examples/ex12.py": {
        "visualize": {
            "name": "visualize",
            "location": 41,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex13.py": {
        "port_flux": {
            "name": "port_flux",
            "location": 56,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 66,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex14.py": {
        "dirichlet": {
            "name": "dirichlet",
            "location": 36,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 45,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex15.py": {},
    "scikit-fem-master/docs/examples/ex16.py": {
        "stiffness": {
            "name": "stiffness",
            "location": 34,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex17.py": {
        "conduction": {
            "name": "conduction",
            "location": 47,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex18.py": {
        "body_force": {
            "name": "body_force",
            "location": 63,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex19.py": {
        "exact": {
            "name": "exact",
            "location": 76,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "evolve": {
            "name": "evolve",
            "location": 80,
            "return": [],
            "arguments": {
                "t": [],
                "u": []
            }
        },
        "update": {
            "name": "update",
            "location": 113,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex20.py": {
        "biharmonic": {
            "name": "biharmonic",
            "location": 45,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex21.py": {
        "mass": {
            "name": "mass",
            "location": 82,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex22.py": {
        "load_func": {
            "name": "load_func",
            "location": 23,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        },
        "load": {
            "name": "load",
            "location": 27,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "eval_estimator": {
            "name": "eval_estimator",
            "location": 31,
            "return": [],
            "arguments": {
                "m": [],
                "u": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "eval_estimator.interior_residual": {
            "name": "interior_residual",
            "location": 36,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "eval_estimator.edge_jump": {
            "name": "edge_jump",
            "location": 48,
            "return": [],
            "arguments": {
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex24.py": {
        "parabolic": {
            "name": "parabolic",
            "location": 43,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex25.py": {
        "advection": {
            "name": "advection",
            "location": 38,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex26.py": {},
    "scikit-fem-master/docs/examples/ex28.py": {
        "conduction": {
            "name": "conduction",
            "location": 85,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "advection": {
            "name": "advection",
            "location": 90,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "exact": {
            "name": "exact",
            "location": 114,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex29.py": {
        "base_velocity": {
            "name": "base_velocity",
            "location": 72,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "base_shear": {
            "name": "base_shear",
            "location": 77,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex30.py": {
        "body_force": {
            "name": "body_force",
            "location": 73,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "flow": {
            "name": "flow",
            "location": 86,
            "return": [],
            "arguments": {
                "pressure": []
            }
        },
        "dilatation": {
            "name": "dilatation",
            "location": 96,
            "return": [],
            "arguments": {
                "pressure": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex31.py": {},
    "scikit-fem-master/docs/examples/ex32.py": {
        "body_force": {
            "name": "body_force",
            "location": 117,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "precondition": {
            "name": "precondition",
            "location": 139,
            "return": [],
            "arguments": {
                "uvp": []
            }
        },
        "build_pc_amg": {
            "name": "build_pc_amg",
            "location": 77,
            "return": [],
            "arguments": {
                "A": []
            }
        },
        "Sphere.mesh": {
            "name": "mesh",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sphere.pressure": {
            "name": "pressure",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": [],
                "z": []
            }
        },
        "Sphere.pressure_error": {
            "name": "pressure_error",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Sphere.pressure_error.form": {
            "name": "form",
            "location": 101,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex33.py": {
        "dudv": {
            "name": "dudv",
            "location": 29,
            "return": [],
            "arguments": {
                "E": [],
                "v": [],
                "w": []
            }
        },
        "f": {
            "name": "f",
            "location": 33,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "z": []
            }
        },
        "fv": {
            "name": "fv",
            "location": 41,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex34.py": {
        "bilinf": {
            "name": "bilinf",
            "location": 19,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "linf": {
            "name": "linf",
            "location": 24,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex35.py": {},
    "scikit-fem-master/docs/examples/ex36.py": {
        "F1": {
            "name": "F1",
            "location": 87,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "F2": {
            "name": "F2",
            "location": 96,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "A11": {
            "name": "A11",
            "location": 107,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "A12": {
            "name": "A12",
            "location": 120,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "A22": {
            "name": "A22",
            "location": 128,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "volume": {
            "name": "volume",
            "location": 140,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "a1": {
            "name": "a1",
            "location": 190,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "a2": {
            "name": "a2",
            "location": 195,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "b11": {
            "name": "b11",
            "location": 200,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "b12": {
            "name": "b12",
            "location": 205,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "b22": {
            "name": "b22",
            "location": 210,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "vol": {
            "name": "vol",
            "location": 215,
            "return": [],
            "arguments": {
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex37.py": {
        "bilinf": {
            "name": "bilinf",
            "location": 16,
            "return": [],
            "arguments": {
                "sigma": [],
                "u": [],
                "tau": [],
                "v": [],
                "w": []
            }
        },
        "linf": {
            "name": "linf",
            "location": 21,
            "return": [],
            "arguments": {
                "tau": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex38.py": {
        "greens": {
            "name": "greens",
            "location": 29,
            "return": [],
            "arguments": {
                "a": [],
                "s": [],
                "x": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 55,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex39.py": {
        "exact": {
            "name": "exact",
            "location": 58,
            "return": [],
            "arguments": {
                "t": []
            }
        },
        "evolve": {
            "name": "evolve",
            "location": 62,
            "return": [],
            "arguments": {
                "t": [],
                "u": []
            }
        },
        "update": {
            "name": "update",
            "location": 98,
            "return": [],
            "arguments": {
                "event": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex40.py": {
        "laplace": {
            "name": "laplace",
            "location": 28,
            "return": [],
            "arguments": {
                "u": [],
                "ut": [],
                "v": [],
                "vt": [],
                "w": []
            }
        },
        "hdg": {
            "name": "hdg",
            "location": 33,
            "return": [],
            "arguments": {
                "u": [],
                "ut": [],
                "v": [],
                "vt": [],
                "w": []
            }
        },
        "load": {
            "name": "load",
            "location": 41,
            "return": [],
            "arguments": {
                "v": [],
                "vt": [],
                "w": []
            }
        },
        "visualize": {
            "name": "visualize",
            "location": 51,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex41.py": {
        "visualize": {
            "name": "visualize",
            "location": 40,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/docs/examples/ex42.py": {
        "advection": {
            "name": "advection",
            "location": 24,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "_": []
            }
        },
        "source": {
            "name": "source",
            "location": 29,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex43.py": {
        "deformation_gradient": {
            "name": "deformation_gradient",
            "location": 95,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "L": {
            "name": "L",
            "location": 101,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "a": {
            "name": "a",
            "location": 108,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex44.py": {
        "evolve": {
            "name": "evolve",
            "location": 33,
            "return": [],
            "arguments": {
                "t": [],
                "u": []
            }
        },
        "bump": {
            "name": "bump",
            "location": 40,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "update": {
            "name": "update",
            "location": 56,
            "return": [],
            "arguments": {
                "t_u": []
            }
        }
    },
    "scikit-fem-master/docs/examples/ex45.py": {
        "energy": {
            "name": "energy",
            "location": 19,
            "return": [],
            "arguments": {
                "u": [],
                "_": []
            }
        }
    },
    "scikit-fem-master/docs/examples/performance.py": {
        "pre": {
            "name": "pre",
            "location": 12,
            "return": [],
            "arguments": {
                "N": []
            }
        },
        "assembler": {
            "name": "assembler",
            "location": 21,
            "return": [],
            "arguments": {
                "m": []
            }
        }
    },
    "scikit-fem-master/skfem/generic_utils.py": {
        "hash_args": {
            "name": "hash_args",
            "location": 9,
            "return": [
                "Tuple[(int, ...)]"
            ],
            "arguments": {}
        },
        "deprecated": {
            "name": "deprecated",
            "location": 31,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "replacement": []
            }
        },
        "OrientedBoundary.__new__": {
            "name": "__new__",
            "location": 19,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "indices": [],
                "ori": []
            }
        },
        "OrientedBoundary.__array_finalize__": {
            "name": "__array_finalize__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "deprecated.deprecated_decorator": {
            "name": "deprecated_decorator",
            "location": 32,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "deprecated.deprecated_decorator.new_func": {
            "name": "new_func",
            "location": 34,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/skfem/helpers.py": {
        "jump": {
            "name": "jump",
            "location": 13,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "grad": {
            "name": "grad",
            "location": 23,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "div": {
            "name": "div",
            "location": 28,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "curl": {
            "name": "curl",
            "location": 40,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "d": {
            "name": "d",
            "location": 50,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "sym_grad": {
            "name": "sym_grad",
            "location": 61,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "dd": {
            "name": "dd",
            "location": 66,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "ddd": {
            "name": "ddd",
            "location": 71,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "dddd": {
            "name": "dddd",
            "location": 76,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "inner": {
            "name": "inner",
            "location": 81,
            "return": [],
            "arguments": {
                "u": [],
                "v": []
            }
        },
        "dot": {
            "name": "dot",
            "location": 98,
            "return": [],
            "arguments": {
                "u": [],
                "v": []
            }
        },
        "ddot": {
            "name": "ddot",
            "location": 103,
            "return": [],
            "arguments": {
                "u": [],
                "v": []
            }
        },
        "dddot": {
            "name": "dddot",
            "location": 108,
            "return": [],
            "arguments": {
                "u": [],
                "v": []
            }
        },
        "prod": {
            "name": "prod",
            "location": 113,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "mul": {
            "name": "mul",
            "location": 122,
            "return": [],
            "arguments": {
                "A": [],
                "x": []
            }
        },
        "trace": {
            "name": "trace",
            "location": 127,
            "return": [],
            "arguments": {
                "T": []
            }
        },
        "transpose": {
            "name": "transpose",
            "location": 132,
            "return": [],
            "arguments": {
                "T": []
            }
        },
        "eye": {
            "name": "eye",
            "location": 137,
            "return": [],
            "arguments": {
                "w": [],
                "n": []
            }
        },
        "identity": {
            "name": "identity",
            "location": 143,
            "return": [],
            "arguments": {
                "w": [],
                "N": []
            }
        },
        "det": {
            "name": "det",
            "location": 154,
            "return": [],
            "arguments": {
                "A": []
            }
        },
        "inv": {
            "name": "inv",
            "location": 169,
            "return": [],
            "arguments": {
                "A": []
            }
        }
    },
    "scikit-fem-master/skfem/quadrature.py": {
        "get_quadrature": {
            "name": "get_quadrature",
            "location": 11,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "refdom": [],
                "norder": []
            }
        },
        "get_quadrature_tet": {
            "name": "get_quadrature_tet",
            "location": 75,
            "return": [
                "Tuple[(np.ndarray, Any)]"
            ],
            "arguments": {
                "norder": []
            }
        },
        "get_quadrature_tri": {
            "name": "get_quadrature_tri",
            "location": 826,
            "return": [
                "Tuple[(np.ndarray, np.ndarray)]"
            ],
            "arguments": {
                "norder": []
            }
        },
        "get_quadrature_line": {
            "name": "get_quadrature_line",
            "location": 2818,
            "return": [
                "Tuple[(np.ndarray, Any)]"
            ],
            "arguments": {
                "norder": []
            }
        },
        "get_quadrature_point": {
            "name": "get_quadrature_point",
            "location": 2826,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "norder": []
            }
        }
    },
    "scikit-fem-master/skfem/refdom.py": {
        "Refdom.init_refdom": {
            "name": "init_refdom",
            "location": 22,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Refdom.dim": {
            "name": "dim",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Refdom.on_facet": {
            "name": "on_facet",
            "location": 30,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "cls": [],
                "i": [],
                "X": []
            }
        },
        "RefTri.on_facet": {
            "name": "on_facet",
            "location": 72,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "i": [],
                "X": []
            }
        }
    },
    "scikit-fem-master/skfem/utils.py": {
        "build_pc_ilu": {
            "name": "build_pc_ilu",
            "location": 47,
            "return": [],
            "arguments": {
                "A": [],
                "drop_tol": [],
                "fill_factor": []
            }
        },
        "build_pc_diag": {
            "name": "build_pc_diag",
            "location": 56,
            "return": [],
            "arguments": {
                "A": []
            }
        },
        "solver_eigen_scipy": {
            "name": "solver_eigen_scipy",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "solver_eigen_scipy_sym": {
            "name": "solver_eigen_scipy_sym",
            "location": 87,
            "return": [],
            "arguments": {}
        },
        "solver_direct_scipy": {
            "name": "solver_direct_scipy",
            "location": 111,
            "return": [],
            "arguments": {}
        },
        "solver_iter_krylov": {
            "name": "solver_iter_krylov",
            "location": 121,
            "return": [],
            "arguments": {
                "krylov": [],
                "verbose": []
            }
        },
        "solver_iter_pcg": {
            "name": "solver_iter_pcg",
            "location": 165,
            "return": [],
            "arguments": {}
        },
        "solver_iter_cg": {
            "name": "solver_iter_cg",
            "location": 170,
            "return": [],
            "arguments": {}
        },
        "solve_eigen": {
            "name": "solve_eigen",
            "location": 200,
            "return": [],
            "arguments": {
                "A": [],
                "M": [],
                "x": [],
                "I": [],
                "solver": []
            }
        },
        "solve_linear": {
            "name": "solve_linear",
            "location": 218,
            "return": [],
            "arguments": {
                "A": [],
                "b": [],
                "x": [],
                "I": [],
                "solver": []
            }
        },
        "solve": {
            "name": "solve",
            "location": 235,
            "return": [],
            "arguments": {
                "A": [],
                "b": [],
                "x": [],
                "I": [],
                "solver": []
            }
        },
        "_flatten_dofs": {
            "name": "_flatten_dofs",
            "location": 271,
            "return": [],
            "arguments": {
                "S": []
            }
        },
        "_init_bc": {
            "name": "_init_bc",
            "location": 289,
            "return": [],
            "arguments": {
                "A": [],
                "b": [],
                "x": [],
                "I": [],
                "D": []
            }
        },
        "enforce": {
            "name": "enforce",
            "location": 321,
            "return": [],
            "arguments": {
                "A": [],
                "b": [],
                "x": [],
                "I": [],
                "D": [],
                "diag": [],
                "overwrite": []
            }
        },
        "penalize": {
            "name": "penalize",
            "location": 397,
            "return": [],
            "arguments": {
                "A": [],
                "b": [],
                "x": [],
                "I": [],
                "D": [],
                "epsilon": [],
                "overwrite": []
            }
        },
        "condense": {
            "name": "condense",
            "location": 456,
            "return": [],
            "arguments": {
                "A": [],
                "b": [],
                "x": [],
                "I": [],
                "D": [],
                "expand": []
            }
        },
        "rcm": {
            "name": "rcm",
            "location": 603,
            "return": [],
            "arguments": {
                "A": [],
                "b": []
            }
        },
        "adaptive_theta": {
            "name": "adaptive_theta",
            "location": 610,
            "return": [],
            "arguments": {
                "est": [],
                "theta": [],
                "max": []
            }
        },
        "projection": {
            "name": "projection",
            "location": 619,
            "return": [],
            "arguments": {
                "fun": [],
                "basis_to": [],
                "basis_from": [],
                "diff": [],
                "I": [],
                "expand": []
            }
        },
        "project": {
            "name": "project",
            "location": 692,
            "return": [],
            "arguments": {
                "fun": [],
                "basis_from": [],
                "basis_to": [],
                "diff": [],
                "I": [],
                "expand": []
            }
        },
        "solver_eigen_scipy.solver": {
            "name": "solver",
            "location": 79,
            "return": [],
            "arguments": {
                "K": [],
                "M": []
            }
        },
        "solver_eigen_scipy_sym.solver": {
            "name": "solver",
            "location": 103,
            "return": [],
            "arguments": {
                "K": [],
                "M": []
            }
        },
        "solver_direct_scipy.solver": {
            "name": "solver",
            "location": 114,
            "return": [],
            "arguments": {
                "A": [],
                "b": []
            }
        },
        "solver_iter_krylov.callback": {
            "name": "callback",
            "location": 145,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "solver_iter_krylov.solver": {
            "name": "solver",
            "location": 149,
            "return": [],
            "arguments": {
                "A": [],
                "b": []
            }
        },
        "solver_iter_cg.solver": {
            "name": "solver",
            "location": 173,
            "return": [],
            "arguments": {
                "A": [],
                "b": []
            }
        },
        "projection.mass": {
            "name": "mass",
            "location": 650,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "projection.deriv": {
            "name": "deriv",
            "location": 670,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "projection.funv": {
            "name": "funv",
            "location": 665,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "_flatten_dofs._flatten_helper": {
            "name": "_flatten_helper",
            "location": 279,
            "return": [],
            "arguments": {
                "S": [],
                "key": []
            }
        }
    },
    "scikit-fem-master/skfem/__about__.py": {},
    "scikit-fem-master/skfem/__init__.py": {},
    "scikit-fem-master/skfem/assembly/dofs.py": {
        "DofsView.__repr__": {
            "name": "__repr__",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView.__str__": {
            "name": "__str__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView.flatten": {
            "name": "flatten",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView._intersect": {
            "name": "_intersect",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "DofsView._intersect_tuples": {
            "name": "_intersect_tuples",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "DofsView.keep": {
            "name": "keep",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "dofnames": []
            }
        },
        "DofsView.drop": {
            "name": "drop",
            "location": 133,
            "return": [],
            "arguments": {
                "self": [],
                "dofnames": []
            }
        },
        "DofsView.all": {
            "name": "all",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DofsView.__array__": {
            "name": "__array__",
            "location": 164,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView.nodal": {
            "name": "nodal",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView.facet": {
            "name": "facet",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView.edge": {
            "name": "edge",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView.interior": {
            "name": "interior",
            "location": 189,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DofsView.__getattr__": {
            "name": "__getattr__",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "DofsView.__or__": {
            "name": "__or__",
            "location": 201,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "DofsView.__add__": {
            "name": "__add__",
            "location": 210,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Dofs.__init__": {
            "name": "__init__",
            "location": 228,
            "return": [],
            "arguments": {
                "self": [],
                "topo": [],
                "element": [],
                "offset": []
            }
        },
        "Dofs.get_element_dofs": {
            "name": "get_element_dofs",
            "location": 300,
            "return": [],
            "arguments": {
                "self": [],
                "elements": [],
                "skip_dofnames": []
            }
        },
        "Dofs.get_facet_dofs": {
            "name": "get_facet_dofs",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "facets": [],
                "skip_dofnames": []
            }
        },
        "Dofs._by_name": {
            "name": "_by_name",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "dofs": [],
                "off": [],
                "ix": [],
                "rows": []
            }
        },
        "Dofs._dofnames_to_rows": {
            "name": "_dofnames_to_rows",
            "location": 399,
            "return": [],
            "arguments": {
                "self": [],
                "dofnames": [],
                "skip": []
            }
        },
        "Dofs._dofnames_to_rows.check": {
            "name": "check",
            "location": 408,
            "return": [],
            "arguments": {
                "x": [],
                "y": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/__init__.py": {
        "_sum": {
            "name": "_sum",
            "location": 64,
            "return": [],
            "arguments": {
                "blocks": []
            }
        },
        "asm": {
            "name": "asm",
            "location": 70,
            "return": [],
            "arguments": {
                "form": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/basis/abstract_basis.py": {
        "AbstractBasis.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "mesh": [],
                "elem": [],
                "mapping": [],
                "intorder": [],
                "quadrature": [],
                "refdom": [],
                "dofs": []
            }
        },
        "AbstractBasis.nodal_dofs": {
            "name": "nodal_dofs",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.facet_dofs": {
            "name": "facet_dofs",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.edge_dofs": {
            "name": "edge_dofs",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.interior_dofs": {
            "name": "interior_dofs",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.N": {
            "name": "N",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.element_dofs": {
            "name": "element_dofs",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.complement_dofs": {
            "name": "complement_dofs",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.find_dofs": {
            "name": "find_dofs",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "facets": [],
                "skip": []
            }
        },
        "AbstractBasis.get_dofs": {
            "name": "get_dofs",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "facets": [],
                "elements": [],
                "skip": []
            }
        },
        "AbstractBasis.__repr__": {
            "name": "__repr__",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.__str__": {
            "name": "__str__",
            "location": 264,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.default_parameters": {
            "name": "default_parameters",
            "location": 267,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.interpolate": {
            "name": "interpolate",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "w": []
            }
        },
        "AbstractBasis.split_indices": {
            "name": "split_indices",
            "location": 324,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.split_bases": {
            "name": "split_bases",
            "location": 351,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.quadrature": {
            "name": "quadrature",
            "location": 364,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.split": {
            "name": "split",
            "location": 367,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "AbstractBasis.zero_w": {
            "name": "zero_w",
            "location": 372,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.zeros": {
            "name": "zeros",
            "location": 377,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis.with_element": {
            "name": "with_element",
            "location": 381,
            "return": [],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "AbstractBasis.global_coordinates": {
            "name": "global_coordinates",
            "location": 385,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "AbstractBasis._normalize_interp": {
            "name": "_normalize_interp",
            "location": 388,
            "return": [],
            "arguments": {
                "self": [],
                "interp": []
            }
        },
        "AbstractBasis._projection": {
            "name": "_projection",
            "location": 401,
            "return": [],
            "arguments": {
                "self": [],
                "interp": []
            }
        },
        "AbstractBasis.project": {
            "name": "project",
            "location": 420,
            "return": [],
            "arguments": {
                "self": [],
                "interp": []
            }
        },
        "AbstractBasis.plot": {
            "name": "plot",
            "location": 423,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "visuals": []
            }
        },
        "AbstractBasis.plot3": {
            "name": "plot3",
            "location": 428,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "visuals": []
            }
        },
        "AbstractBasis.draw": {
            "name": "draw",
            "location": 435,
            "return": [],
            "arguments": {
                "self": [],
                "visuals": []
            }
        },
        "AbstractBasis.get_dofs.to_indices": {
            "name": "to_indices",
            "location": 232,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "AbstractBasis.interpolate.linear_combination": {
            "name": "linear_combination",
            "location": 302,
            "return": [],
            "arguments": {
                "n": [],
                "refn": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/basis/cell_basis.py": {
        "CellBasis.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "mesh": [],
                "elem": [],
                "mapping": [],
                "intorder": [],
                "elements": [],
                "quadrature": [],
                "dofs": []
            }
        },
        "CellBasis.default_parameters": {
            "name": "default_parameters",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CellBasis.global_coordinates": {
            "name": "global_coordinates",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CellBasis.mesh_parameters": {
            "name": "mesh_parameters",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CellBasis.refinterp": {
            "name": "refinterp",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "y": [],
                "nrefs": [],
                "Nrefs": []
            }
        },
        "CellBasis.probes": {
            "name": "probes",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "CellBasis.point_source": {
            "name": "point_source",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "CellBasis.interpolator": {
            "name": "interpolator",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "CellBasis.with_element": {
            "name": "with_element",
            "location": 223,
            "return": [],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "CellBasis.project": {
            "name": "project",
            "location": 233,
            "return": [],
            "arguments": {
                "self": [],
                "interp": [],
                "elements": []
            }
        },
        "CellBasis.interpolator.interpfun": {
            "name": "interpfun",
            "location": 208,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/basis/facet_basis.py": {
        "FacetBasis.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "mesh": [],
                "elem": [],
                "mapping": [],
                "intorder": [],
                "quadrature": [],
                "facets": [],
                "dofs": [],
                "side": []
            }
        },
        "FacetBasis.default_parameters": {
            "name": "default_parameters",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FacetBasis.global_coordinates": {
            "name": "global_coordinates",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FacetBasis.mesh_parameters": {
            "name": "mesh_parameters",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FacetBasis._trace_project": {
            "name": "_trace_project",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "elem": []
            }
        },
        "FacetBasis.trace": {
            "name": "trace",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "projection": [],
                "target_elem": []
            }
        },
        "FacetBasis.with_element": {
            "name": "with_element",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "FacetBasis.project": {
            "name": "project",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "interp": [],
                "facets": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/basis/interior_facet_basis.py": {
        "InteriorFacetBasis.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "mesh": [],
                "elem": [],
                "mapping": [],
                "intorder": [],
                "quadrature": [],
                "facets": [],
                "dofs": [],
                "side": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/basis/mortar_facet_basis.py": {
        "MortarFacetBasis.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "mesh": [],
                "elem": [],
                "mapping": [],
                "intorder": [],
                "quadrature": [],
                "facets": [],
                "dofs": [],
                "side": []
            }
        },
        "MortarFacetBasis.default_parameters": {
            "name": "default_parameters",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/basis/__init__.py": {},
    "scikit-fem-master/skfem/assembly/form/bilinear_form.py": {
        "BilinearForm._assemble": {
            "name": "_assemble",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "ubasis": [],
                "vbasis": []
            }
        },
        "BilinearForm.assemble": {
            "name": "assemble",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BilinearForm._kernel": {
            "name": "_kernel",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "u": [],
                "v": [],
                "w": [],
                "dx": []
            }
        },
        "BilinearForm._threaded_kernel": {
            "name": "_threaded_kernel",
            "location": 153,
            "return": [],
            "arguments": {
                "self": [],
                "data": [],
                "ix": [],
                "ubasis": [],
                "vbasis": [],
                "wdict": [],
                "dx": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/form/coo_data.py": {
        "COOData._assemble_scipy_csr": {
            "name": "_assemble_scipy_csr",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "indices": [],
                "data": [],
                "shape": [],
                "local_shape": []
            }
        },
        "COOData.__radd__": {
            "name": "__radd__",
            "location": 38,
            "return": [
                "_TCOOData@@COOData@@"
            ],
            "arguments": {
                "self": [
                    "_TCOOData@@COOData@@"
                ],
                "other": []
            }
        },
        "COOData.tolocal": {
            "name": "tolocal",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "basis": []
            }
        },
        "COOData.fromlocal": {
            "name": "fromlocal",
            "location": 65,
            "return": [
                "_TCOOData@@COOData@@"
            ],
            "arguments": {
                "self": [
                    "_TCOOData@@COOData@@"
                ],
                "local": []
            }
        },
        "COOData.inverse": {
            "name": "inverse",
            "location": 72,
            "return": [
                "_TCOOData@@COOData@@"
            ],
            "arguments": {
                "self": [
                    "_TCOOData@@COOData@@"
                ]
            }
        },
        "COOData.__add__": {
            "name": "__add__",
            "location": 76,
            "return": [
                "_TCOOData@@COOData@@"
            ],
            "arguments": {
                "self": [
                    "_TCOOData@@COOData@@"
                ],
                "other": []
            }
        },
        "COOData.tocsr": {
            "name": "tocsr",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "COOData.toarray": {
            "name": "toarray",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "COOData.astuple": {
            "name": "astuple",
            "location": 115,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "COOData.todefault": {
            "name": "todefault",
            "location": 118,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "COOData.dot": {
            "name": "dot",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "D": []
            }
        },
        "COOData.solve": {
            "name": "solve",
            "location": 151,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "b": [],
                "D": [],
                "tol": [],
                "maxiters": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/form/form.py": {
        "FormExtraParams.__getattr__": {
            "name": "__getattr__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "attr": []
            }
        },
        "Form.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "form": [],
                "dtype": [],
                "nthreads": []
            }
        },
        "Form.partial": {
            "name": "partial",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Form.block": {
            "name": "block",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Form.__call__": {
            "name": "__call__",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Form.assemble": {
            "name": "assemble",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Form.coo_data": {
            "name": "coo_data",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Form._normalize_asm_kwargs": {
            "name": "_normalize_asm_kwargs",
            "location": 85,
            "return": [],
            "arguments": {
                "w": [],
                "basis": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/form/functional.py": {
        "Functional._kernel": {
            "name": "_kernel",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "w": [],
                "dx": []
            }
        },
        "Functional.elemental": {
            "name": "elemental",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "v": []
            }
        },
        "Functional._assemble": {
            "name": "_assemble",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "ubasis": [],
                "vbasis": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/form/linear_form.py": {
        "LinearForm._assemble": {
            "name": "_assemble",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "ubasis": [],
                "vbasis": []
            }
        },
        "LinearForm._kernel": {
            "name": "_kernel",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "v": [],
                "w": [],
                "dx": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/form/trilinear_form.py": {
        "TrilinearForm._assemble": {
            "name": "_assemble",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "ubasis": [],
                "vbasis": [],
                "wbasis": []
            }
        },
        "TrilinearForm._kernel": {
            "name": "_kernel",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "u": [],
                "v": [],
                "w": [],
                "params": [],
                "dx": []
            }
        }
    },
    "scikit-fem-master/skfem/assembly/form/__init__.py": {},
    "scikit-fem-master/skfem/element/discrete_field.py": {
        "DiscreteField.__new__": {
            "name": "__new__",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "value": [],
                "grad": [],
                "div": [],
                "curl": [],
                "hess": [],
                "grad3": [],
                "grad4": [],
                "grad5": [],
                "grad6": []
            }
        },
        "DiscreteField.__array_finalize__": {
            "name": "__array_finalize__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "DiscreteField.__getitem__": {
            "name": "__getitem__",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "DiscreteField.__array_wrap__": {
            "name": "__array_wrap__",
            "location": 58,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": [],
                "out_arr": [],
                "context": []
            }
        },
        "DiscreteField.get": {
            "name": "get",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "n": []
            }
        },
        "DiscreteField.astuple": {
            "name": "astuple",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiscreteField.value": {
            "name": "value",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiscreteField.zeros": {
            "name": "zeros",
            "location": 78,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DiscreteField.__repr__": {
            "name": "__repr__",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DiscreteField.__reduce__": {
            "name": "__reduce__",
            "location": 96,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DiscreteField.__setstate__": {
            "name": "__setstate__",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "state": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element.py": {
        "Element.dim": {
            "name": "dim",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.orient": {
            "name": "orient",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "i": [],
                "tind": []
            }
        },
        "Element.__call__": {
            "name": "__call__",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.gbasis": {
            "name": "gbasis",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        },
        "Element._index_error": {
            "name": "_index_error",
            "location": 102,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Element.condensed": {
            "name": "condensed",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element._bfun_counts": {
            "name": "_bfun_counts",
            "location": 140,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Element.__mul__": {
            "name": "__mul__",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Element.condensed.gbasis": {
            "name": "gbasis",
            "location": 126,
            "return": [],
            "arguments": {
                "obj": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_composite.py": {
        "ElementComposite.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementComposite.dim": {
            "name": "dim",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementComposite._deduce_bfun": {
            "name": "_deduce_bfun",
            "location": 62,
            "return": [],
            "arguments": {
                "self": [],
                "i": []
            }
        },
        "ElementComposite.gbasis": {
            "name": "gbasis",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_dg.py": {
        "ElementDG.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [],
            "arguments": {
                "self": [],
                "elem": []
            }
        },
        "ElementDG.gbasis": {
            "name": "gbasis",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementDG.lbasis": {
            "name": "lbasis",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_global.py": {
        "ElementGlobal.gbasis": {
            "name": "gbasis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        },
        "ElementGlobal._pbasis_create": {
            "name": "_pbasis_create",
            "location": 58,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "j": [],
                "k": [],
                "dx": [],
                "dy": [],
                "dz": []
            }
        },
        "ElementGlobal._pbasis_init": {
            "name": "_pbasis_init",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "maxdeg": [],
                "dim": [],
                "Ndiff": [],
                "is_tensorial": []
            }
        },
        "ElementGlobal._eval_dofs": {
            "name": "_eval_dofs",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "mesh": [],
                "tind": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_h1.py": {
        "ElementH1.gbasis": {
            "name": "gbasis",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        },
        "ElementH1.lbasis": {
            "name": "lbasis",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_hcurl.py": {
        "ElementHcurl.orient": {
            "name": "orient",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "i": [],
                "tind": []
            }
        },
        "ElementHcurl.gbasis": {
            "name": "gbasis",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        },
        "ElementHcurl.lbasis": {
            "name": "lbasis",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_hdiv.py": {
        "ElementHdiv.orient": {
            "name": "orient",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "i": [],
                "tind": []
            }
        },
        "ElementHdiv.gbasis": {
            "name": "gbasis",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        },
        "ElementHdiv.lbasis": {
            "name": "lbasis",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_vector.py": {
        "ElementVector.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "elem": [],
                "dim": []
            }
        },
        "ElementVector.dim": {
            "name": "dim",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ElementVector.gbasis": {
            "name": "gbasis",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": [],
                "X": [],
                "i": [],
                "tind": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_wedge_1.py": {
        "ElementWedge1.lbasis": {
            "name": "lbasis",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/__init__.py": {},
    "scikit-fem-master/skfem/element/element_hex/element_hex0.py": {
        "ElementHex0.lbasis": {
            "name": "lbasis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_hex/element_hex1.py": {
        "ElementHex1.lbasis": {
            "name": "lbasis",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_hex/element_hex2.py": {
        "output": {
            "name": "output",
            "location": 7,
            "return": [],
            "arguments": {
                "a": [],
                "b": [],
                "c": [],
                "d": []
            }
        },
        "ElementHex2.lbasis": {
            "name": "lbasis",
            "location": 1255,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_hex/element_hex_s2.py": {
        "ElementHexS2.lbasis": {
            "name": "lbasis",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_hex/__init__.py": {},
    "scikit-fem-master/skfem/element/element_line/element_line_hermite.py": {
        "ElementLineHermite.gdof": {
            "name": "gdof",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_line/element_line_mini.py": {
        "ElementLineMini.lbasis": {
            "name": "lbasis",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_line/element_line_p0.py": {
        "ElementLineP0.lbasis": {
            "name": "lbasis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_line/element_line_p1.py": {
        "ElementLineP1.lbasis": {
            "name": "lbasis",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_line/element_line_p2.py": {
        "ElementLineP2.lbasis": {
            "name": "lbasis",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_line/element_line_pp.py": {
        "ElementLinePp.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "ElementLinePp._reval_legendre": {
            "name": "_reval_legendre",
            "location": 35,
            "return": [],
            "arguments": {
                "y": [],
                "p": []
            }
        },
        "ElementLinePp.lbasis": {
            "name": "lbasis",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_line/__init__.py": {},
    "scikit-fem-master/skfem/element/element_quad/element_quad0.py": {
        "ElementQuad0.lbasis": {
            "name": "lbasis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_quad/element_quad1.py": {
        "ElementQuad1.lbasis": {
            "name": "lbasis",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_quad/element_quad2.py": {
        "ElementQuad2.lbasis": {
            "name": "lbasis",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_quad/element_quadp.py": {
        "ElementQuadP.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "p": []
            }
        },
        "ElementQuadP.lbasis": {
            "name": "lbasis",
            "location": 36,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_quad/element_quad_bfs.py": {
        "ElementQuadBFS.gdof": {
            "name": "gdof",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_quad/element_quad_rt1.py": {
        "ElementQuadRT1.lbasis": {
            "name": "lbasis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_quad/element_quad_s2.py": {
        "ElementQuadS2.lbasis": {
            "name": "lbasis",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_quad/__init__.py": {},
    "scikit-fem-master/skfem/element/element_tet/element_tet_ccr.py": {
        "ElementTetCCR.lbasis": {
            "name": "lbasis",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/element_tet_cr.py": {
        "ElementTetCR.lbasis": {
            "name": "lbasis",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/element_tet_mini.py": {
        "ElementTetMini.lbasis": {
            "name": "lbasis",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/element_tet_n0.py": {
        "ElementTetN0.lbasis": {
            "name": "lbasis",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/element_tet_p0.py": {
        "ElementTetP0.lbasis": {
            "name": "lbasis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/element_tet_p1.py": {
        "ElementTetP1.lbasis": {
            "name": "lbasis",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/element_tet_p2.py": {
        "ElementTetP2.lbasis": {
            "name": "lbasis",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/element_tet_rt1.py": {
        "ElementTetRT1.lbasis": {
            "name": "lbasis",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tet/__init__.py": {},
    "scikit-fem-master/skfem/element/element_tri/element_tri_15param_plate.py": {
        "ElementTri15ParamPlate.gdof": {
            "name": "gdof",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_argyris.py": {
        "ElementTriArgyris.gdof": {
            "name": "gdof",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_bdm1.py": {
        "ElementTriBDM1.lbasis": {
            "name": "lbasis",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_cr.py": {
        "ElementTriCR.lbasis": {
            "name": "lbasis",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_hermite.py": {
        "ElementTriHermite.gdof": {
            "name": "gdof",
            "location": 26,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_morley.py": {
        "ElementTriMorley.gdof": {
            "name": "gdof",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p0.py": {
        "ElementTriP0.lbasis": {
            "name": "lbasis",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p1.py": {
        "ElementTriP1.lbasis": {
            "name": "lbasis",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p1b.py": {
        "ElementTriP1B.lbasis": {
            "name": "lbasis",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p1g.py": {
        "ElementTriP1G.gdof": {
            "name": "gdof",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p2.py": {
        "ElementTriP2.lbasis": {
            "name": "lbasis",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p2b.py": {
        "ElementTriP2B.lbasis": {
            "name": "lbasis",
            "location": 25,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p2g.py": {
        "ElementTriP2G.gdof": {
            "name": "gdof",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "F": [],
                "w": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p3.py": {
        "ElementTriP3.lbasis": {
            "name": "lbasis",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_p4.py": {
        "ElementTriP4.lbasis": {
            "name": "lbasis",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_rt1.py": {
        "ElementTriRT1.lbasis": {
            "name": "lbasis",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_rt2.py": {
        "ElementTriRT2.lbasis": {
            "name": "lbasis",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_skeleton_p0.py": {
        "ElementTriSkeletonP0.lbasis": {
            "name": "lbasis",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/element_tri_skeleton_p1.py": {
        "ElementTriSkeletonP1.lbasis": {
            "name": "lbasis",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        },
        "ElementTriSkeletonP1.fbasis": {
            "name": "fbasis",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "i": []
            }
        }
    },
    "scikit-fem-master/skfem/element/element_tri/__init__.py": {},
    "scikit-fem-master/skfem/experimental/__init__.py": {},
    "scikit-fem-master/skfem/experimental/autodiff/helpers.py": {
        "dot": {
            "name": "dot",
            "location": 6,
            "return": [],
            "arguments": {
                "u": [],
                "v": []
            }
        },
        "ddot": {
            "name": "ddot",
            "location": 10,
            "return": [],
            "arguments": {
                "u": [],
                "v": []
            }
        },
        "dddot": {
            "name": "dddot",
            "location": 14,
            "return": [],
            "arguments": {
                "u": [],
                "v": []
            }
        },
        "grad": {
            "name": "grad",
            "location": 18,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "div": {
            "name": "div",
            "location": 24,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "dd": {
            "name": "dd",
            "location": 30,
            "return": [],
            "arguments": {
                "u": []
            }
        },
        "transpose": {
            "name": "transpose",
            "location": 36,
            "return": [],
            "arguments": {
                "T": []
            }
        },
        "mul": {
            "name": "mul",
            "location": 40,
            "return": [],
            "arguments": {
                "A": [],
                "B": []
            }
        },
        "trace": {
            "name": "trace",
            "location": 46,
            "return": [],
            "arguments": {
                "T": []
            }
        },
        "eye": {
            "name": "eye",
            "location": 50,
            "return": [],
            "arguments": {
                "w": [],
                "size": []
            }
        },
        "det": {
            "name": "det",
            "location": 55,
            "return": [],
            "arguments": {
                "A": []
            }
        }
    },
    "scikit-fem-master/skfem/experimental/autodiff/__init__.py": {
        "NonlinearForm.assemble": {
            "name": "assemble",
            "location": 11,
            "return": [],
            "arguments": {
                "self": [],
                "u0": [],
                "basis": []
            }
        },
        "NonlinearForm.assemble._make_jacobian": {
            "name": "_make_jacobian",
            "location": 48,
            "return": [],
            "arguments": {
                "V": []
            }
        }
    },
    "scikit-fem-master/skfem/io/json.py": {
        "to_dict": {
            "name": "to_dict",
            "location": 12,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "from_dict": {
            "name": "from_dict",
            "location": 27,
            "return": [],
            "arguments": {
                "cls": [],
                "data": []
            }
        },
        "from_file": {
            "name": "from_file",
            "location": 45,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "to_file": {
            "name": "to_file",
            "location": 71,
            "return": [],
            "arguments": {
                "mesh": [],
                "filename": []
            }
        }
    },
    "scikit-fem-master/skfem/io/meshio.py": {
        "from_meshio": {
            "name": "from_meshio",
            "location": 50,
            "return": [],
            "arguments": {
                "m": [],
                "out": [],
                "int_data_to_sets": [],
                "force_meshio_type": []
            }
        },
        "from_file": {
            "name": "from_file",
            "location": 222,
            "return": [],
            "arguments": {
                "filename": [],
                "out": []
            }
        },
        "to_meshio": {
            "name": "to_meshio",
            "location": 226,
            "return": [],
            "arguments": {
                "mesh": [],
                "point_data": [],
                "cell_data": [],
                "encode_cell_data": [],
                "encode_point_data": []
            }
        },
        "to_file": {
            "name": "to_file",
            "location": 261,
            "return": [],
            "arguments": {
                "mesh": [],
                "filename": [],
                "point_data": [],
                "cell_data": [],
                "encode_cell_data": [],
                "encode_point_data": []
            }
        },
        "from_meshio.find_tagname": {
            "name": "find_tagname",
            "location": 168,
            "return": [],
            "arguments": {
                "tag": []
            }
        }
    },
    "scikit-fem-master/skfem/io/__init__.py": {},
    "scikit-fem-master/skfem/mapping/mapping.py": {
        "Mapping.F": {
            "name": "F",
            "location": 9,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "Mapping.invF": {
            "name": "invF",
            "location": 29,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "tind": []
            }
        },
        "Mapping.G": {
            "name": "G",
            "location": 49,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "find": []
            }
        },
        "Mapping.detDG": {
            "name": "detDG",
            "location": 69,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "find": []
            }
        },
        "Mapping.normals": {
            "name": "normals",
            "location": 89,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": [],
                "find": [],
                "t2f": []
            }
        },
        "Mapping.DF": {
            "name": "DF",
            "location": 97,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "Mapping.invDF": {
            "name": "invDF",
            "location": 103,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "Mapping.detDF": {
            "name": "detDF",
            "location": 109,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        }
    },
    "scikit-fem-master/skfem/mapping/mapping_affine.py": {
        "MappingAffine.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "mesh": []
            }
        },
        "MappingAffine._init_boundary_mapping": {
            "name": "_init_boundary_mapping",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MappingAffine.B": {
            "name": "B",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MappingAffine.c": {
            "name": "c",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MappingAffine.detB": {
            "name": "detB",
            "location": 116,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MappingAffine.F": {
            "name": "F",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingAffine.invF": {
            "name": "invF",
            "location": 134,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "tind": []
            }
        },
        "MappingAffine.detDF": {
            "name": "detDF",
            "location": 144,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingAffine.DF": {
            "name": "DF",
            "location": 152,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingAffine.invDF": {
            "name": "invDF",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingAffine.G": {
            "name": "G",
            "location": 169,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "find": []
            }
        },
        "MappingAffine.detDG": {
            "name": "detDG",
            "location": 182,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "find": []
            }
        },
        "MappingAffine.normals": {
            "name": "normals",
            "location": 190,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "X": [],
                "tind": [],
                "find": [],
                "t2f": []
            }
        }
    },
    "scikit-fem-master/skfem/mapping/mapping_isoparametric.py": {
        "MappingIsoparametric.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "mesh": [],
                "elem": [],
                "bndelem": []
            }
        },
        "MappingIsoparametric.Fmap": {
            "name": "Fmap",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "X": [],
                "tind": []
            }
        },
        "MappingIsoparametric.bndmap": {
            "name": "bndmap",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "X": [],
                "find": []
            }
        },
        "MappingIsoparametric.bndJ": {
            "name": "bndJ",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "j": [],
                "X": [],
                "find": []
            }
        },
        "MappingIsoparametric._J": {
            "name": "_J",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "j": [],
                "X": [],
                "tind": []
            }
        },
        "MappingIsoparametric.J": {
            "name": "J",
            "location": 114,
            "return": [],
            "arguments": {
                "self": [],
                "i": [],
                "j": [],
                "X": [],
                "tind": []
            }
        },
        "MappingIsoparametric.G": {
            "name": "G",
            "location": 123,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "find": []
            }
        },
        "MappingIsoparametric.detDG": {
            "name": "detDG",
            "location": 127,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "find": []
            }
        },
        "MappingIsoparametric.invF": {
            "name": "invF",
            "location": 143,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "tind": [],
                "newton_max_iters": [],
                "newton_tol": []
            }
        },
        "MappingIsoparametric.F": {
            "name": "F",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingIsoparametric.DF": {
            "name": "DF",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": [],
                "J": []
            }
        },
        "MappingIsoparametric.detDF": {
            "name": "detDF",
            "location": 166,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": [],
                "J": []
            }
        },
        "MappingIsoparametric.invDF": {
            "name": "invDF",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingIsoparametric.normals": {
            "name": "normals",
            "location": 215,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": [],
                "find": [],
                "t2f": []
            }
        }
    },
    "scikit-fem-master/skfem/mapping/mapping_mortar.py": {
        "MappingMortar.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "maps": [],
                "helper_to_orig": [],
                "helper_maps": [],
                "super_to_helper": [],
                "supermap": [],
                "normals": []
            }
        },
        "MappingMortar.init_2D": {
            "name": "init_2D",
            "location": 32,
            "return": [],
            "arguments": {
                "cls": [],
                "mesh1": [],
                "mesh2": [],
                "boundary1": [],
                "boundary2": [],
                "tangent": []
            }
        },
        "MappingMortar.F": {
            "name": "F",
            "location": 162,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingMortar.invF": {
            "name": "invF",
            "location": 165,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "tind": []
            }
        },
        "MappingMortar.detDF": {
            "name": "detDF",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingMortar.DF": {
            "name": "DF",
            "location": 171,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingMortar.invDF": {
            "name": "invDF",
            "location": 174,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": []
            }
        },
        "MappingMortar.G": {
            "name": "G",
            "location": 177,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "find": [],
                "side": []
            }
        },
        "MappingMortar.detDG": {
            "name": "detDG",
            "location": 188,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "find": []
            }
        },
        "MappingMortar.normals": {
            "name": "normals",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "tind": [],
                "find": [],
                "t2f": []
            }
        },
        "MappingMortar.init_2D.proj": {
            "name": "proj",
            "location": 63,
            "return": [],
            "arguments": {
                "p": []
            }
        },
        "MappingMortar.init_2D.param": {
            "name": "param",
            "location": 67,
            "return": [],
            "arguments": {
                "p": []
            }
        }
    },
    "scikit-fem-master/skfem/mapping/__init__.py": {},
    "scikit-fem-master/skfem/mesh/mesh.py": {
        "Mesh.p": {
            "name": "p",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.dofs": {
            "name": "dofs",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.refdom": {
            "name": "refdom",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.brefdom": {
            "name": "brefdom",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.bndelem": {
            "name": "bndelem",
            "location": 62,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.nelements": {
            "name": "nelements",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.nvertices": {
            "name": "nvertices",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.nfacets": {
            "name": "nfacets",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.nedges": {
            "name": "nedges",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.nnodes": {
            "name": "nnodes",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.subdomains": {
            "name": "subdomains",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.boundaries": {
            "name": "boundaries",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.facets": {
            "name": "facets",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.t2f": {
            "name": "t2f",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.f2t": {
            "name": "f2t",
            "location": 108,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.edges": {
            "name": "edges",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.t2e": {
            "name": "t2e",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.dim": {
            "name": "dim",
            "location": 125,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.boundary_facets": {
            "name": "boundary_facets",
            "location": 128,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.boundary_edges": {
            "name": "boundary_edges",
            "location": 132,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.with_boundaries": {
            "name": "with_boundaries",
            "location": 150,
            "return": [],
            "arguments": {
                "self": [],
                "boundaries": [],
                "boundaries_only": []
            }
        },
        "Mesh.with_subdomains": {
            "name": "with_subdomains",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "subdomains": []
            }
        },
        "Mesh._encode_point_data": {
            "name": "_encode_point_data",
            "location": 200,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh._encode_cell_data": {
            "name": "_encode_cell_data",
            "location": 223,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh._decode_cell_data": {
            "name": "_decode_cell_data",
            "location": 272,
            "return": [],
            "arguments": {
                "self": [],
                "cell_data": []
            }
        },
        "Mesh.boundary_nodes": {
            "name": "boundary_nodes",
            "location": 297,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.interior_nodes": {
            "name": "interior_nodes",
            "location": 301,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.nodes_satisfying": {
            "name": "nodes_satisfying",
            "location": 306,
            "return": [],
            "arguments": {
                "self": [],
                "test": [],
                "boundaries_only": []
            }
        },
        "Mesh.facets_satisfying": {
            "name": "facets_satisfying",
            "location": 325,
            "return": [],
            "arguments": {
                "self": [],
                "test": [],
                "boundaries_only": [],
                "normal": []
            }
        },
        "Mesh.facets_around": {
            "name": "facets_around",
            "location": 357,
            "return": [],
            "arguments": {
                "self": [],
                "elements": [],
                "flip": []
            }
        },
        "Mesh.elements_satisfying": {
            "name": "elements_satisfying",
            "location": 378,
            "return": [],
            "arguments": {
                "self": [],
                "test": []
            }
        },
        "Mesh._expand_facets": {
            "name": "_expand_facets",
            "location": 392,
            "return": [],
            "arguments": {
                "self": [],
                "ix": []
            }
        },
        "Mesh._mapping": {
            "name": "_mapping",
            "location": 418,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh._init_facets": {
            "name": "_init_facets",
            "location": 432,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh._init_edges": {
            "name": "_init_edges",
            "location": 439,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.__post_init__": {
            "name": "__post_init__",
            "location": 446,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.is_valid": {
            "name": "is_valid",
            "location": 518,
            "return": [],
            "arguments": {
                "self": [],
                "raise_": []
            }
        },
        "Mesh.__rmatmul__": {
            "name": "__rmatmul__",
            "location": 568,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Mesh.__matmul__": {
            "name": "__matmul__",
            "location": 572,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Mesh.__add__": {
            "name": "__add__",
            "location": 590,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Mesh.__repr__": {
            "name": "__repr__",
            "location": 605,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.__str__": {
            "name": "__str__",
            "location": 627,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.save": {
            "name": "save",
            "location": 630,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "point_data": [],
                "cell_data": []
            }
        },
        "Mesh.load": {
            "name": "load",
            "location": 656,
            "return": [],
            "arguments": {
                "cls": [],
                "filename": [],
                "out": []
            }
        },
        "Mesh.from_dict": {
            "name": "from_dict",
            "location": 677,
            "return": [],
            "arguments": {
                "cls": [],
                "d": []
            }
        },
        "Mesh.to_dict": {
            "name": "to_dict",
            "location": 681,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.from_mesh": {
            "name": "from_mesh",
            "location": 686,
            "return": [],
            "arguments": {
                "cls": [],
                "mesh": [],
                "t": []
            }
        },
        "Mesh.init_refdom": {
            "name": "init_refdom",
            "location": 719,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "Mesh.morphed": {
            "name": "morphed",
            "location": 723,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh.refined": {
            "name": "refined",
            "location": 732,
            "return": [],
            "arguments": {
                "self": [],
                "times_or_ix": []
            }
        },
        "Mesh.scaled": {
            "name": "scaled",
            "location": 757,
            "return": [],
            "arguments": {
                "self": [],
                "factors": []
            }
        },
        "Mesh.translated": {
            "name": "translated",
            "location": 775,
            "return": [],
            "arguments": {
                "self": [],
                "diffs": []
            }
        },
        "Mesh.mirrored": {
            "name": "mirrored",
            "location": 791,
            "return": [],
            "arguments": {
                "self": [],
                "normal": [],
                "point": []
            }
        },
        "Mesh.smoothed": {
            "name": "smoothed",
            "location": 831,
            "return": [],
            "arguments": {
                "self": [],
                "fixed_nodes": []
            }
        },
        "Mesh._uniform": {
            "name": "_uniform",
            "location": 864,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh._adaptive": {
            "name": "_adaptive",
            "location": 868,
            "return": [],
            "arguments": {
                "self": [],
                "ix": []
            }
        },
        "Mesh._splitref": {
            "name": "_splitref",
            "location": 872,
            "return": [],
            "arguments": {
                "self": [],
                "nrefs": []
            }
        },
        "Mesh.build_entities": {
            "name": "build_entities",
            "location": 909,
            "return": [],
            "arguments": {
                "t": [],
                "indices": [],
                "sort": []
            }
        },
        "Mesh.build_inverse": {
            "name": "build_inverse",
            "location": 928,
            "return": [],
            "arguments": {
                "t": [],
                "mapping": []
            }
        },
        "Mesh.strip_extra_coordinates": {
            "name": "strip_extra_coordinates",
            "location": 946,
            "return": [],
            "arguments": {
                "p": []
            }
        },
        "Mesh.param": {
            "name": "param",
            "location": 950,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh._reix": {
            "name": "_reix",
            "location": 954,
            "return": [],
            "arguments": {
                "self": [],
                "ix": []
            }
        },
        "Mesh.remove_elements": {
            "name": "remove_elements",
            "location": 961,
            "return": [],
            "arguments": {
                "self": [],
                "element_indices": []
            }
        },
        "Mesh.element_finder": {
            "name": "element_finder",
            "location": 977,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "Mesh.draw": {
            "name": "draw",
            "location": 988,
            "return": [],
            "arguments": {
                "self": [],
                "visuals": []
            }
        },
        "Mesh.plot": {
            "name": "plot",
            "location": 995,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "visuals": []
            }
        },
        "Mesh.normalize_facets": {
            "name": "normalize_facets",
            "location": 1002,
            "return": [],
            "arguments": {
                "self": [],
                "facets": []
            }
        },
        "Mesh.normalize_elements": {
            "name": "normalize_elements",
            "location": 1042,
            "return": [],
            "arguments": {
                "self": [],
                "elements": []
            }
        },
        "Mesh._encode_point_data.indicator": {
            "name": "indicator",
            "location": 205,
            "return": [],
            "arguments": {
                "ix": []
            }
        },
        "Mesh._encode_cell_data.encode_boundary": {
            "name": "encode_boundary",
            "location": 228,
            "return": [],
            "arguments": {
                "boundary": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_2d.py": {
        "Mesh2D.params": {
            "name": "params",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh2D.param": {
            "name": "param",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh2D.strip_extra_coordinates": {
            "name": "strip_extra_coordinates",
            "location": 22,
            "return": [],
            "arguments": {
                "p": []
            }
        },
        "Mesh2D._repr_svg_": {
            "name": "_repr_svg_",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_2d_2.py": {
        "Mesh2D2._repr_svg_": {
            "name": "_repr_svg_",
            "location": 4,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh2D2.element_finder": {
            "name": "element_finder",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh2D2.init_refdom": {
            "name": "init_refdom",
            "location": 12,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_3d.py": {
        "Mesh3D.params": {
            "name": "params",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh3D.param": {
            "name": "param",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh3D.edges_satisfying": {
            "name": "edges_satisfying",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "test": []
            }
        },
        "Mesh3D.boundary_edges": {
            "name": "boundary_edges",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mesh3D.interior_edges": {
            "name": "interior_edges",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_dg.py": {
        "MeshDG.init_tensor": {
            "name": "init_tensor",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MeshDG.periodic": {
            "name": "periodic",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "mesh": [],
                "ix": [],
                "ix0": []
            }
        },
        "MeshDG.save": {
            "name": "save",
            "location": 103,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "MeshDG.load": {
            "name": "load",
            "location": 107,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "cls": []
            }
        },
        "MeshDG.element_finder": {
            "name": "element_finder",
            "location": 110,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_hex_1.py": {
        "MeshHex1._init_facets": {
            "name": "_init_facets",
            "location": 38,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshHex1._uniform": {
            "name": "_uniform",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshHex1.init_tensor": {
            "name": "init_tensor",
            "location": 87,
            "return": [],
            "arguments": {
                "cls": [],
                "x": [],
                "y": [],
                "z": []
            }
        },
        "MeshHex1.to_meshtet": {
            "name": "to_meshtet",
            "location": 146,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshHex1.element_finder": {
            "name": "element_finder",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MeshHex1.element_finder.finder": {
            "name": "finder",
            "location": 163,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_hex_1_dg.py": {},
    "scikit-fem-master/skfem/mesh/mesh_hex_2.py": {
        "MeshHex2._uniform": {
            "name": "_uniform",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_line_1.py": {
        "MeshLine1.__mul__": {
            "name": "__mul__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MeshLine1._uniform": {
            "name": "_uniform",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshLine1._adaptive": {
            "name": "_adaptive",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "marked": []
            }
        },
        "MeshLine1.param": {
            "name": "param",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshLine1.element_finder": {
            "name": "element_finder",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MeshLine1.strip_extra_coordinates": {
            "name": "strip_extra_coordinates",
            "location": 87,
            "return": [],
            "arguments": {
                "p": []
            }
        },
        "MeshLine1.element_finder.finder": {
            "name": "finder",
            "location": 75,
            "return": [],
            "arguments": {
                "x": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_line_1_dg.py": {},
    "scikit-fem-master/skfem/mesh/mesh_quad_1.py": {
        "MeshQuad1._uniform": {
            "name": "_uniform",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshQuad1.init_tensor": {
            "name": "init_tensor",
            "location": 86,
            "return": [],
            "arguments": {
                "cls": [],
                "x": [],
                "y": []
            }
        },
        "MeshQuad1.to_meshtri": {
            "name": "to_meshtri",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "style": []
            }
        },
        "MeshQuad1.element_finder": {
            "name": "element_finder",
            "location": 212,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MeshQuad1.element_finder.finder": {
            "name": "finder",
            "location": 216,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_quad_1_dg.py": {},
    "scikit-fem-master/skfem/mesh/mesh_quad_2.py": {
        "MeshQuad2._uniform": {
            "name": "_uniform",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_simplex.py": {
        "MeshSimplex.orientation": {
            "name": "orientation",
            "location": 9,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MeshSimplex.oriented": {
            "name": "oriented",
            "location": 16,
            "return": [
                "_TMeshSimplex@@MeshSimplex@@"
            ],
            "arguments": {
                "self": [
                    "_TMeshSimplex@@MeshSimplex@@"
                ]
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_tet_1.py": {
        "MeshTet1.element_finder": {
            "name": "element_finder",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MeshTet1._uniform": {
            "name": "_uniform",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshTet1._adaptive_sort_mesh": {
            "name": "_adaptive_sort_mesh",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "p": [],
                "t": [],
                "marked": []
            }
        },
        "MeshTet1._find_nz": {
            "name": "_find_nz",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "rows": [],
                "cols": [],
                "shape": [],
                "transform": []
            }
        },
        "MeshTet1._adaptive": {
            "name": "_adaptive",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "marked": []
            }
        },
        "MeshTet1.init_tensor": {
            "name": "init_tensor",
            "location": 280,
            "return": [],
            "arguments": {
                "cls": [],
                "x": [],
                "y": [],
                "z": []
            }
        },
        "MeshTet1.init_ball": {
            "name": "init_ball",
            "location": 349,
            "return": [],
            "arguments": {
                "cls": [],
                "nrefs": []
            }
        },
        "MeshTet1.element_finder.finder": {
            "name": "finder",
            "location": 44,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "z": [],
                "_search_all": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_tet_2.py": {
        "MeshTet2.init_ball": {
            "name": "init_ball",
            "location": 45,
            "return": [],
            "arguments": {
                "cls": [],
                "nrefs": []
            }
        },
        "MeshTet2._uniform": {
            "name": "_uniform",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshTet2._adaptive": {
            "name": "_adaptive",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "marked": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_tri_1.py": {
        "MeshTri1.init_tensor": {
            "name": "init_tensor",
            "location": 27,
            "return": [],
            "arguments": {
                "cls": [],
                "x": [],
                "y": []
            }
        },
        "MeshTri1.init_symmetric": {
            "name": "init_symmetric",
            "location": 78,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MeshTri1.init_sqsymmetric": {
            "name": "init_sqsymmetric",
            "location": 103,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MeshTri1.init_lshaped": {
            "name": "init_lshaped",
            "location": 132,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "MeshTri1.init_circle": {
            "name": "init_circle",
            "location": 159,
            "return": [],
            "arguments": {
                "cls": [],
                "nrefs": [],
                "smoothed": []
            }
        },
        "MeshTri1._uniform": {
            "name": "_uniform",
            "location": 205,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshTri1._adaptive_sort_mesh": {
            "name": "_adaptive_sort_mesh",
            "location": 251,
            "return": [],
            "arguments": {
                "p": [],
                "t": []
            }
        },
        "MeshTri1._adaptive_find_facets": {
            "name": "_adaptive_find_facets",
            "location": 272,
            "return": [],
            "arguments": {
                "m": [],
                "marked_elems": []
            }
        },
        "MeshTri1._adaptive_split_elements": {
            "name": "_adaptive_split_elements",
            "location": 287,
            "return": [],
            "arguments": {
                "m": [],
                "facets": []
            }
        },
        "MeshTri1._adaptive": {
            "name": "_adaptive",
            "location": 336,
            "return": [],
            "arguments": {
                "self": [],
                "marked": []
            }
        },
        "MeshTri1.__mul__": {
            "name": "__mul__",
            "location": 354,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MeshTri1.element_finder": {
            "name": "element_finder",
            "location": 382,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MeshTri1.element_finder.finder": {
            "name": "finder",
            "location": 394,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "_search_all": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_tri_1_dg.py": {},
    "scikit-fem-master/skfem/mesh/mesh_tri_2.py": {
        "MeshTri2.init_circle": {
            "name": "init_circle",
            "location": 30,
            "return": [],
            "arguments": {
                "cls": [],
                "nrefs": [],
                "smoothed": []
            }
        },
        "MeshTri2._uniform": {
            "name": "_uniform",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshTri2._adaptive": {
            "name": "_adaptive",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "marked": []
            }
        }
    },
    "scikit-fem-master/skfem/mesh/mesh_wedge_1.py": {
        "MeshWedge1.to_meshtet": {
            "name": "to_meshtet",
            "location": 27,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MeshWedge1.element_finder": {
            "name": "element_finder",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MeshWedge1.element_finder.finder": {
            "name": "finder",
            "location": 41,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/skfem/mesh/__init__.py": {
        "MeshLineConstructor.__call__": {
            "name": "__call__",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "p": [],
                "t": []
            }
        },
        "MeshLineConstructor.__getattr__": {
            "name": "__getattr__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "MeshLineConstructor.__instancecheck__": {
            "name": "__instancecheck__",
            "location": 75,
            "return": [],
            "arguments": {
                "_": [],
                "instance": []
            }
        }
    },
    "scikit-fem-master/skfem/models/elasticity.py": {
        "lame_parameters": {
            "name": "lame_parameters",
            "location": 7,
            "return": [],
            "arguments": {
                "E": [],
                "nu": []
            }
        },
        "linear_stress": {
            "name": "linear_stress",
            "location": 29,
            "return": [],
            "arguments": {
                "Lambda": [],
                "Mu": []
            }
        },
        "linear_elasticity": {
            "name": "linear_elasticity",
            "location": 38,
            "return": [],
            "arguments": {
                "Lambda": [],
                "Mu": []
            }
        },
        "linear_stress.C": {
            "name": "C",
            "location": 31,
            "return": [],
            "arguments": {
                "T": []
            }
        },
        "linear_elasticity.weakform": {
            "name": "weakform",
            "location": 44,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/skfem/models/general.py": {
        "divu": {
            "name": "divu",
            "location": 8,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "curluv": {
            "name": "curluv",
            "location": 16,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "rot": {
            "name": "rot",
            "location": 21,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "vrot": {
            "name": "vrot",
            "location": 26,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/skfem/models/poisson.py": {
        "laplace": {
            "name": "laplace",
            "location": 8,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "_": []
            }
        },
        "vector_laplace": {
            "name": "vector_laplace",
            "location": 13,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "_": []
            }
        },
        "mass": {
            "name": "mass",
            "location": 18,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "_": []
            }
        },
        "unit_load": {
            "name": "unit_load",
            "location": 23,
            "return": [],
            "arguments": {
                "v": [],
                "_": []
            }
        }
    },
    "scikit-fem-master/skfem/models/__init__.py": {},
    "scikit-fem-master/skfem/visuals/glvis.py": {
        "_to_int_string": {
            "name": "_to_int_string",
            "location": 55,
            "return": [],
            "arguments": {
                "arr": []
            }
        },
        "_to_float_string": {
            "name": "_to_float_string",
            "location": 61,
            "return": [],
            "arguments": {
                "arr": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 67,
            "return": [],
            "arguments": {
                "basis": [],
                "x": [],
                "keys": []
            }
        },
        "draw": {
            "name": "draw",
            "location": 102,
            "return": [],
            "arguments": {
                "basis": [],
                "keys": []
            }
        }
    },
    "scikit-fem-master/skfem/visuals/matplotlib.py": {
        "draw": {
            "name": "draw",
            "location": 17,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "draw_basis": {
            "name": "draw_basis",
            "location": 23,
            "return": [],
            "arguments": {
                "ib": []
            }
        },
        "draw_meshhex": {
            "name": "draw_meshhex",
            "location": 35,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "draw_mesh2d": {
            "name": "draw_mesh2d",
            "location": 52,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 164,
            "return": [],
            "arguments": {
                "m": [],
                "u": []
            }
        },
        "plot_meshline": {
            "name": "plot_meshline",
            "location": 170,
            "return": [],
            "arguments": {
                "m": [],
                "z": []
            }
        },
        "plot_meshtri": {
            "name": "plot_meshtri",
            "location": 188,
            "return": [],
            "arguments": {
                "m": [],
                "z": []
            }
        },
        "plot_meshquad": {
            "name": "plot_meshquad",
            "location": 269,
            "return": [],
            "arguments": {
                "m": [],
                "z": []
            }
        },
        "plot_basis": {
            "name": "plot_basis",
            "location": 285,
            "return": [],
            "arguments": {
                "basis": [],
                "z": []
            }
        },
        "plot3": {
            "name": "plot3",
            "location": 297,
            "return": [],
            "arguments": {
                "m": [],
                "z": []
            }
        },
        "plot3_meshtri": {
            "name": "plot3_meshtri",
            "location": 303,
            "return": [],
            "arguments": {
                "m": [],
                "z": []
            }
        },
        "plot3_basis": {
            "name": "plot3_basis",
            "location": 335,
            "return": [],
            "arguments": {
                "basis": [],
                "z": []
            }
        },
        "savefig": {
            "name": "savefig",
            "location": 346,
            "return": [],
            "arguments": {}
        },
        "show": {
            "name": "show",
            "location": 350,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/skfem/visuals/svg.py": {
        "points_to_figure": {
            "name": "points_to_figure",
            "location": 15,
            "return": [],
            "arguments": {
                "p": [],
                "kwargs": []
            }
        },
        "draw": {
            "name": "draw",
            "location": 61,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "draw_mesh2d": {
            "name": "draw_mesh2d",
            "location": 79,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "draw_geometry2d": {
            "name": "draw_geometry2d",
            "location": 102,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "draw_basis": {
            "name": "draw_basis",
            "location": 109,
            "return": [],
            "arguments": {
                "ib": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 116,
            "return": [],
            "arguments": {
                "m": [],
                "x": []
            }
        },
        "plot_mesh2d": {
            "name": "plot_mesh2d",
            "location": 152,
            "return": [],
            "arguments": {
                "m": [],
                "x": []
            }
        },
        "plot_basis": {
            "name": "plot_basis",
            "location": 179,
            "return": [],
            "arguments": {
                "ib": [],
                "x": []
            }
        },
        "Server.do_GET": {
            "name": "do_GET",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SvgPlot._repr_svg_": {
            "name": "_repr_svg_",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SvgPlot.show": {
            "name": "show",
            "location": 51,
            "return": [],
            "arguments": {
                "self": [],
                "port": []
            }
        }
    },
    "scikit-fem-master/skfem/visuals/vedo.py": {
        "draw": {
            "name": "draw",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {
                "m": [],
                "backend": []
            }
        },
        "plot": {
            "name": "plot",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "basis": [],
                "z": []
            }
        }
    },
    "scikit-fem-master/skfem/visuals/__init__.py": {},
    "scikit-fem-master/tests/test_assembly.py": {
        "test_evaluate_functional": {
            "name": "test_evaluate_functional",
            "location": 318,
            "return": [],
            "arguments": {
                "mtype": [],
                "e": [],
                "mtype2": []
            }
        },
        "test_coodata_inverse": {
            "name": "test_coodata_inverse",
            "location": 489,
            "return": [],
            "arguments": {
                "m": [],
                "e": [],
                "edg": []
            }
        },
        "test_multimesh": {
            "name": "test_multimesh",
            "location": 502,
            "return": [],
            "arguments": {}
        },
        "test_multimesh_2": {
            "name": "test_multimesh_2",
            "location": 519,
            "return": [],
            "arguments": {}
        },
        "test_trilinear_form": {
            "name": "test_trilinear_form",
            "location": 546,
            "return": [],
            "arguments": {
                "m": [],
                "e": []
            }
        },
        "test_matrix_element_projection": {
            "name": "test_matrix_element_projection",
            "location": 576,
            "return": [],
            "arguments": {
                "m": [],
                "e": []
            }
        },
        "IntegrateOneOverBoundaryQ1.createBasis": {
            "name": "createBasis",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntegrateOneOverBoundaryQ1.runTest": {
            "name": "runTest",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntegrateOneOverBoundaryHex1.createBasis": {
            "name": "createBasis",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntegrateOneOverBoundaryHex1_2.createBasis": {
            "name": "createBasis",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntegrateOneOverBoundaryHex2.createBasis": {
            "name": "createBasis",
            "location": 88,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntegrateFuncOverBoundary.runTest": {
            "name": "runTest",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "IntegrateFuncOverBoundaryPart.runTest": {
            "name": "runTest",
            "location": 121,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasisInterpolator.initOnes": {
            "name": "initOnes",
            "location": 167,
            "return": [],
            "arguments": {
                "self": [],
                "basis": []
            }
        },
        "BasisInterpolator.runTest": {
            "name": "runTest",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BasisInterpolatorMorley.initOnes": {
            "name": "initOnes",
            "location": 207,
            "return": [],
            "arguments": {
                "self": [],
                "basis": []
            }
        },
        "NormalVectorTestTri.runTest": {
            "name": "runTest",
            "location": 229,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_evaluate_functional.x_squared": {
            "name": "x_squared",
            "location": 325,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "TestRefinterp.runTest": {
            "name": "runTest",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCompositeAssembly.runTest": {
            "name": "runTest",
            "location": 349,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFieldInterpolation.runTest": {
            "name": "runTest",
            "location": 375,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFieldInterpolation_2.runTest": {
            "name": "runTest",
            "location": 395,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VectorialFunctional.runTest": {
            "name": "runTest",
            "location": 416,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComplexValuedAssembly.runTest": {
            "name": "runTest",
            "location": 429,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestThreadedAssembly.runTest": {
            "name": "runTest",
            "location": 454,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_matrix_element_projection.proj": {
            "name": "proj",
            "location": 587,
            "return": [],
            "arguments": {
                "v": [],
                "_": []
            }
        },
        "IntegrateOneOverBoundaryQ1.runTest.uv": {
            "name": "uv",
            "location": 40,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "IntegrateOneOverBoundaryQ1.runTest.uvt": {
            "name": "uvt",
            "location": 47,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "IntegrateOneOverBoundaryQ1.runTest.gv": {
            "name": "gv",
            "location": 53,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "IntegrateFuncOverBoundaryPart.runTest.uv": {
            "name": "uv",
            "location": 128,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "BasisInterpolatorMorley.initOnes.mass": {
            "name": "mass",
            "location": 210,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "BasisInterpolatorMorley.initOnes.ones": {
            "name": "ones",
            "location": 214,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "NormalVectorTestTri.runTest.linf": {
            "name": "linf",
            "location": 255,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "TestCompositeAssembly.runTest.bilinf_ev": {
            "name": "bilinf_ev",
            "location": 359,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "TestCompositeAssembly.runTest.bilinf_ec": {
            "name": "bilinf_ec",
            "location": 364,
            "return": [],
            "arguments": {
                "ux": [],
                "uy": [],
                "uz": [],
                "vx": [],
                "vy": [],
                "vz": [],
                "w": []
            }
        },
        "TestFieldInterpolation.runTest.feqx": {
            "name": "feqx",
            "location": 382,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "TestFieldInterpolation_2.runTest.feqx": {
            "name": "feqx",
            "location": 402,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "VectorialFunctional.runTest.hydrostatic_pressure": {
            "name": "hydrostatic_pressure",
            "location": 419,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "TestComplexValuedAssembly.runTest.complexmass": {
            "name": "complexmass",
            "location": 437,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "TestComplexValuedAssembly.runTest.complexfun": {
            "name": "complexfun",
            "location": 441,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "TestThreadedAssembly.runTest.nonsym": {
            "name": "nonsym",
            "location": 461,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "TestThreadedAssembly.runTest.threaded_nonsym": {
            "name": "threaded_nonsym",
            "location": 465,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "IntegrateFuncOverBoundary.runTest.uv": {
            "name": "uv",
            "location": 106,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/tests/test_basis.py": {
        "test_interpolator_probes": {
            "name": "test_interpolator_probes",
            "location": 246,
            "return": [],
            "arguments": {
                "mtype": [],
                "e": [],
                "nrefs": [],
                "npoints": []
            }
        },
        "test_trace": {
            "name": "test_trace",
            "location": 289,
            "return": [],
            "arguments": {
                "mtype": [],
                "e1": [],
                "e2": [],
                "flat": []
            }
        },
        "test_point_source": {
            "name": "test_point_source",
            "location": 310,
            "return": [],
            "arguments": {
                "etype": []
            }
        },
        "test_pickling": {
            "name": "test_pickling",
            "location": 320,
            "return": [],
            "arguments": {}
        },
        "test_mortar_basis": {
            "name": "test_mortar_basis",
            "location": 372,
            "return": [],
            "arguments": {
                "m1": [],
                "m2": [],
                "lenright": []
            }
        },
        "test_basis_project": {
            "name": "test_basis_project",
            "location": 435,
            "return": [],
            "arguments": {
                "m": [],
                "e": [],
                "fun": []
            }
        },
        "test_basis_project_composite": {
            "name": "test_basis_project_composite",
            "location": 476,
            "return": [],
            "arguments": {
                "m": [],
                "e": [],
                "p1": [],
                "p2": []
            }
        },
        "test_basis_project_grad": {
            "name": "test_basis_project_grad",
            "location": 483,
            "return": [],
            "arguments": {}
        },
        "test_basis_interpolate_project": {
            "name": "test_basis_interpolate_project",
            "location": 506,
            "return": [],
            "arguments": {
                "m": [],
                "e": []
            }
        },
        "test_subdomain_facet_assembly": {
            "name": "test_subdomain_facet_assembly",
            "location": 516,
            "return": [],
            "arguments": {}
        },
        "test_subdomain_facet_assembly_2": {
            "name": "test_subdomain_facet_assembly_2",
            "location": 554,
            "return": [],
            "arguments": {}
        },
        "test_oriented_interface_integral": {
            "name": "test_oriented_interface_integral",
            "location": 589,
            "return": [],
            "arguments": {
                "m": [],
                "e": [],
                "facets": [],
                "fun": []
            }
        },
        "test_oriented_interface_integral2": {
            "name": "test_oriented_interface_integral2",
            "location": 615,
            "return": [],
            "arguments": {
                "m": [],
                "e": [],
                "facets": [],
                "normal": []
            }
        },
        "test_oriented_gauss_integral": {
            "name": "test_oriented_gauss_integral",
            "location": 651,
            "return": [],
            "arguments": {
                "m": [],
                "e": []
            }
        },
        "test_oriented_saveload": {
            "name": "test_oriented_saveload",
            "location": 665,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "TestCompositeSplitting.runTest": {
            "name": "runTest",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCompositeFacetAssembly.runTest": {
            "name": "runTest",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFacetExpansion.runTest": {
            "name": "runTest",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInterpolatorTet.prepare_mesh": {
            "name": "prepare_mesh",
            "location": 163,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInterpolatorTet.runTest": {
            "name": "runTest",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestIncompatibleMeshElement.runTest": {
            "name": "runTest",
            "location": 222,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_trace.integ": {
            "name": "integ",
            "location": 299,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "test_mortar_basis.unity": {
            "name": "unity",
            "location": 388,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "test_mortar_basis.load": {
            "name": "load",
            "location": 392,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "test_mortar_basis.mass": {
            "name": "mass",
            "location": 396,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "test_basis_project.int_y_1": {
            "name": "int_y_1",
            "location": 441,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "test_basis_project.int_y_2": {
            "name": "int_y_2",
            "location": 445,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "test_basis_project_grad.int_y": {
            "name": "int_y",
            "location": 491,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "test_subdomain_facet_assembly.subdomain": {
            "name": "subdomain",
            "location": 518,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "test_subdomain_facet_assembly.laplace": {
            "name": "laplace",
            "location": 533,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "test_subdomain_facet_assembly.measure_current": {
            "name": "measure_current",
            "location": 544,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "test_subdomain_facet_assembly_2.boundary_integral": {
            "name": "boundary_integral",
            "location": 560,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "TestCompositeSplitting.runTest.bilinf": {
            "name": "bilinf",
            "location": 49,
            "return": [],
            "arguments": {
                "u": [],
                "p": [],
                "v": [],
                "q": [],
                "w": []
            }
        },
        "TestCompositeFacetAssembly.runTest.uv1": {
            "name": "uv1",
            "location": 103,
            "return": [],
            "arguments": {
                "u": [],
                "p": [],
                "v": [],
                "q": [],
                "w": []
            }
        },
        "TestCompositeFacetAssembly.runTest.uv2": {
            "name": "uv2",
            "location": 107,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/tests/test_convergence.py": {
        "ConvergenceQ1.do_refined": {
            "name": "do_refined",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "itr": []
            }
        },
        "ConvergenceQ1.runTest": {
            "name": "runTest",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceQ1.get_bc_nodes": {
            "name": "get_bc_nodes",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "ib": []
            }
        },
        "ConvergenceQ1.compute_error": {
            "name": "compute_error",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "basis": [],
                "U": []
            }
        },
        "ConvergenceQ1.create_basis": {
            "name": "create_basis",
            "location": 168,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceQ1.setUp": {
            "name": "setUp",
            "location": 172,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceQ1QuadraticMesh.setUp": {
            "name": "setUp",
            "location": 178,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceQ2.create_basis": {
            "name": "create_basis",
            "location": 187,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceQ2.setUp": {
            "name": "setUp",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceQuadS2.create_basis": {
            "name": "create_basis",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriP1.create_basis": {
            "name": "create_basis",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriP1.setUp": {
            "name": "setUp",
            "location": 208,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceTriP1QuadraticMesh.setUp": {
            "name": "setUp",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceTriP1G.create_basis": {
            "name": "create_basis",
            "location": 220,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriP2.create_basis": {
            "name": "create_basis",
            "location": 230,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriP2B.create_basis": {
            "name": "create_basis",
            "location": 237,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriP2G.create_basis": {
            "name": "create_basis",
            "location": 244,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriP3.create_basis": {
            "name": "create_basis",
            "location": 254,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriP4.create_basis": {
            "name": "create_basis",
            "location": 264,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriHermite.create_basis": {
            "name": "create_basis",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriHermite.get_bc_nodes": {
            "name": "get_bc_nodes",
            "location": 279,
            "return": [],
            "arguments": {
                "self": [],
                "ib": []
            }
        },
        "ConvergenceTriHermite.setUp": {
            "name": "setUp",
            "location": 288,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceTriCR.create_basis": {
            "name": "create_basis",
            "location": 297,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTriCCR.create_basis": {
            "name": "create_basis",
            "location": 307,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceWedge1.do_refined": {
            "name": "do_refined",
            "location": 317,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "itr": []
            }
        },
        "ConvergenceWedge1.create_basis": {
            "name": "create_basis",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceWedge1.setUp": {
            "name": "setUp",
            "location": 325,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceTriMini.create_basis": {
            "name": "create_basis",
            "location": 331,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceHex1.create_basis": {
            "name": "create_basis",
            "location": 342,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceHex1.setUp": {
            "name": "setUp",
            "location": 346,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceHex1QuadraticMesh.setUp": {
            "name": "setUp",
            "location": 352,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceHexSplitTet1.create_basis": {
            "name": "create_basis",
            "location": 362,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceHexSplitTet1.setUp": {
            "name": "setUp",
            "location": 366,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceHexS2.create_basis": {
            "name": "create_basis",
            "location": 376,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceHexS2.setUp": {
            "name": "setUp",
            "location": 380,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceHex2.create_basis": {
            "name": "create_basis",
            "location": 389,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTetP1.create_basis": {
            "name": "create_basis",
            "location": 400,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTetP1.setUp": {
            "name": "setUp",
            "location": 404,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceTetCR.create_basis": {
            "name": "create_basis",
            "location": 413,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTetCCR.create_basis": {
            "name": "create_basis",
            "location": 423,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTetCCR.setUp": {
            "name": "setUp",
            "location": 427,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceTetP2.create_basis": {
            "name": "create_basis",
            "location": 437,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceTetP2.setUp": {
            "name": "setUp",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceTetMini.create_basis": {
            "name": "create_basis",
            "location": 447,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceLineP1.create_basis": {
            "name": "create_basis",
            "location": 454,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceLineP1.setUp": {
            "name": "setUp",
            "location": 458,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceLineP2.create_basis": {
            "name": "create_basis",
            "location": 467,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceLineP2.setUp": {
            "name": "setUp",
            "location": 471,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceLineMini.create_basis": {
            "name": "create_basis",
            "location": 477,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "FacetConvergenceTetP2.runTest": {
            "name": "runTest",
            "location": 489,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FacetConvergenceTetP2.compute_error": {
            "name": "compute_error",
            "location": 551,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "basis": [],
                "U": []
            }
        },
        "ConvergenceQ1.runTest.load": {
            "name": "load",
            "location": 52,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "ConvergenceQ1.compute_error.u": {
            "name": "u",
            "location": 107,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "ConvergenceQ1.compute_error.ux": {
            "name": "ux",
            "location": 122,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "FacetConvergenceTetP2.runTest.uv": {
            "name": "uv",
            "location": 494,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "FacetConvergenceTetP2.runTest.F": {
            "name": "F",
            "location": 497,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "z": []
            }
        },
        "FacetConvergenceTetP2.runTest.fv": {
            "name": "fv",
            "location": 501,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "FacetConvergenceTetP2.runTest.G": {
            "name": "G",
            "location": 504,
            "return": [],
            "arguments": {
                "x": [],
                "y": [],
                "z": []
            }
        },
        "FacetConvergenceTetP2.runTest.gv": {
            "name": "gv",
            "location": 518,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "FacetConvergenceTetP2.compute_error.u": {
            "name": "u",
            "location": 556,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "FacetConvergenceTetP2.compute_error.ux": {
            "name": "ux",
            "location": 559,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "FacetConvergenceTetP2.compute_error.uy": {
            "name": "uy",
            "location": 562,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "FacetConvergenceTetP2.compute_error.uz": {
            "name": "uz",
            "location": 565,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "ConvergenceQ1.compute_error.uy": {
            "name": "uy",
            "location": 136,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "ConvergenceQ1.compute_error.uz": {
            "name": "uz",
            "location": 148,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "FacetConvergenceTetP2.runTest.G.circa": {
            "name": "circa",
            "location": 507,
            "return": [],
            "arguments": {
                "a": [],
                "b": []
            }
        }
    },
    "scikit-fem-master/tests/test_convergence_h2.py": {
        "ConvergenceMorley.runTest": {
            "name": "runTest",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceHermite.runTest": {
            "name": "runTest",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceMorley.runTest.bilinf": {
            "name": "bilinf",
            "location": 36,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "ConvergenceMorley.runTest.load": {
            "name": "load",
            "location": 46,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "ConvergenceMorley.runTest.linf": {
            "name": "linf",
            "location": 50,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "ConvergenceMorley.runTest.exact": {
            "name": "exact",
            "location": 63,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "ConvergenceMorley.runTest.error": {
            "name": "error",
            "location": 67,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "ConvergenceHermite.runTest.bilinf": {
            "name": "bilinf",
            "location": 126,
            "return": [],
            "arguments": {
                "u": [],
                "v": [],
                "w": []
            }
        },
        "ConvergenceHermite.runTest.linf": {
            "name": "linf",
            "location": 130,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "ConvergenceHermite.runTest.exact": {
            "name": "exact",
            "location": 140,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "ConvergenceHermite.runTest.error": {
            "name": "error",
            "location": 144,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "ConvergenceMorley.runTest.bilinf.C": {
            "name": "C",
            "location": 38,
            "return": [],
            "arguments": {
                "T": []
            }
        }
    },
    "scikit-fem-master/tests/test_convergence_hdiv.py": {
        "ConvergenceRaviartThomas.runTest": {
            "name": "runTest",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceRaviartThomas.compute_L2": {
            "name": "compute_L2",
            "location": 88,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "basis": [],
                "U": []
            }
        },
        "ConvergenceRaviartThomas.compute_Hdiv": {
            "name": "compute_Hdiv",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "basis": [],
                "U": []
            }
        },
        "ConvergenceRaviartThomas.create_basis": {
            "name": "create_basis",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceRaviartThomas.setUp": {
            "name": "setUp",
            "location": 136,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceBDM1.create_basis": {
            "name": "create_basis",
            "location": 147,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceBDM1.setUp": {
            "name": "setUp",
            "location": 153,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceRT2.create_basis": {
            "name": "create_basis",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceRT2.setUp": {
            "name": "setUp",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceQuadRT0.create_basis": {
            "name": "create_basis",
            "location": 178,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceQuadRT0.setUp": {
            "name": "setUp",
            "location": 182,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceRaviartThomas3D.create_basis": {
            "name": "create_basis",
            "location": 193,
            "return": [],
            "arguments": {
                "self": [],
                "m": []
            }
        },
        "ConvergenceRaviartThomas3D.setUp": {
            "name": "setUp",
            "location": 199,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceRaviartThomas.runTest.bilinf_A": {
            "name": "bilinf_A",
            "location": 23,
            "return": [],
            "arguments": {
                "sigma": [],
                "tau": [],
                "w": []
            }
        },
        "ConvergenceRaviartThomas.runTest.bilinf_B": {
            "name": "bilinf_B",
            "location": 28,
            "return": [],
            "arguments": {
                "sigma": [],
                "v": [],
                "w": []
            }
        },
        "ConvergenceRaviartThomas.runTest.load": {
            "name": "load",
            "location": 32,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "ConvergenceRaviartThomas.compute_L2.u": {
            "name": "u",
            "location": 93,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "ConvergenceRaviartThomas.compute_Hdiv.divu": {
            "name": "divu",
            "location": 110,
            "return": [],
            "arguments": {
                "y": []
            }
        }
    },
    "scikit-fem-master/tests/test_dofs.py": {
        "test_nonexisting_keys": {
            "name": "test_nonexisting_keys",
            "location": 108,
            "return": [],
            "arguments": {}
        },
        "TestDofsKeepSkipOperations.runTest": {
            "name": "runTest",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDofsNodalSubsets.runTest": {
            "name": "runTest",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDofsMerge.runTest": {
            "name": "runTest",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDofsSubset.runTest": {
            "name": "runTest",
            "location": 75,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDofsFromBoundaries.runTest": {
            "name": "runTest",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/tests/test_elements.py": {
        "test_dg_element": {
            "name": "test_dg_element",
            "location": 365,
            "return": [],
            "arguments": {
                "m": [],
                "e": [],
                "edg": []
            }
        },
        "test_initialize_dg_composite_elements": {
            "name": "test_initialize_dg_composite_elements",
            "location": 399,
            "return": [],
            "arguments": {
                "e": [],
                "edg": []
            }
        },
        "TestNodality.runTest": {
            "name": "runTest",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodalityTriRT0.runTest": {
            "name": "runTest",
            "location": 120,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestNodalityQuadRT0.runTest": {
            "name": "runTest",
            "location": 141,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComposite.runTest": {
            "name": "runTest",
            "location": 161,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestComposite.check_equivalence": {
            "name": "check_equivalence",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "ec": [],
                "ev": []
            }
        },
        "TestCompositeMul.runTest": {
            "name": "runTest",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestCompatibilityWarning.runTest": {
            "name": "runTest",
            "location": 209,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestDerivatives.runTest": {
            "name": "runTest",
            "location": 251,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestPartitionofUnity.runTest": {
            "name": "runTest",
            "location": 313,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementLinePp.test_p_less_than_1_error": {
            "name": "test_p_less_than_1_error",
            "location": 334,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestElementQuadBFS.test_throw_index_error": {
            "name": "test_throw_index_error",
            "location": 342,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_dg_element.square": {
            "name": "square",
            "location": 370,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "TestCompatibilityWarning.runTest.init_incompatible": {
            "name": "init_incompatible",
            "location": 213,
            "return": [],
            "arguments": {}
        }
    },
    "scikit-fem-master/tests/test_examples.py": {
        "TestEx01.runTest": {
            "name": "runTest",
            "location": 8,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx02.runTest": {
            "name": "runTest",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx03.runTest": {
            "name": "runTest",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx04.runTest": {
            "name": "runTest",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx05.runTest": {
            "name": "runTest",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx06.runTest": {
            "name": "runTest",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx07.runTest": {
            "name": "runTest",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx08.runTest": {
            "name": "runTest",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx09.runTest": {
            "name": "runTest",
            "location": 65,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx10.runTest": {
            "name": "runTest",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx11.runTest": {
            "name": "runTest",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx12.runTest": {
            "name": "runTest",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx13.runTest": {
            "name": "runTest",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx14.runTest": {
            "name": "runTest",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx15.runTest": {
            "name": "runTest",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx16.runTest": {
            "name": "runTest",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx17.runTest": {
            "name": "runTest",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx18.runTest": {
            "name": "runTest",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx19.runTest": {
            "name": "runTest",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx20.runTest": {
            "name": "runTest",
            "location": 175,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx21.runTest": {
            "name": "runTest",
            "location": 183,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx22.runTest": {
            "name": "runTest",
            "location": 194,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx24.runTest": {
            "name": "runTest",
            "location": 203,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx25.runTest": {
            "name": "runTest",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx26.runTest": {
            "name": "runTest",
            "location": 220,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx28.runTest": {
            "name": "runTest",
            "location": 227,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx29.runTest": {
            "name": "runTest",
            "location": 234,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx30.runTest": {
            "name": "runTest",
            "location": 245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx31.runTest": {
            "name": "runTest",
            "location": 252,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx32.runTest": {
            "name": "runTest",
            "location": 259,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx33.runTest": {
            "name": "runTest",
            "location": 266,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx34.runTest": {
            "name": "runTest",
            "location": 273,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx35.runTest": {
            "name": "runTest",
            "location": 280,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx36.runTest": {
            "name": "runTest",
            "location": 290,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx37.runTest": {
            "name": "runTest",
            "location": 303,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx38.runTest": {
            "name": "runTest",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx39.runTest": {
            "name": "runTest",
            "location": 317,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx40.runTest": {
            "name": "runTest",
            "location": 326,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx41.runTest": {
            "name": "runTest",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx42.runTest": {
            "name": "runTest",
            "location": 346,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx43.runTest": {
            "name": "runTest",
            "location": 354,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx44.runTest": {
            "name": "runTest",
            "location": 362,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEx45.runTest": {
            "name": "runTest",
            "location": 373,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/tests/test_manufactured.py": {
        "test_solving_inhomogeneous_laplace": {
            "name": "test_solving_inhomogeneous_laplace",
            "location": 305,
            "return": [],
            "arguments": {
                "mesh_elem": [],
                "impose": []
            }
        },
        "test_periodic_mesh_assembly": {
            "name": "test_periodic_mesh_assembly",
            "location": 416,
            "return": [],
            "arguments": {
                "m": [],
                "mdgtype": [],
                "etype": [],
                "check1": [],
                "check2": []
            }
        },
        "test_periodic_loading": {
            "name": "test_periodic_loading",
            "location": 496,
            "return": [],
            "arguments": {
                "m": [],
                "mdgtype": [],
                "e": []
            }
        },
        "Line1D.runTest": {
            "name": "runTest",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineNegative1D.runTest": {
            "name": "runTest",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "LineNeumann1D.runTest": {
            "name": "runTest",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExactHexElement.set_bc": {
            "name": "set_bc",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "fun": [],
                "basis": []
            }
        },
        "TestExactHexElement.runTest": {
            "name": "runTest",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestExactHexS2.set_bc": {
            "name": "set_bc",
            "location": 179,
            "return": [],
            "arguments": {
                "self": [],
                "fun": [],
                "basis": []
            }
        },
        "TestExactHex2.set_bc": {
            "name": "set_bc",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "fun": [],
                "basis": []
            }
        },
        "TestExactTriElementP2.set_bc": {
            "name": "set_bc",
            "location": 224,
            "return": [],
            "arguments": {
                "self": [],
                "fun": [],
                "basis": []
            }
        },
        "SolveCirclePoisson.init_mesh": {
            "name": "init_mesh",
            "location": 241,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SolveCirclePoisson.runTest": {
            "name": "runTest",
            "location": 245,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SolveCirclePoissonTri2Init.init_mesh": {
            "name": "init_mesh",
            "location": 279,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SolveCirclePoissonTet.init_mesh": {
            "name": "init_mesh",
            "location": 289,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_solving_inhomogeneous_laplace.dirichlet": {
            "name": "dirichlet",
            "location": 315,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "test_solving_inhomogeneous_laplace.gradu": {
            "name": "gradu",
            "location": 328,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "test_periodic_mesh_assembly._sort": {
            "name": "_sort",
            "location": 418,
            "return": [],
            "arguments": {
                "ix": []
            }
        },
        "test_periodic_loading._sort": {
            "name": "_sort",
            "location": 498,
            "return": [],
            "arguments": {
                "ix": []
            }
        },
        "test_periodic_loading.linf": {
            "name": "linf",
            "location": 510,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "test_periodic_loading.uexact": {
            "name": "uexact",
            "location": 516,
            "return": [],
            "arguments": {
                "x": []
            }
        },
        "test_periodic_loading.func": {
            "name": "func",
            "location": 520,
            "return": [],
            "arguments": {
                "w": []
            }
        },
        "Line1D.runTest.boundary_flux": {
            "name": "boundary_flux",
            "location": 45,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "LineNegative1D.runTest.boundary_flux": {
            "name": "boundary_flux",
            "location": 85,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "LineNeumann1D.runTest.boundary_flux": {
            "name": "boundary_flux",
            "location": 123,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        }
    },
    "scikit-fem-master/tests/test_mapping.py": {
        "TestIsoparamNormals.runTest": {
            "name": "runTest",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInverseMapping.initialize_meshes": {
            "name": "initialize_meshes",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInverseMapping.within_refelem": {
            "name": "within_refelem",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "TestInverseMapping.runTest": {
            "name": "runTest",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestInverseMappingHex.initialize_meshes": {
            "name": "initialize_meshes",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMortarPair.init_meshes": {
            "name": "init_meshes",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMortarPair.runTest": {
            "name": "runTest",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/tests/test_mesh.py": {
        "test_adaptive_splitting_3d": {
            "name": "test_adaptive_splitting_3d",
            "location": 209,
            "return": [],
            "arguments": {}
        },
        "test_adaptive_splitting_3d_0": {
            "name": "test_adaptive_splitting_3d_0",
            "location": 216,
            "return": [],
            "arguments": {}
        },
        "test_adaptive_splitting_3d_1": {
            "name": "test_adaptive_splitting_3d_1",
            "location": 222,
            "return": [],
            "arguments": {}
        },
        "test_adaptive_splitting_3d_2": {
            "name": "test_adaptive_splitting_3d_2",
            "location": 228,
            "return": [],
            "arguments": {}
        },
        "test_adaptive_splitting_3d_3": {
            "name": "test_adaptive_splitting_3d_3",
            "location": 234,
            "return": [],
            "arguments": {}
        },
        "test_adaptive_splitting_3d_4": {
            "name": "test_adaptive_splitting_3d_4",
            "location": 263,
            "return": [],
            "arguments": {}
        },
        "test_adaptive_splitting_3d_5": {
            "name": "test_adaptive_splitting_3d_5",
            "location": 287,
            "return": [],
            "arguments": {}
        },
        "test_adaptive_random_splitting": {
            "name": "test_adaptive_random_splitting",
            "location": 311,
            "return": [],
            "arguments": {
                "m": [],
                "seed": []
            }
        },
        "test_smoothed": {
            "name": "test_smoothed",
            "location": 389,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "test_oriented": {
            "name": "test_oriented",
            "location": 403,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "test_finder_simplex": {
            "name": "test_finder_simplex",
            "location": 423,
            "return": [],
            "arguments": {
                "m": [],
                "seed": []
            }
        },
        "test_meshio_cycle": {
            "name": "test_meshio_cycle",
            "location": 452,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "test_meshio_cycle_boundaries": {
            "name": "test_meshio_cycle_boundaries",
            "location": 489,
            "return": [],
            "arguments": {
                "boundaries_only": [],
                "m": []
            }
        },
        "test_meshio_cycle_subdomains": {
            "name": "test_meshio_cycle_subdomains",
            "location": 509,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "test_saveload_cycle_vtk": {
            "name": "test_saveload_cycle_vtk",
            "location": 528,
            "return": [],
            "arguments": {
                "m": []
            }
        },
        "test_saveload_cycle_tags": {
            "name": "test_saveload_cycle_tags",
            "location": 560,
            "return": [],
            "arguments": {
                "fmt": [],
                "kwargs": [],
                "m": []
            }
        },
        "test_periodic_failure": {
            "name": "test_periodic_failure",
            "location": 585,
            "return": [],
            "arguments": {}
        },
        "test_init_refdom": {
            "name": "test_init_refdom",
            "location": 609,
            "return": [],
            "arguments": {
                "mtype": []
            }
        },
        "test_refine_boundaries": {
            "name": "test_refine_boundaries",
            "location": 625,
            "return": [],
            "arguments": {
                "mtype": []
            }
        },
        "test_point_outside_mesh": {
            "name": "test_point_outside_mesh",
            "location": 640,
            "return": [],
            "arguments": {}
        },
        "MeshTests.runTest": {
            "name": "runTest",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FaultyInputs._runTest": {
            "name": "_runTest",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Loading.runTest": {
            "name": "runTest",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SerializeUnserializeCycle.runTest": {
            "name": "runTest",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBoundaryEdges.runTest": {
            "name": "runTest",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestBoundaryEdges2.runTest": {
            "name": "runTest",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMeshAddition.runTest": {
            "name": "runTest",
            "location": 139,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestMeshQuadSplit.runTest": {
            "name": "runTest",
            "location": 149,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAdaptiveSplitting1D.runTest": {
            "name": "runTest",
            "location": 176,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestAdaptiveSplitting2D.runTest": {
            "name": "runTest",
            "location": 192,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_adaptive_splitting_3d_3.hproj": {
            "name": "hproj",
            "location": 245,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "TestMirrored.runTest": {
            "name": "runTest",
            "location": 337,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFinder1DRefined.runTest": {
            "name": "runTest",
            "location": 360,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestFinder1DLinspaced.runTest": {
            "name": "runTest",
            "location": 370,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/tests/test_p_convergence.py": {
        "ConvergenceLinePp.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceLinePp.create_basis": {
            "name": "create_basis",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "p": []
            }
        },
        "ConvergenceLinePp.runTest": {
            "name": "runTest",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceLinePp.compute_error": {
            "name": "compute_error",
            "location": 49,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "basis": [],
                "U": []
            }
        },
        "ConvergenceQuadP.setUp": {
            "name": "setUp",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceQuadP.create_basis": {
            "name": "create_basis",
            "location": 75,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "p": []
            }
        },
        "ConvergenceQuadP.runTest": {
            "name": "runTest",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ConvergenceQuadP.compute_error": {
            "name": "compute_error",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "m": [],
                "basis": [],
                "U": []
            }
        },
        "ConvergenceLinePp.runTest.load": {
            "name": "load",
            "location": 24,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "ConvergenceLinePp.compute_error.u": {
            "name": "u",
            "location": 54,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "ConvergenceLinePp.compute_error.ux": {
            "name": "ux",
            "location": 59,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "ConvergenceQuadP.runTest.load": {
            "name": "load",
            "location": 82,
            "return": [],
            "arguments": {
                "v": [],
                "w": []
            }
        },
        "ConvergenceQuadP.compute_error.u": {
            "name": "u",
            "location": 113,
            "return": [],
            "arguments": {
                "y": []
            }
        },
        "ConvergenceQuadP.compute_error.ux": {
            "name": "ux",
            "location": 119,
            "return": [],
            "arguments": {
                "y": []
            }
        }
    },
    "scikit-fem-master/tests/test_utils.py": {
        "test_simple_cg_solver": {
            "name": "test_simple_cg_solver",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "InitializeScalarField.runTest": {
            "name": "runTest",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestEnforce.runTest": {
            "name": "runTest",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InitializeScalarField.runTest.fun": {
            "name": "fun",
            "location": 20,
            "return": [],
            "arguments": {
                "X": []
            }
        }
    },
    "scikit-fem-master/tests/test_visuals.py": {
        "test_call_svg_plot": {
            "name": "test_call_svg_plot",
            "location": 91,
            "return": [],
            "arguments": {
                "mtype": []
            }
        },
        "CallDraw.runTest": {
            "name": "runTest",
            "location": 17,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallPlot.runTest": {
            "name": "runTest",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallPlot3.runTest": {
            "name": "runTest",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CallPlotBasis.runTest": {
            "name": "runTest",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scikit-fem-master/tests/__init__.py": {}
}
{
    "score-monster-master/main.py": {
        "main": {
            "name": "main",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "score-monster-master/services/gsheets.py": {
        "Worksheet.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sheet_url": [
                    "str"
                ],
                "tab_name": [
                    "str"
                ],
                "show_stats": [
                    "bool"
                ]
            }
        },
        "Worksheet.requests": {
            "name": "requests",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Worksheet.get_hacker_cell": {
            "name": "get_hacker_cell",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "hacker": [
                    "str"
                ]
            }
        },
        "Worksheet._add_value": {
            "name": "_add_value",
            "location": 76,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Worksheet.update_score": {
            "name": "update_score",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "hacker": [
                    "str"
                ],
                "score": [
                    "str"
                ],
                "column": [
                    "int"
                ]
            }
        },
        "Worksheet.update_scores": {
            "name": "update_scores",
            "location": 161,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "hackers": [
                    "List[Dict[(str, str)]]"
                ],
                "column": [
                    "int"
                ]
            }
        },
        "Worksheet.update_stats": {
            "name": "update_stats",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "score-monster-master/services/hackerrank.py": {
        "HackerrankAPI.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "contest": [
                    "str"
                ],
                "username_filter": [
                    "list"
                ],
                "start_limit": [
                    "_datetime.datetime"
                ],
                "end_limit": [
                    "_datetime.datetime"
                ]
            }
        },
        "HackerrankAPI.render_leaderboard_link": {
            "name": "render_leaderboard_link",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "offset": [],
                "limit": []
            }
        },
        "HackerrankAPI.contest_link": {
            "name": "contest_link",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HackerrankAPI.on_time": {
            "name": "on_time",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "actual": [
                    "str"
                ]
            }
        },
        "HackerrankAPI.filter_keys": {
            "name": "filter_keys",
            "location": 71,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "hacker": []
            }
        },
        "HackerrankAPI.parse_new_hackers": {
            "name": "parse_new_hackers",
            "location": 81,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "requests.models.Response"
                ]
            }
        },
        "HackerrankAPI.epoch_contest_start_time": {
            "name": "epoch_contest_start_time",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "HackerrankAPI.filter_on_time": {
            "name": "filter_on_time",
            "location": 102,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": [],
                "hackers": [
                    "List[Dict[(str, str)]]"
                ]
            }
        },
        "HackerrankAPI.get_leadearboard": {
            "name": "get_leadearboard",
            "location": 106,
            "return": [
                "Iterator"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "score-monster-master/services/mediator.py": {
        "Mediator.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Mediator.begin_collection": {
            "name": "begin_collection",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "score-monster-master/services/__init__.py": {},
    "score-monster-master/services/constants/fixed_numbers.py": {},
    "score-monster-master/services/constants/templates.py": {}
}
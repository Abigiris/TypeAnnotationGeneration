{
    "scripts-master/nvm_install.py": {
        "download": {
            "name": "download",
            "location": 16,
            "return": [],
            "arguments": {
                "url": [],
                "filename": []
            }
        }
    },
    "scripts-master/archive/android_sdk_install.py": {
        "download": {
            "name": "download",
            "location": 18,
            "return": [],
            "arguments": {
                "url": [],
                "filename": []
            }
        },
        "install": {
            "name": "install",
            "location": 52,
            "return": [],
            "arguments": {
                "base_url": [],
                "version": [],
                "download_directory": [],
                "install_directory": [],
                "shell_rcfile": [],
                "os_name": [],
                "force": []
            }
        }
    },
    "scripts-master/archive/commands.py": {
        "main": {
            "name": "main",
            "location": 29,
            "return": [],
            "arguments": {}
        },
        "run_interactive": {
            "name": "run_interactive",
            "location": 55,
            "return": [],
            "arguments": {}
        },
        "list_by_tag": {
            "name": "list_by_tag",
            "location": 60,
            "return": [],
            "arguments": {
                "tags": []
            }
        },
        "add_new_command": {
            "name": "add_new_command",
            "location": 69,
            "return": [],
            "arguments": {
                "command": [],
                "tags": []
            }
        }
    },
    "scripts-master/archive/download_control_notes.py": {},
    "scripts-master/archive/download_ELEN4017_slides.py": {},
    "scripts-master/archive/download_lab_mfiles.py": {},
    "scripts-master/archive/line_count.py": {
        "main": {
            "name": "main",
            "location": 14,
            "return": [],
            "arguments": {}
        }
    },
    "scripts-master/archive/newFile.py": {
        "newFile": {
            "name": "newFile",
            "location": 24,
            "return": [],
            "arguments": {
                "filename": [],
                "ext": []
            }
        },
        "touchFile": {
            "name": "touchFile",
            "location": 40,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "replace_all": {
            "name": "replace_all",
            "location": 51,
            "return": [],
            "arguments": {
                "text": [],
                "dic": []
            }
        },
        "newCppHeader": {
            "name": "newCppHeader",
            "location": 58,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "controller": {
            "name": "controller",
            "location": 64,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 97,
            "return": [],
            "arguments": {}
        }
    },
    "scripts-master/archive/volume_notify.py": {
        "dbus_notify": {
            "name": "dbus_notify",
            "location": 15,
            "return": [],
            "arguments": {
                "volume": [],
                "bar": []
            }
        },
        "bar": {
            "name": "bar",
            "location": 31,
            "return": [],
            "arguments": {
                "volume": []
            }
        },
        "getvolume": {
            "name": "getvolume",
            "location": 41,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 51,
            "return": [],
            "arguments": {}
        }
    },
    "scripts-master/archive/witsproxy.py": {},
    "scripts-master/archive/ceaser/ceaser.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "ceaser": {
            "name": "ceaser",
            "location": 41,
            "return": [],
            "arguments": {
                "text": [],
                "shift": [],
                "alphabet": []
            }
        }
    },
    "scripts-master/archive/ceaser/with_click/ceaser.py": {
        "ceaser": {
            "name": "ceaser",
            "location": 13,
            "return": [],
            "arguments": {
                "text": [],
                "shift": [],
                "alphabet": []
            }
        },
        "get_content": {
            "name": "get_content",
            "location": 26,
            "return": [],
            "arguments": {
                "filename": []
            }
        },
        "main": {
            "name": "main",
            "location": 35,
            "return": [],
            "arguments": {
                "text": [],
                "shift": []
            }
        }
    },
    "scripts-master/archive/ceaser/with_click/setup.py": {
        "Roger.initialize_options": {
            "name": "initialize_options",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Roger.finalize_options": {
            "name": "finalize_options",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Roger.run": {
            "name": "run",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scripts-master/archive/cima/main.py": {
        "Game.main": {
            "name": "main",
            "location": 9,
            "return": [],
            "arguments": {
                "self": [],
                "display": []
            }
        },
        "Walls.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "screen_size": []
            }
        },
        "Walls.create_walls": {
            "name": "create_walls",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "screen_size": []
            }
        },
        "Walls.update": {
            "name": "update",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "game": []
            }
        },
        "Player.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.update": {
            "name": "update",
            "location": 76,
            "return": [],
            "arguments": {
                "self": [],
                "dt": [],
                "game": []
            }
        }
    },
    "scripts-master/archive/lyconfig/main.py": {
        "EditableLabel.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EditableLabel.edit": {
            "name": "edit",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "label": []
            }
        },
        "EditableLabel.on_focus": {
            "name": "on_focus",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "instance": [],
                "value": []
            }
        },
        "EditableLabel.show": {
            "name": "show",
            "location": 46,
            "return": [],
            "arguments": {
                "self": [],
                "textinput": []
            }
        },
        "FileList.filename_converter": {
            "name": "filename_converter",
            "location": 67,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "filename": []
            }
        },
        "FileList.update": {
            "name": "update",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lyconfig.build": {
            "name": "build",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Lyconfig.build_config": {
            "name": "build_config",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Lyconfig.build_settings": {
            "name": "build_settings",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "settings": []
            }
        },
        "Lyconfig.set_wallpaper": {
            "name": "set_wallpaper",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "filepath": []
            }
        },
        "Lyconfig.change_in_file": {
            "name": "change_in_file",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "filename": [],
                "new_wallpaper": []
            }
        },
        "Lyconfig.rename": {
            "name": "rename",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "directory": [],
                "filename": [],
                "new_filename": []
            }
        }
    },
    "scripts-master/archive/lyconfig/settingsjson.py": {},
    "scripts-master/archive/searchreplace/searchreplace.py": {
        "main": {
            "name": "main",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "find_filenames": {
            "name": "find_filenames",
            "location": 60,
            "return": [],
            "arguments": {
                "directory": [],
                "extension": [],
                "is_recursive": [],
                "ignore_str": []
            }
        },
        "should_replace": {
            "name": "should_replace",
            "location": 88,
            "return": [],
            "arguments": {
                "searchterm": [],
                "line_info": []
            }
        },
        "search_replace": {
            "name": "search_replace",
            "location": 98,
            "return": [],
            "arguments": {
                "searchterm": [],
                "replaceterm": [],
                "filename": [],
                "confirm": []
            }
        }
    },
    "scripts-master/archive/searchreplace/setup.py": {},
    "scripts-master/archive/searchreplace/tests.py": {
        "SearchReplace.setUp": {
            "name": "setUp",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchReplace.test_find_filenames_non_recursive": {
            "name": "test_find_filenames_non_recursive",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchReplace.test_find_filenames_non_recursive_with_ignored": {
            "name": "test_find_filenames_non_recursive_with_ignored",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchReplace.test_find_filenames_recursively_in_directories": {
            "name": "test_find_filenames_recursively_in_directories",
            "location": 53,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchReplace.test_find_filenames_recursively_in_directories_without_ignored": {
            "name": "test_find_filenames_recursively_in_directories_without_ignored",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchReplace.test_find_only_files_with_extension": {
            "name": "test_find_only_files_with_extension",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchReplace.test_find_only_files_with_extension_non_recursive": {
            "name": "test_find_only_files_with_extension_non_recursive",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SearchReplace.tearDown": {
            "name": "tearDown",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "scripts-master/extract_todos/extract_todos.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 27,
            "return": [],
            "arguments": {}
        },
        "find_filenames": {
            "name": "find_filenames",
            "location": 51,
            "return": [],
            "arguments": {
                "directory": [],
                "extension": [],
                "is_recursive": []
            }
        },
        "search_replace": {
            "name": "search_replace",
            "location": 73,
            "return": [],
            "arguments": {
                "filename": [],
                "outputfile": []
            }
        }
    },
    "scripts-master/ftpdown/ftpdown.py": {
        "file_links": {
            "name": "file_links",
            "location": 39,
            "return": [],
            "arguments": {
                "inputs": [],
                "ns": []
            }
        },
        "file_links.get_link": {
            "name": "get_link",
            "location": 55,
            "return": [],
            "arguments": {
                "node": []
            }
        }
    },
    "scripts-master/odisplay/odisplay.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "switch_on": {
            "name": "switch_on",
            "location": 64,
            "return": [],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "switch_off": {
            "name": "switch_off",
            "location": 81,
            "return": [],
            "arguments": {}
        },
        "notify": {
            "name": "notify",
            "location": 89,
            "return": [],
            "arguments": {
                "message": []
            }
        },
        "run_command": {
            "name": "run_command",
            "location": 97,
            "return": [],
            "arguments": {
                "command": []
            }
        },
        "auto_run": {
            "name": "auto_run",
            "location": 105,
            "return": [],
            "arguments": {}
        }
    },
    "scripts-master/tmux_sel/sel.py": {
        "running": {
            "name": "running",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "static": {
            "name": "static",
            "location": 21,
            "return": [],
            "arguments": {
                "tmuxp_path": []
            }
        },
        "make_cmd": {
            "name": "make_cmd",
            "location": 27,
            "return": [],
            "arguments": {
                "choice": []
            }
        },
        "combine": {
            "name": "combine",
            "location": 39,
            "return": [],
            "arguments": {
                "running": [],
                "static": []
            }
        }
    }
}
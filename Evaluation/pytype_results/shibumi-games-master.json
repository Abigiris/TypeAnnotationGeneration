{
    "shibumi-games-master/setup.py": {},
    "shibumi-games-master/extra_images/run_povray.py": {
        "parse_args": {
            "name": "parse_args",
            "location": 10,
            "return": [
                "argparse.Namespace"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/shibumi/diagram_writer.py": {
        "main": {
            "name": "main",
            "location": 266,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "SpaijiLossDiagram.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpaijiLossDiagram.draw": {
            "name": "draw",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        },
        "SpaijiWinDiagram.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplineDiagram.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplineDiagram.draw": {
            "name": "draw",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        },
        "SplineDiagram2.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplineDiagram2.draw": {
            "name": "draw",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        },
        "SploofStartDiagram.__init__": {
            "name": "__init__",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SploofWinDiagram.__init__": {
            "name": "__init__",
            "location": 158,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SploofWinDiagram.draw": {
            "name": "draw",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        },
        "SploofRowDiagram.__init__": {
            "name": "__init__",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SploofRowDiagram.draw": {
            "name": "draw",
            "location": 222,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        },
        "SploofBlockedDiagram.__init__": {
            "name": "__init__",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SploofBlockedDiagram.draw": {
            "name": "draw",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "painter": []
            }
        }
    },
    "shibumi-games-master/shibumi/play_shibumi.py": {},
    "shibumi-games-master/shibumi/shibumi.py": {
        "main": {
            "name": "main",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "ShibumiWindow.get_collection_name": {
            "name": "get_collection_name",
            "location": 14,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "ShibumiWindow.filter_games": {
            "name": "filter_games",
            "location": 18,
            "return": [
                "Generator[(pkg_resources.EntryPoint, None, None)]"
            ],
            "arguments": {
                "entries": [
                    "Iterable[pkg_resources.EntryPoint]"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/shibumi_display.py": {
        "GraphicsShibumiPieceItem.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "hover_listener": []
            }
        },
        "GraphicsShibumiPieceItem.hoverEnterEvent": {
            "name": "hoverEnterEvent",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "GraphicsShibumiPieceItem.hoverLeaveEvent": {
            "name": "hoverLeaveEvent",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "GraphicsShibumiPieceItem.mousePressEvent": {
            "name": "mousePressEvent",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "GraphicsShibumiPieceItem.__repr__": {
            "name": "__repr__",
            "location": 46,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiDisplay.__init__": {
            "name": "__init__",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start_state": [
                    "shibumi.shibumi_game_state.ShibumiGameState"
                ]
            }
        },
        "ShibumiDisplay.visible_counts": {
            "name": "visible_counts",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ShibumiDisplay.show_counts": {
            "name": "show_counts",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ShibumiDisplay.visible_move_types": {
            "name": "visible_move_types",
            "location": 154,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ShibumiDisplay.show_move_types": {
            "name": "show_move_types",
            "location": 181,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ShibumiDisplay.selected_move_type": {
            "name": "selected_move_type",
            "location": 195,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ShibumiDisplay.on_move_type_selected": {
            "name": "on_move_type_selected",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "move_type": [
                    "shibumi.shibumi_game_state.MoveType"
                ]
            }
        },
        "ShibumiDisplay.assemble_board": {
            "name": "assemble_board",
            "location": 207,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiDisplay.update_board": {
            "name": "update_board",
            "location": 289,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_state": []
            }
        },
        "ShibumiDisplay.update_move_text": {
            "name": "update_move_text",
            "location": 353,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ShibumiDisplay.scene": {
            "name": "scene",
            "location": 359,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiDisplay.resizeEvent": {
            "name": "resizeEvent",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "ShibumiDisplay.update_count_text": {
            "name": "update_count_text",
            "location": 432,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiDisplay.scale_pixmap": {
            "name": "scale_pixmap",
            "location": 444,
            "return": [
                "Any"
            ],
            "arguments": {
                "pixmap": [],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ]
            }
        },
        "ShibumiDisplay.on_hover_enter": {
            "name": "on_hover_enter",
            "location": 452,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "piece_item": [
                    "GraphicsShibumiPieceItem"
                ]
            }
        },
        "ShibumiDisplay.on_hover_leave": {
            "name": "on_hover_leave",
            "location": 474,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "piece_item": [
                    "GraphicsShibumiPieceItem"
                ]
            }
        },
        "ShibumiDisplay.on_click": {
            "name": "on_click",
            "location": 483,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "piece_item": [
                    "GraphicsShibumiPieceItem"
                ]
            }
        },
        "ShibumiDisplay.load_pixmap": {
            "name": "load_pixmap",
            "location": 495,
            "return": [
                "Any"
            ],
            "arguments": {
                "name": [
                    "str"
                ],
                "size": []
            }
        },
        "ShibumiDisplay.close": {
            "name": "close",
            "location": 507,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/shibumi_display_ui.py": {
        "Ui_ShibumiDisplay.setupUi": {
            "name": "setupUi",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ShibumiDisplay": []
            }
        },
        "Ui_ShibumiDisplay.retranslateUi": {
            "name": "retranslateUi",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ShibumiDisplay": []
            }
        }
    },
    "shibumi-games-master/shibumi/shibumi_game_state.py": {
        "ShibumiGameState.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "board": [
                    "np.ndarray"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.get_usable_positions": {
            "name": "get_usable_positions",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiGameState.__eq__": {
            "name": "__eq__",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "ShibumiGameState.load_text": {
            "name": "load_text",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "levels": [
                    "np.ndarray"
                ]
            }
        },
        "ShibumiGameState.get_valid_moves": {
            "name": "get_valid_moves",
            "location": 92,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiGameState.fill_supported_moves": {
            "name": "fill_supported_moves",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "valid_moves": [
                    "np.ndarray"
                ]
            }
        },
        "ShibumiGameState.find_possible_neighbours": {
            "name": "find_possible_neighbours",
            "location": 126,
            "return": [],
            "arguments": {
                "size": [],
                "height": [],
                "row": [],
                "column": [],
                "dh_start": [],
                "dh_end": []
            }
        },
        "ShibumiGameState.find_neighbours": {
            "name": "find_neighbours",
            "location": 157,
            "return": [
                "Generator[(Tuple[(int, int, int)], None, None)]"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "dh_start": [
                    "int"
                ],
                "dh_end": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.calculate_volume": {
            "name": "calculate_volume",
            "location": 235,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "base_size": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.display": {
            "name": "display",
            "location": 240,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "show_coordinates": [
                    "bool"
                ]
            }
        },
        "ShibumiGameState.get_levels": {
            "name": "get_levels",
            "location": 269,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiGameState.display_move": {
            "name": "display_move",
            "location": 272,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.display_coordinates": {
            "name": "display_coordinates",
            "location": 277,
            "return": [
                "str"
            ],
            "arguments": {
                "height": [],
                "row": [],
                "column": []
            }
        },
        "ShibumiGameState.get_move_count": {
            "name": "get_move_count",
            "location": 282,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiGameState.get_piece_count": {
            "name": "get_piece_count",
            "location": 288,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.get_spaces": {
            "name": "get_spaces",
            "location": 294,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "ShibumiGameState.get_index": {
            "name": "get_index",
            "location": 298,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "move_type": [
                    "MoveType"
                ]
            }
        },
        "ShibumiGameState.get_move_index": {
            "name": "get_move_index",
            "location": 318,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "row_name": [
                    "str"
                ],
                "column_name": [
                    "str"
                ]
            }
        },
        "ShibumiGameState.parse_move": {
            "name": "parse_move",
            "location": 342,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ShibumiGameState.get_coordinates": {
            "name": "get_coordinates",
            "location": 347,
            "return": [
                "Tuple[(int, int, int)]"
            ],
            "arguments": {
                "self": [],
                "move_index": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.make_move": {
            "name": "make_move",
            "location": 359,
            "return": [
                "_TShibumiGameState"
            ],
            "arguments": {
                "self": [
                    "_TShibumiGameState"
                ],
                "move": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.remove": {
            "name": "remove",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.is_pinned": {
            "name": "is_pinned",
            "location": 384,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ]
            }
        },
        "ShibumiGameState.is_free": {
            "name": "is_free",
            "location": 399,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/shibumi_images_rc.py": {
        "qInitResources": {
            "name": "qInitResources",
            "location": 18362,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "qCleanupResources": {
            "name": "qCleanupResources",
            "location": 18365,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/shibumi/shibumi_rules_rc.py": {
        "qInitResources": {
            "name": "qInitResources",
            "location": 21953,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "qCleanupResources": {
            "name": "qCleanupResources",
            "location": 21956,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/shibumi/__init__.py": {},
    "shibumi-games-master/shibumi/margo/display.py": {
        "MargoDisplay.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "MargoDisplay.credit_pairs": {
            "name": "credit_pairs",
            "location": 13,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/margo/state.py": {
        "MargoState.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "board": [
                    "np.ndarray"
                ],
                "size": [
                    "int"
                ],
                "history": [
                    "Set[bytes]"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/margo/__init__.py": {},
    "shibumi-games-master/shibumi/sandbox/display.py": {
        "SandboxDisplay.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SandboxDisplay.choose_active_text": {
            "name": "choose_active_text",
            "location": 11,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/sandbox/game.py": {
        "SandboxState.is_win": {
            "name": "is_win",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SandboxState.get_active_player": {
            "name": "get_active_player",
            "location": 12,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SandboxState.make_move": {
            "name": "make_move",
            "location": 15,
            "return": [
                "shibumi.shibumi_game_state.ShibumiGameState"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SandboxState.get_valid_moves": {
            "name": "get_valid_moves",
            "location": 31,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SandboxState.get_index": {
            "name": "get_index",
            "location": 52,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "move_type": [
                    "shibumi.shibumi_game_state.MoveType"
                ]
            }
        },
        "SandboxState.display_move": {
            "name": "display_move",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/sandbox/__init__.py": {},
    "shibumi-games-master/shibumi/spaiji/display.py": {
        "SpaijiDisplay.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpaijiDisplay.update_board": {
            "name": "update_board",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_state": []
            }
        },
        "SpaijiDisplay.credit_pairs": {
            "name": "credit_pairs",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/spaiji/game.py": {
        "SpaijiState.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "board": [
                    "np.ndarray"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "SpaijiState.display": {
            "name": "display",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "show_coordinates": [
                    "bool"
                ]
            }
        },
        "SpaijiState.get_active_player": {
            "name": "get_active_player",
            "location": 69,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpaijiState.make_move": {
            "name": "make_move",
            "location": 73,
            "return": [
                "shibumi.shibumi_game_state.ShibumiGameState"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SpaijiState.get_valid_moves": {
            "name": "get_valid_moves",
            "location": 90,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpaijiState.get_index": {
            "name": "get_index",
            "location": 129,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "move_type": [
                    "shibumi.shibumi_game_state.MoveType"
                ]
            }
        },
        "SpaijiState.display_move": {
            "name": "display_move",
            "location": 138,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SpaijiState.is_ended": {
            "name": "is_ended",
            "location": 148,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpaijiState.is_win": {
            "name": "is_win",
            "location": 152,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SpaijiState.get_scores": {
            "name": "get_scores",
            "location": 163,
            "return": [
                "Dict[(Any, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpaijiState.get_piece_count": {
            "name": "get_piece_count",
            "location": 204,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/spaiji/__init__.py": {},
    "shibumi-games-master/shibumi/spargo/display.py": {
        "SpargoDisplay.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "SpargoDisplay.credit_pairs": {
            "name": "credit_pairs",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/spargo/game.py": {
        "SpargoState.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "board": [
                    "np.ndarray"
                ],
                "size": [
                    "int"
                ],
                "history": [
                    "Set[bytes]"
                ]
            }
        },
        "SpargoState.game_name": {
            "name": "game_name",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpargoState.is_ended": {
            "name": "is_ended",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpargoState.is_win": {
            "name": "is_win",
            "location": 46,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SpargoState.display": {
            "name": "display",
            "location": 54,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "show_coordinates": [
                    "bool"
                ]
            }
        },
        "SpargoState.get_active_player": {
            "name": "get_active_player",
            "location": 61,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpargoState.make_move": {
            "name": "make_move",
            "location": 68,
            "return": [
                "_TSpargoState"
            ],
            "arguments": {
                "self": [
                    "_TSpargoState"
                ],
                "move": [
                    "int"
                ]
            }
        },
        "SpargoState.has_freedom": {
            "name": "has_freedom",
            "location": 117,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "levels": [
                    "np.ndarray"
                ],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "group": [
                    "set"
                ]
            }
        },
        "SpargoState.get_valid_moves": {
            "name": "get_valid_moves",
            "location": 148,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/spargo/__init__.py": {},
    "shibumi-games-master/shibumi/spire/display.py": {
        "SpireDisplay.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpireDisplay.update_board": {
            "name": "update_board",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_state": []
            }
        },
        "SpireDisplay.credit_pairs": {
            "name": "credit_pairs",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/spire/state.py": {
        "SpireState.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "board": [
                    "np.ndarray"
                ]
            }
        },
        "SpireState.display": {
            "name": "display",
            "location": 45,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "show_coordinates": [
                    "bool"
                ]
            }
        },
        "SpireState.display_move": {
            "name": "display_move",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SpireState.get_active_player": {
            "name": "get_active_player",
            "location": 66,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpireState.get_valid_moves": {
            "name": "get_valid_moves",
            "location": 69,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpireState.check_colour_matches": {
            "name": "check_colour_matches",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "valid_moves": [
                    "np.ndarray"
                ],
                "colour": [
                    "int"
                ]
            }
        },
        "SpireState.get_used_indexes": {
            "name": "get_used_indexes",
            "location": 128,
            "return": [
                "list"
            ],
            "arguments": {
                "size": []
            }
        },
        "SpireState.is_win": {
            "name": "is_win",
            "location": 135,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SpireState.make_move": {
            "name": "make_move",
            "location": 140,
            "return": [
                "shibumi.shibumi_game_state.ShibumiGameState"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SpireState.get_valid_colours": {
            "name": "get_valid_colours",
            "location": 160,
            "return": [
                "Tuple[(shibumi.shibumi_game_state.MoveType, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpireState.get_index": {
            "name": "get_index",
            "location": 167,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "move_type": [
                    "shibumi.shibumi_game_state.MoveType"
                ]
            }
        },
        "SpireState.get_coordinates": {
            "name": "get_coordinates",
            "location": 176,
            "return": [
                "Tuple[(int, int, int)]"
            ],
            "arguments": {
                "self": [],
                "move_index": [
                    "int"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/spire/__init__.py": {},
    "shibumi-games-master/shibumi/spline/display.py": {
        "SplineDisplay.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SplineDisplay.credit_pairs": {
            "name": "credit_pairs",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/spline/game.py": {
        "SplineState.is_win": {
            "name": "is_win",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SplineState.is_diagonal_winner": {
            "name": "is_diagonal_winner",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player_pieces": []
            }
        },
        "SplineState.is_straight_winner": {
            "name": "is_straight_winner",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player_pieces": []
            }
        }
    },
    "shibumi-games-master/shibumi/spline/__init__.py": {},
    "shibumi-games-master/shibumi/sploof/display.py": {
        "SploofDisplay.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SploofDisplay.update_board": {
            "name": "update_board",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_state": []
            }
        }
    },
    "shibumi-games-master/shibumi/sploof/state.py": {
        "SploofState.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "board": [
                    "np.ndarray"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "SploofState.display": {
            "name": "display",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "show_coordinates": [
                    "bool"
                ]
            }
        },
        "SploofState.display_move": {
            "name": "display_move",
            "location": 50,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SploofState.get_valid_moves": {
            "name": "get_valid_moves",
            "location": 61,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SploofState.get_active_player": {
            "name": "get_active_player",
            "location": 92,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SploofState.make_move": {
            "name": "make_move",
            "location": 95,
            "return": [
                "shibumi.shibumi_game_state.ShibumiGameState"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SploofState.get_index": {
            "name": "get_index",
            "location": 115,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "height": [
                    "int"
                ],
                "row": [
                    "int"
                ],
                "column": [
                    "int"
                ],
                "move_type": [
                    "shibumi.shibumi_game_state.MoveType"
                ]
            }
        },
        "SploofState.get_piece_count": {
            "name": "get_piece_count",
            "location": 125,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SploofState.is_win": {
            "name": "is_win",
            "location": 130,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SploofState.has_line": {
            "name": "has_line",
            "location": 147,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/sploof/__init__.py": {},
    "shibumi-games-master/shibumi/spook/display.py": {
        "SpookDisplay.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookDisplay.update_board": {
            "name": "update_board",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_state": []
            }
        },
        "SpookDisplay.make_pass_move": {
            "name": "make_pass_move",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookDisplay.credit_pairs": {
            "name": "credit_pairs",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "shibumi-games-master/shibumi/spook/state.py": {
        "SpookState.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ],
                "board": [
                    "np.ndarray"
                ],
                "size": [
                    "int"
                ]
            }
        },
        "SpookState.display": {
            "name": "display",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "show_coordinates": [
                    "bool"
                ]
            }
        },
        "SpookState.get_active_player": {
            "name": "get_active_player",
            "location": 70,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookState.get_players": {
            "name": "get_players",
            "location": 73,
            "return": [
                "Iterable[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookState.make_move": {
            "name": "make_move",
            "location": 76,
            "return": [
                "shibumi.shibumi_game_state.ShibumiGameState"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        },
        "SpookState.get_move_count": {
            "name": "get_move_count",
            "location": 152,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookState.get_valid_moves": {
            "name": "get_valid_moves",
            "location": 155,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookState.find_ghost": {
            "name": "find_ghost",
            "location": 233,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookState.is_win": {
            "name": "is_win",
            "location": 237,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "player": [
                    "int"
                ]
            }
        },
        "SpookState.get_winner": {
            "name": "get_winner",
            "location": 243,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "SpookState.display_move": {
            "name": "display_move",
            "location": 255,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "move": [
                    "int"
                ]
            }
        }
    },
    "shibumi-games-master/shibumi/spook/__init__.py": {},
    "shibumi-games-master/shibumi/utils/headcount.py": {},
    "shibumi-games-master/shibumi/utils/__init__.py": {},
    "shibumi-games-master/tests/conftest.py": {
        "application": {
            "name": "application",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "pixmap_differ": {
            "name": "pixmap_differ",
            "location": 13,
            "return": [],
            "arguments": {
                "application": []
            }
        }
    },
    "shibumi-games-master/tests/__init__.py": {},
    "shibumi-games-master/tests/margo/test_margo_display.py": {
        "test_board_size_2": {
            "name": "test_board_size_2",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_board_size_3": {
            "name": "test_board_size_3",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_coordinates": {
            "name": "test_coordinates",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        }
    },
    "shibumi-games-master/tests/sandbox/test_sandbox_display.py": {
        "test_empty": {
            "name": "test_empty",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_selected_colour": {
            "name": "test_selected_colour",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_make_move_white": {
            "name": "test_make_move_white",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "application": []
            }
        },
        "test_make_move_red": {
            "name": "test_make_move_red",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "application": []
            }
        },
        "test_red": {
            "name": "test_red",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_hover_enter_red": {
            "name": "test_hover_enter_red",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_hover_enter_remove": {
            "name": "test_hover_enter_remove",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_hover_enter_remove_update": {
            "name": "test_hover_enter_remove_update",
            "location": 220,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_hover_enter_leave": {
            "name": "test_hover_enter_leave",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        }
    },
    "shibumi-games-master/tests/sandbox/test_sandbox_game.py": {
        "test_move_black": {
            "name": "test_move_black",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_move_white": {
            "name": "test_move_white",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_move_red": {
            "name": "test_move_red",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove": {
            "name": "test_remove",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_drop": {
            "name": "test_drop",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_drop_double": {
            "name": "test_drop_double",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_is_valid": {
            "name": "test_is_valid",
            "location": 236,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_display_move": {
            "name": "test_display_move",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/tests/spaiji/test_spaiji_display.py": {
        "test_start": {
            "name": "test_start",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_second_move": {
            "name": "test_second_move",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        }
    },
    "shibumi-games-master/tests/spaiji/test_spaiji_game.py": {
        "test_start": {
            "name": "test_start",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_first_move": {
            "name": "test_first_move",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_move2": {
            "name": "test_move2",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_first_moves": {
            "name": "test_valid_first_moves",
            "location": 93,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_second_moves": {
            "name": "test_valid_second_moves",
            "location": 122,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_is_win": {
            "name": "test_is_win",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_index": {
            "name": "test_get_index",
            "location": 176,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_move": {
            "name": "test_display_move",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_active_player": {
            "name": "test_active_player",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_piece_count": {
            "name": "test_piece_count",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_count_group": {
            "name": "test_count_group",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_group_with_covered_pieces": {
            "name": "test_group_with_covered_pieces",
            "location": 261,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_first_move_no_neighbours": {
            "name": "test_first_move_no_neighbours",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_early_end": {
            "name": "test_early_end",
            "location": 312,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/tests/spargo/test_spargo_display.py": {
        "test_empty": {
            "name": "test_empty",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_update": {
            "name": "test_update",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        }
    },
    "shibumi-games-master/tests/spargo/test_spargo_game.py": {
        "test_basic_move": {
            "name": "test_basic_move",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_capture": {
            "name": "test_capture",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_capture_in_top_right": {
            "name": "test_capture_in_top_right",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_connected_to_freedom": {
            "name": "test_connected_to_freedom",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_capture_group": {
            "name": "test_capture_group",
            "location": 128,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_climb_to_freedom": {
            "name": "test_climb_to_freedom",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_capture_up": {
            "name": "test_capture_up",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_zombie": {
            "name": "test_zombie",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_suicide_invalid": {
            "name": "test_suicide_invalid",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_winner": {
            "name": "test_winner",
            "location": 309,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_draw": {
            "name": "test_draw",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_blocked_player_wins": {
            "name": "test_blocked_player_wins",
            "location": 361,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ko_rule": {
            "name": "test_ko_rule",
            "location": 393,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_overpass": {
            "name": "test_overpass",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_overpass_at_edge": {
            "name": "test_overpass_at_edge",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_count_new_piece_in_overpass": {
            "name": "test_count_new_piece_in_overpass",
            "location": 535,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_piece_count_tiny_board": {
            "name": "test_piece_count_tiny_board",
            "location": 582,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_covered_piece_not_connected": {
            "name": "test_covered_piece_not_connected",
            "location": 599,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/tests/spire/test_spire_state.py": {
        "test_start": {
            "name": "test_start",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_lower_rows": {
            "name": "test_lower_rows",
            "location": 41,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_upper_rows": {
            "name": "test_upper_rows",
            "location": 64,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_higher_level": {
            "name": "test_higher_level",
            "location": 88,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_no_red": {
            "name": "test_no_red",
            "location": 115,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_winner": {
            "name": "test_winner",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_move_black": {
            "name": "test_move_black",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_move_red": {
            "name": "test_move_red",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_colours": {
            "name": "test_valid_colours",
            "location": 203,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_colours_no_red": {
            "name": "test_valid_colours_no_red",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_index": {
            "name": "test_get_index",
            "location": 232,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_coordinates": {
            "name": "test_get_coordinates",
            "location": 253,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_move": {
            "name": "test_display_move",
            "location": 263,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/tests/spline/test_spline_display.py": {
        "trigger_resize": {
            "name": "trigger_resize",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "view": [],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ]
            }
        },
        "add_text": {
            "name": "add_text",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "scene": [],
                "text": [
                    "str"
                ],
                "x": [
                    "int"
                ],
                "y": [
                    "int"
                ],
                "font_size": [
                    "int"
                ]
            }
        },
        "test_empty": {
            "name": "test_empty",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_first_level": {
            "name": "test_first_level",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_second_level": {
            "name": "test_second_level",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_resize_wide": {
            "name": "test_resize_wide",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_resize_narrow": {
            "name": "test_resize_narrow",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_hover_enter": {
            "name": "test_hover_enter",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_click": {
            "name": "test_click",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_hover_leave": {
            "name": "test_hover_leave",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_hover_leave_existing": {
            "name": "test_hover_leave_existing",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_double_update": {
            "name": "test_double_update",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        },
        "test_coordinates": {
            "name": "test_coordinates",
            "location": 383,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        }
    },
    "shibumi-games-master/tests/spline/test_spline_game.py": {
        "test_start_display": {
            "name": "test_start_display",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_start_valid_moves": {
            "name": "test_start_valid_moves",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_stone_display": {
            "name": "test_add_stone_display",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_stone_lower_case": {
            "name": "test_add_stone_lower_case",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_text": {
            "name": "test_init_text",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_text_second_level": {
            "name": "test_init_text_second_level",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_text_partial": {
            "name": "test_init_text_partial",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_text_bad": {
            "name": "test_init_text_bad",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_stone_second_level": {
            "name": "test_add_stone_second_level",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_stone_third_level": {
            "name": "test_add_stone_third_level",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_stone_occupied_row": {
            "name": "test_add_stone_occupied_row",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_stone_bad_column": {
            "name": "test_add_stone_bad_column",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_stone_bad_row": {
            "name": "test_add_stone_bad_row",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_full_spaces_valid_moves": {
            "name": "test_full_spaces_valid_moves",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_second_level_valid_moves": {
            "name": "test_second_level_valid_moves",
            "location": 323,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_win_row": {
            "name": "test_win_row",
            "location": 346,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_win_column": {
            "name": "test_win_column",
            "location": 365,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_win_column_level_2": {
            "name": "test_win_column_level_2",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_win_diagonal": {
            "name": "test_win_diagonal",
            "location": 410,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_moves_after_win": {
            "name": "test_valid_moves_after_win",
            "location": 429,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_levels": {
            "name": "test_get_levels",
            "location": 448,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_move": {
            "name": "test_display_move",
            "location": 495,
            "return": [],
            "arguments": {
                "move_index": [],
                "expected_display": []
            }
        },
        "test_get_move_count": {
            "name": "test_get_move_count",
            "location": 520,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/tests/sploof/test_sploof_state.py": {
        "test_start": {
            "name": "test_start",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_moves": {
            "name": "test_valid_moves",
            "location": 44,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_empty_stock": {
            "name": "test_empty_stock",
            "location": 81,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_add_move": {
            "name": "test_add_move",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove": {
            "name": "test_remove",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_index": {
            "name": "test_get_index",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_move": {
            "name": "test_display_move",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_piece_count": {
            "name": "test_piece_count",
            "location": 229,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_valid_moves": {
            "name": "test_no_valid_moves",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_base_row": {
            "name": "test_base_row",
            "location": 271,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_base_column": {
            "name": "test_base_column",
            "location": 295,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cutoff_row": {
            "name": "test_cutoff_row",
            "location": 319,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cutoff_column": {
            "name": "test_cutoff_column",
            "location": 343,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_diagonal_win": {
            "name": "test_diagonal_win",
            "location": 367,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_let_opponent_win": {
            "name": "test_let_opponent_win",
            "location": 391,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "shibumi-games-master/tests/spook/test_spook_display.py": {
        "test_hover_enter_remove": {
            "name": "test_hover_enter_remove",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "pixmap_differ": []
            }
        }
    },
    "shibumi-games-master/tests/spook/test_spook_state.py": {
        "test_start": {
            "name": "test_start",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_move": {
            "name": "test_add_move",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_add_last_piece": {
            "name": "test_add_last_piece",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_drop": {
            "name": "test_remove_drop",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_only_neighbour": {
            "name": "test_remove_only_neighbour",
            "location": 179,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_first_neighbour": {
            "name": "test_remove_first_neighbour",
            "location": 239,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_only_free_neighbour": {
            "name": "test_remove_only_free_neighbour",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_move_ghost": {
            "name": "test_move_ghost",
            "location": 349,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_move_ghost_one_space": {
            "name": "test_move_ghost_one_space",
            "location": 384,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_opponent_piece": {
            "name": "test_remove_opponent_piece",
            "location": 433,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_opponent_piece_with_free_neighbour": {
            "name": "test_remove_opponent_piece_with_free_neighbour",
            "location": 482,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_pass": {
            "name": "test_pass",
            "location": 531,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_getaway_move_count": {
            "name": "test_getaway_move_count",
            "location": 566,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_valid_adds": {
            "name": "test_valid_adds",
            "location": 602,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_removes": {
            "name": "test_valid_removes",
            "location": 633,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_removes_any_colour": {
            "name": "test_valid_removes_any_colour",
            "location": 677,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_removes_black": {
            "name": "test_valid_removes_black",
            "location": 719,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_remove_only_free": {
            "name": "test_valid_remove_only_free",
            "location": 756,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_ghost": {
            "name": "test_valid_ghost",
            "location": 799,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_none_free": {
            "name": "test_valid_none_free",
            "location": 832,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_valid_drop_only": {
            "name": "test_valid_drop_only",
            "location": 868,
            "return": [],
            "arguments": {
                "start": [],
                "end": [],
                "expected_valid": [],
                "reason": []
            }
        },
        "test_win": {
            "name": "test_win",
            "location": 897,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_pass": {
            "name": "test_display_pass",
            "location": 917,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_display_move": {
            "name": "test_display_move",
            "location": 925,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "signalworks-master/setup.py": {},
    "signalworks-master/docs/conf.py": {},
    "signalworks-master/signalworks/dsp.py": {
        "segment": {
            "name": "segment",
            "location": 70,
            "return": [],
            "arguments": {
                "x": [],
                "nsize": [],
                "nrate": []
            }
        },
        "frame": {
            "name": "frame",
            "location": 84,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_size": [],
                "frame_rate": []
            }
        },
        "frame_centered": {
            "name": "frame_centered",
            "location": 110,
            "return": [],
            "arguments": {
                "signal": [],
                "time": [],
                "frame_size": []
            }
        },
        "ola": {
            "name": "ola",
            "location": 144,
            "return": [],
            "arguments": {
                "frame": [],
                "fs": [],
                "duration": [],
                "frame_size": [],
                "frame_rate": []
            }
        },
        "spectral_subtract": {
            "name": "spectral_subtract",
            "location": 157,
            "return": [],
            "arguments": {
                "inp": [],
                "frame_rate": [],
                "silence_percentage": []
            }
        },
        "spectrogram": {
            "name": "spectrogram",
            "location": 177,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_size": [],
                "frame_rate": [],
                "window": [],
                "NFFT": [],
                "normalized": []
            }
        },
        "spectrogram_centered": {
            "name": "spectrogram_centered",
            "location": 202,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_period": [],
                "time": [],
                "window": [],
                "NFFT": [],
                "normalize_signal": [],
                "normalize_output": [],
                "pre_emphasis": [],
                "channel": [],
                "channel_aggregate": []
            }
        },
        "correlate_fft": {
            "name": "correlate_fft",
            "location": 306,
            "return": [],
            "arguments": {
                "X": []
            }
        },
        "correlogram": {
            "name": "correlogram",
            "location": 319,
            "return": [],
            "arguments": {
                "wav": [],
                "frame_size": [],
                "frame_rate": [],
                "normalize": []
            }
        },
        "nextpow2": {
            "name": "nextpow2",
            "location": 344,
            "return": [],
            "arguments": {
                "i": []
            }
        }
    },
    "signalworks-master/signalworks/signalworks.py": {},
    "signalworks-master/signalworks/viterbi.py": {
        "search_smooth": {
            "name": "search_smooth",
            "location": 10,
            "return": [],
            "arguments": {
                "ftr": [],
                "smooth": []
            }
        }
    },
    "signalworks-master/signalworks/__init__.py": {},
    "signalworks-master/signalworks/processors/activity_detector.py": {
        "ActivityDetector.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ActivityDetector.process": {
            "name": "process",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/convert.py": {
        "ConverterToFloat64.process": {
            "name": "process",
            "location": 16,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        },
        "ConverterToInt16.process": {
            "name": "process",
            "location": 34,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/energy_estimator.py": {
        "EnergyEstimator.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EnergyEstimator.process": {
            "name": "process",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/f0_analyzer.py": {
        "F0Analyzer.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "F0Analyzer.set_parameters": {
            "name": "set_parameters",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "parameter": []
            }
        },
        "F0Analyzer.process": {
            "name": "process",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/filter.py": {
        "Filter.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Filter.process": {
            "name": "process",
            "location": 21,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        },
        "ZeroPhaseFilter.process": {
            "name": "process",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/noise_reducer.py": {
        "NoiseReducer.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "NoiseReducer.process": {
            "name": "process",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/peak_tracker.py": {
        "PeakTracker.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PeakTracker.get_parameters": {
            "name": "get_parameters",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PeakTracker.set_parameters": {
            "name": "set_parameters",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "parameter": []
            }
        },
        "PeakTracker.process": {
            "name": "process",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        },
        "PeakTrackerActiveOnly.process": {
            "name": "process",
            "location": 84,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/processing.py": {
        "get_processor_classes": {
            "name": "get_processor_classes",
            "location": 86,
            "return": [],
            "arguments": {}
        },
        "DefaultProgressTracker.update": {
            "name": "update",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Processor.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.set_data": {
            "name": "set_data",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Processor.get_parameters": {
            "name": "get_parameters",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Processor.set_parameters": {
            "name": "set_parameters",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "parameters": []
            }
        },
        "Processor.process": {
            "name": "process",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        },
        "Processor.del_data": {
            "name": "del_data",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "get_processor_classes.all_subclasses": {
            "name": "all_subclasses",
            "location": 87,
            "return": [],
            "arguments": {
                "c": []
            }
        }
    },
    "signalworks-master/signalworks/processors/spectral_discontinutiy_estimator.py": {
        "SpectralDiscontinuityEstimator.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpectralDiscontinuityEstimator.process": {
            "name": "process",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "progressTracker": []
            }
        }
    },
    "signalworks-master/signalworks/processors/__init__.py": {},
    "signalworks-master/signalworks/tracking/error.py": {},
    "signalworks-master/signalworks/tracking/event.py": {
        "Event.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "Event.get_time": {
            "name": "get_time",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.set_time": {
            "name": "set_time",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Event.get_value": {
            "name": "get_value",
            "location": 54,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.set_value": {
            "name": "set_value",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Event.get_duration": {
            "name": "get_duration",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.set_duration": {
            "name": "set_duration",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Event.get_fs": {
            "name": "get_fs",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.set_fs": {
            "name": "set_fs",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "Event.__len__": {
            "name": "__len__",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.__str__": {
            "name": "__str__",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.__add__": {
            "name": "__add__",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Event.__eq__": {
            "name": "__eq__",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Event.__ne__": {
            "name": "__ne__",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Event.crossfade": {
            "name": "crossfade",
            "location": 107,
            "return": [],
            "arguments": {
                "self": [],
                "event": [],
                "length": []
            }
        },
        "Event.resample": {
            "name": "resample",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Event.select": {
            "name": "select",
            "location": 151,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Event.read": {
            "name": "read",
            "location": 163,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "duration": []
            }
        },
        "Event.read_pml": {
            "name": "read_pml",
            "location": 182,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": []
            }
        },
        "Event.read_pm": {
            "name": "read_pm",
            "location": 206,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "_duration": []
            }
        },
        "Event.write": {
            "name": "write",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Event.write_pml": {
            "name": "write_pml",
            "location": 239,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Event.get": {
            "name": "get",
            "location": 255,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Event.draw_pg": {
            "name": "draw_pg",
            "location": 258,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Event.time_warp": {
            "name": "time_warp",
            "location": 261,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "Y": []
            }
        },
        "Event.insert": {
            "name": "insert",
            "location": 279,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "t": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/label.py": {
        "Label.check": {
            "name": "check",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "Label.get_time": {
            "name": "get_time",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.set_time": {
            "name": "set_time",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Label.get_value": {
            "name": "get_value",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.set_value": {
            "name": "set_value",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Label.get_duration": {
            "name": "get_duration",
            "location": 80,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.set_duration": {
            "name": "set_duration",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Label.get_fs": {
            "name": "get_fs",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.set_fs": {
            "name": "set_fs",
            "location": 94,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "Label.__str__": {
            "name": "__str__",
            "location": 99,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.__add__": {
            "name": "__add__",
            "location": 118,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Label.__eq__": {
            "name": "__eq__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Label.__ne__": {
            "name": "__ne__",
            "location": 142,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Label.__len__": {
            "name": "__len__",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Label.resample": {
            "name": "resample",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Label.select": {
            "name": "select",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Label.read_lbl": {
            "name": "read_lbl",
            "location": 187,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "fs": [],
                "encoding": []
            }
        },
        "Label.read": {
            "name": "read",
            "location": 233,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/metatrack.py": {
        "MetaTrack.get_duration": {
            "name": "get_duration",
            "location": 6,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetaTrack.__len__": {
            "name": "__len__",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MetaTrack.__str__": {
            "name": "__str__",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/multitrack.py": {
        "MultiTrack.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "mapping": []
            }
        },
        "MultiTrack.check": {
            "name": "check",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiTrack.get_fs": {
            "name": "get_fs",
            "location": 33,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiTrack.set_fs": {
            "name": "set_fs",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "MultiTrack.get_duration": {
            "name": "get_duration",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiTrack.set_duration": {
            "name": "set_duration",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "MultiTrack.__eq__": {
            "name": "__eq__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MultiTrack.__ne__": {
            "name": "__ne__",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MultiTrack.__setitem__": {
            "name": "__setitem__",
            "location": 71,
            "return": [],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "MultiTrack.__str__": {
            "name": "__str__",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MultiTrack.__add__": {
            "name": "__add__",
            "location": 85,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "MultiTrack.resample": {
            "name": "resample",
            "location": 93,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "MultiTrack.crossfade": {
            "name": "crossfade",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "other": [],
                "length": []
            }
        },
        "MultiTrack.select": {
            "name": "select",
            "location": 115,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": [],
                "keys": []
            }
        },
        "MultiTrack.scale_duration": {
            "name": "scale_duration",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "factor": []
            }
        },
        "MultiTrack.time_warp": {
            "name": "time_warp",
            "location": 145,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "MultiTrack.read": {
            "name": "read",
            "location": 153,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "MultiTrack.read_edf": {
            "name": "read_edf",
            "location": 173,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "MultiTrack.read_xdf": {
            "name": "read_xdf",
            "location": 192,
            "return": [],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "MultiTrack.write": {
            "name": "write",
            "location": 211,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/partition.py": {
        "Partition.check": {
            "name": "check",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": [],
                "fs": [],
                "path": []
            }
        },
        "Partition.get_time": {
            "name": "get_time",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.set_time": {
            "name": "set_time",
            "location": 60,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Partition.get_value": {
            "name": "get_value",
            "location": 79,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.set_value": {
            "name": "set_value",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Partition.get_duration": {
            "name": "get_duration",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.set_duration": {
            "name": "set_duration",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Partition.get_fs": {
            "name": "get_fs",
            "location": 113,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.set_fs": {
            "name": "set_fs",
            "location": 116,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "Partition.__eq__": {
            "name": "__eq__",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Partition.__ne__": {
            "name": "__ne__",
            "location": 135,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Partition.__len__": {
            "name": "__len__",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.resample": {
            "name": "resample",
            "location": 149,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Partition.select": {
            "name": "select",
            "location": 164,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Partition.read": {
            "name": "read",
            "location": 188,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "track_name": []
            }
        },
        "Partition.create": {
            "name": "create",
            "location": 217,
            "return": [],
            "arguments": {
                "cls": [],
                "data": [],
                "fs": []
            }
        },
        "Partition.read_lab": {
            "name": "read_lab",
            "location": 260,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "encoding": []
            }
        },
        "Partition.read_partition": {
            "name": "read_partition",
            "location": 284,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "encoding": []
            }
        },
        "Partition.write": {
            "name": "write",
            "location": 344,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Partition.write_lab": {
            "name": "write_lab",
            "location": 352,
            "return": [],
            "arguments": {
                "self": [],
                "file": []
            }
        },
        "Partition.write_partition": {
            "name": "write_partition",
            "location": 363,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Partition.from_TimeValue": {
            "name": "from_TimeValue",
            "location": 373,
            "return": [],
            "arguments": {
                "cls": [],
                "tv": []
            }
        },
        "Partition.from_Label": {
            "name": "from_Label",
            "location": 395,
            "return": [],
            "arguments": {
                "cls": [],
                "lab": [],
                "empty": []
            }
        },
        "Partition.__getitem__": {
            "name": "__getitem__",
            "location": 435,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.__setitem__": {
            "name": "__setitem__",
            "location": 438,
            "return": [],
            "arguments": {
                "self": [],
                "index": [],
                "value": []
            }
        },
        "Partition.__str__": {
            "name": "__str__",
            "location": 441,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.__add__": {
            "name": "__add__",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Partition.crossfade": {
            "name": "crossfade",
            "location": 467,
            "return": [],
            "arguments": {
                "self": [],
                "partition": [],
                "length": []
            }
        },
        "Partition.get": {
            "name": "get",
            "location": 482,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "Partition.append": {
            "name": "append",
            "location": 489,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": []
            }
        },
        "Partition.insert": {
            "name": "insert",
            "location": 497,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": []
            }
        },
        "Partition.delete_merge_left": {
            "name": "delete_merge_left",
            "location": 507,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.delete_merge_right": {
            "name": "delete_merge_right",
            "location": 516,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Partition.merge_same": {
            "name": "merge_same",
            "location": 523,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Partition.time_warp": {
            "name": "time_warp",
            "location": 537,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "Y": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/timevalue.py": {
        "TimeValue.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [],
            "arguments": {
                "self": [],
                "time": [],
                "value": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "TimeValue.get_time": {
            "name": "get_time",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.set_time": {
            "name": "set_time",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "TimeValue.get_value": {
            "name": "get_value",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.set_value": {
            "name": "set_value",
            "location": 63,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "TimeValue.get_duration": {
            "name": "get_duration",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.set_duration": {
            "name": "set_duration",
            "location": 73,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "TimeValue.get_fs": {
            "name": "get_fs",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.set_fs": {
            "name": "set_fs",
            "location": 87,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "TimeValue.__eq__": {
            "name": "__eq__",
            "location": 92,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TimeValue.__ne__": {
            "name": "__ne__",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TimeValue.__len__": {
            "name": "__len__",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.__str__": {
            "name": "__str__",
            "location": 110,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimeValue.__add__": {
            "name": "__add__",
            "location": 113,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "TimeValue.resample": {
            "name": "resample",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "TimeValue.select": {
            "name": "select",
            "location": 144,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "TimeValue.read": {
            "name": "read",
            "location": 158,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "track_name": [],
                "fs": [],
                "duration": []
            }
        },
        "TimeValue.read_tmv": {
            "name": "read_tmv",
            "location": 230,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": []
            }
        },
        "TimeValue.read_frm": {
            "name": "read_frm",
            "location": 239,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": []
            }
        },
        "TimeValue.write": {
            "name": "write",
            "location": 257,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "track_name": []
            }
        },
        "TimeValue.write_f0": {
            "name": "write_f0",
            "location": 265,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "frameRate": [],
                "frameSize": [],
                "fs": []
            }
        },
        "TimeValue.write_tmv": {
            "name": "write_tmv",
            "location": 268,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TimeValue.write_frm": {
            "name": "write_frm",
            "location": 275,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "TimeValue.from_Partition": {
            "name": "from_Partition",
            "location": 284,
            "return": [],
            "arguments": {
                "cls": [],
                "p": []
            }
        },
        "TimeValue.get_index": {
            "name": "get_index",
            "location": 301,
            "return": [],
            "arguments": {
                "self": [],
                "t": []
            }
        },
        "TimeValue._get_value": {
            "name": "_get_value",
            "location": 319,
            "return": [],
            "arguments": {
                "self": [],
                "t": [],
                "interpolation": []
            }
        },
        "TimeValue.get": {
            "name": "get",
            "location": 348,
            "return": [],
            "arguments": {
                "self": [],
                "T": [],
                "interpolation": []
            }
        },
        "TimeValue.interp_linear": {
            "name": "interp_linear",
            "location": 365,
            "return": [],
            "arguments": {
                "self": [],
                "T": []
            }
        },
        "TimeValue.interp_nearest": {
            "name": "interp_nearest",
            "location": 369,
            "return": [],
            "arguments": {
                "self": [],
                "T": []
            }
        },
        "TimeValue.interpolate": {
            "name": "interpolate",
            "location": 374,
            "return": [],
            "arguments": {
                "self": [],
                "T": [],
                "kind": []
            }
        },
        "TimeValue.time_warp": {
            "name": "time_warp",
            "location": 441,
            "return": [],
            "arguments": {
                "self": [],
                "X": [],
                "Y": []
            }
        },
        "TimeValue.interp": {
            "name": "interp",
            "location": 457,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/tracking.py": {
        "convert_dtype": {
            "name": "convert_dtype",
            "location": 29,
            "return": [],
            "arguments": {
                "source": [],
                "target_dtype": []
            }
        },
        "get_track_classes": {
            "name": "get_track_classes",
            "location": 206,
            "return": [],
            "arguments": {}
        },
        "Track.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "Track.get_time": {
            "name": "get_time",
            "location": 93,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_time": {
            "name": "set_time",
            "location": 96,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Track.get_value": {
            "name": "get_value",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_value": {
            "name": "set_value",
            "location": 104,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Track.get_fs": {
            "name": "get_fs",
            "location": 109,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_fs": {
            "name": "set_fs",
            "location": 112,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "Track.get_duration": {
            "name": "get_duration",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.set_duration": {
            "name": "set_duration",
            "location": 120,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Track.__eq__": {
            "name": "__eq__",
            "location": 125,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Track.__ne__": {
            "name": "__ne__",
            "location": 128,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Track.__len__": {
            "name": "__len__",
            "location": 131,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.__str__": {
            "name": "__str__",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Track.__add__": {
            "name": "__add__",
            "location": 137,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Track.read": {
            "name": "read",
            "location": 141,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "samplerate": []
            }
        },
        "Track.write": {
            "name": "write",
            "location": 176,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Track.resample": {
            "name": "resample",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Track.select": {
            "name": "select",
            "location": 184,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Track.insert": {
            "name": "insert",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "t": []
            }
        },
        "Track.remove": {
            "name": "remove",
            "location": 194,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Track.copy": {
            "name": "copy",
            "location": 197,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Track.cut": {
            "name": "cut",
            "location": 200,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "get_track_classes.all_subclasses": {
            "name": "all_subclasses",
            "location": 207,
            "return": [],
            "arguments": {
                "c": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/value.py": {
        "Value.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "fs": [],
                "duration": [],
                "path": []
            }
        },
        "Value.__getitem__": {
            "name": "__getitem__",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "k": []
            }
        },
        "Value.__setitem__": {
            "name": "__setitem__",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "k": [],
                "v": []
            }
        },
        "Value.__eq__": {
            "name": "__eq__",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Value.__ne__": {
            "name": "__ne__",
            "location": 43,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Value.__len__": {
            "name": "__len__",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.__str__": {
            "name": "__str__",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.get_duration": {
            "name": "get_duration",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.set_duration": {
            "name": "set_duration",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Value.get_fs": {
            "name": "get_fs",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.set_fs": {
            "name": "set_fs",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "Value.get_value": {
            "name": "get_value",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Value.set_value": {
            "name": "set_value",
            "location": 72,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Value.select": {
            "name": "select",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Value.time_warp": {
            "name": "time_warp",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "_x": [],
                "y": []
            }
        },
        "Value.identify_ext": {
            "name": "identify_ext",
            "location": 84,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "track_name": []
            }
        },
        "Value.read": {
            "name": "read",
            "location": 103,
            "return": [],
            "arguments": {
                "cls": [],
                "name": [],
                "fs": [],
                "duration": [],
                "track_name": []
            }
        },
        "Value.write": {
            "name": "write",
            "location": 121,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "track_name": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/wave.py": {
        "Wave.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "value": [],
                "fs": [],
                "duration": [],
                "offset": [],
                "path": []
            }
        },
        "Wave.get_offset": {
            "name": "get_offset",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_offset": {
            "name": "set_offset",
            "location": 89,
            "return": [],
            "arguments": {
                "self": [],
                "offset": []
            }
        },
        "Wave.get_time": {
            "name": "get_time",
            "location": 95,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_time": {
            "name": "set_time",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "time": []
            }
        },
        "Wave.get_value": {
            "name": "get_value",
            "location": 107,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_value": {
            "name": "set_value",
            "location": 110,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Wave.get_fs": {
            "name": "get_fs",
            "location": 119,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_fs": {
            "name": "set_fs",
            "location": 122,
            "return": [],
            "arguments": {
                "self": [],
                "_value": []
            }
        },
        "Wave.get_duration": {
            "name": "get_duration",
            "location": 127,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.set_duration": {
            "name": "set_duration",
            "location": 130,
            "return": [],
            "arguments": {
                "self": [],
                "duration": []
            }
        },
        "Wave.get_dtype": {
            "name": "get_dtype",
            "location": 147,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.get_bitdepth": {
            "name": "get_bitdepth",
            "location": 154,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.__eq__": {
            "name": "__eq__",
            "location": 159,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Wave.__ne__": {
            "name": "__ne__",
            "location": 170,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Wave.__str__": {
            "name": "__str__",
            "location": 173,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.__repr__": {
            "name": "__repr__",
            "location": 185,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.__len__": {
            "name": "__len__",
            "location": 188,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Wave.__add__": {
            "name": "__add__",
            "location": 191,
            "return": [],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Wave.resample": {
            "name": "resample",
            "location": 198,
            "return": [],
            "arguments": {
                "self": [],
                "fs": []
            }
        },
        "Wave._convert_dtype": {
            "name": "_convert_dtype",
            "location": 204,
            "return": [],
            "arguments": {
                "self": [],
                "source": [],
                "target_dtype": []
            }
        },
        "Wave.convert_dtype": {
            "name": "convert_dtype",
            "location": 253,
            "return": [],
            "arguments": {
                "self": [],
                "target_dtype": []
            }
        },
        "Wave.select": {
            "name": "select",
            "location": 260,
            "return": [],
            "arguments": {
                "self": [],
                "a": [],
                "b": []
            }
        },
        "Wave.read": {
            "name": "read",
            "location": 268,
            "return": [],
            "arguments": {
                "cls": [],
                "name": []
            }
        },
        "Wave.read_wav": {
            "name": "read_wav",
            "location": 276,
            "return": [],
            "arguments": {
                "cls": [],
                "path": [],
                "channel": [],
                "mmap": []
            }
        },
        "Wave.write": {
            "name": "write",
            "location": 314,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Wave.write_wav": {
            "name": "write_wav",
            "location": 321,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Wave.__getitem__": {
            "name": "__getitem__",
            "location": 328,
            "return": [],
            "arguments": {
                "self": [],
                "index": []
            }
        },
        "Wave.crossfade": {
            "name": "crossfade",
            "location": 368,
            "return": [],
            "arguments": {
                "self": [],
                "wave": [],
                "length": []
            }
        },
        "Wave.time_warp": {
            "name": "time_warp",
            "location": 388,
            "return": [],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        }
    },
    "signalworks-master/signalworks/tracking/__init__.py": {
        "load_audio": {
            "name": "load_audio",
            "location": 25,
            "return": [],
            "arguments": {
                "path": [],
                "channel": [],
                "mmap": [],
                "channel_names": []
            }
        }
    },
    "signalworks-master/tests/conftest.py": {
        "has_gitlfs": {
            "name": "has_gitlfs",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "is_gitlfs_pointer": {
            "name": "is_gitlfs_pointer",
            "location": 14,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "speech_track": {
            "name": "speech_track",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "signalworks-master/tests/test_event.py": {
        "var": {
            "name": "var",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_init": {
            "name": "test_init",
            "location": 16,
            "return": [],
            "arguments": {}
        },
        "test_duration": {
            "name": "test_duration",
            "location": 23,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_eq": {
            "name": "test_eq",
            "location": 30,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_add": {
            "name": "test_add",
            "location": 36,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_select": {
            "name": "test_select",
            "location": 44,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_resample": {
            "name": "test_resample",
            "location": 56,
            "return": [],
            "arguments": {
                "benchmark": []
            }
        },
        "test_crossfade": {
            "name": "test_crossfade",
            "location": 63,
            "return": [],
            "arguments": {
                "benchmark": []
            }
        }
    },
    "signalworks-master/tests/test_label.py": {
        "var": {
            "name": "var",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_eq": {
            "name": "test_eq",
            "location": 22,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_add": {
            "name": "test_add",
            "location": 28,
            "return": [],
            "arguments": {
                "var": []
            }
        }
    },
    "signalworks-master/tests/test_load_audio.py": {
        "has_gitlfs": {
            "name": "has_gitlfs",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "is_gitlfs_pointer": {
            "name": "is_gitlfs_pointer",
            "location": 15,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "test_load_wav": {
            "name": "test_load_wav",
            "location": 25,
            "return": [],
            "arguments": {}
        },
        "test_load_au": {
            "name": "test_load_au",
            "location": 37,
            "return": [],
            "arguments": {}
        },
        "test_load_TIMIT": {
            "name": "test_load_TIMIT",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "test_load_nis": {
            "name": "test_load_nis",
            "location": 67,
            "return": [],
            "arguments": {}
        },
        "test_2channels": {
            "name": "test_2channels",
            "location": 82,
            "return": [],
            "arguments": {}
        },
        "test_load_wa1": {
            "name": "test_load_wa1",
            "location": 100,
            "return": [],
            "arguments": {}
        },
        "test_load_wa2": {
            "name": "test_load_wa2",
            "location": 115,
            "return": [],
            "arguments": {}
        },
        "test_load_wv1": {
            "name": "test_load_wv1",
            "location": 131,
            "return": [],
            "arguments": {}
        },
        "test_load_wv2": {
            "name": "test_load_wv2",
            "location": 147,
            "return": [],
            "arguments": {}
        }
    },
    "signalworks-master/tests/test_multitrack.py": {
        "var": {
            "name": "var",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_select": {
            "name": "test_select",
            "location": 20,
            "return": [],
            "arguments": {
                "var": [],
                "benchmark": []
            }
        },
        "test_crossfade": {
            "name": "test_crossfade",
            "location": 33,
            "return": [],
            "arguments": {
                "var": [],
                "benchmark": []
            }
        }
    },
    "signalworks-master/tests/test_partition.py": {
        "var": {
            "name": "var",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_insert": {
            "name": "test_insert",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "test_eq": {
            "name": "test_eq",
            "location": 27,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_add": {
            "name": "test_add",
            "location": 33,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_select": {
            "name": "test_select",
            "location": 46,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_from_TimeValue": {
            "name": "test_from_TimeValue",
            "location": 64,
            "return": [],
            "arguments": {
                "benchmark": []
            }
        },
        "test_merge_same": {
            "name": "test_merge_same",
            "location": 76,
            "return": [],
            "arguments": {
                "benchmark": []
            }
        },
        "test_crossfade": {
            "name": "test_crossfade",
            "location": 82,
            "return": [],
            "arguments": {
                "benchmark": []
            }
        }
    },
    "signalworks-master/tests/test_processor.py": {
        "test_filter": {
            "name": "test_filter",
            "location": 17,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        },
        "test_zerofilter": {
            "name": "test_zerofilter",
            "location": 29,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        },
        "test_f0": {
            "name": "test_f0",
            "location": 41,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        },
        "test_convert": {
            "name": "test_convert",
            "location": 51,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        },
        "test_energy": {
            "name": "test_energy",
            "location": 61,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        },
        "test_peaktrack": {
            "name": "test_peaktrack",
            "location": 71,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        },
        "test_noisereducer": {
            "name": "test_noisereducer",
            "location": 81,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        }
    },
    "signalworks-master/tests/test_timevalue.py": {
        "var": {
            "name": "var",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_init": {
            "name": "test_init",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_eq": {
            "name": "test_eq",
            "location": 33,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_add": {
            "name": "test_add",
            "location": 39,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_select": {
            "name": "test_select",
            "location": 52,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_duration": {
            "name": "test_duration",
            "location": 68,
            "return": [],
            "arguments": {
                "var": []
            }
        }
    },
    "signalworks-master/tests/test_tracking.py": {
        "test_spectrogram": {
            "name": "test_spectrogram",
            "location": 9,
            "return": [],
            "arguments": {
                "speech_track": [],
                "benchmark": []
            }
        }
    },
    "signalworks-master/tests/test_wave.py": {
        "var": {
            "name": "var",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_add": {
            "name": "test_add",
            "location": 17,
            "return": [],
            "arguments": {
                "var": []
            }
        },
        "test_select": {
            "name": "test_select",
            "location": 27,
            "return": [],
            "arguments": {
                "var": [],
                "benchmark": []
            }
        },
        "test_resample": {
            "name": "test_resample",
            "location": 33,
            "return": [],
            "arguments": {
                "benchmark": []
            }
        },
        "test_crossfade": {
            "name": "test_crossfade",
            "location": 39,
            "return": [],
            "arguments": {
                "benchmark": []
            }
        }
    }
}
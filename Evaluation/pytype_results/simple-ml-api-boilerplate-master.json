{
    "simple-ml-api-boilerplate-master/server.py": {
        "hello": {
            "name": "hello",
            "location": 9,
            "return": [],
            "arguments": {
                "req": [],
                "resp": []
            }
        }
    },
    "simple-ml-api-boilerplate-master/application/values.py": {},
    "simple-ml-api-boilerplate-master/predictions/task.py": {
        "score": {
            "name": "score",
            "location": 7,
            "return": [
                "float"
            ],
            "arguments": {
                "test_X": [
                    "List[List[float]]"
                ]
            }
        },
        "predict": {
            "name": "predict",
            "location": 11,
            "return": [
                "List[float]"
            ],
            "arguments": {
                "test_X": [
                    "List[List[float]]"
                ]
            }
        },
        "predict_proba": {
            "name": "predict_proba",
            "location": 15,
            "return": [
                "List[List[float]]"
            ],
            "arguments": {
                "test_X": [
                    "List[List[float]]"
                ]
            }
        }
    },
    "simple-ml-api-boilerplate-master/predictions/__init__.py": {},
    "simple-ml-api-boilerplate-master/predictions/models/loader.py": {
        "load_model": {
            "name": "load_model",
            "location": 4,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "simple-ml-api-boilerplate-master/predictions/models/__init__.py": {},
    "simple-ml-api-boilerplate-master/preprocess/config.py": {},
    "simple-ml-api-boilerplate-master/preprocess/task.py": {},
    "simple-ml-api-boilerplate-master/preprocess/__init__.py": {},
    "simple-ml-api-boilerplate-master/trainer/config.py": {},
    "simple-ml-api-boilerplate-master/trainer/task.py": {
        "fit": {
            "name": "fit",
            "location": 11,
            "return": [
                "Tuple[(Any, Any, Any)]"
            ],
            "arguments": {}
        },
        "predict": {
            "name": "predict",
            "location": 25,
            "return": [
                "Any"
            ],
            "arguments": {
                "clf": [],
                "test_X": [
                    "List[List[float]]"
                ],
                "test_y": [
                    "List[List[float]]"
                ]
            }
        },
        "evaluate": {
            "name": "evaluate",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "clf": [],
                "test_y": [
                    "List[List[float]]"
                ],
                "predicted_y": [
                    "List[int]"
                ]
            }
        }
    },
    "simple-ml-api-boilerplate-master/trainer/util.py": {},
    "simple-ml-api-boilerplate-master/trainer/__init__.py": {}
}
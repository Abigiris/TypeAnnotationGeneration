{
    "simplenet-master/docs/conf.py": {},
    "simplenet-master/examples/mnist.py": {
        "get_images_and_labels": {
            "name": "get_images_and_labels",
            "location": 26,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "train_or_test": [],
                "folder": []
            }
        },
        "read_images": {
            "name": "read_images",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "file_name": [],
                "data_folder": []
            }
        },
        "read_labels": {
            "name": "read_labels",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "file_name": [],
                "data_folder": []
            }
        },
        "check_or_download": {
            "name": "check_or_download",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "file_name": [],
                "data_folder": [],
                "url": []
            }
        },
        "main": {
            "name": "main",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "import_progress": [],
                "save_progress": []
            }
        }
    },
    "simplenet-master/src/simplenet/simplenet.py": {
        "sigmoid": {
            "name": "sigmoid",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "arr": [],
                "der": []
            }
        },
        "softmax": {
            "name": "softmax",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "arr": []
            }
        },
        "neg_log_likelihood": {
            "name": "neg_log_likelihood",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "y_hat": [],
                "targets": [],
                "der": []
            }
        },
        "cross_entropy": {
            "name": "cross_entropy",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "y_hat": [],
                "targets": [],
                "der": []
            }
        },
        "relu": {
            "name": "relu",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "arr": [],
                "der": []
            }
        },
        "SimpleNet.__init__": {
            "name": "__init__",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hidden_layer_sizes": [],
                "input_shape": [],
                "output_shape": [],
                "activation_function": [],
                "output_activation": [],
                "loss_function": [],
                "learning_rate": [],
                "dtype": [],
                "seed": []
            }
        },
        "SimpleNet._forward": {
            "name": "_forward",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inputs": []
            }
        },
        "SimpleNet._backprop": {
            "name": "_backprop",
            "location": 199,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inputs": [],
                "targets": []
            }
        },
        "SimpleNet.learn": {
            "name": "learn",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "inputs": [],
                "targets": []
            }
        },
        "SimpleNet.predict": {
            "name": "predict",
            "location": 245,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "inputs": []
            }
        },
        "SimpleNet.validate": {
            "name": "validate",
            "location": 276,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "inputs": [],
                "targets": [],
                "epsilon": []
            }
        },
        "SimpleNet.export_model": {
            "name": "export_model",
            "location": 408,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        },
        "SimpleNet.import_model": {
            "name": "import_model",
            "location": 428,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": []
            }
        }
    },
    "simplenet-master/src/simplenet/__init__.py": {},
    "simplenet-master/tests/keras_against_tf.py": {
        "test_learned_something": {
            "name": "test_learned_something",
            "location": 116,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_weights_and_biases": {
            "name": "test_weights_and_biases",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_err": {
            "name": "test_err",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "simplenet-master/tests/test_against_keras.py": {
        "test_learned_something": {
            "name": "test_learned_something",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_weights_and_biases": {
            "name": "test_weights_and_biases",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_err": {
            "name": "test_err",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "simplenet-master/tests/test_against_tensorflow.py": {
        "test_learned_something": {
            "name": "test_learned_something",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_weights_and_biases": {
            "name": "test_weights_and_biases",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_err": {
            "name": "test_err",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_softmax": {
            "name": "test_softmax",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "simplenet-master/tests/test_simplenet.py": {
        "test_validate_neg_log_likelihood": {
            "name": "test_validate_neg_log_likelihood",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_validate_cross_entropy": {
            "name": "test_validate_cross_entropy",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_import_export": {
            "name": "test_import_export",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
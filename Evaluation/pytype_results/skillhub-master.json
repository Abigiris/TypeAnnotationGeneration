{
    "skillhub-master/services/predictions/gunicorn.conf.py": {},
    "skillhub-master/services/predictions/src/config.py": {},
    "skillhub-master/services/predictions/src/main.py": {
        "create_app": {
            "name": "create_app",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "after_request": {
            "name": "after_request",
            "location": 43,
            "return": [],
            "arguments": {
                "response": []
            }
        },
        "server_error": {
            "name": "server_error",
            "location": 52,
            "return": [],
            "arguments": {
                "exception": []
            }
        }
    },
    "skillhub-master/services/predictions/src/test_dummy.py": {
        "TestDummy.test_dummy": {
            "name": "test_dummy",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "skillhub-master/services/predictions/src/__init__.py": {},
    "skillhub-master/services/predictions/src/controllers/__init__.py": {},
    "skillhub-master/services/predictions/src/controllers/api/api_controller.py": {},
    "skillhub-master/services/predictions/src/controllers/api/__init__.py": {},
    "skillhub-master/services/predictions/src/controllers/api/v1/v1_controller.py": {},
    "skillhub-master/services/predictions/src/controllers/api/v1/__init__.py": {},
    "skillhub-master/services/predictions/src/controllers/api/v1/contributors/contributors_controller.py": {
        "predict_contributors": {
            "name": "predict_contributors",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "invalid_issues": {
            "name": "invalid_issues",
            "location": 38,
            "return": [],
            "arguments": {
                "e": []
            }
        }
    },
    "skillhub-master/services/predictions/src/controllers/api/v1/contributors/__init__.py": {},
    "skillhub-master/services/predictions/src/controllers/api/v1/skills/skills_controller.py": {
        "predict_skills": {
            "name": "predict_skills",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "invalid_raw_stats": {
            "name": "invalid_raw_stats",
            "location": 39,
            "return": [],
            "arguments": {
                "e": []
            }
        }
    },
    "skillhub-master/services/predictions/src/controllers/api/v1/skills/__init__.py": {},
    "skillhub-master/services/predictions/src/data_models/processed_git_data.py": {
        "ProcessedGitData.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_stats": []
            }
        },
        "ProcessedGitData.process_data": {
            "name": "process_data",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "raw_stats": []
            }
        },
        "ProcessedGitData.generate_feature_vectors": {
            "name": "generate_feature_vectors",
            "location": 83,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "skillhub-master/services/predictions/src/data_models/processed_jira_data.py": {
        "filter_high_priority_issues": {
            "name": "filter_high_priority_issues",
            "location": 70,
            "return": [
                "Any"
            ],
            "arguments": {
                "df": []
            }
        },
        "filter_status_change_changelogs": {
            "name": "filter_status_change_changelogs",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "df": [],
                "status": []
            }
        },
        "issue_fields_map": {
            "name": "issue_fields_map",
            "location": 94,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "issue": [],
                "fields": []
            }
        },
        "changelog_fields_map": {
            "name": "changelog_fields_map",
            "location": 117,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "issue": [],
                "fields": [],
                "author": [],
                "change": [],
                "item": []
            }
        },
        "comment_fields_map": {
            "name": "comment_fields_map",
            "location": 142,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "issue": [],
                "fields": [],
                "author": [],
                "comment": []
            }
        },
        "worklog_fields_map": {
            "name": "worklog_fields_map",
            "location": 162,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "issue": [],
                "fields": [],
                "author": [],
                "worklog": []
            }
        },
        "issue_features": {
            "name": "issue_features",
            "location": 182,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "issues": []
            }
        },
        "issue_creator_features": {
            "name": "issue_creator_features",
            "location": 199,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "issues": []
            }
        },
        "changelog_features": {
            "name": "changelog_features",
            "location": 210,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "changelogs": []
            }
        },
        "comment_features": {
            "name": "comment_features",
            "location": 220,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "comments": []
            }
        },
        "worklog_features": {
            "name": "worklog_features",
            "location": 227,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "worklogs": []
            }
        },
        "ProcessedJiraData.__init__": {
            "name": "__init__",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_issues": []
            }
        },
        "ProcessedJiraData.process_data": {
            "name": "process_data",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "raw_issues": []
            }
        },
        "ProcessedJiraData.generate_feature_vectors": {
            "name": "generate_feature_vectors",
            "location": 310,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProcessedJiraData._get_feature_mappings": {
            "name": "_get_feature_mappings",
            "location": 350,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ProcessedJiraData._map_features": {
            "name": "_map_features",
            "location": 385,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": [],
                "groupby": [],
                "features_transform": []
            }
        },
        "ProcessedJiraData._calculate_contribution_ratios": {
            "name": "_calculate_contribution_ratios",
            "location": 404,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "feature_vectors_df": []
            }
        },
        "ProcessedJiraData._format_issue": {
            "name": "_format_issue",
            "location": 427,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "issue": []
            }
        },
        "ProcessedJiraData._format_changelogs": {
            "name": "_format_changelogs",
            "location": 432,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": [],
                "issue": []
            }
        },
        "ProcessedJiraData._format_comments": {
            "name": "_format_comments",
            "location": 449,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": [],
                "issue": []
            }
        },
        "ProcessedJiraData._format_worklogs": {
            "name": "_format_worklogs",
            "location": 464,
            "return": [
                "List[Dict[(str, Any)]]"
            ],
            "arguments": {
                "self": [],
                "issue": []
            }
        },
        "ProcessedJiraData._replace_statuses": {
            "name": "_replace_statuses",
            "location": 479,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "df": [
                    "_T0@@"
                ]
            }
        },
        "ProcessedJiraData._duplicate_issues_for_all_assignees": {
            "name": "_duplicate_issues_for_all_assignees",
            "location": 484,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "issues_df": [],
                "changelogs_df": []
            }
        }
    },
    "skillhub-master/services/predictions/src/middleware/api_key_authentication.py": {
        "api_key_authentication": {
            "name": "api_key_authentication",
            "location": 7,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "api_keys": [],
                "header": []
            }
        },
        "api_key_authentication.wrapper": {
            "name": "wrapper",
            "location": 8,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "api_key_authentication.wrapper.decorated_function": {
            "name": "decorated_function",
            "location": 10,
            "return": [],
            "arguments": {}
        }
    },
    "skillhub-master/services/predictions/src/middleware/__init__.py": {},
    "skillhub-master/services/predictions/src/predictors/contributors_predictor.py": {
        "ContributorsPredictor.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContributorsPredictor.predict": {
            "name": "predict",
            "location": 21,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "raw_issues": []
            }
        }
    },
    "skillhub-master/services/predictions/src/predictors/skills_predictor.py": {
        "SkillsPredictor.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SkillsPredictor.predict": {
            "name": "predict",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "raw_stats": [],
                "existing_emails": []
            }
        },
        "SkillsPredictor._heuristic_model": {
            "name": "_heuristic_model",
            "location": 75,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "feature_vectors": []
            }
        },
        "SkillsPredictor._split_skills": {
            "name": "_split_skills",
            "location": 113,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "self": [],
                "df": []
            }
        },
        "SkillsPredictor._remap_prediction_emails": {
            "name": "_remap_prediction_emails",
            "location": 124,
            "return": [
                "Dict[(Any, list)]"
            ],
            "arguments": {
                "self": [],
                "predictions": [],
                "existing_emails": []
            }
        }
    },
    "skillhub-master/services/predictions/src/predictors/__init__.py": {},
    "skillhub-master/services/predictions/src/training/train_contributors_model.py": {
        "load_dataset": {
            "name": "load_dataset",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "training_data_file": []
            }
        },
        "split_dataset": {
            "name": "split_dataset",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "data_set": []
            }
        },
        "find_best_model_grid_search": {
            "name": "find_best_model_grid_search",
            "location": 77,
            "return": [
                "Any"
            ],
            "arguments": {
                "base_clf": [],
                "grid_params": [],
                "X_train": [],
                "y_train": [],
                "cross_validation_folds": [],
                "scoring_algorithm": []
            }
        },
        "train": {
            "name": "train",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "training_data_hash": []
            }
        }
    },
    "skillhub-master/services/predictions/src/training/training_data/generate_contributors_model_training_data.py": {
        "calc_weight": {
            "name": "calc_weight",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "ratio": [],
                "base_weight": []
            }
        },
        "heuristic_model": {
            "name": "heuristic_model",
            "location": 47,
            "return": [
                "bool"
            ],
            "arguments": {
                "vector": []
            }
        },
        "hash_dataframe": {
            "name": "hash_dataframe",
            "location": 85,
            "return": [
                "str"
            ],
            "arguments": {
                "df": []
            }
        },
        "generate": {
            "name": "generate",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "skillhub-master/services/predictions/src/utils/email_matcher.py": {
        "generate_ngrams": {
            "name": "generate_ngrams",
            "location": 23,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "email": [],
                "n": []
            }
        },
        "EmailMatcher.__init__": {
            "name": "__init__",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EmailMatcher.find_matching_emails": {
            "name": "find_matching_emails",
            "location": 57,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "new_emails": [],
                "base_emails": [],
                "hard_email_mapping": []
            }
        },
        "EmailMatcher._generate_similarities_matrix": {
            "name": "_generate_similarities_matrix",
            "location": 131,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "emails": []
            }
        }
    },
    "skillhub-master/services/predictions/src/utils/LoggingUtils.py": {
        "log_execution_time": {
            "name": "log_execution_time",
            "location": 9,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "log_message": []
            }
        },
        "log_execution_time.decorator": {
            "name": "decorator",
            "location": 22,
            "return": [],
            "arguments": {
                "function_being_decorated": []
            }
        },
        "log_execution_time.decorator.wrapper": {
            "name": "wrapper",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "skillhub-master/services/predictions/src/utils/NestableBlueprint.py": {
        "NestableBlueprint.register_blueprint": {
            "name": "register_blueprint",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "blueprint": []
            }
        },
        "NestableBlueprint.before_first_blueprint_request": {
            "name": "before_first_blueprint_request",
            "location": 34,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "NestableBlueprint.reset_first_request_lock": {
            "name": "reset_first_request_lock",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "NestableBlueprint.register_blueprint.deferred": {
            "name": "deferred",
            "location": 25,
            "return": [],
            "arguments": {
                "state": []
            }
        },
        "NestableBlueprint.before_first_blueprint_request.decorator": {
            "name": "decorator",
            "location": 43,
            "return": [],
            "arguments": {
                "function_being_decorated": []
            }
        },
        "NestableBlueprint.before_first_blueprint_request.decorator.wrapper": {
            "name": "wrapper",
            "location": 45,
            "return": [],
            "arguments": {}
        }
    },
    "skillhub-master/services/predictions/src/utils/__init__.py": {}
}
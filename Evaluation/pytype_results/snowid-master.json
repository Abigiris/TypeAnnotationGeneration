{
    "snowid-master/project/context.py": {},
    "snowid-master/project/font.py": {
        "get_font": {
            "name": "get_font",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "size": []
            }
        },
        "render_font": {
            "name": "render_font",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "font": [],
                "text": [],
                "color": [],
                "bg_color": []
            }
        }
    },
    "snowid-master/project/game.py": {
        "MyGame.get_config": {
            "name": "get_config",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyGame.init_font_manager": {
            "name": "init_font_manager",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyGame.init_heavy": {
            "name": "init_heavy",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyGame.init_scenes": {
            "name": "init_scenes",
            "location": 32,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "snowid-master/project/main.py": {
        "setup": {
            "name": "setup",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 23,
            "return": [],
            "arguments": {}
        }
    },
    "snowid-master/project/shell.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "snowid-master/project/gamepart/context.py": {
        "Context.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [],
            "arguments": {
                "self": [],
                "last_scene": []
            }
        }
    },
    "snowid-master/project/gamepart/control.py": {
        "Controller.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        },
        "Controller.init_input": {
            "name": "init_input",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [
                    "Type[Controller]"
                ]
            }
        },
        "Controller.control": {
            "name": "control",
            "location": 26,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "game_time": [],
                "delta": []
            }
        },
        "Controller.act": {
            "name": "act",
            "location": 31,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "game_time": [],
                "delta": []
            }
        },
        "Controller.setter": {
            "name": "setter",
            "location": 34,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": [],
                "attribute": [],
                "value": []
            }
        },
        "Controller.setter.callback": {
            "name": "callback",
            "location": 35,
            "return": [],
            "arguments": {}
        }
    },
    "snowid-master/project/gamepart/event.py": {
        "UserEventType.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserEventType.emit": {
            "name": "emit",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "code": [],
                "data": []
            }
        },
        "UserEventType.dereference_data": {
            "name": "dereference_data",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "UserEventType.__repr__": {
            "name": "__repr__",
            "location": 39,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.on": {
            "name": "on",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "callback": []
            }
        },
        "Dispatcher.chain": {
            "name": "chain",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "callback": []
            }
        },
        "Dispatcher.get_key": {
            "name": "get_key",
            "location": 63,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "data": [
                    "_T0@@"
                ]
            }
        },
        "Dispatcher.__call__": {
            "name": "__call__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Dispatcher.clear": {
            "name": "clear",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.noop": {
            "name": "noop",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Dispatcher.stop": {
            "name": "stop",
            "location": 80,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventDispatcher.get_key": {
            "name": "get_key",
            "location": 90,
            "return": [
                "Any"
            ],
            "arguments": {
                "event": []
            }
        },
        "KeyEventDispatcher.get_key": {
            "name": "get_key",
            "location": 98,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "event": []
            }
        },
        "KeyEventDispatcher.on_up": {
            "name": "on_up",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "callback": []
            }
        },
        "KeyEventDispatcher.on_down": {
            "name": "on_down",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "callback": []
            }
        },
        "MouseEventDispatcher.get_key": {
            "name": "get_key",
            "location": 114,
            "return": [
                "Tuple[(Any, Any)]"
            ],
            "arguments": {
                "event": []
            }
        },
        "MouseEventDispatcher.on_up": {
            "name": "on_up",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "callback": []
            }
        },
        "MouseEventDispatcher.on_down": {
            "name": "on_down",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "callback": []
            }
        }
    },
    "snowid-master/project/gamepart/game.py": {
        "Game.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.logger": {
            "name": "logger",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.init": {
            "name": "init",
            "location": 71,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.init_display": {
            "name": "init_display",
            "location": 74,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.init_renderer": {
            "name": "init_renderer",
            "location": 84,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.init_sprite_factory": {
            "name": "init_sprite_factory",
            "location": 90,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.init_font_manager": {
            "name": "init_font_manager",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.init_scenes": {
            "name": "init_scenes",
            "location": 97,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.display_loading_screen": {
            "name": "display_loading_screen",
            "location": 102,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.display_fps": {
            "name": "display_fps",
            "location": 115,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.frame": {
            "name": "frame",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.tick": {
            "name": "tick",
            "location": 142,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.add_scene": {
            "name": "add_scene",
            "location": 148,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "scene": []
            }
        },
        "Game.queue_scene_switch": {
            "name": "queue_scene_switch",
            "location": 156,
            "return": [],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Game.switch_scene": {
            "name": "switch_scene",
            "location": 160,
            "return": [],
            "arguments": {
                "self": [],
                "scene": []
            }
        },
        "Game.stop": {
            "name": "stop",
            "location": 168,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.main_loop": {
            "name": "main_loop",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.wrapped_main_loop": {
            "name": "wrapped_main_loop",
            "location": 181,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.get_config": {
            "name": "get_config",
            "location": 191,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.get_initial_context": {
            "name": "get_initial_context",
            "location": 204,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.add_exit_scene": {
            "name": "add_exit_scene",
            "location": 207,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.world_time": {
            "name": "world_time",
            "location": 211,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.__repr__": {
            "name": "__repr__",
            "location": 214,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.init_heavy": {
            "name": "init_heavy",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "snowid-master/project/gamepart/protocol.py": {
        "ProtocolMeta.__new__": {
            "name": "__new__",
            "location": 5,
            "return": [
                "Any"
            ],
            "arguments": {
                "mcs": [
                    "Type[ProtocolMeta]"
                ],
                "name": [],
                "bases": [],
                "dct": []
            }
        },
        "ProtocolMeta.is_field": {
            "name": "is_field",
            "location": 24,
            "return": [
                "bool"
            ],
            "arguments": {
                "name": [],
                "value": []
            }
        },
        "Protocol.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol.update": {
            "name": "update",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Protocol.update_dict": {
            "name": "update_dict",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "Protocol.serialize": {
            "name": "serialize",
            "location": 46,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol.serialize_dict": {
            "name": "serialize_dict",
            "location": 49,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol.deserialize": {
            "name": "deserialize",
            "location": 53,
            "return": [
                "_TProtocol@@Protocol@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TProtocol]"
                ],
                "data": []
            }
        },
        "Protocol.deserialize_dict": {
            "name": "deserialize_dict",
            "location": 59,
            "return": [
                "_TProtocol@@Protocol@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TProtocol]"
                ],
                "data": []
            }
        },
        "Protocol.clear": {
            "name": "clear",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol.copy": {
            "name": "copy",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "Protocol.__repr__": {
            "name": "__repr__",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "snowid-master/project/gamepart/render.py": {
        "GfxRenderer.clip": {
            "name": "clip",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "GfxRenderer._shape": {
            "name": "_shape",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shapes": [],
                "color": []
            }
        },
        "GfxRenderer.circle": {
            "name": "circle",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "circles": [],
                "color": []
            }
        },
        "GfxRenderer.filled_circle": {
            "name": "filled_circle",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "circles": [],
                "color": []
            }
        },
        "GfxRenderer.aa_circle": {
            "name": "aa_circle",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "circles": [],
                "color": []
            }
        },
        "GfxRenderer.pixel": {
            "name": "pixel",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pixels": [],
                "color": []
            }
        },
        "GfxRenderer.rounded_rectangle": {
            "name": "rounded_rectangle",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rects": [],
                "color": []
            }
        },
        "GfxRenderer.rounded_box": {
            "name": "rounded_box",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rects": [],
                "color": []
            }
        },
        "GfxRenderer.line": {
            "name": "line",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lines": [],
                "color": []
            }
        },
        "GfxRenderer.aa_line": {
            "name": "aa_line",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lines": [],
                "color": []
            }
        },
        "GfxRenderer.thick_line": {
            "name": "thick_line",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lines": [],
                "color": []
            }
        },
        "GfxRenderer.arc": {
            "name": "arc",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "arcs": [],
                "color": []
            }
        },
        "GfxRenderer.ellipse": {
            "name": "ellipse",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ellipses": [],
                "color": []
            }
        },
        "GfxRenderer.aa_ellipse": {
            "name": "aa_ellipse",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ellipses": [],
                "color": []
            }
        },
        "GfxRenderer.filled_ellipse": {
            "name": "filled_ellipse",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ellipses": [],
                "color": []
            }
        },
        "GfxRenderer.pie": {
            "name": "pie",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pies": [],
                "color": []
            }
        },
        "GfxRenderer.filled_pie": {
            "name": "filled_pie",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pies": [],
                "color": []
            }
        },
        "GfxRenderer.trigon": {
            "name": "trigon",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trigons": [],
                "color": []
            }
        },
        "GfxRenderer.aa_trigon": {
            "name": "aa_trigon",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trigons": [],
                "color": []
            }
        },
        "GfxRenderer.filled_trigon": {
            "name": "filled_trigon",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trigons": [],
                "color": []
            }
        },
        "GfxRenderer._polygon": {
            "name": "_polygon",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "polygons": [],
                "color": []
            }
        },
        "GfxRenderer.polygon": {
            "name": "polygon",
            "location": 123,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "polygons": [],
                "color": []
            }
        },
        "GfxRenderer.aa_polygon": {
            "name": "aa_polygon",
            "location": 126,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "polygons": [],
                "color": []
            }
        },
        "GfxRenderer.filled_polygon": {
            "name": "filled_polygon",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "polygons": [],
                "color": []
            }
        },
        "GfxRenderer.bezier": {
            "name": "bezier",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "beziers": [],
                "color": []
            }
        },
        "GfxRenderer.fill_color": {
            "name": "fill_color",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "color": []
            }
        }
    },
    "snowid-master/project/gamepart/scene.py": {
        "Scene.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "game": [],
                "name": []
            }
        },
        "Scene.init": {
            "name": "init",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scene.start": {
            "name": "start",
            "location": 24,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "Scene.tick": {
            "name": "tick",
            "location": 28,
            "return": [],
            "arguments": {
                "self": [],
                "delta": []
            }
        },
        "Scene.event": {
            "name": "event",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "Scene.frame": {
            "name": "frame",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scene.stop": {
            "name": "stop",
            "location": 37,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scene.uninit": {
            "name": "uninit",
            "location": 41,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scene.__repr__": {
            "name": "__repr__",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ExitScene.frame": {
            "name": "frame",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScene.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScene.init": {
            "name": "init",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScene.start": {
            "name": "start",
            "location": 78,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "SimpleScene.frame": {
            "name": "frame",
            "location": 82,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScene.uninit": {
            "name": "uninit",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScene.on_exit": {
            "name": "on_exit",
            "location": 97,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "SimpleScene.exit": {
            "name": "exit",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SimpleScene.first_frame": {
            "name": "first_frame",
            "location": 105,
            "return": [],
            "arguments": {
                "self": [],
                "renderer": []
            }
        },
        "SimpleScene.every_frame": {
            "name": "every_frame",
            "location": 108,
            "return": [],
            "arguments": {
                "self": [],
                "renderer": []
            }
        }
    },
    "snowid-master/project/gamepart/subsystem.py": {
        "SubSystemObject.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystemObject.remove": {
            "name": "remove",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystemObject.__bool__": {
            "name": "__bool__",
            "location": 11,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystem.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystem.accepts": {
            "name": "accepts",
            "location": 25,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj": []
            }
        },
        "SubSystem.get_objects": {
            "name": "get_objects",
            "location": 28,
            "return": [
                "Generator[(SubSystemObject, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystem.add": {
            "name": "add",
            "location": 33,
            "return": [
                "Tuple[(SubSystemObject, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystem.remove": {
            "name": "remove",
            "location": 39,
            "return": [
                "Tuple[(SubSystemObject, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystem.remove_queued": {
            "name": "remove_queued",
            "location": 44,
            "return": [
                "Tuple[(SubSystemObject, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystem.clear": {
            "name": "clear",
            "location": 47,
            "return": [
                "Tuple[(SubSystemObject, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SubSystem.__del__": {
            "name": "__del__",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemManager.accepts": {
            "name": "accepts",
            "location": 56,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj": []
            }
        },
        "SystemManager.get_objects_all": {
            "name": "get_objects_all",
            "location": 59,
            "return": [
                "Generator[(nothing, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemManager.add_all": {
            "name": "add_all",
            "location": 69,
            "return": [
                "Tuple[(nothing, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemManager.remove_all": {
            "name": "remove_all",
            "location": 74,
            "return": [
                "Tuple[(nothing, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemManager.remove_queued_all": {
            "name": "remove_queued_all",
            "location": 79,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemManager.clear_all": {
            "name": "clear_all",
            "location": 85,
            "return": [
                "set"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "snowid-master/project/gamepart/time.py": {
        "FPSCounter.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "maxlen": []
            }
        },
        "FPSCounter.frame": {
            "name": "frame",
            "location": 16,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "FPSCounter.get_fps": {
            "name": "get_fps",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "FPSCounter.target_fps": {
            "name": "target_fps",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fps": [],
                "recent": []
            }
        },
        "FPSCounter.clear": {
            "name": "clear",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeFeeder.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "time_step": [],
                "speed": []
            }
        },
        "TimeFeeder.tick": {
            "name": "tick",
            "location": 57,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": [],
                "delta": [],
                "max_iter": []
            }
        },
        "TimeFeeder.catch_up": {
            "name": "catch_up",
            "location": 72,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimeFeeder.lag": {
            "name": "lag",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "snowid-master/project/gamepart/utils.py": {
        "get_mouse_state": {
            "name": "get_mouse_state",
            "location": 7,
            "return": [
                "Tuple[(int, int, Any)]"
            ],
            "arguments": {}
        },
        "get_clipboard_text": {
            "name": "get_clipboard_text",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "encoding": []
            }
        }
    },
    "snowid-master/project/gamepart/__init__.py": {},
    "snowid-master/project/gamepart/gui/console.py": {
        "BufferedConsole.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BufferedConsole.write": {
            "name": "write",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "BufferedConsole.push_line": {
            "name": "push_line",
            "location": 22,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "line": [],
                "prefix": []
            }
        },
        "ConsoleService.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shell": []
            }
        },
        "ConsoleService.get_all_buffer": {
            "name": "get_all_buffer",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.get_buffer_start": {
            "name": "get_buffer_start",
            "location": 49,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.get_buffer_end": {
            "name": "get_buffer_end",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.exit_history": {
            "name": "exit_history",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.enter_text": {
            "name": "enter_text",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": []
            }
        },
        "ConsoleService.press_backspace": {
            "name": "press_backspace",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": []
            }
        },
        "ConsoleService.press_delete": {
            "name": "press_delete",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": []
            }
        },
        "ConsoleService.press_left": {
            "name": "press_left",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": []
            }
        },
        "ConsoleService.press_right": {
            "name": "press_right",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": []
            }
        },
        "ConsoleService.press_end": {
            "name": "press_end",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.press_home": {
            "name": "press_home",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.press_up": {
            "name": "press_up",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.press_down": {
            "name": "press_down",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConsoleService.press_enter": {
            "name": "press_enter",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Console.__init__": {
            "name": "__init__",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "shell_locals": []
            }
        },
        "Console.focus": {
            "name": "focus",
            "location": 156,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Console.unfocus": {
            "name": "unfocus",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Console.draw": {
            "name": "draw",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "manager": []
            }
        },
        "Console.event": {
            "name": "event",
            "location": 238,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        }
    },
    "snowid-master/project/gamepart/gui/guiobject.py": {
        "GUIObject.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUIObject.draw": {
            "name": "draw",
            "location": 12,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "manager": []
            }
        },
        "GUIObject.event": {
            "name": "event",
            "location": 15,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "GUIObject.focus": {
            "name": "focus",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUIObject.unfocus": {
            "name": "unfocus",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "snowid-master/project/gamepart/gui/system.py": {
        "GUISystem.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "renderer": [],
                "font_manager": [],
                "sprite_factory": [],
                "width": [],
                "height": []
            }
        },
        "GUISystem.accepts": {
            "name": "accepts",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj": []
            }
        },
        "GUISystem.draw": {
            "name": "draw",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUISystem.event": {
            "name": "event",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "GUISystem.change_focus": {
            "name": "change_focus",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "obj": []
            }
        }
    },
    "snowid-master/project/gamepart/gui/__init__.py": {},
    "snowid-master/project/gamepart/physics/category.py": {
        "Category.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "forced_index": []
            }
        },
        "Category.__int__": {
            "name": "__int__",
            "location": 17,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.__bool__": {
            "name": "__bool__",
            "location": 20,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Category.__or__": {
            "name": "__or__",
            "location": 26,
            "return": [
                "_TCategory@@Category@@"
            ],
            "arguments": {
                "self": [
                    "_TCategory@@Category@@"
                ],
                "other": []
            }
        },
        "Category.__and__": {
            "name": "__and__",
            "location": 29,
            "return": [
                "_TCategory@@Category@@"
            ],
            "arguments": {
                "self": [
                    "_TCategory@@Category@@"
                ],
                "other": []
            }
        },
        "Category.__xor__": {
            "name": "__xor__",
            "location": 32,
            "return": [
                "_TCategory@@Category@@"
            ],
            "arguments": {
                "self": [
                    "_TCategory@@Category@@"
                ],
                "other": []
            }
        },
        "Category.__neg__": {
            "name": "__neg__",
            "location": 35,
            "return": [
                "_TCategory@@Category@@"
            ],
            "arguments": {
                "self": [
                    "_TCategory@@Category@@"
                ]
            }
        },
        "Category.__sub__": {
            "name": "__sub__",
            "location": 40,
            "return": [
                "_TCategory@@Category@@"
            ],
            "arguments": {
                "self": [
                    "_TCategory@@Category@@"
                ],
                "other": []
            }
        },
        "Category.__contains__": {
            "name": "__contains__",
            "location": 43,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Category.filter": {
            "name": "filter",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "mask": [],
                "group": []
            }
        }
    },
    "snowid-master/project/gamepart/physics/physicalobject.py": {
        "PhysicalObject.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": [],
                "shapes": [],
                "category": []
            }
        },
        "PhysicalObject.position": {
            "name": "position",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "PhysicalObject.bodies": {
            "name": "bodies",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CollisionObject.collide": {
            "name": "collide",
            "location": 30,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "arbiter": [],
                "other": []
            }
        },
        "AwareObject.tick": {
            "name": "tick",
            "location": 35,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "delta": []
            }
        },
        "SimplePhysicalObject.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "body": [],
                "shape": [],
                "category": []
            }
        },
        "SimplePhysicalObject.shape": {
            "name": "shape",
            "location": 52,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "snowid-master/project/gamepart/physics/utils.py": {
        "make_body": {
            "name": "make_body",
            "location": 19,
            "return": [],
            "arguments": {
                "mass": [],
                "moment": [],
                "body_type": []
            }
        },
        "update_shape": {
            "name": "update_shape",
            "location": 28,
            "return": [],
            "arguments": {
                "shape": []
            }
        },
        "typed_property": {
            "name": "typed_property",
            "location": 34,
            "return": [],
            "arguments": {
                "rtype": []
            }
        },
        "typed_property.prop": {
            "name": "prop",
            "location": 36,
            "return": [],
            "arguments": {}
        }
    },
    "snowid-master/project/gamepart/physics/vector.py": {
        "Vector.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "x": [],
                "y": []
            }
        },
        "Vector.to": {
            "name": "to",
            "location": 20,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVector]"
                ]
            }
        },
        "Vector.polar": {
            "name": "polar",
            "location": 29,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TVector]"
                ],
                "r": [],
                "phi": []
            }
        },
        "Vector.copy": {
            "name": "copy",
            "location": 35,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ]
            }
        },
        "Vector.update": {
            "name": "update",
            "location": 38,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "x": [],
                "y": []
            }
        },
        "Vector.replace": {
            "name": "replace",
            "location": 43,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__getitem__": {
            "name": "__getitem__",
            "location": 48,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Vector.__setitem__": {
            "name": "__setitem__",
            "location": 55,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "key": [],
                "value": []
            }
        },
        "Vector.__add__": {
            "name": "__add__",
            "location": 62,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__iadd__": {
            "name": "__iadd__",
            "location": 65,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__sub__": {
            "name": "__sub__",
            "location": 72,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__isub__": {
            "name": "__isub__",
            "location": 75,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__rsub__": {
            "name": "__rsub__",
            "location": 80,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__mul__": {
            "name": "__mul__",
            "location": 83,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__imul__": {
            "name": "__imul__",
            "location": 86,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__truediv__": {
            "name": "__truediv__",
            "location": 93,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__itruediv__": {
            "name": "__itruediv__",
            "location": 96,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ],
                "other": []
            }
        },
        "Vector.__matmul__": {
            "name": "__matmul__",
            "location": 101,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vector.__pos__": {
            "name": "__pos__",
            "location": 105,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ]
            }
        },
        "Vector.__neg__": {
            "name": "__neg__",
            "location": 108,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ]
            }
        },
        "Vector.__invert__": {
            "name": "__invert__",
            "location": 111,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ]
            }
        },
        "Vector.__eq__": {
            "name": "__eq__",
            "location": 114,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vector.__hash__": {
            "name": "__hash__",
            "location": 117,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__bool__": {
            "name": "__bool__",
            "location": 120,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__len__": {
            "name": "__len__",
            "location": 123,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.r": {
            "name": "r",
            "location": 131,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Vector.phi": {
            "name": "phi",
            "location": 141,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "Vector.__repr__": {
            "name": "__repr__",
            "location": 146,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__complex__": {
            "name": "__complex__",
            "location": 149,
            "return": [
                "complex"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.__iter__": {
            "name": "__iter__",
            "location": 152,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Vector.cross": {
            "name": "cross",
            "location": 156,
            "return": [
                "float"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Vector.decompose": {
            "name": "decompose",
            "location": 161,
            "return": [
                "Tuple[(Vector, Vector)]"
            ],
            "arguments": {
                "self": [],
                "phi": []
            }
        },
        "Vector.normal": {
            "name": "normal",
            "location": 168,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ]
            }
        },
        "Vector.tangent": {
            "name": "tangent",
            "location": 173,
            "return": [
                "_TVector@@Vector@@"
            ],
            "arguments": {
                "self": [
                    "_TVector@@Vector@@"
                ]
            }
        }
    },
    "snowid-master/project/gamepart/physics/world.py": {
        "World.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "speed": []
            }
        },
        "World.accepts": {
            "name": "accepts",
            "location": 16,
            "return": [
                "bool"
            ],
            "arguments": {
                "obj": []
            }
        },
        "World.add": {
            "name": "add",
            "location": 19,
            "return": [
                "Tuple[(gamepart.physics.physicalobject.PhysicalObject, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "World.remove": {
            "name": "remove",
            "location": 27,
            "return": [
                "Tuple[(gamepart.subsystem.SubSystemObject, ...)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "World._collide": {
            "name": "_collide",
            "location": 34,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "arbiter": [],
                "obj": []
            }
        },
        "World.tick": {
            "name": "tick",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "delta": []
            }
        }
    },
    "snowid-master/project/gamepart/physics/__init__.py": {},
    "snowid-master/project/gamepart/viewport/graphicalobject.py": {
        "GraphicalObject.draw": {
            "name": "draw",
            "location": 14,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "vp": []
            }
        },
        "ComplexGraphicalObject.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "objects": []
            }
        },
        "ComplexGraphicalObject.draw": {
            "name": "draw",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vp": []
            }
        },
        "TexturedObject.draw": {
            "name": "draw",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vp": []
            }
        },
        "Point.draw": {
            "name": "draw",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vp": []
            }
        },
        "Line.draw": {
            "name": "draw",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vp": []
            }
        },
        "Polygon.draw": {
            "name": "draw",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vp": []
            }
        },
        "Circle.draw": {
            "name": "draw",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "vp": []
            }
        }
    },
    "snowid-master/project/gamepart/viewport/viewport.py": {
        "ViewPort.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": [],
                "renderer": [],
                "width": [],
                "height": [],
                "zoom": [],
                "x": [],
                "y": []
            }
        },
        "ViewPort.accepts": {
            "name": "accepts",
            "location": 28,
            "return": [],
            "arguments": {
                "obj": []
            }
        },
        "ViewPort.draw": {
            "name": "draw",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ViewPort.x_to_view": {
            "name": "x_to_view",
            "location": 35,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "ViewPort.y_to_view": {
            "name": "y_to_view",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "ViewPort.to_view": {
            "name": "to_view",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "ViewPort.d_to_view": {
            "name": "d_to_view",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "ViewPort.x_to_world": {
            "name": "x_to_world",
            "location": 47,
            "return": [],
            "arguments": {
                "self": [],
                "x": []
            }
        },
        "ViewPort.y_to_world": {
            "name": "y_to_world",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "ViewPort.to_world": {
            "name": "to_world",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "pos": []
            }
        },
        "ViewPort.d_to_world": {
            "name": "d_to_world",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "d": []
            }
        },
        "ViewPort.center": {
            "name": "center",
            "location": 64,
            "return": [],
            "arguments": {
                "self": [],
                "value": []
            }
        },
        "ViewPort.change_zoom": {
            "name": "change_zoom",
            "location": 69,
            "return": [],
            "arguments": {
                "self": [],
                "change": [],
                "pos": []
            }
        },
        "FlippedViewPort.y_to_view": {
            "name": "y_to_view",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "y": []
            }
        },
        "FlippedViewPort.y_to_world": {
            "name": "y_to_world",
            "location": 83,
            "return": [],
            "arguments": {
                "self": [],
                "y": []
            }
        }
    },
    "snowid-master/project/gamepart/viewport/__init__.py": {},
    "snowid-master/project/scenes/base.py": {
        "MyBaseScene.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyBaseScene.init": {
            "name": "init",
            "location": 15,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyBaseScene.every_frame": {
            "name": "every_frame",
            "location": 30,
            "return": [],
            "arguments": {
                "self": [],
                "renderer": []
            }
        },
        "MyBaseScene.toggle_console": {
            "name": "toggle_console",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "MyBaseScene.toggle_fps": {
            "name": "toggle_fps",
            "location": 44,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "MyBaseScene.stop": {
            "name": "stop",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "MyBaseScene.start": {
            "name": "start",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        }
    },
    "snowid-master/project/scenes/test.py": {
        "TestScene.init": {
            "name": "init",
            "location": 12,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TestScene.every_frame": {
            "name": "every_frame",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "renderer": []
            }
        },
        "TestScene.decrease_fps": {
            "name": "decrease_fps",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "TestScene.increase_fps": {
            "name": "increase_fps",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "TestScene.switch_to_balls": {
            "name": "switch_to_balls",
            "location": 37,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        }
    },
    "snowid-master/project/scenes/__init__.py": {},
    "snowid-master/project/scenes/balls/ball.py": {
        "Ball.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [],
            "arguments": {
                "self": [],
                "radius": [],
                "mass": [],
                "position": [],
                "velocity": []
            }
        },
        "Ball.radius": {
            "name": "radius",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Ball.angle": {
            "name": "angle",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TexturedBall.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TexturedBall.draw": {
            "name": "draw",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "vp": []
            }
        }
    },
    "snowid-master/project/scenes/balls/category.py": {},
    "snowid-master/project/scenes/balls/line.py": {
        "BoundLine.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "static_body": [],
                "p1x": [],
                "p1y": [],
                "p2x": [],
                "p2y": []
            }
        },
        "BoundLine.end_points": {
            "name": "end_points",
            "location": 24,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BoundLine.make_box": {
            "name": "make_box",
            "location": 28,
            "return": [],
            "arguments": {
                "cls": [],
                "static_body": [],
                "width": [],
                "height": [],
                "start_x": [],
                "start_y": []
            }
        }
    },
    "snowid-master/project/scenes/balls/player.py": {
        "Player.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [],
            "arguments": {
                "self": [],
                "position": []
            }
        },
        "Player.points": {
            "name": "points",
            "location": 45,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Player.tick": {
            "name": "tick",
            "location": 52,
            "return": [],
            "arguments": {
                "self": [],
                "delta": []
            }
        },
        "Player.collide": {
            "name": "collide",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "arbiter": [],
                "other": []
            }
        },
        "PlayerController.act": {
            "name": "act",
            "location": 70,
            "return": [],
            "arguments": {
                "self": [],
                "game_time": [],
                "delta": []
            }
        }
    },
    "snowid-master/project/scenes/balls/scene.py": {
        "BallScene.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BallScene.init": {
            "name": "init",
            "location": 26,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BallScene.start": {
            "name": "start",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "BallScene.change_zoom": {
            "name": "change_zoom",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "BallScene.start_drag": {
            "name": "start_drag",
            "location": 77,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "BallScene.end_drag": {
            "name": "end_drag",
            "location": 80,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "BallScene.delete_ball": {
            "name": "delete_ball",
            "location": 86,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "BallScene.switch_to_test": {
            "name": "switch_to_test",
            "location": 95,
            "return": [],
            "arguments": {
                "self": [],
                "_": []
            }
        },
        "BallScene.player_jump": {
            "name": "player_jump",
            "location": 98,
            "return": [],
            "arguments": {
                "self": [],
                "event": []
            }
        },
        "BallScene.tick": {
            "name": "tick",
            "location": 102,
            "return": [],
            "arguments": {
                "self": [],
                "delta": []
            }
        },
        "BallScene.every_frame": {
            "name": "every_frame",
            "location": 109,
            "return": [],
            "arguments": {
                "self": [],
                "renderer": []
            }
        }
    },
    "snowid-master/project/scenes/balls/__init__.py": {}
}
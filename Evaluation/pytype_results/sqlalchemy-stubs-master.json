{
    "sqlalchemy-stubs-master/conftest.py": {},
    "sqlalchemy-stubs-master/setup.py": {
        "find_stub_files": {
            "name": "find_stub_files",
            "location": 32,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "sqlalchemy-stubs-master/sqlmypy.py": {
        "fullname": {
            "name": "fullname",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": []
            }
        },
        "shortname": {
            "name": "shortname",
            "location": 47,
            "return": [
                "Any"
            ],
            "arguments": {
                "x": []
            }
        },
        "is_declarative": {
            "name": "is_declarative",
            "location": 55,
            "return": [
                "bool"
            ],
            "arguments": {
                "info": []
            }
        },
        "set_declarative": {
            "name": "set_declarative",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "info": []
            }
        },
        "add_var_to_class": {
            "name": "add_var_to_class",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [],
                "typ": [],
                "info": []
            }
        },
        "add_model_init_hook": {
            "name": "add_model_init_hook",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "add_metadata_var": {
            "name": "add_metadata_var",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "api": [],
                "info": []
            }
        },
        "decl_deco_hook": {
            "name": "decl_deco_hook",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "decl_info_hook": {
            "name": "decl_info_hook",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "model_hook": {
            "name": "model_hook",
            "location": 221,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "get_argument_by_name": {
            "name": "get_argument_by_name",
            "location": 267,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": [],
                "name": []
            }
        },
        "get_argtype_by_name": {
            "name": "get_argtype_by_name",
            "location": 282,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": [],
                "name": []
            }
        },
        "column_hook": {
            "name": "column_hook",
            "location": 294,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "grouping_hook": {
            "name": "grouping_hook",
            "location": 330,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "relationship_hook": {
            "name": "relationship_hook",
            "location": 349,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": []
            }
        },
        "parse_bool": {
            "name": "parse_bool",
            "location": 417,
            "return": [
                "Optional[bool]"
            ],
            "arguments": {
                "expr": []
            }
        },
        "plugin": {
            "name": "plugin",
            "location": 426,
            "return": [
                "typing.Type[BasicSQLAlchemyPlugin]"
            ],
            "arguments": {
                "version": []
            }
        },
        "BasicSQLAlchemyPlugin.get_function_hook": {
            "name": "get_function_hook",
            "location": 79,
            "return": [
                "Optional[Callable[([Any], Any)]]"
            ],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "BasicSQLAlchemyPlugin.get_dynamic_class_hook": {
            "name": "get_dynamic_class_hook",
            "location": 93,
            "return": [
                "Optional[Callable[([Any], Any)]]"
            ],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "BasicSQLAlchemyPlugin.get_class_decorator_hook": {
            "name": "get_class_decorator_hook",
            "location": 98,
            "return": [
                "Optional[Callable[([Any], Any)]]"
            ],
            "arguments": {
                "self": [],
                "fullname": []
            }
        },
        "BasicSQLAlchemyPlugin.get_base_class_hook": {
            "name": "get_base_class_hook",
            "location": 103,
            "return": [
                "Optional[Callable[([Any], Any)]]"
            ],
            "arguments": {
                "self": [],
                "fullname": []
            }
        }
    },
    "sqlalchemy-stubs-master/sqltyping.py": {},
    "sqlalchemy-stubs-master/test/testsql.py": {
        "SQLDataSuite.run_case": {
            "name": "run_case",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "testcase": []
            }
        }
    },
    "sqlalchemy-stubs-master/test/__init__.py": {}
}
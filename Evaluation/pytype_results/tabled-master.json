{
    "tabled-master/setup.py": {},
    "tabled-master/docs/conf.py": {},
    "tabled-master/tabled/api.py": {
        "new": {
            "name": "new",
            "location": 15,
            "return": [
                "tabled.tabled.TableD"
            ],
            "arguments": {
                "headings": [],
                "data": [],
                "style": [],
                "align": [],
                "device": [],
                "dataframe": []
            }
        }
    },
    "tabled-master/tabled/pretty_print.py": {
        "left_pad": {
            "name": "left_pad",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [],
                "width": []
            }
        },
        "right_pad": {
            "name": "right_pad",
            "location": 40,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [],
                "width": []
            }
        },
        "left_right_pad": {
            "name": "left_right_pad",
            "location": 64,
            "return": [
                "str"
            ],
            "arguments": {
                "string": [],
                "width": []
            }
        },
        "pad": {
            "name": "pad",
            "location": 94,
            "return": [
                "Any"
            ],
            "arguments": {
                "string": [],
                "width": [],
                "align": [],
                "margin": []
            }
        },
        "render_row": {
            "name": "render_row",
            "location": 128,
            "return": [
                "str"
            ],
            "arguments": {
                "row": [],
                "widths": [],
                "delimiters": [],
                "align": [],
                "margin": []
            }
        },
        "render_table": {
            "name": "render_table",
            "location": 163,
            "return": [
                "str"
            ],
            "arguments": {
                "headings": [],
                "table": [],
                "style": [],
                "align": []
            }
        }
    },
    "tabled-master/tabled/style_templates.py": {
        "get_style": {
            "name": "get_style",
            "location": 64,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "style": []
            }
        }
    },
    "tabled-master/tabled/tabled.py": {
        "TableD.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "headings": [],
                "data": [],
                "style": [],
                "align": [],
                "device": []
            }
        },
        "TableD.add_row": {
            "name": "add_row",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row": []
            }
        },
        "TableD.add_rows": {
            "name": "add_rows",
            "location": 84,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "rows": []
            }
        },
        "TableD.set_headings": {
            "name": "set_headings",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "headings": []
            }
        },
        "TableD.show": {
            "name": "show",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tabled-master/tabled/utils.py": {
        "max_width": {
            "name": "max_width",
            "location": 13,
            "return": [
                "int"
            ],
            "arguments": {
                "column": []
            }
        },
        "rotate_table": {
            "name": "rotate_table",
            "location": 31,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "table": []
            }
        },
        "columns_width": {
            "name": "columns_width",
            "location": 57,
            "return": [
                "list"
            ],
            "arguments": {
                "table": []
            }
        },
        "str_list": {
            "name": "str_list",
            "location": 77,
            "return": [
                "list"
            ],
            "arguments": {
                "raw_list": []
            }
        },
        "str_nested_list": {
            "name": "str_nested_list",
            "location": 83,
            "return": [
                "list"
            ],
            "arguments": {
                "nested_raw_list": []
            }
        },
        "normalize_list": {
            "name": "normalize_list",
            "location": 89,
            "return": [
                "Any"
            ],
            "arguments": {
                "row": [],
                "size": []
            }
        }
    },
    "tabled-master/tabled/__init__.py": {},
    "tabled-master/tests/test_api.py": {
        "TestNew.test_pandas_dataframe": {
            "name": "test_pandas_dataframe",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tabled-master/tests/test_pretty_print.py": {
        "TestLeftPad.test_normal": {
            "name": "test_normal",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLeftPad.test_same_width": {
            "name": "test_same_width",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLeftPad.test_too_narrow": {
            "name": "test_too_narrow",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRightPad.test_normal": {
            "name": "test_normal",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRightPad.test_same_width": {
            "name": "test_same_width",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRightPad.test_too_narrow": {
            "name": "test_too_narrow",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLeftRightPad.test_normal": {
            "name": "test_normal",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLeftRightPad.test_uneven_pad_space": {
            "name": "test_uneven_pad_space",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestLeftRightPad.test_too_narrow": {
            "name": "test_too_narrow",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPad.test_align_left": {
            "name": "test_align_left",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPad.test_align_right": {
            "name": "test_align_right",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPad.test_align_center": {
            "name": "test_align_center",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestPad.test_margin": {
            "name": "test_margin",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConstructRow.test_normal": {
            "name": "test_normal",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestConstructRow.test_blank": {
            "name": "test_blank",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateTable.test_style_default": {
            "name": "test_style_default",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateTable.test_style_terminal": {
            "name": "test_style_terminal",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestGenerateTable.test_textual_data": {
            "name": "test_textual_data",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tabled-master/tests/test_tabled.py": {
        "TestTableD.test_create_new_table_blank": {
            "name": "test_create_new_table_blank",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTableD.test_create_new_table": {
            "name": "test_create_new_table",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTableD.test_add_row_1": {
            "name": "test_add_row_1",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTableD.test_add_row_2": {
            "name": "test_add_row_2",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTableD.test_set_headings": {
            "name": "test_set_headings",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestTableD.test_show": {
            "name": "test_show",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "capfd": []
            }
        }
    },
    "tabled-master/tests/test_utils.py": {
        "TestMaxWidth.test_normal": {
            "name": "test_normal",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMaxWidth.test_single_element": {
            "name": "test_single_element",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRotateTable.test_normal": {
            "name": "test_normal",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRotateTable.test_reversible": {
            "name": "test_reversible",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRotateTable.test_asymmetric_list": {
            "name": "test_asymmetric_list",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRotateTable.test_single_column": {
            "name": "test_single_column",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestColumnsWidth.test_normal": {
            "name": "test_normal",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestColumnsWidth.test_empty_cells": {
            "name": "test_empty_cells",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNormalizeList.test_normal": {
            "name": "test_normal",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNormalizeList.test_same_length": {
            "name": "test_same_length",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNormalizeList.test_shorter": {
            "name": "test_shorter",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
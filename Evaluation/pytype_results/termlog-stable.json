{
    "termlog-stable/docs/source/conf.py": {},
    "termlog-stable/scripts/benchmark.py": {
        "benchmark_all": {
            "name": "benchmark_all",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "count": []
            }
        },
        "benchmark_print": {
            "name": "benchmark_print",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [],
                "count": []
            }
        },
        "benchmark_echo": {
            "name": "benchmark_echo",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "data": [],
                "count": []
            }
        },
        "Duration.__post_init__": {
            "name": "__post_init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Duration.__str__": {
            "name": "__str__",
            "location": 48,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimedExecutionBlock.now": {
            "name": "now",
            "location": 64,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimedExecutionBlock.seconds": {
            "name": "seconds",
            "location": 68,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimedExecutionBlock.human": {
            "name": "human",
            "location": 78,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TimedExecutionBlock.__str__": {
            "name": "__str__",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TimedExecutionBlock.__enter__": {
            "name": "__enter__",
            "location": 86,
            "return": [
                "_TTimedExecutionBlock@@TimedExecutionBlock@@"
            ],
            "arguments": {
                "self": [
                    "_TTimedExecutionBlock@@TimedExecutionBlock@@"
                ]
            }
        },
        "TimedExecutionBlock.__exit__": {
            "name": "__exit__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "_type": [
                    "Optional[Type[BaseException]]"
                ],
                "_value": [
                    "Optional[BaseException]"
                ],
                "_traceback": []
            }
        }
    },
    "termlog-stable/scripts/build.py": {
        "build_image": {
            "name": "build_image",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "build_dist": {
            "name": "build_dist",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cli": {
            "name": "cli",
            "location": 33,
            "return": [],
            "arguments": {
                "dist": [],
                "image": []
            }
        }
    },
    "termlog-stable/scripts/check.py": {
        "check": {
            "name": "check",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cli": {
            "name": "cli",
            "location": 31,
            "return": [],
            "arguments": {}
        }
    },
    "termlog-stable/scripts/clean.py": {
        "clean": {
            "name": "clean",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "force": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 55,
            "return": [],
            "arguments": {}
        }
    },
    "termlog-stable/scripts/demo.py": {
        "build_color_wheel": {
            "name": "build_color_wheel",
            "location": 72,
            "return": [
                "List[termlog.colors.Color]"
            ],
            "arguments": {
                "columns": [],
                "rows": [],
                "symbol": []
            }
        }
    },
    "termlog-stable/scripts/lint.py": {
        "lint": {
            "name": "lint",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "cli": {
            "name": "cli",
            "location": 25,
            "return": [],
            "arguments": {}
        }
    },
    "termlog-stable/scripts/push.py": {
        "push_pypi": {
            "name": "push_pypi",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "pypi_url": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 38,
            "return": [],
            "arguments": {
                "devpi": [],
                "ecr": [],
                "docker_hub": [],
                "pypi": [],
                "pypi_url": []
            }
        }
    },
    "termlog-stable/scripts/release.py": {
        "push_pypi": {
            "name": "push_pypi",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "pypi_url": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 38,
            "return": [],
            "arguments": {
                "devpi": [],
                "ecr": [],
                "docker_hub": [],
                "pypi": [],
                "pypi_url": []
            }
        }
    },
    "termlog-stable/scripts/test.py": {
        "run_test": {
            "name": "run_test",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "release": [],
                "coverage_fail_threshold": []
            }
        },
        "cli": {
            "name": "cli",
            "location": 34,
            "return": [],
            "arguments": {
                "release": [],
                "threshold": []
            }
        }
    },
    "termlog-stable/scripts/__init__.py": {},
    "termlog-stable/scripts/tests/__init__.py": {},
    "termlog-stable/termlog/colors.py": {
        "rgb": {
            "name": "rgb",
            "location": 250,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "message": [
                    "_T0@@"
                ],
                "red": [],
                "green": [],
                "blue": [],
                "color": [],
                "truecolor": []
            }
        },
        "Color.__set_name__": {
            "name": "__set_name__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "owner": [],
                "name": []
            }
        },
        "Color.__post_init__": {
            "name": "__post_init__",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Color.generate_postfix": {
            "name": "generate_postfix",
            "location": 133,
            "return": [
                "str"
            ],
            "arguments": {
                "dim": [],
                "bright": [],
                "italics": [],
                "underlined": [],
                "double_underlined": [],
                "hidden": [],
                "inverted": [],
                "strike_through": [],
                "blinking": [],
                "strobing": []
            }
        },
        "Color.__hash__": {
            "name": "__hash__",
            "location": 204,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Color.__call__": {
            "name": "__call__",
            "location": 207,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "_T0@@"
                ],
                "color": [],
                "truecolor": []
            }
        },
        "Color.__eq__": {
            "name": "__eq__",
            "location": 228,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Color.__getitem__": {
            "name": "__getitem__",
            "location": 231,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Color.keys": {
            "name": "keys",
            "location": 238,
            "return": [
                "Tuple[(str, str, str)]"
            ],
            "arguments": {}
        },
        "Color.__len__": {
            "name": "__len__",
            "location": 242,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "Color.__iter__": {
            "name": "__iter__",
            "location": 245,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "termlog-stable/termlog/config.py": {
        "set_config": {
            "name": "set_config",
            "location": 34,
            "return": [
                "TerminalConfig"
            ],
            "arguments": {
                "color": [],
                "json": [],
                "time_format": [],
                "timestamp": []
            }
        },
        "TerminalConfig.__getitem__": {
            "name": "__getitem__",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "TerminalConfig.keys": {
            "name": "keys",
            "location": 26,
            "return": [
                "dict_keys[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "termlog-stable/termlog/constants.py": {
        "true_color_supported": {
            "name": "true_color_supported",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "env": []
            }
        }
    },
    "termlog-stable/termlog/decorations.py": {
        "factory.__repr__": {
            "name": "__repr__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "factory.generate_key": {
            "name": "generate_key",
            "location": 24,
            "return": [
                "tuple"
            ],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "factory.get_instance": {
            "name": "get_instance",
            "location": 41,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "cls": []
            }
        },
        "factory.__call__": {
            "name": "__call__",
            "location": 53,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "cls": [
                    "_T0@@"
                ]
            }
        },
        "factory.__call__.new": {
            "name": "new",
            "location": 57,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "termlog-stable/termlog/formatting.py": {
        "beautify": {
            "name": "beautify",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "message": [],
                "indent": [],
                "lexer": []
            }
        },
        "format": {
            "name": "format",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "termlog-stable/termlog/interpret.py": {
        "extract_fields": {
            "name": "extract_fields",
            "location": 7,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {
                "code": []
            }
        }
    },
    "termlog-stable/termlog/message.py": {
        "fix_json": {
            "name": "fix_json",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj": []
            }
        },
        "strip_escape": {
            "name": "strip_escape",
            "location": 184,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "text": [
                    "_T0@@"
                ]
            }
        },
        "Message.__post_init__": {
            "name": "__post_init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.nested_calling_frame_pairs": {
            "name": "nested_calling_frame_pairs",
            "location": 39,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.calling_frame": {
            "name": "calling_frame",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.calling_frame_code": {
            "name": "calling_frame_code",
            "location": 66,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message.calling_frame_data": {
            "name": "calling_frame_data",
            "location": 72,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Message._update_fields": {
            "name": "_update_fields",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Message.__eq__": {
            "name": "__eq__",
            "location": 91,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Message.__radd__": {
            "name": "__radd__",
            "location": 98,
            "return": [
                "_TMessage@@Message@@"
            ],
            "arguments": {
                "self": [
                    "_TMessage@@Message@@"
                ],
                "other": []
            }
        },
        "Message.__add__": {
            "name": "__add__",
            "location": 132,
            "return": [
                "_TMessage@@Message@@"
            ],
            "arguments": {
                "self": [
                    "_TMessage@@Message@@"
                ],
                "other": []
            }
        },
        "Message.__str__": {
            "name": "__str__",
            "location": 158,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "termlog-stable/termlog/palettes.py": {
        "get_palette": {
            "name": "get_palette",
            "location": 141,
            "return": [
                "Default"
            ],
            "arguments": {}
        },
        "set_palette": {
            "name": "set_palette",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "palette": []
            }
        },
        "Palette.strip": {
            "name": "strip",
            "location": 47,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "string": [
                    "_T0@@"
                ]
            }
        },
        "Palette.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Palette.__post_init__": {
            "name": "__post_init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Palette.__getattr__": {
            "name": "__getattr__",
            "location": 61,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "termlog-stable/termlog/terminal.py": {
        "echo": {
            "name": "echo",
            "location": 12,
            "return": [
                "Optional[str]"
            ],
            "arguments": {}
        }
    },
    "termlog-stable/termlog/__init__.py": {
        "__getattr__": {
            "name": "__getattr__",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "name": []
            }
        }
    },
    "termlog-stable/termlog/tests/test_beautify.py": {
        "test_beautify": {
            "name": "test_beautify",
            "location": 31,
            "return": [],
            "arguments": {
                "test_data": []
            }
        }
    },
    "termlog-stable/termlog/tests/test_colors.py": {
        "test_colors": {
            "name": "test_colors",
            "location": 55,
            "return": [],
            "arguments": {
                "test_case": []
            }
        },
        "test_colors_rgb": {
            "name": "test_colors_rgb",
            "location": 84,
            "return": [],
            "arguments": {
                "test_case": []
            }
        },
        "ColorTestCase.__str__": {
            "name": "__str__",
            "location": 18,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RgbColorTestCase.__str__": {
            "name": "__str__",
            "location": 72,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "termlog-stable/termlog/tests/test_echo.py": {
        "test_echo": {
            "name": "test_echo",
            "location": 37,
            "return": [],
            "arguments": {
                "test_case": [],
                "capfd": []
            }
        },
        "EchoTestCase.echo_kwds": {
            "name": "echo_kwds",
            "location": 21,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "termlog-stable/termlog/tests/test_message.py": {
        "test_multiline_echo": {
            "name": "test_multiline_echo",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "termlog-stable/termlog/tests/test_set_config.py": {
        "test_true_color_support": {
            "name": "test_true_color_support",
            "location": 36,
            "return": [],
            "arguments": {
                "test_case": []
            }
        },
        "TC.__getitem__": {
            "name": "__getitem__",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "TC.keys": {
            "name": "keys",
            "location": 18,
            "return": [
                "dict_keys[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "termlog-stable/termlog/tests/test_strip_escape.py": {
        "test_strip_escape": {
            "name": "test_strip_escape",
            "location": 31,
            "return": [],
            "arguments": {
                "test_data": []
            }
        }
    },
    "termlog-stable/termlog/tests/test_true_color_support.py": {
        "test_true_color_support": {
            "name": "test_true_color_support",
            "location": 23,
            "return": [],
            "arguments": {
                "test_case": []
            }
        }
    },
    "termlog-stable/termlog/tests/__init__.py": {},
    "termlog-stable/tests/test_embedded_calls.py": {
        "test_simple_embedded_calls": {
            "name": "test_simple_embedded_calls",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "termlog-stable/tests/test_multi_line.py": {
        "test_multiline_call": {
            "name": "test_multiline_call",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "termlog-stable/tests/test_release_updates.py": {
        "test_version_in_changes": {
            "name": "test_version_in_changes",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_matching_versions": {
            "name": "test_matching_versions",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "termlog-stable/tests/__init__.py": {}
}
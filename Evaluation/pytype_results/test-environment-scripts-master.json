{
    "test-environment-scripts-master/setup.py": {},
    "test-environment-scripts-master/raiden_api/api.py": {
        "get_errors": {
            "name": "get_errors",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "json": []
            }
        },
        "Api.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "port": [],
                "timeout": []
            }
        },
        "Api.address": {
            "name": "address",
            "location": 26,
            "return": [
                "raiden_api.model.responses.AddressResponse"
            ],
            "arguments": {
                "self": []
            }
        },
        "Api.payment": {
            "name": "payment",
            "location": 42,
            "return": [
                "raiden_api.model.responses.PaymentResponse"
            ],
            "arguments": {
                "self": [],
                "receiver": [],
                "request": [],
                "token": []
            }
        },
        "Api.channels": {
            "name": "channels",
            "location": 58,
            "return": [
                "List[raiden_api.model.data.Channel]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Api.open_channel": {
            "name": "open_channel",
            "location": 79,
            "return": [
                "raiden_api.model.data.Channel"
            ],
            "arguments": {
                "self": [],
                "request": []
            }
        },
        "Api.manage_channel": {
            "name": "manage_channel",
            "location": 95,
            "return": [
                "raiden_api.model.data.Channel"
            ],
            "arguments": {
                "self": [],
                "request": [],
                "token_address": [],
                "partner_address": []
            }
        }
    },
    "test-environment-scripts-master/raiden_api/__init__.py": {},
    "test-environment-scripts-master/raiden_api/model/data.py": {
        "Channel.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "token_network_identifier": [],
                "channel_identifier": [],
                "partner_address": [],
                "token_address": [],
                "balance": [],
                "total_deposit": [],
                "state": [],
                "settle_timeout": [],
                "reveal_timeout": []
            }
        },
        "Channel.from_dict": {
            "name": "from_dict",
            "location": 28,
            "return": [
                "_TChannel@@Channel@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TChannel]"
                ],
                "data": []
            }
        }
    },
    "test-environment-scripts-master/raiden_api/model/exceptions.py": {
        "HttpErrorException.__init__": {
            "name": "__init__",
            "location": 2,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "code": [],
                "message": []
            }
        }
    },
    "test-environment-scripts-master/raiden_api/model/requests.py": {
        "PaymentRequest.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "amount": [],
                "identifier": []
            }
        },
        "PaymentRequest.to_dict": {
            "name": "to_dict",
            "location": 13,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OpenChannelRequest.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "partner_address": [],
                "token_address": [],
                "total_deposit": [],
                "settle_timeout": []
            }
        },
        "OpenChannelRequest.to_dict": {
            "name": "to_dict",
            "location": 35,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ManageChannelRequest.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "total_deposit": [],
                "state": []
            }
        },
        "ManageChannelRequest.to_dict": {
            "name": "to_dict",
            "location": 52,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "test-environment-scripts-master/raiden_api/model/responses.py": {
        "AddressResponse.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "our_address": []
            }
        },
        "AddressResponse.from_dict": {
            "name": "from_dict",
            "location": 10,
            "return": [
                "_TAddressResponse@@AddressResponse@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TAddressResponse]"
                ],
                "data": []
            }
        },
        "PaymentResponse.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initiator_address": [],
                "target_address": [],
                "token_address": [],
                "amount": [],
                "identifier": []
            }
        },
        "PaymentResponse.from_dict": {
            "name": "from_dict",
            "location": 31,
            "return": [
                "_TPaymentResponse@@PaymentResponse@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TPaymentResponse]"
                ],
                "data": []
            }
        }
    },
    "test-environment-scripts-master/raiden_api/model/__init__.py": {},
    "test-environment-scripts-master/scripts/check_direct_connections.py": {
        "main": {
            "name": "main",
            "location": 14,
            "return": [],
            "arguments": {
                "token": [],
                "start_port": [],
                "end_port": []
            }
        }
    },
    "test-environment-scripts-master/scripts/cleanup_state.py": {
        "main": {
            "name": "main",
            "location": 21,
            "return": [],
            "arguments": {
                "chain_id": [],
                "archive_directory": [],
                "delete": []
            }
        },
        "get_db_directories": {
            "name": "get_db_directories",
            "location": 60,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "accounts": [],
                "raiden_dir": [],
                "chain_id": []
            }
        },
        "tar_name": {
            "name": "tar_name",
            "location": 74,
            "return": [
                "str"
            ],
            "arguments": {
                "log_directory": [],
                "chain_id": []
            }
        },
        "logs": {
            "name": "logs",
            "location": 80,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "accounts": [],
                "chain_id": []
            }
        },
        "get_db_folders": {
            "name": "get_db_folders",
            "location": 92,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "accounts": []
            }
        },
        "get_raiden_dir": {
            "name": "get_raiden_dir",
            "location": 100,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_accounts": {
            "name": "get_accounts",
            "location": 109,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "test-environment-scripts-master/scripts/deploy_testnet.py": {
        "main": {
            "name": "main",
            "location": 35,
            "return": [],
            "arguments": {
                "keystore_file": [],
                "password": [],
                "rpc_url": [],
                "development": []
            }
        }
    },
    "test-environment-scripts-master/scripts/open_channels.py": {
        "main": {
            "name": "main",
            "location": 76,
            "return": [],
            "arguments": {
                "token": [],
                "config": []
            }
        },
        "NodeConfig.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [],
                "port": [],
                "funds": [],
                "targets": []
            }
        },
        "NodeConfig.from_dict": {
            "name": "from_dict",
            "location": 27,
            "return": [
                "_TNodeConfig@@NodeConfig@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TNodeConfig]"
                ],
                "data": []
            }
        },
        "OpenJob.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "api": [],
                "node": [],
                "token_address": []
            }
        },
        "OpenJob.run": {
            "name": "run",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "test-environment-scripts-master/scripts/send_tokens.py": {
        "main": {
            "name": "main",
            "location": 23,
            "return": [],
            "arguments": {
                "keystore_file": [],
                "password": [],
                "rpc_url": [],
                "accounts": [],
                "token": [],
                "amount": []
            }
        },
        "send_tokens": {
            "name": "send_tokens",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "web3": [],
                "sender": [],
                "amount": [],
                "testing_accounts": [],
                "contract": [],
                "private_key": []
            }
        },
        "transfer": {
            "name": "transfer",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "web3": [],
                "receiver": [],
                "sender": [],
                "wei_value": [],
                "contract": [],
                "private_key": []
            }
        },
        "unlock_account": {
            "name": "unlock_account",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "web3": [],
                "address": [],
                "passphrase": []
            }
        }
    },
    "test-environment-scripts-master/scripts/start_private_chain.py": {
        "start_parity": {
            "name": "start_parity",
            "location": 39,
            "return": [
                "subprocess.Popen[bytes]"
            ],
            "arguments": {}
        },
        "service_shutdown": {
            "name": "service_shutdown",
            "location": 44,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "signum": [],
                "frame": []
            }
        },
        "send": {
            "name": "send",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "web3": [],
                "sender": [],
                "receiver": [],
                "wei_value": []
            }
        },
        "unlock_account": {
            "name": "unlock_account",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "address": [],
                "web3": []
            }
        },
        "main": {
            "name": "main",
            "location": 66,
            "return": [],
            "arguments": {
                "rpc_url": [],
                "accounts": [],
                "block_time": []
            }
        },
        "fund_accounts": {
            "name": "fund_accounts",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "web3": [],
                "sender": [],
                "testing_accounts": [],
                "eth": []
            }
        },
        "MineJob.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "web3": [],
                "sender": [],
                "receiver": [],
                "block_time": []
            }
        },
        "MineJob.run": {
            "name": "run",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "test-environment-scripts-master/scripts/transfers.py": {
        "main": {
            "name": "main",
            "location": 132,
            "return": [],
            "arguments": {
                "transfer_amount": [],
                "per_transfer": [],
                "allowed_errors": [],
                "token": [],
                "config": [],
                "timeout": []
            }
        },
        "shutdown_handler": {
            "name": "shutdown_handler",
            "location": 187,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "_signo": [],
                "_stackframe": []
            }
        },
        "TransferJob.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "port": [],
                "receiver": [],
                "position": [],
                "total": [],
                "single": [],
                "errors_allowed": [],
                "token": [],
                "timeout": []
            }
        },
        "TransferJob.transfer": {
            "name": "transfer",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TransferJob.run": {
            "name": "run",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "test-falcon-master/look/app.py": {
        "create_app": {
            "name": "create_app",
            "location": 8,
            "return": [
                "Any"
            ],
            "arguments": {
                "image_store": []
            }
        },
        "get_app": {
            "name": "get_app",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "test-falcon-master/look/images.py": {
        "validate_image_type": {
            "name": "validate_image_type",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "req": [],
                "resp": [],
                "resource": [],
                "params": []
            }
        },
        "Collection.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_store": []
            }
        },
        "Collection.on_get": {
            "name": "on_get",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "Collection.on_post": {
            "name": "on_post",
            "location": 50,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "Item.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image_store": []
            }
        },
        "Item.on_get": {
            "name": "on_get",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "name": []
            }
        },
        "ImageStore.__init__": {
            "name": "__init__",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "storage_path": [],
                "uuidgen": [],
                "fopen": []
            }
        },
        "ImageStore.save": {
            "name": "save",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "image_stream": [],
                "image_content_type": []
            }
        },
        "ImageStore.open": {
            "name": "open",
            "location": 97,
            "return": [
                "Tuple[(Any, int)]"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "test-falcon-master/look/__init__.py": {},
    "test-falcon-master/sample/app.py": {
        "get_app": {
            "name": "get_app",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "test-falcon-master/sample/env.py": {
        "is_production": {
            "name": "is_production",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "get_db_host": {
            "name": "get_db_host",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_db_port": {
            "name": "get_db_port",
            "location": 16,
            "return": [
                "int"
            ],
            "arguments": {}
        }
    },
    "test-falcon-master/sample/logger.py": {
        "get_logger": {
            "name": "get_logger",
            "location": 3,
            "return": [
                "logging.Logger"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "test-falcon-master/sample/__init__.py": {},
    "test-falcon-master/sample/db_operator/main.py": {
        "normalize_mongo_id": {
            "name": "normalize_mongo_id",
            "location": 7,
            "return": [
                "dict"
            ],
            "arguments": {
                "byson_obj": [
                    "dict"
                ]
            }
        },
        "DbOperator.create_user": {
            "name": "create_user",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "user_payload": [
                    "dict"
                ]
            }
        },
        "DbOperator.get_user": {
            "name": "get_user",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "user_id": [
                    "str"
                ]
            }
        },
        "DbOperator.get_users": {
            "name": "get_users",
            "location": 30,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "DbOperator.update_user": {
            "name": "update_user",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "user_id": [
                    "str"
                ],
                "user_payload": [
                    "str"
                ]
            }
        },
        "DbOperator.delete_user": {
            "name": "delete_user",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "user_id": [
                    "str"
                ]
            }
        },
        "DbOperator.register_application": {
            "name": "register_application",
            "location": 50,
            "return": [
                "dict"
            ],
            "arguments": {
                "application_id": [
                    "str"
                ],
                "password": [
                    "str"
                ],
                "admin": [
                    "bool"
                ]
            }
        },
        "DbOperator.get_applications": {
            "name": "get_applications",
            "location": 60,
            "return": [
                "List[dict]"
            ],
            "arguments": {}
        },
        "DbOperator.get_application": {
            "name": "get_application",
            "location": 66,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "application_id": [
                    "str"
                ]
            }
        },
        "DbOperator.update_application": {
            "name": "update_application",
            "location": 71,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "application_id": [
                    "str"
                ],
                "application_payload": [
                    "dict"
                ]
            }
        },
        "DbOperator.delete_application": {
            "name": "delete_application",
            "location": 79,
            "return": [
                "bool"
            ],
            "arguments": {
                "application_id": [
                    "str"
                ]
            }
        },
        "DbOperator.login_application": {
            "name": "login_application",
            "location": 84,
            "return": [
                "Optional[dict]"
            ],
            "arguments": {
                "application_id": [
                    "str"
                ],
                "password": [
                    "str"
                ]
            }
        }
    },
    "test-falcon-master/sample/db_operator/__init__.py": {},
    "test-falcon-master/sample/db_operator/schemas/applications.py": {},
    "test-falcon-master/sample/db_operator/schemas/users.py": {},
    "test-falcon-master/sample/db_operator/schemas/__.init__.py": {},
    "test-falcon-master/sample/error/code.py": {
        "ErrorCode.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ],
                "status": [
                    "str"
                ]
            }
        }
    },
    "test-falcon-master/sample/error/final_error_handler.py": {
        "final_error_handler": {
            "name": "final_error_handler",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "ex": [],
                "req": [],
                "resp": [],
                "params": []
            }
        }
    },
    "test-falcon-master/sample/error/sample_error.py": {
        "SampleError.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "error_code": [
                    "sample.error.code.ErrorCode"
                ],
                "extra_vars": []
            }
        }
    },
    "test-falcon-master/sample/error/__init__.py": {},
    "test-falcon-master/sample/extentions/check_auth.py": {
        "check_auth": {
            "name": "check_auth",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "req": [],
                "resp": [],
                "resource": [],
                "params": []
            }
        }
    },
    "test-falcon-master/sample/extentions/parse_json.py": {
        "parse_json": {
            "name": "parse_json",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "req": [],
                "resp": [],
                "resource": [],
                "params": []
            }
        }
    },
    "test-falcon-master/sample/extentions/print_log_middleware.py": {
        "PrintLogMiddleware.process_request": {
            "name": "process_request",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "PrintLogMiddleware.process_resource": {
            "name": "process_resource",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "resource": [],
                "params": []
            }
        },
        "PrintLogMiddleware.process_response": {
            "name": "process_response",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "resource": [],
                "req_succeeded": []
            }
        }
    },
    "test-falcon-master/sample/extentions/__init__.py": {},
    "test-falcon-master/sample/resources/applications.py": {
        "Applications.on_post": {
            "name": "on_post",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        }
    },
    "test-falcon-master/sample/resources/auth.py": {
        "Login.on_post": {
            "name": "on_post",
            "location": 18,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        }
    },
    "test-falcon-master/sample/resources/hello.py": {
        "Hello.on_get": {
            "name": "on_get",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        }
    },
    "test-falcon-master/sample/resources/users.py": {
        "User.on_get": {
            "name": "on_get",
            "location": 15,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "user_id": []
            }
        },
        "User.on_put": {
            "name": "on_put",
            "location": 23,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "user_id": []
            }
        },
        "User.on_delete": {
            "name": "on_delete",
            "location": 42,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "user_id": []
            }
        },
        "Users.on_get": {
            "name": "on_get",
            "location": 61,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "Users.on_post": {
            "name": "on_post",
            "location": 66,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        }
    },
    "test-falcon-master/sample/resources/__init__.py": {},
    "test-falcon-master/sample_tests/sample_api_test.py": {
        "MyTestCase.setUp": {
            "name": "setUp",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyApp.test_01_hello": {
            "name": "test_01_hello",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyApp.test_02_create_user": {
            "name": "test_02_create_user",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyApp.test_03_get_user": {
            "name": "test_03_get_user",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyApp.test_04_get_users": {
            "name": "test_04_get_users",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyApp.test_05_update_user": {
            "name": "test_05_update_user",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestMyApp.test_06_delete_user": {
            "name": "test_06_delete_user",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "test-falcon-master/sample_tests/__init__.py": {},
    "test-falcon-master/tests/test_app.py": {
        "mock_store": {
            "name": "mock_store",
            "location": 19,
            "return": [],
            "arguments": {}
        },
        "client": {
            "name": "client",
            "location": 24,
            "return": [],
            "arguments": {
                "mock_store": []
            }
        },
        "test_list_images": {
            "name": "test_list_images",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "client": []
            }
        },
        "test_post_image": {
            "name": "test_post_image",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "client": [],
                "mock_store": []
            }
        },
        "test_saving_image": {
            "name": "test_saving_image",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_saving_image.mock_uuidgen": {
            "name": "mock_uuidgen",
            "location": 76,
            "return": [],
            "arguments": {}
        }
    },
    "test-falcon-master/tests/test_integration.py": {
        "test_posted_image_gets_saved": {
            "name": "test_posted_image_gets_saved",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "test-falcon-master/tests/__init__.py": {},
    "test-falcon-master/thing/app.py": {
        "max_body": {
            "name": "max_body",
            "location": 129,
            "return": [
                "Callable[([Any, Any, Any, Any], Any)]"
            ],
            "arguments": {
                "limit": []
            }
        },
        "get_app": {
            "name": "get_app",
            "location": 224,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "StorageEngine.get_things": {
            "name": "get_things",
            "location": 12,
            "return": [
                "List[Dict[(str, str)]]"
            ],
            "arguments": {
                "self": [],
                "marker": [],
                "limit": []
            }
        },
        "StorageEngine.add_thing": {
            "name": "add_thing",
            "location": 15,
            "return": [
                "_T0"
            ],
            "arguments": {
                "self": [],
                "thing": [
                    "_T0"
                ]
            }
        },
        "StorageError.handle": {
            "name": "handle",
            "location": 23,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "ex": [],
                "req": [],
                "resp": [],
                "params": []
            }
        },
        "SinkAdapter.__call__": {
            "name": "__call__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "engine": []
            }
        },
        "AuthMiddleware.process_request": {
            "name": "process_request",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "AuthMiddleware._token_is_valid": {
            "name": "_token_is_valid",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "token": [],
                "account_id": []
            }
        },
        "RequireJSON.process_request": {
            "name": "process_request",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "JSONTranslator.process_request": {
            "name": "process_request",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": []
            }
        },
        "JSONTranslator.process_response": {
            "name": "process_response",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "resource": []
            }
        },
        "max_body.hook": {
            "name": "hook",
            "location": 131,
            "return": [],
            "arguments": {
                "req": [],
                "resp": [],
                "resource": [],
                "params": []
            }
        },
        "ThingsResource.__init__": {
            "name": "__init__",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": []
            }
        },
        "ThingsResource.on_get": {
            "name": "on_get",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "user_id": []
            }
        },
        "ThingsResource.on_post": {
            "name": "on_post",
            "location": 180,
            "return": [],
            "arguments": {
                "self": [],
                "req": [],
                "resp": [],
                "user_id": []
            }
        }
    },
    "test-falcon-master/thing/__init__.py": {}
}
{
    "thanks-python-master/manage.py": {},
    "thanks-python-master/merge_production_dotenvs_in_dotenv.py": {
        "merge": {
            "name": "merge",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "output_file_path": [
                    "str"
                ],
                "merged_file_paths": [
                    "Sequence[str]"
                ],
                "append_linesep": [
                    "bool"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_merge": {
            "name": "test_merge",
            "location": 34,
            "return": [],
            "arguments": {
                "tmpdir_factory": [],
                "merged_file_count": [],
                "append_linesep": []
            }
        }
    },
    "thanks-python-master/config/urls.py": {},
    "thanks-python-master/config/wsgi.py": {},
    "thanks-python-master/config/__init__.py": {},
    "thanks-python-master/config/settings/base.py": {},
    "thanks-python-master/config/settings/local.py": {},
    "thanks-python-master/config/settings/production.py": {},
    "thanks-python-master/config/settings/test.py": {},
    "thanks-python-master/config/settings/__init__.py": {},
    "thanks-python-master/docs/conf.py": {},
    "thanks-python-master/docs/__init__.py": {},
    "thanks-python-master/thanks_python/conftest.py": {
        "media_storage": {
            "name": "media_storage",
            "location": 7,
            "return": [],
            "arguments": {
                "settings": [],
                "tmpdir": []
            }
        },
        "request_factory": {
            "name": "request_factory",
            "location": 11,
            "return": [],
            "arguments": {}
        }
    },
    "thanks-python-master/thanks_python/__init__.py": {},
    "thanks-python-master/thanks_python/contrib/__init__.py": {},
    "thanks-python-master/thanks_python/contrib/sites/__init__.py": {},
    "thanks-python-master/thanks_python/contrib/sites/migrations/0001_initial.py": {},
    "thanks-python-master/thanks_python/contrib/sites/migrations/0002_alter_domain_unique.py": {},
    "thanks-python-master/thanks_python/contrib/sites/migrations/0003_set_site_domain_and_name.py": {
        "update_site_forward": {
            "name": "update_site_forward",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        },
        "update_site_backward": {
            "name": "update_site_backward",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "apps": [],
                "schema_editor": []
            }
        }
    },
    "thanks-python-master/thanks_python/contrib/sites/migrations/__init__.py": {},
    "thanks-python-master/thanks_python/contributions/admin.py": {},
    "thanks-python-master/thanks_python/contributions/apps.py": {},
    "thanks-python-master/thanks_python/contributions/canonical_name.py": {
        "canonical_name": {
            "name": "canonical_name",
            "location": 6,
            "return": [
                "Union[(str, _T0)]"
            ],
            "arguments": {
                "name": [
                    "_T0"
                ],
                "email": []
            }
        }
    },
    "thanks-python-master/thanks_python/contributions/models.py": {
        "Contributor.__repr__": {
            "name": "__repr__",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Contributor.__str__": {
            "name": "__str__",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.__repr__": {
            "name": "__repr__",
            "location": 17,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.__str__": {
            "name": "__str__",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.__repr__": {
            "name": "__repr__",
            "location": 33,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Commit.__str__": {
            "name": "__str__",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "thanks-python-master/thanks_python/contributions/tasks.py": {
        "setup_cpython_repo": {
            "name": "setup_cpython_repo",
            "location": 24,
            "return": [],
            "arguments": {}
        },
        "update_cpython_repo": {
            "name": "update_cpython_repo",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "repo": []
            }
        },
        "update_database_objects": {
            "name": "update_database_objects",
            "location": 44,
            "return": [],
            "arguments": {}
        },
        "update_tags": {
            "name": "update_tags",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "repo": []
            }
        },
        "commit_canonical_author_name": {
            "name": "commit_canonical_author_name",
            "location": 96,
            "return": [],
            "arguments": {
                "repo": [],
                "commit": []
            }
        },
        "get_original_commit_author": {
            "name": "get_original_commit_author",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "repo": [],
                "commit": []
            }
        },
        "update_commits": {
            "name": "update_commits",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {
                "repo": []
            }
        }
    },
    "thanks-python-master/thanks_python/contributions/tests.py": {},
    "thanks-python-master/thanks_python/contributions/urls.py": {},
    "thanks-python-master/thanks_python/contributions/views.py": {
        "all_time": {
            "name": "all_time",
            "location": 17,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": []
            }
        },
        "tag_contributors": {
            "name": "tag_contributors",
            "location": 120,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": [],
                "tag": []
            }
        },
        "index": {
            "name": "index",
            "location": 129,
            "return": [
                "Any"
            ],
            "arguments": {
                "request": []
            }
        },
        "FilterCommitListView.get_table_kwargs": {
            "name": "get_table_kwargs",
            "location": 69,
            "return": [
                "Dict[(str, str)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "FilterCommitListView.get_filterset_kwargs": {
            "name": "get_filterset_kwargs",
            "location": 72,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "filterset_class": []
            }
        },
        "ContributorCommitsView.get_queryset": {
            "name": "get_queryset",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ContributorCommitsView.get_context_data": {
            "name": "get_context_data",
            "location": 88,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommitsSinceListView._target_date": {
            "name": "_target_date",
            "location": 100,
            "return": [
                "datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommitsSinceListView.get_queryset": {
            "name": "get_queryset",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "CommitsSinceListView.get_context_data": {
            "name": "get_context_data",
            "location": 114,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "thanks-python-master/thanks_python/contributions/__init__.py": {},
    "thanks-python-master/thanks_python/contributions/migrations/0001_initial.py": {},
    "thanks-python-master/thanks_python/contributions/migrations/__init__.py": {},
    "thanks-python-master/thanks_python/taskapp/celery.py": {
        "debug_task": {
            "name": "debug_task",
            "location": 46,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "CeleryAppConfig.ready": {
            "name": "ready",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InitRepoStep.start": {
            "name": "start",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "c": []
            }
        }
    },
    "thanks-python-master/thanks_python/taskapp/__init__.py": {}
}
{
    "todoist-habitica-sync-main/src/config.py": {
        "positive_int": {
            "name": "positive_int",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {
                "value": []
            }
        },
        "get_settings": {
            "name": "get_settings",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "Settings.minutes_to_seconds": {
            "name": "minutes_to_seconds",
            "location": 44,
            "return": [],
            "arguments": {
                "cls": [],
                "value": []
            }
        }
    },
    "todoist-habitica-sync-main/src/delay.py": {
        "DelayTimer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "max_delay": [],
                "msg": []
            }
        },
        "DelayTimer.__call__": {
            "name": "__call__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "todoist-habitica-sync-main/src/habitica_api.py": {
        "HabiticaAPI.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "headers": [],
                "resource": [],
                "aspect": []
            }
        },
        "HabiticaAPI.__getattr__": {
            "name": "__getattr__",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "HabiticaAPI.__call__": {
            "name": "__call__",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "todoist-habitica-sync-main/src/main.py": {
        "TasksSync.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksSync.run_forever": {
            "name": "run_forever",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksSync._sync_todoist": {
            "name": "_sync_todoist",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksSync._next_state_with_existing_generic_task": {
            "name": "_next_state_with_existing_generic_task",
            "location": 59,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "todoist_task": [],
                "generic_task": []
            }
        },
        "TasksSync._next_state_with_new_generic_task": {
            "name": "_next_state_with_new_generic_task",
            "location": 68,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "todoist_task": [],
                "initial_sync": []
            }
        },
        "TasksSync._next_tasks_state_based_on_todoist": {
            "name": "_next_tasks_state_based_on_todoist",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksSync._should_task_score_points": {
            "name": "_should_task_score_points",
            "location": 109,
            "return": [
                "bool"
            ],
            "arguments": {
                "todoist_task": [],
                "generic_task": []
            }
        },
        "TasksSync._owned_by_me": {
            "name": "_owned_by_me",
            "location": 128,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "todoist_task": []
            }
        },
        "TasksSync._next_tasks_state_in_habitica": {
            "name": "_next_tasks_state_in_habitica",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "todoist-habitica-sync-main/src/tasks_cache.py": {
        "TasksCache.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksCache.__len__": {
            "name": "__len__",
            "location": 30,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TasksCache.get_task_by_todoist_task_id": {
            "name": "get_task_by_todoist_task_id",
            "location": 33,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "todoist_task": []
            }
        },
        "TasksCache.set_task_state": {
            "name": "set_task_state",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generic_task": [],
                "new_state": []
            }
        },
        "TasksCache.set_habitica_id": {
            "name": "set_habitica_id",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generic_task": [],
                "new_habitica_task_id": []
            }
        },
        "TasksCache.save_task": {
            "name": "save_task",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "generic_task": [],
                "previous_habitica_id": []
            }
        },
        "TasksCache.dirty_habitica_tasks": {
            "name": "dirty_habitica_tasks",
            "location": 62,
            "return": [
                "Generator[(models.generic_task.GenericTask, Any, None)]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "todoist-habitica-sync-main/src/models/generic_task.py": {
        "GenericTask.__post_init__": {
            "name": "__post_init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GenericTask.from_todoist_task": {
            "name": "from_todoist_task",
            "location": 32,
            "return": [
                "GenericTask"
            ],
            "arguments": {
                "todoist_task": [],
                "task_state": []
            }
        }
    },
    "todoist-habitica-sync-main/src/models/habitica_task.py": {
        "HabiticaTask.from_task_data": {
            "name": "from_task_data",
            "location": 20,
            "return": [
                "HabiticaTask"
            ],
            "arguments": {
                "task_data": []
            }
        }
    },
    "todoist-habitica-sync-main/src/models/todoist_task.py": {
        "TodoistTask.from_task_data": {
            "name": "from_task_data",
            "location": 22,
            "return": [
                "TodoistTask"
            ],
            "arguments": {
                "task_data": []
            }
        }
    },
    "todoist-habitica-sync-main/src/models/__init__.py": {},
    "todoist-habitica-sync-main/tests/integration/mock_test.py": {
        "TestMock.should_always_pass": {
            "name": "should_always_pass",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "todoist-habitica-sync-main/tests/integration/__init__.py": {},
    "todoist-habitica-sync-main/tests/unit/mock_test.py": {
        "TestMock.should_always_pass": {
            "name": "should_always_pass",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "todoist-habitica-sync-main/tests/unit/__init__.py": {}
}
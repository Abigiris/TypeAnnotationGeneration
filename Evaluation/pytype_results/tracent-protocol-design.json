{
    "tracent-protocol-design/stubs/google/__init__.py": {},
    "tracent-protocol-design/stubs/google/protobuf/__init__.py": {},
    "tracent-protocol-design/test/test_eu.py": {
        "TestTracingDataHeader.testRoutingInfoCanBeExtracted": {
            "name": "testRoutingInfoCanBeExtracted",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InMemoryReporter.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "InMemoryReporter.send": {
            "name": "send",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "routing_key": [],
                "serialized_tracing_data": []
            }
        },
        "InMemoryReporter.broadcast": {
            "name": "broadcast",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "serialized_tracing_data": []
            }
        },
        "InMemoryReporter._to_text": {
            "name": "_to_text",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "serialized_tracing_data": []
            }
        },
        "TestEU.setUp": {
            "name": "setUp",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEU.testCreateAndDestroyEU": {
            "name": "testCreateAndDestroyEU",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestEU.testCrossEuTrace": {
            "name": "testCrossEuTrace",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tracent-protocol-design/test/test_eye.py": {
        "TracentEyeTestCase.setUp": {
            "name": "setUp",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TracentEyeTestCase.test_simple_diagram": {
            "name": "test_simple_diagram",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tracent-protocol-design/test/__init__.py": {},
    "tracent-protocol-design/tracent/__init__.py": {},
    "tracent-protocol-design/tracent/eventmodel/concurrency_model.py": {
        "ConcurrencyModel.__init__": {
            "name": "__init__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trace_builder": []
            }
        },
        "ConcurrencyModel.get_eu": {
            "name": "get_eu",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcurrencyModel.finish": {
            "name": "finish",
            "location": 44,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PythonThreads.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trace_builder": []
            }
        },
        "PythonThreads.get_eu": {
            "name": "get_eu",
            "location": 60,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "PythonThreads.finish": {
            "name": "finish",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcurrencyModel.Acquirable.release": {
            "name": "release",
            "location": 27,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcurrencyModel.Acquirable.locked": {
            "name": "locked",
            "location": 30,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ConcurrencyModel.Acquirable.acquire": {
            "name": "acquire",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "blocking": []
            }
        }
    },
    "tracent-protocol-design/tracent/eventmodel/eu.py": {
        "ExecutionUnit.__init__": {
            "name": "__init__",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trace_builder": [],
                "eu_type": []
            }
        },
        "ExecutionUnit._init_event_numbering": {
            "name": "_init_event_numbering",
            "location": 46,
            "return": [
                "Callable[([], Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecutionUnit.trace_point": {
            "name": "trace_point",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "trace_id": [],
                "event_type": [],
                "status": [],
                "causes": [],
                "tags": []
            }
        },
        "ExecutionUnit._get_event_id": {
            "name": "_get_event_id",
            "location": 96,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": [],
                "event_sequence_number": []
            }
        },
        "ExecutionUnit.get_trace_context": {
            "name": "get_trace_context",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecutionUnit.peek": {
            "name": "peek",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecutionUnit.add_tags": {
            "name": "add_tags",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecutionUnit._flush_tags": {
            "name": "_flush_tags",
            "location": 132,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecutionUnit.finish": {
            "name": "finish",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExecutionUnit._init_event_numbering._generate_next_event_id": {
            "name": "_generate_next_event_id",
            "location": 49,
            "return": [],
            "arguments": {}
        }
    },
    "tracent-protocol-design/tracent/eventmodel/reporter.py": {
        "AbstractReporter.send": {
            "name": "send",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "routing_key": [],
                "serialized_tracing_data": []
            }
        },
        "AbstractReporter.broadcast": {
            "name": "broadcast",
            "location": 21,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "serialized_tracing_data": []
            }
        }
    },
    "tracent-protocol-design/tracent/eventmodel/tracebuilder.py": {
        "AbstractTraceBuilder.start_eu": {
            "name": "start_eu",
            "location": 46,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "eu_type": [],
                "tags": []
            }
        },
        "AbstractTraceBuilder.finish_eu": {
            "name": "finish_eu",
            "location": 54,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "eu_id": []
            }
        },
        "AbstractTraceBuilder.start_trace": {
            "name": "start_trace",
            "location": 62,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "trace_id": []
            }
        },
        "AbstractTraceBuilder.add_event": {
            "name": "add_event",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "trace_id": [],
                "sequence_number": [],
                "event_type": [],
                "status": [],
                "causes": []
            }
        },
        "AbstractTraceBuilder.add_tags": {
            "name": "add_tags",
            "location": 73,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "event_sequence_number": [],
                "tags": []
            }
        },
        "AbstractTraceBuilder.finish_trace": {
            "name": "finish_trace",
            "location": 79,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "trace_id": []
            }
        },
        "SimpleTraceBuilder.__init__": {
            "name": "__init__",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "reporter": []
            }
        },
        "SimpleTraceBuilder.start_eu": {
            "name": "start_eu",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "eu_type": [],
                "tags": []
            }
        },
        "SimpleTraceBuilder.finish_eu": {
            "name": "finish_eu",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "eu_id": []
            }
        },
        "SimpleTraceBuilder.start_trace": {
            "name": "start_trace",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "trace_id": []
            }
        },
        "SimpleTraceBuilder.finish_trace": {
            "name": "finish_trace",
            "location": 148,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "trace_id": []
            }
        },
        "SimpleTraceBuilder.add_event": {
            "name": "add_event",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "trace_id": [],
                "sequence_number": [],
                "event_type": [],
                "status": [],
                "causes": []
            }
        },
        "SimpleTraceBuilder.add_tags": {
            "name": "add_tags",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "eu_id": [],
                "event_sequence_number": [],
                "tags": []
            }
        },
        "SimpleTraceBuilder._add_tag": {
            "name": "_add_tag",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_container": [],
                "key": [],
                "value": [],
                "encode_string_values": []
            }
        },
        "SimpleTraceBuilder._send": {
            "name": "_send",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tracing_data_pdu": []
            }
        },
        "StringTable.__init__": {
            "name": "__init__",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StringTable.get_alias": {
            "name": "get_alias",
            "location": 267,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "string": []
            }
        },
        "StringTable.save_to": {
            "name": "save_to",
            "location": 287,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "entries": []
            }
        },
        "SimpleTraceBuilder.EuState.__repr__": {
            "name": "__repr__",
            "location": 103,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tracent-protocol-design/tracent/eventmodel/__init__.py": {
        "delegate_to": {
            "name": "delegate_to",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "f": []
            }
        },
        "tracent": {
            "name": "tracent",
            "location": 86,
            "return": [
                "Tracent"
            ],
            "arguments": {}
        },
        "delegate_to._delegate_to_eu": {
            "name": "_delegate_to_eu",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tracent.__init__": {
            "name": "__init__",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tracent.lock_class": {
            "name": "lock_class",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tracent.my_eu_id": {
            "name": "my_eu_id",
            "location": 55,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Tracent.set_threading_model": {
            "name": "set_threading_model",
            "location": 60,
            "return": [
                "_TTracent@@Tracent@@"
            ],
            "arguments": {
                "self": [
                    "_TTracent@@Tracent@@"
                ],
                "threading_model_class": []
            }
        },
        "Tracent.set_reporter": {
            "name": "set_reporter",
            "location": 66,
            "return": [
                "_TTracent@@Tracent@@"
            ],
            "arguments": {
                "self": [
                    "_TTracent@@Tracent@@"
                ],
                "reporter": []
            }
        },
        "Tracent.start_tracing": {
            "name": "start_tracing",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trace_builder_class": []
            }
        }
    },
    "tracent-protocol-design/tracent/oob/tracent_pb2.py": {},
    "tracent-protocol-design/tracent/oob/__init__.py": {},
    "tracent-protocol-design/tracent/opentracing/binary_propagator.py": {
        "SimpleBinaryPropagator.inject": {
            "name": "inject",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "span_context": [],
                "carrier": []
            }
        },
        "SimpleBinaryPropagator.extract": {
            "name": "extract",
            "location": 35,
            "return": [
                "tracent.opentracing.context.SpanContext"
            ],
            "arguments": {
                "self": [],
                "carrier": []
            }
        }
    },
    "tracent-protocol-design/tracent/opentracing/context.py": {
        "SpanContext.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "event_reference": [],
                "baggage": []
            }
        },
        "SpanContext.baggage": {
            "name": "baggage",
            "location": 22,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SpanContext.with_baggage_item": {
            "name": "with_baggage_item",
            "location": 25,
            "return": [
                "_TSpanContext@@SpanContext@@"
            ],
            "arguments": {
                "self": [
                    "_TSpanContext@@SpanContext@@"
                ],
                "key": [],
                "value": []
            }
        }
    },
    "tracent-protocol-design/tracent/opentracing/propagator.py": {
        "Propagator.inject": {
            "name": "inject",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "span_context": [],
                "carrier": []
            }
        },
        "Propagator.extract": {
            "name": "extract",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "carrier": []
            }
        }
    },
    "tracent-protocol-design/tracent/opentracing/span.py": {
        "EventBasedSpan.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tracer": [],
                "trace_id": [],
                "operation_name": [],
                "causes": [],
                "tags": []
            }
        },
        "EventBasedSpan.set_operation_name": {
            "name": "set_operation_name",
            "location": 54,
            "return": [
                "_TEventBasedSpan@@EventBasedSpan@@"
            ],
            "arguments": {
                "self": [
                    "_TEventBasedSpan@@EventBasedSpan@@"
                ],
                "operation_name": []
            }
        },
        "EventBasedSpan.set_tag": {
            "name": "set_tag",
            "location": 58,
            "return": [
                "_TEventBasedSpan@@EventBasedSpan@@"
            ],
            "arguments": {
                "self": [
                    "_TEventBasedSpan@@EventBasedSpan@@"
                ],
                "key": [],
                "value": []
            }
        },
        "EventBasedSpan.log_kv": {
            "name": "log_kv",
            "location": 62,
            "return": [
                "_TEventBasedSpan@@EventBasedSpan@@"
            ],
            "arguments": {
                "self": [
                    "_TEventBasedSpan@@EventBasedSpan@@"
                ],
                "key_values": [],
                "timestamp": []
            }
        },
        "EventBasedSpan.finish": {
            "name": "finish",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "finish_time": []
            }
        },
        "EventBasedSpan.context": {
            "name": "context",
            "location": 94,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventBasedSpan.set_baggage_item": {
            "name": "set_baggage_item",
            "location": 108,
            "return": [
                "_TEventBasedSpan@@EventBasedSpan@@"
            ],
            "arguments": {
                "self": [
                    "_TEventBasedSpan@@EventBasedSpan@@"
                ],
                "key": [],
                "value": []
            }
        },
        "EventBasedSpan.get_baggage_item": {
            "name": "get_baggage_item",
            "location": 114,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        }
    },
    "tracent-protocol-design/tracent/opentracing/text_propagator.py": {
        "TextPropagator.inject": {
            "name": "inject",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "span_context": [],
                "carrier": []
            }
        },
        "TextPropagator.extract": {
            "name": "extract",
            "location": 32,
            "return": [
                "tracent.opentracing.context.SpanContext"
            ],
            "arguments": {
                "self": [],
                "carrier": []
            }
        }
    },
    "tracent-protocol-design/tracent/opentracing/tracer.py": {
        "EventBasedTracer.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "scope_manager": []
            }
        },
        "EventBasedTracer.register_propagator": {
            "name": "register_propagator",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "format_identifier": [],
                "propagator": []
            }
        },
        "EventBasedTracer.register_required_propagators": {
            "name": "register_required_propagators",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EventBasedTracer.start_active_span": {
            "name": "start_active_span",
            "location": 48,
            "return": [
                "opentracing.scope.Scope"
            ],
            "arguments": {
                "self": [],
                "operation_name": [],
                "child_of": [],
                "references": [],
                "tags": [],
                "start_time": [],
                "ignore_active_span": [],
                "finish_on_close": []
            }
        },
        "EventBasedTracer.start_span": {
            "name": "start_span",
            "location": 69,
            "return": [
                "tracent.opentracing.span.EventBasedSpan"
            ],
            "arguments": {
                "self": [],
                "operation_name": [],
                "child_of": [],
                "references": [],
                "tags": [],
                "start_time": [],
                "ignore_active_span": []
            }
        },
        "EventBasedTracer.inject": {
            "name": "inject",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "span_context": [],
                "format": [],
                "carrier": []
            }
        },
        "EventBasedTracer.extract": {
            "name": "extract",
            "location": 109,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "format": [],
                "carrier": []
            }
        }
    },
    "tracent-protocol-design/tracent/opentracing/w3c_propagator.py": {
        "W3CPropagator.inject": {
            "name": "inject",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "span_context": [],
                "carrier": []
            }
        },
        "W3CPropagator.extract": {
            "name": "extract",
            "location": 37,
            "return": [
                "tracent.opentracing.context.SpanContext"
            ],
            "arguments": {
                "self": [],
                "carrier": []
            }
        }
    },
    "tracent-protocol-design/tracent/opentracing/__init__.py": {},
    "tracent-protocol-design/tracent_eye/layout_generator.py": {
        "LayoutGenerator.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LayoutGenerator.visit_trace_diagram": {
            "name": "visit_trace_diagram",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_life_line": {
            "name": "visit_life_line",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_head": {
            "name": "visit_head",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_vertex": {
            "name": "visit_vertex",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_destruction": {
            "name": "visit_destruction",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_activation": {
            "name": "visit_activation",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_foot": {
            "name": "visit_foot",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_spine": {
            "name": "visit_spine",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator.visit_edge": {
            "name": "visit_edge",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "LayoutGenerator._visit_base_edge": {
            "name": "_visit_base_edge",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "de": []
            }
        }
    },
    "tracent-protocol-design/tracent_eye/svg_renderer.py": {
        "MockFont.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "row_distance": [],
                "glyph_width": [],
                "horizontal_margin": [],
                "vertical_margin": [],
                "vertical_offset": []
            }
        },
        "MockFont.get_bounding_box": {
            "name": "get_bounding_box",
            "location": 34,
            "return": [
                "Tuple[(Any, Tuple[(int, int)], int)]"
            ],
            "arguments": {
                "self": [],
                "lines": []
            }
        },
        "Shape.__init__": {
            "name": "__init__",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": [],
                "g": []
            }
        },
        "PrebuiltShape.__init__": {
            "name": "__init__",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": [],
                "g": []
            }
        },
        "PrebuiltShape._pre_build": {
            "name": "_pre_build",
            "location": 106,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "DotLikeShape.__call__": {
            "name": "__call__",
            "location": 124,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DotLikeShape._get_text_lines": {
            "name": "_get_text_lines",
            "location": 138,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "de": []
            }
        },
        "DotLikeShape._align_bb": {
            "name": "_align_bb",
            "location": 147,
            "return": [
                "Any"
            ],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "DotLikeShape._build_shape": {
            "name": "_build_shape",
            "location": 151,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "lines": [],
                "bb_insert": [],
                "bb_size": [],
                "text_offset": [],
                "row_distance": []
            }
        },
        "WithTags._get_text_lines": {
            "name": "_get_text_lines",
            "location": 160,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "de": []
            }
        },
        "SymbolBasedShapeBuilder._pre_build": {
            "name": "_pre_build",
            "location": 167,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolBasedShapeBuilder._build_symbol": {
            "name": "_build_symbol",
            "location": 173,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolBasedShapeBuilder._build_shape": {
            "name": "_build_shape",
            "location": 175,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "lines": [],
                "bb_insert": [],
                "bb_size": [],
                "text_offset": [],
                "row_distance": []
            }
        },
        "Rectangle.__init__": {
            "name": "__init__",
            "location": 201,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": [],
                "g": [],
                "size": []
            }
        },
        "Rectangle._build_symbol": {
            "name": "_build_symbol",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Circle.__init__": {
            "name": "__init__",
            "location": 213,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": [],
                "g": [],
                "radius": []
            }
        },
        "Circle._build_symbol": {
            "name": "_build_symbol",
            "location": 217,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "XCross.__init__": {
            "name": "__init__",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": [],
                "g": [],
                "size": []
            }
        },
        "XCross._build_symbol": {
            "name": "_build_symbol",
            "location": 230,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AlignTopMiddle._align_bb": {
            "name": "_align_bb",
            "location": 244,
            "return": [
                "Any"
            ],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "AlignBottomMiddle._align_bb": {
            "name": "_align_bb",
            "location": 253,
            "return": [
                "Any"
            ],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "AlignCenterMiddle._align_bb": {
            "name": "_align_bb",
            "location": 263,
            "return": [
                "Any"
            ],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "AlignCenterLeft._align_bb": {
            "name": "_align_bb",
            "location": 272,
            "return": [
                "Any"
            ],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "AlignCenterRight._align_bb": {
            "name": "_align_bb",
            "location": 281,
            "return": [
                "Any"
            ],
            "arguments": {
                "position": [],
                "size": []
            }
        },
        "LineLikeShape.__call__": {
            "name": "__call__",
            "location": 304,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        },
        "ArrowLikeShape._pre_build": {
            "name": "_pre_build",
            "location": 332,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArrowLikeShape._build_arrow": {
            "name": "_build_arrow",
            "location": 344,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArrowLikeShape.__call__": {
            "name": "__call__",
            "location": 349,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "start": [],
                "end": []
            }
        },
        "SymbolSet._make_builder": {
            "name": "_make_builder",
            "location": 391,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "bases": [],
                "group": []
            }
        },
        "SymbolSet.__init__": {
            "name": "__init__",
            "location": 395,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": []
            }
        },
        "SymbolSet.head": {
            "name": "head",
            "location": 410,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.foot": {
            "name": "foot",
            "location": 415,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.vertex": {
            "name": "vertex",
            "location": 420,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.destruction": {
            "name": "destruction",
            "location": 425,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.activation": {
            "name": "activation",
            "location": 430,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.spine": {
            "name": "spine",
            "location": 435,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.edge": {
            "name": "edge",
            "location": 440,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.head_group": {
            "name": "head_group",
            "location": 444,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.foot_group": {
            "name": "foot_group",
            "location": 449,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.vertex_group": {
            "name": "vertex_group",
            "location": 454,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.destruction_group": {
            "name": "destruction_group",
            "location": 459,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.activation_group": {
            "name": "activation_group",
            "location": 464,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.spine_group": {
            "name": "spine_group",
            "location": 469,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "SymbolSet.edge_group": {
            "name": "edge_group",
            "location": 474,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerticalSymbols.__init__": {
            "name": "__init__",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": []
            }
        },
        "SimpleVerticalSymbols.__init__": {
            "name": "__init__",
            "location": 501,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "drawing": []
            }
        },
        "SVGRenderer.__init__": {
            "name": "__init__",
            "location": 518,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filename": [],
                "symbol_set": []
            }
        },
        "SVGRenderer.visit_trace_diagram": {
            "name": "visit_trace_diagram",
            "location": 522,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.visit_life_line": {
            "name": "visit_life_line",
            "location": 532,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.visit_head": {
            "name": "visit_head",
            "location": 535,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "head": []
            }
        },
        "SVGRenderer.visit_vertex": {
            "name": "visit_vertex",
            "location": 538,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.visit_destruction": {
            "name": "visit_destruction",
            "location": 541,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.visit_activation": {
            "name": "visit_activation",
            "location": 544,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.visit_foot": {
            "name": "visit_foot",
            "location": 547,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.visit_spine": {
            "name": "visit_spine",
            "location": 550,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.visit_edge": {
            "name": "visit_edge",
            "location": 553,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "SVGRenderer.drawing": {
            "name": "drawing",
            "location": 557,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tracent-protocol-design/tracent_eye/trace_diagram.py": {
        "Point.__add__": {
            "name": "__add__",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__sub__": {
            "name": "__sub__",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__mul__": {
            "name": "__mul__",
            "location": 42,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Point.__abs__": {
            "name": "__abs__",
            "location": 48,
            "return": [
                "float"
            ],
            "arguments": {
                "self": []
            }
        },
        "DiagramElement.accept": {
            "name": "accept",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "DiagramVisitor.__init_subclass__": {
            "name": "__init_subclass__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "DiagramVisitor.visit_trace_diagram": {
            "name": "visit_trace_diagram",
            "location": 109,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_life_line": {
            "name": "visit_life_line",
            "location": 112,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_head": {
            "name": "visit_head",
            "location": 115,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_foot": {
            "name": "visit_foot",
            "location": 118,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_spine": {
            "name": "visit_spine",
            "location": 121,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_vertex": {
            "name": "visit_vertex",
            "location": 124,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_destruction": {
            "name": "visit_destruction",
            "location": 127,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_activation": {
            "name": "visit_activation",
            "location": 130,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit_edge": {
            "name": "visit_edge",
            "location": 133,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "DiagramVisitor.visit": {
            "name": "visit",
            "location": 135,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "de": []
            }
        },
        "TraceDiagram.__init__": {
            "name": "__init__",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "start_time": [],
                "time_scale": []
            }
        },
        "TraceDiagram.accept": {
            "name": "accept",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "LifeLine.__init__": {
            "name": "__init__",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "trace_diagram": [],
                "tags": []
            }
        },
        "LifeLine.accept": {
            "name": "accept",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "visitor": []
            }
        },
        "Head.__init__": {
            "name": "__init__",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "life_line": [],
                "tags": []
            }
        },
        "Foot.__init__": {
            "name": "__init__",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "life_line": [],
                "tags": []
            }
        },
        "Spine.__init__": {
            "name": "__init__",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "life_line": []
            }
        },
        "Vertex.__init__": {
            "name": "__init__",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "life_line": [],
                "time_stamp": [],
                "tags": []
            }
        },
        "_BaseEdge.__init__": {
            "name": "__init__",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fro": [],
                "to": []
            }
        },
        "Activation.__init__": {
            "name": "__init__",
            "location": 303,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fro": [],
                "to": []
            }
        },
        "Edge.__init__": {
            "name": "__init__",
            "location": 317,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fro": [],
                "to": []
            }
        }
    },
    "tracent-protocol-design/tracent_eye/__init__.py": {}
}
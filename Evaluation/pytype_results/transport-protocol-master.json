{
    "transport-protocol-master/setup.py": {
        "get_version": {
            "name": "get_version",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "get_long_description": {
            "name": "get_long_description",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "transport-protocol-master/adbtp/async.py": {
        "read_header": {
            "name": "read_header",
            "location": 87,
            "return": [],
            "arguments": {
                "transport": [],
                "timeout": []
            }
        },
        "read_payload": {
            "name": "read_payload",
            "location": 107,
            "return": [],
            "arguments": {
                "header": [],
                "transport": [],
                "timeout": []
            }
        },
        "write_header": {
            "name": "write_header",
            "location": 131,
            "return": [],
            "arguments": {
                "header": [],
                "transport": [],
                "timeout": []
            }
        },
        "write_payload": {
            "name": "write_payload",
            "location": 152,
            "return": [],
            "arguments": {
                "message": [],
                "transport": [],
                "timeout": []
            }
        },
        "Protocol.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "Protocol.closed": {
            "name": "closed",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Protocol.read": {
            "name": "read",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "Protocol.write": {
            "name": "write",
            "location": 56,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "timeout": []
            }
        },
        "Protocol.close": {
            "name": "close",
            "location": 73,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "transport-protocol-master/adbtp/exceptions.py": {
        "reraise": {
            "name": "reraise",
            "location": 44,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "exc_to_catch": [
                    "Union[(Tuple[(ExceptionType, ...)], ExceptionType)]"
                ]
            }
        },
        "reraise_timeout_errors": {
            "name": "reraise_timeout_errors",
            "location": 63,
            "return": [
                "Callable[([Any], Any)]"
            ],
            "arguments": {
                "exc_to_catch": [
                    "None"
                ]
            }
        },
        "reraise.decorator": {
            "name": "decorator",
            "location": 52,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "reraise_timeout_errors.decorator": {
            "name": "decorator",
            "location": 71,
            "return": [],
            "arguments": {
                "func": []
            }
        },
        "reraise.decorator.wrapper": {
            "name": "wrapper",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "reraise_timeout_errors.decorator.wrapper": {
            "name": "wrapper",
            "location": 73,
            "return": [],
            "arguments": {}
        }
    },
    "transport-protocol-master/adbtp/hints.py": {},
    "transport-protocol-master/adbtp/protocol.py": {
        "ensure_opened": {
            "name": "ensure_opened",
            "location": 15,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "ensure_opened.decorator": {
            "name": "decorator",
            "location": 20,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Protocol.__enter__": {
            "name": "__enter__",
            "location": 32,
            "return": [
                "_TProtocol"
            ],
            "arguments": {
                "self": [
                    "_TProtocol"
                ]
            }
        },
        "Protocol.__exit__": {
            "name": "__exit__",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_val": [
                    "Optional[BaseException]"
                ],
                "exc_tb": []
            }
        },
        "Protocol.__repr__": {
            "name": "__repr__",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Protocol.closed": {
            "name": "closed",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Protocol.read": {
            "name": "read",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "Optional[float]"
                ]
            }
        },
        "Protocol.write": {
            "name": "write",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [],
                "timeout": [
                    "Optional[float]"
                ]
            }
        },
        "Protocol.close": {
            "name": "close",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "transport-protocol-master/adbtp/sync.py": {
        "read_header": {
            "name": "read_header",
            "location": 83,
            "return": [],
            "arguments": {
                "transport": [],
                "timeout": []
            }
        },
        "read_payload": {
            "name": "read_payload",
            "location": 102,
            "return": [],
            "arguments": {
                "header": [],
                "transport": [],
                "timeout": []
            }
        },
        "write_header": {
            "name": "write_header",
            "location": 124,
            "return": [],
            "arguments": {
                "header": [],
                "transport": [],
                "timeout": []
            }
        },
        "write_payload": {
            "name": "write_payload",
            "location": 144,
            "return": [],
            "arguments": {
                "message": [],
                "transport": [],
                "timeout": []
            }
        },
        "Protocol.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "transport": []
            }
        },
        "Protocol.closed": {
            "name": "closed",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Protocol.read": {
            "name": "read",
            "location": 38,
            "return": [],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "Protocol.write": {
            "name": "write",
            "location": 53,
            "return": [],
            "arguments": {
                "self": [],
                "message": [],
                "timeout": []
            }
        },
        "Protocol.close": {
            "name": "close",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "transport-protocol-master/adbtp/timeouts.py": {
        "ensure_started": {
            "name": "ensure_started",
            "location": 24,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "wrap": {
            "name": "wrap",
            "location": 191,
            "return": [
                "Union[(Timeout, _T0)]"
            ],
            "arguments": {
                "timeout": [
                    "_T0"
                ]
            }
        },
        "ensure_started.decorator": {
            "name": "decorator",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "period": [
                    "Optional[float]"
                ]
            }
        },
        "Timeout.__enter__": {
            "name": "__enter__",
            "location": 53,
            "return": [
                "_TTimeout"
            ],
            "arguments": {
                "self": [
                    "_TTimeout"
                ]
            }
        },
        "Timeout.__exit__": {
            "name": "__exit__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]"
                ],
                "exc_val": [
                    "Optional[BaseException]"
                ],
                "exc_tb": []
            }
        },
        "Timeout.__repr__": {
            "name": "__repr__",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timeout.__str__": {
            "name": "__str__",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timeout.undefined": {
            "name": "undefined",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.period": {
            "name": "period",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.started": {
            "name": "started",
            "location": 91,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.stopped": {
            "name": "stopped",
            "location": 101,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.exceeded": {
            "name": "exceeded",
            "location": 112,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.elapsed_seconds": {
            "name": "elapsed_seconds",
            "location": 123,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.elapsed_milliseconds": {
            "name": "elapsed_milliseconds",
            "location": 134,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.remaining_seconds": {
            "name": "remaining_seconds",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.remaining_milliseconds": {
            "name": "remaining_milliseconds",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Timeout.start": {
            "name": "start",
            "location": 165,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Timeout.stop": {
            "name": "stop",
            "location": 178,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "transport-protocol-master/adbtp/__init__.py": {},
    "transport-protocol-master/tests/test_sync.py": {
        "test_stub": {
            "name": "test_stub",
            "location": 13,
            "return": [],
            "arguments": {}
        }
    },
    "transport-protocol-master/tests/test_timeouts.py": {
        "ensure_started_property_names": {
            "name": "ensure_started_property_names",
            "location": 21,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "ensure_started_method_names": {
            "name": "ensure_started_method_names",
            "location": 32,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "valid_period": {
            "name": "valid_period",
            "location": 41,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "not_started_timeout": {
            "name": "not_started_timeout",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "stopped_timeout": {
            "name": "stopped_timeout",
            "location": 57,
            "return": [],
            "arguments": {}
        },
        "undefined_timeout": {
            "name": "undefined_timeout",
            "location": 68,
            "return": [],
            "arguments": {}
        },
        "test_ensure_started_wrapped_property_raises_on_not_started_timeout": {
            "name": "test_ensure_started_wrapped_property_raises_on_not_started_timeout",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "not_started_timeout": [],
                "ensure_started_property_names": []
            }
        },
        "test_ensure_started_wrapped_method_raises_on_not_started_timeout": {
            "name": "test_ensure_started_wrapped_method_raises_on_not_started_timeout",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "not_started_timeout": [],
                "ensure_started_method_names": []
            }
        },
        "test_undefined_true_when_using_sentinel_value": {
            "name": "test_undefined_true_when_using_sentinel_value",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "undefined_timeout": []
            }
        },
        "test_period_property_returns_given_value": {
            "name": "test_period_property_returns_given_value",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "valid_period": []
            }
        },
        "test_timeout_started_after_context_manager_enter": {
            "name": "test_timeout_started_after_context_manager_enter",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "not_started_timeout": []
            }
        },
        "test_timeout_stopped_after_context_manager_exit": {
            "name": "test_timeout_stopped_after_context_manager_exit",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "not_started_timeout": []
            }
        },
        "test_timeout_exceeded_when_elapsed_greater_than_period": {
            "name": "test_timeout_exceeded_when_elapsed_greater_than_period",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_undefined_timeout_never_exceeded": {
            "name": "test_undefined_timeout_never_exceeded",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "undefined_timeout": []
            }
        },
        "test_timeout_not_exceeded_when_elapsed_less_than_period": {
            "name": "test_timeout_not_exceeded_when_elapsed_less_than_period",
            "location": 152,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_elapsed_seconds_increments_when_not_stopped": {
            "name": "test_elapsed_seconds_increments_when_not_stopped",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_elapsed_seconds_stops_incrementing_when_stopped": {
            "name": "test_elapsed_seconds_stops_incrementing_when_stopped",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {
                "stopped_timeout": []
            }
        },
        "test_elapsed_millisseconds_increments_when_not_stopped": {
            "name": "test_elapsed_millisseconds_increments_when_not_stopped",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_elapsed_milliseconds_stops_incrementing_when_stopped": {
            "name": "test_elapsed_milliseconds_stops_incrementing_when_stopped",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {
                "stopped_timeout": []
            }
        },
        "test_remaining_seconds_is_period_when_undefined": {
            "name": "test_remaining_seconds_is_period_when_undefined",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "undefined_timeout": []
            }
        },
        "test_remaining_seconds_computes_delta": {
            "name": "test_remaining_seconds_computes_delta",
            "location": 214,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remaining_milliseconds_is_period_when_undefined": {
            "name": "test_remaining_milliseconds_is_period_when_undefined",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "undefined_timeout": []
            }
        },
        "test_remaining_milliseconds_computes_delta": {
            "name": "test_remaining_milliseconds_computes_delta",
            "location": 233,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_wrap_returns_unmodified_when_given_timeout": {
            "name": "test_wrap_returns_unmodified_when_given_timeout",
            "location": 243,
            "return": [
                "None"
            ],
            "arguments": {
                "not_started_timeout": []
            }
        },
        "test_wrap_converts_period_to_int": {
            "name": "test_wrap_converts_period_to_int",
            "location": 251,
            "return": [
                "None"
            ],
            "arguments": {
                "valid_period": []
            }
        },
        "test_wrap_supports_undefined_period": {
            "name": "test_wrap_supports_undefined_period",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    }
}
{
    "tsrc-main/tasks.py": {
        "black": {
            "name": "black",
            "location": 8,
            "return": [],
            "arguments": {
                "c": [],
                "check": []
            }
        },
        "isort": {
            "name": "isort",
            "location": 17,
            "return": [],
            "arguments": {
                "c": [],
                "check": []
            }
        },
        "flake8": {
            "name": "flake8",
            "location": 26,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "mypy": {
            "name": "mypy",
            "location": 32,
            "return": [],
            "arguments": {
                "c": [],
                "machine_readable": []
            }
        },
        "test": {
            "name": "test",
            "location": 43,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "lint": {
            "name": "lint",
            "location": 56,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "safety_check": {
            "name": "safety_check",
            "location": 61,
            "return": [],
            "arguments": {
                "c": []
            }
        }
    },
    "tsrc-main/tsrc/cloner.py": {
        "Cloner.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "Cloner.describe_process_start": {
            "name": "describe_process_start",
            "location": 26,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Cloner.describe_process_end": {
            "name": "describe_process_end",
            "location": 29,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Cloner.describe_item": {
            "name": "describe_item",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Cloner.check_shallow_with_sha1": {
            "name": "check_shallow_with_sha1",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Cloner._choose_remote": {
            "name": "_choose_remote",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Cloner.clone_repo": {
            "name": "clone_repo",
            "location": 57,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Cloner.reset_repo": {
            "name": "reset_repo",
            "location": 92,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Cloner.process": {
            "name": "process",
            "location": 106,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "repo": []
            }
        }
    },
    "tsrc-main/tsrc/config.py": {
        "parse_config": {
            "name": "parse_config",
            "location": 14,
            "return": [
                "Config"
            ],
            "arguments": {
                "file_path": []
            }
        }
    },
    "tsrc-main/tsrc/errors.py": {
        "Error.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Error.__str__": {
            "name": "__str__",
            "location": 16,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Error.__repr__": {
            "name": "__repr__",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvalidConfig.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config_path": [],
                "cause": []
            }
        },
        "InvalidConfig.detailed_message": {
            "name": "detailed_message",
            "location": 30,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "InvalidConfig.__str__": {
            "name": "__str__",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "MissingRepo.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dest": []
            }
        }
    },
    "tsrc-main/tsrc/executor.py": {
        "process_items": {
            "name": "process_items",
            "location": 321,
            "return": [
                "OutcomeCollection"
            ],
            "arguments": {
                "items": [],
                "task": []
            }
        },
        "process_items_parallel": {
            "name": "process_items_parallel",
            "location": 331,
            "return": [
                "dict"
            ],
            "arguments": {
                "items": [],
                "task": []
            }
        },
        "process_items_sequence": {
            "name": "process_items_sequence",
            "location": 339,
            "return": [
                "dict"
            ],
            "arguments": {
                "items": [],
                "task": []
            }
        },
        "Outcome.empty": {
            "name": "empty",
            "location": 114,
            "return": [
                "_TOutcome@@Outcome@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TOutcome]"
                ]
            }
        },
        "Outcome.from_error": {
            "name": "from_error",
            "location": 118,
            "return": [
                "_TOutcome@@Outcome@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TOutcome]"
                ],
                "error": []
            }
        },
        "Outcome.from_summary": {
            "name": "from_summary",
            "location": 122,
            "return": [
                "_TOutcome@@Outcome@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TOutcome]"
                ],
                "message": []
            }
        },
        "Outcome.from_lines": {
            "name": "from_lines",
            "location": 126,
            "return": [
                "_TOutcome@@Outcome@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TOutcome]"
                ],
                "lines": []
            }
        },
        "Outcome.success": {
            "name": "success",
            "location": 133,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutcomeCollection.__init__": {
            "name": "__init__",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "outcomes": []
            }
        },
        "OutcomeCollection.print_summary": {
            "name": "print_summary",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OutcomeCollection.print_errors": {
            "name": "print_errors",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.__init__": {
            "name": "__init__",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.info": {
            "name": "info",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.info_2": {
            "name": "info_2",
            "location": 174,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.info_3": {
            "name": "info_3",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Task.info_count": {
            "name": "info_count",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": []
            }
        },
        "Task.run_git": {
            "name": "run_git",
            "location": 198,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "working_path": []
            }
        },
        "Task.describe_item": {
            "name": "describe_item",
            "location": 208,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Task.describe_process_start": {
            "name": "describe_process_start",
            "location": 213,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Task.describe_process_end": {
            "name": "describe_process_end",
            "location": 218,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Task.process": {
            "name": "process",
            "location": 223,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "item": []
            }
        },
        "SequentialExecutor.__init__": {
            "name": "__init__",
            "location": 242,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task": []
            }
        },
        "SequentialExecutor.process": {
            "name": "process",
            "location": 245,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "ParallelExecutor.__init__": {
            "name": "__init__",
            "location": 264,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "task": [],
                "num_jobs": []
            }
        },
        "ParallelExecutor.process": {
            "name": "process",
            "location": 270,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "items": []
            }
        },
        "ParallelExecutor.process_item": {
            "name": "process_item",
            "location": 291,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "item": []
            }
        }
    },
    "tsrc-main/tsrc/file_system.py": {
        "safe_link": {
            "name": "safe_link",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "check_link": {
            "name": "check_link",
            "location": 88,
            "return": [
                "bool"
            ],
            "arguments": {}
        },
        "FileSystemOperation.describe": {
            "name": "describe",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "FileSystemOperation.perform": {
            "name": "perform",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "FileSystemOperation.get_repo": {
            "name": "get_repo",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Copy.get_repo": {
            "name": "get_repo",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Copy.describe": {
            "name": "describe",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "Copy.perform": {
            "name": "perform",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "Link.get_repo": {
            "name": "get_repo",
            "location": 52,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Link.describe": {
            "name": "describe",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "Link.perform": {
            "name": "perform",
            "location": 59,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        }
    },
    "tsrc-main/tsrc/file_system_operator.py": {
        "FileSystemOperator.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": [],
                "repos": []
            }
        },
        "FileSystemOperator.describe_item": {
            "name": "describe_item",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "FileSystemOperator.describe_process_start": {
            "name": "describe_process_start",
            "location": 25,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "FileSystemOperator.describe_process_end": {
            "name": "describe_process_end",
            "location": 28,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "FileSystemOperator.process": {
            "name": "process",
            "location": 31,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "item": []
            }
        }
    },
    "tsrc-main/tsrc/git.py": {
        "assert_working_path": {
            "name": "assert_working_path",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "path": []
            }
        },
        "run_git": {
            "name": "run_git",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "run_git_captured": {
            "name": "run_git_captured",
            "location": 217,
            "return": [
                "Tuple[(int, str)]"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "get_sha1": {
            "name": "get_sha1",
            "location": 246,
            "return": [
                "str"
            ],
            "arguments": {
                "working_path": [],
                "short": [],
                "ref": []
            }
        },
        "get_current_branch": {
            "name": "get_current_branch",
            "location": 255,
            "return": [
                "str"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "get_current_tag": {
            "name": "get_current_tag",
            "location": 263,
            "return": [
                "str"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "get_repo_root": {
            "name": "get_repo_root",
            "location": 269,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "find_ref": {
            "name": "find_ref",
            "location": 279,
            "return": [
                "Any"
            ],
            "arguments": {
                "repo": [],
                "candidate_refs": []
            }
        },
        "git_reset": {
            "name": "git_reset",
            "location": 290,
            "return": [
                "None"
            ],
            "arguments": {
                "repo": [],
                "ref": []
            }
        },
        "get_git_status": {
            "name": "get_git_status",
            "location": 295,
            "return": [
                "GitStatus"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "is_git_repository": {
            "name": "is_git_repository",
            "location": 301,
            "return": [
                "bool"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "get_tracking_ref": {
            "name": "get_tracking_ref",
            "location": 308,
            "return": [
                "Optional[str]"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "is_shallow": {
            "name": "is_shallow",
            "location": 323,
            "return": [
                "bool"
            ],
            "arguments": {
                "working_path": []
            }
        },
        "GitCommandError.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "working_path": [],
                "cmd": []
            }
        },
        "NoSuchWorkingPath.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "WorktreeNotFound.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "working_path": []
            }
        },
        "GitStatus.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "working_path": []
            }
        },
        "GitStatus.update": {
            "name": "update",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.update_sha1": {
            "name": "update_sha1",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.update_branch": {
            "name": "update_branch",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.update_tag": {
            "name": "update_tag",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.update_remote_status": {
            "name": "update_remote_status",
            "location": 102,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.update_worktree_status": {
            "name": "update_worktree_status",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.describe": {
            "name": "describe",
            "location": 132,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.describe_branch": {
            "name": "describe_branch",
            "location": 142,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.commit_string": {
            "name": "commit_string",
            "location": 153,
            "return": [
                "str"
            ],
            "arguments": {
                "number": []
            }
        },
        "GitStatus.describe_position": {
            "name": "describe_position",
            "location": 161,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitStatus.describe_dirty": {
            "name": "describe_dirty",
            "location": 178,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tsrc-main/tsrc/groups.py": {
        "Group.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "elements": [],
                "includes": []
            }
        },
        "GroupNotFound.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group_name": [],
                "parent_group": []
            }
        },
        "UnknownGroupElement.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group_name": [],
                "element": []
            }
        },
        "GroupList.__init__": {
            "name": "__init__",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GroupList.add": {
            "name": "add",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "elements": [],
                "includes": []
            }
        },
        "GroupList.get_group": {
            "name": "get_group",
            "location": 70,
            "return": [
                "Optional[Group]"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "GroupList.get_elements": {
            "name": "get_elements",
            "location": 73,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "groups": []
            }
        },
        "GroupList._rec_get_elements": {
            "name": "_rec_get_elements",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "res": [],
                "group_names": []
            }
        }
    },
    "tsrc-main/tsrc/local_manifest.py": {
        "LocalManifest.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "clone_path": []
            }
        },
        "LocalManifest.current_branch": {
            "name": "current_branch",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocalManifest.init": {
            "name": "init",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "LocalManifest.get_manifest": {
            "name": "get_manifest",
            "location": 41,
            "return": [
                "tsrc.manifest.Manifest"
            ],
            "arguments": {
                "self": []
            }
        },
        "LocalManifest.update": {
            "name": "update",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        }
    },
    "tsrc-main/tsrc/manifest.py": {
        "validate_repo": {
            "name": "validate_repo",
            "location": 142,
            "return": [
                "None"
            ],
            "arguments": {
                "data": []
            }
        },
        "load_manifest": {
            "name": "load_manifest",
            "location": 172,
            "return": [
                "Manifest"
            ],
            "arguments": {
                "manifest_path": []
            }
        },
        "RepoNotFound.__init__": {
            "name": "__init__",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "dest": []
            }
        },
        "Manifest.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Manifest.apply_config": {
            "name": "apply_config",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Manifest._handle_repo": {
            "name": "_handle_repo",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_config": []
            }
        },
        "Manifest._handle_remotes": {
            "name": "_handle_remotes",
            "location": 70,
            "return": [
                "List[tsrc.repo.Remote]"
            ],
            "arguments": {
                "self": [],
                "repo_config": []
            }
        },
        "Manifest._handle_copies": {
            "name": "_handle_copies",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_config": []
            }
        },
        "Manifest._handle_links": {
            "name": "_handle_links",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_config": []
            }
        },
        "Manifest._handle_groups": {
            "name": "_handle_groups",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "groups_config": []
            }
        },
        "Manifest.get_repos": {
            "name": "get_repos",
            "location": 109,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "groups": [],
                "all_": []
            }
        },
        "Manifest._has_default_group": {
            "name": "_has_default_group",
            "location": 123,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Manifest._get_repos_in_groups": {
            "name": "_get_repos_in_groups",
            "location": 127,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": [],
                "groups": []
            }
        },
        "Manifest.get_repo": {
            "name": "get_repo",
            "location": 135,
            "return": [
                "tsrc.repo.Repo"
            ],
            "arguments": {
                "self": [],
                "dest": []
            }
        }
    },
    "tsrc-main/tsrc/remote_setter.py": {
        "RemoteSetter.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "RemoteSetter.describe_item": {
            "name": "describe_item",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "RemoteSetter.describe_process_start": {
            "name": "describe_process_start",
            "location": 27,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "RemoteSetter.describe_process_end": {
            "name": "describe_process_end",
            "location": 30,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "RemoteSetter.process": {
            "name": "process",
            "location": 33,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "repo": []
            }
        },
        "RemoteSetter.get_remote": {
            "name": "get_remote",
            "location": 53,
            "return": [
                "Optional[tsrc.repo.Remote]"
            ],
            "arguments": {
                "self": [],
                "repo": [],
                "name": []
            }
        },
        "RemoteSetter.set_remote": {
            "name": "set_remote",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": [],
                "remote": []
            }
        },
        "RemoteSetter.add_remote": {
            "name": "add_remote",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": [],
                "remote": []
            }
        }
    },
    "tsrc-main/tsrc/repo.py": {
        "Repo.clone_url": {
            "name": "clone_url",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "tsrc-main/tsrc/syncer.py": {
        "IncorrectBranch.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Syncer.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "Syncer.describe_item": {
            "name": "describe_item",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Syncer.describe_process_start": {
            "name": "describe_process_start",
            "location": 34,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Syncer.describe_process_end": {
            "name": "describe_process_end",
            "location": 37,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "Syncer.process": {
            "name": "process",
            "location": 40,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "repo": []
            }
        },
        "Syncer.check_branch": {
            "name": "check_branch",
            "location": 83,
            "return": [
                "Tuple[(Optional[IncorrectBranch], str)]"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Syncer._pick_remotes": {
            "name": "_pick_remotes",
            "location": 112,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Syncer.fetch": {
            "name": "fetch",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Syncer.sync_repo_to_ref": {
            "name": "sync_repo_to_ref",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": [],
                "ref": []
            }
        },
        "Syncer.update_submodules": {
            "name": "update_submodules",
            "location": 144,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "Syncer.sync_repo_to_branch": {
            "name": "sync_repo_to_branch",
            "location": 154,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        }
    },
    "tsrc-main/tsrc/utils.py": {
        "erase_last_line": {
            "name": "erase_last_line",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tsrc-main/tsrc/workspace.py": {
        "copy_cfg_path_if_needed": {
            "name": "copy_cfg_path_if_needed",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "root_path": []
            }
        },
        "Workspace.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root_path": []
            }
        },
        "Workspace.get_manifest": {
            "name": "get_manifest",
            "location": 65,
            "return": [
                "tsrc.manifest.Manifest"
            ],
            "arguments": {
                "self": []
            }
        },
        "Workspace.update_manifest": {
            "name": "update_manifest",
            "location": 68,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Workspace.clone_missing": {
            "name": "clone_missing",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Workspace.set_remotes": {
            "name": "set_remotes",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num_jobs": []
            }
        },
        "Workspace.perform_filesystem_operations": {
            "name": "perform_filesystem_operations",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "manifest": []
            }
        },
        "Workspace.sync": {
            "name": "sync",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WorkspaceNotConfigured.__init__": {
            "name": "__init__",
            "location": 162,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root_path": []
            }
        }
    },
    "tsrc-main/tsrc/workspace_config.py": {
        "WorkspaceConfig.from_file": {
            "name": "from_file",
            "location": 27,
            "return": [
                "_TWorkspaceConfig@@WorkspaceConfig@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TWorkspaceConfig]"
                ],
                "cfg_path": []
            }
        },
        "WorkspaceConfig.save_to_file": {
            "name": "save_to_file",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cfg_path": []
            }
        }
    },
    "tsrc-main/tsrc/__init__.py": {},
    "tsrc-main/tsrc/__main__.py": {},
    "tsrc-main/tsrc/cli/apply_manifest.py": {
        "configure_parser": {
            "name": "configure_parser",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run": {
            "name": "run",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "tsrc-main/tsrc/cli/env_setter.py": {
        "get_workspace_vars": {
            "name": "get_workspace_vars",
            "location": 29,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "workspace": []
            }
        },
        "get_repo_vars": {
            "name": "get_repo_vars",
            "location": 37,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "repo": []
            }
        },
        "get_status_vars": {
            "name": "get_status_vars",
            "location": 55,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "status": []
            }
        },
        "EnvSetter.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace": []
            }
        },
        "EnvSetter.get_env_for_repo": {
            "name": "get_env_for_repo",
            "location": 12,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        }
    },
    "tsrc-main/tsrc/cli/foreach.py": {
        "configure_parser": {
            "name": "configure_parser",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run": {
            "name": "run",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "die": {
            "name": "die",
            "location": 225,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "message": []
            }
        },
        "DetailedCommandError.__init__": {
            "name": "__init__",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CmdRunner.__init__": {
            "name": "__init__",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": [],
                "command": [],
                "description": [],
                "shell": []
            }
        },
        "CmdRunner.describe_item": {
            "name": "describe_item",
            "location": 160,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "CmdRunner.describe_process_start": {
            "name": "describe_process_start",
            "location": 163,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "CmdRunner.describe_process_end": {
            "name": "describe_process_end",
            "location": 166,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "CmdRunner.process": {
            "name": "process",
            "location": 169,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "repo": []
            }
        }
    },
    "tsrc-main/tsrc/cli/init.py": {
        "configure_parser": {
            "name": "configure_parser",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run": {
            "name": "run",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "tsrc-main/tsrc/cli/log.py": {
        "configure_parser": {
            "name": "configure_parser",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run": {
            "name": "run",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "LogCollector.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace_path": []
            }
        },
        "LogCollector.describe_item": {
            "name": "describe_item",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "LogCollector.describe_process_start": {
            "name": "describe_process_start",
            "location": 48,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "LogCollector.describe_process_end": {
            "name": "describe_process_end",
            "location": 51,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "LogCollector.process": {
            "name": "process",
            "location": 54,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "repo": []
            }
        }
    },
    "tsrc-main/tsrc/cli/main.py": {
        "main_wrapper": {
            "name": "main_wrapper",
            "location": 20,
            "return": [
                "Callable"
            ],
            "arguments": {
                "main_func": []
            }
        },
        "setup_ui": {
            "name": "setup_ui",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "main": {
            "name": "main",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "testable_main": {
            "name": "testable_main",
            "location": 62,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "args": []
            }
        },
        "main_impl": {
            "name": "main_impl",
            "location": 70,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "args": []
            }
        },
        "main_wrapper.wrapped": {
            "name": "wrapped",
            "location": 24,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "tsrc-main/tsrc/cli/status.py": {
        "configure_parser": {
            "name": "configure_parser",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run": {
            "name": "run",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        },
        "describe_status": {
            "name": "describe_status",
            "location": 92,
            "return": [
                "Any"
            ],
            "arguments": {
                "status": []
            }
        },
        "ManifestStatus.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "ManifestStatus.update": {
            "name": "update",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "git_status": []
            }
        },
        "ManifestStatus.describe": {
            "name": "describe",
            "location": 70,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Status.__init__": {
            "name": "__init__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatusCollector.__init__": {
            "name": "__init__",
            "location": 108,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "workspace": []
            }
        },
        "StatusCollector.describe_item": {
            "name": "describe_item",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "StatusCollector.describe_process_start": {
            "name": "describe_process_start",
            "location": 116,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "StatusCollector.describe_process_end": {
            "name": "describe_process_end",
            "location": 119,
            "return": [
                "List[nothing]"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        },
        "StatusCollector.process": {
            "name": "process",
            "location": 122,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "repo": []
            }
        }
    },
    "tsrc-main/tsrc/cli/sync.py": {
        "configure_parser": {
            "name": "configure_parser",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "subparser": []
            }
        },
        "run": {
            "name": "run",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "tsrc-main/tsrc/cli/__init__.py": {
        "add_workspace_arg": {
            "name": "add_workspace_arg",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "add_num_jobs_arg": {
            "name": "add_num_jobs_arg",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "get_num_jobs": {
            "name": "get_num_jobs",
            "location": 42,
            "return": [
                "int"
            ],
            "arguments": {
                "args": []
            }
        },
        "get_workspace": {
            "name": "get_workspace",
            "location": 57,
            "return": [
                "tsrc.workspace.Workspace"
            ],
            "arguments": {
                "namespace": []
            }
        },
        "add_groups_arg": {
            "name": "add_groups_arg",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "add_repos_selection_args": {
            "name": "add_repos_selection_args",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "parser": []
            }
        },
        "find_workspace_path": {
            "name": "find_workspace_path",
            "location": 87,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {}
        },
        "get_workspace_with_repos": {
            "name": "get_workspace_with_repos",
            "location": 104,
            "return": [
                "tsrc.workspace.Workspace"
            ],
            "arguments": {
                "namespace": []
            }
        },
        "resolve_repos": {
            "name": "resolve_repos",
            "location": 116,
            "return": [
                "Any"
            ],
            "arguments": {
                "workspace": []
            }
        },
        "repos_from_config": {
            "name": "repos_from_config",
            "location": 152,
            "return": [
                "Any"
            ],
            "arguments": {
                "manifest": [],
                "workspace_config": []
            }
        }
    },
    "tsrc-main/tsrc/test/conftest.py": {
        "tmp_path": {
            "name": "tmp_path",
            "location": 15,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "workspace_path": {
            "name": "workspace_path",
            "location": 21,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "workspace": {
            "name": "workspace",
            "location": 28,
            "return": [],
            "arguments": {
                "workspace_path": []
            }
        },
        "message_recorder": {
            "name": "message_recorder",
            "location": 33,
            "return": [],
            "arguments": {}
        }
    },
    "tsrc-main/tsrc/test/test_config.py": {
        "test_invalid_syntax": {
            "name": "test_invalid_syntax",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_invalid_schema": {
            "name": "test_invalid_schema",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_use_pure_python_types": {
            "name": "test_use_pure_python_types",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/test_executor.py": {
        "test_sequence_nothing": {
            "name": "test_sequence_nothing",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sequence_happy": {
            "name": "test_sequence_happy",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sequence_sad": {
            "name": "test_sequence_sad",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parallel_nothing": {
            "name": "test_parallel_nothing",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parallel_happy": {
            "name": "test_parallel_happy",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_parallel_sad": {
            "name": "test_parallel_sad",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "Kaboom.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeTask.__init__": {
            "name": "__init__",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FakeTask.describe_process_start": {
            "name": "describe_process_start",
            "location": 31,
            "return": [
                "List[Union[(str, _T0)]]"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "_T0@@"
                ]
            }
        },
        "FakeTask.describe_process_end": {
            "name": "describe_process_end",
            "location": 34,
            "return": [
                "List[Union[(str, _T0)]]"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "_T0@@"
                ]
            }
        },
        "FakeTask.process": {
            "name": "process",
            "location": 37,
            "return": [
                "tsrc.executor.Outcome"
            ],
            "arguments": {
                "self": [],
                "index": [],
                "count": [],
                "item": []
            }
        },
        "FakeTask.describe_item": {
            "name": "describe_item",
            "location": 42,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "_T0@@"
                ]
            }
        }
    },
    "tsrc-main/tsrc/test/test_file_system.py": {
        "test_can_create_symlink_when_source_does_not_exist": {
            "name": "test_can_create_symlink_when_source_does_not_exist",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_can_create_symlink_pointing_to_directory": {
            "name": "test_can_create_symlink_pointing_to_directory",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_cannot_create_symlink_when_source_is_a_file": {
            "name": "test_cannot_create_symlink_when_source_is_a_file",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_can_update_broken_symlink": {
            "name": "test_can_update_broken_symlink",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_can_update_existing_symlink": {
            "name": "test_can_update_existing_symlink",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_do_nothing_if_symlink_has_the_correct_target": {
            "name": "test_do_nothing_if_symlink_has_the_correct_target",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/test_git_status.py": {
        "git_project": {
            "name": "git_project",
            "location": 47,
            "return": [],
            "arguments": {
                "tmp_path": [],
                "remote_repo": []
            }
        },
        "remote_repo": {
            "name": "remote_repo",
            "location": 55,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_empty": {
            "name": "test_empty",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "git_project": []
            }
        },
        "test_clean_on_master": {
            "name": "test_clean_on_master",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "git_project": []
            }
        },
        "test_dirty_on_master": {
            "name": "test_dirty_on_master",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "git_project": []
            }
        },
        "test_behind_1_commit": {
            "name": "test_behind_1_commit",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "git_project": []
            }
        },
        "test_ahead_2_commits": {
            "name": "test_ahead_2_commits",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {
                "git_project": []
            }
        },
        "test_on_sha1": {
            "name": "test_on_sha1",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "git_project": []
            }
        },
        "test_on_tag": {
            "name": "test_on_tag",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "git_project": []
            }
        },
        "GitProject.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "remote_repo": []
            }
        },
        "GitProject.get_status": {
            "name": "get_status",
            "location": 20,
            "return": [
                "tsrc.git.GitStatus"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitProject.make_initial_commit": {
            "name": "make_initial_commit",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitProject.commit_changes": {
            "name": "commit_changes",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "GitProject.run_git": {
            "name": "run_git",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GitProject.write_file": {
            "name": "write_file",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "contents": []
            }
        },
        "TestDescribe.test_up_to_date": {
            "name": "test_up_to_date",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDescribe.test_ahead_1_commit": {
            "name": "test_ahead_1_commit",
            "location": 139,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDescribe.test_diverged": {
            "name": "test_diverged",
            "location": 150,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDescribe.test_on_sha1": {
            "name": "test_on_sha1",
            "location": 163,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestDescribe.test_on_tag": {
            "name": "test_on_tag",
            "location": 168,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tsrc-main/tsrc/test/test_groups.py": {
        "test_happy_grouping": {
            "name": "test_happy_grouping",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remove_duplicates": {
            "name": "test_remove_duplicates",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unknown_element": {
            "name": "test_unknown_element",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unknown_include": {
            "name": "test_unknown_include",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_diamond": {
            "name": "test_diamond",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ping_pong": {
            "name": "test_ping_pong",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_circle": {
            "name": "test_circle",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_unknown_group": {
            "name": "test_unknown_group",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tsrc-main/tsrc/test/test_manifest.py": {
        "test_load": {
            "name": "test_load",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_get_repo": {
            "name": "test_get_repo",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_remotes": {
            "name": "test_remotes",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_no_url_and_no_remote": {
            "name": "test_no_url_and_no_remote",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "assert_valid_schema": {
            "name": "assert_valid_schema",
            "location": 126,
            "return": [
                "tsrc.manifest.Manifest"
            ],
            "arguments": {
                "tmp_path": [],
                "contents": []
            }
        },
        "assert_invalid_schema": {
            "name": "assert_invalid_schema",
            "location": 133,
            "return": [
                "Optional[tsrc.errors.InvalidConfig]"
            ],
            "arguments": {
                "tmp_path": [],
                "contents": []
            }
        },
        "test_validates": {
            "name": "test_validates",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_allow_url": {
            "name": "test_allow_url",
            "location": 157,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_allow_several_remotes": {
            "name": "test_allow_several_remotes",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_disallow_url_and_remotes": {
            "name": "test_disallow_url_and_remotes",
            "location": 177,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "repos_getter": {
            "name": "repos_getter",
            "location": 207,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_default_group": {
            "name": "test_default_group",
            "location": 211,
            "return": [
                "None"
            ],
            "arguments": {
                "repos_getter": []
            }
        },
        "test_specific_group": {
            "name": "test_specific_group",
            "location": 226,
            "return": [
                "None"
            ],
            "arguments": {
                "repos_getter": []
            }
        },
        "test_inclusion": {
            "name": "test_inclusion",
            "location": 247,
            "return": [
                "None"
            ],
            "arguments": {
                "repos_getter": []
            }
        },
        "test_all_repos": {
            "name": "test_all_repos",
            "location": 268,
            "return": [
                "None"
            ],
            "arguments": {
                "repos_getter": []
            }
        },
        "test_get_repo.assert_clone_url": {
            "name": "assert_clone_url",
            "location": 87,
            "return": [],
            "arguments": {
                "dest": [],
                "url": []
            }
        },
        "ReposGetter.__init__": {
            "name": "__init__",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmp_path": []
            }
        },
        "ReposGetter.get_repos": {
            "name": "get_repos",
            "location": 197,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "groups": [],
                "all_": []
            }
        }
    },
    "tsrc-main/tsrc/test/test_resolve_repos.py": {
        "create_manifest": {
            "name": "create_manifest",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "create_workspace": {
            "name": "create_workspace",
            "location": 28,
            "return": [
                "tsrc.workspace.Workspace"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "repo_names": {
            "name": "repo_names",
            "location": 45,
            "return": [
                "list"
            ],
            "arguments": {
                "repos": []
            }
        },
        "test_no_args_no_config_no_default_group": {
            "name": "test_no_args_no_config_no_default_group",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_no_args_no_config_default_group": {
            "name": "test_no_args_no_config_default_group",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_no_args_workspace_configured_with_all_repos": {
            "name": "test_no_args_workspace_configured_with_all_repos",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_no_args_workspace_configured_with_some_groups": {
            "name": "test_no_args_workspace_configured_with_some_groups",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_groups_requested": {
            "name": "test_groups_requested",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_all_cloned_requested": {
            "name": "test_all_cloned_requested",
            "location": 141,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_filter_inclusive": {
            "name": "test_filter_inclusive",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_filter_exclusive": {
            "name": "test_filter_exclusive",
            "location": 184,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_filter_inclusive_exclusive": {
            "name": "test_filter_inclusive_exclusive",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/test_workspace_config.py": {
        "test_save": {
            "name": "test_save",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/__init__.py": {},
    "tsrc-main/tsrc/test/cli/test_apply_manifest.py": {
        "test_apply_manifest_adds_new_repo": {
            "name": "test_apply_manifest_adds_new_repo",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "add_repo_to_manifest_with_copy": {
            "name": "add_repo_to_manifest_with_copy",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "manifest_path": [],
                "dest": [],
                "url": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_cli.py": {
        "TestNumJobsParsing.parse_args": {
            "name": "parse_args",
            "location": 11,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "TestNumJobsParsing.test_defaults_to_all_cpus": {
            "name": "test_defaults_to_all_cpus",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNumJobsParsing.test_auto_uses_all_cpus": {
            "name": "test_auto_uses_all_cpus",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNumJobsParsing.test_specify_num_jobs_explicitly": {
            "name": "test_specify_num_jobs_explicitly",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestNumJobsParsing.test_using_env_variable": {
            "name": "test_using_env_variable",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "monkeypatch": []
            }
        },
        "TestNumJobsParsing.test_overriding_env_variable_from_command_line": {
            "name": "test_overriding_env_variable_from_command_line",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "monkeypatch": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_env_setter.py": {
        "test_set_project_dest_and_branch": {
            "name": "test_set_project_dest_and_branch",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_get_repo_vars": {
            "name": "test_get_repo_vars",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_git_status_vars": {
            "name": "test_git_status_vars",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_foreach.py": {
        "test_foreach_no_args": {
            "name": "test_foreach_no_args",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": []
            }
        },
        "test_foreach_with_errors": {
            "name": "test_foreach_with_errors",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_foreach_happy": {
            "name": "test_foreach_happy",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_foreach_parallel": {
            "name": "test_foreach_parallel",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_foreach_shell": {
            "name": "test_foreach_shell",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_foreach_with_explicit_groups": {
            "name": "test_foreach_with_explicit_groups",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_foreach_with_groups_from_config": {
            "name": "test_foreach_with_groups_from_config",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_foreach_error_when_using_missing_groups": {
            "name": "test_foreach_error_when_using_missing_groups",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_foreach_with_all_cloned_repos_requested": {
            "name": "test_foreach_with_all_cloned_repos_requested",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_cannot_start_cmd": {
            "name": "test_cannot_start_cmd",
            "location": 200,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": []
            }
        },
        "test_set_environment_variables": {
            "name": "test_set_environment_variables",
            "location": 207,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_init.py": {
        "repo_exists": {
            "name": "repo_exists",
            "location": 13,
            "return": [
                "Any"
            ],
            "arguments": {
                "workspace_path": [],
                "repo": []
            }
        },
        "assert_cloned": {
            "name": "assert_cloned",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "repo": []
            }
        },
        "assert_not_cloned": {
            "name": "assert_not_cloned",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "repo": []
            }
        },
        "test_init_manifest_head_is_master": {
            "name": "test_init_manifest_head_is_master",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_init_manifest_head_is_main": {
            "name": "test_init_manifest_head_is_main",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_init_with_args": {
            "name": "test_init_with_args",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "monkeypatch": [],
                "tmp_path": []
            }
        },
        "test_cannot_init_twice": {
            "name": "test_cannot_init_twice",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": []
            }
        },
        "test_init_maint_manifest_branch": {
            "name": "test_init_maint_manifest_branch",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_copy_files_happy": {
            "name": "test_copy_files_happy",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_copy_files_source_does_not_exist": {
            "name": "test_copy_files_source_does_not_exist",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_clone_destination_is_a_file": {
            "name": "test_clone_destination_is_a_file",
            "location": 125,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_create_symlink": {
            "name": "test_create_symlink",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_uses_correct_branch_for_repo": {
            "name": "test_uses_correct_branch_for_repo",
            "location": 159,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_empty_repo": {
            "name": "test_empty_repo",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_resets_to_tag": {
            "name": "test_resets_to_tag",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_resets_to_sha1": {
            "name": "test_resets_to_sha1",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_use_default_group": {
            "name": "test_use_default_group",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_clone_all_repos": {
            "name": "test_clone_all_repos",
            "location": 248,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_use_specific_groups": {
            "name": "test_use_specific_groups",
            "location": 262,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_no_remote_named_origin": {
            "name": "test_no_remote_named_origin",
            "location": 288,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_repo_default_branch_not_master": {
            "name": "test_repo_default_branch_not_master",
            "location": 300,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_several_remotes": {
            "name": "test_several_remotes",
            "location": 311,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_singular_remote": {
            "name": "test_singular_remote",
            "location": 332,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_clone_submodules": {
            "name": "test_clone_submodules",
            "location": 362,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_log.py": {
        "test_happy": {
            "name": "test_happy",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        },
        "test_log_error": {
            "name": "test_log_error",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": []
            }
        },
        "test_use_given_group": {
            "name": "test_use_given_group",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": []
            }
        },
        "test_missing_repos_from_given_group": {
            "name": "test_missing_repos_from_given_group",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "message_recorder": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_main.py": {
        "test_without_args": {
            "name": "test_without_args",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_help": {
            "name": "test_help",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_version": {
            "name": "test_version",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tsrc-main/tsrc/test/cli/test_shallow_clones.py": {
        "assert_shallow_clone": {
            "name": "assert_shallow_clone",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "repo": []
            }
        },
        "test_shallow_clones": {
            "name": "test_shallow_clones",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_shallow_with_fix_ref": {
            "name": "test_shallow_with_fix_ref",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_status.py": {
        "test_status_happy": {
            "name": "test_status_happy",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_status_dirty": {
            "name": "test_status_dirty",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_status_incorrect_branch": {
            "name": "test_status_incorrect_branch",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_status_not_on_any_branch": {
            "name": "test_status_not_on_any_branch",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_status_on_tag": {
            "name": "test_status_on_tag",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_status_with_missing_repos": {
            "name": "test_status_with_missing_repos",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_use_given_group": {
            "name": "test_use_given_group",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_use_non_cloned_group": {
            "name": "test_use_non_cloned_group",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/test_sync.py": {
        "test_sync_happy": {
            "name": "test_sync_happy",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_sequential": {
            "name": "test_sync_sequential",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_with_errors": {
            "name": "test_sync_with_errors",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_sync_on_bare_repo": {
            "name": "test_sync_on_bare_repo",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_finds_root": {
            "name": "test_sync_finds_root",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "monkeypatch": []
            }
        },
        "test_new_repo_added_to_manifest": {
            "name": "test_new_repo_added_to_manifest",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "change_workspace_manifest_branch": {
            "name": "change_workspace_manifest_branch",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "branch": []
            }
        },
        "test_switching_manifest_branch": {
            "name": "test_switching_manifest_branch",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_not_on_master": {
            "name": "test_sync_not_on_master",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_sync_with_force": {
            "name": "test_sync_with_force",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "add_repo_unstaged": {
            "name": "add_repo_unstaged",
            "location": 234,
            "return": [
                "None"
            ],
            "arguments": {
                "name": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_discards_local_manifest_changes": {
            "name": "test_sync_discards_local_manifest_changes",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_with_no_update_manifest_flag_leaves_changes": {
            "name": "test_sync_with_no_update_manifest_flag_leaves_changes",
            "location": 272,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_copies_are_up_to_date": {
            "name": "test_copies_are_up_to_date",
            "location": 301,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_copies_preserve_stat": {
            "name": "test_copies_preserve_stat",
            "location": 329,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_update_symlink": {
            "name": "test_update_symlink",
            "location": 350,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_changing_branch": {
            "name": "test_changing_branch",
            "location": 379,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": [],
                "message_recorder": []
            }
        },
        "test_tags_are_not_updated": {
            "name": "test_tags_are_not_updated",
            "location": 405,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sha1s_are_not_updated": {
            "name": "test_sha1s_are_not_updated",
            "location": 431,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_tags_are_updated_when_clean": {
            "name": "test_tags_are_updated_when_clean",
            "location": 457,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sha1s_are_updated_when_clean": {
            "name": "test_sha1s_are_updated_when_clean",
            "location": 487,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_tags_are_skipped_when_not_clean_tags": {
            "name": "test_tags_are_skipped_when_not_clean_tags",
            "location": 516,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sha1s_are_skipped_when_not_clean": {
            "name": "test_sha1s_are_skipped_when_not_clean",
            "location": 547,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_uses_group_from_config_by_default": {
            "name": "test_sync_uses_group_from_config_by_default",
            "location": 578,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_fetch_additional_remotes": {
            "name": "test_fetch_additional_remotes",
            "location": 607,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_adding_remotes": {
            "name": "test_adding_remotes",
            "location": 636,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_changing_remote_url": {
            "name": "test_changing_remote_url",
            "location": 659,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_sync_with_singular_remote": {
            "name": "test_sync_with_singular_remote",
            "location": 681,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_update_submodules": {
            "name": "test_update_submodules",
            "location": 852,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "test_ignored_submodules": {
            "name": "test_ignored_submodules",
            "location": 890,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "TestSyncWithGroups.test_ignore_other_groups": {
            "name": "test_ignore_other_groups",
            "location": 707,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "TestSyncWithGroups.test_honors_new_included_groups": {
            "name": "test_honors_new_included_groups",
            "location": 754,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "TestSyncWithGroups.test_can_use_new_group": {
            "name": "test_can_use_new_group",
            "location": 779,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "TestSyncWithGroups.test_non_existing_group": {
            "name": "test_non_existing_group",
            "location": 812,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        },
        "TestSyncWithGroups.test_group_not_cloned": {
            "name": "test_group_not_cloned",
            "location": 830,
            "return": [
                "None"
            ],
            "arguments": {
                "tsrc_cli": [],
                "git_server": [],
                "workspace_path": []
            }
        }
    },
    "tsrc-main/tsrc/test/cli/__init__.py": {},
    "tsrc-main/tsrc/test/helpers/cli.py": {
        "append_jobs_option": {
            "name": "append_jobs_option",
            "location": 17,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "tsrc_cli": {
            "name": "tsrc_cli",
            "location": 54,
            "return": [],
            "arguments": {
                "workspace_path": [],
                "monkeypatch": []
            }
        },
        "CLI.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "CLI.run": {
            "name": "run",
            "location": 30,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "CLI.run_and_fail": {
            "name": "run_and_fail",
            "location": 35,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "CLI.run_and_fail_with": {
            "name": "run_and_fail_with",
            "location": 47,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "error": []
            }
        }
    },
    "tsrc-main/tsrc/test/helpers/git_server.py": {
        "git_server": {
            "name": "git_server",
            "location": 366,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "BaseTestRepo.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": [],
                "path": []
            }
        },
        "BareRepo.create": {
            "name": "create",
            "location": 29,
            "return": [
                "_TBareRepo@@BareRepo@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TBareRepo]"
                ],
                "path": [],
                "initial_branch": [],
                "empty": []
            }
        },
        "BareRepo.open": {
            "name": "open",
            "location": 44,
            "return": [
                "_TBareRepo@@BareRepo@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TBareRepo]"
                ],
                "path": []
            }
        },
        "BareRepo.create_tag": {
            "name": "create_tag",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tag_name": []
            }
        },
        "BareRepo.ensure_ref": {
            "name": "ensure_ref",
            "location": 56,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BareRepo.set_head": {
            "name": "set_head",
            "location": 62,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_head": []
            }
        },
        "BareRepo.commit_file": {
            "name": "commit_file",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "BareRepo.get_sha1": {
            "name": "get_sha1",
            "location": 93,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRepo.clone": {
            "name": "clone",
            "location": 99,
            "return": [
                "_TTestRepo@@TestRepo@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTestRepo]"
                ],
                "url": [],
                "path": []
            }
        },
        "TestRepo.open": {
            "name": "open",
            "location": 106,
            "return": [
                "_TTestRepo@@TestRepo@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTestRepo]"
                ],
                "path": []
            }
        },
        "TestRepo.add_submodule": {
            "name": "add_submodule",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRepo.commit_all_and_push": {
            "name": "commit_all_and_push",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TestRepo.fetch_and_reset": {
            "name": "fetch_and_reset",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ManifestHandler.__init__": {
            "name": "__init__",
            "location": 160,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo": []
            }
        },
        "ManifestHandler.change_branch": {
            "name": "change_branch",
            "location": 166,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_branch": []
            }
        },
        "ManifestHandler.set_head": {
            "name": "set_head",
            "location": 170,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_head": []
            }
        },
        "ManifestHandler.write_changes": {
            "name": "write_changes",
            "location": 173,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "ManifestHandler.add_repo": {
            "name": "add_repo",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "url": [],
                "branch": []
            }
        },
        "ManifestHandler.configure_group": {
            "name": "configure_group",
            "location": 187,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "repos": [],
                "includes": []
            }
        },
        "ManifestHandler.get_repo": {
            "name": "get_repo",
            "location": 200,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "ManifestHandler.configure_repo": {
            "name": "configure_repo",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "key": [],
                "value": []
            }
        },
        "ManifestHandler.set_repo_url": {
            "name": "set_repo_url",
            "location": 212,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "url": []
            }
        },
        "ManifestHandler.set_repo_branch": {
            "name": "set_repo_branch",
            "location": 215,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "branch": []
            }
        },
        "ManifestHandler.set_repo_sha1": {
            "name": "set_repo_sha1",
            "location": 218,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "ref": []
            }
        },
        "ManifestHandler.set_repo_tag": {
            "name": "set_repo_tag",
            "location": 221,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "tag": []
            }
        },
        "ManifestHandler.set_ignore_submodules": {
            "name": "set_ignore_submodules",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "ignored": []
            }
        },
        "ManifestHandler.set_file_copy": {
            "name": "set_file_copy",
            "location": 227,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_name": [],
                "src": [],
                "dest": []
            }
        },
        "ManifestHandler.set_symlink": {
            "name": "set_symlink",
            "location": 231,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "repo_name": [],
                "source": [],
                "target": []
            }
        },
        "ManifestHandler.set_repo_remotes": {
            "name": "set_repo_remotes",
            "location": 235,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "remotes": []
            }
        },
        "GitServer.__init__": {
            "name": "__init__",
            "location": 255,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "tmpdir": []
            }
        },
        "GitServer.get_url": {
            "name": "get_url",
            "location": 267,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "GitServer.url_to_local_path": {
            "name": "url_to_local_path",
            "location": 270,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "url": []
            }
        },
        "GitServer._get_repo": {
            "name": "_get_repo",
            "location": 277,
            "return": [
                "BareRepo"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "GitServer._create_repo": {
            "name": "_create_repo",
            "location": 281,
            "return": [
                "BareRepo"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "empty": [],
                "branch": []
            }
        },
        "GitServer.add_submodule": {
            "name": "add_submodule",
            "location": 292,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "GitServer.update_submodule": {
            "name": "update_submodule",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "path": []
            }
        },
        "GitServer.add_repo": {
            "name": "add_repo",
            "location": 315,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "empty": [],
                "default_branch": [],
                "add_to_manifest": []
            }
        },
        "GitServer.add_group": {
            "name": "add_group",
            "location": 328,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "group_name": [],
                "repos": []
            }
        },
        "GitServer.push_file": {
            "name": "push_file",
            "location": 333,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "file_path": []
            }
        },
        "GitServer.tag": {
            "name": "tag",
            "location": 354,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "tag_name": []
            }
        },
        "GitServer.get_sha1": {
            "name": "get_sha1",
            "location": 360,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        }
    },
    "tsrc-main/tsrc/test/helpers/test_git_server.py": {
        "read_remote_manifest": {
            "name": "read_remote_manifest",
            "location": 9,
            "return": [
                "tsrc.manifest.Manifest"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_add_repo_can_clone": {
            "name": "test_add_repo_can_clone",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_can_set_remote_head": {
            "name": "test_can_set_remote_head",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "tmp_path": [],
                "git_server": []
            }
        },
        "test_can_add_copies": {
            "name": "test_can_add_copies",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_add_repo_updates_manifest": {
            "name": "test_add_repo_updates_manifest",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_multiple_manifest_branches": {
            "name": "test_multiple_manifest_branches",
            "location": 55,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_push_to_other_branch": {
            "name": "test_push_to_other_branch",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_tag": {
            "name": "test_tag",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_get_sha1": {
            "name": "test_get_sha1",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_default_branch_devel": {
            "name": "test_default_branch_devel",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_create_submodule": {
            "name": "test_create_submodule",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        },
        "test_update_submodule": {
            "name": "test_update_submodule",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "workspace_path": [],
                "git_server": []
            }
        }
    },
    "tsrc-main/tsrc/test/helpers/__init__.py": {}
}
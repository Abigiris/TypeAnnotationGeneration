{
    "tuf-mitm-proxy-master/start.py": {
        "main": {
            "name": "main",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "parse_args": {
            "name": "parse_args",
            "location": 28,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        }
    },
    "tuf-mitm-proxy-master/api/config.py": {
        "Config.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/errors.py": {
        "InvalidFlowPath.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        },
        "InvalidFlowPath.__str__": {
            "name": "__str__",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "InvalidKeyId.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyid": []
            }
        },
        "InvalidKeyId.__str__": {
            "name": "__str__",
            "location": 19,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MissingField.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [],
                "field": []
            }
        },
        "MissingField.__str__": {
            "name": "__str__",
            "location": 27,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "StillRunning.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pid": []
            }
        },
        "StillRunning.__str__": {
            "name": "__str__",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnknownRole.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "UnknownRole.__str__": {
            "name": "__str__",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/flow.py": {
        "FlowPath.__new__": {
            "name": "__new__",
            "location": 12,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "path": []
            }
        },
        "Flow.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "config": []
            }
        },
        "Flow.find": {
            "name": "find",
            "location": 26,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "name": []
            }
        },
        "Flow.available": {
            "name": "available",
            "location": 34,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flow.get_running": {
            "name": "get_running",
            "location": 38,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Flow._set_running": {
            "name": "_set_running",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/flow_test.py": {
        "new_config": {
            "name": "new_config",
            "location": 9,
            "return": [
                "api.config.Config"
            ],
            "arguments": {}
        },
        "test_flows": {
            "name": "test_flows",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tuf-mitm-proxy-master/api/http.py": {
        "Server.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "proxy": []
            }
        },
        "Server.start": {
            "name": "start",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Server._create_app": {
            "name": "_create_app",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/proxy.py": {
        "Proxy.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "flow": []
            }
        },
        "Proxy.start": {
            "name": "start",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "cmd": []
            }
        },
        "Proxy.stop": {
            "name": "stop",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Proxy._args": {
            "name": "_args",
            "location": 43,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "path": [],
                "cmd": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/utils.py": {
        "contains": {
            "name": "contains",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "meta": []
            }
        },
        "canonical": {
            "name": "canonical",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "encoded": []
            }
        },
        "is_metadata": {
            "name": "is_metadata",
            "location": 37,
            "return": [
                "bool"
            ],
            "arguments": {
                "flow": []
            }
        },
        "Encodable._encode": {
            "name": "_encode",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Encoder.default": {
            "name": "default",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "meta": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/__init__.py": {},
    "tuf-mitm-proxy-master/api/datatypes/metadata.py": {
        "Role.__new__": {
            "name": "__new__",
            "location": 16,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "cls": [],
                "role": [
                    "_T0@@"
                ]
            }
        },
        "Metadata.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "meta": []
            }
        },
        "Metadata.from_flow": {
            "name": "from_flow",
            "location": 48,
            "return": [
                "_TMetadata@@Metadata@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TMetadata]"
                ],
                "flow": []
            }
        },
        "Metadata.from_readable": {
            "name": "from_readable",
            "location": 53,
            "return": [
                "_TMetadata@@Metadata@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TMetadata]"
                ],
                "data": []
            }
        },
        "Metadata.to_json": {
            "name": "to_json",
            "location": 57,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Metadata.canonical_signed": {
            "name": "canonical_signed",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Metadata._encode": {
            "name": "_encode",
            "location": 65,
            "return": [
                "Dict[(str, Union[(dict, list)])]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Metadata._encode_signed": {
            "name": "_encode_signed",
            "location": 72,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/datatypes/metadata_test.py": {
        "assert_raises": {
            "name": "assert_raises",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "e": [],
                "f": []
            }
        },
        "test_read_metadata": {
            "name": "test_read_metadata",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_targets_metadata": {
            "name": "test_targets_metadata",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_encode_json": {
            "name": "test_encode_json",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tuf-mitm-proxy-master/api/datatypes/signature.py": {
        "KeyId.__new__": {
            "name": "__new__",
            "location": 18,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "cls": [],
                "keyid": [
                    "_T0@@"
                ]
            }
        },
        "KeyId.from_pub": {
            "name": "from_pub",
            "location": 28,
            "return": [
                "str"
            ],
            "arguments": {
                "pub": []
            }
        },
        "KeyId.random": {
            "name": "random",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "Signature.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "keyid": [],
                "sig": []
            }
        },
        "Signature.from_dict": {
            "name": "from_dict",
            "location": 50,
            "return": [
                "_TSignature@@Signature@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSignature]"
                ],
                "obj": []
            }
        },
        "Signature.from_bytes": {
            "name": "from_bytes",
            "location": 58,
            "return": [
                "_TSignature@@Signature@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSignature]"
                ],
                "keyid": [],
                "sig": []
            }
        },
        "Signature.as_bytes": {
            "name": "as_bytes",
            "location": 62,
            "return": [
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Signature.randomize_key": {
            "name": "randomize_key",
            "location": 66,
            "return": [
                "_TSignature@@Signature@@"
            ],
            "arguments": {
                "self": [
                    "_TSignature@@Signature@@"
                ]
            }
        },
        "Signature.randomize_sig": {
            "name": "randomize_sig",
            "location": 70,
            "return": [
                "_TSignature@@Signature@@"
            ],
            "arguments": {
                "self": [
                    "_TSignature@@Signature@@"
                ]
            }
        },
        "Signature.replace_key": {
            "name": "replace_key",
            "location": 74,
            "return": [
                "_TSignature@@Signature@@"
            ],
            "arguments": {
                "self": [
                    "_TSignature@@Signature@@"
                ],
                "keyid": []
            }
        },
        "Signature.replace_sig": {
            "name": "replace_sig",
            "location": 78,
            "return": [
                "_TSignature@@Signature@@"
            ],
            "arguments": {
                "self": [
                    "_TSignature@@Signature@@"
                ],
                "sig": []
            }
        },
        "Signature._encode": {
            "name": "_encode",
            "location": 82,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Signatures.__init__": {
            "name": "__init__",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "sigs": []
            }
        },
        "Signatures.from_dicts": {
            "name": "from_dicts",
            "location": 96,
            "return": [
                "_TSignatures@@Signatures@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TSignatures]"
                ],
                "dicts": []
            }
        },
        "Signatures.find": {
            "name": "find",
            "location": 99,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "Signatures.random": {
            "name": "random",
            "location": 107,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "Signatures.remove_key": {
            "name": "remove_key",
            "location": 111,
            "return": [
                "_TSignatures@@Signatures@@"
            ],
            "arguments": {
                "self": [
                    "_TSignatures@@Signatures@@"
                ],
                "key": []
            }
        },
        "Signatures.remove_random": {
            "name": "remove_random",
            "location": 115,
            "return": [
                "_TSignatures@@Signatures@@"
            ],
            "arguments": {
                "self": [
                    "_TSignatures@@Signatures@@"
                ]
            }
        },
        "Signatures.replace_key": {
            "name": "replace_key",
            "location": 119,
            "return": [
                "_TSignatures@@Signatures@@"
            ],
            "arguments": {
                "self": [
                    "_TSignatures@@Signatures@@"
                ],
                "key": [],
                "replace_with": []
            }
        },
        "Signatures.replace_random": {
            "name": "replace_random",
            "location": 124,
            "return": [
                "_TSignatures@@Signatures@@"
            ],
            "arguments": {
                "self": [
                    "_TSignatures@@Signatures@@"
                ],
                "replace_with": []
            }
        },
        "Signatures.duplicate_key": {
            "name": "duplicate_key",
            "location": 128,
            "return": [
                "_TSignatures@@Signatures@@"
            ],
            "arguments": {
                "self": [
                    "_TSignatures@@Signatures@@"
                ],
                "key": []
            }
        },
        "Signatures.duplicate_random": {
            "name": "duplicate_random",
            "location": 138,
            "return": [
                "_TSignatures@@Signatures@@"
            ],
            "arguments": {
                "self": [
                    "_TSignatures@@Signatures@@"
                ]
            }
        },
        "Signatures._encode": {
            "name": "_encode",
            "location": 142,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/datatypes/signature_test.py": {
        "random_sig": {
            "name": "random_sig",
            "location": 9,
            "return": [
                "api.datatypes.signature.Signature"
            ],
            "arguments": {}
        },
        "test_replace_sig": {
            "name": "test_replace_sig",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_replace_key": {
            "name": "test_replace_key",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sigs_remove_key": {
            "name": "test_sigs_remove_key",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sigs_replace_key": {
            "name": "test_sigs_replace_key",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_sigs_duplicate_key": {
            "name": "test_sigs_duplicate_key",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tuf-mitm-proxy-master/api/datatypes/signing.py": {
        "Signer.sign": {
            "name": "sign",
            "location": 10,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Verifier.verify": {
            "name": "verify",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "sig": [],
                "key": [],
                "message": []
            }
        },
        "Rsa.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "pub": [],
                "priv": []
            }
        },
        "Rsa.generate": {
            "name": "generate",
            "location": 31,
            "return": [
                "_TRsa@@Rsa@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TRsa]"
                ],
                "size": []
            }
        },
        "Rsa.from_files": {
            "name": "from_files",
            "location": 36,
            "return": [
                "_TRsa@@Rsa@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TRsa]"
                ],
                "pub_path": [],
                "priv_path": [],
                "key_format": []
            }
        },
        "Rsa.verify": {
            "name": "verify",
            "location": 45,
            "return": [
                "bool"
            ],
            "arguments": {
                "sig": [],
                "key": [],
                "message": []
            }
        },
        "Rsa.sign": {
            "name": "sign",
            "location": 53,
            "return": [
                "api.datatypes.signature.Signature"
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        },
        "Rsa._sign": {
            "name": "_sign",
            "location": 57,
            "return": [
                "api.datatypes.signature.Signature"
            ],
            "arguments": {
                "self": [],
                "message": [],
                "hash_format": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/datatypes/signing_test.py": {
        "get_rsa": {
            "name": "get_rsa",
            "location": 4,
            "return": [
                "api.datatypes.signing.Rsa"
            ],
            "arguments": {
                "size": []
            }
        },
        "test_sign_and_verify": {
            "name": "test_sign_and_verify",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tuf-mitm-proxy-master/api/datatypes/targets.py": {
        "Target.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "filepath": [],
                "meta": []
            }
        },
        "Target._encode": {
            "name": "_encode",
            "location": 22,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Targets.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "targets": []
            }
        },
        "Targets.from_dict": {
            "name": "from_dict",
            "location": 38,
            "return": [
                "_TTargets@@Targets@@"
            ],
            "arguments": {
                "cls": [
                    "Type[_TTargets]"
                ],
                "obj": []
            }
        },
        "Targets._encode": {
            "name": "_encode",
            "location": 41,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "tuf-mitm-proxy-master/api/datatypes/__init__.py": {},
    "tuf-mitm-proxy-master/fixtures/flows/bar.py": {},
    "tuf-mitm-proxy-master/fixtures/flows/foo.py": {},
    "tuf-mitm-proxy-master/fixtures/rsa/genkey.py": {},
    "tuf-mitm-proxy-master/flows/delete_signature.py": {
        "response": {
            "name": "response",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "flow": []
            }
        }
    },
    "tuf-mitm-proxy-master/flows/duplicate_signature.py": {
        "response": {
            "name": "response",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "flow": []
            }
        }
    },
    "tuf-mitm-proxy-master/flows/new_signature.py": {
        "response": {
            "name": "response",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "flow": []
            }
        }
    },
    "tuf-mitm-proxy-master/flows/passthrough.py": {
        "response": {
            "name": "response",
            "location": 7,
            "return": [
                "None"
            ],
            "arguments": {
                "flow": []
            }
        }
    },
    "tuf-mitm-proxy-master/flows/randomize_keyid.py": {
        "response": {
            "name": "response",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "flow": []
            }
        }
    },
    "tuf-mitm-proxy-master/flows/randomize_signature.py": {
        "response": {
            "name": "response",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "flow": []
            }
        }
    },
    "tuf-mitm-proxy-master/flows/randomize_version.py": {
        "response": {
            "name": "response",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "flow": []
            }
        }
    }
}
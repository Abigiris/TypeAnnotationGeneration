{
    "twigator_project-master/etc/settings.py": {},
    "twigator_project-master/tests/test_db_aggregations.py": {
        "AggregationsTestCase.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregationsTestCase.test_01_test_top_hashtags": {
            "name": "test_01_test_top_hashtags",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregationsTestCase.test_02_get_tweet_count": {
            "name": "test_02_get_tweet_count",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregationsTestCase.test_03_get_top_twitters": {
            "name": "test_03_get_top_twitters",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AggregationsTestCase.tearDown": {
            "name": "tearDown",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_db_entities.py": {
        "EntitiesTestCase.test_01_test_tweet_entity": {
            "name": "test_01_test_tweet_entity",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_db_queries.py": {
        "QueriesTestCase.setUp": {
            "name": "setUp",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueriesTestCase.test_01_test_get_last_tweets": {
            "name": "test_01_test_get_last_tweets",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueriesTestCase.test_02_test_get_tweet_by_id": {
            "name": "test_02_test_get_tweet_by_id",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueriesTestCase.test_01_test_author_by_id": {
            "name": "test_01_test_author_by_id",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueriesTestCase.tearDown": {
            "name": "tearDown",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_envconfig.py": {
        "EnvConfigTestCase.setUp": {
            "name": "setUp",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnvConfigTestCase.test_01_empty_environment": {
            "name": "test_01_empty_environment",
            "location": 18,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnvConfigTestCase.test_02_valid_environment": {
            "name": "test_02_valid_environment",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnvConfigTestCase.tearDown": {
            "name": "tearDown",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_twigator_dummy.py": {
        "DummyTestCase.setUp": {
            "name": "setUp",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyTestCase.test_01_test_normal": {
            "name": "test_01_test_normal",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DummyTestCase.tearDown": {
            "name": "tearDown",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_twigator_log.py": {
        "LoggerTestCase.test_01_info": {
            "name": "test_01_info",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoggerTestCase.test_02_warning": {
            "name": "test_02_warning",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "LoggerTestCase.test_03_error": {
            "name": "test_03_error",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_twigator_schemabuilder.py": {
        "SchemaBuilderTestCase.setUp": {
            "name": "setUp",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SchemaBuilderTestCase.test_01_test_normal": {
            "name": "test_01_test_normal",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_twigator_streamer.py": {
        "MyStreamerTestCase.setUp": {
            "name": "setUp",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyStreamerTestCase.test_01_on_success_normal": {
            "name": "test_01_on_success_normal",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyStreamerTestCase.test_02_on_success_limit": {
            "name": "test_02_on_success_limit",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyStreamerTestCase.test_03_on_error": {
            "name": "test_03_on_error",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyStreamerTestCase.tearDown": {
            "name": "tearDown",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueReaderTestCase.setUp": {
            "name": "setUp",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueReaderTestCase.test_01_add_to_db": {
            "name": "test_01_add_to_db",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueReaderTestCase.test_02_process_chunk": {
            "name": "test_02_process_chunk",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueReaderTestCase.test_03_set_exit": {
            "name": "test_03_set_exit",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueReaderTestCase.test_04_run": {
            "name": "test_04_run",
            "location": 50,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueReaderTestCase.tearDown": {
            "name": "tearDown",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RunStreamerTestCase.setUp": {
            "name": "setUp",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RunStreamerTestCase.test_01_dummy": {
            "name": "test_01_dummy",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RunStreamerTestCase.tearDown": {
            "name": "tearDown",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/test_twigator_worker.py": {
        "WorkerTestCase.setUp": {
            "name": "setUp",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WorkerTestCase.test_01_test_get_statuses": {
            "name": "test_01_test_get_statuses",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WorkerTestCase.test_02_test_add_to_db": {
            "name": "test_02_test_add_to_db",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WorkerTestCase.test_03_runner_no_tweet_query": {
            "name": "test_03_runner_no_tweet_query",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WorkerTestCase.tearDown": {
            "name": "tearDown",
            "location": 47,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/tests/__init__.py": {
        "mytestrunner": {
            "name": "mytestrunner",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "tc": []
            }
        }
    },
    "twigator_project-master/twigator/envconfig.py": {
        "EnvConfig.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "defaults": [],
                "environment": []
            }
        },
        "EnvConfig.check_var": {
            "name": "check_var",
            "location": 27,
            "return": [
                "bool"
            ],
            "arguments": {
                "var": [
                    "str"
                ]
            }
        },
        "EnvConfig.__getattr__": {
            "name": "__getattr__",
            "location": 35,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "attr": []
            }
        }
    },
    "twigator_project-master/twigator/schemabuilder.py": {
        "get_schema": {
            "name": "get_schema",
            "location": 15,
            "return": [
                "Union[(bytes, str)]"
            ],
            "arguments": {}
        }
    },
    "twigator_project-master/twigator/streamer.py": {
        "run_streamer": {
            "name": "run_streamer",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "query": [
                    "Optional[str]"
                ]
            }
        },
        "MyStreamer.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyStreamer.on_success": {
            "name": "on_success",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict"
                ]
            }
        },
        "MyStreamer.on_error": {
            "name": "on_error",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status_code": [
                    "int"
                ],
                "data": [
                    "dict"
                ]
            }
        },
        "QueueReader.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "queue": [],
                "query": []
            }
        },
        "QueueReader.add_to_db": {
            "name": "add_to_db",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict"
                ]
            }
        },
        "QueueReader.process_chunk": {
            "name": "process_chunk",
            "location": 81,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "chunk": [
                    "List[dict]"
                ]
            }
        },
        "QueueReader.set_exit": {
            "name": "set_exit",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "QueueReader.run": {
            "name": "run",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "twigator_project-master/twigator/webserver.py": {
        "openapi_schema": {
            "name": "openapi_schema",
            "location": 222,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "ResponseBuilder.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ResponseBuilder.response": {
            "name": "response",
            "location": 48,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResponseBuilder.json": {
            "name": "json",
            "location": 56,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ResponseBuilder.set_status": {
            "name": "set_status",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "status": [
                    "str"
                ]
            }
        },
        "ResponseBuilder.set_ok_status": {
            "name": "set_ok_status",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ResponseBuilder.set_error_status": {
            "name": "set_error_status",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ResponseBuilder.set_result": {
            "name": "set_result",
            "location": 87,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "Collection"
                ]
            }
        }
    },
    "twigator_project-master/twigator/worker.py": {
        "get_statuses": {
            "name": "get_statuses",
            "location": 21,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "in_query": [
                    "str"
                ],
                "tweet_count": [
                    "int"
                ],
                "consumer_key": [
                    "str"
                ],
                "consumer_secret": [
                    "str"
                ]
            }
        },
        "add_to_db": {
            "name": "add_to_db",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "statuses": [
                    "List[dict]"
                ],
                "query_phrases": [
                    "str"
                ]
            }
        },
        "runner": {
            "name": "runner",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "tweet_count": [
                    "Optional[int]"
                ],
                "tweet_schedule": [
                    "Optional[int]"
                ],
                "tweet_query": [
                    "Optional[str]"
                ],
                "consumer_key": [
                    "Optional[str]"
                ],
                "consumer_secret": [
                    "Optional[str]"
                ],
                "database": [
                    "Optional[str]"
                ],
                "database_host": [
                    "Optional[str]"
                ],
                "oneshot": []
            }
        }
    },
    "twigator_project-master/twigator/__init__.py": {},
    "twigator_project-master/twigator/db/aggregations.py": {
        "get_top_hashtags": {
            "name": "get_top_hashtags",
            "location": 6,
            "return": [
                "list"
            ],
            "arguments": {
                "query": [
                    "Optional[str]"
                ],
                "limit": [
                    "Optional[int]"
                ]
            }
        },
        "get_tweet_count": {
            "name": "get_tweet_count",
            "location": 18,
            "return": [
                "int"
            ],
            "arguments": {
                "query": [
                    "Optional[str]"
                ]
            }
        },
        "get_top_twitters": {
            "name": "get_top_twitters",
            "location": 28,
            "return": [
                "list"
            ],
            "arguments": {
                "query": [
                    "Optional[str]"
                ],
                "limit": [
                    "Optional[int]"
                ]
            }
        }
    },
    "twigator_project-master/twigator/db/connection.py": {
        "MongoConnection.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db": [
                    "Optional[str]"
                ],
                "host": [
                    "Optional[str]"
                ],
                "port": [
                    "Optional[int]"
                ]
            }
        },
        "MongoConnection.__enter__": {
            "name": "__enter__",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MongoConnection.__exit__": {
            "name": "__exit__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "Optional[Type[BaseException]]"
                ],
                "value": [
                    "Optional[BaseException]"
                ],
                "traceback": []
            }
        }
    },
    "twigator_project-master/twigator/db/entities.py": {},
    "twigator_project-master/twigator/db/queries.py": {
        "tweet_to_dict": {
            "name": "tweet_to_dict",
            "location": 11,
            "return": [
                "dict"
            ],
            "arguments": {
                "tweet": [
                    "twigator.db.entities.Tweet"
                ]
            }
        },
        "get_last_tweets": {
            "name": "get_last_tweets",
            "location": 24,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "phrase": [
                    "Optional[str]"
                ],
                "limit": [
                    "int"
                ],
                "offset": [
                    "int"
                ],
                "date_after": [
                    "Optional[str]"
                ]
            }
        },
        "get_tweet_by_id": {
            "name": "get_tweet_by_id",
            "location": 43,
            "return": [
                "Collection"
            ],
            "arguments": {
                "tweet_id": [
                    "int"
                ]
            }
        },
        "get_author_by_id": {
            "name": "get_author_by_id",
            "location": 49,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "author_id": [
                    "int"
                ],
                "limit": [
                    "int"
                ],
                "offset": [
                    "int"
                ]
            }
        }
    },
    "twigator_project-master/twigator/db/__init__.py": {},
    "twigator_project-master/twigator/log/log.py": {},
    "twigator_project-master/twigator/log/__init__.py": {}
}
{
    "twitterELK-master/containers/ingress/retrieve_sample_data.py": {},
    "twitterELK-master/containers/ingress/setup.py": {},
    "twitterELK-master/containers/ingress/ingress/celery.py": {
        "process_tweet": {
            "name": "process_tweet",
            "location": 31,
            "return": [],
            "arguments": {
                "twitter_index": [],
                "tweet_data": []
            }
        }
    },
    "twitterELK-master/containers/ingress/ingress/listeners.py": {
        "QueueListener.__init__": {
            "name": "__init__",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "twitter_index": [],
                "ignore_retweets": []
            }
        },
        "QueueListener.on_data": {
            "name": "on_data",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "raw_data": []
            }
        }
    },
    "twitterELK-master/containers/ingress/ingress/main.py": {
        "shutdown": {
            "name": "shutdown",
            "location": 17,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "exit_code": []
            }
        },
        "main": {
            "name": "main",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "twitterELK-master/containers/ingress/ingress/structures.py": {
        "PluginBase.process_tweet": {
            "name": "process_tweet",
            "location": 30,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": [],
                "tweet_json": []
            }
        },
        "PluginBase.import_subclasses": {
            "name": "import_subclasses",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "twitterELK-master/containers/ingress/ingress/utils.py": {
        "get_singleton_instance": {
            "name": "get_singleton_instance",
            "location": 15,
            "return": [
                "Any"
            ],
            "arguments": {
                "obj_type": []
            }
        },
        "create_es_connection": {
            "name": "create_es_connection",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {
                "es_host": []
            }
        },
        "setup_mappings": {
            "name": "setup_mappings",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "twitter_index": [],
                "es_host": []
            }
        },
        "aggregate_data_schema": {
            "name": "aggregate_data_schema",
            "location": 66,
            "return": [
                "dict"
            ],
            "arguments": {
                "base_class": [],
                "include_defaults": []
            }
        },
        "find_subclasses": {
            "name": "find_subclasses",
            "location": 88,
            "return": [
                "Generator[(Any, Any, None)]"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "twitterELK-master/containers/ingress/ingress/__init__.py": {
        "config_logging": {
            "name": "config_logging",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "level": []
            }
        }
    },
    "twitterELK-master/containers/ingress/ingress/data_processing/geocode.py": {
        "GeoCoding.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GeoCoding.process_tweet": {
            "name": "process_tweet",
            "location": 66,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "tweet_json": [
                    "_T0@@"
                ]
            }
        }
    },
    "twitterELK-master/containers/ingress/ingress/data_processing/processing.py": {
        "DataProcessor.__init__": {
            "name": "__init__",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "twitter_index": [],
                "queue": []
            }
        },
        "DataProcessor._load_plugins": {
            "name": "_load_plugins",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataProcessor.start": {
            "name": "start",
            "location": 64,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataProcessor.stop": {
            "name": "stop",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DataProcessor.retrieve_data": {
            "name": "retrieve_data",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timeout": []
            }
        },
        "DataProcessor.process_data": {
            "name": "process_data",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "DataProcessor.store_data": {
            "name": "store_data",
            "location": 110,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "twitterELK-master/containers/ingress/ingress/data_processing/sentiment.py": {
        "SentimentAnalysis.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SentimentAnalysis.process_tweet": {
            "name": "process_tweet",
            "location": 59,
            "return": [
                "_T0@@"
            ],
            "arguments": {
                "self": [],
                "tweet_json": [
                    "_T0@@"
                ]
            }
        },
        "SentimentAnalysis._blob_process_tweet": {
            "name": "_blob_process_tweet",
            "location": 105,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "tweet_text": [],
                "tweet_lang": []
            }
        },
        "SentimentAnalysis._vader_classify": {
            "name": "_vader_classify",
            "location": 148,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {
                "self": [],
                "tweet_text": []
            }
        }
    },
    "twitterELK-master/containers/ingress/ingress/data_processing/__init__.py": {},
    "twitterELK-master/containers/ingress/tests/test_listeners.py": {
        "test_listener_queue_push_happy": {
            "name": "test_listener_queue_push_happy",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_listener_queue_push_bad_data": {
            "name": "test_listener_queue_push_bad_data",
            "location": 36,
            "return": [],
            "arguments": {
                "input_data": [],
                "caplog": []
            }
        }
    },
    "twitterELK-master/containers/ingress/tests/test_structures.py": {
        "test_plugin_base_import_subclasses": {
            "name": "test_plugin_base_import_subclasses",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_plugin_base_raises_process_tweet": {
            "name": "test_plugin_base_raises_process_tweet",
            "location": 52,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        }
    },
    "twitterELK-master/containers/ingress/tests/test_utils.py": {
        "test_get_singleton_happy_case": {
            "name": "test_get_singleton_happy_case",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_singleton_invalid_inputs": {
            "name": "test_singleton_invalid_inputs",
            "location": 62,
            "return": [],
            "arguments": {
                "expected_error": [],
                "input_class": [],
                "input_args": [],
                "caplog": []
            }
        },
        "test_find_subclasses_happy_case": {
            "name": "test_find_subclasses_happy_case",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_find_subclasses_raises": {
            "name": "test_find_subclasses_raises",
            "location": 94,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_aggregate_data_schema": {
            "name": "test_aggregate_data_schema",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_find_subclasses_raises.dummy": {
            "name": "dummy",
            "location": 96,
            "return": [],
            "arguments": {}
        }
    },
    "twitterELK-master/containers/ingress/tests/tweets.py": {},
    "twitterELK-master/containers/ingress/tests/__init__.py": {},
    "twitterELK-master/containers/ingress/tests/data_processing/test_geocode.py": {
        "test_geocode_process_tweet_happy_case": {
            "name": "test_geocode_process_tweet_happy_case",
            "location": 23,
            "return": [],
            "arguments": {
                "input_tweet": [],
                "is_geotagged": [],
                "expected_coordinates": []
            }
        }
    },
    "twitterELK-master/containers/ingress/tests/data_processing/test_processing.py": {
        "test_data_processor_start": {
            "name": "test_data_processor_start",
            "location": 10,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_data_processor_stop": {
            "name": "test_data_processor_stop",
            "location": 25,
            "return": [
                "NoReturn"
            ],
            "arguments": {}
        },
        "test_data_processor_retrieve_data_stops": {
            "name": "test_data_processor_retrieve_data_stops",
            "location": 34,
            "return": [
                "NoReturn"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_data_processor_process_data": {
            "name": "test_data_processor_process_data",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "monkeypatch": []
            }
        },
        "test_data_processor_retrieve_data_stops.mock_process_data": {
            "name": "mock_process_data",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        },
        "test_data_processor_retrieve_data_stops.mock_queue_get": {
            "name": "mock_queue_get",
            "location": 60,
            "return": [],
            "arguments": {}
        },
        "test_data_processor_process_data.mock_load_plugins": {
            "name": "mock_load_plugins",
            "location": 106,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "test_data_processor_process_data.MockPlugin.process_tweet": {
            "name": "process_tweet",
            "location": 99,
            "return": [],
            "arguments": {
                "self": [],
                "data": []
            }
        }
    },
    "twitterELK-master/containers/ingress/tests/data_processing/test_sentiment.py": {
        "test_process_tweet_happy_case": {
            "name": "test_process_tweet_happy_case",
            "location": 38,
            "return": [],
            "arguments": {
                "input_tweet": [],
                "monkeypatch": []
            }
        }
    },
    "twitterELK-master/containers/ingress/tests/data_processing/__init__.py": {}
}
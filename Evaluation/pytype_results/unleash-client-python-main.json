{
    "setup.py": {
        "readme": {
            "name": "readme",
            "location": 5,
            "return": [
                "str"
            ],
            "arguments": {}
        }
    },
    "docs/conf.py": {},
    "tests/conftest.py": {
        "cache_empty": {
            "name": "cache_empty",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "cache_full": {
            "name": "cache_full",
            "location": 23,
            "return": [],
            "arguments": {}
        },
        "cache_custom": {
            "name": "cache_custom",
            "location": 36,
            "return": [],
            "arguments": {}
        },
        "cache_segments": {
            "name": "cache_segments",
            "location": 49,
            "return": [],
            "arguments": {}
        }
    },
    "tests/__init__.py": {},
    "tests/integration_tests/integration.py": {},
    "tests/integration_tests/integration_gitlab.py": {},
    "tests/integration_tests/integration_unleashheroku.py": {},
    "tests/integration_tests/integration_unleashhosted.py": {
        "DogTest.load_provisioning": {
            "name": "load_provisioning",
            "location": 11,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "DogTest.apply": {
            "name": "apply",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "tests/specification_tests/test_01_simple_examples.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 40,
            "return": [],
            "arguments": {}
        },
        "test_feature_a": {
            "name": "test_feature_a",
            "location": 49,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_b": {
            "name": "test_feature_b",
            "location": 64,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_c": {
            "name": "test_feature_c",
            "location": 79,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_unknown": {
            "name": "test_feature_unknown",
            "location": 94,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_all_context_values": {
            "name": "test_feature_all_context_values",
            "location": 109,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_02_user_with_id_strategy.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 65,
            "return": [],
            "arguments": {}
        },
        "test_feature_a2_enabled": {
            "name": "test_feature_a2_enabled",
            "location": 74,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_a2_disabled": {
            "name": "test_feature_a2_disabled",
            "location": 93,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_c2": {
            "name": "test_feature_c2",
            "location": 112,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_d2": {
            "name": "test_feature_d2",
            "location": 132,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_no_id": {
            "name": "test_feature_no_id",
            "location": 152,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_03_gradual_rollout_user_id_strategy.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "test_feature_a3_enabled": {
            "name": "test_feature_a3_enabled",
            "location": 78,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_a3_nocontext": {
            "name": "test_feature_a3_nocontext",
            "location": 97,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_b3_enabled": {
            "name": "test_feature_b3_enabled",
            "location": 114,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_b3_disabled": {
            "name": "test_feature_b3_disabled",
            "location": 133,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_c3": {
            "name": "test_feature_c3",
            "location": 152,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_d3": {
            "name": "test_feature_d3",
            "location": 171,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_04_gradual_rollout_session_id_strategy.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 69,
            "return": [],
            "arguments": {}
        },
        "test_feature_a4_enabled": {
            "name": "test_feature_a4_enabled",
            "location": 78,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_a4_nocontext": {
            "name": "test_feature_a4_nocontext",
            "location": 97,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_b4_enabled": {
            "name": "test_feature_b4_enabled",
            "location": 114,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_b4_disabled": {
            "name": "test_feature_b4_disabled",
            "location": 133,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_c4": {
            "name": "test_feature_c4",
            "location": 152,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_d4": {
            "name": "test_feature_d4",
            "location": 171,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_05_gradual_rollout_random_strategy.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 66,
            "return": [],
            "arguments": {}
        },
        "test_feature_a5": {
            "name": "test_feature_a5",
            "location": 75,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_b5": {
            "name": "test_feature_b5",
            "location": 90,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_c5": {
            "name": "test_feature_c5",
            "location": 105,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_d5": {
            "name": "test_feature_d5",
            "location": 120,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_06_remote_address_strategy.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 52,
            "return": [],
            "arguments": {}
        },
        "test_feature_remoteaddress_a_enabled": {
            "name": "test_feature_remoteaddress_a_enabled",
            "location": 61,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_remoteaddress_a_nocontext": {
            "name": "test_feature_remoteaddress_a_nocontext",
            "location": 80,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_remoteaddress_b_enabled": {
            "name": "test_feature_remoteaddress_b_enabled",
            "location": 97,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_remoteaddress_b_list": {
            "name": "test_feature_remoteaddress_b_list",
            "location": 116,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_remoteaddress_b_notlist": {
            "name": "test_feature_remoteaddress_b_notlist",
            "location": 136,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_remoteaddress_c": {
            "name": "test_feature_remoteaddress_c",
            "location": 156,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_07_multiple_strategies.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 77,
            "return": [],
            "arguments": {}
        },
        "test_feature_multiStrategies_a_enabled": {
            "name": "test_feature_multiStrategies_a_enabled",
            "location": 86,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_multiStrategies_b_nouser": {
            "name": "test_feature_multiStrategies_b_nouser",
            "location": 101,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_multiStrategies_b_enabled": {
            "name": "test_feature_multiStrategies_b_enabled",
            "location": 118,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_multiStrategies_c_unknown": {
            "name": "test_feature_multiStrategies_c_unknown",
            "location": 137,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_multiStrategies_c_disabled": {
            "name": "test_feature_multiStrategies_c_disabled",
            "location": 154,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_multiStrategies_c_enabled": {
            "name": "test_feature_multiStrategies_c_enabled",
            "location": 173,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_08_variants.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 170,
            "return": [],
            "arguments": {}
        },
        "test_feature_variantsA_enabled": {
            "name": "test_feature_variantsA_enabled",
            "location": 179,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsMissingToggle": {
            "name": "test_feature_variantsMissingToggle",
            "location": 208,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsB_2": {
            "name": "test_feature_variantsB_2",
            "location": 231,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsB_0": {
            "name": "test_feature_variantsB_0",
            "location": 260,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsC_315": {
            "name": "test_feature_variantsC_315",
            "location": 289,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsC_320": {
            "name": "test_feature_variantsC_320",
            "location": 318,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsC_729": {
            "name": "test_feature_variantsC_729",
            "location": 347,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsD_enabled367": {
            "name": "test_feature_variantsD_enabled367",
            "location": 376,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsD_enabled31": {
            "name": "test_feature_variantsD_enabled31",
            "location": 405,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsD_19": {
            "name": "test_feature_variantsD_19",
            "location": 434,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsoverrideD_132": {
            "name": "test_feature_variantsoverrideD_132",
            "location": 463,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsoverrideD_61": {
            "name": "test_feature_variantsoverrideD_61",
            "location": 492,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_variantsoverrideD_82": {
            "name": "test_feature_variantsoverrideD_82",
            "location": 521,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_09_strategy_constraints.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 188,
            "return": [],
            "arguments": {}
        },
        "test_feature_simple_defaultenv": {
            "name": "test_feature_simple_defaultenv",
            "location": 197,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintssimple_devenv": {
            "name": "test_feature_constraintssimple_devenv",
            "location": 212,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintslist_stageenv": {
            "name": "test_feature_constraintslist_stageenv",
            "location": 228,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintslist_qaenv": {
            "name": "test_feature_constraintslist_qaenv",
            "location": 244,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintsmulti_user2": {
            "name": "test_feature_constraintsmulti_user2",
            "location": 260,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintsmulti_unknownuser": {
            "name": "test_feature_constraintsmulti_unknownuser",
            "location": 276,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintsmulti_web": {
            "name": "test_feature_constraintsmulti_web",
            "location": 292,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintscustom_norway": {
            "name": "test_feature_constraintscustom_norway",
            "location": 309,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintscustom_denmark": {
            "name": "test_feature_constraintscustom_denmark",
            "location": 326,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintsdual_prod": {
            "name": "test_feature_constraintsdual_prod",
            "location": 343,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintsdual_dev": {
            "name": "test_feature_constraintsdual_dev",
            "location": 359,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintsempty": {
            "name": "test_feature_constraintsempty",
            "location": 375,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_10_flexible_rollout.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 84,
            "return": [],
            "arguments": {}
        },
        "test_feature_100_enabled": {
            "name": "test_feature_100_enabled",
            "location": 93,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_10userid_enabled": {
            "name": "test_feature_10userid_enabled",
            "location": 108,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_10userid_disabled": {
            "name": "test_feature_10userid_disabled",
            "location": 123,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_10sessionid_enabled": {
            "name": "test_feature_10sessionid_enabled",
            "location": 138,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_10sessionid_disabled": {
            "name": "test_feature_10sessionid_disabled",
            "location": 153,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_55userid_enabled": {
            "name": "test_feature_55userid_enabled",
            "location": 168,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_55sessionid_disabled": {
            "name": "test_feature_55sessionid_disabled",
            "location": 183,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_55_nouserdisabled": {
            "name": "test_feature_55_nouserdisabled",
            "location": 198,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_42sessionid_enabled": {
            "name": "test_feature_42sessionid_enabled",
            "location": 213,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_11_strategy_constraints_edge_cases.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "test_feature_constraints_novalue_defaultenv": {
            "name": "test_feature_constraints_novalue_defaultenv",
            "location": 79,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraints_novalue_emptyenv": {
            "name": "test_feature_constraints_novalue_emptyenv",
            "location": 94,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraints_novalue_defaultenv_notin": {
            "name": "test_feature_constraints_novalue_defaultenv_notin",
            "location": 109,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraints_novalue_emptyenv_notin": {
            "name": "test_feature_constraints_novalue_emptyenv_notin",
            "location": 124,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraints_empty_defaultenv": {
            "name": "test_feature_constraints_empty_defaultenv",
            "location": 139,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraints_empty_emptyenv": {
            "name": "test_feature_constraints_empty_emptyenv",
            "location": 154,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_12_custom_stickiness.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 90,
            "return": [],
            "arguments": {}
        },
        "test_feature_flexiblerollout_stickiness_100": {
            "name": "test_feature_flexiblerollout_stickiness_100",
            "location": 99,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_flexiblerollout_stickiness_50_nocontext": {
            "name": "test_feature_flexiblerollout_stickiness_50_nocontext",
            "location": 114,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_flexiblerollout_stickiness_50_customfield_402": {
            "name": "test_feature_flexiblerollout_stickiness_50_customfield_402",
            "location": 129,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_flexiblerollout_stickiness_50_customfield_388": {
            "name": "test_feature_flexiblerollout_stickiness_50_customfield_388",
            "location": 144,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_flexiblerollout_stickiness_50_customfield_39": {
            "name": "test_feature_flexiblerollout_stickiness_50_customfield_39",
            "location": 159,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_variant_flexiblerollout_stickiness_100_customfield_528": {
            "name": "test_variant_flexiblerollout_stickiness_100_customfield_528",
            "location": 174,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_variant_flexiblerollout_stickiness_100_customfield_16": {
            "name": "test_variant_flexiblerollout_stickiness_100_customfield_16",
            "location": 203,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_variant_flexiblerollout_stickiness_100_customfield_198": {
            "name": "test_variant_flexiblerollout_stickiness_100_customfield_198",
            "location": 232,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_variant_flexiblerollout_stickiness_100_customfield_43": {
            "name": "test_variant_flexiblerollout_stickiness_100_customfield_43",
            "location": 261,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_variant_flexiblerollout_stickiness_100_customfield_112": {
            "name": "test_variant_flexiblerollout_stickiness_100_customfield_112",
            "location": 290,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_13_constraint_operators.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 345,
            "return": [],
            "arguments": {}
        },
        "test_feature_constraintoperators_startswith_enabled": {
            "name": "test_feature_constraintoperators_startswith_enabled",
            "location": 354,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_startswith_disabled": {
            "name": "test_feature_constraintoperators_startswith_disabled",
            "location": 369,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_startswith_enabled_multiple": {
            "name": "test_feature_constraintoperators_startswith_enabled_multiple",
            "location": 384,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_startswith_disabled_multiple": {
            "name": "test_feature_constraintoperators_startswith_disabled_multiple",
            "location": 399,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_endswith_enabled": {
            "name": "test_feature_constraintoperators_endswith_enabled",
            "location": 414,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_endswith_incorrectcasing": {
            "name": "test_feature_constraintoperators_endswith_incorrectcasing",
            "location": 429,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_endswith_ignorecasing": {
            "name": "test_feature_constraintoperators_endswith_ignorecasing",
            "location": 444,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_endswith_disabled": {
            "name": "test_feature_constraintoperators_endswith_disabled",
            "location": 459,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_contains_enabled": {
            "name": "test_feature_constraintoperators_contains_enabled",
            "location": 474,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_contains_disabled": {
            "name": "test_feature_constraintoperators_contains_disabled",
            "location": 489,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_contains_inverted": {
            "name": "test_feature_constraintoperators_contains_inverted",
            "location": 504,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numeq_enabled": {
            "name": "test_feature_constraintoperators_numeq_enabled",
            "location": 519,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numeq_enabled_floats": {
            "name": "test_feature_constraintoperators_numeq_enabled_floats",
            "location": 534,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numeq_inverted": {
            "name": "test_feature_constraintoperators_numeq_inverted",
            "location": 549,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numeqfloat_enabled_floats": {
            "name": "test_feature_constraintoperators_numeqfloat_enabled_floats",
            "location": 564,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numeqfloat_enabled_int": {
            "name": "test_feature_constraintoperators_numeqfloat_enabled_int",
            "location": 579,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numgt_enabled": {
            "name": "test_feature_constraintoperators_numgt_enabled",
            "location": 594,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numgt_disabled": {
            "name": "test_feature_constraintoperators_numgt_disabled",
            "location": 609,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numgte_enabled_equal": {
            "name": "test_feature_constraintoperators_numgte_enabled_equal",
            "location": 624,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numgte_enabled_greater": {
            "name": "test_feature_constraintoperators_numgte_enabled_greater",
            "location": 639,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numgte_disabled": {
            "name": "test_feature_constraintoperators_numgte_disabled",
            "location": 654,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numlte_enabled_equal": {
            "name": "test_feature_constraintoperators_numlte_enabled_equal",
            "location": 669,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numlte_enabled_less": {
            "name": "test_feature_constraintoperators_numlte_enabled_less",
            "location": 684,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numlt_enabled_less": {
            "name": "test_feature_constraintoperators_numlt_enabled_less",
            "location": 699,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numlt_disabled_equal": {
            "name": "test_feature_constraintoperators_numlt_disabled_equal",
            "location": 714,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numberranger_disabled": {
            "name": "test_feature_constraintoperators_numberranger_disabled",
            "location": 729,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_numberranger_enabled": {
            "name": "test_feature_constraintoperators_numberranger_enabled",
            "location": 744,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_dateafter_enabled": {
            "name": "test_feature_constraintoperators_dateafter_enabled",
            "location": 759,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_dateafter_disabled": {
            "name": "test_feature_constraintoperators_dateafter_disabled",
            "location": 774,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_dateafter_exclusive": {
            "name": "test_feature_constraintoperators_dateafter_exclusive",
            "location": 789,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_datebefore_enabled": {
            "name": "test_feature_constraintoperators_datebefore_enabled",
            "location": 804,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_datebefore_disabled": {
            "name": "test_feature_constraintoperators_datebefore_disabled",
            "location": 819,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_daterange": {
            "name": "test_feature_constraintoperators_daterange",
            "location": 834,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_14_constraint_semver_operators.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 164,
            "return": [],
            "arguments": {}
        },
        "test_feature_constraintoperators_semvereq_enabled": {
            "name": "test_feature_constraintoperators_semvereq_enabled",
            "location": 173,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semvereq_disabled": {
            "name": "test_feature_constraintoperators_semvereq_disabled",
            "location": 188,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semvergt_enabled": {
            "name": "test_feature_constraintoperators_semvergt_enabled",
            "location": 203,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semvergt_disabled": {
            "name": "test_feature_constraintoperators_semvergt_disabled",
            "location": 218,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semverlt_enabled": {
            "name": "test_feature_constraintoperators_semverlt_enabled",
            "location": 233,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semverlt_disabled": {
            "name": "test_feature_constraintoperators_semverlt_disabled",
            "location": 248,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semveralphagt_beta": {
            "name": "test_feature_constraintoperators_semveralphagt_beta",
            "location": 263,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semveralphagt_release": {
            "name": "test_feature_constraintoperators_semveralphagt_release",
            "location": 278,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semveralphalt_beta": {
            "name": "test_feature_constraintoperators_semveralphalt_beta",
            "location": 293,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semveralphalt_oldbeta": {
            "name": "test_feature_constraintoperators_semveralphalt_oldbeta",
            "location": 308,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semveralphalt_release": {
            "name": "test_feature_constraintoperators_semveralphalt_release",
            "location": 323,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semveralphalt_alphas_lt": {
            "name": "test_feature_constraintoperators_semveralphalt_alphas_lt",
            "location": 338,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semveralphalt_dif_alphas_gt": {
            "name": "test_feature_constraintoperators_semveralphalt_dif_alphas_gt",
            "location": 353,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semverunnumbered_lt": {
            "name": "test_feature_constraintoperators_semverunnumbered_lt",
            "location": 368,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semverrc_alpha": {
            "name": "test_feature_constraintoperators_semverrc_alpha",
            "location": 382,
            "return": [
                "None"
            ],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semverc_beta": {
            "name": "test_feature_constraintoperators_semverc_beta",
            "location": 395,
            "return": [
                "None"
            ],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_constraintoperators_semverc_release": {
            "name": "test_feature_constraintoperators_semverc_release",
            "location": 409,
            "return": [
                "None"
            ],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/test_15-global-constraints.py": {
        "unleash_client": {
            "name": "unleash_client",
            "location": 158,
            "return": [],
            "arguments": {}
        },
        "test_feature_globalSegmentOff_should_be_disabled": {
            "name": "test_feature_globalSegmentOff_should_be_disabled",
            "location": 167,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_globalSegmentOn_should_be_enabled": {
            "name": "test_feature_globalSegmentOn_should_be_enabled",
            "location": 182,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_globalSegmentAndConstraint_should_be_enabled": {
            "name": "test_feature_globalSegmentAndConstraint_should_be_enabled",
            "location": 197,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_withMissingSegment_should_force_evaluation_to_false": {
            "name": "test_feature_withMissingSegment_should_force_evaluation_to_false",
            "location": 212,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_feature_withSeveralConstraintsAndSegments_should_be_enabled": {
            "name": "test_feature_withSeveralConstraintsAndSegments_should_be_enabled",
            "location": 227,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        }
    },
    "tests/specification_tests/__init__.py": {},
    "tests/unit_tests/test_client.py": {
        "cache": {
            "name": "cache",
            "location": 38,
            "return": [],
            "arguments": {
                "tmpdir": []
            }
        },
        "unleash_client": {
            "name": "unleash_client",
            "location": 43,
            "return": [],
            "arguments": {
                "cache": []
            }
        },
        "unleash_client_project": {
            "name": "unleash_client_project",
            "location": 56,
            "return": [],
            "arguments": {
                "cache": []
            }
        },
        "unleash_client_nodestroy": {
            "name": "unleash_client_nodestroy",
            "location": 70,
            "return": [],
            "arguments": {
                "cache": []
            }
        },
        "unleash_client_toggle_only": {
            "name": "unleash_client_toggle_only",
            "location": 82,
            "return": [],
            "arguments": {
                "cache": []
            }
        },
        "test_UC_initialize_default": {
            "name": "test_UC_initialize_default",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_UC_initialize_full": {
            "name": "test_UC_initialize_full",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_UC_type_violation": {
            "name": "test_UC_type_violation",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_uc_lifecycle": {
            "name": "test_uc_lifecycle",
            "location": 135,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_uc_is_enabled": {
            "name": "test_uc_is_enabled",
            "location": 158,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_uc_project": {
            "name": "test_uc_project",
            "location": 171,
            "return": [],
            "arguments": {
                "unleash_client_project": []
            }
        },
        "test_uc_fallbackfunction": {
            "name": "test_uc_fallbackfunction",
            "location": 186,
            "return": [],
            "arguments": {
                "unleash_client": [],
                "mocker": []
            }
        },
        "test_uc_dirty_cache": {
            "name": "test_uc_dirty_cache",
            "location": 220,
            "return": [],
            "arguments": {
                "unleash_client_nodestroy": []
            }
        },
        "test_uc_is_enabled_with_context": {
            "name": "test_uc_is_enabled_with_context",
            "location": 240,
            "return": [],
            "arguments": {}
        },
        "test_uc_is_enabled_error_states": {
            "name": "test_uc_is_enabled_error_states",
            "location": 260,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_uc_context_manager": {
            "name": "test_uc_context_manager",
            "location": 274,
            "return": [],
            "arguments": {
                "unleash_client_nodestroy": []
            }
        },
        "test_uc_not_initialized_isenabled": {
            "name": "test_uc_not_initialized_isenabled",
            "location": 284,
            "return": [],
            "arguments": {}
        },
        "test_uc_get_variant": {
            "name": "test_uc_get_variant",
            "location": 291,
            "return": [],
            "arguments": {}
        },
        "test_uc_not_initialized_getvariant": {
            "name": "test_uc_not_initialized_getvariant",
            "location": 316,
            "return": [],
            "arguments": {}
        },
        "test_uc_metrics": {
            "name": "test_uc_metrics",
            "location": 324,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_uc_disabled_registration": {
            "name": "test_uc_disabled_registration",
            "location": 341,
            "return": [],
            "arguments": {
                "unleash_client_toggle_only": []
            }
        },
        "test_uc_server_error": {
            "name": "test_uc_server_error",
            "location": 358,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_uc_server_error_recovery": {
            "name": "test_uc_server_error_recovery",
            "location": 377,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_uc_with_invalid_url": {
            "name": "test_uc_with_invalid_url",
            "location": 395,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_uc_with_network_error": {
            "name": "test_uc_with_network_error",
            "location": 402,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_uc_multiple_initializations": {
            "name": "test_uc_multiple_initializations",
            "location": 410,
            "return": [],
            "arguments": {
                "unleash_client": []
            }
        },
        "test_uc_cache_bootstrap_dict": {
            "name": "test_uc_cache_bootstrap_dict",
            "location": 431,
            "return": [],
            "arguments": {
                "cache": []
            }
        },
        "test_uc_cache_bootstrap_file": {
            "name": "test_uc_cache_bootstrap_file",
            "location": 460,
            "return": [],
            "arguments": {
                "cache": []
            }
        },
        "test_uc_cache_bootstrap_url": {
            "name": "test_uc_cache_bootstrap_url",
            "location": 478,
            "return": [],
            "arguments": {
                "cache": []
            }
        },
        "EnvironmentStrategy.load_provisioning": {
            "name": "load_provisioning",
            "location": 20,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "EnvironmentStrategy.apply": {
            "name": "apply",
            "location": 23,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        },
        "test_uc_fallbackfunction.good_fallback": {
            "name": "good_fallback",
            "location": 187,
            "return": [],
            "arguments": {
                "feature_name": [],
                "context": []
            }
        },
        "test_uc_fallbackfunction.bad_fallback": {
            "name": "bad_fallback",
            "location": 190,
            "return": [],
            "arguments": {
                "feature_name": [],
                "context": []
            }
        },
        "test_uc_fallbackfunction.context_fallback": {
            "name": "context_fallback",
            "location": 193,
            "return": [],
            "arguments": {
                "feature_name": [],
                "context": []
            }
        }
    },
    "tests/unit_tests/test_constraints.py": {
        "constraint_IN": {
            "name": "constraint_IN",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "constraint_NOTIN": {
            "name": "constraint_NOTIN",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_constraint_IN_match": {
            "name": "test_constraint_IN_match",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "constraint_IN": []
            }
        },
        "test_constraint_IN_not_match": {
            "name": "test_constraint_IN_not_match",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "constraint_IN": []
            }
        },
        "test_constraint_IN_missingcontext": {
            "name": "test_constraint_IN_missingcontext",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "constraint_IN": []
            }
        },
        "test_constraint_NOTIN_match": {
            "name": "test_constraint_NOTIN_match",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "constraint_NOTIN": []
            }
        },
        "test_constraint_NOTIN_not_match": {
            "name": "test_constraint_NOTIN_not_match",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "constraint_NOTIN": []
            }
        },
        "test_constraint_inversion": {
            "name": "test_constraint_inversion",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraint_STR_CONTAINS": {
            "name": "test_constraint_STR_CONTAINS",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraint_STR_ENDS_WITH": {
            "name": "test_constraint_STR_ENDS_WITH",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraint_STR_STARTS_WITH": {
            "name": "test_constraint_STR_STARTS_WITH",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_NUM_EQ": {
            "name": "test_constraints_NUM_EQ",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_NUM_GT": {
            "name": "test_constraints_NUM_GT",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_NUM_GTE": {
            "name": "test_constraints_NUM_GTE",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_NUM_LT": {
            "name": "test_constraints_NUM_LT",
            "location": 129,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_NUM_LTE": {
            "name": "test_constraints_NUM_LTE",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_NUM_FLOAT": {
            "name": "test_constraints_NUM_FLOAT",
            "location": 145,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_DATE_AFTER": {
            "name": "test_constraints_DATE_AFTER",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_DATE_BEFORE": {
            "name": "test_constraints_DATE_BEFORE",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_default": {
            "name": "test_constraints_default",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_date_error": {
            "name": "test_constraints_date_error",
            "location": 175,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_SEMVER_EQ": {
            "name": "test_constraints_SEMVER_EQ",
            "location": 180,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_SEMVER_GT": {
            "name": "test_constraints_SEMVER_GT",
            "location": 188,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_SEMVER_LT": {
            "name": "test_constraints_SEMVER_LT",
            "location": 196,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_constraints_semverexception": {
            "name": "test_constraints_semverexception",
            "location": 204,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tests/unit_tests/test_custom_strategy.py": {
        "test_uc_customstrategy_happypath": {
            "name": "test_uc_customstrategy_happypath",
            "location": 47,
            "return": [],
            "arguments": {
                "recwarn": []
            }
        },
        "test_uc_customstrategy_depredationwarning": {
            "name": "test_uc_customstrategy_depredationwarning",
            "location": 75,
            "return": [],
            "arguments": {}
        },
        "test_uc_customstrategy_safemulti": {
            "name": "test_uc_customstrategy_safemulti",
            "location": 98,
            "return": [],
            "arguments": {}
        },
        "CatTest.load_provisioning": {
            "name": "load_provisioning",
            "location": 11,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "CatTest.apply": {
            "name": "apply",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        },
        "DogTest.load_provisioning": {
            "name": "load_provisioning",
            "location": 29,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "DogTest._call_": {
            "name": "_call_",
            "location": 32,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "tests/unit_tests/test_features.py": {
        "test_feature": {
            "name": "test_feature",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_feature_variants": {
            "name": "test_feature_variants",
            "location": 20,
            "return": [],
            "arguments": {}
        },
        "test_create_feature_true": {
            "name": "test_create_feature_true",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "test_feature": []
            }
        },
        "test_create_feature_false": {
            "name": "test_create_feature_false",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "test_feature": []
            }
        },
        "test_create_feature_not_enabled": {
            "name": "test_create_feature_not_enabled",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "test_feature": []
            }
        },
        "test_create_feature_exception": {
            "name": "test_create_feature_exception",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "test_feature": []
            }
        },
        "test_select_variation_novariation": {
            "name": "test_select_variation_novariation",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "test_feature": []
            }
        },
        "test_select_variation_variation": {
            "name": "test_select_variation_variation",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "test_feature_variants": []
            }
        }
    },
    "tests/unit_tests/test_loader.py": {
        "test_loader_initialization": {
            "name": "test_loader_initialization",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "cache_full": []
            }
        },
        "test_loader_refresh_strategies": {
            "name": "test_loader_refresh_strategies",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "cache_full": []
            }
        },
        "test_loader_refresh_variants": {
            "name": "test_loader_refresh_variants",
            "location": 58,
            "return": [
                "None"
            ],
            "arguments": {
                "cache_full": []
            }
        },
        "test_loader_initialization_failure": {
            "name": "test_loader_initialization_failure",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "cache_custom": []
            }
        },
        "test_loader_segments": {
            "name": "test_loader_segments",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "cache_segments": []
            }
        }
    },
    "tests/unit_tests/test_variants.py": {
        "variations": {
            "name": "variations",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "variations_with_stickiness": {
            "name": "variations_with_stickiness",
            "location": 12,
            "return": [],
            "arguments": {}
        },
        "test_variations_override_match": {
            "name": "test_variations_override_match",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "variations": []
            }
        },
        "test_variations_overrid_nomatch": {
            "name": "test_variations_overrid_nomatch",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "variations": []
            }
        },
        "test_variations_seed": {
            "name": "test_variations_seed",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "variations": []
            }
        },
        "test_variations_seed_override": {
            "name": "test_variations_seed_override",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "variations": []
            }
        },
        "test_variation_selectvariation_happypath": {
            "name": "test_variation_selectvariation_happypath",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "variations": []
            }
        },
        "test_variation_customvariation": {
            "name": "test_variation_customvariation",
            "location": 64,
            "return": [
                "None"
            ],
            "arguments": {
                "variations_with_stickiness": []
            }
        },
        "test_variation_selectvariation_multi": {
            "name": "test_variation_selectvariation_multi",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "variations": []
            }
        },
        "test_variation_override": {
            "name": "test_variation_override",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "variations": []
            }
        },
        "test_variation_novariants": {
            "name": "test_variation_novariants",
            "location": 93,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tests/unit_tests/__init__.py": {},
    "tests/unit_tests/api/test_feature.py": {
        "test_get_feature_toggle": {
            "name": "test_get_feature_toggle",
            "location": 18,
            "return": [],
            "arguments": {
                "response": [],
                "status": [],
                "expected": []
            }
        },
        "test_get_feature_toggle_project": {
            "name": "test_get_feature_toggle_project",
            "location": 32,
            "return": [],
            "arguments": {}
        },
        "test_get_feature_toggle_failed_etag": {
            "name": "test_get_feature_toggle_failed_etag",
            "location": 48,
            "return": [],
            "arguments": {}
        },
        "test_get_feature_toggle_etag_present": {
            "name": "test_get_feature_toggle_etag_present",
            "location": 63,
            "return": [],
            "arguments": {}
        }
    },
    "tests/unit_tests/api/test_metrics.py": {
        "test_send_metrics": {
            "name": "test_send_metrics",
            "location": 19,
            "return": [],
            "arguments": {
                "payload": [],
                "status": [],
                "expected": []
            }
        }
    },
    "tests/unit_tests/api/test_register.py": {
        "test_register_client": {
            "name": "test_register_client",
            "location": 18,
            "return": [],
            "arguments": {
                "payload": [],
                "status": [],
                "expected": []
            }
        }
    },
    "tests/unit_tests/api/__init__.py": {},
    "tests/unit_tests/periodic/test_aggregate_and_send_metrics.py": {
        "test_aggregate_and_send_metrics": {
            "name": "test_aggregate_and_send_metrics",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "test_no_metrics": {
            "name": "test_no_metrics",
            "location": 51,
            "return": [],
            "arguments": {}
        }
    },
    "tests/unit_tests/periodic/test_fetch_and_load.py": {
        "test_fetch_and_load": {
            "name": "test_fetch_and_load",
            "location": 13,
            "return": [],
            "arguments": {
                "cache_empty": []
            }
        },
        "test_fetch_and_load_project": {
            "name": "test_fetch_and_load_project",
            "location": 33,
            "return": [],
            "arguments": {
                "cache_empty": []
            }
        },
        "test_fetch_and_load_failure": {
            "name": "test_fetch_and_load_failure",
            "location": 54,
            "return": [],
            "arguments": {
                "cache_empty": []
            }
        }
    },
    "tests/unit_tests/periodic/__init__.py": {},
    "tests/unit_tests/strategies/test_applicationhostname.py": {
        "strategy": {
            "name": "strategy",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_applicationhostname": {
            "name": "test_applicationhostname",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_applicationhostname_nomatch": {
            "name": "test_applicationhostname_nomatch",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tests/unit_tests/strategies/test_defaultstrategy.py": {
        "strategy": {
            "name": "strategy",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_defaultstrategy": {
            "name": "test_defaultstrategy",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        }
    },
    "tests/unit_tests/strategies/test_flexiblerollout.py": {
        "strategy": {
            "name": "strategy",
            "location": 49,
            "return": [],
            "arguments": {}
        },
        "test_flexiblerollout_satisfiesconstraints": {
            "name": "test_flexiblerollout_satisfiesconstraints",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_flexiblerollout_doesntsatisfiesconstraints": {
            "name": "test_flexiblerollout_doesntsatisfiesconstraints",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_flexiblerollout_userid": {
            "name": "test_flexiblerollout_userid",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_flexiblerollout_sessionid": {
            "name": "test_flexiblerollout_sessionid",
            "location": 80,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_flexiblerollout_random": {
            "name": "test_flexiblerollout_random",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_flexiblerollout_customfield": {
            "name": "test_flexiblerollout_customfield",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_flexiblerollout_default": {
            "name": "test_flexiblerollout_default",
            "location": 104,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "tests/unit_tests/strategies/test_gradualrolloutrandom.py": {
        "strategy": {
            "name": "strategy",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "test_userwithid": {
            "name": "test_userwithid",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        }
    },
    "tests/unit_tests/strategies/test_gradualrolloutwithsessionid.py": {
        "generate_context": {
            "name": "generate_context",
            "location": 6,
            "return": [
                "Dict[(str, uuid.UUID)]"
            ],
            "arguments": {}
        },
        "strategy": {
            "name": "strategy",
            "location": 11,
            "return": [],
            "arguments": {}
        },
        "test_userwithid": {
            "name": "test_userwithid",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        }
    },
    "tests/unit_tests/strategies/test_gradualrolloutwithuserid.py": {
        "strategy": {
            "name": "strategy",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_userwithid": {
            "name": "test_userwithid",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        }
    },
    "tests/unit_tests/strategies/test_remoteaddress.py": {
        "strategy": {
            "name": "strategy",
            "location": 7,
            "return": [],
            "arguments": {}
        },
        "test_init_with_bad_address": {
            "name": "test_init_with_bad_address",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_init_with_bad_range": {
            "name": "test_init_with_bad_range",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_ipv4_range": {
            "name": "test_ipv4_range",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_ipv4_value": {
            "name": "test_ipv4_value",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_ipv6_rangee": {
            "name": "test_ipv6_rangee",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_ipv6_value": {
            "name": "test_ipv6_value",
            "location": 35,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_garbage_value": {
            "name": "test_garbage_value",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        }
    },
    "tests/unit_tests/strategies/test_userwithids.py": {
        "strategy": {
            "name": "strategy",
            "location": 9,
            "return": [],
            "arguments": {}
        },
        "test_userwithid": {
            "name": "test_userwithid",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        },
        "test_userwithid_missing_parameter": {
            "name": "test_userwithid_missing_parameter",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "strategy": []
            }
        }
    },
    "tests/utilities/data_generator.py": {
        "generate_context": {
            "name": "generate_context",
            "location": 4,
            "return": [
                "Dict[(str, Any)]"
            ],
            "arguments": {}
        },
        "generate_email_list": {
            "name": "generate_email_list",
            "location": 8,
            "return": [
                "Tuple[(Any, Dict[(str, Any)])]"
            ],
            "arguments": {
                "num": [
                    "int"
                ]
            }
        }
    },
    "tests/utilities/testing_constants.py": {},
    "tests/utilities/__init__.py": {},
    "tests/utilities/mocks/mock_all_features.py": {},
    "tests/utilities/mocks/mock_constraints.py": {},
    "tests/utilities/mocks/mock_custom_strategy.py": {},
    "tests/utilities/mocks/mock_features.py": {},
    "tests/utilities/mocks/mock_metrics.py": {},
    "tests/utilities/mocks/mock_variants.py": {},
    "tests/utilities/mocks/__init__.py": {},
    "tests/utilities/old_code/StrategyV2.py": {
        "StrategyOldV2.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "parameters": [
                    "dict"
                ]
            }
        },
        "StrategyOldV2.load_provisioning": {
            "name": "load_provisioning",
            "location": 23,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "StrategyOldV2.__eq__": {
            "name": "__eq__",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "StrategyOldV2.__call__": {
            "name": "__call__",
            "location": 33,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "tests/utilities/old_code/__init__.py": {},
    "UnleashClient/cache.py": {
        "BaseCache.set": {
            "name": "set",
            "location": 20,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": []
            }
        },
        "BaseCache.mset": {
            "name": "mset",
            "location": 24,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict"
                ]
            }
        },
        "BaseCache.get": {
            "name": "get",
            "location": 28,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "default": []
            }
        },
        "BaseCache.exists": {
            "name": "exists",
            "location": 32,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "BaseCache.destroy": {
            "name": "destroy",
            "location": 36,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "FileCache.__init__": {
            "name": "__init__",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "directory": [
                    "Optional[str]"
                ]
            }
        },
        "FileCache.bootstrap_from_dict": {
            "name": "bootstrap_from_dict",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initial_config": [
                    "dict"
                ]
            }
        },
        "FileCache.bootstrap_from_file": {
            "name": "bootstrap_from_file",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initial_config_file": [
                    "pathlib.Path"
                ]
            }
        },
        "FileCache.bootstrap_from_url": {
            "name": "bootstrap_from_url",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "initial_config_url": [
                    "str"
                ],
                "headers": [
                    "Optional[dict]"
                ]
            }
        },
        "FileCache.set": {
            "name": "set",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "value": []
            }
        },
        "FileCache.mset": {
            "name": "mset",
            "location": 115,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict"
                ]
            }
        },
        "FileCache.get": {
            "name": "get",
            "location": 119,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ],
                "default": []
            }
        },
        "FileCache.exists": {
            "name": "exists",
            "location": 122,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "FileCache.destroy": {
            "name": "destroy",
            "location": 125,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "UnleashClient/constants.py": {},
    "UnleashClient/deprecation_warnings.py": {
        "strategy_v2xx_deprecation_check": {
            "name": "strategy_v2xx_deprecation_check",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {
                "strategies": [
                    "list"
                ]
            }
        }
    },
    "UnleashClient/loader.py": {
        "_create_strategies": {
            "name": "_create_strategies",
            "location": 10,
            "return": [
                "list"
            ],
            "arguments": {
                "provisioning": [
                    "dict"
                ],
                "strategy_mapping": [
                    "dict"
                ],
                "cache": [
                    "UnleashClient.cache.BaseCache"
                ],
                "global_segments": [
                    "Optional[dict]"
                ]
            }
        },
        "_create_feature": {
            "name": "_create_feature",
            "location": 48,
            "return": [
                "UnleashClient.features.Feature.Feature"
            ],
            "arguments": {
                "provisioning": [
                    "dict"
                ],
                "strategy_mapping": [
                    "dict"
                ],
                "cache": [
                    "UnleashClient.cache.BaseCache"
                ],
                "global_segments": [
                    "Optional[dict]"
                ]
            }
        },
        "load_features": {
            "name": "load_features",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "cache": [
                    "UnleashClient.cache.BaseCache"
                ],
                "feature_toggles": [
                    "dict"
                ],
                "strategy_mapping": [
                    "dict"
                ],
                "global_segments": [
                    "Optional[dict]"
                ]
            }
        }
    },
    "UnleashClient/utils.py": {
        "normalized_hash": {
            "name": "normalized_hash",
            "location": 8,
            "return": [
                "int"
            ],
            "arguments": {
                "identifier": [
                    "str"
                ],
                "activation_group": [
                    "str"
                ],
                "normalizer": [
                    "int"
                ]
            }
        },
        "get_identifier": {
            "name": "get_identifier",
            "location": 14,
            "return": [
                "Any"
            ],
            "arguments": {
                "context_key_name": [
                    "str"
                ],
                "context": [
                    "dict"
                ]
            }
        },
        "log_resp_info": {
            "name": "log_resp_info",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "resp": [
                    "requests.models.Response"
                ]
            }
        }
    },
    "UnleashClient/__init__.py": {
        "UnleashClient.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [],
            "arguments": {
                "self": [],
                "url": [],
                "app_name": [],
                "environment": [],
                "instance_id": [],
                "refresh_interval": [],
                "refresh_jitter": [],
                "metrics_interval": [],
                "metrics_jitter": [],
                "disable_metrics": [],
                "disable_registration": [],
                "custom_headers": [],
                "custom_options": [],
                "custom_strategies": [],
                "cache_directory": [],
                "project_name": [],
                "verbose_log_level": [],
                "cache": []
            }
        },
        "UnleashClient.initialize_client": {
            "name": "initialize_client",
            "location": 119,
            "return": [],
            "arguments": {
                "self": [],
                "fetch_toggles": []
            }
        },
        "UnleashClient.destroy": {
            "name": "destroy",
            "location": 213,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnleashClient._get_fallback_value": {
            "name": "_get_fallback_value",
            "location": 226,
            "return": [],
            "arguments": {
                "fallback_function": [],
                "feature_name": [],
                "context": []
            }
        },
        "UnleashClient.is_enabled": {
            "name": "is_enabled",
            "location": 235,
            "return": [],
            "arguments": {
                "self": [],
                "feature_name": [],
                "context": [],
                "fallback_function": []
            }
        },
        "UnleashClient.get_variant": {
            "name": "get_variant",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "feature_name": [],
                "context": []
            }
        },
        "UnleashClient.__enter__": {
            "name": "__enter__",
            "location": 298,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "UnleashClient.__exit__": {
            "name": "__exit__",
            "location": 302,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "UnleashClient/api/features.py": {
        "get_feature_toggles": {
            "name": "get_feature_toggles",
            "location": 8,
            "return": [
                "Tuple[(dict, str)]"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "app_name": [
                    "str"
                ],
                "instance_id": [
                    "str"
                ],
                "custom_headers": [
                    "dict"
                ],
                "custom_options": [
                    "dict"
                ],
                "project": [
                    "str"
                ],
                "cached_etag": [
                    "str"
                ]
            }
        }
    },
    "UnleashClient/api/metrics.py": {
        "send_metrics": {
            "name": "send_metrics",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "request_body": [
                    "dict"
                ],
                "custom_headers": [
                    "dict"
                ],
                "custom_options": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/api/register.py": {
        "register_client": {
            "name": "register_client",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "app_name": [
                    "str"
                ],
                "instance_id": [
                    "str"
                ],
                "metrics_interval": [
                    "int"
                ],
                "custom_headers": [
                    "dict"
                ],
                "custom_options": [
                    "dict"
                ],
                "supported_strategies": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/api/__init__.py": {},
    "UnleashClient/constraints/Constraint.py": {
        "Constraint.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "constraint_dict": [
                    "dict"
                ]
            }
        },
        "Constraint.check_list_operators": {
            "name": "check_list_operators",
            "location": 54,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context_value": [
                    "str"
                ]
            }
        },
        "Constraint.check_string_operators": {
            "name": "check_string_operators",
            "location": 64,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context_value": [
                    "str"
                ]
            }
        },
        "Constraint.check_numeric_operators": {
            "name": "check_numeric_operators",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context_value": [
                    "float"
                ]
            }
        },
        "Constraint.check_date_operators": {
            "name": "check_date_operators",
            "location": 101,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context_value": [
                    "_datetime.datetime"
                ]
            }
        },
        "Constraint.check_semver_operators": {
            "name": "check_semver_operators",
            "location": 120,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context_value": [
                    "str"
                ]
            }
        },
        "Constraint.apply": {
            "name": "apply",
            "location": 149,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/constraints/__init__.py": {},
    "UnleashClient/features/Feature.py": {
        "Feature.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str"
                ],
                "enabled": [
                    "bool"
                ],
                "strategies": [
                    "list"
                ],
                "variants": []
            }
        },
        "Feature.reset_stats": {
            "name": "reset_stats",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Feature.increment_stats": {
            "name": "increment_stats",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "result": [
                    "bool"
                ]
            }
        },
        "Feature.is_enabled": {
            "name": "is_enabled",
            "location": 52,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ],
                "default_value": [
                    "bool"
                ]
            }
        },
        "Feature.get_variant": {
            "name": "get_variant",
            "location": 82,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/features/__init__.py": {},
    "UnleashClient/periodic_tasks/fetch_and_load.py": {
        "fetch_and_load_features": {
            "name": "fetch_and_load_features",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "app_name": [
                    "str"
                ],
                "instance_id": [
                    "str"
                ],
                "custom_headers": [
                    "dict"
                ],
                "custom_options": [
                    "dict"
                ],
                "cache": [
                    "UnleashClient.cache.BaseCache"
                ],
                "features": [
                    "dict"
                ],
                "strategy_mapping": [
                    "dict"
                ],
                "project": [
                    "str"
                ]
            }
        }
    },
    "UnleashClient/periodic_tasks/send_metrics.py": {
        "aggregate_and_send_metrics": {
            "name": "aggregate_and_send_metrics",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "url": [
                    "str"
                ],
                "app_name": [
                    "str"
                ],
                "instance_id": [
                    "str"
                ],
                "custom_headers": [
                    "dict"
                ],
                "custom_options": [
                    "dict"
                ],
                "features": [
                    "dict"
                ],
                "cache": [
                    "UnleashClient.cache.BaseCache"
                ]
            }
        }
    },
    "UnleashClient/periodic_tasks/__init__.py": {},
    "UnleashClient/strategies/ApplicationHostname.py": {
        "ApplicationHostname.load_provisioning": {
            "name": "load_provisioning",
            "location": 7,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "ApplicationHostname.apply": {
            "name": "apply",
            "location": 10,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/Default.py": {
        "Default.apply": {
            "name": "apply",
            "location": 6,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/FlexibleRolloutStrategy.py": {
        "FlexibleRollout.random_hash": {
            "name": "random_hash",
            "location": 9,
            "return": [
                "int"
            ],
            "arguments": {}
        },
        "FlexibleRollout.apply": {
            "name": "apply",
            "location": 12,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/GradualRolloutRandom.py": {
        "GradualRolloutRandom.apply": {
            "name": "apply",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/GradualRolloutSessionId.py": {
        "GradualRolloutSessionId.apply": {
            "name": "apply",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/GradualRolloutUserId.py": {
        "GradualRolloutUserId.apply": {
            "name": "apply",
            "location": 7,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/RemoteAddress.py": {
        "RemoteAddress.load_provisioning": {
            "name": "load_provisioning",
            "location": 8,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "RemoteAddress.apply": {
            "name": "apply",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/Strategy.py": {
        "Strategy.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "constraints": [
                    "list"
                ],
                "parameters": [
                    "dict"
                ],
                "segment_ids": [
                    "list"
                ],
                "global_segments": [
                    "dict"
                ]
            }
        },
        "Strategy.__call__": {
            "name": "__call__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        },
        "Strategy.execute": {
            "name": "execute",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        },
        "Strategy.parsed_constraints": {
            "name": "parsed_constraints",
            "location": 58,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Strategy.load_provisioning": {
            "name": "load_provisioning",
            "location": 67,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "Strategy.apply": {
            "name": "apply",
            "location": 75,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/UserWithId.py": {
        "UserWithId.load_provisioning": {
            "name": "load_provisioning",
            "location": 6,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "UserWithId.apply": {
            "name": "apply",
            "location": 9,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/strategies/__init__.py": {},
    "UnleashClient/variants/Variants.py": {
        "Variants.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "variants_list": [
                    "list"
                ],
                "feature_name": [
                    "str"
                ]
            }
        },
        "Variants._apply_overrides": {
            "name": "_apply_overrides",
            "location": 19,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        },
        "Variants._get_seed": {
            "name": "_get_seed",
            "location": 38,
            "return": [
                "str"
            ],
            "arguments": {
                "context": [
                    "dict"
                ],
                "stickiness_selector": [
                    "str"
                ]
            }
        },
        "Variants._format_variation": {
            "name": "_format_variation",
            "location": 59,
            "return": [
                "dict"
            ],
            "arguments": {
                "variation": [
                    "dict"
                ]
            }
        },
        "Variants.get_variant": {
            "name": "get_variant",
            "location": 68,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "context": [
                    "dict"
                ]
            }
        }
    },
    "UnleashClient/variants/__init__.py": {}
}
{
    "vjemmie-master/botsecrets_example.py": {},
    "vjemmie-master/run.py": {
        "main": {
            "name": "main",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "secrets": [],
                "cogs": [
                    "Optional[list]"
                ]
            }
        }
    },
    "vjemmie-master/run_example.py": {
        "main": {
            "name": "main",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "secrets": [],
                "cogs": [
                    "Optional[list]"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/bot.py": {
        "run": {
            "name": "run",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "secrets": [],
                "cogs": [
                    "Optional[list]"
                ],
                "test": [
                    "bool"
                ],
                "command_prefix": [
                    "str"
                ],
                "description": [
                    "str"
                ],
                "pm_help": [
                    "bool"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/config.py": {},
    "vjemmie-master/vjemmie/testbot.py": {
        "devrun": {
            "name": "devrun",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/__init__.py": {},
    "vjemmie-master/vjemmie/cogs/admin_cog.py": {
        "AdminCog.__init__": {
            "name": "__init__",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "AdminCog._get_log_dir": {
            "name": "_get_log_dir",
            "location": 206,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "self": []
            }
        },
        "AdminCog.get_log_file": {
            "name": "get_log_file",
            "location": 226,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "self": [],
                "log_name": [
                    "Optional[str]"
                ]
            }
        },
        "AdminCog.unblacklist.pred": {
            "name": "pred",
            "location": 305,
            "return": [],
            "arguments": {
                "m": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/autochess_cog.py": {
        "AutochessProfile.format_stats": {
            "name": "format_stats",
            "location": 88,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "AutochessProfile._format_last_updated": {
            "name": "_format_last_updated",
            "location": 138,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "AutoChessCog.users": {
            "name": "users",
            "location": 180,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/avatar_cog.py": {
        "_allmyhomies_helper": {
            "name": "_allmyhomies_helper",
            "location": 286,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "Text"
                ]
            }
        },
        "_threat_helper": {
            "name": "_threat_helper",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "Text"
                ]
            }
        },
        "_banter_helper": {
            "name": "_banter_helper",
            "location": 306,
            "return": [
                "None"
            ],
            "arguments": {
                "text": [
                    "Text"
                ]
            }
        },
        "Text.__post_init__": {
            "name": "__post_init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AvatarCog.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "AvatarCog.add_avatar_commands": {
            "name": "add_avatar_commands",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AvatarCog._do_make_composite_image": {
            "name": "_do_make_composite_image",
            "location": 145,
            "return": [
                "io.BytesIO"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "AvatarCommand"
                ],
                "byteavatar": [
                    "io.BytesIO"
                ]
            }
        },
        "AvatarCog._resize_paste": {
            "name": "_resize_paste",
            "location": 169,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "background": [
                    "Image.Image"
                ],
                "overlay": [
                    "Image.Image"
                ],
                "avatar": [
                    "Avatar"
                ]
            }
        },
        "AvatarCog._add_avatar": {
            "name": "_add_avatar",
            "location": 196,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "background": [
                    "Image.Image"
                ],
                "user_avatar": [
                    "Image.Image"
                ],
                "avatars": [
                    "List[Avatar]"
                ],
                "template_overlay": [
                    "bool"
                ]
            }
        },
        "AvatarCog._add_text": {
            "name": "_add_text",
            "location": 212,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "background": [
                    "Image.Image"
                ],
                "text": [
                    "Text"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/base_cog.py": {
        "BaseCog.__init__": {
            "name": "__init__",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "BaseCog.setup": {
            "name": "setup",
            "location": 118,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "default_factory": [
                    "Callable"
                ]
            }
        },
        "BaseCog.cog_name": {
            "name": "cog_name",
            "location": 169,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseCog.MAX_DL_SIZE_FMT": {
            "name": "MAX_DL_SIZE_FMT",
            "location": 174,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseCog.BOT_COLOR": {
            "name": "BOT_COLOR",
            "location": 179,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BaseCog.get_bot_color": {
            "name": "get_bot_color",
            "location": 195,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "BaseCog.generate_hex_color_code": {
            "name": "generate_hex_color_code",
            "location": 919,
            "return": [
                "Union[(int, str)]"
            ],
            "arguments": {
                "self": [],
                "phrase": [
                    "str"
                ]
            }
        },
        "BaseCog.reset_command_cooldown": {
            "name": "reset_command_cooldown",
            "location": 1082,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/botsetup_cog.py": {
        "BotSetupCog.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "BotSetupCog.setup_spotify": {
            "name": "setup_spotify",
            "location": 43,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BotSetupCog.setup_youtube": {
            "name": "setup_youtube",
            "location": 65,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BotSetupCog.setup_github": {
            "name": "setup_github",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BotSetupCog.setup_reddit": {
            "name": "setup_reddit",
            "location": 105,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BotSetupCog.setup_mwthesaurus": {
            "name": "setup_mwthesaurus",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "BotSetupCog.remove_commands": {
            "name": "remove_commands",
            "location": 137,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "commands": [
                    "List[str]"
                ]
            }
        },
        "BotSetupCog.remove_cog": {
            "name": "remove_cog",
            "location": 146,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cog": [
                    "str"
                ]
            }
        },
        "BotSetupCog.__init__.printer": {
            "name": "printer",
            "location": 30,
            "return": [],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/cogs/dgvgk_cog.py": {
        "DGVGKCog.__init__": {
            "name": "__init__",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "DGVGKCog.formater_tidstyveri": {
            "name": "formater_tidstyveri",
            "location": 52,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "seconds": [
                    "float"
                ]
            }
        },
        "DGVGKCog.post_game_info.get_team_str": {
            "name": "get_team_str",
            "location": 168,
            "return": [],
            "arguments": {
                "team": [],
                "n": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/experimental_cog.py": {
        "User.fromdict": {
            "name": "fromdict",
            "location": 40,
            "return": [
                "_TUser"
            ],
            "arguments": {
                "cls": [
                    "Type[_TUser]"
                ],
                "d": [
                    "dict"
                ]
            }
        },
        "User.sort_reacts": {
            "name": "sort_reacts",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ExperimentalCog.__init__": {
            "name": "__init__",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/fun_cog.py": {
        "FunCog.__init__": {
            "name": "__init__",
            "location": 90,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/image_cog.py": {
        "ImageCog.resize_image": {
            "name": "resize_image",
            "location": 239,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "Image.Image"
                ],
                "width": [
                    "int"
                ],
                "height": [
                    "int"
                ]
            }
        },
        "ImageCog.read_image_text": {
            "name": "read_image_text",
            "location": 258,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "Union[(Image.Image, bytes, str)]"
                ]
            }
        },
        "ImageCog.optimize_image": {
            "name": "optimize_image",
            "location": 269,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "Image.Image"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/management_cog.py": {
        "DateTimeEncoder.default": {
            "name": "default",
            "location": 23,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "o": []
            }
        },
        "ManagementCog.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/meme_cog.py": {
        "GoodmorningSettings.send_all": {
            "name": "send_all",
            "location": 31,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoodmorningSettings.send_member": {
            "name": "send_member",
            "location": 35,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "GoodmorningSettings._should_send": {
            "name": "_should_send",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "chance": [
                    "float"
                ]
            }
        },
        "MemeCog.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "MemeCog.create_gpt_commands": {
            "name": "create_gpt_commands",
            "location": 89,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MemeCog.load_daddy_verbs": {
            "name": "load_daddy_verbs",
            "location": 107,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/pubg_cog.py": {},
    "vjemmie-master/vjemmie/cogs/reddit_cog.py": {
        "RedditSubmissions.get": {
            "name": "get",
            "location": 47,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "int"
                ],
                "subreddit": [
                    "str"
                ],
                "sorting": [
                    "str"
                ],
                "time": [
                    "str"
                ]
            }
        },
        "RedditSubmissions.add": {
            "name": "add",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "submissions": [
                    "list"
                ],
                "guild_id": [
                    "int"
                ],
                "subreddit": [
                    "str"
                ],
                "sorting": [
                    "str"
                ],
                "time": [
                    "str"
                ]
            }
        },
        "RedditSubmissions.clear": {
            "name": "clear",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedditSubmissions._get_key": {
            "name": "_get_key",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "int"
                ],
                "subreddit": [
                    "str"
                ],
                "sorting": [
                    "str"
                ],
                "time": [
                    "str"
                ]
            }
        },
        "RedditCog.__init__": {
            "name": "__init__",
            "location": 98,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "RedditCog.NSFW_WHITELIST": {
            "name": "NSFW_WHITELIST",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "RedditCog.cog_unload": {
            "name": "cog_unload",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedditCog.load_subs": {
            "name": "load_subs",
            "location": 125,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "RedditCog._add_sub": {
            "name": "_add_sub",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "subreddit_command": [
                    "RedditCommand"
                ]
            }
        },
        "RedditCog._is_image_content": {
            "name": "_is_image_content",
            "location": 508,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        },
        "RedditCog._can_send_sub_or_post": {
            "name": "_can_send_sub_or_post",
            "location": 511,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "sub": []
            }
        },
        "RedditCog._get_subreddit_posts": {
            "name": "_get_subreddit_posts",
            "location": 601,
            "return": [
                "list"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "subreddit": [
                    "str"
                ],
                "sorting": [
                    "str"
                ],
                "time": [
                    "str"
                ],
                "post_limit": [
                    "int"
                ],
                "allow_nsfw": [
                    "bool"
                ]
            }
        },
        "RedditCog._get_commands": {
            "name": "_get_commands",
            "location": 691,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "cmd": [
                    "RedditCommand"
                ]
            }
        },
        "RedditCog._fetch_subreddit_posts.to_run": {
            "name": "to_run",
            "location": 624,
            "return": [],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/cogs/sound_cog.py": {
        "get_file_path": {
            "name": "get_file_path",
            "location": 65,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "directory": [
                    "str"
                ],
                "filename": [
                    "str"
                ]
            }
        },
        "YTDLSource.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "source": []
            }
        },
        "YTDLSource.__getitem__": {
            "name": "__getitem__",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str"
                ]
            }
        },
        "AudioPlayer.__init__": {
            "name": "__init__",
            "location": 134,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "AudioPlayer.destroy": {
            "name": "destroy",
            "location": 198,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "guild": []
            }
        },
        "SoundDirectory.__init__": {
            "name": "__init__",
            "location": 209,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "str"
                ],
                "header": [
                    "str"
                ],
                "aliases": [
                    "list"
                ],
                "path": [
                    "str"
                ],
                "color": [
                    "Optional[Union[(int, str)]]"
                ]
            }
        },
        "SoundDirectory.modified_at": {
            "name": "modified_at",
            "location": 224,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SoundDirectory.sound_list": {
            "name": "sound_list",
            "location": 228,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SoundCog.__init__": {
            "name": "__init__",
            "location": 246,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "SoundCog.sound_list": {
            "name": "sound_list",
            "location": 270,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "SoundCog._sound_list_init": {
            "name": "_sound_list_init",
            "location": 293,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SoundCog.get_player": {
            "name": "get_player",
            "location": 307,
            "return": [
                "AudioPlayer"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "SoundCog.get_unique_filename": {
            "name": "get_unique_filename",
            "location": 857,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "str"
                ]
            }
        },
        "SoundCog._do_rename_file": {
            "name": "_do_rename_file",
            "location": 894,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "directory": [
                    "str"
                ],
                "filename": [
                    "str"
                ],
                "new": [
                    "str"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/stats_cog.py": {
        "DiscordCommand.top_user": {
            "name": "top_user",
            "location": 43,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiscordCommand.log_command": {
            "name": "log_command",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "DiscordCommand.get_top_users": {
            "name": "get_top_users",
            "location": 52,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "limit": [
                    "Optional[int]"
                ]
            }
        },
        "DiscordGuild.__post_init__": {
            "name": "__post_init__",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "DiscordGuild.top_total_commands_invokers": {
            "name": "top_total_commands_invokers",
            "location": 70,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiscordGuild.get_top_users_command": {
            "name": "get_top_users_command",
            "location": 78,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str"
                ]
            }
        },
        "DiscordGuild.top10_commands": {
            "name": "top10_commands",
            "location": 86,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "DiscordGuild.get_top_commands": {
            "name": "get_top_commands",
            "location": 90,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "limit": [
                    "int"
                ]
            }
        },
        "DiscordGuild.log_command": {
            "name": "log_command",
            "location": 99,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "StatsCog.__init__": {
            "name": "__init__",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "StatsCog.cog_unload": {
            "name": "cog_unload",
            "location": 119,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatsCog._do_dump": {
            "name": "_do_dump",
            "location": 122,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatsCog.log_command_usage": {
            "name": "log_command_usage",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "StatsCog.load_guilds": {
            "name": "load_guilds",
            "location": 150,
            "return": [
                "Dict[(int, DiscordGuild)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "StatsCog.get_top_commands_for_guild": {
            "name": "get_top_commands_for_guild",
            "location": 165,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "int"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "StatsCog.get_top_commands_for_user": {
            "name": "get_top_commands_for_user",
            "location": 169,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "int"
                ],
                "user": [],
                "limit": [
                    "int"
                ]
            }
        },
        "StatsCog.get_top_command_users": {
            "name": "get_top_command_users",
            "location": 182,
            "return": [
                "Counter"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "int"
                ],
                "command": [
                    "str"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "StatsCog.get_command_usage": {
            "name": "get_command_usage",
            "location": 192,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "Union[(int, str)]"
                ],
                "command": [
                    "str"
                ]
            }
        },
        "StatsCog.get_bot_uptime": {
            "name": "get_bot_uptime",
            "location": 238,
            "return": [
                "Union[(dict, str)]"
            ],
            "arguments": {
                "self": [],
                "type": [
                    "Type[Union[(dict, str)]]"
                ]
            }
        },
        "StatsCog.get_bot_ping_ms": {
            "name": "get_bot_ping_ms",
            "location": 341,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/twitter_cog.py": {
        "TwitterCog.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "TwitterCog.users": {
            "name": "users",
            "location": 49,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "TwitterCog.create_commands": {
            "name": "create_commands",
            "location": 57,
            "return": [],
            "arguments": {
                "self": [],
                "user": []
            }
        },
        "TwitterCog._get_tweets": {
            "name": "_get_tweets",
            "location": 175,
            "return": [],
            "arguments": {
                "self": [],
                "user": [],
                "pages": []
            }
        },
        "TwitterCog._get_tweets.gen_tweets": {
            "name": "gen_tweets",
            "location": 208,
            "return": [],
            "arguments": {
                "pages": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/underlords_cog.py": {
        "UnderlordsProfile.format_stats": {
            "name": "format_stats",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "UnderlordsProfile._format_last_updated": {
            "name": "_format_last_updated",
            "location": 139,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "UnderlordsCog.__init__": {
            "name": "__init__",
            "location": 206,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "UnderlordsCog.users": {
            "name": "users",
            "location": 210,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/user_cog.py": {
        "UserCog.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "UserCog.get_command_usage": {
            "name": "get_command_usage",
            "location": 135,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "command": [
                    "str"
                ]
            }
        },
        "UserCog._get_command_cooldowns": {
            "name": "_get_command_cooldowns",
            "location": 252,
            "return": [
                "List[CommandCooldown]"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/video_cog.py": {
        "VideoCog._get_video": {
            "name": "_get_video",
            "location": 44,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/weather_cog.py": {},
    "vjemmie-master/vjemmie/cogs/wowprogress_cog.py": {},
    "vjemmie-master/vjemmie/cogs/wow_cog.py": {
        "create_schedule": {
            "name": "create_schedule",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "BagGuild._dump": {
            "name": "_dump",
            "location": 54,
            "return": [
                "Tuple[(int, int, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "BagGuild.from_ids": {
            "name": "from_ids",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {
                "cls": [],
                "bot": [],
                "guild_id": [
                    "int"
                ],
                "channel_id": [
                    "int"
                ],
                "role_id": [
                    "int"
                ]
            }
        },
        "WowCog.__init__": {
            "name": "__init__",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "vjemmie-master/vjemmie/cogs/youtube_cog.py": {},
    "vjemmie-master/vjemmie/cogs/__init__.py": {},
    "vjemmie-master/vjemmie/db/db.py": {
        "DatabaseConnection.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "db_path": [
                    "str"
                ],
                "bot": []
            }
        },
        "DatabaseConnection._get_tidstyveri": {
            "name": "_get_tidstyveri",
            "location": 56,
            "return": [
                "List[Tuple[(Any, float)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._get_tidstyveri_by_id": {
            "name": "_get_tidstyveri_by_id",
            "location": 71,
            "return": [
                "List[float]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "int"
                ]
            }
        },
        "DatabaseConnection._add_tidstyveri": {
            "name": "_add_tidstyveri",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "member": [],
                "time": [
                    "float"
                ]
            }
        },
        "DatabaseConnection._get_pfm_memes": {
            "name": "_get_pfm_memes",
            "location": 96,
            "return": [
                "List[Tuple[(str, str, str, str, str)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._get_gmoments": {
            "name": "_get_gmoments",
            "location": 116,
            "return": [
                "List[Tuple[(int, int)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._add_gmoment": {
            "name": "_add_gmoment",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "member": []
            }
        },
        "DatabaseConnection._decrement_gmoments": {
            "name": "_decrement_gmoments",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "member": []
            }
        },
        "DatabaseConnection._purge_gmoments": {
            "name": "_purge_gmoments",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "member": []
            }
        },
        "DatabaseConnection._add_skribbl_words": {
            "name": "_add_skribbl_words",
            "location": 161,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "member": [],
                "words": [
                    "Iterable[str]"
                ]
            }
        },
        "DatabaseConnection._get_skribbl_words": {
            "name": "_get_skribbl_words",
            "location": 171,
            "return": [
                "List[Tuple[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._get_skribbl_words_by_user": {
            "name": "_get_skribbl_words_by_user",
            "location": 178,
            "return": [
                "List[Tuple[str]]"
            ],
            "arguments": {
                "self": [],
                "user_id": [
                    "int"
                ]
            }
        },
        "DatabaseConnection._get_skribbl_word_author": {
            "name": "_get_skribbl_word_author",
            "location": 185,
            "return": [
                "Tuple[(int, int)]"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "str"
                ]
            }
        },
        "DatabaseConnection._delete_skribbl_words": {
            "name": "_delete_skribbl_words",
            "location": 194,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "words": [
                    "Iterable[str]"
                ]
            }
        },
        "DatabaseConnection._skribbl_get_stats": {
            "name": "_skribbl_get_stats",
            "location": 203,
            "return": [
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._groups_get_groups": {
            "name": "_groups_get_groups",
            "location": 212,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._groups_get_all_groups": {
            "name": "_groups_get_all_groups",
            "location": 220,
            "return": [
                "List[Tuple[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._groups_get_random_group": {
            "name": "_groups_get_random_group",
            "location": 227,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection._groups_add_group": {
            "name": "_groups_add_group",
            "location": 234,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "submitter": [],
                "group": [
                    "str"
                ]
            }
        },
        "DatabaseConnection._groups_find_groups": {
            "name": "_groups_find_groups",
            "location": 244,
            "return": [
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "str"
                ]
            }
        },
        "DatabaseConnection._groups_delete_group": {
            "name": "_groups_delete_group",
            "location": 253,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "word": [
                    "str"
                ]
            }
        },
        "DatabaseConnection._bag_add_guild": {
            "name": "_bag_add_guild",
            "location": 260,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "guild_id": [
                    "int"
                ],
                "channel_id": [
                    "int"
                ],
                "role_id": [
                    "int"
                ]
            }
        },
        "DatabaseConnection._bag_get_guilds": {
            "name": "_bag_get_guilds",
            "location": 269,
            "return": [
                "List[Tuple[(int, int, int)]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DatabaseConnection.write.to_run": {
            "name": "to_run",
            "location": 42,
            "return": [],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/db/__init__.py": {
        "add_db": {
            "name": "add_db",
            "location": 13,
            "return": [
                "vjemmie.db.db.DatabaseConnection"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "bot": []
            }
        },
        "get_db": {
            "name": "get_db",
            "location": 19,
            "return": [
                "vjemmie.db.db.DatabaseConnection"
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "init_db": {
            "name": "init_db",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "bot": []
            }
        }
    },
    "vjemmie-master/vjemmie/deepfryer/fryer.py": {
        "ImageFryer.__init__": {
            "name": "__init__",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "image": [
                    "Union[(Image.Image, io.BytesIO)]"
                ]
            }
        },
        "ImageFryer.change_contrast": {
            "name": "change_contrast",
            "location": 49,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "img": [
                    "Image.Image"
                ],
                "level": [
                    "int"
                ]
            }
        },
        "ImageFryer.add_noise": {
            "name": "add_noise",
            "location": 55,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "img": [
                    "Image.Image"
                ],
                "factor": [
                    "int"
                ]
            }
        },
        "ImageFryer.add_emojis": {
            "name": "add_emojis",
            "location": 60,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "img": [
                    "Image.Image"
                ],
                "emoji_name": [
                    "str"
                ],
                "limit": [
                    "int"
                ]
            }
        },
        "ImageFryer.add_caption": {
            "name": "add_caption",
            "location": 80,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "img": [
                    "Image.Image"
                ],
                "caption_name": [
                    "str"
                ]
            }
        },
        "ImageFryer.add_text": {
            "name": "add_text",
            "location": 103,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "img": [
                    "Image.Image"
                ],
                "text_string": [
                    "str"
                ]
            }
        },
        "ImageFryer.fry": {
            "name": "fry",
            "location": 152,
            "return": [
                "Image.Image"
            ],
            "arguments": {
                "self": [],
                "emoji": [
                    "str"
                ],
                "text": [
                    "str"
                ],
                "caption": [
                    "str"
                ]
            }
        },
        "ImageFryer.change_contrast.contrast": {
            "name": "contrast",
            "location": 51,
            "return": [],
            "arguments": {
                "c": []
            }
        },
        "ImageFryer.add_noise.noise": {
            "name": "noise",
            "location": 56,
            "return": [],
            "arguments": {
                "c": []
            }
        }
    },
    "vjemmie-master/vjemmie/deepfryer/__init__.py": {},
    "vjemmie-master/vjemmie/ladder/__init__.py": {
        "load_env": {
            "name": "load_env",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "dump_players": {
            "name": "dump_players",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "players": [
                    "Dict[(int, Player)]"
                ]
            }
        },
        "load_players": {
            "name": "load_players",
            "location": 77,
            "return": [
                "Dict[(int, Player)]"
            ],
            "arguments": {}
        },
        "make_teams": {
            "name": "make_teams",
            "location": 96,
            "return": [
                "Match"
            ],
            "arguments": {
                "players": [
                    "Dict[(int, Player)]"
                ],
                "team_size": [
                    "int"
                ]
            }
        },
        "rate": {
            "name": "rate",
            "location": 115,
            "return": [
                "Tuple[(List[Player], List[Player])]"
            ],
            "arguments": {
                "winners": [
                    "List[Player]"
                ],
                "losers": [
                    "List[Player]"
                ]
            }
        },
        "update_rating": {
            "name": "update_rating",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "winners": [
                    "Dict[(int, Player)]"
                ],
                "losers": [
                    "Dict[(int, Player)]"
                ]
            }
        },
        "win_probability": {
            "name": "win_probability",
            "location": 145,
            "return": [
                "Any"
            ],
            "arguments": {
                "team1": [],
                "team2": []
            }
        },
        "get_new_player": {
            "name": "get_new_player",
            "location": 157,
            "return": [
                "Player"
            ],
            "arguments": {
                "uid": [
                    "int"
                ]
            }
        },
        "Player.asdict": {
            "name": "asdict",
            "location": 44,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "update_rating.update": {
            "name": "update",
            "location": 128,
            "return": [],
            "arguments": {
                "team": [],
                "win": []
            }
        },
        "dump_players.EnhancedJSONEncoder.default": {
            "name": "default",
            "location": 68,
            "return": [],
            "arguments": {
                "self": [],
                "o": []
            }
        }
    },
    "vjemmie-master/vjemmie/tests/test_cog.py": {
        "decorator_factory": {
            "name": "decorator_factory",
            "location": 43,
            "return": [
                "Any"
            ],
            "arguments": {
                "attr_k": [
                    "str"
                ],
                "attr_v": []
            }
        },
        "stop_after": {
            "name": "stop_after",
            "location": 66,
            "return": [
                "Callable"
            ],
            "arguments": {
                "f": [
                    "Callable"
                ]
            }
        },
        "decorator_factory.outer": {
            "name": "outer",
            "location": 56,
            "return": [],
            "arguments": {
                "f": []
            }
        },
        "TestCog.__init__": {
            "name": "__init__",
            "location": 95,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": []
            }
        },
        "TestCog.determine_run_coro": {
            "name": "determine_run_coro",
            "location": 204,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "coro": [],
                "ctx": []
            }
        },
        "TestCog.patch_ctx": {
            "name": "patch_ctx",
            "location": 232,
            "return": [],
            "arguments": {
                "self": [],
                "ctx": []
            }
        }
    },
    "vjemmie-master/vjemmie/tests/test_vjemmie.py": {
        "test_version": {
            "name": "test_version",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/tests/__init__.py": {},
    "vjemmie-master/vjemmie/utils/access_control.py": {
        "_get_trusted": {
            "name": "_get_trusted",
            "location": 17,
            "return": [
                "dict"
            ],
            "arguments": {}
        },
        "_dump_trusted": {
            "name": "_dump_trusted",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "trusted": [
                    "dict"
                ]
            }
        },
        "_get_trusted_guild_category": {
            "name": "_get_trusted_guild_category",
            "location": 24,
            "return": [
                "list"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ],
                "category": [
                    "Categories"
                ]
            }
        },
        "get_trusted_members": {
            "name": "get_trusted_members",
            "location": 31,
            "return": [
                "list"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ]
            }
        },
        "get_trusted_roles": {
            "name": "get_trusted_roles",
            "location": 36,
            "return": [
                "list"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ]
            }
        },
        "add_trusted_member": {
            "name": "add_trusted_member",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ],
                "user_id": [
                    "int"
                ]
            }
        },
        "add_trusted_role": {
            "name": "add_trusted_role",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ],
                "role_id": [
                    "int"
                ]
            }
        },
        "_add_trusted": {
            "name": "_add_trusted",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ],
                "id_": [
                    "int"
                ],
                "category": [
                    "str"
                ]
            }
        },
        "remove_trusted_member": {
            "name": "remove_trusted_member",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ],
                "user_id": [
                    "int"
                ]
            }
        },
        "remove_trusted_role": {
            "name": "remove_trusted_role",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ],
                "role_id": [
                    "int"
                ]
            }
        },
        "_remove_trusted": {
            "name": "_remove_trusted",
            "location": 77,
            "return": [
                "None"
            ],
            "arguments": {
                "guild_id": [
                    "int"
                ],
                "user_id": [
                    "int"
                ],
                "category": [
                    "str"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/utils/caching.py": {
        "get_cached": {
            "name": "get_cached",
            "location": 22,
            "return": [
                "Union[(dict, list, str)]"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "category": [
                    "str"
                ]
            }
        },
        "_get_file_contents": {
            "name": "_get_file_contents",
            "location": 80,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "category": [
                    "str"
                ],
                "is_json": [
                    "bool"
                ]
            }
        },
        "_add_to_cache": {
            "name": "_add_to_cache",
            "location": 92,
            "return": [
                "None"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "category": [
                    "str"
                ],
                "contents": []
            }
        },
        "_get_from_cache": {
            "name": "_get_from_cache",
            "location": 103,
            "return": [
                "Any"
            ],
            "arguments": {
                "path": [
                    "str"
                ],
                "category": [
                    "str"
                ]
            }
        },
        "setup": {
            "name": "setup",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "size": [
                    "int"
                ],
                "default": [
                    "str"
                ]
            }
        },
        "flush_cache": {
            "name": "flush_cache",
            "location": 135,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "_do_create_cache": {
            "name": "_do_create_cache",
            "location": 140,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/utils/checks.py": {
        "load_blacklist": {
            "name": "load_blacklist",
            "location": 13,
            "return": [
                "list"
            ],
            "arguments": {}
        },
        "save_blacklist": {
            "name": "save_blacklist",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "blacklist": [
                    "list"
                ]
            }
        },
        "admins_only": {
            "name": "admins_only",
            "location": 22,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "owners_only": {
            "name": "owners_only",
            "location": 31,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "is_not_blacklisted": {
            "name": "is_not_blacklisted",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "guild_predicate": {
            "name": "guild_predicate",
            "location": 45,
            "return": [
                "Any"
            ],
            "arguments": {
                "ctx": [],
                "guild_id": []
            }
        },
        "pfm_cmd": {
            "name": "pfm_cmd",
            "location": 51,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "dgvgk_cmd": {
            "name": "dgvgk_cmd",
            "location": 58,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "test_server_cmd": {
            "name": "test_server_cmd",
            "location": 65,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "download_cmd": {
            "name": "download_cmd",
            "location": 72,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "disabled_cmd": {
            "name": "disabled_cmd",
            "location": 79,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "trusted": {
            "name": "trusted",
            "location": 86,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "admins_only.predicate": {
            "name": "predicate",
            "location": 23,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "owners_only.predicate": {
            "name": "predicate",
            "location": 33,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "is_not_blacklisted.predicate": {
            "name": "predicate",
            "location": 40,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "pfm_cmd.predicate": {
            "name": "predicate",
            "location": 53,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "dgvgk_cmd.predicate": {
            "name": "predicate",
            "location": 60,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "test_server_cmd.predicate": {
            "name": "predicate",
            "location": 67,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "download_cmd.predicate": {
            "name": "predicate",
            "location": 74,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "disabled_cmd.predicate": {
            "name": "predicate",
            "location": 81,
            "return": [],
            "arguments": {
                "ctx": []
            }
        },
        "trusted.predicate": {
            "name": "predicate",
            "location": 88,
            "return": [],
            "arguments": {
                "ctx": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/commands.py": {
        "add_command": {
            "name": "add_command",
            "location": 8,
            "return": [],
            "arguments": {
                "cog": [],
                "coro": [],
                "name": [],
                "aliases": [],
                "help": [],
                "hidden": [],
                "group": [],
                "checks": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/converters.py": {
        "ParsedURL.original": {
            "name": "original",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "URLConverter.category": {
            "name": "category",
            "location": 176,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BoolConverter.__init__": {
            "name": "__init__",
            "location": 254,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "options": [
                    "Iterable"
                ]
            }
        },
        "NonCaseSensMemberConverter.convert.get_from_guild": {
            "name": "get_from_guild",
            "location": 87,
            "return": [],
            "arguments": {
                "guild": [],
                "argument": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/datetimeutils.py": {
        "format_time_difference": {
            "name": "format_time_difference",
            "location": 6,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {
                "start": [
                    "_datetime.datetime"
                ],
                "tz": [
                    "_datetime.timezone"
                ]
            }
        },
        "format_time_difference_str": {
            "name": "format_time_difference_str",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "timestamp": [
                    "Union[(str, _datetime.datetime)]"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/utils/exceptions.py": {},
    "vjemmie-master/vjemmie/utils/experimental.py": {
        "_OLD_get_ctx": {
            "name": "_OLD_get_ctx",
            "location": 7,
            "return": [
                "Any"
            ],
            "arguments": {}
        },
        "get_ctx": {
            "name": "get_ctx",
            "location": 18,
            "return": [
                "Any"
            ],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/utils/ext_models.py": {
        "SoundSubdir.__post_init__": {
            "name": "__post_init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "SoundSubdir.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/filesystem.py": {
        "rename_file": {
            "name": "rename_file",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "Union[(bytes, str, os.PathLike)]"
                ],
                "new_name": [
                    "str"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/utils/filetypes.py": {
        "_get_file_mimetype": {
            "name": "_get_file_mimetype",
            "location": 9,
            "return": [
                "str"
            ],
            "arguments": {
                "file": [
                    "Union[(bytes, BinaryIO)]"
                ],
                "bufsize": [
                    "int"
                ]
            }
        },
        "check_file_audio": {
            "name": "check_file_audio",
            "location": 21,
            "return": [
                "bool"
            ],
            "arguments": {
                "file": [
                    "Union[(bytes, BinaryIO)]"
                ],
                "bufsize": [
                    "int"
                ]
            }
        },
        "check_file_video": {
            "name": "check_file_video",
            "location": 26,
            "return": [
                "bool"
            ],
            "arguments": {
                "file": [
                    "Union[(bytes, BinaryIO)]"
                ],
                "bufsize": [
                    "int"
                ]
            }
        },
        "check_file_image": {
            "name": "check_file_image",
            "location": 30,
            "return": [
                "bool"
            ],
            "arguments": {
                "file": [
                    "Union[(bytes, BinaryIO)]"
                ],
                "bufsize": [
                    "int"
                ]
            }
        },
        "get_file_mimetype": {
            "name": "get_file_mimetype",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {
                "file": [
                    "Union[(bytes, BinaryIO)]"
                ],
                "bufsize": [
                    "int"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/utils/http.py": {},
    "vjemmie-master/vjemmie/utils/json.py": {
        "dump_json_blocking": {
            "name": "dump_json_blocking",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {
                "fp": [
                    "str"
                ],
                "obj": [],
                "default": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/messaging.py": {
        "get_user_reply.pred": {
            "name": "pred",
            "location": 20,
            "return": [],
            "arguments": {
                "m": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/parsing.py": {
        "is_valid_command_name": {
            "name": "is_valid_command_name",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {
                "command": [
                    "str"
                ],
                "search": []
            }
        },
        "split_text_numbers": {
            "name": "split_text_numbers",
            "location": 8,
            "return": [
                "Tuple[(str, str)]"
            ],
            "arguments": {
                "text": [
                    "str"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/utils/printing.py": {
        "eprint": {
            "name": "eprint",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/utils/sound.py": {
        "convert": {
            "name": "convert",
            "location": 6,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "filepath": [
                    "pathlib.Path"
                ],
                "to_wav": [
                    "bool"
                ]
            }
        },
        "join_wavs": {
            "name": "join_wavs",
            "location": 19,
            "return": [
                "pathlib.Path"
            ],
            "arguments": {
                "file_1": [
                    "pathlib.Path"
                ],
                "file_2": [
                    "pathlib.Path"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/utils/spotify.py": {
        "get_spotify_song_info": {
            "name": "get_spotify_song_info",
            "location": 12,
            "return": [
                "Tuple[(str, str, str)]"
            ],
            "arguments": {
                "arg": [
                    "str"
                ]
            }
        },
        "get_spotify_track_id": {
            "name": "get_spotify_track_id",
            "location": 24,
            "return": [
                "str"
            ],
            "arguments": {
                "arg": [
                    "str"
                ]
            }
        }
    },
    "vjemmie-master/vjemmie/utils/time.py": {
        "get_valid_time_units": {
            "name": "get_valid_time_units",
            "location": 46,
            "return": [
                "List[str]"
            ],
            "arguments": {}
        },
        "format_time": {
            "name": "format_time",
            "location": 124,
            "return": [
                "str"
            ],
            "arguments": {
                "seconds": [
                    "float"
                ]
            }
        },
        "get_now_time": {
            "name": "get_now_time",
            "location": 149,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/utils/users.py": {},
    "vjemmie-master/vjemmie/utils/voting.py": {
        "vote": {
            "name": "vote",
            "location": 178,
            "return": [
                "bool"
            ],
            "arguments": {
                "votes": [
                    "int"
                ],
                "duration": [
                    "int"
                ],
                "topic": [
                    "TopicType"
                ]
            }
        },
        "Vote.__init__": {
            "name": "__init__",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": []
            }
        },
        "VotingSession.__init__": {
            "name": "__init__",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ctx": [],
                "topic": [
                    "str"
                ],
                "threshold": [
                    "int"
                ],
                "duration": [
                    "float"
                ]
            }
        },
        "VotingSession.reset": {
            "name": "reset",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VotingSession.start_loop": {
            "name": "start_loop",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VotingSession.stop_loop": {
            "name": "stop_loop",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "VotingSession.votes_remaining": {
            "name": "votes_remaining",
            "location": 92,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VotingSession.current": {
            "name": "current",
            "location": 96,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VotingSession.elapsed": {
            "name": "elapsed",
            "location": 100,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VotingSession.time_remaining_str": {
            "name": "time_remaining_str",
            "location": 104,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VotingSession.__del__": {
            "name": "__del__",
            "location": 113,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/wsl.py": {
        "in_wsl": {
            "name": "in_wsl",
            "location": 4,
            "return": [
                "bool"
            ],
            "arguments": {}
        }
    },
    "vjemmie-master/vjemmie/utils/youtube.py": {
        "youtube_search": {
            "name": "youtube_search",
            "location": 12,
            "return": [
                "List[dict]"
            ],
            "arguments": {
                "query": []
            }
        },
        "youtube_get_top_result": {
            "name": "youtube_get_top_result",
            "location": 32,
            "return": [
                "str"
            ],
            "arguments": {
                "query": []
            }
        }
    },
    "vjemmie-master/vjemmie/utils/__init__.py": {},
    "vjemmie-master/vjemmie/utils/patching/commands.py": {
        "signature": {
            "name": "signature",
            "location": 5,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "patch_command_signature": {
            "name": "patch_command_signature",
            "location": 45,
            "return": [],
            "arguments": {
                "cmd": []
            }
        },
        "help_doc": {
            "name": "help_doc",
            "location": 52,
            "return": [],
            "arguments": {
                "instance": []
            }
        }
    }
}
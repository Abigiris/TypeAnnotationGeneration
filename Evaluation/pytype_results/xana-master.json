{
    "xana-master/Log.py": {},
    "xana-master/xana.py": {},
    "xana-master/app/protocols.py": {
        "ssh.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "hostname": [],
                "port": [],
                "username": [],
                "password": []
            }
        },
        "ssh._add_ssh_parameters": {
            "name": "_add_ssh_parameters",
            "location": 24,
            "return": [],
            "arguments": {
                "hostname": [],
                "port": [],
                "username": [],
                "password": []
            }
        },
        "ssh._connect": {
            "name": "_connect",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ssh._disconnect": {
            "name": "_disconnect",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ssh.instruct": {
            "name": "instruct",
            "location": 53,
            "return": [
                "Optional[bytes]"
            ],
            "arguments": {
                "self": [],
                "command": []
            }
        },
        "ssh.sftp": {
            "name": "sftp",
            "location": 66,
            "return": [
                "paramiko.sftp_client.SFTPClient"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "host": [],
                "port": [],
                "login_string": [],
                "password_string": [],
                "prompt": [],
                "username": [],
                "password": []
            }
        },
        "telnet._add_telnet_parameters": {
            "name": "_add_telnet_parameters",
            "location": 93,
            "return": [],
            "arguments": {
                "host": [],
                "port": [],
                "login_string": [],
                "password_string": [],
                "prompt": [],
                "username": [],
                "password": []
            }
        },
        "telnet._do_login": {
            "name": "_do_login",
            "location": 96,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._do_password": {
            "name": "_do_password",
            "location": 103,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._do_open_connection": {
            "name": "_do_open_connection",
            "location": 111,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._do_close_connection": {
            "name": "_do_close_connection",
            "location": 117,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet._connect": {
            "name": "_connect",
            "location": 123,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "telnet.instruct": {
            "name": "instruct",
            "location": 131,
            "return": [
                "Optional[List[bytes]]"
            ],
            "arguments": {
                "self": [],
                "command": []
            }
        }
    },
    "xana-master/app/__init__.py": {
        "data_type_validator": {
            "name": "data_type_validator",
            "location": 5,
            "return": [
                "Callable"
            ],
            "arguments": {
                "func": []
            }
        },
        "data_type_validator.wrapper": {
            "name": "wrapper",
            "location": 8,
            "return": [],
            "arguments": {}
        }
    },
    "xana-master/app/config/devices.py": {
        "Structure.get_directory_structure": {
            "name": "get_directory_structure",
            "location": 16,
            "return": [
                "Dict[(nothing, nothing)]"
            ],
            "arguments": {
                "confdir": []
            }
        },
        "Structure.get_file_list": {
            "name": "get_file_list",
            "location": 32,
            "return": [
                "list"
            ],
            "arguments": {
                "confdir": []
            }
        },
        "Structure.get_ini_files": {
            "name": "get_ini_files",
            "location": 44,
            "return": [
                "list"
            ],
            "arguments": {
                "confdir": []
            }
        },
        "Structure.get_xml_files": {
            "name": "get_xml_files",
            "location": 52,
            "return": [
                "list"
            ],
            "arguments": {
                "confdir": []
            }
        },
        "Structure.get_yaml_files": {
            "name": "get_yaml_files",
            "location": 60,
            "return": [
                "list"
            ],
            "arguments": {
                "confdir": []
            }
        },
        "Structure.get_json_files": {
            "name": "get_json_files",
            "location": 68,
            "return": [
                "list"
            ],
            "arguments": {
                "confdir": []
            }
        },
        "Parser.get_all_config": {
            "name": "get_all_config",
            "location": 79,
            "return": [
                "list"
            ],
            "arguments": {
                "confdir": []
            }
        },
        "Parser.read_json": {
            "name": "read_json",
            "location": 95,
            "return": [
                "Any"
            ],
            "arguments": {
                "cfile": []
            }
        },
        "Parser.read_yaml": {
            "name": "read_yaml",
            "location": 107,
            "return": [
                "Optional[list]"
            ],
            "arguments": {
                "cfile": []
            }
        },
        "Parser.read_ini": {
            "name": "read_ini",
            "location": 120,
            "return": [
                "Optional[List[Dict[(str, Dict[(str, str)])]]]"
            ],
            "arguments": {
                "cfile": []
            }
        },
        "Parser.read_xml": {
            "name": "read_xml",
            "location": 138,
            "return": [
                "Optional[List[Dict[(str, Dict[(str, Any)])]]]"
            ],
            "arguments": {
                "cfile": []
            }
        }
    },
    "xana-master/app/xaninos/mikrotik/handler.py": {
        "get_config": {
            "name": "get_config",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "hostname": [],
                "port": [],
                "username": [],
                "password": [],
                "localpath": []
            }
        },
        "_check_transfer": {
            "name": "_check_transfer",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "got": [],
                "should": []
            }
        },
        "_tag": {
            "name": "_tag",
            "location": 34,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "set_config": {
            "name": "set_config",
            "location": 44,
            "return": [
                "None"
            ],
            "arguments": {
                "hostname": [],
                "port": [],
                "username": [],
                "password": [],
                "localpath": [],
                "remotepath": []
            }
        },
        "save_config": {
            "name": "save_config",
            "location": 53,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_all_config_test.py": {
        "get_all_config_test": {
            "name": "get_all_config_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_file_list_test.py": {
        "extract_file_list_test": {
            "name": "extract_file_list_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_ini_files_test.py": {
        "extract_ini_files_test": {
            "name": "extract_ini_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_json_files_test.py": {
        "extract_json_files_test": {
            "name": "extract_json_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_structure_test.py": {
        "structure_walk_test": {
            "name": "structure_walk_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_xml_files_test.py": {
        "extract_xml_files_test": {
            "name": "extract_xml_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/get_yaml_files_test.py": {
        "extract_yaml_files_test": {
            "name": "extract_yaml_files_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/mikrotik_unique_filename_tag_test.py": {
        "get_test": {
            "name": "get_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_ini_test.py": {
        "read_ini_test": {
            "name": "read_ini_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_json_test.py": {
        "read_json_test": {
            "name": "read_json_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_xml_test.py": {
        "read_xml_test": {
            "name": "read_xml_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/read_yaml_test.py": {
        "read_yaml_test": {
            "name": "read_yaml_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/ssh_parameters_test.py": {
        "ssh_parameters_test": {
            "name": "ssh_parameters_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/telnet_parameters_test.py": {
        "telnet_parameters_test": {
            "name": "telnet_parameters_test",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xana-master/tests/__init__.py": {}
}
{
    "xcv-master/setup.py": {},
    "xcv-master/travis_pypi_setup.py": {
        "load_key": {
            "name": "load_key",
            "location": 29,
            "return": [
                "Any"
            ],
            "arguments": {
                "pubkey": []
            }
        },
        "encrypt": {
            "name": "encrypt",
            "location": 44,
            "return": [
                "bytes"
            ],
            "arguments": {
                "pubkey": [],
                "password": []
            }
        },
        "fetch_public_key": {
            "name": "fetch_public_key",
            "location": 55,
            "return": [
                "Any"
            ],
            "arguments": {
                "repo": []
            }
        },
        "prepend_line": {
            "name": "prepend_line",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [],
                "line": []
            }
        },
        "load_yaml_config": {
            "name": "load_yaml_config",
            "location": 81,
            "return": [
                "Any"
            ],
            "arguments": {
                "filepath": []
            }
        },
        "save_yaml_config": {
            "name": "save_yaml_config",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [],
                "config": []
            }
        },
        "update_travis_deploy_password": {
            "name": "update_travis_deploy_password",
            "location": 91,
            "return": [
                "None"
            ],
            "arguments": {
                "encrypted_password": []
            }
        },
        "main": {
            "name": "main",
            "location": 106,
            "return": [
                "None"
            ],
            "arguments": {
                "args": []
            }
        }
    },
    "xcv-master/docs/conf.py": {},
    "xcv-master/tests/conftest.py": {
        "hardware_VidCapture": {
            "name": "hardware_VidCapture",
            "location": 6,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        },
        "streamlink_VidCapture": {
            "name": "streamlink_VidCapture",
            "location": 26,
            "return": [],
            "arguments": {
                "tmpdir_factory": []
            }
        }
    },
    "xcv-master/tests/test_button_dict.py": {
        "test_press_button_input_incorrect": {
            "name": "test_press_button_input_incorrect",
            "location": 5,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_press_button_input_lowercase": {
            "name": "test_press_button_input_lowercase",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_press_button_input_multiple_values": {
            "name": "test_press_button_input_multiple_values",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_press_button_input_list": {
            "name": "test_press_button_input_list",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_press_button_input_keyword_args": {
            "name": "test_press_button_input_keyword_args",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/tests/test_cli_help_messages.py": {
        "response": {
            "name": "response",
            "location": 15,
            "return": [],
            "arguments": {}
        },
        "test_content": {
            "name": "test_content",
            "location": 24,
            "return": [
                "None"
            ],
            "arguments": {
                "response": []
            }
        },
        "test_cli_no_options_passed": {
            "name": "test_cli_no_options_passed",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_cli_option_help": {
            "name": "test_cli_option_help",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/tests/test_fps.py": {
        "test_fps_elapsed": {
            "name": "test_fps_elapsed",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/tests/test_imports.py": {
        "test_imports": {
            "name": "test_imports",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_RaiseErrors": {
            "name": "test_RaiseErrors",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/tests/test_os_settings.py": {
        "test_emojis": {
            "name": "test_emojis",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/tests/test_package_info.py": {
        "test_package_info": {
            "name": "test_package_info",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/tests/test_template_images.py": {
        "test_template_image_load": {
            "name": "test_template_image_load",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "test_template_image_load_my_team_badge": {
            "name": "test_template_image_load_my_team_badge",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/tests/test_video_frame.py": {
        "test_frame_exists": {
            "name": "test_frame_exists",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "hardware_VidCapture": []
            }
        },
        "test_frame_size": {
            "name": "test_frame_size",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "hardware_VidCapture": []
            }
        },
        "test_numpy_mask": {
            "name": "test_numpy_mask",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "hardware_VidCapture": []
            }
        },
        "test_streamlink_exists": {
            "name": "test_streamlink_exists",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "streamlink_VidCapture": []
            }
        }
    },
    "xcv-master/xcv/cli.py": {
        "main_input": {
            "name": "main_input",
            "location": 42,
            "return": [],
            "arguments": {
                "verbose": [],
                "port": [],
                "autopilot": [],
                "push": [],
                "count": [],
                "debug": [],
                "gui": []
            }
        }
    },
    "xcv-master/xcv/clock.py": {
        "Clock.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "timezone": []
            }
        },
        "Clock.now": {
            "name": "now",
            "location": 15,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "Clock.elapsed": {
            "name": "elapsed",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Clock.elapsed_no_microseconds": {
            "name": "elapsed_no_microseconds",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Clock.elapsed_seconds": {
            "name": "elapsed_seconds",
            "location": 28,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Clock.reset": {
            "name": "reset",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/emojis.py": {},
    "xcv-master/xcv/gui.py": {
        "print_package_info": {
            "name": "print_package_info",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "random_string": {
            "name": "random_string",
            "location": 31,
            "return": [
                "str"
            ],
            "arguments": {
                "stringLength": []
            }
        },
        "GUILayout.__init__": {
            "name": "__init__",
            "location": 37,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._output_console": {
            "name": "_output_console",
            "location": 122,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._top_status": {
            "name": "_top_status",
            "location": 128,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._video_frame": {
            "name": "_video_frame",
            "location": 171,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._detected_state": {
            "name": "_detected_state",
            "location": 174,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._detected_substate": {
            "name": "_detected_substate",
            "location": 181,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._vert_spacer": {
            "name": "_vert_spacer",
            "location": 197,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._gui_work_area": {
            "name": "_gui_work_area",
            "location": 200,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._layout": {
            "name": "_layout",
            "location": 352,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout.full_layout": {
            "name": "full_layout",
            "location": 365,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUI.__init__": {
            "name": "__init__",
            "location": 370,
            "return": [],
            "arguments": {
                "self": [],
                "gui": []
            }
        },
        "EventLoop.__init__": {
            "name": "__init__",
            "location": 550,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "EventLoop.event_loop": {
            "name": "event_loop",
            "location": 583,
            "return": [],
            "arguments": {
                "self": [],
                "gui_window": [],
                "save_screenshots": []
            }
        },
        "EventLoop._update_gui": {
            "name": "_update_gui",
            "location": 609,
            "return": [],
            "arguments": {
                "self": [],
                "gui_window": []
            }
        },
        "EventLoop._update_fps_icon": {
            "name": "_update_fps_icon",
            "location": 630,
            "return": [],
            "arguments": {
                "self": [],
                "gui_window": []
            }
        },
        "EventLoop._event_checker": {
            "name": "_event_checker",
            "location": 640,
            "return": [],
            "arguments": {
                "self": [],
                "_event": [],
                "gui_window": []
            }
        },
        "EventLoop._values_checker": {
            "name": "_values_checker",
            "location": 743,
            "return": [],
            "arguments": {
                "self": [],
                "_values": [],
                "frame": []
            }
        },
        "EventLoop.close_all": {
            "name": "close_all",
            "location": 746,
            "return": [],
            "arguments": {
                "self": [],
                "window": []
            }
        },
        "FPS.__init__": {
            "name": "__init__",
            "location": 760,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FPS.start": {
            "name": "start",
            "location": 768,
            "return": [
                "_TFPS"
            ],
            "arguments": {
                "self": [
                    "_TFPS"
                ]
            }
        },
        "FPS.stop": {
            "name": "stop",
            "location": 773,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FPS.update": {
            "name": "update",
            "location": 777,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FPS.elapsed": {
            "name": "elapsed",
            "location": 784,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FPS.str_elapsed": {
            "name": "str_elapsed",
            "location": 796,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "FPS.fps": {
            "name": "fps",
            "location": 804,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/roi.py": {
        "ROI.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "frame_w": [],
                "frame_h": []
            }
        },
        "ROI.make": {
            "name": "make",
            "location": 19,
            "return": [
                "np.ndarray"
            ],
            "arguments": {
                "self": [],
                "x1": [],
                "y1": [],
                "x2": [],
                "y2": []
            }
        },
        "ROI._letterbox": {
            "name": "_letterbox",
            "location": 22,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "is_letterboxed": []
            }
        },
        "ROI._scoreboard_score": {
            "name": "_scoreboard_score",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ROI._scoreboard_clock": {
            "name": "_scoreboard_clock",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ROI.show_all": {
            "name": "show_all",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ROI._WIP_stuff": {
            "name": "_WIP_stuff",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/serial_api.py": {},
    "xcv-master/xcv/serial_sender.py": {
        "serial_api.__init__": {
            "name": "__init__",
            "location": 34,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api.port": {
            "name": "port",
            "location": 47,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "serial_api.port_next": {
            "name": "port_next",
            "location": 50,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api.port_add": {
            "name": "port_add",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ser": []
            }
        },
        "serial_api.port_set": {
            "name": "port_set",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ser": []
            }
        },
        "serial_api.print_ports": {
            "name": "print_ports",
            "location": 63,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api.send": {
            "name": "send",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api._check_pending_send": {
            "name": "_check_pending_send",
            "location": 72,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buttons": []
            }
        },
        "serial_api._send_pending_send": {
            "name": "_send_pending_send",
            "location": 75,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "checkedbuttons": []
            }
        },
        "serial_api.serial_send": {
            "name": "serial_send",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "btns_sending": []
            }
        }
    },
    "xcv-master/xcv/settings.py": {
        "serial_api.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api.port": {
            "name": "port",
            "location": 60,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "serial_api.port_next": {
            "name": "port_next",
            "location": 63,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api.port_add": {
            "name": "port_add",
            "location": 70,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ser": []
            }
        },
        "serial_api.port_set": {
            "name": "port_set",
            "location": 73,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ser": []
            }
        },
        "serial_api.print_ports": {
            "name": "print_ports",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api.send": {
            "name": "send",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "serial_api._check_pending_send": {
            "name": "_check_pending_send",
            "location": 85,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "buttons": []
            }
        },
        "serial_api._send_pending_send": {
            "name": "_send_pending_send",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "checkedbuttons": []
            }
        }
    },
    "xcv-master/xcv/stats.py": {
        "GameSession.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameSession.check_video_source_size": {
            "name": "check_video_source_size",
            "location": 19,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "cap": []
            }
        },
        "GameSession.state": {
            "name": "state",
            "location": 33,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GameSession.clock": {
            "name": "clock",
            "location": 39,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "print_it": [],
                "as_string": []
            }
        },
        "GameSession.reset_clock": {
            "name": "reset_clock",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaSession.__init__": {
            "name": "__init__",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_session": []
            }
        },
        "FifaSession.set_in_game": {
            "name": "set_in_game",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaSession.set_in_menu": {
            "name": "set_in_menu",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaSession.display_status": {
            "name": "display_status",
            "location": 93,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaSession.state": {
            "name": "state",
            "location": 101,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaSession.start_clock": {
            "name": "start_clock",
            "location": 107,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaSession.clock": {
            "name": "clock",
            "location": 113,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "print_it": []
            }
        },
        "FifaSession.reset_clock": {
            "name": "reset_clock",
            "location": 120,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.__init__": {
            "name": "__init__",
            "location": 126,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fifa_session": []
            }
        },
        "FifaMatch.make_fifa_match": {
            "name": "make_fifa_match",
            "location": 144,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        },
        "FifaMatch.state": {
            "name": "state",
            "location": 147,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.check_loop": {
            "name": "check_loop",
            "location": 153,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.show_screen_side": {
            "name": "show_screen_side",
            "location": 156,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.set_side_left": {
            "name": "set_side_left",
            "location": 164,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.set_side_right": {
            "name": "set_side_right",
            "location": 169,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.show_home_or_away": {
            "name": "show_home_or_away",
            "location": 174,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.set_away_team": {
            "name": "set_away_team",
            "location": 182,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.set_home_team": {
            "name": "set_home_team",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.set_in_squad_menu": {
            "name": "set_in_squad_menu",
            "location": 190,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.set_found_zero": {
            "name": "set_found_zero",
            "location": 193,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.clock": {
            "name": "clock",
            "location": 196,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "print_it": []
            }
        },
        "FifaMatch.reset_clock": {
            "name": "reset_clock",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.detected_clock": {
            "name": "detected_clock",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaMatch.last_detected_clock": {
            "name": "last_detected_clock",
            "location": 208,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FifaPlayer.__init__": {
            "name": "__init__",
            "location": 216,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scoreboard.__init__": {
            "name": "__init__",
            "location": 267,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fifa_match": []
            }
        },
        "Scoreboard.find_score": {
            "name": "find_score",
            "location": 270,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scoreboard.last_known_score": {
            "name": "last_known_score",
            "location": 273,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scoreboard.find_clock": {
            "name": "find_clock",
            "location": 276,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scoreboard.last_known_clock": {
            "name": "last_known_clock",
            "location": 279,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scoreboard.home_away": {
            "name": "home_away",
            "location": 282,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scoreboard.found_digit": {
            "name": "found_digit",
            "location": 285,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "found": []
            }
        },
        "WinLossRecord.__init__": {
            "name": "__init__",
            "location": 291,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "game_session": []
            }
        },
        "WinLossRecord.add_win": {
            "name": "add_win",
            "location": 296,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WinLossRecord.add_loss": {
            "name": "add_loss",
            "location": 299,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WinLossRecord.add_ties": {
            "name": "add_ties",
            "location": 302,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "WinLossRecord.as_string": {
            "name": "as_string",
            "location": 305,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/template_matcher.py": {
        "TemplateMatcher.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "video_stream": []
            }
        },
        "TemplateMatcher.__repr__": {
            "name": "__repr__",
            "location": 41,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TemplateMatcher.__str__": {
            "name": "__str__",
            "location": 44,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "TemplateMatcher.useless_function": {
            "name": "useless_function",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "num": []
            }
        },
        "TemplateMatcher.find_all": {
            "name": "find_all",
            "location": 56,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fifa_match": [],
                "scoreboard": []
            }
        },
        "TemplateMatcher.find_pending_game": {
            "name": "find_pending_game",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fifa_session": [],
                "fifa_match": []
            }
        },
        "TemplateMatcher.find_scoreboard_team_badge": {
            "name": "find_scoreboard_team_badge",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "fifa_session": [],
                "fifa_match": []
            }
        },
        "TemplateMatcher.find": {
            "name": "find",
            "location": 83,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": [],
                "template": [],
                "roi": [],
                "if_is_found": [],
                "value_if_found": []
            }
        }
    },
    "xcv-master/xcv/video_stream.py": {
        "VideoStream.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [],
            "arguments": {
                "self": [],
                "src": [],
                "fps": [],
                "use_streamlink_backup": [],
                "streamlink_url": [],
                "streamlink_quality": []
            }
        },
        "VideoStream.__exit__": {
            "name": "__exit__",
            "location": 48,
            "return": [],
            "arguments": {
                "self": [],
                "exc_type": [],
                "exc_value": [],
                "traceback": []
            }
        },
        "VideoStream.start": {
            "name": "start",
            "location": 51,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VideoStream.update": {
            "name": "update",
            "location": 61,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VideoStream.read": {
            "name": "read",
            "location": 69,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VideoStream.stop": {
            "name": "stop",
            "location": 76,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/__init__.py": {},
    "xcv-master/xcv/__main__.py": {},
    "xcv-master/xcv/tools/Base64_Image_Encoder.py": {
        "main": {
            "name": "main",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/xcv/tools/checkSerial.py": {
        "serialSend": {
            "name": "serialSend",
            "location": 5,
            "return": [
                "Callable[([], Any)]"
            ],
            "arguments": {
                "charToSend": [],
                "port": [],
                "baudrate": []
            }
        },
        "checkSerial": {
            "name": "checkSerial",
            "location": 16,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "serialSend.send": {
            "name": "send",
            "location": 6,
            "return": [],
            "arguments": {}
        }
    },
    "xcv-master/xcv/tools/countdown.py": {
        "countdown": {
            "name": "countdown",
            "location": 3,
            "return": [
                "None"
            ],
            "arguments": {
                "t": []
            }
        }
    },
    "xcv-master/xcv/tools/list_usb_ports.py": {
        "list_usb_ports": {
            "name": "list_usb_ports",
            "location": 1,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "xcv-master/xcv/tools/record_roi.py": {
        "randomString": {
            "name": "randomString",
            "location": 22,
            "return": [
                "str"
            ],
            "arguments": {
                "stringLength": []
            }
        },
        "VideoCapture.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "gui": []
            }
        },
        "VideoCapture.check_video_stream": {
            "name": "check_video_stream",
            "location": 145,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VideoCapture.scoreboard_processor": {
            "name": "scoreboard_processor",
            "location": 161,
            "return": [],
            "arguments": {
                "self": [],
                "gray_frame": [],
                "save": []
            }
        },
        "VideoCapture.event_loop": {
            "name": "event_loop",
            "location": 217,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "VideoCapture._event_checker": {
            "name": "_event_checker",
            "location": 249,
            "return": [],
            "arguments": {
                "self": [],
                "_event": []
            }
        },
        "VideoCapture.close_all": {
            "name": "close_all",
            "location": 269,
            "return": [],
            "arguments": {
                "self": [],
                "window": []
            }
        },
        "GUILayout.__init__": {
            "name": "__init__",
            "location": 281,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._layout_mainttab_row3_buttons": {
            "name": "_layout_mainttab_row3_buttons",
            "location": 365,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._layout_maintab_row4_connection_status": {
            "name": "_layout_maintab_row4_connection_status",
            "location": 474,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._output_console": {
            "name": "_output_console",
            "location": 493,
            "return": [
                "list"
            ],
            "arguments": {
                "selfs": [
                    "GUILayout"
                ]
            }
        },
        "GUILayout._row0_video_frame": {
            "name": "_row0_video_frame",
            "location": 498,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._row2_game_stats": {
            "name": "_row2_game_stats",
            "location": 501,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._row1_detected_state": {
            "name": "_row1_detected_state",
            "location": 520,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._row5_gui_menu_buttons": {
            "name": "_row5_gui_menu_buttons",
            "location": 532,
            "return": [
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._layout_maintab": {
            "name": "_layout_maintab",
            "location": 552,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout._layout_about_tab": {
            "name": "_layout_about_tab",
            "location": 566,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "self": []
            }
        },
        "GUILayout.full_layout": {
            "name": "full_layout",
            "location": 589,
            "return": [
                "List[list]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/tools/trial_gui_layout.py": {
        "NewGUI.__init__": {
            "name": "__init__",
            "location": 4,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/WIP/app.py": {},
    "xcv-master/xcv/WIP/controller_button_press.py": {
        "controller_pots": {
            "name": "controller_pots",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "press_button": {
            "name": "press_button",
            "location": 35,
            "return": [],
            "arguments": {}
        },
        "parse_button_press_input": {
            "name": "parse_button_press_input",
            "location": 41,
            "return": [
                "Dict[(str, int)]"
            ],
            "arguments": {}
        },
        "button_timer.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "original_function": []
            }
        },
        "button_timer.__call__": {
            "name": "__call__",
            "location": 16,
            "return": [
                "Any"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "xcv-master/xcv/WIP/fut_manager.py": {},
    "xcv-master/xcv/WIP/fut_menu_navigator.py": {
        "MenuManager.__init__": {
            "name": "__init__",
            "location": 6,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MenuManager.menu_state": {
            "name": "menu_state",
            "location": 36,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "xcv-master/xcv/WIP/game.py": {
        "Game.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.__str__": {
            "name": "__str__",
            "location": 83,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.game_state": {
            "name": "game_state",
            "location": 87,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game.num_games_started": {
            "name": "num_games_started",
            "location": 91,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Game.num_games_completed": {
            "name": "num_games_completed",
            "location": 95,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Game.wins": {
            "name": "wins",
            "location": 99,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Game.losses": {
            "name": "losses",
            "location": 103,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Game.ties": {
            "name": "ties",
            "location": 107,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Game.record": {
            "name": "record",
            "location": 111,
            "return": [
                "str"
            ],
            "arguments": {
                "cls": []
            }
        },
        "Game.set_game_state": {
            "name": "set_game_state",
            "location": 114,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "new_state": []
            }
        },
        "Game._playing_fifa": {
            "name": "_playing_fifa",
            "location": 117,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Game._in_game": {
            "name": "_in_game",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.found_scoreboard_team_is_home": {
            "name": "found_scoreboard_team_is_home",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.found_scoreboard_team_is_away": {
            "name": "found_scoreboard_team_is_away",
            "location": 133,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.found_squad_manage_screen": {
            "name": "found_squad_manage_screen",
            "location": 138,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.status": {
            "name": "status",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.set_detected_score": {
            "name": "set_detected_score",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "home_away": [],
                "new_score": []
            }
        },
        "Game.detected_score": {
            "name": "detected_score",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.stopwatch_start": {
            "name": "stopwatch_start",
            "location": 158,
            "return": [
                "_datetime.datetime"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.timer": {
            "name": "timer",
            "location": 161,
            "return": [
                "Tuple[(str, int)]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Game.detected_match_clock": {
            "name": "detected_match_clock",
            "location": 186,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Match.in_match": {
            "name": "in_match",
            "location": 195,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Match.in_menu": {
            "name": "in_menu",
            "location": 198,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Match.found_menu": {
            "name": "found_menu",
            "location": 202,
            "return": [
                "None"
            ],
            "arguments": {
                "cls": []
            }
        }
    },
    "xcv-master/xcv/WIP/game_states.py": {
        "defending": {
            "name": "defending",
            "location": 9,
            "return": [
                "Callable[([], Any)]"
            ],
            "arguments": {
                "side": [
                    "int"
                ]
            }
        },
        "homeaway": {
            "name": "homeaway",
            "location": 16,
            "return": [
                "Callable[([], Any)]"
            ],
            "arguments": {
                "side": [
                    "int"
                ]
            }
        },
        "scoreCheck": {
            "name": "scoreCheck",
            "location": 23,
            "return": [
                "Callable[([], Any)]"
            ],
            "arguments": {
                "homeS": [
                    "int"
                ],
                "awayS": [
                    "int"
                ]
            }
        },
        "defending.currentSide": {
            "name": "currentSide",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "homeaway.currentHomeAway": {
            "name": "currentHomeAway",
            "location": 17,
            "return": [],
            "arguments": {}
        },
        "scoreCheck.currentScores": {
            "name": "currentScores",
            "location": 24,
            "return": [],
            "arguments": {}
        }
    },
    "xcv-master/xcv/WIP/hud.py": {
        "draw_HUD_FPS": {
            "name": "draw_HUD_FPS",
            "location": 31,
            "return": [
                "None"
            ],
            "arguments": {
                "frame": [],
                "fps": [
                    "int"
                ]
            }
        },
        "draw_HUD_elapsedTime": {
            "name": "draw_HUD_elapsedTime",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "frame": []
            }
        },
        "draw_HUD_elapsedGameTime": {
            "name": "draw_HUD_elapsedGameTime",
            "location": 41,
            "return": [
                "None"
            ],
            "arguments": {
                "frame": []
            }
        },
        "draw_HUD_HomeAway": {
            "name": "draw_HUD_HomeAway",
            "location": 46,
            "return": [
                "None"
            ],
            "arguments": {
                "frame": []
            }
        },
        "draw_HUD_DefendingSide": {
            "name": "draw_HUD_DefendingSide",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "frame": []
            }
        },
        "draw_HUD_controller": {
            "name": "draw_HUD_controller",
            "location": 69,
            "return": [
                "None"
            ],
            "arguments": {
                "frame": [],
                "press": [
                    "str"
                ]
            }
        }
    },
    "xcv-master/xcv/WIP/scratch.py": {},
    "xcv-master/xcv/WIP/template_load.py": {}
}
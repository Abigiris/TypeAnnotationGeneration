{
    "zapball-master/manage.py": {},
    "zapball-master/matches/admin.py": {},
    "zapball-master/matches/apps.py": {},
    "zapball-master/matches/models.py": {
        "Game.__unicode__": {
            "name": "__unicode__",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Match.__unicode__": {
            "name": "__unicode__",
            "location": 23,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MatchPlayer.__unicode__": {
            "name": "__unicode__",
            "location": 42,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "zapball-master/matches/slack_integration.py": {
        "match_description_message": {
            "name": "match_description_message",
            "location": 8,
            "return": [
                "dict"
            ],
            "arguments": {
                "match": [
                    "matches.models.Match"
                ]
            }
        },
        "match_started_message": {
            "name": "match_started_message",
            "location": 35,
            "return": [
                "dict"
            ],
            "arguments": {
                "match": [
                    "matches.models.Match"
                ]
            }
        }
    },
    "zapball-master/matches/utils.py": {
        "create_match": {
            "name": "create_match",
            "location": 9,
            "return": [
                "matches.models.Match"
            ],
            "arguments": {
                "game": [
                    "matches.models.Game"
                ],
                "user": [],
                "msg": [
                    "str"
                ]
            }
        },
        "prepare_match": {
            "name": "prepare_match",
            "location": 16,
            "return": [
                "Tuple[(matches.models.Match, List[matches.models.MatchTeam])]"
            ],
            "arguments": {
                "game": [
                    "matches.models.Game"
                ],
                "msg": [
                    "str"
                ]
            }
        },
        "join_match": {
            "name": "join_match",
            "location": 27,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "match": [
                    "matches.models.Match"
                ],
                "user": []
            }
        },
        "get_match_users": {
            "name": "get_match_users",
            "location": 32,
            "return": [
                "list"
            ],
            "arguments": {
                "match": [
                    "matches.models.Match"
                ]
            }
        },
        "is_team_full": {
            "name": "is_team_full",
            "location": 38,
            "return": [
                "bool"
            ],
            "arguments": {
                "team": [
                    "matches.models.MatchTeam"
                ]
            }
        },
        "is_match_full": {
            "name": "is_match_full",
            "location": 42,
            "return": [
                "bool"
            ],
            "arguments": {
                "match": [
                    "matches.models.Match"
                ]
            }
        },
        "get_users_from_teams": {
            "name": "get_users_from_teams",
            "location": 51,
            "return": [
                "list"
            ],
            "arguments": {
                "teams": [
                    "List[matches.models.MatchTeam]"
                ]
            }
        },
        "join_random_team": {
            "name": "join_random_team",
            "location": 61,
            "return": [
                "Tuple[(bool, str)]"
            ],
            "arguments": {
                "user": [],
                "teams": [
                    "List[matches.models.MatchTeam]"
                ]
            }
        }
    },
    "zapball-master/matches/views.py": {
        "start_match": {
            "name": "start_match",
            "location": 15,
            "return": [],
            "arguments": {
                "request": []
            }
        },
        "actions": {
            "name": "actions",
            "location": 34,
            "return": [],
            "arguments": {
                "request": []
            }
        }
    },
    "zapball-master/matches/__init__.py": {},
    "zapball-master/matches/migrations/0001_initial.py": {},
    "zapball-master/matches/migrations/__init__.py": {},
    "zapball-master/slack/admin.py": {},
    "zapball-master/slack/apps.py": {},
    "zapball-master/slack/models.py": {},
    "zapball-master/slack/tests.py": {},
    "zapball-master/slack/utils.py": {
        "is_slack_token_valid": {
            "name": "is_slack_token_valid",
            "location": 8,
            "return": [
                "bool"
            ],
            "arguments": {
                "token": [
                    "str"
                ]
            }
        },
        "format_user_mention": {
            "name": "format_user_mention",
            "location": 12,
            "return": [
                "str"
            ],
            "arguments": {
                "user": [
                    "slack.models.SlackUser"
                ]
            }
        },
        "get_or_create_slack_user": {
            "name": "get_or_create_slack_user",
            "location": 16,
            "return": [
                "slack.models.SlackUser"
            ],
            "arguments": {
                "team": [
                    "str"
                ],
                "user_id": [
                    "str"
                ],
                "username": [
                    "str"
                ]
            }
        }
    },
    "zapball-master/slack/views.py": {},
    "zapball-master/slack/__init__.py": {},
    "zapball-master/slack/migrations/0001_initial.py": {},
    "zapball-master/slack/migrations/__init__.py": {},
    "zapball-master/tests/test_matches.py": {
        "foosball_game": {
            "name": "foosball_game",
            "location": 8,
            "return": [],
            "arguments": {
                "db": []
            }
        },
        "user_a": {
            "name": "user_a",
            "location": 14,
            "return": [],
            "arguments": {
                "django_user_model": []
            }
        },
        "user_b": {
            "name": "user_b",
            "location": 21,
            "return": [],
            "arguments": {
                "django_user_model": []
            }
        },
        "user_c": {
            "name": "user_c",
            "location": 28,
            "return": [],
            "arguments": {
                "django_user_model": []
            }
        },
        "user_d": {
            "name": "user_d",
            "location": 35,
            "return": [],
            "arguments": {
                "django_user_model": []
            }
        },
        "user_e": {
            "name": "user_e",
            "location": 42,
            "return": [],
            "arguments": {
                "django_user_model": []
            }
        },
        "test_prepare_match": {
            "name": "test_prepare_match",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "foosball_game": []
            }
        },
        "test_is_team_full": {
            "name": "test_is_team_full",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "foosball_game": [],
                "user_a": [],
                "user_b": []
            }
        },
        "test_join_random_team": {
            "name": "test_join_random_team",
            "location": 71,
            "return": [
                "None"
            ],
            "arguments": {
                "foosball_game": [],
                "user_a": [],
                "user_b": [],
                "user_c": [],
                "user_d": [],
                "user_e": []
            }
        }
    },
    "zapball-master/tests/__init__.py": {},
    "zapball-master/zapball/settings.py": {},
    "zapball-master/zapball/urls.py": {},
    "zapball-master/zapball/wsgi.py": {},
    "zapball-master/zapball/__init__.py": {}
}
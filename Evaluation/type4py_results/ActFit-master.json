{
    "ActFit-master/setup.py": {},
    "ActFit-master/ActFit/file.py": {
        "dump": {
            "name": "dump",
            "location": 9,
            "return": [
                "None"
            ],
            "arguments": {
                "func": [
                    "bool",
                    "List[str]",
                    "Tuple[str]",
                    "Callable"
                ],
                "params": [
                    "bool",
                    "List[str]",
                    "Tuple[str]",
                    "Callable"
                ],
                "file": [
                    "bool",
                    "List[str]",
                    "Tuple[str]",
                    "Callable"
                ]
            }
        },
        "dumps": {
            "name": "dumps",
            "location": 21,
            "return": [
                "str",
                "TextIO",
                "BinaryIO"
            ],
            "arguments": {
                "func": [
                    "List[str]",
                    "Callable"
                ],
                "params": [
                    "List[str]",
                    "Callable"
                ]
            }
        },
        "load": {
            "name": "load",
            "location": 32,
            "return": [
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "file": [
                    "io.BytesIO",
                    "List[str]",
                    "str",
                    "Optional[List[str]]",
                    "Dict[str, Any]",
                    "TextIO"
                ]
            }
        },
        "loads": {
            "name": "loads",
            "location": 40,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "s": [
                    "str",
                    "bytes",
                    "dict"
                ]
            }
        }
    },
    "ActFit-master/ActFit/__init__.py": {},
    "ActFit-master/ActFit/ui/app.py": {
        "App.__init__": {
            "name": "__init__",
            "location": 44,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App._save_fit": {
            "name": "_save_fit",
            "location": 114,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App._load_source": {
            "name": "_load_source",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App._save_source": {
            "name": "_save_source",
            "location": 130,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App._spawn_about": {
            "name": "_spawn_about",
            "location": 138,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App.params": {
            "name": "params",
            "location": 148,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App.func": {
            "name": "func",
            "location": 152,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App.ys": {
            "name": "ys",
            "location": 156,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App.xs": {
            "name": "xs",
            "location": 162,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App.data": {
            "name": "data",
            "location": 166,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App.plot_ready": {
            "name": "plot_ready",
            "location": 170,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "App.run_from_cmd": {
            "name": "run_from_cmd",
            "location": 174,
            "return": [],
            "arguments": {
                "cls": []
            }
        },
        "App.run": {
            "name": "run",
            "location": 182,
            "return": [],
            "arguments": {
                "cls": []
            }
        }
    },
    "ActFit-master/ActFit/ui/env.py": {
        "Env.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "globals_": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Env.reset": {
            "name": "reset",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Env.exec": {
            "name": "exec",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "Env.eval": {
            "name": "eval",
            "location": 36,
            "return": [
                "Union[str, List[str]]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "code": [
                    "str",
                    "int"
                ]
            }
        },
        "Env.__getitem__": {
            "name": "__getitem__",
            "location": 39,
            "return": [
                "str",
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "Optional[str]",
                    "str",
                    "tuple",
                    "Dict[str, str]",
                    "int",
                    "Callable[[KT], VT]",
                    "Type[RuntimeError]"
                ]
            }
        },
        "Env.get": {
            "name": "get",
            "location": 42,
            "return": [
                "Optional[bool]",
                "Optional[Dict[str, Any]]",
                "Optional[str]",
                "str",
                "Iterable[Sequence[str]]",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Optional[int]",
                    "bool"
                ],
                "default": [
                    "str",
                    "Optional[int]",
                    "bool"
                ]
            }
        },
        "Env.build_src_view": {
            "name": "build_src_view",
            "location": 45,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "int",
                    "str",
                    "List[str]"
                ]
            }
        },
        "Env.build_picker": {
            "name": "build_picker",
            "location": 86,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "master": [
                    "bool",
                    "str",
                    "Dict[str, Any]"
                ],
                "name": [
                    "str",
                    "List[str]",
                    "bool",
                    "Optional[str]"
                ],
                "callable_": [
                    "str",
                    "List[str]",
                    "bool",
                    "Optional[str]"
                ],
                "command": [
                    "str",
                    "List[str]",
                    "bool",
                    "Optional[str]"
                ]
            }
        },
        "Env.build_src_view.SourceView.__init__": {
            "name": "__init__",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "env": [
                    "str",
                    "Mapping[str, str]",
                    "dict",
                    "List[str]"
                ]
            }
        },
        "Env.build_src_view.SourceView.text": {
            "name": "text",
            "location": 65,
            "return": [
                "str",
                "bool",
                "Optional[str]",
                "dict",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Env.build_src_view.SourceView.run": {
            "name": "run",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Env.build_src_view.SourceView.reset": {
            "name": "reset",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Env.build_src_view.SourceView.populate": {
            "name": "populate",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "src": [
                    "str",
                    "Set[str]"
                ]
            }
        },
        "Env.build_picker.Picker.__init__": {
            "name": "__init__",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "env": [
                    "str",
                    "Mapping[str, str]",
                    "dict",
                    "List[str]"
                ]
            }
        },
        "Env.build_picker.Picker._choice_taken": {
            "name": "_choice_taken",
            "location": 103,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Env.build_picker.Picker.clear": {
            "name": "clear",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Env.build_picker.Picker.update": {
            "name": "update",
            "location": 111,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Env.build_picker.Picker.value": {
            "name": "value",
            "location": 124,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ActFit-master/ActFit/ui/fitui.py": {
        "FitUI.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FitUI.params": {
            "name": "params",
            "location": 27,
            "return": [
                "Mapping",
                "Dict[str, str]",
                "Dict[str, float]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "FitUI.boundaries": {
            "name": "boundaries",
            "location": 31,
            "return": [
                "Dict[str, Any]",
                "Dict[str, str]",
                "dict",
                "Dict[str, Dict[str, Any]]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FitUI.update": {
            "name": "update",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FitUI.perform_fit": {
            "name": "perform_fit",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ActFit-master/ActFit/ui/param_slider.py": {
        "ParamSlider.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "root": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]"
                ],
                "label": [
                    "raiden.tests.fuzz.utils.Scrambling",
                    "List[bytes]",
                    "List[Callable]"
                ]
            }
        },
        "ParamSlider.value": {
            "name": "value",
            "location": 51,
            "return": [
                "str",
                "int",
                "Type[T]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParamSlider.boundary": {
            "name": "boundary",
            "location": 55,
            "return": [
                "Generator",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "ParamSlider.set_value": {
            "name": "set_value",
            "location": 58,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "str",
                    "Tuple[float, float]"
                ]
            }
        },
        "ParamSlider.set_scale_value": {
            "name": "set_scale_value",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "x": [
                    "int",
                    "bool"
                ]
            }
        },
        "ParamSlider._update_value": {
            "name": "_update_value",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ActFit-master/ActFit/ui/plot.py": {
        "Plot.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "master": [
                    "bool",
                    "Dict[str, Any]",
                    "Callable[[Any, Any], bool]"
                ],
                "figsize": [
                    "int",
                    "bool",
                    "float"
                ],
                "dpi": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Plot._build_canvas": {
            "name": "_build_canvas",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Plot._key_press_handler": {
            "name": "_key_press_handler",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "event": [
                    "dict",
                    "List[str]",
                    "bool",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ]
            }
        },
        "Plot.reset": {
            "name": "reset",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Plot.plot": {
            "name": "plot",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "ActFit-master/ActFit/ui/utils.py": {
        "event_wrapper": {
            "name": "event_wrapper",
            "location": 7,
            "return": [
                "str",
                "int",
                "List[dict]",
                "bool"
            ],
            "arguments": {
                "func": [
                    "Callable"
                ]
            }
        },
        "chain_call": {
            "name": "chain_call",
            "location": 14,
            "return": [
                "int",
                "Optional[List[str]]",
                "Callable"
            ],
            "arguments": {}
        },
        "event_wrapper.inner": {
            "name": "inner",
            "location": 8,
            "return": [],
            "arguments": {}
        },
        "chain_call.inner": {
            "name": "inner",
            "location": 15,
            "return": [
                "str",
                "List[str]",
                "list",
                "List[List[str]]",
                "Optional[dict]",
                "Tuple[int, int]"
            ],
            "arguments": {}
        }
    },
    "ActFit-master/ActFit/ui/__init__.py": {},
    "ActFit-master/ActFit/ui/__main__.py": {
        "main": {
            "name": "main",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    }
}
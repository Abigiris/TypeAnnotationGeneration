{
    "BeoAnalyzer-master/conftest.py": {},
    "BeoAnalyzer-master/logfile/operations/operation_base.py": {
        "OperationBase.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "workfolder": [
                    "int",
                    "bool",
                    "float"
                ],
                "instructions": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "OperationBase._log_instruction": {
            "name": "_log_instruction",
            "location": 26,
            "return": [
                "None"
            ],
            "arguments": {
                "instrution_key": [
                    "str",
                    "Tuple[str, str]"
                ],
                "instruction_value": [
                    "str",
                    "Tuple[str, str]"
                ]
            }
        },
        "OperationBase._log_run_success": {
            "name": "_log_run_success",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase._log_run_failed": {
            "name": "_log_run_failed",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "Exception",
                    "logging.Logger"
                ]
            }
        },
        "OperationBase.directory_instruction": {
            "name": "directory_instruction",
            "location": 45,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.recursive_instruction": {
            "name": "recursive_instruction",
            "location": 63,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.exclude_files_instruction": {
            "name": "exclude_files_instruction",
            "location": 81,
            "return": [
                "pathlib.Path",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.exclude_extensions_instruction": {
            "name": "exclude_extensions_instruction",
            "location": 100,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.new_file_extension_instruction": {
            "name": "new_file_extension_instruction",
            "location": 118,
            "return": [
                "str",
                "pathlib.Path",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.output_name_instruction": {
            "name": "output_name_instruction",
            "location": 135,
            "return": [
                "str",
                "Dict[str, Any]",
                "Container[str]",
                "int",
                "bool",
                "Union[List, Dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.regex_expression_instruction": {
            "name": "regex_expression_instruction",
            "location": 152,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.delete_instruction": {
            "name": "delete_instruction",
            "location": 169,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.sort_type_instruction": {
            "name": "sort_type_instruction",
            "location": 186,
            "return": [
                "str",
                "bool",
                "Dict[str, Any]",
                "Iterator",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "OperationBase.make_directory_path": {
            "name": "make_directory_path",
            "location": 202,
            "return": [
                "str",
                "List[int]",
                "int",
                "bytes",
                "type"
            ],
            "arguments": {
                "self": [],
                "relative_path": [
                    "str",
                    "list",
                    "Optional[path.Path]",
                    "pathlib.Path"
                ]
            }
        },
        "OperationBase.get_files": {
            "name": "get_files",
            "location": 224,
            "return": [
                "pathlib.Path",
                "str",
                "Callable[[pathlib.Path], None]"
            ],
            "arguments": {
                "directory": [
                    "pathlib.Path",
                    "Union[str, pathlib.Path]",
                    "bool"
                ],
                "recursive": [
                    "int",
                    "List[str]",
                    "Optional[str]",
                    "pathlib.Path",
                    "bool"
                ]
            }
        },
        "OperationBase.get_directories": {
            "name": "get_directories",
            "location": 247,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "directory": [
                    "pathlib.Path",
                    "Union[pathlib.Path, str]",
                    "Optional[pathlib.Path]",
                    "Optional[str]",
                    "Union[str, IO[bytes]]"
                ],
                "recursive": [
                    "bool",
                    "str",
                    "T",
                    "dict"
                ]
            }
        },
        "OperationBase.run": {
            "name": "run",
            "location": 267,
            "return": [
                "builtins.bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile/operations/types/convert_files.py": {
        "ConvertFiles.convert_file": {
            "name": "convert_file",
            "location": 31,
            "return": [
                "bool"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "List[str]",
                    "int",
                    "Optional[str]"
                ],
                "new_extension": [
                    "str",
                    "IO"
                ]
            }
        },
        "ConvertFiles.list_item_in_string": {
            "name": "list_item_in_string",
            "location": 58,
            "return": [
                "bool"
            ],
            "arguments": {
                "arr": [
                    "Mapping[str, Dict[str, Any]]",
                    "Dict[str, Dict[str, str]]",
                    "dict",
                    "str",
                    "bool"
                ],
                "item": [
                    "Mapping[str, Any]",
                    "Dict[str, Any]",
                    "Dict[str, object]",
                    "dict"
                ]
            }
        },
        "ConvertFiles.sort_files": {
            "name": "sort_files",
            "location": 80,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "files": [
                    "bool",
                    "Callable[[], None]",
                    "List[str]",
                    "list",
                    "List[pathlib.Path]"
                ],
                "filters": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "ConvertFiles.run": {
            "name": "run",
            "location": 100,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile/operations/types/merge_files.py": {
        "MergeFiles.match_files_with_regex": {
            "name": "match_files_with_regex",
            "location": 41,
            "return": [
                "str",
                "dict",
                "List[str]",
                "Dict[str, Any]",
                "bool",
                "MutableMapping[str, Any]"
            ],
            "arguments": {
                "files": [
                    "IO[str]",
                    "str"
                ],
                "regex": [
                    "str",
                    "Pattern"
                ]
            }
        },
        "MergeFiles.sort_files": {
            "name": "sort_files",
            "location": 62,
            "return": [
                "str",
                "pathlib.Path"
            ],
            "arguments": {
                "files": [
                    "list",
                    "List[bytes]",
                    "List[str]",
                    "Path"
                ],
                "regex": [
                    "Iterable[pathlib.Path]",
                    "IO[str]",
                    "IO[Any]",
                    "Sequence[str]",
                    "List[str]"
                ]
            }
        },
        "MergeFiles.merge_files": {
            "name": "merge_files",
            "location": 83,
            "return": [
                "bool"
            ],
            "arguments": {
                "new_file_path": [
                    "str",
                    "pathlib.Path"
                ],
                "files": [
                    "str",
                    "Union[str, pathlib.Path]",
                    "pathlib.Path"
                ]
            }
        },
        "MergeFiles.delete_files": {
            "name": "delete_files",
            "location": 105,
            "return": [
                "bool"
            ],
            "arguments": {
                "files": [
                    "IO[str]",
                    "list",
                    "Sequence[pathlib.Path]",
                    "Iterable[pathlib.Path]"
                ]
            }
        },
        "MergeFiles.run": {
            "name": "run",
            "location": 125,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "MergeFiles.sort_files.regex_sort": {
            "name": "regex_sort",
            "location": 74,
            "return": [
                "Dict[str, Any]",
                "bool",
                "Dict[str, Dict[str, int]]"
            ],
            "arguments": {
                "line": [
                    "str"
                ]
            }
        }
    },
    "BeoAnalyzer-master/logfile/operations/types/pretty_json.py": {
        "PrettyJson.pretty_print_file": {
            "name": "pretty_print_file",
            "location": 18,
            "return": [
                "bool"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "bool"
                ]
            }
        },
        "PrettyJson.run": {
            "name": "run",
            "location": 46,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile/operations/types/unzip_files.py": {
        "UnzipFiles.extract_tar": {
            "name": "extract_tar",
            "location": 27,
            "return": [
                "Optional[str]",
                "str",
                "bool",
                "Callable[[Any], bool]",
                "List[int]"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "List[str]",
                    "Union[int, str]",
                    "Mapping",
                    "bool"
                ]
            }
        },
        "UnzipFiles.extract_gz": {
            "name": "extract_gz",
            "location": 65,
            "return": [
                "bool"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ]
            }
        },
        "UnzipFiles.extract": {
            "name": "extract",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ],
                "recursive": [
                    "bool",
                    "Union[io.TextIO, pathlib.Path]",
                    "str",
                    "List[str]",
                    "Sequence[int]"
                ]
            }
        },
        "UnzipFiles.run": {
            "name": "run",
            "location": 118,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile/readers/reader_base.py": {
        "ReaderBase.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "workfolder": [
                    "bool",
                    "Sequence[str]",
                    "str"
                ],
                "relative_path": [
                    "str",
                    "Callable[[str], None]"
                ],
                "instructions": [
                    "bool",
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "ReaderBase._log_instruction": {
            "name": "_log_instruction",
            "location": 36,
            "return": [
                "None"
            ],
            "arguments": {
                "instrution_key": [
                    "str",
                    "Tuple[str, str]"
                ],
                "instruction_value": [
                    "str",
                    "Tuple[str, str]"
                ]
            }
        },
        "ReaderBase._log_run_success": {
            "name": "_log_run_success",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderBase._log_run_failed": {
            "name": "_log_run_failed",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str",
                    "Exception",
                    "logging.Logger"
                ]
            }
        },
        "ReaderBase.file_path": {
            "name": "file_path",
            "location": 55,
            "return": [
                "str",
                "pathlib.Path",
                "int",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderBase.key_name_instruction": {
            "name": "key_name_instruction",
            "location": 71,
            "return": [
                "str",
                "Union[str, List]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderBase.enable_linenumber_instruction": {
            "name": "enable_linenumber_instruction",
            "location": 88,
            "return": [
                "str",
                "int",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderBase.read": {
            "name": "read",
            "location": 105,
            "return": [
                "logfile.readers.reader_result.ReaderResult"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile/readers/reader_result.py": {
        "ReaderResult.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ReaderResult.add": {
            "name": "add",
            "location": 17,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str"
                ]
            }
        },
        "ReaderResult.add_list": {
            "name": "add_list",
            "location": 28,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Union[int, slice]",
                    "dict",
                    "type",
                    "bytes"
                ],
                "values": [
                    "str",
                    "Union[int, slice]",
                    "dict",
                    "type",
                    "bytes"
                ]
            }
        }
    },
    "BeoAnalyzer-master/logfile/readers/types/read_full_document.py": {
        "ReadFullDocument.read": {
            "name": "read",
            "location": 17,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile_tests/operations_tests/operation_base_test.py": {
        "file_system": {
            "name": "file_system",
            "location": 19,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "tmp_path": [
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "test_directory_instruction": {
            "name": "test_directory_instruction",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_directory_instruction_is_none": {
            "name": "test_directory_instruction_is_none",
            "location": 76,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_recursive_instruction": {
            "name": "test_recursive_instruction",
            "location": 84,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_recursive_instruction_is_none": {
            "name": "test_recursive_instruction_is_none",
            "location": 93,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_exclude_files_instruction": {
            "name": "test_exclude_files_instruction",
            "location": 101,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_exclude_files_instruction_is_none": {
            "name": "test_exclude_files_instruction_is_none",
            "location": 110,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_exclude_extensions_instruction": {
            "name": "test_exclude_extensions_instruction",
            "location": 118,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_exclude_extensions_instruction_is_none": {
            "name": "test_exclude_extensions_instruction_is_none",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_new_file_extension_instruction": {
            "name": "test_new_file_extension_instruction",
            "location": 135,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_new_file_extension_instruction_is_none": {
            "name": "test_new_file_extension_instruction_is_none",
            "location": 144,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_make_directory_path": {
            "name": "test_make_directory_path",
            "location": 152,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_make_directory_path_arg_is_none": {
            "name": "test_make_directory_path_arg_is_none",
            "location": 160,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_make_directory_path_start": {
            "name": "test_make_directory_path_start",
            "location": 168,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_get_files": {
            "name": "test_get_files",
            "location": 176,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "BinaryIO"
                ]
            }
        },
        "test_get_files_recursive": {
            "name": "test_get_files_recursive",
            "location": 186,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "BinaryIO",
                    "Set[str]"
                ]
            }
        },
        "test_get_files_arg_none": {
            "name": "test_get_files_arg_none",
            "location": 203,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_get_files_dir_do_not_exists": {
            "name": "test_get_files_dir_do_not_exists",
            "location": 211,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_get_directories": {
            "name": "test_get_directories",
            "location": 219,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "float",
                    "IO[str]"
                ]
            }
        },
        "test_get_directories_recursive": {
            "name": "test_get_directories_recursive",
            "location": 229,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str"
                ]
            }
        },
        "test_get_directories_arg_none": {
            "name": "test_get_directories_arg_none",
            "location": 240,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_get_directories_dir_do_not_exists": {
            "name": "test_get_directories_dir_do_not_exists",
            "location": 248,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_output_name_instruction": {
            "name": "test_output_name_instruction",
            "location": 256,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_output_name_instruction_is_none": {
            "name": "test_output_name_instruction_is_none",
            "location": 268,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_regex_expression_instruction": {
            "name": "test_regex_expression_instruction",
            "location": 276,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_regex_expression_instruction_is_none": {
            "name": "test_regex_expression_instruction_is_none",
            "location": 288,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_delete_instruction": {
            "name": "test_delete_instruction",
            "location": 296,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_delete_instruction_is_none": {
            "name": "test_delete_instruction_is_none",
            "location": 308,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sort_type_instruction": {
            "name": "test_sort_type_instruction",
            "location": 316,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sort_type_instruction_is_none": {
            "name": "test_sort_type_instruction_is_none",
            "location": 328,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "MockOperationBase.run": {
            "name": "run",
            "location": 14,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile_tests/operations_tests/types/convert_files_test.py": {
        "file_system": {
            "name": "file_system",
            "location": 12,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "Sequence[str]",
                    "str",
                    "List[pathlib.Path]"
                ]
            }
        },
        "test_list_item_in_string_match": {
            "name": "test_list_item_in_string_match",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_list_item_in_string_no_match": {
            "name": "test_list_item_in_string_no_match",
            "location": 73,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_list_item_in_string_arg_item_none": {
            "name": "test_list_item_in_string_arg_item_none",
            "location": 82,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_list_item_in_string_arg_arr_none": {
            "name": "test_list_item_in_string_arg_arr_none",
            "location": 90,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_convert_file": {
            "name": "test_convert_file",
            "location": 98,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "pathlib.Path",
                    "Iterable[str]",
                    "edgar_code.types.PathLike",
                    "Optional[pathlib.Path]",
                    "path.Path"
                ]
            }
        },
        "test_convert_file_do_not_exists": {
            "name": "test_convert_file_do_not_exists",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_convert_file_arg_filepath_none": {
            "name": "test_convert_file_arg_filepath_none",
            "location": 120,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_convert_file_arg_new_extension_none": {
            "name": "test_convert_file_arg_new_extension_none",
            "location": 128,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "pathlib.Path",
                    "str",
                    "BinaryIO",
                    "pathlib2.Path",
                    "Union[str, pathlib.Path]"
                ]
            }
        },
        "test_sort_files_match": {
            "name": "test_sort_files_match",
            "location": 137,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sort_files_no_match": {
            "name": "test_sort_files_no_match",
            "location": 153,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sort_files_arg_files_none": {
            "name": "test_sort_files_arg_files_none",
            "location": 167,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_sort_files_arg_items_none": {
            "name": "test_sort_files_arg_items_none",
            "location": 176,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_run_invalid_workfolder": {
            "name": "test_run_invalid_workfolder",
            "location": 189,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_run_recursive": {
            "name": "test_run_recursive",
            "location": 203,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "pathlib2.Path",
                    "pathlib.Path"
                ]
            }
        },
        "test_run_not_recursive": {
            "name": "test_run_not_recursive",
            "location": 223,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "pathlib2.Path",
                    "pathlib.Path"
                ]
            }
        },
        "test_run_instruction_none": {
            "name": "test_run_instruction_none",
            "location": 243,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "pathlib.Path",
                    "str"
                ]
            }
        },
        "test_run_relative_dir": {
            "name": "test_run_relative_dir",
            "location": 262,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "pathlib.Path",
                    "str",
                    "IO[bytes]",
                    "Union[str, pathlib.Path]",
                    "IO[str]",
                    "BinaryIO"
                ]
            }
        },
        "test_run_exclude_extension": {
            "name": "test_run_exclude_extension",
            "location": 279,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "float",
                    "Union[str, pathlib.Path]",
                    "pathlib.Path",
                    "IO[str]"
                ]
            }
        },
        "test_run_exclude_files": {
            "name": "test_run_exclude_files",
            "location": 295,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "pathlib.Path"
                ]
            }
        }
    },
    "BeoAnalyzer-master/logfile_tests/operations_tests/types/merge_files_test.py": {
        "file_system": {
            "name": "file_system",
            "location": 13,
            "return": [],
            "arguments": {
                "tmp_path": []
            }
        },
        "test_match_files_with_regex": {
            "name": "test_match_files_with_regex",
            "location": 54,
            "return": [],
            "arguments": {}
        },
        "test_match_files_with_regex_no_match": {
            "name": "test_match_files_with_regex_no_match",
            "location": 70,
            "return": [],
            "arguments": {}
        },
        "test_match_files_with_regex_arg_files_none": {
            "name": "test_match_files_with_regex_arg_files_none",
            "location": 83,
            "return": [],
            "arguments": {}
        },
        "test_match_files_with_regex_arg_regex_none": {
            "name": "test_match_files_with_regex_arg_regex_none",
            "location": 92,
            "return": [],
            "arguments": {}
        },
        "test_sort_files": {
            "name": "test_sort_files",
            "location": 104,
            "return": [],
            "arguments": {}
        },
        "test_sort_files_no_regex_match": {
            "name": "test_sort_files_no_regex_match",
            "location": 121,
            "return": [],
            "arguments": {}
        },
        "test_sort_files_arg_files_none": {
            "name": "test_sort_files_arg_files_none",
            "location": 138,
            "return": [],
            "arguments": {}
        },
        "test_sort_files_arg_regex_none": {
            "name": "test_sort_files_arg_regex_none",
            "location": 147,
            "return": [],
            "arguments": {}
        },
        "test_merge_files": {
            "name": "test_merge_files",
            "location": 163,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_merge_files_arg_new_filepath_none": {
            "name": "test_merge_files_arg_new_filepath_none",
            "location": 189,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_merge_files_arg_files_none": {
            "name": "test_merge_files_arg_files_none",
            "location": 202,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_merge_files_invalid_files": {
            "name": "test_merge_files_invalid_files",
            "location": 211,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_merge_files_invalid_new_path": {
            "name": "test_merge_files_invalid_new_path",
            "location": 221,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_delete_files": {
            "name": "test_delete_files",
            "location": 234,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_delete_files_arg_none": {
            "name": "test_delete_files_arg_none",
            "location": 251,
            "return": [],
            "arguments": {}
        },
        "test_delete_files_invalid_path": {
            "name": "test_delete_files_invalid_path",
            "location": 259,
            "return": [],
            "arguments": {}
        },
        "test_run_not_recursive": {
            "name": "test_run_not_recursive",
            "location": 268,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_run_recursive": {
            "name": "test_run_recursive",
            "location": 286,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_run_delete": {
            "name": "test_run_delete",
            "location": 305,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_run_sub_directory": {
            "name": "test_run_sub_directory",
            "location": 327,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_run_sort_low_high": {
            "name": "test_run_sort_low_high",
            "location": 345,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_run_sort_high_low": {
            "name": "test_run_sort_high_low",
            "location": 374,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_run_instructions_none": {
            "name": "test_run_instructions_none",
            "location": 403,
            "return": [],
            "arguments": {
                "file_system": []
            }
        },
        "test_run_workfolder_none": {
            "name": "test_run_workfolder_none",
            "location": 413,
            "return": [],
            "arguments": {}
        }
    },
    "BeoAnalyzer-master/logfile_tests/operations_tests/types/pretty_json_test.py": {
        "file_system": {
            "name": "file_system",
            "location": 12,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "Sequence[str]",
                    "str",
                    "List[pathlib.Path]"
                ]
            }
        },
        "test_pretty_print_file": {
            "name": "test_pretty_print_file",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "pathlib.Path",
                    "BinaryIO"
                ]
            }
        },
        "test_pretty_print_file_arg_none": {
            "name": "test_pretty_print_file_arg_none",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_pretty_print_file_invalid_path": {
            "name": "test_pretty_print_file_invalid_path",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_run_workfolder_none": {
            "name": "test_run_workfolder_none",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_run_invalid_workfolder": {
            "name": "test_run_invalid_workfolder",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_run": {
            "name": "test_run",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "Union[str, pathlib.Path]",
                    "pathlib.Path",
                    "pathlib2.Path",
                    "BinaryIO"
                ]
            }
        }
    },
    "BeoAnalyzer-master/logfile_tests/operations_tests/types/unzip_files_test.py": {
        "file_system": {
            "name": "file_system",
            "location": 15,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "tmp_path": [
                    "pathlib.Path",
                    "Sequence[str]",
                    "str",
                    "List[pathlib.Path]"
                ]
            }
        },
        "test_extract_tar": {
            "name": "test_extract_tar",
            "location": 99,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "pathlib.Path",
                    "bool",
                    "Iterable[str]",
                    "Optional[pathlib.Path]"
                ]
            }
        },
        "test_extract_tar_corrupted_file": {
            "name": "test_extract_tar_corrupted_file",
            "location": 113,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "pathlib.Path",
                    "str",
                    "BinaryIO",
                    "Union[str, pathlib.Path]"
                ]
            }
        },
        "test_extract_tar_arg_none": {
            "name": "test_extract_tar_arg_none",
            "location": 122,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_extract_tar_invalid_path": {
            "name": "test_extract_tar_invalid_path",
            "location": 131,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_extract_gz": {
            "name": "test_extract_gz",
            "location": 140,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "float",
                    "pathlib.Path",
                    "BinaryIO",
                    "path.Path"
                ]
            }
        },
        "test_extract_gz_corrupted_file": {
            "name": "test_extract_gz_corrupted_file",
            "location": 151,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "pathlib.Path",
                    "str",
                    "BinaryIO",
                    "Union[str, pathlib.Path]"
                ]
            }
        },
        "test_extract_gz_arg_none": {
            "name": "test_extract_gz_arg_none",
            "location": 160,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_extract_gz_invalid_path": {
            "name": "test_extract_gz_invalid_path",
            "location": 169,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_extract_arg_none": {
            "name": "test_extract_arg_none",
            "location": 178,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_extract_invalid_path": {
            "name": "test_extract_invalid_path",
            "location": 185,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_extract_recursive": {
            "name": "test_extract_recursive",
            "location": 192,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "BinaryIO",
                    "pathlib.Path"
                ]
            }
        },
        "test_extract_not_recursive": {
            "name": "test_extract_not_recursive",
            "location": 201,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "BinaryIO",
                    "pathlib.Path"
                ]
            }
        },
        "test_run_workfolder_none": {
            "name": "test_run_workfolder_none",
            "location": 210,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_run_workfolder_invalid": {
            "name": "test_run_workfolder_invalid",
            "location": 222,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_run_instructions_none": {
            "name": "test_run_instructions_none",
            "location": 234,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "Union[str, pathlib.Path]",
                    "pathlib.Path",
                    "BinaryIO",
                    "str",
                    "pathlib2.Path"
                ]
            }
        }
    },
    "BeoAnalyzer-master/logfile_tests/reader_tests/reader_base_test.py": {
        "file_system": {
            "name": "file_system",
            "location": 22,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "tmp_path": [
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "test_file_path": {
            "name": "test_file_path",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "test_file_path_relative_path_none": {
            "name": "test_file_path_relative_path_none",
            "location": 55,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": []
            }
        },
        "test_file_path_workfolder_none": {
            "name": "test_file_path_workfolder_none",
            "location": 66,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_file_path_invalid_path": {
            "name": "test_file_path_invalid_path",
            "location": 77,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_key_name_instruction": {
            "name": "test_key_name_instruction",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_key_name_instruction_default_value": {
            "name": "test_key_name_instruction_default_value",
            "location": 100,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_key_name_instruction_instructions_none": {
            "name": "test_key_name_instruction_instructions_none",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_enable_linenumber_instruction": {
            "name": "test_enable_linenumber_instruction",
            "location": 121,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_enable_linenumber_instruction_default_value": {
            "name": "test_enable_linenumber_instruction_default_value",
            "location": 133,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_enable_linenumber_instruction_instructions_none": {
            "name": "test_enable_linenumber_instruction_instructions_none",
            "location": 145,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "MockReaderBase.read": {
            "name": "read",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "BeoAnalyzer-master/logfile_tests/reader_tests/reader_result_test.py": {
        "test_add": {
            "name": "test_add",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add_key_none": {
            "name": "test_add_key_none",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add_values_none": {
            "name": "test_add_values_none",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add_list": {
            "name": "test_add_list",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add_list_key_none": {
            "name": "test_add_list_key_none",
            "location": 59,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_add_list_values_none": {
            "name": "test_add_list_values_none",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "BeoAnalyzer-master/logfile_tests/reader_tests/types/read_full_document_test.py": {
        "file_system": {
            "name": "file_system",
            "location": 12,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "tmp_path": [
                    "Sequence[str]",
                    "str"
                ]
            }
        },
        "test_read": {
            "name": "test_read",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_read_invalid_workfolder": {
            "name": "test_read_invalid_workfolder",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_read_with_linenumber": {
            "name": "test_read_with_linenumber",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "bool"
                ]
            }
        },
        "test_read_invalid_instructions": {
            "name": "test_read_invalid_instructions",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {
                "file_system": [
                    "str",
                    "bool"
                ]
            }
        }
    }
}
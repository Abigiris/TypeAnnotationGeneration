{
    "Bugtracker-master/manage.py": {
        "main": {
            "name": "main",
            "location": 9,
            "return": [],
            "arguments": {}
        }
    },
    "Bugtracker-master/error_logger/admin.py": {},
    "Bugtracker-master/error_logger/apps.py": {},
    "Bugtracker-master/error_logger/models.py": {
        "ErrorLog.__str__": {
            "name": "__str__",
            "location": 26,
            "return": [
                "str",
                "Type",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ErrorLog.get_project_name": {
            "name": "get_project_name",
            "location": 29,
            "return": [
                "str",
                "bool",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerboseLog.__str__": {
            "name": "__str__",
            "location": 45,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "VerboseLog.get_project_name": {
            "name": "get_project_name",
            "location": 51,
            "return": [
                "str",
                "bool",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bugtracker-master/error_logger/serializer.py": {},
    "Bugtracker-master/error_logger/tests.py": {},
    "Bugtracker-master/error_logger/views.py": {},
    "Bugtracker-master/error_logger/__init__.py": {},
    "Bugtracker-master/error_logger/apis/ErrorLogZathura.py": {
        "ErrorLogZathura.post": {
            "name": "post",
            "location": 22,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "float",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "rest_framework.requesRequest",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/error_logger/apis/VerboseLogZathura.py": {
        "VerboseLogZathura.post": {
            "name": "post",
            "location": 21,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "float",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "rest_framework.requesRequest",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/error_logger/migrations/0001_initial.py": {},
    "Bugtracker-master/error_logger/migrations/0002_auto_20190924_0742.py": {},
    "Bugtracker-master/error_logger/migrations/0003_auto_20190924_0747.py": {},
    "Bugtracker-master/error_logger/migrations/0004_auto_20190926_1426.py": {},
    "Bugtracker-master/error_logger/migrations/0005_auto_20190926_1849.py": {},
    "Bugtracker-master/error_logger/migrations/0006_errorlog_identifier.py": {},
    "Bugtracker-master/error_logger/migrations/0007_verboselog_identifier.py": {},
    "Bugtracker-master/error_logger/migrations/0008_auto_20190929_0713.py": {},
    "Bugtracker-master/error_logger/migrations/0009_auto_20191001_0047.py": {},
    "Bugtracker-master/error_logger/migrations/__init__.py": {},
    "Bugtracker-master/frontend/admin.py": {},
    "Bugtracker-master/frontend/apps.py": {},
    "Bugtracker-master/frontend/models.py": {},
    "Bugtracker-master/frontend/tests.py": {},
    "Bugtracker-master/frontend/__init__.py": {},
    "Bugtracker-master/frontend/migrations/__init__.py": {},
    "Bugtracker-master/frontend/_views/dashboard.py": {
        "DashboardView.get": {
            "name": "get",
            "location": 25,
            "return": [
                "int",
                "List[str]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/error_log.py": {
        "ErrorLogView.get": {
            "name": "get",
            "location": 16,
            "return": [
                "int",
                "bytes",
                "tartare.core.models.Job",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "Dict[str, Any]",
                    "Tuple[int]",
                    "viewer.models.Archive"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/how_it_works.py": {
        "HowItWorks.get": {
            "name": "get",
            "location": 6,
            "return": [
                "int",
                "bytes",
                "Optional[Dict]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Iterable[int]",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/index.py": {
        "Index.get": {
            "name": "get",
            "location": 13,
            "return": [
                "Optional[str]",
                "bool",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict",
                    "rest_framework.requesRequest"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/logout.py": {
        "LogoutView.get": {
            "name": "get",
            "location": 12,
            "return": [
                "int",
                "List[str]",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "str"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/profile.py": {
        "ProfileView.get": {
            "name": "get",
            "location": 15,
            "return": [
                "int",
                "djmoney.contrib.exchange.models.Rate",
                "bytes",
                "Optional[Dict]",
                "bool",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "Dict[str, Any]"
                ],
                "username": [
                    "str",
                    "cmk.gui.http.Request",
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/project.py": {
        "ProjectView.get": {
            "name": "get",
            "location": 20,
            "return": [
                "str",
                "dict",
                "Dict[str, str]",
                "core.models.User",
                "Tuple[bytes, bytes]",
                "bytes",
                "Dict[str, Any]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ],
                "project_id": [
                    "django.http.HttpRequest",
                    "zerver.models.UserProfile",
                    "str"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/team.py": {
        "TeamView.get": {
            "name": "get",
            "location": 18,
            "return": [
                "int",
                "djmoney.contrib.exchange.models.Rate",
                "bytes",
                "Optional[Dict]",
                "bool",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ],
                "team_id": [
                    "int",
                    "zerver.models.UserProfile",
                    "str"
                ]
            }
        }
    },
    "Bugtracker-master/frontend/_views/verbose.py": {
        "VerboseView.get": {
            "name": "get",
            "location": 14,
            "return": [
                "int",
                "bytes",
                "tartare.core.models.Job",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "Dict[str, Any]",
                    "Tuple[int]",
                    "viewer.models.Archive"
                ]
            }
        }
    },
    "Bugtracker-master/organization/admin.py": {},
    "Bugtracker-master/organization/apps.py": {},
    "Bugtracker-master/organization/models.py": {
        "Organization.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Organization.save": {
            "name": "save",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bugtracker-master/organization/serializer.py": {},
    "Bugtracker-master/organization/tests.py": {},
    "Bugtracker-master/organization/views.py": {},
    "Bugtracker-master/organization/__init__.py": {},
    "Bugtracker-master/organization/apis/org.py": {
        "Org.post": {
            "name": "post",
            "location": 25,
            "return": [
                "List[Dict[str, Any]]",
                "float",
                "dict",
                "int"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "str"
                ]
            }
        }
    },
    "Bugtracker-master/organization/migrations/0001_initial.py": {},
    "Bugtracker-master/organization/migrations/0002_auto_20190923_1733.py": {},
    "Bugtracker-master/organization/migrations/__init__.py": {},
    "Bugtracker-master/ping_app/admin.py": {},
    "Bugtracker-master/ping_app/apps.py": {
        "PingAppConfig.ready": {
            "name": "ready",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bugtracker-master/ping_app/cron_job.py": {
        "jobs": {
            "name": "jobs",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "start": {
            "name": "start",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "Bugtracker-master/ping_app/models.py": {},
    "Bugtracker-master/ping_app/serializer.py": {},
    "Bugtracker-master/ping_app/tests.py": {},
    "Bugtracker-master/ping_app/views.py": {
        "Ping.post": {
            "name": "post",
            "location": 32,
            "return": [
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "dict",
                    "rest_framework.requesRequest",
                    "Iterator"
                ]
            }
        }
    },
    "Bugtracker-master/ping_app/__init__.py": {},
    "Bugtracker-master/ping_app/apis/ping.py": {
        "Ping.post": {
            "name": "post",
            "location": 21,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "float",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/ping_app/migrations/0001_initial.py": {},
    "Bugtracker-master/ping_app/migrations/0002_auto_20191002_0543.py": {},
    "Bugtracker-master/ping_app/migrations/0003_webstatus_request_type.py": {},
    "Bugtracker-master/ping_app/migrations/0004_auto_20191002_0602.py": {},
    "Bugtracker-master/ping_app/migrations/0005_auto_20191010_0812.py": {},
    "Bugtracker-master/ping_app/migrations/__init__.py": {},
    "Bugtracker-master/projects/admin.py": {},
    "Bugtracker-master/projects/apps.py": {},
    "Bugtracker-master/projects/models.py": {
        "Projects.__str__": {
            "name": "__str__",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bugtracker-master/projects/serializer.py": {},
    "Bugtracker-master/projects/tests.py": {},
    "Bugtracker-master/projects/views.py": {},
    "Bugtracker-master/projects/__init__.py": {},
    "Bugtracker-master/projects/apis/project.py": {
        "ProjectCRUD.post": {
            "name": "post",
            "location": 24,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "float",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/projects/migrations/0001_initial.py": {},
    "Bugtracker-master/projects/migrations/0002_auto_20191007_1920.py": {},
    "Bugtracker-master/projects/migrations/__init__.py": {},
    "Bugtracker-master/team/admin.py": {},
    "Bugtracker-master/team/apps.py": {},
    "Bugtracker-master/team/models.py": {
        "Team.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bugtracker-master/team/serializer.py": {},
    "Bugtracker-master/team/tests.py": {},
    "Bugtracker-master/team/views.py": {},
    "Bugtracker-master/team/__init__.py": {},
    "Bugtracker-master/team/apis/team_manager.py": {
        "TeamManager.post": {
            "name": "post",
            "location": 26,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "float",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "str"
                ]
            }
        }
    },
    "Bugtracker-master/team/migrations/0001_initial.py": {},
    "Bugtracker-master/team/migrations/0002_auto_20191007_1926.py": {},
    "Bugtracker-master/team/migrations/__init__.py": {},
    "Bugtracker-master/token_manager/admin.py": {},
    "Bugtracker-master/token_manager/apps.py": {},
    "Bugtracker-master/token_manager/models.py": {
        "ProjectToken.__str__": {
            "name": "__str__",
            "location": 13,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Bugtracker-master/token_manager/serializer.py": {},
    "Bugtracker-master/token_manager/tests.py": {},
    "Bugtracker-master/token_manager/views.py": {},
    "Bugtracker-master/token_manager/__init__.py": {},
    "Bugtracker-master/token_manager/apis/token.py": {
        "ProjectToken.post": {
            "name": "post",
            "location": 20,
            "return": [
                "List[Dict[str, Any]]",
                "int",
                "dict",
                "float"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/token_manager/migrations/0001_initial.py": {},
    "Bugtracker-master/token_manager/migrations/0002_auto_20190924_0708.py": {},
    "Bugtracker-master/token_manager/migrations/0003_remove_projecttoken_refresh_token.py": {},
    "Bugtracker-master/token_manager/migrations/__init__.py": {},
    "Bugtracker-master/user/admin.py": {},
    "Bugtracker-master/user/apps.py": {},
    "Bugtracker-master/user/models.py": {
        "CustomUser.__str__": {
            "name": "__str__",
            "location": 23,
            "return": [
                "str",
                "int",
                "bool",
                "Optional[List[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomUser.get_full_name": {
            "name": "get_full_name",
            "location": 33,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CustomUser.get_all_permissions": {
            "name": "get_all_permissions",
            "location": 39,
            "return": [
                "str",
                "bool",
                "int",
                "Awaitable"
            ],
            "arguments": {
                "self": [],
                "obj": [
                    "str",
                    "Sequence[int]"
                ]
            }
        }
    },
    "Bugtracker-master/user/serializer.py": {
        "UserSerializer.create": {
            "name": "create",
            "location": 18,
            "return": [
                "core.models.User",
                "lms.lmsdb.models.User",
                "lms.lmsdb.models.Solution",
                "zam_repondeur.models.Lecture",
                "aiolambda.Maybe[auth.user.User]"
            ],
            "arguments": {
                "self": [],
                "validated_data": [
                    "Dict[str, Any]",
                    "MutableMapping[str, Any]",
                    "dict"
                ]
            }
        },
        "UserSerializer.validate_email": {
            "name": "validate_email",
            "location": 25,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "value": [
                    "str",
                    "Mapping[str, str]"
                ]
            }
        },
        "UserSerializer.validate_password": {
            "name": "validate_password",
            "location": 31,
            "return": [
                "str",
                "Set[str]"
            ],
            "arguments": {
                "self": [],
                "password": [
                    "str",
                    "Optional[str]",
                    "bytes"
                ]
            }
        }
    },
    "Bugtracker-master/user/tests.py": {},
    "Bugtracker-master/user/views.py": {},
    "Bugtracker-master/user/__init__.py": {},
    "Bugtracker-master/user/apis/user_authentication.py": {
        "UserRegistration.post": {
            "name": "post",
            "location": 23,
            "return": [
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "UserLogin.post": {
            "name": "post",
            "location": 60,
            "return": [
                "Dict[str, Any]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "rest_framework.requesRequest"
                ]
            }
        }
    },
    "Bugtracker-master/user/migrations/0001_initial.py": {},
    "Bugtracker-master/user/migrations/0002_auto_20191008_1808.py": {},
    "Bugtracker-master/user/migrations/__init__.py": {},
    "Bugtracker-master/utility/helper.py": {
        "get_user_object": {
            "name": "get_user_object",
            "location": 11,
            "return": [
                "app.models.User",
                "bool",
                "Sequence[str]",
                "str"
            ],
            "arguments": {
                "email": [
                    "int",
                    "Optional[List[int]]",
                    "dict",
                    "Optional[str]",
                    "str",
                    "Optional[int]"
                ],
                "username": [
                    "str",
                    "Optional[str]",
                    "Optional[int]",
                    "Optional[float]"
                ]
            }
        },
        "get_team_object": {
            "name": "get_team_object",
            "location": 22,
            "return": [
                "bool",
                "str",
                "models.Payment"
            ],
            "arguments": {
                "team_id": [
                    "str"
                ]
            }
        },
        "get_project_object": {
            "name": "get_project_object",
            "location": 29,
            "return": [
                "str"
            ],
            "arguments": {
                "project_id": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "get_project_token_by_project_id": {
            "name": "get_project_token_by_project_id",
            "location": 36,
            "return": [
                "str",
                "int",
                "Dict[str, List[str]]"
            ],
            "arguments": {
                "project": [
                    "Callable",
                    "django.utils.timezone.timedelta",
                    "dict"
                ]
            }
        },
        "get_project_token_object": {
            "name": "get_project_token_object",
            "location": 43,
            "return": [
                "str",
                "int",
                "Dict[str, List[str]]",
                "bool",
                "dict",
                "users.models.CustomUser"
            ],
            "arguments": {
                "project_token": [
                    "str",
                    "Mapping[str, str]",
                    "dict",
                    "bytes"
                ]
            }
        },
        "set_cookie": {
            "name": "set_cookie",
            "location": 52,
            "return": [
                ""
            ],
            "arguments": {
                "response": [
                    "int",
                    "Callable",
                    "List[bool]",
                    "List[str]",
                    "Iterable[Any]"
                ],
                "key": [
                    "int",
                    "Callable",
                    "List[bool]",
                    "List[str]",
                    "Iterable[Any]"
                ],
                "value": [
                    "int",
                    "Callable",
                    "List[bool]",
                    "List[str]",
                    "Iterable[Any]"
                ],
                "days_expire": [
                    "int",
                    "Optional[int]"
                ],
                "expired_at": [
                    "datetime.datetime",
                    "Union[None, datetime.datetime, datetime.timedelta]",
                    "Optional[int]",
                    "Optional[datetime.datetime]",
                    "str",
                    "float"
                ]
            }
        },
        "get_all_errors_from_a_project": {
            "name": "get_all_errors_from_a_project",
            "location": 65,
            "return": [
                "dict",
                "str",
                "Iterable[str]",
                "Dict[str, str]"
            ],
            "arguments": {
                "project_id": [
                    "str"
                ]
            }
        },
        "get_all_verbose_log_from_a_project": {
            "name": "get_all_verbose_log_from_a_project",
            "location": 69,
            "return": [
                "dict",
                "Dict[str, Any]",
                "jumeaux.models.Reqs2ReqsAddOnPayload"
            ],
            "arguments": {
                "project_id": [
                    "str"
                ]
            }
        },
        "get_error_count_of_a_project": {
            "name": "get_error_count_of_a_project",
            "location": 73,
            "return": [
                "bool",
                "Dict[str, Any]",
                "str",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "project_id": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "get_verbose_count_of_a_project": {
            "name": "get_verbose_count_of_a_project",
            "location": 77,
            "return": [
                "dict",
                "Exception",
                "tartare.core.models.Job",
                "Dict[str, Any]",
                "str",
                "jumeaux.models.Reqs2ReqsAddOnPayload"
            ],
            "arguments": {
                "project_id": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        },
        "get_common_view_payload": {
            "name": "get_common_view_payload",
            "location": 81,
            "return": [
                "str"
            ],
            "arguments": {
                "user": [
                    "zerver.models.UserProfile",
                    "str",
                    "zerver.models.Message"
                ],
                "page_title": [
                    "str",
                    "salon.models.Stylist"
                ]
            }
        }
    },
    "Bugtracker-master/utility/token_manager.py": {
        "encode_access_token": {
            "name": "encode_access_token",
            "location": 13,
            "return": [
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "username": [
                    "datetime.timedelta",
                    "float",
                    "datetime.datetime",
                    "str"
                ],
                "role": [
                    "datetime.timedelta",
                    "float",
                    "datetime.datetime",
                    "str"
                ]
            }
        },
        "encode_refresh_token": {
            "name": "encode_refresh_token",
            "location": 25,
            "return": [
                "str",
                "Dict[str, Any]",
                "django.conf.settings.AUTH_USER_MODEL",
                "List[str]"
            ],
            "arguments": {
                "username": [
                    "datetime.timedelta",
                    "float",
                    "datetime.date",
                    "datetime.datetime",
                    "str",
                    "Dict[str, str]"
                ],
                "role": [
                    "datetime.timedelta",
                    "float",
                    "datetime.date",
                    "datetime.datetime",
                    "str",
                    "Dict[str, str]"
                ]
            }
        },
        "decode_token": {
            "name": "decode_token",
            "location": 37,
            "return": [
                "bool",
                "int",
                "Optional[str]",
                "bytes"
            ],
            "arguments": {
                "token": [
                    "str",
                    "Union[str, List]"
                ]
            }
        },
        "check_refresh_token": {
            "name": "check_refresh_token",
            "location": 57,
            "return": [
                "int",
                "bool"
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "Dict[str, Any]",
                    "dict"
                ]
            }
        },
        "protected": {
            "name": "protected",
            "location": 104,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "function": [
                    "Callable",
                    "bool",
                    "Callable[[T], Any]"
                ]
            }
        },
        "protected.wrapper": {
            "name": "wrapper",
            "location": 106,
            "return": [
                "str",
                "Dict[str, Any]",
                "Optional[str]"
            ],
            "arguments": {
                "self": [
                    "dict",
                    "Optional[Dict[str, Any]]",
                    "apistar.http.Session",
                    "bool"
                ],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "Bugtracker-master/zathura_bugtracker/custom_auth.py": {
        "TokenAuth.token_validate": {
            "name": "token_validate",
            "location": 13,
            "return": [
                "int",
                "Sequence[Tuple[float, float]]",
                "Dict[str, str]",
                "bytes",
                "str"
            ],
            "arguments": {
                "token": [
                    "str",
                    "int",
                    "Optional[str]"
                ]
            }
        }
    },
    "Bugtracker-master/zathura_bugtracker/settings.py": {},
    "Bugtracker-master/zathura_bugtracker/urls.py": {},
    "Bugtracker-master/zathura_bugtracker/views.py": {
        "Index.get": {
            "name": "get",
            "location": 6,
            "return": [
                "str",
                "bool",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "django.http.requesHttpRequest",
                    "rest_framework.requesRequest",
                    "Dict[str, str]",
                    "dict"
                ]
            }
        }
    },
    "Bugtracker-master/zathura_bugtracker/wsgi.py": {},
    "Bugtracker-master/zathura_bugtracker/__init__.py": {}
}
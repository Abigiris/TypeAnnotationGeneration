{
    "EC-CMD-Wallet-master/main.py": {},
    "EC-CMD-Wallet-master/setup.py": {},
    "EC-CMD-Wallet-master/document/conf.py": {
        "setup": {
            "name": "setup",
            "location": 76,
            "return": [
                ""
            ],
            "arguments": {
                "app": []
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/const.py": {},
    "EC-CMD-Wallet-master/EC_CMD_Wallet/scripts.py": {
        "new_cmd": {
            "name": "new_cmd",
            "location": 9,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "get_balance_cmd": {
            "name": "get_balance_cmd",
            "location": 16,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "send_cmd": {
            "name": "send_cmd",
            "location": 29,
            "return": [],
            "arguments": {
                "args": []
            }
        },
        "parser_args": {
            "name": "parser_args",
            "location": 44,
            "return": [],
            "arguments": {
                "params": []
            }
        },
        "main": {
            "name": "main",
            "location": 96,
            "return": [],
            "arguments": {
                "argv": []
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/__init__.py": {},
    "EC-CMD-Wallet-master/EC_CMD_Wallet/balance/methods.py": {
        "get_balance": {
            "name": "get_balance",
            "location": 5,
            "return": [],
            "arguments": {
                "address": [],
                "private": [],
                "currency": []
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/balance/_btc.py": {
        "btc_balance": {
            "name": "btc_balance",
            "location": 5,
            "return": [
                "Mapping[str, Any]",
                "dict",
                "Sequence[str]",
                "int",
                "str"
            ],
            "arguments": {
                "address": [
                    "Dict[str, Any]",
                    "float",
                    "dict"
                ],
                "private": [
                    "int",
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/balance/_eth.py": {
        "eth_balance": {
            "name": "eth_balance",
            "location": 5,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "address": [
                    "str",
                    "List[str]"
                ],
                "private": [
                    "int",
                    "str",
                    "List[str]"
                ]
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/balance/__init__.py": {},
    "EC-CMD-Wallet-master/EC_CMD_Wallet/config/default.py": {},
    "EC-CMD-Wallet-master/EC_CMD_Wallet/config/utils.py": {
        "_load_conf_from_json": {
            "name": "_load_conf_from_json",
            "location": 9,
            "return": [],
            "arguments": {
                "path": []
            }
        },
        "load_conf": {
            "name": "load_conf",
            "location": 17,
            "return": [],
            "arguments": {
                "args": []
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/config/verify.py": {},
    "EC-CMD-Wallet-master/EC_CMD_Wallet/config/__init__.py": {},
    "EC-CMD-Wallet-master/EC_CMD_Wallet/new/methods.py": {
        "new": {
            "name": "new",
            "location": 5,
            "return": [],
            "arguments": {
                "currency": []
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/new/_btc.py": {
        "btc_new": {
            "name": "btc_new",
            "location": 4,
            "return": [
                "Dict[str, str]",
                "bool",
                "Sequence[str]",
                "list",
                "str",
                "List[str]",
                "Tuple[int, str]"
            ],
            "arguments": {}
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/new/_eth.py": {
        "eth_new": {
            "name": "eth_new",
            "location": 5,
            "return": [
                "Dict[str, str]",
                "bool",
                "Sequence[str]",
                "list",
                "str",
                "List[str]",
                "Tuple[int, str]"
            ],
            "arguments": {}
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/new/__init__.py": {},
    "EC-CMD-Wallet-master/EC_CMD_Wallet/send/methods.py": {
        "send": {
            "name": "send",
            "location": 5,
            "return": [],
            "arguments": {
                "currency": [],
                "volume": [],
                "fee": [],
                "privateKey": [],
                "to": []
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/send/_btc.py": {
        "btc_send": {
            "name": "btc_send",
            "location": 5,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "volume": [
                    "str",
                    "Dict[str, Any]",
                    "Type['Declared']",
                    "int"
                ],
                "fee": [
                    "str"
                ],
                "privateKey": [
                    "int",
                    "str",
                    "bytes",
                    "Callable",
                    "dict",
                    "Tuple[str, str]"
                ],
                "to": [
                    "str",
                    "Dict[str, Any]",
                    "Type['Declared']",
                    "int"
                ]
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/send/_eth.py": {
        "eth_send": {
            "name": "eth_send",
            "location": 6,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "volume": [
                    "str",
                    "tuple",
                    "list"
                ],
                "fee": [
                    "str",
                    "bool",
                    "int",
                    "List[str]"
                ],
                "privateKey": [
                    "str",
                    "AnyStr"
                ],
                "to": [
                    "Optional[str]",
                    "str",
                    "bool"
                ]
            }
        }
    },
    "EC-CMD-Wallet-master/EC_CMD_Wallet/send/__init__.py": {}
}
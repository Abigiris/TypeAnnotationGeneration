{
    "FDDOrgan-master/controller.py": {
        "FDDOrgan.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bridge": [
                    "str",
                    "int",
                    "float",
                    "tuple",
                    "bool"
                ],
                "midi_inport_name": [
                    "Optional[str]",
                    "str",
                    "Dict[str, 'LabwareDefinition']"
                ]
            }
        },
        "FDDOrgan.__enter__": {
            "name": "__enter__",
            "location": 28,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "FDDOrgan.__exit__": {
            "name": "__exit__",
            "location": 34,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "exc_type": [
                    "Optional[Type[BaseException]]",
                    "str",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ],
                "exc_val": [
                    "Optional[Type[BaseException]]",
                    "str",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ],
                "exc_tb": [
                    "Optional[Type[BaseException]]",
                    "str",
                    "BaseException",
                    "Optional[BaseException]",
                    "Exception"
                ]
            }
        },
        "FDDOrgan.run": {
            "name": "run",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "FDDOrgan._claim_available_sub_address": {
            "name": "_claim_available_sub_address",
            "location": 79,
            "return": [
                "Optional[str]",
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "note_number": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "FDDOrgan._free_note": {
            "name": "_free_note",
            "location": 87,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "note_number": [
                    "int",
                    "List[int]"
                ]
            }
        }
    },
    "FDDOrgan-master/main.py": {},
    "FDDOrgan-master/moppy/bridge.py": {
        "MoppySerialBridge.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "ser": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "MoppySerialBridge.wait_for_startup": {
            "name": "wait_for_startup",
            "location": 16,
            "return": [
                "int",
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "timeout": [
                    "int"
                ]
            }
        },
        "MoppySerialBridge.ping": {
            "name": "ping",
            "location": 25,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "MoppySerialBridge.reset": {
            "name": "reset",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MoppySerialBridge.start_sequence": {
            "name": "start_sequence",
            "location": 42,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MoppySerialBridge.stop_sequence": {
            "name": "stop_sequence",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MoppySerialBridge.reset_device": {
            "name": "reset_device",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "device_number": [
                    "int",
                    "List[int]",
                    "str"
                ]
            }
        },
        "MoppySerialBridge.play_note": {
            "name": "play_note",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note": [
                    "list",
                    "int",
                    "Optional[str]"
                ],
                "velocity": [
                    "list",
                    "int",
                    "Optional[str]"
                ],
                "device_address": [
                    "int",
                    "dict"
                ],
                "sub_address": [
                    "int",
                    "dict"
                ]
            }
        },
        "MoppySerialBridge.stop_note": {
            "name": "stop_note",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note": [
                    "int",
                    "str",
                    "Iterable[T]"
                ],
                "device_address": [
                    "int",
                    "dict"
                ],
                "sub_address": [
                    "int",
                    "dict"
                ]
            }
        },
        "MoppySerialBridge.bend_pitch": {
            "name": "bend_pitch",
            "location": 61,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bend_amount": [
                    "int",
                    "str",
                    "List[List[int]]",
                    "Dict[int, Tuple[int, int]]"
                ],
                "configuration": [
                    "Dict[str, Any]",
                    "bool"
                ]
            }
        },
        "MoppySerialBridge._send_command": {
            "name": "_send_command",
            "location": 66,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str",
                    "int"
                ],
                "device_address": [
                    "str",
                    "int"
                ],
                "sub_address": [
                    "str",
                    "int"
                ]
            }
        },
        "MoppySerialBridge._send_message": {
            "name": "_send_message",
            "location": 74,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "message": [
                    "str"
                ]
            }
        }
    },
    "FDDOrgan-master/moppy/protocol.py": {
        "BaseMoppyCommand.__repr__": {
            "name": "__repr__",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMoppyCommand.length": {
            "name": "length",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "BaseMoppyCommand.to_list": {
            "name": "to_list",
            "location": 23,
            "return": [
                "str",
                "bool",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "SystemPongCommand.__init__": {
            "name": "__init__",
            "location": 38,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "device_address": [
                    "bool",
                    "str",
                    "int",
                    "List[str]"
                ],
                "min_sub_address": [
                    "str"
                ],
                "max_sub_address": [
                    "int",
                    "str"
                ]
            }
        },
        "DeviceStopNoteCommand.__init__": {
            "name": "__init__",
            "location": 67,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note_number": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "DevicePlayNoteCommand.__init__": {
            "name": "__init__",
            "location": 76,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "note_number": [
                    "int",
                    "bool",
                    "float"
                ],
                "velocity": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "DeviceBendPitch.__init__": {
            "name": "__init__",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bend_amount": [
                    "int",
                    "bytes",
                    "List[bytes]"
                ]
            }
        },
        "DeviceBendPitch.bend_amount": {
            "name": "bend_amount",
            "location": 92,
            "return": [
                "Dict[str, Any]",
                "Dict[str, str]",
                "int",
                "dict",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MoppyMessage.render": {
            "name": "render",
            "location": 101,
            "return": [
                "int",
                "Union[bytes, bytearray]",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "FDDOrgan-master/moppy/__init__.py": {}
}
{
    "Flask-EasyJWT-master/setup.py": {},
    "Flask-EasyJWT-master/docs/source/conf.py": {},
    "Flask-EasyJWT-master/flask_easyjwt/flask_easyjwt.py": {
        "FlaskEasyJWT.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Iterable[str]",
                    "Optional[str]",
                    "bytes"
                ]
            }
        },
        "FlaskEasyJWT.create": {
            "name": "create",
            "location": 68,
            "return": [
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "issued_at": [
                    "Optional[datetime.datetime]",
                    "str",
                    "Optional[str]",
                    "bool"
                ]
            }
        },
        "FlaskEasyJWT.verify": {
            "name": "verify",
            "location": 94,
            "return": [
                "Sequence[Any]",
                "bool"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "dict"
                ],
                "token": [
                    "str",
                    "Optional[str]",
                    "Optional[Union[Any, str]]",
                    "dict",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ],
                "key": [
                    "Optional[str]",
                    "str",
                    "Union[str, int]",
                    "bool"
                ],
                "issuer": [
                    "str",
                    "Optional[str]",
                    "Optional[Union[Any, str]]",
                    "dict",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ],
                "audience": [
                    "str",
                    "Optional[str]",
                    "Optional[Union[Any, str]]",
                    "dict",
                    "Dict[str, str]",
                    "Dict[str, Any]"
                ]
            }
        },
        "FlaskEasyJWT.get_validity": {
            "name": "get_validity",
            "location": 141,
            "return": [
                "Optional[int]",
                "Optional[Literal[\"only_clustered\", \"include_clustered\"]]",
                "bool",
                "Optional[str]",
                "dict",
                "Optional[Any]",
                "Optional[List[Any]]",
                "Optional[List[str]]"
            ],
            "arguments": {}
        },
        "FlaskEasyJWT._get_config_expiration_date": {
            "name": "_get_config_expiration_date",
            "location": 182,
            "return": [
                "Optional[str]",
                "Dict[str, str]",
                "Optional[Dict[str, Any]]",
                "Optional[List[str]]"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "bool",
                    "bytes",
                    "Dict[str, Any]",
                    "Type[object]",
                    "Union[str, Dict[str, Any]]",
                    "float"
                ]
            }
        },
        "FlaskEasyJWT._get_config_key": {
            "name": "_get_config_key",
            "location": 198,
            "return": [
                "str",
                "Optional[str]",
                "dict"
            ],
            "arguments": {}
        }
    },
    "Flask-EasyJWT-master/flask_easyjwt/__init__.py": {},
    "Flask-EasyJWT-master/stubs/flask_easyjwt/flask_easyjwt.py": {
        "FlaskEasyJWT.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "key": []
            }
        },
        "FlaskEasyJWT.create": {
            "name": "create",
            "location": 14,
            "return": [],
            "arguments": {
                "self": [],
                "issued_at": []
            }
        },
        "FlaskEasyJWT.verify": {
            "name": "verify",
            "location": 16,
            "return": [],
            "arguments": {
                "cls": [],
                "token": [],
                "key": [],
                "issuer": [],
                "audience": []
            }
        },
        "FlaskEasyJWT.get_validity": {
            "name": "get_validity",
            "location": 18,
            "return": [],
            "arguments": {}
        }
    },
    "Flask-EasyJWT-master/stubs/flask_easyjwt/__init__.py": {},
    "Flask-EasyJWT-master/tests/flask_easyjwt_test.py": {
        "FlaskEasyJWTTest.setUp": {
            "name": "setUp",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.tearDown": {
            "name": "tearDown",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_init_custom_key": {
            "name": "test_init_custom_key",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_init_default_key": {
            "name": "test_init_default_key",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_create_custom_expiration_date": {
            "name": "test_create_custom_expiration_date",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_create_default_expiration_date": {
            "name": "test_create_default_expiration_date",
            "location": 102,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_verify_custom_key": {
            "name": "test_verify_custom_key",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_verify_default_key": {
            "name": "test_verify_default_key",
            "location": 144,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_get_validity_timedelta": {
            "name": "test_get_validity_timedelta",
            "location": 166,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock_warn": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FlaskEasyJWTTest.test_get_validity_integer": {
            "name": "test_get_validity_integer",
            "location": 180,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock_warn": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FlaskEasyJWTTest.test_get_validity_no_app": {
            "name": "test_get_validity_no_app",
            "location": 195,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock_warn": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FlaskEasyJWTTest.test_get_validity_none": {
            "name": "test_get_validity_none",
            "location": 215,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock_warn": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FlaskEasyJWTTest.test_get_validity_string_parsable": {
            "name": "test_get_validity_string_parsable",
            "location": 229,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock_warn": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FlaskEasyJWTTest.test_get_config_expiration_date_string_unparsable": {
            "name": "test_get_config_expiration_date_string_unparsable",
            "location": 244,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "mock_warn": [
                    "unittesmock.MagicMock"
                ]
            }
        },
        "FlaskEasyJWTTest.test_get_expiration_date_no_validity": {
            "name": "test_get_expiration_date_no_validity",
            "location": 260,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_get_expiration_date_validity": {
            "name": "test_get_expiration_date_validity",
            "location": 272,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_get_config_key_easyjwt": {
            "name": "test_get_config_key_easyjwt",
            "location": 293,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_get_config_key_no_app": {
            "name": "test_get_config_key_no_app",
            "location": 304,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_get_config_key_none": {
            "name": "test_get_config_key_none",
            "location": 322,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "FlaskEasyJWTTest.test_get_config_key_secret": {
            "name": "test_get_config_key_secret",
            "location": 339,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Flask-EasyJWT-master/tests/integration_test.py": {
        "AccountValidationToken.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Callable[[], T]",
                    "Mapping",
                    "int"
                ]
            }
        },
        "IntegrationTest._create_app": {
            "name": "_create_app",
            "location": 26,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegrationTest._get_token": {
            "name": "_get_token",
            "location": 46,
            "return": [
                "str",
                "tuple",
                "float",
                "bool",
                "int"
            ],
            "arguments": {
                "user_id": [
                    "int",
                    "str"
                ]
            }
        },
        "IntegrationTest._validate_user": {
            "name": "_validate_user",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "token": [
                    "str",
                    "int"
                ]
            }
        },
        "IntegrationTest.setUp": {
            "name": "setUp",
            "location": 80,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegrationTest.tearDown": {
            "name": "tearDown",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegrationTest.test_validate_failure": {
            "name": "test_validate_failure",
            "location": 106,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "IntegrationTest.test_validate_success": {
            "name": "test_validate_success",
            "location": 122,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Flask-EasyJWT-master/tests/__init__.py": {}
}
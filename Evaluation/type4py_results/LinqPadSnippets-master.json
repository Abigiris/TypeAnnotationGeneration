{
    "LinqPadSnippets-master/python/concurrentdownload.py": {
        "url_to_title": {
            "name": "url_to_title",
            "location": 16,
            "return": [
                "int",
                "str",
                "set",
                "dict"
            ],
            "arguments": {
                "url": [
                    "int",
                    "Mapping",
                    "Tuple[str, str]",
                    "bool",
                    "str"
                ]
            }
        }
    },
    "LinqPadSnippets-master/python/fix-utf8.py": {
        "fix_file": {
            "name": "fix_file",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "LinqPadSnippets-master/python/generate-onenote-template-nightly.py": {
        "generate_onenote_templates": {
            "name": "generate_onenote_templates",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "LinqPadSnippets-master/python/linkchecker.py": {
        "parse_my_url": {
            "name": "parse_my_url",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "response": []
            }
        }
    },
    "LinqPadSnippets-master/python/pandas_weight.py": {},
    "LinqPadSnippets-master/python/pdf-scratch.py": {
        "make_all_up": {
            "name": "make_all_up",
            "location": 4,
            "return": [
                "bool",
                "Tuple[int, Dict[str, Any]]",
                "List[object]"
            ],
            "arguments": {
                "pages": [
                    "Sequence[Tuple[Any, Any]]",
                    "List[Callable]"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "LinqPadSnippets-master/python/ring-video-doorbell.py": {
        "token_updated": {
            "name": "token_updated",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "token": [
                    "str",
                    "int",
                    "Union[bytes, str]",
                    "Callable",
                    "bytes"
                ]
            }
        },
        "otp_callback": {
            "name": "otp_callback",
            "location": 40,
            "return": [
                "str",
                "Union[str, List[str]]",
                "Optional[str]",
                "Iterable[str]"
            ],
            "arguments": {}
        },
        "make_directory_if_not_exists": {
            "name": "make_directory_if_not_exists",
            "location": 67,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str"
                ]
            }
        },
        "upload_ring_event": {
            "name": "upload_ring_event",
            "location": 76,
            "return": [
                "str"
            ],
            "arguments": {
                "idx": [
                    "str",
                    "bytearray"
                ],
                "ring_event": [
                    "str",
                    "int",
                    "Union[str, int, float]"
                ]
            }
        },
        "getAllEvents": {
            "name": "getAllEvents",
            "location": 100,
            "return": [
                "str",
                "int",
                "dict",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "downloadAll": {
            "name": "downloadAll",
            "location": 112,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "printTimeStampAndDownload": {
            "name": "printTimeStampAndDownload",
            "location": 121,
            "return": [
                "Union[tuple, list]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "main": {
            "name": "main",
            "location": 136,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "LinqPadSnippets-master/python/rss_uniq.py": {
        "download_and_get_all_titles": {
            "name": "download_and_get_all_titles",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "download_and_get_all_title": {
            "name": "download_and_get_all_title",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "page_index": [
                    "bytes",
                    "Optional[Exception]"
                ]
            }
        }
    },
    "LinqPadSnippets-master/python/shachecksum.py": {
        "get_hashsums": {
            "name": "get_hashsums",
            "location": 7,
            "return": [
                "str",
                "bool",
                "dict",
                "set",
                "List[str]"
            ],
            "arguments": {
                "file_path": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 29,
            "return": [
                "None"
            ],
            "arguments": {}
        }
    },
    "LinqPadSnippets-master/python/text_similar.py": {},
    "LinqPadSnippets-master/python/zachage.py": {
        "printZachAge": {
            "name": "printZachAge",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "dateoffset": [
                    "int",
                    "str",
                    "Optional[bool]",
                    "Union[int, Tuple[int, ...]]"
                ]
            }
        }
    }
}
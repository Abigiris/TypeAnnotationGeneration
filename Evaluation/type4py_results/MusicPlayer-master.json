{
    "MusicPlayer-master/src/player.py": {
        "PlayerApp.setup": {
            "name": "setup",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PlayerApp.get_instance": {
            "name": "get_instance",
            "location": 18,
            "return": [
                "supersemodels.core.Database",
                "str"
            ],
            "arguments": {
                "cls": [
                    "bool",
                    "type",
                    "complex",
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "MusicPlayer-master/src/player_ui.py": {
        "PlayerUI.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "app": [
                    "app.App"
                ]
            }
        },
        "PlayerUI.show_error": {
            "name": "show_error",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/cloud.py": {},
    "MusicPlayer-master/src/commands/core_commands.py": {},
    "MusicPlayer-master/src/commands/decorator.py": {
        "command": {
            "name": "command",
            "location": 8,
            "return": [
                "list",
                "Callable[[Mapping], T]",
                "int",
                "Tuple[str, str]",
                "str"
            ],
            "arguments": {
                "name": [
                    "bool",
                    "str",
                    "list",
                    "List[str]"
                ],
                "display_name": [
                    "bool",
                    "str",
                    "list",
                    "List[str]"
                ],
                "visible_in_palette": [
                    "bool",
                    "str",
                    "list",
                    "List[str]"
                ]
            }
        },
        "command.decorator": {
            "name": "decorator",
            "location": 9,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "func": [
                    "Callable",
                    "T",
                    "dict"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/error.py": {
        "dismiss_error": {
            "name": "dismiss_error",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "window": [
                    "Union[Callable, None]",
                    "\"ID\"",
                    "dict"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/navigate_list.py": {
        "navigate_list_top": {
            "name": "navigate_list_top",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "str",
                    "bool",
                    "Tuple[str, str]",
                    "Type[Any]",
                    "List[str]"
                ]
            }
        },
        "navigate_list_bottom": {
            "name": "navigate_list_bottom",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "str",
                    "bool",
                    "Tuple[str, str]",
                    "Type[Any]",
                    "List[str]"
                ]
            }
        },
        "navigate_list_by": {
            "name": "navigate_list_by",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "str",
                    "bool",
                    "Tuple[str, str]",
                    "Type[Any]",
                    "List[str]"
                ],
                "offset": [
                    "str",
                    "bool",
                    "Tuple[str, str]",
                    "Type[Any]",
                    "List[str]"
                ]
            }
        },
        "navigate_next_page": {
            "name": "navigate_next_page",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "int",
                    "Type[\"SerializationDialect\"]",
                    "str"
                ]
            }
        },
        "navigate_previous_page": {
            "name": "navigate_previous_page",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "int",
                    "Type[\"SerializationDialect\"]",
                    "str"
                ]
            }
        },
        "select_list_item": {
            "name": "select_list_item",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "int",
                    "dict",
                    "List[str]",
                    "Dict[str, Optional[str]]"
                ]
            }
        },
        "toggle_visual_mode": {
            "name": "toggle_visual_mode",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "str",
                    "Tuple[str, str]",
                    "int"
                ]
            }
        },
        "inverse_selection": {
            "name": "inverse_selection",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "str",
                    "Tuple[str, str, int]",
                    "Dict[int, List[str]]"
                ]
            }
        },
        "mark_item": {
            "name": "mark_item",
            "location": 54,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "Union['AbstractSetIntStr', 'MappingIntStrAny']",
                    "dict"
                ]
            }
        },
        "unmark_all_items": {
            "name": "unmark_all_items",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "Optional[Dict]",
                    "Optional[float]",
                    "str"
                ]
            }
        },
        "copy": {
            "name": "copy",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "int",
                    "Type[\"SerializationDialect\"]",
                    "str"
                ]
            }
        },
        "cut": {
            "name": "cut",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "int",
                    "Type[\"SerializationDialect\"]",
                    "str"
                ]
            }
        },
        "paste": {
            "name": "paste",
            "location": 85,
            "return": [
                ""
            ],
            "arguments": {
                "list_component": [
                    "int",
                    "Type[\"SerializationDialect\"]",
                    "str"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/playback.py": {
        "pause_track": {
            "name": "pause_track",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "audio": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "rewind_by_seconds": {
            "name": "rewind_by_seconds",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "audio": [
                    "int",
                    "Callable",
                    "str"
                ],
                "offset": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "rewind_by_percentage": {
            "name": "rewind_by_percentage",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "audio": [
                    "int",
                    "Callable",
                    "str"
                ],
                "offset": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "rewind_to_percentage": {
            "name": "rewind_to_percentage",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "audio": [
                    "float",
                    "core.audio.audio_backend.AudioBackend",
                    "int",
                    "str",
                    "Optional[str]"
                ],
                "offset": [
                    "float",
                    "core.audio.audio_backend.AudioBackend",
                    "int",
                    "str",
                    "Optional[str]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/quit.py": {
        "quit": {
            "name": "quit",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "window": [
                    "str",
                    "Tuple[List, List, List]",
                    "bytes",
                    "bool"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/refresh.py": {
        "refresh": {
            "name": "refresh",
            "location": 13,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "window": [
                    "ui.window.Window",
                    "bool",
                    "Mapping"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/registry.py": {
        "register": {
            "name": "register",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "func": [
                    "Optional[str]",
                    "Optional[int]",
                    "str"
                ],
                "name": [
                    "Optional[str]",
                    "str",
                    "types.FunctionType",
                    "bool",
                    "mypy.types.Type"
                ],
                "display_name": [
                    "Optional[str]",
                    "Optional[List[Any]]",
                    "str",
                    "Optional[Dict[str, Any]]",
                    "Optional[Union[str, Any]]",
                    "Optional[List[str]]"
                ],
                "visible_in_palette": [
                    "Optional[str]",
                    "Optional[int]",
                    "str"
                ]
            }
        },
        "get_by_name": {
            "name": "get_by_name",
            "location": 31,
            "return": [
                "str",
                "type"
            ],
            "arguments": {
                "name": [
                    "str",
                    "apistar.types.ParamName"
                ]
            }
        },
        "get_by_display_name": {
            "name": "get_by_display_name",
            "location": 35,
            "return": [
                "str",
                "Type",
                "bool"
            ],
            "arguments": {
                "display_name": [
                    "str",
                    "dict",
                    "Dict[str, str]"
                ]
            }
        },
        "get_names": {
            "name": "get_names",
            "location": 39,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/commands/window.py": {
        "focus_next_view": {
            "name": "focus_next_view",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "ui": [
                    "int",
                    "str",
                    "dict",
                    "bool"
                ],
                "window": [
                    "ui.window.Window",
                    "float",
                    "bool",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/commands/__init__.py": {},
    "MusicPlayer-master/src/core/app.py": {
        "log_exception": {
            "name": "log_exception",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "window": [
                    "str",
                    "bytes",
                    "Tuple[List, List, List]",
                    "\"Counter\"",
                    "bool",
                    "Dict[str, Any]"
                ]
            }
        },
        "App.__init__": {
            "name": "__init__",
            "location": 49,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "App.get_instance": {
            "name": "get_instance",
            "location": 93,
            "return": [
                "dict"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "App.setup": {
            "name": "setup",
            "location": 96,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "App.run_forever": {
            "name": "run_forever",
            "location": 99,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "App.destroy": {
            "name": "destroy",
            "location": 115,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/core/bindings.py": {
        "BindingsController.__init__": {
            "name": "__init__",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "commander": [
                    "int",
                    "str",
                    "Union[int, Tuple[int, int]]"
                ],
                "window": [
                    "int",
                    "str",
                    "Union[int, Tuple[int, int]]"
                ]
            }
        },
        "BindingsController.get_binding": {
            "name": "get_binding",
            "location": 52,
            "return": [
                "str",
                "Optional[Tuple[int, int]]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Dict[str, Any]",
                    "bool"
                ]
            }
        },
        "BindingsController.handle_keys": {
            "name": "handle_keys",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "KT",
                    "dict",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/clipboard.py": {
        "Clipboard.__init__": {
            "name": "__init__",
            "location": 5,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Clipboard.get_instance": {
            "name": "get_instance",
            "location": 9,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "cls": [
                    "str",
                    "List[Dict[str, Any]]"
                ]
            }
        },
        "Clipboard.put": {
            "name": "put",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "Dict[str, Any]",
                    "bytes",
                    "dict",
                    "list",
                    "str",
                    "Optional[Dict[str, Any]]"
                ]
            }
        },
        "Clipboard.get": {
            "name": "get",
            "location": 17,
            "return": [
                "bytes",
                "Dict[str, Any]",
                "str",
                "Callable",
                "Optional[str]",
                "Callable[[str], T]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/core/cloud.py": {
        "CloudProvider.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "config": [
                    "dict"
                ]
            }
        },
        "CloudProvider.register_provider": {
            "name": "register_provider",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "cls": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]"
                ],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]"
                ],
                "provider": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]"
                ]
            }
        },
        "CloudProvider.push_files": {
            "name": "push_files",
            "location": 34,
            "return": [
                "rx.core.observable.Observable"
            ],
            "arguments": {
                "self": [],
                "uris": [
                    "str",
                    "Dict[str, Any]",
                    "Optional[str]",
                    "List[str]",
                    "list"
                ]
            }
        },
        "CloudSynchronizer.__init__": {
            "name": "__init__",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "CloudSynchronizer.make_upload_data": {
            "name": "make_upload_data",
            "location": 50,
            "return": [
                "Optional[dict]",
                "str",
                "Optional[int]"
            ],
            "arguments": {
                "track": [
                    "core.track.Track",
                    "str",
                    "float"
                ]
            }
        },
        "CloudSynchronizer._make_provider": {
            "name": "_make_provider",
            "location": 71,
            "return": [
                "int"
            ],
            "arguments": {
                "cls": [
                    "List[str]"
                ],
                "provider_config": [
                    "static_frame.core.util.PathSpecifier",
                    "bool",
                    "str",
                    "cmk.utils.structured_data.StructuredDataTree"
                ]
            }
        },
        "CloudSynchronizer._mark_as_synced": {
            "name": "_mark_as_synced",
            "location": 103,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "track": [
                    "core.track.Track",
                    "List[int]",
                    "bool",
                    "logging.LogRecord",
                    "Optional[str]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/commands_runner.py": {
        "CommandsRunner.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "loop": [
                    "int",
                    "bool",
                    "float"
                ],
                "injector": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "CommandsRunner.run_text_command": {
            "name": "run_text_command",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "text_command": [
                    "str",
                    "Optional[Pattern[str]]",
                    "Dict[str, Dict[str, str]]",
                    "Dict[str, str]"
                ]
            }
        },
        "CommandsRunner.run_command": {
            "name": "run_command",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "command": [
                    "str"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/config.py": {
        "deep_merge_dicts": {
            "name": "deep_merge_dicts",
            "location": 12,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dict_a": [
                    "float",
                    "bool",
                    "Dict[str, Dict[str, int]]",
                    "int",
                    "Tuple['cirq.Qid']",
                    "slice",
                    "Dict[str, Any]"
                ],
                "dict_b": [
                    "\"ImageStack\"",
                    "dict",
                    "Tuple['cirq.Qid']",
                    "int",
                    "Iterator[Tuple[Any]]"
                ],
                "target": [
                    "Optional[Dict[str, Any]]",
                    "Iterable",
                    "Dict[str, Union[str, Any]]",
                    "list",
                    "Optional[int]"
                ]
            }
        },
        "load_config": {
            "name": "load_config",
            "location": 42,
            "return": [
                "dict"
            ],
            "arguments": {
                "filename": [
                    "str",
                    "bool",
                    "int"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/core_providers.py": {
        "register_core_providers": {
            "name": "register_core_providers",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "app": []
            }
        },
        "_get_component_by_class": {
            "name": "_get_component_by_class",
            "location": 27,
            "return": [
                "str",
                "Optional[str]",
                "int",
                "bool",
                "Callable[[float], bool]"
            ],
            "arguments": {
                "window": [
                    "ui.window.Window",
                    "Optional[Callable]",
                    "bool",
                    "dict"
                ],
                "cls": [
                    "type",
                    "Optional[Dict]",
                    "dict",
                    "Iterable[str]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/db.py": {
        "init": {
            "name": "init",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "get_session": {
            "name": "get_session",
            "location": 31,
            "return": [
                "str",
                "Optional[Mapping[str, Any]]"
            ],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/core/dependency_injection.py": {
        "Injector.provide": {
            "name": "provide",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "int",
                    "Sequence[Sequence[str]]",
                    "Sequence[str]"
                ],
                "provider": [
                    "str",
                    "int",
                    "Sequence[Sequence[str]]",
                    "Sequence[str]"
                ]
            }
        },
        "Injector.get": {
            "name": "get",
            "location": 14,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": [],
                "token": [
                    "str",
                    "Union[str, List[str], None]",
                    "bytes",
                    "List[str]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/errors.py": {
        "push": {
            "name": "push",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/keyboard.py": {
        "get_curses_key_definitions": {
            "name": "get_curses_key_definitions",
            "location": 6,
            "return": [
                "dict",
                "str",
                "Dict[str, str]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "get_key_binding_name": {
            "name": "get_key_binding_name",
            "location": 13,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "key_name": [
                    "List[str]",
                    "Dict[str, str]",
                    "list"
                ]
            }
        },
        "tranform_code": {
            "name": "tranform_code",
            "location": 31,
            "return": [
                "Dict[str, Any]",
                "List[str]",
                "Optional[int]",
                "Dict[str, str]"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Dict[str, Any]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/player_ui.py": {
        "PlayerUI.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "app": [
                    "app.App"
                ]
            }
        },
        "PlayerUI.show_error": {
            "name": "show_error",
            "location": 46,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool",
                    "dict"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/plugging.py": {
        "load_plugins": {
            "name": "load_plugins",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "start_plugins": {
            "name": "start_plugins",
            "location": 56,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "destroy": {
            "name": "destroy",
            "location": 61,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "Plugin.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "module": [
                    "type",
                    "Type"
                ]
            }
        },
        "Plugin.load": {
            "name": "load",
            "location": 24,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Plugin.start": {
            "name": "start",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Plugin.destroy": {
            "name": "destroy",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Plugin.__repr__": {
            "name": "__repr__",
            "location": 40,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/core/rx_utils.py": {
        "to_async_iterable": {
            "name": "to_async_iterable",
            "location": 8,
            "return": [
                "str",
                "float",
                "int",
                "dict",
                "Optional[List[str]]",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "to_async_iterable._to_async_iterable": {
            "name": "_to_async_iterable",
            "location": 9,
            "return": [
                "float"
            ],
            "arguments": {
                "source": [
                    "str",
                    "Optional[bool]",
                    "Union[str, bytes]"
                ]
            }
        },
        "to_async_iterable._to_async_iterable.AIterable.__aiter__": {
            "name": "__aiter__",
            "location": 11,
            "return": [
                "float",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "to_async_iterable._to_async_iterable.AIterable.__aiter__.AIterator.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "to_async_iterable._to_async_iterable.AIterable.__aiter__.AIterator.feeder": {
            "name": "feeder",
            "location": 19,
            "return": [
                "Union[tuple, list]",
                "ops.Gate",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "to_async_iterable._to_async_iterable.AIterable.__aiter__.AIterator.on_next": {
            "name": "on_next",
            "location": 38,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "notification": [
                    "int",
                    "str",
                    "T"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/track.py": {},
    "MusicPlayer-master/src/core/utils.py": {
        "format_seconds": {
            "name": "format_seconds",
            "location": 10,
            "return": [
                "str"
            ],
            "arguments": {
                "seconds": [
                    "str",
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "format_bytes": {
            "name": "format_bytes",
            "location": 26,
            "return": [
                "str",
                "Optional[str]",
                "logging.LogRecord"
            ],
            "arguments": {
                "bytes_count": [
                    "float",
                    "int",
                    "List[float]"
                ]
            }
        },
        "async_log_time": {
            "name": "async_log_time",
            "location": 45,
            "return": [
                "int",
                "str",
                "Union[int, float]",
                "bytes"
            ],
            "arguments": {
                "coroutine": [
                    "bool",
                    "int",
                    "Callable[[], T]",
                    "str",
                    "List[Dict[int, float]]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/core/__init__.py": {},
    "MusicPlayer-master/src/core/audio/audio_backend.py": {
        "AudioBackend.__init__": {
            "name": "__init__",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AudioBackend.destroy": {
            "name": "destroy",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AudioBackend.set_track": {
            "name": "set_track",
            "location": 51,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "track": [
                    "int",
                    "str",
                    "bool"
                ]
            }
        },
        "AudioBackend.seek": {
            "name": "seek",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "AudioBackend.play": {
            "name": "play",
            "location": 57,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AudioBackend.pause": {
            "name": "pause",
            "location": 60,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "AudioBackend.make_time_tracking": {
            "name": "make_time_tracking",
            "location": 63,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "position": [
                    "Callable"
                ]
            }
        },
        "AudioBackend.set_position": {
            "name": "set_position",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "position": [
                    "bool",
                    "float"
                ]
            }
        },
        "AudioBackend.set_duration": {
            "name": "set_duration",
            "location": 73,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "duration": [
                    "bool",
                    "float"
                ]
            }
        },
        "AudioBackend.set_state": {
            "name": "set_state",
            "location": 76,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "state": [
                    "T"
                ]
            }
        },
        "AudioBackend.play_track": {
            "name": "play_track",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "track": [
                    "float",
                    "str",
                    "Optional[float]",
                    "Optional[str]",
                    "List[str]",
                    "bool"
                ]
            }
        },
        "AudioBackend.rewind_by_seconds": {
            "name": "rewind_by_seconds",
            "location": 84,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "offset": [
                    "str",
                    "int"
                ]
            }
        },
        "AudioBackend.rewind_by_percentage": {
            "name": "rewind_by_percentage",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "offset": [
                    "str",
                    "int"
                ]
            }
        },
        "AudioBackend.toggle_pause": {
            "name": "toggle_pause",
            "location": 92,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/core/audio/gst.py": {
        "GstAudioBackend.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GstAudioBackend.destroy": {
            "name": "destroy",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GstAudioBackend.set_track": {
            "name": "set_track",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "track": [
                    "str",
                    "bool",
                    "int",
                    "dict",
                    "float"
                ]
            }
        },
        "GstAudioBackend.seek": {
            "name": "seek",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "position": [
                    "int",
                    "str",
                    "Tuple[float, float]"
                ]
            }
        },
        "GstAudioBackend.play": {
            "name": "play",
            "location": 59,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GstAudioBackend.pause": {
            "name": "pause",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GstAudioBackend.on_eos": {
            "name": "on_eos",
            "location": 89,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GstAudioBackend.on_error": {
            "name": "on_error",
            "location": 93,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GstAudioBackend.on_duration_changed": {
            "name": "on_duration_changed",
            "location": 100,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "GstAudioBackend.on_message": {
            "name": "on_message",
            "location": 105,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "message": []
            }
        }
    },
    "MusicPlayer-master/src/core/audio/__init__.py": {},
    "MusicPlayer-master/src/core/tests/test_deep_merging_dicts.py": {
        "test_deep_merging_dicts": {
            "name": "test_deep_merging_dicts",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_fails_on_types_mismatch": {
            "name": "test_fails_on_types_mismatch",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/core/tests/test_dummy.py": {
        "test_dummy": {
            "name": "test_dummy",
            "location": 1,
            "return": [],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/core/tests/__init__.py": {},
    "MusicPlayer-master/src/plugins/__init__.py": {},
    "MusicPlayer-master/src/plugins/bar/views.py": {
        "BarComponent.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "audio": [
                    "Optional[int]"
                ]
            }
        },
        "BarComponent.draw_content": {
            "name": "draw_content",
            "location": 41,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "BarComponent.on_track_changed": {
            "name": "on_track_changed",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "track": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "BarComponent.on_time_track_changed": {
            "name": "on_time_track_changed",
            "location": 56,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "time_track": [
                    "float"
                ]
            }
        },
        "BarComponent.on_state_changed": {
            "name": "on_state_changed",
            "location": 66,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "state": [
                    "str",
                    "float",
                    "dict"
                ]
            }
        },
        "BarComponent.track_name": {
            "name": "track_name",
            "location": 72,
            "return": [
                "str",
                "Exception"
            ],
            "arguments": {
                "self": []
            }
        },
        "BarComponent.state_indicator": {
            "name": "state_indicator",
            "location": 79,
            "return": [
                "int",
                "Sequence[Tuple[float, float]]",
                "Dict[str, str]",
                "bytes",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/plugins/bar/__init__.py": {
        "init": {
            "name": "init",
            "location": 1,
            "return": [],
            "arguments": {}
        },
        "destroy": {
            "name": "destroy",
            "location": 5,
            "return": [],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/plugins/cloud_s3/s3.py": {
        "ProgressCallback.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "upload_data": [
                    "str",
                    "bool",
                    "Optional[dict]",
                    "int"
                ]
            }
        },
        "ProgressCallback.__call__": {
            "name": "__call__",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "bytes_amount": [
                    "str",
                    "dict",
                    "Union[bytes, bytearray]"
                ]
            }
        },
        "S3Provider.__init__": {
            "name": "__init__",
            "location": 50,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "config": [
                    "str",
                    "dict"
                ]
            }
        },
        "S3Provider.push_files": {
            "name": "push_files",
            "location": 58,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "uris": [
                    "str"
                ]
            }
        },
        "S3Provider._upload_many": {
            "name": "_upload_many",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "items": [
                    "Dict[str, Any]",
                    "str",
                    "Callable"
                ],
                "subject": [
                    "T",
                    "raiden.utils.FeeAmount",
                    "Iterable[Any]",
                    "List[str]",
                    "Tuple[str]"
                ]
            }
        },
        "S3Provider._upload": {
            "name": "_upload",
            "location": 88,
            "return": [
                "str",
                "cmk.utils.type_defs.HostName",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "item": []
            }
        }
    },
    "MusicPlayer-master/src/plugins/cloud_s3/__init__.py": {},
    "MusicPlayer-master/src/plugins/commands_palette/commands.py": {},
    "MusicPlayer-master/src/plugins/commands_palette/components.py": {
        "PaletteComponent.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/plugins/commands_palette/__init__.py": {
        "init": {
            "name": "init",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "destroy": {
            "name": "destroy",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/plugins/debug/commands.py": {
        "dump_layout_data": {
            "name": "dump_layout_data",
            "location": 19,
            "return": [
                "Dict[str, List[int]]",
                "Optional[float]",
                "dict",
                "str",
                "int",
                "Optional[Dict[str, Any]]",
                "bytes",
                "float"
            ],
            "arguments": {
                "component": [
                    "dict",
                    "Optional[Dict[str, str]]",
                    "str",
                    "float"
                ]
            }
        }
    },
    "MusicPlayer-master/src/plugins/debug/__init__.py": {},
    "MusicPlayer-master/src/plugins/library/models.py": {},
    "MusicPlayer-master/src/plugins/library/views.py": {
        "LibraryComponent.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "LibraryComponent.filter": {
            "name": "filter",
            "location": 22,
            "return": [],
            "arguments": {
                "self": [],
                "query": [
                    "dict",
                    "list",
                    "str",
                    "Dict[str, Any]",
                    "Union[str, int]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/plugins/library/__init__.py": {},
    "MusicPlayer-master/src/plugins/playlist/commands.py": {
        "toggle_playlists": {
            "name": "toggle_playlists",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "controller": [
                    "int",
                    "Callable",
                    "models.Question",
                    "str"
                ]
            }
        }
    },
    "MusicPlayer-master/src/plugins/playlist/controller.py": {
        "PlaylistController.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PlaylistController.toggle_playlists": {
            "name": "toggle_playlists",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PlaylistController.open_playlist": {
            "name": "open_playlist",
            "location": 40,
            "return": [
                "Dict[str, Dict[str, int]]",
                "Dict[str, Any]",
                "Union[tuple, list]",
                "str"
            ],
            "arguments": {
                "self": [],
                "playlist_name": [
                    "str",
                    "List[str]",
                    "Callable",
                    "Dict[str, Any]"
                ]
            }
        },
        "PlaylistController.remove_current_tab_from_stack": {
            "name": "remove_current_tab_from_stack",
            "location": 66,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/plugins/playlist/models.py": {},
    "MusicPlayer-master/src/plugins/playlist/views.py": {
        "PlaylistsComponent.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PlaylistsComponent.load_playlists": {
            "name": "load_playlists",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PlaylistsComponent.filter": {
            "name": "filter",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "query": [
                    "str",
                    "Union[int, slice]",
                    "Type[tikki.db.tables.Base]",
                    "Dict[str, Any]"
                ]
            }
        },
        "PlaylistsComponent.query": {
            "name": "query",
            "location": 35,
            "return": [
                "Optional[str]",
                "list",
                "List[List[Any]]",
                "List[Tuple[bool, str]]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "query": [
                    "Optional[int]",
                    "str",
                    "Optional[bool]",
                    "Sized"
                ]
            }
        },
        "PlaylistTracksComponent.__init__": {
            "name": "__init__",
            "location": 53,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "playlist": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "PlaylistTracksComponent.get_query": {
            "name": "get_query",
            "location": 58,
            "return": [
                "int",
                "djmoney.contrib.exchange.models.Rate",
                "zerver.models.Realm",
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": []
            }
        },
        "PlaylistTracksComponent.load_playlist": {
            "name": "load_playlist",
            "location": 64,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "PlaylistTracksComponent.on_paste": {
            "name": "on_paste",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "tracks": [
                    "int",
                    "lunch_buddies.models.poll_responses.PollResponse",
                    "server.models.Reservation",
                    "float",
                    "models.Membership",
                    "listens.gateways.sqlalchemy_db_gateway.models.SqlListen"
                ]
            }
        },
        "PlaylistTracksComponent.on_delete": {
            "name": "on_delete",
            "location": 87,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "tracks": [
                    "Optional[int]",
                    "zerver.models.Realm",
                    "Sequence[str]",
                    "Dict[Tuple[int, int], str]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/plugins/playlist/__init__.py": {},
    "MusicPlayer-master/src/plugins/scan/commands.py": {
        "create_tracks": {
            "name": "create_tracks",
            "location": 51,
            "return": [
                ""
            ],
            "arguments": {
                "progress_component": [
                    "Iterable[str]",
                    "str"
                ],
                "files": [
                    "str",
                    "IO[str]"
                ]
            }
        },
        "get_field": {
            "name": "get_field",
            "location": 65,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "metadata": [
                    "List[str]",
                    "str",
                    "Optional[\"FieldContainer\"]"
                ],
                "field": [
                    "List[str]",
                    "str",
                    "Optional[\"FieldContainer\"]"
                ]
            }
        },
        "create_track": {
            "name": "create_track",
            "location": 69,
            "return": [
                "asyncio.AbstractEventLoop",
                "Optional[asyncio.AbstractEventLoop]",
                "str",
                "dict",
                "Optional[str]",
                "Optional[Type[Exception]]"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "bool",
                    "blurr.core.record.Record"
                ]
            }
        },
        "add_tracks": {
            "name": "add_tracks",
            "location": 93,
            "return": [
                ""
            ],
            "arguments": {
                "tracks": [
                    "str",
                    "bytes",
                    "List[str]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/plugins/scan/__init__.py": {},
    "MusicPlayer-master/src/plugins/search/commands.py": {},
    "MusicPlayer-master/src/plugins/search/__init__.py": {},
    "MusicPlayer-master/src/plugins/test_plug/commands.py": {},
    "MusicPlayer-master/src/plugins/test_plug/__init__.py": {},
    "MusicPlayer-master/src/plugins/track_scheduler/commands.py": {
        "next_track": {
            "name": "next_track",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "ui": [
                    "int",
                    "Callable",
                    "str"
                ],
                "audio": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "previous_track": {
            "name": "previous_track",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "ui": [
                    "int",
                    "Callable",
                    "str"
                ],
                "audio": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "random_track": {
            "name": "random_track",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "ui": [
                    "int",
                    "Sequence[int]",
                    "Tuple[int]",
                    "Dict[str, List[str]]"
                ],
                "audio": [
                    "core.audio.AudioBackend",
                    "Dict[str, Any]",
                    "core.Year",
                    "core.models.DepositClaim"
                ]
            }
        },
        "find_playing_track": {
            "name": "find_playing_track",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "ui": [
                    "str",
                    "dict"
                ]
            }
        },
        "skip_tracks_by": {
            "name": "skip_tracks_by",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "ui": [
                    "str",
                    "player_ui.PlayerUI",
                    "Tuple[int, int]"
                ],
                "audio": [
                    "int",
                    "Callable",
                    "str"
                ],
                "offset": [
                    "bytes",
                    "str",
                    "Sequence[int]"
                ]
            }
        }
    },
    "MusicPlayer-master/src/plugins/track_scheduler/__init__.py": {
        "TrackSchedulerController.__init__": {
            "name": "__init__",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/plugins/tray_menu/menu.py": {
        "pause": {
            "name": "pause",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "data": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ]
            }
        },
        "play": {
            "name": "play",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "data": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ]
            }
        },
        "next_track": {
            "name": "next_track",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "data": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ]
            }
        },
        "random_track": {
            "name": "random_track",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "data": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ]
            }
        },
        "quit_app": {
            "name": "quit_app",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "data": [
                    "bool",
                    "bytes",
                    "str",
                    "List[str]",
                    "list"
                ]
            }
        },
        "make_menu": {
            "name": "make_menu",
            "location": 36,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "run_gtk_loop": {
            "name": "run_gtk_loop",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "init": {
            "name": "init",
            "location": 81,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/plugins/tray_menu/__init__.py": {
        "init": {
            "name": "init",
            "location": 4,
            "return": [],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/ui/colors.py": {
        "init": {
            "name": "init",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "MusicPlayer-master/src/ui/rect.py": {
        "Rect.is_void": {
            "name": "is_void",
            "location": 12,
            "return": [
                "int",
                "bool",
                "dict",
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/ui/renderer.py": {
        "Renderer.__init__": {
            "name": "__init__",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Renderer.update": {
            "name": "update",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Renderer.schedule_layout_update": {
            "name": "schedule_layout_update",
            "location": 20,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "layout": [
                    "Dict[str, Sequence[str]]",
                    "Iterable[T]",
                    "int",
                    "bool",
                    "str"
                ]
            }
        },
        "Renderer.schedule_component_redraw": {
            "name": "schedule_component_redraw",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "component": [
                    "str",
                    "int",
                    "VT"
                ]
            }
        }
    },
    "MusicPlayer-master/src/ui/window.py": {
        "Window.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Window.create": {
            "name": "create",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Window.destroy": {
            "name": "destroy",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Window.get_component": {
            "name": "get_component",
            "location": 87,
            "return": [
                "Optional[str]",
                "int",
                "str",
                "boucanpy.core.http_server.HttpServerRepo",
                "boucanpy.core.dns_server.DnsServerRepo",
                "tuple"
            ],
            "arguments": {
                "self": [],
                "component_class": [
                    "Optional[str]",
                    "dict",
                    "str"
                ]
            }
        },
        "Window.focus": {
            "name": "focus",
            "location": 90,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "component": []
            }
        },
        "Window.blur_active_component": {
            "name": "blur_active_component",
            "location": 93,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Window.active_component": {
            "name": "active_component",
            "location": 97,
            "return": [
                "str",
                "list",
                "Optional[BaseException]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Window.quit": {
            "name": "quit",
            "location": 102,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/ui/__init__.py": {},
    "MusicPlayer-master/src/ui/components/abstract_component.py": {
        "AbstractComponent.__init__": {
            "name": "__init__",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "size": [
                    "str",
                    "Sequence[Dict[str, str]]",
                    "int"
                ],
                "display_name": [
                    "str",
                    "bool"
                ]
            }
        },
        "AbstractComponent.mark_for_redraw": {
            "name": "mark_for_redraw",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractComponent.draw": {
            "name": "draw",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractComponent.set_rect": {
            "name": "set_rect",
            "location": 29,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "rect": [
                    "bool",
                    "float"
                ]
            }
        },
        "AbstractComponent.size": {
            "name": "size",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        },
        "AbstractComponent.detach": {
            "name": "detach",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractComponent.set_renderer": {
            "name": "set_renderer",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "renderer": [
                    "bool",
                    "float"
                ]
            }
        }
    },
    "MusicPlayer-master/src/ui/components/component.py": {
        "Component.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "context": []
            }
        },
        "Component.mark_for_redraw": {
            "name": "mark_for_redraw",
            "location": 19,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Component.draw": {
            "name": "draw",
            "location": 23,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Component.draw_content": {
            "name": "draw_content",
            "location": 29,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Component.draw_text": {
            "name": "draw_text",
            "location": 32,
            "return": [],
            "arguments": {
                "self": [],
                "text": [],
                "y": [],
                "x": [],
                "length": []
            }
        },
        "Component.set_rect": {
            "name": "set_rect",
            "location": 55,
            "return": [],
            "arguments": {
                "self": [],
                "rect": []
            }
        }
    },
    "MusicPlayer-master/src/ui/components/db_listing_mixin.py": {},
    "MusicPlayer-master/src/ui/components/input.py": {
        "InputComponent.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "InputComponent.draw_content": {
            "name": "draw_content",
            "location": 35,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "InputComponent.handle_key": {
            "name": "handle_key",
            "location": 46,
            "return": [
                "str",
                "Union[tuple, list]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "bytes",
                    "static_frame.core.util.GetItemKeyTypeCompound"
                ]
            }
        },
        "InputComponent.finish": {
            "name": "finish",
            "location": 82,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "dict",
                    "int",
                    "str",
                    "Sequence[Any]",
                    "Callable"
                ]
            }
        },
        "InputComponent.text_value": {
            "name": "text_value",
            "location": 89,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "InputComponent.set_value": {
            "name": "set_value",
            "location": 92,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "value": [
                    "bool",
                    "Sequence[str]",
                    "Optional[Dict[str, str]]",
                    "Union[bool, str]",
                    "str",
                    "List[str]"
                ]
            }
        },
        "InputComponent.request_value": {
            "name": "request_value",
            "location": 99,
            "return": [
                "str",
                "bool",
                "int",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "prompt": [
                    "int",
                    "bool",
                    "str",
                    "Sequence[int]",
                    "float"
                ],
                "default_value": [
                    "str",
                    "Optional[static_frame.core.util.IndexConstructor]",
                    "dict",
                    "Type",
                    "int"
                ]
            }
        }
    },
    "MusicPlayer-master/src/ui/components/label.py": {
        "LabelComponent.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "text": [
                    "bool",
                    "str",
                    "Sequence[Dict[str, str]]",
                    "float",
                    "int"
                ],
                "align": [
                    "bool",
                    "str",
                    "Sequence[Dict[str, str]]",
                    "float",
                    "int"
                ],
                "color": [
                    "bool",
                    "str",
                    "List[int]",
                    "int"
                ]
            }
        },
        "LabelComponent.text": {
            "name": "text",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "LabelComponent.draw_content": {
            "name": "draw_content",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/ui/components/layout.py": {
        "AbstractLayout.__init__": {
            "name": "__init__",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractLayout.update_layout": {
            "name": "update_layout",
            "location": 20,
            "return": [
                "builtins.set"
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractLayout.mark_for_update": {
            "name": "mark_for_update",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractLayout.set_renderer": {
            "name": "set_renderer",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "renderer": [
                    "str",
                    "bool",
                    "int",
                    "dict",
                    "float"
                ]
            }
        },
        "AbstractLayout.child_layouts": {
            "name": "child_layouts",
            "location": 33,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractLayout.get_descendants": {
            "name": "get_descendants",
            "location": 39,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "AbstractLayout.get_component": {
            "name": "get_component",
            "location": 46,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": [],
                "component_class": [
                    "type",
                    "str",
                    "Callable",
                    "Sequence"
                ]
            }
        },
        "Layout.__init__": {
            "name": "__init__",
            "location": 58,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "direction": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "Layout.insert": {
            "name": "insert",
            "location": 63,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "str"
                ],
                "component": [
                    "int",
                    "str",
                    "Tuple[int, int, int]"
                ]
            }
        },
        "Layout.add": {
            "name": "add",
            "location": 68,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "component": [
                    "int",
                    "str",
                    "List[str]",
                    "dict",
                    "list"
                ]
            }
        },
        "Layout._on_new_child": {
            "name": "_on_new_child",
            "location": 72,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "component": [
                    "str",
                    "logging.LogRecord",
                    "list",
                    "Optional[List[str]]"
                ]
            }
        },
        "Layout.remove": {
            "name": "remove",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "component": [
                    "Optional[int]",
                    "dict",
                    "Optional[str]",
                    "Optional[List[Callable]]"
                ]
            }
        },
        "Layout.clear": {
            "name": "clear",
            "location": 85,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Layout.update_layout": {
            "name": "update_layout",
            "location": 91,
            "return": [
                "Set[str]",
                "str",
                "set",
                "bool",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Layout.size": {
            "name": "size",
            "location": 162,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "size": [
                    "int"
                ]
            }
        }
    },
    "MusicPlayer-master/src/ui/components/listview.py": {
        "ListComponent.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.draw_content": {
            "name": "draw_content",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.get_item_color": {
            "name": "get_item_color",
            "location": 54,
            "return": [
                "str",
                "bool",
                "Iterable[int]",
                "core.models.Recipe",
                "Component"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "static_frame.core.util.GetItemKeyType"
                ]
            }
        },
        "ListComponent.data": {
            "name": "data",
            "location": 73,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "bytes",
                    "dict",
                    "Union[Dict, List]",
                    "Dict[str, Any]",
                    "Optional[Dict[str, Any]]",
                    "Dict[str, float]"
                ]
            }
        },
        "ListComponent.set_distinguished_item": {
            "name": "set_distinguished_item",
            "location": 77,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "item": [
                    "Dict[str, Any]",
                    "Mapping[str, Dict[str, Any]]",
                    "Dict[str, Dict[str, str]]",
                    "Dict[str, str]",
                    "bool"
                ]
            }
        },
        "ListComponent.min_index": {
            "name": "min_index",
            "location": 82,
            "return": [
                "str",
                "list",
                "Sequence[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.max_index": {
            "name": "max_index",
            "location": 86,
            "return": [
                "str",
                "list",
                "Sequence[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.value": {
            "name": "value",
            "location": 90,
            "return": [
                "str",
                "Sequence[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.get_value": {
            "name": "get_value",
            "location": 93,
            "return": [
                "bool",
                "str",
                "Callable",
                "OrderedDict"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.list_size": {
            "name": "list_size",
            "location": 97,
            "return": [
                "int",
                "str",
                "Optional[str]",
                "List[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.go_by": {
            "name": "go_by",
            "location": 100,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "offset": [
                    "int",
                    "str"
                ]
            }
        },
        "ListComponent.go_top": {
            "name": "go_top",
            "location": 103,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.go_bottom": {
            "name": "go_bottom",
            "location": 106,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.next_page": {
            "name": "next_page",
            "location": 109,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.previous_page": {
            "name": "previous_page",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.limit_index": {
            "name": "limit_index",
            "location": 115,
            "return": [
                "str",
                "List[dict]"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "List[str]",
                    "List[int]",
                    "list",
                    "int"
                ]
            }
        },
        "ListComponent.wrap_index": {
            "name": "wrap_index",
            "location": 118,
            "return": [
                "Optional[float]",
                "str",
                "dict",
                "IO[bytes]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "index": [
                    "str",
                    "int",
                    "List[int]",
                    "List[float]",
                    "List[Dict[str, Any]]",
                    "Tuple[int]"
                ]
            }
        },
        "ListComponent.set_index": {
            "name": "set_index",
            "location": 125,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "new_index": [
                    "str"
                ]
            }
        },
        "ListComponent.select": {
            "name": "select",
            "location": 139,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.filter": {
            "name": "filter",
            "location": 144,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "term": [
                    "str",
                    "int"
                ]
            }
        },
        "ListComponent.toggle_visual_mode": {
            "name": "toggle_visual_mode",
            "location": 154,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.copy_items": {
            "name": "copy_items",
            "location": 157,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.cut_items": {
            "name": "cut_items",
            "location": 161,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ListComponent.paste_items": {
            "name": "paste_items",
            "location": 177,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/ui/components/progress.py": {
        "ProgressComponent.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "ProgressComponent.progress": {
            "name": "progress",
            "location": 27,
            "return": [],
            "arguments": {
                "self": [],
                "progress": []
            }
        },
        "ProgressComponent.set_text": {
            "name": "set_text",
            "location": 31,
            "return": [],
            "arguments": {
                "self": [],
                "left_text": [],
                "right_text": []
            }
        },
        "ProgressComponent.draw_content": {
            "name": "draw_content",
            "location": 36,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/ui/components/table.py": {
        "default_format": {
            "name": "default_format",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "value": [
                    "str",
                    "Union[int, float]",
                    "Iterable[Any]"
                ]
            }
        },
        "TableComponent.__init__": {
            "name": "__init__",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TableComponent.draw_content": {
            "name": "draw_content",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TableComponent.get_item_color": {
            "name": "get_item_color",
            "location": 63,
            "return": [
                "str",
                "bool",
                "Iterable[int]",
                "core.models.Recipe"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "static_frame.core.util.GetItemKeyType"
                ]
            }
        },
        "TableComponent.list_size": {
            "name": "list_size",
            "location": 78,
            "return": [
                "List[str]",
                "str",
                "List[Dict]",
                "Union[str, List[Any]]",
                "List[int]",
                "list",
                "List[dict]"
            ],
            "arguments": {
                "self": []
            }
        },
        "TableComponent.columns": {
            "name": "columns",
            "location": 86,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "columns": [
                    "int",
                    "float",
                    "bool"
                ]
            }
        },
        "TableComponent.calculate_columns_size": {
            "name": "calculate_columns_size",
            "location": 90,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TableComponent.set_rect": {
            "name": "set_rect",
            "location": 110,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/ui/components/tabs_layout.py": {
        "TabsLayout.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TabsLayout.mark_for_update": {
            "name": "mark_for_update",
            "location": 31,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TabsLayout.update_layout": {
            "name": "update_layout",
            "location": 35,
            "return": [
                "str",
                "float",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "TabsLayout.get_tab": {
            "name": "get_tab",
            "location": 38,
            "return": [
                "str",
                "bool",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "tab_title": [
                    "str",
                    "bool"
                ]
            }
        },
        "TabsLayout.add_tab": {
            "name": "add_tab",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "tab": [
                    "str",
                    "Dict[int, Dict[int, Any]]",
                    "List[Mapping[str, Any]]"
                ]
            }
        },
        "TabsLayout.remove_tab": {
            "name": "remove_tab",
            "location": 56,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": [],
                "tab": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "TabsLayout.switch_to_tab_index": {
            "name": "switch_to_tab_index",
            "location": 71,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "index": [
                    "int",
                    "Sequence[int]",
                    "List[int]",
                    "bool",
                    "list",
                    "str",
                    "List[float]"
                ]
            }
        },
        "TabsLayout.switch_to_tab": {
            "name": "switch_to_tab",
            "location": 84,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "tab": [
                    "str",
                    "int",
                    "Optional[Collection[int]]"
                ]
            }
        },
        "TabsLayout.set_rect": {
            "name": "set_rect",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "rect": [
                    "str",
                    "bool",
                    "int",
                    "dict",
                    "float"
                ]
            }
        },
        "TabsHeaderComponent.__init__": {
            "name": "__init__",
            "location": 94,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "tabs_layout": [
                    "int",
                    "float",
                    "Optional[int]",
                    "bool"
                ]
            }
        },
        "TabsHeaderComponent.draw_content": {
            "name": "draw_content",
            "location": 98,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "MusicPlayer-master/src/ui/components/tracks.py": {
        "TracksComponent.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "TracksComponent.on_select": {
            "name": "on_select",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "track": [
                    "core.track.Track",
                    "Callable",
                    "bool"
                ]
            }
        }
    },
    "MusicPlayer-master/src/ui/components/__init__.py": {},
    "MusicPlayer-master/utils/colors_test.py": {
        "main": {
            "name": "main",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "stdscr": [
                    "str",
                    "int",
                    "Optional[float]",
                    "bool"
                ]
            }
        }
    }
}
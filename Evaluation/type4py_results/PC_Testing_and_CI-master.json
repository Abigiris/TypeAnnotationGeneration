{
    "PC_Testing_and_CI-master/examples.py": {
        "inc": {
            "name": "inc",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {
                "x": [
                    "bool",
                    "float",
                    "numpy.ndarray",
                    "Iterable[Iterable[float]]",
                    "list",
                    "str",
                    "T",
                    "bytes"
                ]
            }
        },
        "division": {
            "name": "division",
            "location": 11,
            "return": [
                "float",
                "Tuple[Any, Any, Any]",
                "bytearray",
                "int",
                "str"
            ],
            "arguments": {
                "a": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ],
                "b": [
                    "int",
                    "float",
                    "bool",
                    "List[int]"
                ]
            }
        },
        "wav_selector": {
            "name": "wav_selector",
            "location": 19,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "wav": [
                    "int",
                    "Callable",
                    "str"
                ],
                "flux": [
                    "int",
                    "Callable",
                    "str"
                ],
                "wav_min": [
                    "int",
                    "Callable",
                    "str"
                ],
                "wav_max": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "telluric_mask": {
            "name": "telluric_mask",
            "location": 34,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "flux": [
                    "int",
                    "Callable",
                    "str"
                ],
                "limit": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "type_hint_test": {
            "name": "type_hint_test",
            "location": 55,
            "return": [
                "Tuple[float, float]",
                "Tuple[float, float, float]"
            ],
            "arguments": {
                "x": [
                    "int",
                    "float",
                    "numpy.ndarray"
                ],
                "y": [
                    "int",
                    "float",
                    "numpy.ndarray"
                ]
            }
        }
    },
    "PC_Testing_and_CI-master/setup.py": {},
    "PC_Testing_and_CI-master/test_examples.py": {
        "test_pass_inc": {
            "name": "test_pass_inc",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_inc": {
            "name": "test_inc",
            "location": 13,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_raising_error": {
            "name": "test_raising_error",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_not_raising_error": {
            "name": "test_not_raising_error",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_ints_are_commutative": {
            "name": "test_ints_are_commutative",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "x": [
                    "float",
                    "List[str]",
                    "str"
                ],
                "y": [
                    "float",
                    "List[str]",
                    "str"
                ]
            }
        },
        "test_ints_cancel": {
            "name": "test_ints_cancel",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "x": [
                    "float",
                    "List[str]"
                ],
                "y": [
                    "float",
                    "List[str]"
                ]
            }
        },
        "test_reversing_twice_gives_same_list": {
            "name": "test_reversing_twice_gives_same_list",
            "location": 48,
            "return": [
                ""
            ],
            "arguments": {
                "xs": [
                    "float"
                ]
            }
        },
        "test_look_tuples_work_too": {
            "name": "test_look_tuples_work_too",
            "location": 57,
            "return": [
                ""
            ],
            "arguments": {
                "t": [
                    "str",
                    "int",
                    "float"
                ]
            }
        },
        "test_wav_selector": {
            "name": "test_wav_selector",
            "location": 69,
            "return": [
                ""
            ],
            "arguments": {
                "wav": [],
                "xmin": [
                    "int"
                ],
                "xmax": [
                    "int"
                ]
            }
        },
        "test_telluric_mask_properties": {
            "name": "test_telluric_mask_properties",
            "location": 84,
            "return": [
                ""
            ],
            "arguments": {
                "flux": [
                    "bool",
                    "str",
                    "float"
                ],
                "limit": [
                    "Union[int, float]",
                    "str"
                ]
            }
        },
        "test_telluric_mask_with_parameters": {
            "name": "test_telluric_mask_with_parameters",
            "location": 92,
            "return": [
                ""
            ],
            "arguments": {
                "limit": [
                    "Union[int, float]"
                ]
            }
        },
        "test_type_hint_test": {
            "name": "test_type_hint_test",
            "location": 103,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
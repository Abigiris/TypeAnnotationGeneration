{
    "Sims-master/src/sims.py": {
        "Main.__init__": {
            "name": "__init__",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Main.do_calculator": {
            "name": "do_calculator",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "int",
                    "set"
                ]
            }
        },
        "Main.do_clear": {
            "name": "do_clear",
            "location": 44,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "int",
                    "set"
                ]
            }
        },
        "Main.do_open": {
            "name": "do_open",
            "location": 50,
            "return": [
                "int"
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Main.do_save": {
            "name": "do_save",
            "location": 62,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "args": []
            }
        },
        "Main.do_data": {
            "name": "do_data",
            "location": 75,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "T",
                    "List[dict]",
                    "bool",
                    "dict",
                    "List[List[str]]"
                ]
            }
        },
        "Main.do_depth": {
            "name": "do_depth",
            "location": 83,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "int",
                    "set"
                ]
            }
        },
        "Main.do_concentration": {
            "name": "do_concentration",
            "location": 91,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "int",
                    "set"
                ]
            }
        },
        "Main.do_plot": {
            "name": "do_plot",
            "location": 99,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "int",
                    "set"
                ]
            }
        },
        "Main.do_plot_settings": {
            "name": "do_plot_settings",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "_": [
                    "bool",
                    "int",
                    "set"
                ]
            }
        }
    },
    "Sims-master/src/__init__.py": {},
    "Sims-master/src/cli/calculator.py": {
        "Calculator.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Calculator._rsf": {
            "name": "_rsf",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Calculator._hmr": {
            "name": "_hmr",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Sims-master/src/cli/concentration.py": {
        "CalculateConcentration.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "datafile": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "CalculateConcentration._set_arguments": {
            "name": "_set_arguments",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Sims-master/src/cli/depth.py": {
        "DepthCalculation.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "datafile": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "DepthCalculation._set_layers_value": {
            "name": "_set_layers_value",
            "location": 24,
            "return": [
                "Optional[str]",
                "Dict[str, Any]",
                "str",
                "List[str]",
                "int",
                "Optional[int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "DepthCalculation._determine_structure": {
            "name": "_determine_structure",
            "location": 38,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "layers": [
                    "int",
                    "str",
                    "float",
                    "tuple",
                    "bool"
                ]
            }
        },
        "DepthCalculation._set_args_for_homostructure": {
            "name": "_set_args_for_homostructure",
            "location": 45,
            "return": [
                "int",
                "str",
                "list"
            ],
            "arguments": {
                "self": []
            }
        },
        "DepthCalculation._set_args_to_heterostructure": {
            "name": "_set_args_to_heterostructure",
            "location": 57,
            "return": [
                "int",
                "float",
                "str"
            ],
            "arguments": {
                "self": [],
                "layers": [
                    "bool",
                    "audiopyle.lib.models.plugin.VampyPlugin",
                    "Set[str]",
                    "Optional[Any]"
                ]
            }
        },
        "DepthCalculation._get_list_of_values": {
            "name": "_get_list_of_values",
            "location": 80,
            "return": [
                "str",
                "Union[str, List]"
            ],
            "arguments": {
                "self": [],
                "layers": [
                    "int",
                    "List[Set[str]]",
                    "Optional[str]",
                    "str"
                ],
                "values_type": [
                    "str",
                    "Callable"
                ],
                "message": [
                    "str",
                    "Optional[str]",
                    "Optional[List[str]]"
                ]
            }
        },
        "DepthCalculation._calculate": {
            "name": "_calculate",
            "location": 112,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "speed": [
                    "int",
                    "Callable",
                    "str"
                ],
                "indexes": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "Sims-master/src/cli/plot_settings.py": {
        "PlotSetup.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "datafile": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "PlotSetup._set_x": {
            "name": "_set_x",
            "location": 18,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Sims-master/src/cli/selection_menu.py": {
        "SelectionMenu.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "title": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "SelectionMenu._selection_menu_loop": {
            "name": "_selection_menu_loop",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "programs": [
                    "list"
                ]
            }
        }
    },
    "Sims-master/src/cli/__init__.py": {},
    "Sims-master/src/lib/data.py": {
        "Data.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "name": [
                    "str",
                    "Dict[str, Any]",
                    "List[str]",
                    "dict"
                ],
                "points": [
                    "dict",
                    "str",
                    "bool"
                ]
            }
        },
        "Data._plot_init": {
            "name": "_plot_init",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "Data.__str__": {
            "name": "__str__",
            "location": 39,
            "return": [
                "OrderedDict",
                "str",
                "bytes"
            ],
            "arguments": {
                "self": []
            }
        },
        "Data.set_matrix": {
            "name": "set_matrix",
            "location": 45,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "element": [
                    "str",
                    "int"
                ]
            }
        },
        "Data.plot": {
            "name": "plot",
            "location": 54,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Sims-master/src/lib/__init__.py": {},
    "Sims-master/src/lib/db/db.py": {
        "_strip_ion": {
            "name": "_strip_ion",
            "location": 7,
            "return": [
                "str",
                "Iterable[str]",
                "Dict[str, Any]",
                "dict",
                "List[str]"
            ],
            "arguments": {
                "ion": [
                    "list",
                    "bool",
                    "Iterable[int]"
                ]
            }
        },
        "get_ia": {
            "name": "get_ia",
            "location": 13,
            "return": [
                "str",
                "bool",
                "dict",
                "set",
                "List[str]"
            ],
            "arguments": {
                "key": [
                    "str",
                    "Type[RuntimeError]",
                    "Dict[str, str]",
                    "int",
                    "Callable[[KT], VT]",
                    "Optional[str]",
                    "tuple"
                ]
            }
        }
    },
    "Sims-master/src/lib/db/__init__.py": {},
    "Sims-master/src/lib/io/file_read.py": {
        "asc": {
            "name": "asc",
            "location": 9,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "_find_file_name": {
            "name": "_find_file_name",
            "location": 28,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "raw_data": [
                    "str",
                    "Dict[int, Any]",
                    "bytes",
                    "Dict[str, Dict[str, Any]]",
                    "Dict[str, dict]"
                ]
            }
        },
        "_cut_header_and_points": {
            "name": "_cut_header_and_points",
            "location": 40,
            "return": [
                "Dict[str, Any]",
                "Dict[str, Union[str, int]]",
                "dict",
                "Dict[str, Dict[str, str]]",
                "List[dict]",
                "Dict[str, Type]",
                "str"
            ],
            "arguments": {
                "raw_data": [
                    "dict",
                    "pandas.core.groupby.DataFrameGroupBy",
                    "str"
                ]
            }
        },
        "_reshape_ion_string": {
            "name": "_reshape_ion_string",
            "location": 54,
            "return": [
                "str",
                "int",
                "Dict[str, Union[str, int]]",
                "Dict[str, str]",
                "Dict[str, Dict[str, Any]]"
            ],
            "arguments": {
                "bad_header": [
                    "str",
                    "Optional[List[str]]"
                ]
            }
        },
        "_reshape_points": {
            "name": "_reshape_points",
            "location": 66,
            "return": [
                "str",
                "Optional[float]",
                "int",
                "List[Dict[str, Any]]",
                "Dict[str, str]",
                "bool"
            ],
            "arguments": {
                "points": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "Sims-master/src/lib/io/manual_input.py": {
        "repeat_if_exception": {
            "name": "repeat_if_exception",
            "location": 4,
            "return": [
                "float",
                "Iterable[T]",
                "Callable[[T], bool]"
            ],
            "arguments": {
                "function": [
                    "Callable",
                    "bool",
                    "Callable[..., T]",
                    "float",
                    "Exception"
                ]
            }
        },
        "read_int": {
            "name": "read_int",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "read_float": {
            "name": "read_float",
            "location": 22,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "read_eval": {
            "name": "read_eval",
            "location": 27,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "message": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "repeat_if_exception.inner": {
            "name": "inner",
            "location": 6,
            "return": [
                "Type"
            ],
            "arguments": {}
        }
    },
    "Sims-master/src/lib/io/save_data.py": {
        "save": {
            "name": "save",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {
                "path": [
                    "str",
                    "List[str]"
                ],
                "datafile": [
                    "str",
                    "Optional[str]",
                    "List[str]"
                ]
            }
        }
    },
    "Sims-master/src/lib/io/__init__.py": {},
    "Sims-master/src/lib/math/concentration.py": {
        "set_arguments_and_calculate": {
            "name": "set_arguments_and_calculate",
            "location": 10,
            "return": [
                "str",
                "List[str]",
                "bool",
                "Set[str]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "datafile": [
                    "bool",
                    "float"
                ],
                "impurity": [
                    "str"
                ],
                "matrix": [
                    "bool",
                    "float"
                ],
                "ia": [
                    "Optional[float]",
                    "Optional[Callable]",
                    "Optional[Hashable]",
                    "Optional[int]",
                    "Optional[bool]",
                    "int",
                    "str"
                ]
            }
        },
        "calculate": {
            "name": "calculate",
            "location": 38,
            "return": [
                "int",
                "float"
            ],
            "arguments": {
                "impurity": [
                    "List[float]",
                    "List[int]",
                    "List[Tuple[int, int]]",
                    "int",
                    "str",
                    "Sequence[str]",
                    "Sequence[int]"
                ],
                "ia": [
                    "float",
                    "Container[T]"
                ],
                "matrix": [
                    "List[float]",
                    "List[int]",
                    "List[Tuple[int, int]]",
                    "int",
                    "str",
                    "Sequence[str]",
                    "Sequence[int]"
                ],
                "rsf": [
                    "float",
                    "Container[T]"
                ]
            }
        }
    },
    "Sims-master/src/lib/math/depth.py": {
        "set_arguments_and_calculate": {
            "name": "set_arguments_and_calculate",
            "location": 9,
            "return": [
                "str",
                "List[Dict[str, Any]]",
                "object",
                "list",
                "List[str]",
                "Callable[..., None]"
            ],
            "arguments": {
                "time": [
                    "List[float]",
                    "dict"
                ]
            }
        },
        "_get_list_of_values": {
            "name": "_get_list_of_values",
            "location": 40,
            "return": [
                "str",
                "Union[str, List]"
            ],
            "arguments": {
                "layers": [
                    "int",
                    "List[Set[str]]",
                    "Optional[str]",
                    "str"
                ],
                "values_type": [
                    "str",
                    "Callable"
                ],
                "message": [
                    "str",
                    "Optional[str]",
                    "Optional[List[str]]"
                ]
            }
        },
        "calculate": {
            "name": "calculate",
            "location": 59,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "time": [
                    "float",
                    "int"
                ],
                "speed": [
                    "List[int]",
                    "float",
                    "numpy.ndarray",
                    "int",
                    "bool"
                ],
                "indexes": [
                    "List[int]",
                    "Optional[numpy.ndarray]",
                    "float",
                    "nevergrad.common.Callable[[numpy.ndarray], numpy.ndarray]",
                    "int",
                    "numpy.ndarray",
                    "List[float]",
                    "T"
                ]
            }
        },
        "_homostructure": {
            "name": "_homostructure",
            "location": 77,
            "return": [
                "List[str]",
                "Dict[int, int]",
                "Optional[dict]",
                "Set[str]",
                "int",
                "str",
                "list"
            ],
            "arguments": {
                "time": [
                    "float",
                    "List[float]",
                    "int",
                    "bool"
                ],
                "speed": [
                    "float",
                    "List[float]",
                    "int",
                    "bool"
                ]
            }
        },
        "_heterostructure": {
            "name": "_heterostructure",
            "location": 81,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "time": [
                    "List[float]",
                    "float",
                    "numpy.ndarray",
                    "int",
                    "list"
                ],
                "speed": [
                    "List[float]",
                    "numpy.ndarray",
                    "float",
                    "Union[int, slice]"
                ],
                "indexes": [
                    "int",
                    "float",
                    "Sequence[int]",
                    "List[float]"
                ]
            }
        }
    },
    "Sims-master/src/lib/math/minor.py": {
        "hmr": {
            "name": "hmr",
            "location": 1,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "mass_1": [
                    "int",
                    "Callable",
                    "str"
                ],
                "mass_2": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        },
        "rsf": {
            "name": "rsf",
            "location": 5,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "dose": [
                    "float",
                    "int"
                ],
                "integer": [
                    "float",
                    "int"
                ]
            }
        }
    },
    "Sims-master/src/lib/math/statistics.py": {
        "mean": {
            "name": "mean",
            "location": 6,
            "return": [
                "bool",
                "Optional[Union[str, Any]]"
            ],
            "arguments": {
                "values": [
                    "T",
                    "numpy.ndarray",
                    "str",
                    "Union[int, float]",
                    "Optional[int]"
                ]
            }
        }
    },
    "Sims-master/src/lib/math/__init__.py": {},
    "Sims-master/tests/test_concentration.py": {
        "TestConcentration.test_calculate": {
            "name": "test_calculate",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "impurities": [],
                "matrix": []
            }
        },
        "TestConcentration.test_list_len": {
            "name": "test_list_len",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "impurities": [
                    "int",
                    "Tuple[float, float, float, float, float]",
                    "float",
                    "str"
                ],
                "matrix": [
                    "int",
                    "Tuple[float, float, float, float, float]",
                    "float",
                    "str"
                ]
            }
        }
    },
    "Sims-master/tests/test_db.py": {
        "read_test_db": {
            "name": "read_test_db",
            "location": 12,
            "return": [
                "int",
                "float",
                "tuple",
                "Tuple[str, str, str]"
            ],
            "arguments": {
                "filepath": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "test_strip_ions_names": {
            "name": "test_strip_ions_names",
            "location": 118,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "TestDB.test_get_ia": {
            "name": "test_get_ia",
            "location": 114,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "key": [
                    "str",
                    "Union[str, int]",
                    "bytes",
                    "int"
                ],
                "expected": [
                    "str",
                    "Union[str, int]",
                    "bytes",
                    "int"
                ]
            }
        }
    },
    "Sims-master/tests/test_depth.py": {
        "test_homostructure": {
            "name": "test_homostructure",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {
                "time": [
                    "float",
                    "int",
                    "Dict[str, str]"
                ],
                "speed": [
                    "float",
                    "int",
                    "Dict[str, str]"
                ]
            }
        },
        "test_heterostructure": {
            "name": "test_heterostructure",
            "location": 21,
            "return": [
                ""
            ],
            "arguments": {
                "speed": [
                    "float",
                    "str",
                    "dict",
                    "int"
                ],
                "indexes": [
                    "float",
                    "str",
                    "dict",
                    "int"
                ],
                "expected": [
                    "float",
                    "str",
                    "dict",
                    "int"
                ]
            }
        },
        "test_calculate": {
            "name": "test_calculate",
            "location": 28,
            "return": [
                ""
            ],
            "arguments": {
                "speed": [
                    "float",
                    "str",
                    "dict",
                    "int"
                ],
                "indexes": [
                    "float",
                    "str",
                    "dict",
                    "int"
                ],
                "expected": [
                    "float",
                    "str",
                    "dict",
                    "int"
                ]
            }
        },
        "test_calculate_exception": {
            "name": "test_calculate_exception",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "time": [
                    "str",
                    "Type[BaseException]",
                    "int",
                    "bool"
                ],
                "speed": [
                    "str",
                    "Type[BaseException]",
                    "int",
                    "bool"
                ],
                "indexes": [
                    "str",
                    "Type[BaseException]",
                    "int",
                    "bool"
                ],
                "expected": [
                    "int",
                    "bool",
                    "List[int]"
                ]
            }
        }
    },
    "Sims-master/tests/test_file_read.py": {
        "reader": {
            "name": "reader",
            "location": 6,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "filename": [
                    "str"
                ]
            }
        },
        "test_find_file_name": {
            "name": "test_find_file_name",
            "location": 32,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_cut_header_and_points": {
            "name": "test_cut_header_and_points",
            "location": 37,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_reshape_ion_string": {
            "name": "test_reshape_ion_string",
            "location": 42,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_reshape_points": {
            "name": "test_reshape_points",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "Sims-master/tests/test_minor.py": {
        "test_minor_rsf": {
            "name": "test_minor_rsf",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {
                "dose": [
                    "str"
                ],
                "integer": [
                    "str"
                ]
            }
        },
        "test_minor_hmr": {
            "name": "test_minor_hmr",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {
                "mass1": [
                    "str",
                    "float"
                ],
                "mass2": [
                    "str",
                    "float"
                ]
            }
        }
    },
    "Sims-master/tests/test_save.py": {
        "read_csv": {
            "name": "read_csv",
            "location": 13,
            "return": [
                "str",
                "Callable"
            ],
            "arguments": {
                "filepath": [
                    "str"
                ]
            }
        },
        "TestSave.test_to_csv": {
            "name": "test_to_csv",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Sims-master/tests/test_selection_menu.py": {
        "TestSelectionMenu.test_title": {
            "name": "test_title",
            "location": 8,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Sims-master/tests/__init__.py": {}
}
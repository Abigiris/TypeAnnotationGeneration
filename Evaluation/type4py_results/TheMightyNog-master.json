{
    "TheMightyNog-master/scripts/trivia_questions.py": {
        "spells_by_effect": {
            "name": "spells_by_effect",
            "location": 15,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "spell_cost": {
            "name": "spell_cost",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "TheMightyNog-master/src/main.py": {
        "setup_logging": {
            "name": "setup_logging",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "TheMightyNog-master/src/mighty_nog.py": {
        "MightyNog.__init__": {
            "name": "__init__",
            "location": 22,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "MightyNog.__init_templating": {
            "name": "__init_templating",
            "location": 70,
            "return": [
                "str",
                "dict",
                "pathlib.Path"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "TheMightyNog-master/src/settings.py": {},
    "TheMightyNog-master/src/__init__.py": {},
    "TheMightyNog-master/src/cogs/dev.py": {
        "setup": {
            "name": "setup",
            "location": 65,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "discord.excommands.Bot",
                    "int"
                ]
            }
        },
        "Dev.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "TheMightyNog-master/src/cogs/game.py": {
        "setup": {
            "name": "setup",
            "location": 45,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "discord.excommands.Bot",
                    "int"
                ]
            }
        },
        "Game.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "TheMightyNog-master/src/cogs/generic.py": {
        "setup": {
            "name": "setup",
            "location": 26,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "discord.excommands.Bot",
                    "int"
                ]
            }
        },
        "Generic.__init__": {
            "name": "__init__",
            "location": 10,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "TheMightyNog-master/src/cogs/servers.py": {
        "setup": {
            "name": "setup",
            "location": 158,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "discord.excommands.Bot",
                    "int"
                ]
            }
        },
        "Servers.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "TheMightyNog-master/src/cogs/users.py": {
        "setup": {
            "name": "setup",
            "location": 58,
            "return": [
                ""
            ],
            "arguments": {
                "bot": [
                    "discord.excommands.Bot",
                    "int"
                ]
            }
        },
        "User.__init__": {
            "name": "__init__",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "bot": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        }
    },
    "TheMightyNog-master/src/cogs/__init__.py": {},
    "TheMightyNog-master/src/cogs/artifact/trivia.py": {
        "setup": {
            "name": "setup",
            "location": 79,
            "return": [],
            "arguments": {
                "bot": []
            }
        },
        "Trivia.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [],
            "arguments": {
                "self": [],
                "bot": []
            }
        }
    },
    "TheMightyNog-master/src/communication/cbsapi.py": {
        "CBSAPI.__init__": {
            "name": "__init__",
            "location": 15,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "TheMightyNog-master/src/communication/cb_server.py": {
        "CBServer.__init__": {
            "name": "__init__",
            "location": 20,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "address": [
                    "str",
                    "bytes",
                    "int"
                ],
                "port": [
                    "str",
                    "bytes",
                    "int"
                ],
                "username": [
                    "str",
                    "bytes",
                    "int"
                ],
                "password": [
                    "str",
                    "bytes",
                    "int"
                ],
                "reconnect": [
                    "str",
                    "bytes",
                    "int"
                ]
            }
        },
        "CBServer.__encrypted_password": {
            "name": "__encrypted_password",
            "location": 93,
            "return": [
                "str",
                "type",
                "Set[str]"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "TheMightyNog-master/src/communication/scrollsguide.py": {
        "MultipleScrollsFound.__init__": {
            "name": "__init__",
            "location": 17,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "scrolls": [
                    "str",
                    "Callable[[List], bool]",
                    "Optional[Callable]"
                ],
                "search_term": [
                    "bool",
                    "Dict[str, Any]",
                    "Optional[str]",
                    "str",
                    "int"
                ]
            }
        },
        "MultipleScrollsFound.__str__": {
            "name": "__str__",
            "location": 21,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.__init__": {
            "name": "__init__",
            "location": 32,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "json_data": [
                    "Dict[str, Dict[str, Any]]",
                    "dict",
                    "Type['Declared']",
                    "str",
                    "Dict[str, Any]",
                    "Mapping"
                ]
            }
        },
        "Scroll.name": {
            "name": "name",
            "location": 52,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.image_url": {
            "name": "image_url",
            "location": 56,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.cost": {
            "name": "cost",
            "location": 60,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.attack": {
            "name": "attack",
            "location": 72,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.countdown": {
            "name": "countdown",
            "location": 76,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.health": {
            "name": "health",
            "location": 80,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.rarity": {
            "name": "rarity",
            "location": 84,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.description": {
            "name": "description",
            "location": 93,
            "return": [
                "str",
                "Set[str]",
                "Pattern",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.flavor": {
            "name": "flavor",
            "location": 97,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.passive_rules": {
            "name": "passive_rules",
            "location": 101,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Scroll.types": {
            "name": "types",
            "location": 105,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "Scroll.kind": {
            "name": "kind",
            "location": 109,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "TheMightyNog-master/src/communication/__init__.py": {},
    "TheMightyNog-master/src/communication/db/objects.py": {
        "BotServers.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [],
            "arguments": {
                "self": [],
                "servers": []
            }
        },
        "BotServers.printable": {
            "name": "printable",
            "location": 25,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotServers.get_by_name": {
            "name": "get_by_name",
            "location": 33,
            "return": [],
            "arguments": {
                "self": [],
                "server_name": []
            }
        },
        "BotServer.__init__": {
            "name": "__init__",
            "location": 41,
            "return": [],
            "arguments": {
                "self": [],
                "name": [],
                "address": [],
                "owner": [],
                "cbsapi": [],
                "owner_name": []
            }
        },
        "BotServer.printable": {
            "name": "printable",
            "location": 67,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotServer.cbsapi": {
            "name": "cbsapi",
            "location": 77,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotServer.cbsapi_human": {
            "name": "cbsapi_human",
            "location": 81,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotServer.owner": {
            "name": "owner",
            "location": 85,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotServer.name": {
            "name": "name",
            "location": 89,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotUser.__init__": {
            "name": "__init__",
            "location": 103,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotUser.id_": {
            "name": "id_",
            "location": 118,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotUser.registered": {
            "name": "registered",
            "location": 122,
            "return": [],
            "arguments": {
                "self": []
            }
        },
        "BotUser.registering": {
            "name": "registering",
            "location": 126,
            "return": [],
            "arguments": {
                "self": []
            }
        }
    },
    "TheMightyNog-master/src/communication/db/tables.py": {},
    "TheMightyNog-master/src/communication/db/__init__.py": {},
    "TheMightyNog-master/src/helpers/checks.py": {
        "is_dev": {
            "name": "is_dev",
            "location": 7,
            "return": [
                "str"
            ],
            "arguments": {}
        },
        "is_dev.predicate": {
            "name": "predicate",
            "location": 9,
            "return": [
                "int",
                "str",
                "bool",
                "Optional[str]"
            ],
            "arguments": {
                "ctx": [
                    "str",
                    "discord.excommands.Context"
                ]
            }
        }
    },
    "TheMightyNog-master/src/helpers/commands_info.py": {},
    "TheMightyNog-master/src/helpers/util.py": {
        "channel_uid_from_ctx": {
            "name": "channel_uid_from_ctx",
            "location": 5,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "ctx": [
                    "discord.excommands.Context"
                ]
            }
        }
    },
    "TheMightyNog-master/src/helpers/__init__.py": {},
    "TheMightyNog-master/src/logic/__init__.py": {},
    "TheMightyNog-master/src/logic/artifact/trivia.py": {
        "TriviaGame.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "questions": [
                    "int",
                    "float",
                    "str",
                    "Union[str, float]"
                ],
                "wait_time": [
                    "int",
                    "float",
                    "Optional[float]"
                ]
            }
        },
        "TriviaGame.answer_question": {
            "name": "answer_question",
            "location": 40,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "answer": [
                    "str",
                    "int",
                    "Dict[str, str]",
                    "Union[int, str]"
                ],
                "player": [
                    "List[str]",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "TriviaGame.stop": {
            "name": "stop",
            "location": 52,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "TriviaGame.score": {
            "name": "score",
            "location": 55,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "limit": [
                    "int",
                    "Callable",
                    "str"
                ]
            }
        }
    },
    "TheMightyNog-master/src/logic/artifact/__init__.py": {}
}
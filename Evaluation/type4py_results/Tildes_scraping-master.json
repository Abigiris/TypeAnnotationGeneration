{
    "Tildes_scraping-master/collect.py": {},
    "Tildes_scraping-master/src/db.py": {
        "make_tables": {
            "name": "make_tables",
            "location": 86,
            "return": [
                "None"
            ],
            "arguments": {}
        },
        "create_session": {
            "name": "create_session",
            "location": 91,
            "return": [
                "str",
                "Dict[str, Any]",
                "Exception"
            ],
            "arguments": {}
        },
        "Topic.to_dict": {
            "name": "to_dict",
            "location": 28,
            "return": [
                "Dict[str, Any]",
                "Exception",
                "Dict[str, Dict[str, str]]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "Tag.to_dict": {
            "name": "to_dict",
            "location": 53,
            "return": [
                "str",
                "bool",
                "dict",
                "Dict[str, Iterable[Any]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Comment.to_dict": {
            "name": "to_dict",
            "location": 72,
            "return": [
                "Dict[str, Any]",
                "Exception",
                "Dict[str, Dict[str, str]]",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "Tildes_scraping-master/src/__init__.py": {},
    "Tildes_scraping-master/src/backend/app.py": {
        "index": {
            "name": "index",
            "location": 18,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {}
        },
        "topics": {
            "name": "topics",
            "location": 25,
            "return": [
                "bool",
                "List[Dict[str, Any]]",
                "int",
                "Dict[str, Any]",
                "str",
                "dict"
            ],
            "arguments": {}
        },
        "topic_comments": {
            "name": "topic_comments",
            "location": 42,
            "return": [
                "bool",
                "List[Dict[str, Any]]",
                "int",
                "Dict[str, Any]",
                "str",
                "dict"
            ],
            "arguments": {
                "topic_id": [
                    "Optional[int]",
                    "List[int]",
                    "Union[trakcore.paths.response_structs.Comment, str, int]"
                ]
            }
        }
    },
    "Tildes_scraping-master/src/backend/__init__.py": {},
    "Tildes_scraping-master/src/scraper/flows.py": {
        "flow_login": {
            "name": "flow_login",
            "location": 12,
            "return": [
                "None"
            ],
            "arguments": {
                "http_session": [
                    "requests.Session",
                    "dict"
                ],
                "config": [
                    "str"
                ]
            }
        },
        "flow_get_all_groups": {
            "name": "flow_get_all_groups",
            "location": 28,
            "return": [
                "str",
                "Callable[[T], bool]",
                "List[Tuple]",
                "bool"
            ],
            "arguments": {
                "session": [
                    "dict"
                ],
                "config": [
                    "dict",
                    "bool"
                ]
            }
        },
        "flow_get_all_topics_for_group": {
            "name": "flow_get_all_topics_for_group",
            "location": 39,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "requests.Session",
                    "str"
                ],
                "group": [
                    "int",
                    "str",
                    "Optional[Callable[..., Any]]",
                    "Optional[str]"
                ],
                "all_topics": [
                    "list",
                    "List[List[str]]",
                    "str"
                ]
            }
        },
        "flow_get_comments_from_topics": {
            "name": "flow_get_comments_from_topics",
            "location": 79,
            "return": [
                "None"
            ],
            "arguments": {
                "session": [
                    "requests.Session"
                ],
                "topics": [
                    "dict",
                    "str",
                    "list"
                ],
                "all_comments": [
                    "list",
                    "str",
                    "List[List[int]]"
                ]
            }
        }
    },
    "Tildes_scraping-master/src/scraper/__init__.py": {
        "load_config": {
            "name": "load_config",
            "location": 9,
            "return": [
                "str",
                "IO",
                "Dict[str, Dict[str, str]]",
                "dict",
                "Iterable"
            ],
            "arguments": {}
        },
        "create_http_session": {
            "name": "create_http_session",
            "location": 15,
            "return": [
                "str",
                "Exception",
                "Dict[str, Any]"
            ],
            "arguments": {
                "session_token": [
                    "str",
                    "List[int]",
                    "Set[frozenset[str]]"
                ]
            }
        },
        "pause": {
            "name": "pause",
            "location": 23,
            "return": [
                "None"
            ],
            "arguments": {
                "duration": [
                    "int",
                    "str",
                    "float"
                ]
            }
        },
        "timestamp_to_datetime": {
            "name": "timestamp_to_datetime",
            "location": 29,
            "return": [
                "datetime.date",
                "datetime.datetime",
                "str",
                "Optional[datetime.timedelta]"
            ],
            "arguments": {
                "timestamp": [
                    "str",
                    "float",
                    "int"
                ]
            }
        },
        "get_url": {
            "name": "get_url",
            "location": 34,
            "return": [
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "session": [
                    "str",
                    "Dict[str, str]"
                ],
                "url": [
                    "str"
                ]
            }
        }
    }
}
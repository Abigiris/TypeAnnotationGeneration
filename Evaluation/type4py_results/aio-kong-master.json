{
    "aio-kong-master/setup.py": {
        "read": {
            "name": "read",
            "location": 7,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "requirements": {
            "name": "requirements",
            "location": 13,
            "return": [
                "str",
                "Optional[bool]",
                "Optional[int]"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        }
    },
    "aio-kong-master/kong/auths.py": {
        "auth_factory": {
            "name": "auth_factory",
            "location": 4,
            "return": [
                "str"
            ],
            "arguments": {
                "consumer": [
                    "Tuple[Type]",
                    "str",
                    "type",
                    "Type"
                ],
                "auth_type": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "float"
                ]
            }
        },
        "ConsumerAuth.url": {
            "name": "url",
            "location": 15,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aio-kong-master/kong/certificates.py": {
        "Certificate.snis": {
            "name": "snis",
            "location": 7,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aio-kong-master/kong/cli.py": {
        "kong": {
            "name": "kong",
            "location": 22,
            "return": [
                "int",
                "List[str]",
                "bool",
                "Callable"
            ],
            "arguments": {
                "ctx": [
                    "click.Context",
                    "bool"
                ],
                "version": [
                    "bool",
                    "str",
                    "int",
                    "Optional[bool]"
                ],
                "ip": [
                    "bool",
                    "str",
                    "int",
                    "Optional[bool]"
                ],
                "key_auth": [
                    "str",
                    "click.Context"
                ],
                "yaml": [
                    "bool",
                    "click.Context",
                    "str"
                ],
                "clear": [
                    "bool",
                    "click.Context",
                    "str"
                ]
            }
        },
        "_run": {
            "name": "_run",
            "location": 35,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "coro": [
                    "bool",
                    "int"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 62,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "aio-kong-master/kong/client.py": {
        "Kong.__init__": {
            "name": "__init__",
            "location": 30,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "aiohttp.ClientSession"
                ],
                "session": [
                    "Dict[str, str]",
                    "int",
                    "bool",
                    "Optional[str]",
                    "str",
                    "Tuple[int, int]"
                ],
                "request_kwargs": [
                    "str",
                    "Dict[str, str]",
                    "Dict[str, Any]",
                    "Iterable[str]"
                ],
                "user_agent": [
                    "bool",
                    "List[str]",
                    "Optional[int]",
                    "List[int]",
                    "Dict[int, dict]"
                ]
            }
        },
        "Kong.__repr__": {
            "name": "__repr__",
            "location": 49,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kong.cli": {
            "name": "cli",
            "location": 55,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Kong.default_headers": {
            "name": "default_headers",
            "location": 118,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aio-kong-master/kong/components.py": {
        "KongResponseError.__init__": {
            "name": "__init__",
            "location": 14,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "response": [
                    "purplship.providers.dhl.utils.Settings",
                    "purplship.core.utils.Element"
                ],
                "message": [
                    "Dict[str, Any]",
                    "dict",
                    "str",
                    "Iterator"
                ]
            }
        },
        "KongResponseError.status": {
            "name": "status",
            "location": 22,
            "return": [
                "str",
                "Optional[str]",
                "int",
                "cmk.utils.type_defs.UserId",
                "Optional[int]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongResponseError.__str__": {
            "name": "__str__",
            "location": 25,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "str",
                    "Dict[str, dict]",
                    "float",
                    "Tuple[List[Any], List[Any]]"
                ],
                "data": [
                    "str",
                    "int",
                    "Iterable",
                    "TextIO",
                    "Union[Dict, List]",
                    "bytes"
                ]
            }
        },
        "KongEntity.__repr__": {
            "name": "__repr__",
            "location": 44,
            "return": [
                "raiden.utils.signer.Signer",
                "str",
                "Optional[float]",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.__str__": {
            "name": "__str__",
            "location": 47,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.__getitem__": {
            "name": "__getitem__",
            "location": 50,
            "return": [
                "dict",
                "Dict[str, Any]",
                "Optional[str]",
                "Iterable[Sequence[str]]",
                "List[int]"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "Dict[str, Any]",
                    "type",
                    "Collection[str]",
                    "Union[Dict, List]",
                    "MutableMapping",
                    "str",
                    "Iterable"
                ]
            }
        },
        "KongEntity.__contains__": {
            "name": "__contains__",
            "location": 53,
            "return": [
                "bool"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "bool",
                    "int"
                ]
            }
        },
        "KongEntity.cli": {
            "name": "cli",
            "location": 57,
            "return": [
                "cmk.utils.type_defs.HostName",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.id": {
            "name": "id",
            "location": 61,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.name": {
            "name": "name",
            "location": 65,
            "return": [
                "str",
                "Optional[str]",
                "type",
                "dict"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.url": {
            "name": "url",
            "location": 69,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "KongEntity.get": {
            "name": "get",
            "location": 72,
            "return": [
                "bool",
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "item": [
                    "str",
                    "float"
                ],
                "default": [
                    "str",
                    "float"
                ]
            }
        },
        "KongEntity.execute": {
            "name": "execute",
            "location": 75,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "cmk.utils.type_defs.CheckPluginName",
                    "Optional[str]",
                    "dict"
                ],
                "method": [
                    "str",
                    "cmk.utils.type_defs.CheckPluginName",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "CrudComponent.__init__": {
            "name": "__init__",
            "location": 82,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "root": [
                    "Callable",
                    "str",
                    "Set[str]",
                    "Optional[Dict[str, str]]",
                    "int",
                    "Iterable[str]"
                ],
                "name": [
                    "str",
                    "bool",
                    "Exception",
                    "Callable[..., None]",
                    "Optional[str]",
                    "List[Dict[str, str]]"
                ]
            }
        },
        "CrudComponent.__repr__": {
            "name": "__repr__",
            "location": 86,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.__str__": {
            "name": "__str__",
            "location": 89,
            "return": [
                "int",
                "bytes",
                "set"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.cli": {
            "name": "cli",
            "location": 93,
            "return": [
                "cmk.utils.type_defs.HostName",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.url": {
            "name": "url",
            "location": 97,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.is_entity": {
            "name": "is_entity",
            "location": 101,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.execute": {
            "name": "execute",
            "location": 104,
            "return": [
                "str",
                "Mapping[str, Any]",
                "bool",
                "dict"
            ],
            "arguments": {
                "self": [],
                "url": [
                    "str",
                    "cmk.utils.type_defs.CheckPluginName",
                    "Optional[str]",
                    "dict"
                ],
                "method": [
                    "str",
                    "cmk.utils.type_defs.CheckPluginName",
                    "Optional[str]",
                    "dict"
                ]
            }
        },
        "CrudComponent.apply_json": {
            "name": "apply_json",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "data": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ],
                "clear": [
                    "int",
                    "bytes",
                    "bool",
                    "dict"
                ]
            }
        },
        "CrudComponent.get_list": {
            "name": "get_list",
            "location": 122,
            "return": [
                "str",
                "bytes",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.get": {
            "name": "get",
            "location": 129,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str"
                ]
            }
        },
        "CrudComponent.has": {
            "name": "has",
            "location": 133,
            "return": [
                "raiden.utils.BlockNumber",
                "raiden.utils.TokenAmount",
                "bool",
                "Optional[int]"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str"
                ]
            }
        },
        "CrudComponent.create": {
            "name": "create",
            "location": 137,
            "return": [
                "bool",
                "str",
                "dict",
                "Dict[str, Dict[str, int]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "CrudComponent.update": {
            "name": "update",
            "location": 141,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str"
                ]
            }
        },
        "CrudComponent.delete": {
            "name": "delete",
            "location": 145,
            "return": [
                "str",
                "dict"
            ],
            "arguments": {
                "self": [],
                "id_": [
                    "str"
                ]
            }
        },
        "CrudComponent.wrap": {
            "name": "wrap",
            "location": 164,
            "return": [
                "str",
                "float",
                "Set[str]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict",
                    "bytes",
                    "Dict[str, Set[str]]",
                    "List[int]",
                    "Union[bytes, bytearray, memoryview]"
                ]
            }
        },
        "CrudComponent.wrap_list": {
            "name": "wrap_list",
            "location": 167,
            "return": [
                "Optional[dict]",
                "str",
                "int",
                "Set[str]",
                "Tuple[int]",
                "List[str]"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "list",
                    "T",
                    "Callable",
                    "Sequence[T]",
                    "dict"
                ]
            }
        },
        "CrudComponent.list_create_url": {
            "name": "list_create_url",
            "location": 170,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aio-kong-master/kong/consumers.py": {
        "Consumers.wrap": {
            "name": "wrap",
            "location": 9,
            "return": [
                "str",
                "Optional[float]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "data": [
                    "dict",
                    "bytes",
                    "Union[bytes, bytearray, memoryview]"
                ]
            }
        },
        "Consumer.username": {
            "name": "username",
            "location": 65,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Consumer.acls": {
            "name": "acls",
            "location": 69,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Consumer.jwts": {
            "name": "jwts",
            "location": 73,
            "return": [
                "Optional[Union[Any, str]]",
                "Sequence[str]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Consumer.keyauths": {
            "name": "keyauths",
            "location": 77,
            "return": [
                "Iterable[int]",
                "str",
                "int",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Consumer.basicauths": {
            "name": "basicauths",
            "location": 81,
            "return": [
                "int",
                "str",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aio-kong-master/kong/plugins.py": {
        "Plugins.root_plugin": {
            "name": "root_plugin",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "self": [],
                "plugin": [
                    "Dict[str, Any]",
                    "Dict[str, Dict[str, Any]]",
                    "dict",
                    "bytes"
                ]
            }
        },
        "KongEntityWithPlugins.plugins": {
            "name": "plugins",
            "location": 54,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aio-kong-master/kong/routes.py": {},
    "aio-kong-master/kong/services.py": {
        "Service.routes": {
            "name": "routes",
            "location": 16,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Service.host": {
            "name": "host",
            "location": 20,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aio-kong-master/kong/snis.py": {},
    "aio-kong-master/kong/utils.py": {
        "as_list": {
            "name": "as_list",
            "location": 6,
            "return": [
                "str",
                "dict",
                "Optional[float]",
                "int"
            ],
            "arguments": {
                "key": [
                    "bytes",
                    "str",
                    "Iterable",
                    "type",
                    "int",
                    "dict",
                    "Union[Dict, List]"
                ],
                "data": [
                    "bytes",
                    "str",
                    "Iterable",
                    "type",
                    "int",
                    "dict",
                    "Union[Dict, List]"
                ]
            }
        },
        "as_dict": {
            "name": "as_dict",
            "location": 16,
            "return": [
                "bytes",
                "dict",
                "Dict[str, float]",
                "str"
            ],
            "arguments": {
                "data": [
                    "dict",
                    "Dict[str, float]",
                    "Optional[str]",
                    "Dict[str, Any]",
                    "str"
                ],
                "key": [
                    "dict",
                    "Dict[str, float]",
                    "Optional[str]",
                    "Dict[str, Any]",
                    "str"
                ]
            }
        },
        "local_ip": {
            "name": "local_ip",
            "location": 20,
            "return": [
                "str",
                "float"
            ],
            "arguments": {}
        },
        "as_params": {
            "name": "as_params",
            "location": 29,
            "return": [
                "int",
                "float",
                "str"
            ],
            "arguments": {}
        },
        "uid": {
            "name": "uid",
            "location": 35,
            "return": [
                "str"
            ],
            "arguments": {
                "id_": [
                    "str",
                    "int"
                ]
            }
        }
    },
    "aio-kong-master/kong/__init__.py": {},
    "aio-kong-master/tests/conftest.py": {
        "loop": {
            "name": "loop",
            "location": 12,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "aio-kong-master/tests/test_apply.py": {},
    "aio-kong-master/tests/test_cli.py": {
        "test_empty": {
            "name": "test_empty",
            "location": 9,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_version": {
            "name": "test_version",
            "location": 16,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_ip": {
            "name": "test_ip",
            "location": 23,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_plugins": {
            "name": "test_plugins",
            "location": 30,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_bad_config": {
            "name": "test_bad_config",
            "location": 36,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test_key_auth": {
            "name": "test_key_auth",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "aio-kong-master/tests/test_kong.py": {
        "read": {
            "name": "read",
            "location": 6,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "name": [
                    "str"
                ]
            }
        },
        "test_client": {
            "name": "test_client",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "cli": []
            }
        }
    },
    "aio-kong-master/tests/test_mocks.py": {},
    "aio-kong-master/tests/test_plugins.py": {},
    "aio-kong-master/tests/__init__.py": {}
}
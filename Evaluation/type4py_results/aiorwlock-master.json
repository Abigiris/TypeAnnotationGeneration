{
    "aiorwlock-master/setup.py": {
        "read": {
            "name": "read",
            "location": 9,
            "return": [
                "str",
                "Tuple[str]",
                "List[int]",
                "Optional[str]"
            ],
            "arguments": {
                "f": [
                    "bytes",
                    "Iterator[T]",
                    "memoryview",
                    "IO",
                    "Tuple[bytes, bytes]"
                ]
            }
        },
        "read_version": {
            "name": "read_version",
            "location": 13,
            "return": [
                "str",
                "Iterable[Tuple[str, str]]",
                "Dict[str, Any]",
                "Dict[int, str]"
            ],
            "arguments": {}
        }
    },
    "aiorwlock-master/aiorwlock/__init__.py": {
        "_RWLockCore.__init__": {
            "name": "__init__",
            "location": 25,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "fast": [
                    "int",
                    "bool",
                    "float"
                ],
                "loop": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "_RWLockCore.read_locked": {
            "name": "read_locked",
            "location": 36,
            "return": [
                "bool",
                "Dict[str, Dict[str, int]]",
                "List[List[int]]",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "_RWLockCore.write_locked": {
            "name": "write_locked",
            "location": 40,
            "return": [
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        },
        "_RWLockCore.release_read": {
            "name": "release_read",
            "location": 124,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_RWLockCore.release_write": {
            "name": "release_write",
            "location": 127,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_RWLockCore._release": {
            "name": "_release",
            "location": 130,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lock_type": [
                    "str",
                    "List[Tuple[str]]"
                ]
            }
        },
        "_RWLockCore._wake_up": {
            "name": "_wake_up",
            "location": 145,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ContextManagerMixin.__enter__": {
            "name": "__enter__",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ContextManagerMixin.__exit__": {
            "name": "__exit__",
            "location": 172,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ContextManagerMixin.release": {
            "name": "release",
            "location": 189,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ReaderLock.__init__": {
            "name": "__init__",
            "location": 195,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "lock": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "_ReaderLock.locked": {
            "name": "locked",
            "location": 199,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ReaderLock.release": {
            "name": "release",
            "location": 205,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_ReaderLock.__repr__": {
            "name": "__repr__",
            "location": 208,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "_WriterLock.__init__": {
            "name": "__init__",
            "location": 214,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "lock": [
                    "int",
                    "bool",
                    "float"
                ]
            }
        },
        "_WriterLock.locked": {
            "name": "locked",
            "location": 218,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "_WriterLock.release": {
            "name": "release",
            "location": 224,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "_WriterLock.__repr__": {
            "name": "__repr__",
            "location": 227,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        },
        "RWLock.__init__": {
            "name": "__init__",
            "location": 241,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "RWLock.reader": {
            "name": "reader",
            "location": 257,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RWLock.writer": {
            "name": "writer",
            "location": 264,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "RWLock.__repr__": {
            "name": "__repr__",
            "location": 270,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiorwlock-master/examples/context_manager.py": {},
    "aiorwlock-master/examples/simple.py": {},
    "aiorwlock-master/tests/conftest.py": {
        "fast_track": {
            "name": "fast_track",
            "location": 5,
            "return": [
                "int",
                "list"
            ],
            "arguments": {
                "request": [
                    "Callable"
                ]
            }
        },
        "loop": {
            "name": "loop",
            "location": 10,
            "return": [
                "str",
                "List[str]"
            ],
            "arguments": {
                "event_loop": [
                    "str"
                ]
            }
        }
    },
    "aiorwlock-master/tests/test_corner_cases.py": {
        "should_fail": {
            "name": "should_fail",
            "location": 12,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "timeout": [
                    "Optional[int]",
                    "Optional[float]",
                    "Optional[bool]",
                    "Optional[List[str]]",
                    "Optional[Dict[str, Any]]"
                ],
                "loop": [
                    "int",
                    "Optional[str]",
                    "Optional[int]"
                ]
            }
        }
    },
    "aiorwlock-master/tests/test_rwlock.py": {
        "Bunch.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "f": [
                    "int",
                    "Type[Exception]",
                    "bool",
                    "List[int]",
                    "str"
                ],
                "n": [
                    "int",
                    "float",
                    "list"
                ],
                "wait_before_exit": [
                    "int",
                    "Type[Exception]",
                    "bool",
                    "List[int]",
                    "str"
                ]
            }
        },
        "Bunch.do_finish": {
            "name": "do_finish",
            "location": 43,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        }
    }
}
{
    "aiosignal-master/setup.py": {},
    "aiosignal-master/aiosignal/__init__.py": {
        "Signal.__init__": {
            "name": "__init__",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "owner": [
                    "str",
                    "List[str]",
                    "int",
                    "dict",
                    "Dict[str, str]"
                ]
            }
        },
        "Signal.__repr__": {
            "name": "__repr__",
            "location": 23,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiosignal-master/docs/conf.py": {},
    "aiosignal-master/tests/conftest.py": {},
    "aiosignal-master/tests/test_signals.py": {
        "owner": {
            "name": "owner",
            "location": 15,
            "return": [
                "bytes",
                "str",
                "Sequence[Sequence[str]]",
                "Sequence[str]"
            ],
            "arguments": {}
        },
        "test_setitem": {
            "name": "test_setitem",
            "location": 78,
            "return": [
                "None"
            ],
            "arguments": {
                "owner": [
                    "int",
                    "Dict[str, str]",
                    "bytes"
                ]
            }
        },
        "test_delitem": {
            "name": "test_delitem",
            "location": 88,
            "return": [
                "None"
            ],
            "arguments": {
                "owner": [
                    "int",
                    "Dict[str, str]",
                    "bytes"
                ]
            }
        },
        "test_cannot_append_to_frozen_signal": {
            "name": "test_cannot_append_to_frozen_signal",
            "location": 97,
            "return": [
                "None"
            ],
            "arguments": {
                "owner": [
                    "bool",
                    "Callable",
                    "bytes",
                    "Sequence[str]",
                    "int"
                ]
            }
        },
        "test_cannot_setitem_in_frozen_signal": {
            "name": "test_cannot_setitem_in_frozen_signal",
            "location": 109,
            "return": [
                "None"
            ],
            "arguments": {
                "owner": [
                    "bytes",
                    "Callable",
                    "bool"
                ]
            }
        },
        "test_cannot_delitem_in_frozen_signal": {
            "name": "test_cannot_delitem_in_frozen_signal",
            "location": 121,
            "return": [
                "None"
            ],
            "arguments": {
                "owner": [
                    "bytes",
                    "Callable",
                    "bool"
                ]
            }
        },
        "test_repr": {
            "name": "test_repr",
            "location": 149,
            "return": [
                "None"
            ],
            "arguments": {
                "owner": [
                    "int",
                    "Dict[str, str]",
                    "bytes"
                ]
            }
        },
        "Owner.__repr__": {
            "name": "__repr__",
            "location": 10,
            "return": [
                "bool",
                "List[int]",
                "Iterable[str]",
                "tuple",
                "str"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aiosignal-master/tools/check_changes.py": {
        "get_root": {
            "name": "get_root",
            "location": 9,
            "return": [
                "bool",
                "Callable[[bytes], None]",
                "str",
                "float"
            ],
            "arguments": {
                "script_path": [
                    "str"
                ]
            }
        },
        "main": {
            "name": "main",
            "location": 18,
            "return": [
                "str",
                "List[str]",
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "argv": [
                    "str",
                    "List[str]",
                    "pathlib.Path"
                ]
            }
        }
    }
}
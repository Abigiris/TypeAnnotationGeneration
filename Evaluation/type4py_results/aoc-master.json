{
    "aoc-master/python/aoc/common.py": {
        "answer": {
            "name": "answer",
            "location": 131,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "ans1": [
                    "Optional[str]",
                    "str",
                    "Optional[type]",
                    "bool"
                ],
                "ans2": [
                    "Optional[str]",
                    "str",
                    "Optional[type]",
                    "Optional[Sequence[Any]]"
                ]
            }
        },
        "OrderedEnum.__ge__": {
            "name": "__ge__",
            "location": 23,
            "return": [
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedEnum.__gt__": {
            "name": "__gt__",
            "location": 28,
            "return": [
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedEnum.__le__": {
            "name": "__le__",
            "location": 33,
            "return": [
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "OrderedEnum.__lt__": {
            "name": "__lt__",
            "location": 38,
            "return": [
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "other": []
            }
        },
        "Day.__str__": {
            "name": "__str__",
            "location": 72,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        },
        "Year.__str__": {
            "name": "__str__",
            "location": 82,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Date.__str__": {
            "name": "__str__",
            "location": 91,
            "return": [
                "str"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puzzle.example": {
            "name": "example",
            "location": 103,
            "return": [
                "str",
                "int"
            ],
            "arguments": {
                "date": [
                    "hypothesis.strategies.SearchStrategy[datetime.date.time]",
                    "str"
                ],
                "solver": [
                    "hypothesis.strategies.SearchStrategy[datetime.date.time]",
                    "str"
                ]
            }
        },
        "Puzzle.no_solution": {
            "name": "no_solution",
            "location": 107,
            "return": [
                "str"
            ],
            "arguments": {
                "date": [
                    "str"
                ],
                "solver": [
                    "str"
                ]
            }
        },
        "Puzzle._read_to_string": {
            "name": "_read_to_string",
            "location": 110,
            "return": [
                "str",
                "tuple",
                "TextIO",
                "BinaryIO"
            ],
            "arguments": {
                "self": [],
                "filename": [
                    "Optional[str]",
                    "int",
                    "str"
                ]
            }
        },
        "Puzzle.solve": {
            "name": "solve",
            "location": 115,
            "return": [
                "str",
                "Set[str]",
                "Iterable[Sequence[str]]"
            ],
            "arguments": {
                "self": []
            }
        },
        "Puzzle.read_solution": {
            "name": "read_solution",
            "location": 122,
            "return": [
                "Optional[str]",
                "str",
                "bool"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "aoc-master/python/aoc/main.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [],
            "arguments": {}
        },
        "present_puzzles": {
            "name": "present_puzzles",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "present_puzzle": {
            "name": "present_puzzle",
            "location": 15,
            "return": [],
            "arguments": {
                "puzzle": []
            }
        }
    },
    "aoc-master/python/aoc/__init__.py": {},
    "aoc-master/python/aoc/__main__.py": {},
    "aoc-master/python/aoc/y2015/d00.py": {
        "solve": {
            "name": "solve",
            "location": 9,
            "return": [
                "str",
                "List[str]",
                "list"
            ],
            "arguments": {
                "input": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "aoc-master/python/aoc/y2015/d01.py": {
        "solve": {
            "name": "solve",
            "location": 9,
            "return": [
                "str",
                "List[str]",
                "list"
            ],
            "arguments": {
                "input": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        }
    },
    "aoc-master/python/aoc/y2015/d02.py": {
        "solve": {
            "name": "solve",
            "location": 10,
            "return": [
                "str",
                "List[str]",
                "list"
            ],
            "arguments": {
                "input": [
                    "str"
                ]
            }
        },
        "parse_gift": {
            "name": "parse_gift",
            "location": 17,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "line": [
                    "List[str]",
                    "TextIO",
                    "Iterator[str]",
                    "str",
                    "range"
                ]
            }
        },
        "gift_paper_area": {
            "name": "gift_paper_area",
            "location": 23,
            "return": [
                "bytes",
                "bytearray",
                "gluonts.model.common.Tensor",
                "List[dict]"
            ],
            "arguments": {
                "gift": []
            }
        },
        "gift_ribbon_length": {
            "name": "gift_ribbon_length",
            "location": 28,
            "return": [
                "bytearray",
                "bytes",
                "List[dict]",
                "gluonts.model.common.NPArrayLike"
            ],
            "arguments": {
                "gift": []
            }
        }
    },
    "aoc-master/python/aoc/y2015/d03.py": {
        "solve": {
            "name": "solve",
            "location": 10,
            "return": [
                "str",
                "List[str]",
                "list"
            ],
            "arguments": {
                "input": [
                    "dict",
                    "List[str]",
                    "Counter[str]",
                    "Optional[Union[str, Any, Any, Any]]",
                    "Dict[str, Any]"
                ]
            }
        },
        "parse_move": {
            "name": "parse_move",
            "location": 20,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "c": [
                    "str",
                    "Tuple[str]"
                ]
            }
        },
        "houses": {
            "name": "houses",
            "location": 28,
            "return": [
                "int",
                "str",
                "bool"
            ],
            "arguments": {
                "moves": [
                    "int",
                    "list",
                    "Set[str]",
                    "bytes"
                ]
            }
        }
    },
    "aoc-master/python/aoc/y2015/puzzles.py": {},
    "aoc-master/python/aoc/y2015/__init__.py": {},
    "aoc-master/python/aoc/y2015/__pre_init__.py": {}
}
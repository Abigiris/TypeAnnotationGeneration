{
    "apiref-master/manage.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [],
            "arguments": {}
        }
    },
    "apiref-master/Miragefile@next.py": {
        "MirageConfig.initialize": {
            "name": "initialize",
            "location": 51,
            "return": [
                "mirage.core.Void"
            ],
            "arguments": {
                "self": []
            }
        },
        "MirageConfig.main": {
            "name": "main",
            "location": 55,
            "return": [
                "str",
                "List[str]",
                "bool",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": []
            }
        },
        "MirageConfig.deinitialize": {
            "name": "deinitialize",
            "location": 65,
            "return": [
                "mirage.core.Void"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apiref-master/about/admin.py": {},
    "apiref-master/about/apps.py": {},
    "apiref-master/about/models.py": {},
    "apiref-master/about/tests.py": {},
    "apiref-master/about/views.py": {},
    "apiref-master/about/__init__.py": {},
    "apiref-master/about/migrations/__init__.py": {},
    "apiref-master/account/admin.py": {},
    "apiref-master/account/apps.py": {},
    "apiref-master/account/forms.py": {},
    "apiref-master/account/models.py": {
        "InvitationCodeManager.create_code": {
            "name": "create_code",
            "location": 8,
            "return": [
                "str",
                "int",
                "Optional[str]"
            ],
            "arguments": {
                "self": [],
                "email": [
                    "Callable[[T], List[T]]",
                    "str",
                    "Optional[float]",
                    "models.characters.mods_base.Mod"
                ]
            }
        },
        "InvitationCodeManager.gen_invitation_code": {
            "name": "gen_invitation_code",
            "location": 16,
            "return": [
                "Optional[str]",
                "str",
                "IO[Any]",
                "Callable"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "apiref-master/account/tests.py": {},
    "apiref-master/account/urls.py": {},
    "apiref-master/account/views.py": {
        "CodeGenerate.get": {
            "name": "get",
            "location": 15,
            "return": [
                "str",
                "bool",
                "int",
                "Tuple[int]",
                "zerver.models.DefaultStreamGroup"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "Dict[str, Any]"
                ]
            }
        },
        "CodeGenerate.post": {
            "name": "post",
            "location": 40,
            "return": [
                "str",
                "bool",
                "Tuple[int, int]",
                "Optional[str]",
                "Union[int, float, complex]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "CodeCheck.get": {
            "name": "get",
            "location": 55,
            "return": [
                "int",
                "bytes",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Iterable[int]",
                    "django.http.HttpRequest"
                ]
            }
        },
        "CodeCheck.post": {
            "name": "post",
            "location": 58,
            "return": [
                "int",
                "str",
                "Dict[str, str]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "RegisterView.get": {
            "name": "get",
            "location": 84,
            "return": [
                "int",
                "djmoney.contrib.exchange.models.Rate",
                "bytes",
                "Optional[Dict]",
                "bool",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "dict"
                ]
            }
        },
        "RegisterView.post": {
            "name": "post",
            "location": 92,
            "return": [
                "int",
                "str",
                "app.models.GameMember",
                "app.models.course.Course",
                "Callable[[list], None]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "apiref-master/account/__init__.py": {},
    "apiref-master/account/migrations/0001_initial.py": {},
    "apiref-master/account/migrations/__init__.py": {},
    "apiref-master/apib/admin.py": {},
    "apiref-master/apib/apps.py": {},
    "apiref-master/apib/htmlstring.py": {},
    "apiref-master/apib/mail_sender.py": {
        "get_all_username": {
            "name": "get_all_username",
            "location": 9,
            "return": [
                "str",
                "Union[str, int]",
                "bytes"
            ],
            "arguments": {}
        },
        "construct_mail": {
            "name": "construct_mail",
            "location": 19,
            "return": [
                ""
            ],
            "arguments": {
                "sub": [
                    "str",
                    "List[str]"
                ],
                "msg": [
                    "str",
                    "List[str]"
                ],
                "to": [
                    "str",
                    "List[str]"
                ]
            }
        },
        "send_notification": {
            "name": "send_notification",
            "location": 27,
            "return": [
                ""
            ],
            "arguments": {
                "request": [
                    "django.http.HttpRequest",
                    "django.http.requesHttpRequest"
                ]
            }
        }
    },
    "apiref-master/apib/models.py": {
        "APIBManager.submit_new": {
            "name": "submit_new",
            "location": 9,
            "return": [
                "List[django.db.models.query.QuerySet]",
                "Iterable[str]",
                "int"
            ],
            "arguments": {
                "self": [],
                "contents": [
                    "str",
                    "Set[str]",
                    "dict",
                    "Dict[str, Any]",
                    "tuple",
                    "Dict[str, str]",
                    "IO[bytes]"
                ]
            }
        },
        "AccessTokenManager.create_token": {
            "name": "create_token",
            "location": 27,
            "return": [
                "str",
                "zerver.models.UserProfile",
                "Optional[Dict[str, str]]"
            ],
            "arguments": {
                "self": [],
                "user": [
                    "str",
                    "django.core.files.File",
                    "bytes",
                    "Optional[List[str]]"
                ]
            }
        }
    },
    "apiref-master/apib/tests.py": {},
    "apiref-master/apib/urls.py": {},
    "apiref-master/apib/views.py": {
        "APIHomeView.get": {
            "name": "get",
            "location": 21,
            "return": [
                "int",
                "djmoney.contrib.exchange.models.Rate",
                "bytes",
                "Optional[Dict]",
                "bool",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "APIRefFrame.get": {
            "name": "get",
            "location": 32,
            "return": [
                "Dict[str, Any]",
                "str",
                "dict",
                "bytes",
                "int"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "APISubmitView.post": {
            "name": "post",
            "location": 52,
            "return": [
                "bool",
                "bytes",
                "Optional[str]",
                "dict"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "APISubmitView.dispatch": {
            "name": "dispatch",
            "location": 70,
            "return": [
                "trezor.utils.Writer",
                "Callable",
                "utils.Node",
                "Dict[str, int]"
            ],
            "arguments": {
                "self": []
            }
        },
        "APITokenView.get": {
            "name": "get",
            "location": 78,
            "return": [
                "int",
                "Dict[str, Any]",
                "bool"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "django.core.handlers.wsgi.WSGIRequest"
                ]
            }
        },
        "APITokenView.post": {
            "name": "post",
            "location": 98,
            "return": [
                "Optional[Dict[str, Any]]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest",
                    "str"
                ]
            }
        },
        "MailSenderView.get": {
            "name": "get",
            "location": 114,
            "return": [
                "Dict[str, str]",
                "int",
                "Optional[str]",
                "str"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        },
        "MailSenderView.post": {
            "name": "post",
            "location": 124,
            "return": [
                "int",
                "str",
                "app.models.GameMember",
                "app.models.course.Course",
                "Callable[[list], None]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "apiref-master/apib/__init__.py": {},
    "apiref-master/apib/migrations/0001_initial.py": {},
    "apiref-master/apib/migrations/__init__.py": {},
    "apiref-master/apiref/context_processors.py": {
        "site_common_text": {
            "name": "site_common_text",
            "location": 4,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "request": [
                    "bool",
                    "dict",
                    "django.forms.Form",
                    "django.forms.ModelForm",
                    "django.db.models.Model",
                    "django.http.requesHttpRequest"
                ]
            }
        }
    },
    "apiref-master/apiref/db_secret.py": {},
    "apiref-master/apiref/settings.py": {},
    "apiref-master/apiref/urls.py": {},
    "apiref-master/apiref/wsgi.py": {},
    "apiref-master/apiref/__init__.py": {},
    "apiref-master/setup/admin.py": {},
    "apiref-master/setup/apps.py": {},
    "apiref-master/setup/models.py": {},
    "apiref-master/setup/tests.py": {},
    "apiref-master/setup/urls.py": {},
    "apiref-master/setup/views.py": {
        "InitialSetupView.get": {
            "name": "get",
            "location": 11,
            "return": [
                "int",
                "djmoney.contrib.exchange.models.Rate",
                "bytes",
                "Optional[Dict]",
                "bool",
                "Dict[str, tonga.models.structs.positioning.BasePositioning]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "Iterable[int]",
                    "django.http.HttpRequest"
                ]
            }
        },
        "InitialSetupView.post": {
            "name": "post",
            "location": 15,
            "return": [
                "int",
                "str",
                "app.models.GameMember",
                "app.models.course.Course",
                "Callable[[list], None]",
                "Dict[str, Any]"
            ],
            "arguments": {
                "self": [],
                "request": [
                    "django.http.HttpRequest"
                ]
            }
        }
    },
    "apiref-master/setup/__init__.py": {},
    "apiref-master/setup/migrations/__init__.py": {}
}
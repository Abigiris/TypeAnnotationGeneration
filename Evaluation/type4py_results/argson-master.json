{
    "argson-master/setup.py": {},
    "argson-master/argson/argson.py": {
        "parse_file_and_arguments": {
            "name": "parse_file_and_arguments",
            "location": 15,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {
                "config_file": [
                    "str",
                    "bool",
                    "TextIO"
                ],
                "self_file": [
                    "str",
                    "bool",
                    "TextIO"
                ],
                "defaults_file": [
                    "str",
                    "bool",
                    "TextIO"
                ],
                "working_dir": [
                    "str",
                    "bool",
                    "TextIO"
                ],
                "no_builtins": [
                    "str",
                    "bool",
                    "TextIO"
                ],
                "verbose": [
                    "str",
                    "bool",
                    "TextIO"
                ]
            }
        },
        "parse_config_file": {
            "name": "parse_config_file",
            "location": 32,
            "return": [
                "argparse._ArgumentGroup",
                "argparse.ArgumentParser"
            ],
            "arguments": {
                "config_file": [
                    "str",
                    "tuple"
                ],
                "self_file": [
                    "str",
                    "TextIO",
                    "Optional[str]"
                ],
                "defaults_file": [
                    "str",
                    "TextIO",
                    "Optional[str]"
                ],
                "working_dir": [
                    "str",
                    "bool",
                    "List[str]",
                    "int",
                    "Optional[Dict[str, Dict]]"
                ],
                "no_builtins": [
                    "bool",
                    "str",
                    "Set[str]",
                    "Optional[Dict[str, str]]"
                ],
                "verbose": [
                    "str",
                    "Optional[Union[str, Any]]",
                    "Optional[str]",
                    "Optional[Union[int, str]]"
                ]
            }
        },
        "parse_builtins": {
            "name": "parse_builtins",
            "location": 54,
            "return": [
                "str",
                "int",
                "List[str]"
            ],
            "arguments": {
                "no_builtins": [
                    "bool",
                    "str",
                    "dict",
                    "Dict[str, Any]",
                    "Dict[str, bool]"
                ],
                "default_self_file": [
                    "bool",
                    "str",
                    "Optional[str]",
                    "Optional[Callable]"
                ],
                "default_defaults_file": [
                    "bool",
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "get_argument_parser": {
            "name": "get_argument_parser",
            "location": 77,
            "return": [
                "argparse._SubParsersAction",
                "List[str]"
            ],
            "arguments": {
                "builtin_parser": [
                    "argparse.ArgumentParser",
                    "bool",
                    "str",
                    "argparse._MutuallyExclusiveGroup"
                ],
                "self_info": [
                    "argparse.ArgumentParser",
                    "bool",
                    "str",
                    "argparse._MutuallyExclusiveGroup"
                ],
                "defaults": [
                    "str",
                    "argparse.ArgumentParser",
                    "bool"
                ],
                "load_path": [
                    "str"
                ],
                "config_file": [
                    "str"
                ]
            }
        },
        "load_configuration_json": {
            "name": "load_configuration_json",
            "location": 106,
            "return": [
                "str",
                "bool",
                "int"
            ],
            "arguments": {
                "path": [
                    "List[str]"
                ],
                "json_file": [
                    "str",
                    "list"
                ],
                "verbose": [
                    "bool",
                    "str",
                    "Sequence[str]"
                ],
                "strict": [
                    "bool",
                    "str",
                    "Sequence[str]"
                ]
            }
        }
    },
    "argson-master/argson/__init__.py": {},
    "argson-master/examples/basic_example.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "argson-master/examples/basic_example_without_builtins.py": {
        "main": {
            "name": "main",
            "location": 7,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "argson-master/examples/example-with-defaults.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "argson-master/examples/example-with-self.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        }
    },
    "argson-master/examples/main.py": {},
    "argson-master/examples/verbose_example.py": {
        "main": {
            "name": "main",
            "location": 6,
            "return": [
                ""
            ],
            "arguments": {}
        }
    }
}
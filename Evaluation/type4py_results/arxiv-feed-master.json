{
    "arxiv-feed-master/app.py": {},
    "arxiv-feed-master/rss/config.py": {},
    "arxiv-feed-master/rss/controller.py": {
        "get_xml": {
            "name": "get_xml",
            "location": 17,
            "return": [
                "Dict[str, str]",
                "str",
                "int"
            ],
            "arguments": {
                "archive_id": [
                    "str",
                    "int",
                    "Iterable[str]",
                    "Optional[str]"
                ],
                "version": [
                    "str",
                    "Optional[int]",
                    "int",
                    "Optional[str]",
                    "Optional[List[\"Address\"]]"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/domain.py": {},
    "arxiv-feed-master/rss/factory.py": {
        "create_web_app": {
            "name": "create_web_app",
            "location": 9,
            "return": [
                "flask.Flask"
            ],
            "arguments": {}
        }
    },
    "arxiv-feed-master/rss/index.py": {
        "perform_search": {
            "name": "perform_search",
            "location": 10,
            "return": [
                "int",
                "dict",
                "Optional[str]",
                "List[str]",
                "Dict[str, str]",
                "bool"
            ],
            "arguments": {
                "archive": [
                    "str",
                    "datetime.date",
                    "int",
                    "List[datetime.date]",
                    "Sequence[str]",
                    "bool"
                ],
                "date_time": [
                    "str",
                    "datetime.date",
                    "int",
                    "List[datetime.date]",
                    "Sequence[str]",
                    "bool"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/routes.py": {
        "rss": {
            "name": "rss",
            "location": 11,
            "return": [
                "bool",
                "Dict[str, Any]"
            ],
            "arguments": {
                "archive_id": [
                    "int",
                    "str"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/__init__.py": {},
    "arxiv-feed-master/rss/serializers/atom_1_0.py": {
        "Atom_1_0.get_xml": {
            "name": "get_xml",
            "location": 17,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "scrapy.http.Response",
                    "collector_utilities.type.Response",
                    "requests.Response",
                    "Callable[..., Awaitable[dict]]"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/serializers/atom_extensions.py": {
        "ArxivExtension.__init__": {
            "name": "__init__",
            "location": 13,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "ArxivExtension.extend_atom": {
            "name": "extend_atom",
            "location": 18,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "atom_feed": [
                    "int",
                    "str",
                    "Iterable['Context']",
                    "dict",
                    "bool"
                ]
            }
        },
        "ArxivExtension.extend_rss": {
            "name": "extend_rss",
            "location": 36,
            "return": [
                "str",
                "Dict[str, Dict[str, int]]",
                "Dict[str, Any]",
                "base.ConfigOptions",
                "dict",
                "set",
                "bool"
            ],
            "arguments": {
                "rss_feed": [
                    "feedgen.feed.FeedGenerator",
                    "lxml.etree.Element",
                    "T",
                    "int",
                    "float"
                ]
            }
        },
        "ArxivExtension.extend_ns": {
            "name": "extend_ns",
            "location": 54,
            "return": [
                "int",
                "float"
            ],
            "arguments": {}
        },
        "ArxivEntryExtension.__init__": {
            "name": "__init__",
            "location": 70,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "ArxivEntryExtension.extend_atom": {
            "name": "extend_atom",
            "location": 78,
            "return": [
                "int",
                "Callable",
                "str"
            ],
            "arguments": {
                "self": [],
                "entry": [
                    "Optional[BaseException]",
                    "List[str]",
                    "dict"
                ]
            }
        },
        "ArxivEntryExtension.extend_rss": {
            "name": "extend_rss",
            "location": 114,
            "return": [
                "Iterable[T]",
                "str",
                "Callable[[T], bool]"
            ],
            "arguments": {
                "entry": [
                    "feedgen.entry.FeedEntry",
                    "int",
                    "Optional"
                ]
            }
        },
        "ArxivEntryExtension.comment": {
            "name": "comment",
            "location": 131,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "bool",
                    "Optional[str]",
                    "int"
                ]
            }
        },
        "ArxivEntryExtension.primary_category": {
            "name": "primary_category",
            "location": 143,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str"
                ]
            }
        },
        "ArxivEntryExtension.journal_ref": {
            "name": "journal_ref",
            "location": 155,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "text": [
                    "str",
                    "Tuple[int, int]",
                    "int"
                ]
            }
        },
        "ArxivEntryExtension.doi": {
            "name": "doi",
            "location": 167,
            "return": [
                "None"
            ],
            "arguments": {
                "self": [],
                "list": [
                    "int",
                    "Type[\"SerializationDialect\"]",
                    "str"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/serializers/rss_2_0.py": {
        "Content.get_namespace": {
            "name": "get_namespace",
            "location": 22,
            "return": [
                "str",
                "Optional[Dict[str, Any]]",
                "Optional[bool]"
            ],
            "arguments": {}
        },
        "Taxonomy.get_namespace": {
            "name": "get_namespace",
            "location": 44,
            "return": [
                "dict",
                "bytes",
                "bool"
            ],
            "arguments": {}
        },
        "Syndication.get_namespace": {
            "name": "get_namespace",
            "location": 66,
            "return": [
                "dict",
                "bytes",
                "bool"
            ],
            "arguments": {}
        },
        "Admin.get_namespace": {
            "name": "get_namespace",
            "location": 88,
            "return": [
                "str",
                "bool"
            ],
            "arguments": {}
        },
        "RSS_2_0.get_xml": {
            "name": "get_xml",
            "location": 105,
            "return": [
                "bool",
                "str"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "scrapy.http.Response",
                    "collector_utilities.type.Response",
                    "requests.Response",
                    "Callable[..., Awaitable[dict]]"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/serializers/serializer.py": {
        "Serializer.__init__": {
            "name": "__init__",
            "location": 11,
            "return": [
                ""
            ],
            "arguments": {
                "self": []
            }
        },
        "Serializer.get_xml": {
            "name": "get_xml",
            "location": 16,
            "return": [
                "typing.Tuple[builtins.str, builtins.int]"
            ],
            "arguments": {
                "self": [],
                "response": [
                    "dict",
                    "aiohttp.web.Response",
                    "Dict[str, str]"
                ]
            }
        }
    },
    "arxiv-feed-master/rss/serializers/__init__.py": {},
    "arxiv-feed-master/tests/test_typings.py": {
        "MyPyTest.test_run_mypy_module": {
            "name": "test_run_mypy_module",
            "location": 14,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyPyTest.test_run_mypy_tests": {
            "name": "test_run_mypy_tests",
            "location": 21,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        },
        "MyPyTest.__init__": {
            "name": "__init__",
            "location": 48,
            "return": [
                "None"
            ],
            "arguments": {
                "self": []
            }
        }
    },
    "arxiv-feed-master/tests/__init__.py": {}
}
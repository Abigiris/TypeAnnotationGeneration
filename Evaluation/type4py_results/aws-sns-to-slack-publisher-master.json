{
    "aws-sns-to-slack-publisher-master/handlers/aws_sns_to_slack_publisher.py": {
        "_check_slack_channel_exists": {
            "name": "_check_slack_channel_exists",
            "location": 69,
            "return": [
                "str",
                "List[str]",
                "dict",
                "Iterable[str]",
                "bool",
                "List[Mapping[str, Any]]"
            ],
            "arguments": {
                "token": [
                    "str",
                    "Optional[str]"
                ],
                "channel": [
                    "str"
                ]
            }
        },
        "_get_message_from_event": {
            "name": "_get_message_from_event",
            "location": 93,
            "return": [
                "str",
                "Callable[[], str]",
                "int",
                "[dict]",
                "bool"
            ],
            "arguments": {
                "event": [
                    "dict",
                    "str",
                    "Optional[dict]"
                ]
            }
        },
        "_publish_slack_message": {
            "name": "_publish_slack_message",
            "location": 99,
            "return": [
                "List[str]",
                "bool",
                "List[Mapping[str, Any]]",
                "Tuple[type]",
                "str"
            ],
            "arguments": {
                "token": [
                    "str",
                    "List[str]"
                ],
                "channel": [
                    "str",
                    "Tuple[int, int]",
                    "list",
                    "int"
                ],
                "message": [
                    "str",
                    "dict",
                    "int",
                    "Mapping[str, str]"
                ]
            }
        },
        "_publish_sns_message": {
            "name": "_publish_sns_message",
            "location": 119,
            "return": [
                "List[str]",
                "bool",
                "List[Mapping[str, Any]]",
                "Tuple[type]",
                "str"
            ],
            "arguments": {
                "sns_topic_arn": [
                    "str",
                    "int"
                ],
                "message": [
                    "dict",
                    "Dict[str, str]",
                    "Union[int, float]",
                    "Optional[logging.Logger]"
                ]
            }
        },
        "_sanitize_slack_channel_name": {
            "name": "_sanitize_slack_channel_name",
            "location": 135,
            "return": [
                "str"
            ],
            "arguments": {
                "channel_name": [
                    "str",
                    "Set[str]",
                    "List[str]"
                ]
            }
        },
        "_validate_slack_message_schema": {
            "name": "_validate_slack_message_schema",
            "location": 145,
            "return": [
                "Union[tuple, list]",
                "List[int]",
                "Dict[str, Any]",
                "str"
            ],
            "arguments": {
                "message": [
                    "dict",
                    "str",
                    "bytes",
                    "Callable[[bytes], bytes]"
                ],
                "schema": [
                    "dict",
                    "str",
                    "bytes",
                    "Callable[[bytes], bytes]"
                ]
            }
        },
        "handler": {
            "name": "handler",
            "location": 156,
            "return": [
                "bool",
                "str",
                "dict"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]"
                ],
                "context": [
                    "str"
                ]
            }
        },
        "SlackApiError.__init__": {
            "name": "__init__",
            "location": 40,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "response": [
                    "str",
                    "dict",
                    "Sequence[str]"
                ]
            }
        },
        "SlackInvalidChannelNameError.__init__": {
            "name": "__init__",
            "location": 59,
            "return": [
                ""
            ],
            "arguments": {
                "self": [],
                "channel": [
                    "str"
                ]
            }
        }
    },
    "aws-sns-to-slack-publisher-master/tests/conftest.py": {},
    "aws-sns-to-slack-publisher-master/tests/__init__.py": {},
    "aws-sns-to-slack-publisher-master/tests/integration/__init__.py": {},
    "aws-sns-to-slack-publisher-master/tests/integration/handlers/test_aws_sns_to_slack_publisher.py": {
        "event": {
            "name": "event",
            "location": 21,
            "return": [
                "Callable[[Any], bool]",
                "dict",
                "float",
                "List[float]",
                "str"
            ],
            "arguments": {
                "event_file": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "cfn_stack_name": {
            "name": "cfn_stack_name",
            "location": 28,
            "return": [
                "str",
                "Dict[str, Any]"
            ],
            "arguments": {}
        },
        "lambda_client": {
            "name": "lambda_client",
            "location": 36,
            "return": [
                "str",
                "Callable"
            ],
            "arguments": {}
        },
        "lambda_function": {
            "name": "lambda_function",
            "location": 42,
            "return": [
                "Dict[str, str]",
                "List[Callable]"
            ],
            "arguments": {
                "cfn_stack_name": [
                    "str"
                ]
            }
        },
        "test_handler": {
            "name": "test_handler",
            "location": 47,
            "return": [
                ""
            ],
            "arguments": {
                "lambda_client": [
                    "str",
                    "bool"
                ],
                "lambda_function": [
                    "str",
                    "bool"
                ],
                "event": [
                    "str",
                    "bool"
                ]
            }
        }
    },
    "aws-sns-to-slack-publisher-master/tests/integration/handlers/__init__.py": {},
    "aws-sns-to-slack-publisher-master/tests/unit/__init__.py": {},
    "aws-sns-to-slack-publisher-master/tests/unit/handlers/test_aws_sns_to_slack_publisher.py": {
        "event": {
            "name": "event",
            "location": 31,
            "return": [
                "Callable[[Any], bool]",
                "dict",
                "float",
                "List[float]",
                "str"
            ],
            "arguments": {
                "event_file": [
                    "str",
                    "Optional[str]"
                ]
            }
        },
        "slack_message": {
            "name": "slack_message",
            "location": 38,
            "return": [
                "str",
                "List[str]",
                "bytes",
                "bool"
            ],
            "arguments": {
                "event": [
                    "Dict[str, Any]",
                    "str",
                    "dict"
                ]
            }
        },
        "slack_channel": {
            "name": "slack_channel",
            "location": 44,
            "return": [
                "bool",
                "str",
                "int"
            ],
            "arguments": {
                "channel": [
                    "float",
                    "bool",
                    "str"
                ]
            }
        },
        "slack_message_schema": {
            "name": "slack_message_schema",
            "location": 49,
            "return": [
                "List[Dict[str, Any]]",
                "str"
            ],
            "arguments": {}
        },
        "slack_response": {
            "name": "slack_response",
            "location": 56,
            "return": [
                "dict",
                "str",
                "Callable",
                "Callable[[None, None], bool]"
            ],
            "arguments": {}
        },
        "sns_message": {
            "name": "sns_message",
            "location": 62,
            "return": [
                "List[str]",
                "Dict[str, Any]",
                "Dict[str, dict]",
                "str",
                "bool"
            ],
            "arguments": {
                "slack_response": [
                    "List[str]",
                    "float"
                ]
            }
        },
        "sns_client": {
            "name": "sns_client",
            "location": 68,
            "return": [
                "str",
                "Callable"
            ],
            "arguments": {}
        },
        "test__check_slack_channel_exists": {
            "name": "test__check_slack_channel_exists",
            "location": 74,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test__get_message_from_event": {
            "name": "test__get_message_from_event",
            "location": 79,
            "return": [
                ""
            ],
            "arguments": {
                "event": [
                    "int"
                ]
            }
        },
        "test__publish_slack_message": {
            "name": "test__publish_slack_message",
            "location": 88,
            "return": [
                ""
            ],
            "arguments": {
                "slack_channel": [],
                "slack_message": []
            }
        },
        "test__publish_sns_message": {
            "name": "test__publish_sns_message",
            "location": 95,
            "return": [
                ""
            ],
            "arguments": {
                "sns_client": [
                    "str"
                ],
                "sns_message": [],
                "sns_topic_name": []
            }
        },
        "test__sanitize_slack_channel_name_clean": {
            "name": "test__sanitize_slack_channel_name_clean",
            "location": 107,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test__sanitize_slack_channel_name_dirty": {
            "name": "test__sanitize_slack_channel_name_dirty",
            "location": 114,
            "return": [
                ""
            ],
            "arguments": {}
        },
        "test__validate_slack_message_schema": {
            "name": "test__validate_slack_message_schema",
            "location": 121,
            "return": [
                ""
            ],
            "arguments": {
                "slack_message": [
                    "str"
                ],
                "slack_message_schema": [
                    "str"
                ]
            }
        },
        "test__validate_slack_message_schema_has_attachment": {
            "name": "test__validate_slack_message_schema_has_attachment",
            "location": 127,
            "return": [
                ""
            ],
            "arguments": {
                "slack_message": [
                    "str"
                ],
                "slack_message_schema": [
                    "str"
                ]
            }
        },
        "test__validate_slack_message_schema_has_attachment_bad_type": {
            "name": "test__validate_slack_message_schema_has_attachment_bad_type",
            "location": 133,
            "return": [
                ""
            ],
            "arguments": {
                "slack_message": [
                    "str",
                    "Callable"
                ],
                "slack_message_schema": [
                    "str",
                    "Callable"
                ]
            }
        },
        "test__validate_slack_message_schema_has_attachment_missing_text_property": {
            "name": "test__validate_slack_message_schema_has_attachment_missing_text_property",
            "location": 146,
            "return": [
                ""
            ],
            "arguments": {
                "slack_message": [
                    "str",
                    "Callable"
                ],
                "slack_message_schema": [
                    "str",
                    "Callable"
                ]
            }
        },
        "test__validate_slack_message_schema_has_attachment_has_fields": {
            "name": "test__validate_slack_message_schema_has_attachment_has_fields",
            "location": 159,
            "return": [
                ""
            ],
            "arguments": {
                "slack_message": [
                    "str"
                ],
                "slack_message_schema": [
                    "str"
                ]
            }
        },
        "test__validate_slack_message_schema_has_attachment_has_fields_missing_property": {
            "name": "test__validate_slack_message_schema_has_attachment_has_fields_missing_property",
            "location": 175,
            "return": [
                ""
            ],
            "arguments": {
                "slack_message": [
                    "str"
                ],
                "slack_message_schema": [
                    "str"
                ]
            }
        }
    },
    "aws-sns-to-slack-publisher-master/tests/unit/handlers/__init__.py": {}
}
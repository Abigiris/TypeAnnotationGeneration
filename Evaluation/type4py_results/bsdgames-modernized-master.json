{
    "bsdgames-modernized-master/number/setup.py": {},
    "bsdgames-modernized-master/number/__init__.py": {},
    "bsdgames-modernized-master/number/bsdnumber/converter.py": {
        "number_to_string": {
            "name": "number_to_string",
            "location": 53,
            "return": [
                "Callable[..., None]",
                "List[Union[\"PipeChain\", str]]",
                "Sequence",
                "Match",
                "str"
            ],
            "arguments": {
                "i": [
                    "int",
                    "str",
                    "Sequence[int]",
                    "Union[float, int]",
                    "List[int]"
                ]
            }
        },
        "_check_fraction": {
            "name": "_check_fraction",
            "location": 81,
            "return": [
                "int",
                "Optional[Dict[str, int]]",
                "List[List[int]]",
                "str",
                "bool"
            ],
            "arguments": {
                "num": [
                    "int"
                ]
            }
        },
        "_process_small_number": {
            "name": "_process_small_number",
            "location": 84,
            "return": [
                "str",
                "List[int]",
                "List[dict]",
                "int"
            ],
            "arguments": {
                "i": [
                    "int",
                    "float",
                    "Callable[[int], str]",
                    "list"
                ]
            }
        },
        "_process_large_number": {
            "name": "_process_large_number",
            "location": 103,
            "return": [
                "str",
                "int",
                "bool",
                "List[Tuple[str, str]]"
            ],
            "arguments": {
                "num": [
                    "int",
                    "Optional[int]",
                    "Mapping[str, Tuple[float, float, float]]",
                    "Optional[float]"
                ]
            }
        },
        "_process_one_part": {
            "name": "_process_one_part",
            "location": 131,
            "return": [
                "str",
                "Optional[str]"
            ],
            "arguments": {
                "i_int": [
                    "int"
                ]
            }
        },
        "_process_two_parts": {
            "name": "_process_two_parts",
            "location": 144,
            "return": [
                "Optional[int]",
                "bool"
            ],
            "arguments": {
                "i_int": [
                    "int"
                ]
            }
        },
        "_process_three_parts": {
            "name": "_process_three_parts",
            "location": 167,
            "return": [
                "str",
                "int",
                "Set[str]",
                "bool"
            ],
            "arguments": {
                "i_int": [
                    "int",
                    "List[str]",
                    "Tuple[int, int]"
                ]
            }
        }
    },
    "bsdgames-modernized-master/number/bsdnumber/__init__.py": {},
    "bsdgames-modernized-master/number/tests/number_test.py": {
        "test_error_invalid": {
            "name": "test_error_invalid",
            "location": 5,
            "return": [],
            "arguments": {}
        },
        "test_zero": {
            "name": "test_zero",
            "location": 10,
            "return": [],
            "arguments": {}
        },
        "test_one_part": {
            "name": "test_one_part",
            "location": 14,
            "return": [],
            "arguments": {}
        },
        "test_two_parts_even": {
            "name": "test_two_parts_even",
            "location": 18,
            "return": [],
            "arguments": {}
        },
        "test_two_parts_both": {
            "name": "test_two_parts_both",
            "location": 22,
            "return": [],
            "arguments": {}
        },
        "test_three_parts_even": {
            "name": "test_three_parts_even",
            "location": 26,
            "return": [],
            "arguments": {}
        },
        "test_three_parts_last": {
            "name": "test_three_parts_last",
            "location": 30,
            "return": [],
            "arguments": {}
        },
        "test_three_parts_all": {
            "name": "test_three_parts_all",
            "location": 34,
            "return": [],
            "arguments": {}
        },
        "test_negative": {
            "name": "test_negative",
            "location": 38,
            "return": [],
            "arguments": {}
        },
        "test_string": {
            "name": "test_string",
            "location": 42,
            "return": [],
            "arguments": {}
        },
        "test_large_number_even": {
            "name": "test_large_number_even",
            "location": 46,
            "return": [],
            "arguments": {}
        },
        "test_large_number": {
            "name": "test_large_number",
            "location": 50,
            "return": [],
            "arguments": {}
        }
    }
}